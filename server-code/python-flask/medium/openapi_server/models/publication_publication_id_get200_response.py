from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class PublicationPublicationIdGet200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, creator=None, description=None, editors=None, facebook_pagename=None, followers=None, id=None, instagram_username=None, name=None, slug=None, tagline=None, tags=None, twitter_username=None, url=None):  # noqa: E501
        """PublicationPublicationIdGet200Response - a model defined in OpenAPI

        :param creator: The creator of this PublicationPublicationIdGet200Response.  # noqa: E501
        :type creator: str
        :param description: The description of this PublicationPublicationIdGet200Response.  # noqa: E501
        :type description: str
        :param editors: The editors of this PublicationPublicationIdGet200Response.  # noqa: E501
        :type editors: List[str]
        :param facebook_pagename: The facebook_pagename of this PublicationPublicationIdGet200Response.  # noqa: E501
        :type facebook_pagename: str
        :param followers: The followers of this PublicationPublicationIdGet200Response.  # noqa: E501
        :type followers: int
        :param id: The id of this PublicationPublicationIdGet200Response.  # noqa: E501
        :type id: str
        :param instagram_username: The instagram_username of this PublicationPublicationIdGet200Response.  # noqa: E501
        :type instagram_username: str
        :param name: The name of this PublicationPublicationIdGet200Response.  # noqa: E501
        :type name: str
        :param slug: The slug of this PublicationPublicationIdGet200Response.  # noqa: E501
        :type slug: str
        :param tagline: The tagline of this PublicationPublicationIdGet200Response.  # noqa: E501
        :type tagline: str
        :param tags: The tags of this PublicationPublicationIdGet200Response.  # noqa: E501
        :type tags: List[str]
        :param twitter_username: The twitter_username of this PublicationPublicationIdGet200Response.  # noqa: E501
        :type twitter_username: str
        :param url: The url of this PublicationPublicationIdGet200Response.  # noqa: E501
        :type url: str
        """
        self.openapi_types = {
            'creator': str,
            'description': str,
            'editors': List[str],
            'facebook_pagename': str,
            'followers': int,
            'id': str,
            'instagram_username': str,
            'name': str,
            'slug': str,
            'tagline': str,
            'tags': List[str],
            'twitter_username': str,
            'url': str
        }

        self.attribute_map = {
            'creator': 'creator',
            'description': 'description',
            'editors': 'editors',
            'facebook_pagename': 'facebook_pagename',
            'followers': 'followers',
            'id': 'id',
            'instagram_username': 'instagram_username',
            'name': 'name',
            'slug': 'slug',
            'tagline': 'tagline',
            'tags': 'tags',
            'twitter_username': 'twitter_username',
            'url': 'url'
        }

        self._creator = creator
        self._description = description
        self._editors = editors
        self._facebook_pagename = facebook_pagename
        self._followers = followers
        self._id = id
        self._instagram_username = instagram_username
        self._name = name
        self._slug = slug
        self._tagline = tagline
        self._tags = tags
        self._twitter_username = twitter_username
        self._url = url

    @classmethod
    def from_dict(cls, dikt) -> 'PublicationPublicationIdGet200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The _publication__publication_id__get_200_response of this PublicationPublicationIdGet200Response.  # noqa: E501
        :rtype: PublicationPublicationIdGet200Response
        """
        return util.deserialize_model(dikt, cls)

    @property
    def creator(self) -> str:
        """Gets the creator of this PublicationPublicationIdGet200Response.


        :return: The creator of this PublicationPublicationIdGet200Response.
        :rtype: str
        """
        return self._creator

    @creator.setter
    def creator(self, creator: str):
        """Sets the creator of this PublicationPublicationIdGet200Response.


        :param creator: The creator of this PublicationPublicationIdGet200Response.
        :type creator: str
        """

        self._creator = creator

    @property
    def description(self) -> str:
        """Gets the description of this PublicationPublicationIdGet200Response.


        :return: The description of this PublicationPublicationIdGet200Response.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this PublicationPublicationIdGet200Response.


        :param description: The description of this PublicationPublicationIdGet200Response.
        :type description: str
        """

        self._description = description

    @property
    def editors(self) -> List[str]:
        """Gets the editors of this PublicationPublicationIdGet200Response.


        :return: The editors of this PublicationPublicationIdGet200Response.
        :rtype: List[str]
        """
        return self._editors

    @editors.setter
    def editors(self, editors: List[str]):
        """Sets the editors of this PublicationPublicationIdGet200Response.


        :param editors: The editors of this PublicationPublicationIdGet200Response.
        :type editors: List[str]
        """

        self._editors = editors

    @property
    def facebook_pagename(self) -> str:
        """Gets the facebook_pagename of this PublicationPublicationIdGet200Response.


        :return: The facebook_pagename of this PublicationPublicationIdGet200Response.
        :rtype: str
        """
        return self._facebook_pagename

    @facebook_pagename.setter
    def facebook_pagename(self, facebook_pagename: str):
        """Sets the facebook_pagename of this PublicationPublicationIdGet200Response.


        :param facebook_pagename: The facebook_pagename of this PublicationPublicationIdGet200Response.
        :type facebook_pagename: str
        """

        self._facebook_pagename = facebook_pagename

    @property
    def followers(self) -> int:
        """Gets the followers of this PublicationPublicationIdGet200Response.


        :return: The followers of this PublicationPublicationIdGet200Response.
        :rtype: int
        """
        return self._followers

    @followers.setter
    def followers(self, followers: int):
        """Sets the followers of this PublicationPublicationIdGet200Response.


        :param followers: The followers of this PublicationPublicationIdGet200Response.
        :type followers: int
        """

        self._followers = followers

    @property
    def id(self) -> str:
        """Gets the id of this PublicationPublicationIdGet200Response.


        :return: The id of this PublicationPublicationIdGet200Response.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this PublicationPublicationIdGet200Response.


        :param id: The id of this PublicationPublicationIdGet200Response.
        :type id: str
        """

        self._id = id

    @property
    def instagram_username(self) -> str:
        """Gets the instagram_username of this PublicationPublicationIdGet200Response.


        :return: The instagram_username of this PublicationPublicationIdGet200Response.
        :rtype: str
        """
        return self._instagram_username

    @instagram_username.setter
    def instagram_username(self, instagram_username: str):
        """Sets the instagram_username of this PublicationPublicationIdGet200Response.


        :param instagram_username: The instagram_username of this PublicationPublicationIdGet200Response.
        :type instagram_username: str
        """

        self._instagram_username = instagram_username

    @property
    def name(self) -> str:
        """Gets the name of this PublicationPublicationIdGet200Response.


        :return: The name of this PublicationPublicationIdGet200Response.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this PublicationPublicationIdGet200Response.


        :param name: The name of this PublicationPublicationIdGet200Response.
        :type name: str
        """

        self._name = name

    @property
    def slug(self) -> str:
        """Gets the slug of this PublicationPublicationIdGet200Response.


        :return: The slug of this PublicationPublicationIdGet200Response.
        :rtype: str
        """
        return self._slug

    @slug.setter
    def slug(self, slug: str):
        """Sets the slug of this PublicationPublicationIdGet200Response.


        :param slug: The slug of this PublicationPublicationIdGet200Response.
        :type slug: str
        """

        self._slug = slug

    @property
    def tagline(self) -> str:
        """Gets the tagline of this PublicationPublicationIdGet200Response.


        :return: The tagline of this PublicationPublicationIdGet200Response.
        :rtype: str
        """
        return self._tagline

    @tagline.setter
    def tagline(self, tagline: str):
        """Sets the tagline of this PublicationPublicationIdGet200Response.


        :param tagline: The tagline of this PublicationPublicationIdGet200Response.
        :type tagline: str
        """

        self._tagline = tagline

    @property
    def tags(self) -> List[str]:
        """Gets the tags of this PublicationPublicationIdGet200Response.


        :return: The tags of this PublicationPublicationIdGet200Response.
        :rtype: List[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags: List[str]):
        """Sets the tags of this PublicationPublicationIdGet200Response.


        :param tags: The tags of this PublicationPublicationIdGet200Response.
        :type tags: List[str]
        """

        self._tags = tags

    @property
    def twitter_username(self) -> str:
        """Gets the twitter_username of this PublicationPublicationIdGet200Response.


        :return: The twitter_username of this PublicationPublicationIdGet200Response.
        :rtype: str
        """
        return self._twitter_username

    @twitter_username.setter
    def twitter_username(self, twitter_username: str):
        """Sets the twitter_username of this PublicationPublicationIdGet200Response.


        :param twitter_username: The twitter_username of this PublicationPublicationIdGet200Response.
        :type twitter_username: str
        """

        self._twitter_username = twitter_username

    @property
    def url(self) -> str:
        """Gets the url of this PublicationPublicationIdGet200Response.


        :return: The url of this PublicationPublicationIdGet200Response.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url: str):
        """Sets the url of this PublicationPublicationIdGet200Response.


        :param url: The url of this PublicationPublicationIdGet200Response.
        :type url: str
        """

        self._url = url
