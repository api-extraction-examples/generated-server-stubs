from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class ArticleArticleIdMarkdownGet200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, markdown=None):  # noqa: E501
        """ArticleArticleIdMarkdownGet200Response - a model defined in OpenAPI

        :param markdown: The markdown of this ArticleArticleIdMarkdownGet200Response.  # noqa: E501
        :type markdown: str
        """
        self.openapi_types = {
            'markdown': str
        }

        self.attribute_map = {
            'markdown': 'markdown'
        }

        self._markdown = markdown

    @classmethod
    def from_dict(cls, dikt) -> 'ArticleArticleIdMarkdownGet200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The _article__article_id__markdown_get_200_response of this ArticleArticleIdMarkdownGet200Response.  # noqa: E501
        :rtype: ArticleArticleIdMarkdownGet200Response
        """
        return util.deserialize_model(dikt, cls)

    @property
    def markdown(self) -> str:
        """Gets the markdown of this ArticleArticleIdMarkdownGet200Response.


        :return: The markdown of this ArticleArticleIdMarkdownGet200Response.
        :rtype: str
        """
        return self._markdown

    @markdown.setter
    def markdown(self, markdown: str):
        """Sets the markdown of this ArticleArticleIdMarkdownGet200Response.


        :param markdown: The markdown of this ArticleArticleIdMarkdownGet200Response.
        :type markdown: str
        """

        self._markdown = markdown
