from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class ArticleArticleIdFansGet200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, article_id=None, count=None, voters=None):  # noqa: E501
        """ArticleArticleIdFansGet200Response - a model defined in OpenAPI

        :param article_id: The article_id of this ArticleArticleIdFansGet200Response.  # noqa: E501
        :type article_id: str
        :param count: The count of this ArticleArticleIdFansGet200Response.  # noqa: E501
        :type count: int
        :param voters: The voters of this ArticleArticleIdFansGet200Response.  # noqa: E501
        :type voters: List[str]
        """
        self.openapi_types = {
            'article_id': str,
            'count': int,
            'voters': List[str]
        }

        self.attribute_map = {
            'article_id': 'article_id',
            'count': 'count',
            'voters': 'voters'
        }

        self._article_id = article_id
        self._count = count
        self._voters = voters

    @classmethod
    def from_dict(cls, dikt) -> 'ArticleArticleIdFansGet200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The _article__article_id__fans_get_200_response of this ArticleArticleIdFansGet200Response.  # noqa: E501
        :rtype: ArticleArticleIdFansGet200Response
        """
        return util.deserialize_model(dikt, cls)

    @property
    def article_id(self) -> str:
        """Gets the article_id of this ArticleArticleIdFansGet200Response.


        :return: The article_id of this ArticleArticleIdFansGet200Response.
        :rtype: str
        """
        return self._article_id

    @article_id.setter
    def article_id(self, article_id: str):
        """Sets the article_id of this ArticleArticleIdFansGet200Response.


        :param article_id: The article_id of this ArticleArticleIdFansGet200Response.
        :type article_id: str
        """

        self._article_id = article_id

    @property
    def count(self) -> int:
        """Gets the count of this ArticleArticleIdFansGet200Response.


        :return: The count of this ArticleArticleIdFansGet200Response.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count: int):
        """Sets the count of this ArticleArticleIdFansGet200Response.


        :param count: The count of this ArticleArticleIdFansGet200Response.
        :type count: int
        """

        self._count = count

    @property
    def voters(self) -> List[str]:
        """Gets the voters of this ArticleArticleIdFansGet200Response.


        :return: The voters of this ArticleArticleIdFansGet200Response.
        :rtype: List[str]
        """
        return self._voters

    @voters.setter
    def voters(self, voters: List[str]):
        """Sets the voters of this ArticleArticleIdFansGet200Response.


        :param voters: The voters of this ArticleArticleIdFansGet200Response.
        :type voters: List[str]
        """

        self._voters = voters
