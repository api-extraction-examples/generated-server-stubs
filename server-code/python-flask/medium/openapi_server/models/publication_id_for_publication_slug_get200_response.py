from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class PublicationIdForPublicationSlugGet200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, publication_id=None, publication_slug=None):  # noqa: E501
        """PublicationIdForPublicationSlugGet200Response - a model defined in OpenAPI

        :param publication_id: The publication_id of this PublicationIdForPublicationSlugGet200Response.  # noqa: E501
        :type publication_id: str
        :param publication_slug: The publication_slug of this PublicationIdForPublicationSlugGet200Response.  # noqa: E501
        :type publication_slug: str
        """
        self.openapi_types = {
            'publication_id': str,
            'publication_slug': str
        }

        self.attribute_map = {
            'publication_id': 'publication_id',
            'publication_slug': 'publication_slug'
        }

        self._publication_id = publication_id
        self._publication_slug = publication_slug

    @classmethod
    def from_dict(cls, dikt) -> 'PublicationIdForPublicationSlugGet200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The _publication_id_for__publication_slug__get_200_response of this PublicationIdForPublicationSlugGet200Response.  # noqa: E501
        :rtype: PublicationIdForPublicationSlugGet200Response
        """
        return util.deserialize_model(dikt, cls)

    @property
    def publication_id(self) -> str:
        """Gets the publication_id of this PublicationIdForPublicationSlugGet200Response.

        Unique hash id of the publication.  # noqa: E501

        :return: The publication_id of this PublicationIdForPublicationSlugGet200Response.
        :rtype: str
        """
        return self._publication_id

    @publication_id.setter
    def publication_id(self, publication_id: str):
        """Sets the publication_id of this PublicationIdForPublicationSlugGet200Response.

        Unique hash id of the publication.  # noqa: E501

        :param publication_id: The publication_id of this PublicationIdForPublicationSlugGet200Response.
        :type publication_id: str
        """

        self._publication_id = publication_id

    @property
    def publication_slug(self) -> str:
        """Gets the publication_slug of this PublicationIdForPublicationSlugGet200Response.

        Same publication slug that you passed in the path parameters.  # noqa: E501

        :return: The publication_slug of this PublicationIdForPublicationSlugGet200Response.
        :rtype: str
        """
        return self._publication_slug

    @publication_slug.setter
    def publication_slug(self, publication_slug: str):
        """Sets the publication_slug of this PublicationIdForPublicationSlugGet200Response.

        Same publication slug that you passed in the path parameters.  # noqa: E501

        :param publication_slug: The publication_slug of this PublicationIdForPublicationSlugGet200Response.
        :type publication_slug: str
        """

        self._publication_slug = publication_slug
