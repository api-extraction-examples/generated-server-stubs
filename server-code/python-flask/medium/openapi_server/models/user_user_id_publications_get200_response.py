from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class UserUserIdPublicationsGet200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, publications=None, user_id=None):  # noqa: E501
        """UserUserIdPublicationsGet200Response - a model defined in OpenAPI

        :param publications: The publications of this UserUserIdPublicationsGet200Response.  # noqa: E501
        :type publications: List[str]
        :param user_id: The user_id of this UserUserIdPublicationsGet200Response.  # noqa: E501
        :type user_id: str
        """
        self.openapi_types = {
            'publications': List[str],
            'user_id': str
        }

        self.attribute_map = {
            'publications': 'publications',
            'user_id': 'user_id'
        }

        self._publications = publications
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt) -> 'UserUserIdPublicationsGet200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The _user__user_id__publications_get_200_response of this UserUserIdPublicationsGet200Response.  # noqa: E501
        :rtype: UserUserIdPublicationsGet200Response
        """
        return util.deserialize_model(dikt, cls)

    @property
    def publications(self) -> List[str]:
        """Gets the publications of this UserUserIdPublicationsGet200Response.


        :return: The publications of this UserUserIdPublicationsGet200Response.
        :rtype: List[str]
        """
        return self._publications

    @publications.setter
    def publications(self, publications: List[str]):
        """Sets the publications of this UserUserIdPublicationsGet200Response.


        :param publications: The publications of this UserUserIdPublicationsGet200Response.
        :type publications: List[str]
        """

        self._publications = publications

    @property
    def user_id(self) -> str:
        """Gets the user_id of this UserUserIdPublicationsGet200Response.


        :return: The user_id of this UserUserIdPublicationsGet200Response.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id: str):
        """Sets the user_id of this UserUserIdPublicationsGet200Response.


        :param user_id: The user_id of this UserUserIdPublicationsGet200Response.
        :type user_id: str
        """

        self._user_id = user_id
