from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class PublicationPublicationIdNewsletterGet200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, creator_id=None, description=None, id=None, image=None, name=None, slug=None, subscribers=None):  # noqa: E501
        """PublicationPublicationIdNewsletterGet200Response - a model defined in OpenAPI

        :param creator_id: The creator_id of this PublicationPublicationIdNewsletterGet200Response.  # noqa: E501
        :type creator_id: str
        :param description: The description of this PublicationPublicationIdNewsletterGet200Response.  # noqa: E501
        :type description: str
        :param id: The id of this PublicationPublicationIdNewsletterGet200Response.  # noqa: E501
        :type id: str
        :param image: The image of this PublicationPublicationIdNewsletterGet200Response.  # noqa: E501
        :type image: str
        :param name: The name of this PublicationPublicationIdNewsletterGet200Response.  # noqa: E501
        :type name: str
        :param slug: The slug of this PublicationPublicationIdNewsletterGet200Response.  # noqa: E501
        :type slug: str
        :param subscribers: The subscribers of this PublicationPublicationIdNewsletterGet200Response.  # noqa: E501
        :type subscribers: int
        """
        self.openapi_types = {
            'creator_id': str,
            'description': str,
            'id': str,
            'image': str,
            'name': str,
            'slug': str,
            'subscribers': int
        }

        self.attribute_map = {
            'creator_id': 'creator_id',
            'description': 'description',
            'id': 'id',
            'image': 'image',
            'name': 'name',
            'slug': 'slug',
            'subscribers': 'subscribers'
        }

        self._creator_id = creator_id
        self._description = description
        self._id = id
        self._image = image
        self._name = name
        self._slug = slug
        self._subscribers = subscribers

    @classmethod
    def from_dict(cls, dikt) -> 'PublicationPublicationIdNewsletterGet200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The _publication__publication_id__newsletter_get_200_response of this PublicationPublicationIdNewsletterGet200Response.  # noqa: E501
        :rtype: PublicationPublicationIdNewsletterGet200Response
        """
        return util.deserialize_model(dikt, cls)

    @property
    def creator_id(self) -> str:
        """Gets the creator_id of this PublicationPublicationIdNewsletterGet200Response.


        :return: The creator_id of this PublicationPublicationIdNewsletterGet200Response.
        :rtype: str
        """
        return self._creator_id

    @creator_id.setter
    def creator_id(self, creator_id: str):
        """Sets the creator_id of this PublicationPublicationIdNewsletterGet200Response.


        :param creator_id: The creator_id of this PublicationPublicationIdNewsletterGet200Response.
        :type creator_id: str
        """

        self._creator_id = creator_id

    @property
    def description(self) -> str:
        """Gets the description of this PublicationPublicationIdNewsletterGet200Response.


        :return: The description of this PublicationPublicationIdNewsletterGet200Response.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this PublicationPublicationIdNewsletterGet200Response.


        :param description: The description of this PublicationPublicationIdNewsletterGet200Response.
        :type description: str
        """

        self._description = description

    @property
    def id(self) -> str:
        """Gets the id of this PublicationPublicationIdNewsletterGet200Response.


        :return: The id of this PublicationPublicationIdNewsletterGet200Response.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this PublicationPublicationIdNewsletterGet200Response.


        :param id: The id of this PublicationPublicationIdNewsletterGet200Response.
        :type id: str
        """

        self._id = id

    @property
    def image(self) -> str:
        """Gets the image of this PublicationPublicationIdNewsletterGet200Response.


        :return: The image of this PublicationPublicationIdNewsletterGet200Response.
        :rtype: str
        """
        return self._image

    @image.setter
    def image(self, image: str):
        """Sets the image of this PublicationPublicationIdNewsletterGet200Response.


        :param image: The image of this PublicationPublicationIdNewsletterGet200Response.
        :type image: str
        """

        self._image = image

    @property
    def name(self) -> str:
        """Gets the name of this PublicationPublicationIdNewsletterGet200Response.


        :return: The name of this PublicationPublicationIdNewsletterGet200Response.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this PublicationPublicationIdNewsletterGet200Response.


        :param name: The name of this PublicationPublicationIdNewsletterGet200Response.
        :type name: str
        """

        self._name = name

    @property
    def slug(self) -> str:
        """Gets the slug of this PublicationPublicationIdNewsletterGet200Response.


        :return: The slug of this PublicationPublicationIdNewsletterGet200Response.
        :rtype: str
        """
        return self._slug

    @slug.setter
    def slug(self, slug: str):
        """Sets the slug of this PublicationPublicationIdNewsletterGet200Response.


        :param slug: The slug of this PublicationPublicationIdNewsletterGet200Response.
        :type slug: str
        """

        self._slug = slug

    @property
    def subscribers(self) -> int:
        """Gets the subscribers of this PublicationPublicationIdNewsletterGet200Response.


        :return: The subscribers of this PublicationPublicationIdNewsletterGet200Response.
        :rtype: int
        """
        return self._subscribers

    @subscribers.setter
    def subscribers(self, subscribers: int):
        """Sets the subscribers of this PublicationPublicationIdNewsletterGet200Response.


        :param subscribers: The subscribers of this PublicationPublicationIdNewsletterGet200Response.
        :type subscribers: int
        """

        self._subscribers = subscribers
