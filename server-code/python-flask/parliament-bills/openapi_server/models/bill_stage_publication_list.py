from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.bill_stage_sitting_publication_list import BillStageSittingPublicationList
from openapi_server.models.publication import Publication
from openapi_server import util

from openapi_server.models.bill_stage_sitting_publication_list import BillStageSittingPublicationList  # noqa: E501
from openapi_server.models.publication import Publication  # noqa: E501

class BillStagePublicationList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bill_stage_id=None, publications=None, sittings=None):  # noqa: E501
        """BillStagePublicationList - a model defined in OpenAPI

        :param bill_stage_id: The bill_stage_id of this BillStagePublicationList.  # noqa: E501
        :type bill_stage_id: int
        :param publications: The publications of this BillStagePublicationList.  # noqa: E501
        :type publications: List[Publication]
        :param sittings: The sittings of this BillStagePublicationList.  # noqa: E501
        :type sittings: List[BillStageSittingPublicationList]
        """
        self.openapi_types = {
            'bill_stage_id': int,
            'publications': List[Publication],
            'sittings': List[BillStageSittingPublicationList]
        }

        self.attribute_map = {
            'bill_stage_id': 'billStageId',
            'publications': 'publications',
            'sittings': 'sittings'
        }

        self._bill_stage_id = bill_stage_id
        self._publications = publications
        self._sittings = sittings

    @classmethod
    def from_dict(cls, dikt) -> 'BillStagePublicationList':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BillStagePublicationList of this BillStagePublicationList.  # noqa: E501
        :rtype: BillStagePublicationList
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bill_stage_id(self) -> int:
        """Gets the bill_stage_id of this BillStagePublicationList.


        :return: The bill_stage_id of this BillStagePublicationList.
        :rtype: int
        """
        return self._bill_stage_id

    @bill_stage_id.setter
    def bill_stage_id(self, bill_stage_id: int):
        """Sets the bill_stage_id of this BillStagePublicationList.


        :param bill_stage_id: The bill_stage_id of this BillStagePublicationList.
        :type bill_stage_id: int
        """

        self._bill_stage_id = bill_stage_id

    @property
    def publications(self) -> List[Publication]:
        """Gets the publications of this BillStagePublicationList.


        :return: The publications of this BillStagePublicationList.
        :rtype: List[Publication]
        """
        return self._publications

    @publications.setter
    def publications(self, publications: List[Publication]):
        """Sets the publications of this BillStagePublicationList.


        :param publications: The publications of this BillStagePublicationList.
        :type publications: List[Publication]
        """

        self._publications = publications

    @property
    def sittings(self) -> List[BillStageSittingPublicationList]:
        """Gets the sittings of this BillStagePublicationList.


        :return: The sittings of this BillStagePublicationList.
        :rtype: List[BillStageSittingPublicationList]
        """
        return self._sittings

    @sittings.setter
    def sittings(self, sittings: List[BillStageSittingPublicationList]):
        """Sets the sittings of this BillStagePublicationList.


        :param sittings: The sittings of this BillStagePublicationList.
        :type sittings: List[BillStageSittingPublicationList]
        """

        self._sittings = sittings
