from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class PublicationLink(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content_type=None, id=None, title=None, url=None):  # noqa: E501
        """PublicationLink - a model defined in OpenAPI

        :param content_type: The content_type of this PublicationLink.  # noqa: E501
        :type content_type: str
        :param id: The id of this PublicationLink.  # noqa: E501
        :type id: int
        :param title: The title of this PublicationLink.  # noqa: E501
        :type title: str
        :param url: The url of this PublicationLink.  # noqa: E501
        :type url: str
        """
        self.openapi_types = {
            'content_type': str,
            'id': int,
            'title': str,
            'url': str
        }

        self.attribute_map = {
            'content_type': 'contentType',
            'id': 'id',
            'title': 'title',
            'url': 'url'
        }

        self._content_type = content_type
        self._id = id
        self._title = title
        self._url = url

    @classmethod
    def from_dict(cls, dikt) -> 'PublicationLink':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PublicationLink of this PublicationLink.  # noqa: E501
        :rtype: PublicationLink
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content_type(self) -> str:
        """Gets the content_type of this PublicationLink.


        :return: The content_type of this PublicationLink.
        :rtype: str
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type: str):
        """Sets the content_type of this PublicationLink.


        :param content_type: The content_type of this PublicationLink.
        :type content_type: str
        """

        self._content_type = content_type

    @property
    def id(self) -> int:
        """Gets the id of this PublicationLink.


        :return: The id of this PublicationLink.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this PublicationLink.


        :param id: The id of this PublicationLink.
        :type id: int
        """

        self._id = id

    @property
    def title(self) -> str:
        """Gets the title of this PublicationLink.


        :return: The title of this PublicationLink.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this PublicationLink.


        :param title: The title of this PublicationLink.
        :type title: str
        """

        self._title = title

    @property
    def url(self) -> str:
        """Gets the url of this PublicationLink.


        :return: The url of this PublicationLink.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url: str):
        """Sets the url of this PublicationLink.


        :param url: The url of this PublicationLink.
        :type url: str
        """

        self._url = url
