from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.publication_document import PublicationDocument
from openapi_server.models.publication_link import PublicationLink
from openapi_server.models.publication_type import PublicationType
from openapi_server import util

from openapi_server.models.publication_document import PublicationDocument  # noqa: E501
from openapi_server.models.publication_link import PublicationLink  # noqa: E501
from openapi_server.models.publication_type import PublicationType  # noqa: E501

class Publication(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_date=None, files=None, id=None, links=None, publication_type=None, title=None):  # noqa: E501
        """Publication - a model defined in OpenAPI

        :param display_date: The display_date of this Publication.  # noqa: E501
        :type display_date: datetime
        :param files: The files of this Publication.  # noqa: E501
        :type files: List[PublicationDocument]
        :param id: The id of this Publication.  # noqa: E501
        :type id: int
        :param links: The links of this Publication.  # noqa: E501
        :type links: List[PublicationLink]
        :param publication_type: The publication_type of this Publication.  # noqa: E501
        :type publication_type: PublicationType
        :param title: The title of this Publication.  # noqa: E501
        :type title: str
        """
        self.openapi_types = {
            'display_date': datetime,
            'files': List[PublicationDocument],
            'id': int,
            'links': List[PublicationLink],
            'publication_type': PublicationType,
            'title': str
        }

        self.attribute_map = {
            'display_date': 'displayDate',
            'files': 'files',
            'id': 'id',
            'links': 'links',
            'publication_type': 'publicationType',
            'title': 'title'
        }

        self._display_date = display_date
        self._files = files
        self._id = id
        self._links = links
        self._publication_type = publication_type
        self._title = title

    @classmethod
    def from_dict(cls, dikt) -> 'Publication':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Publication of this Publication.  # noqa: E501
        :rtype: Publication
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_date(self) -> datetime:
        """Gets the display_date of this Publication.


        :return: The display_date of this Publication.
        :rtype: datetime
        """
        return self._display_date

    @display_date.setter
    def display_date(self, display_date: datetime):
        """Sets the display_date of this Publication.


        :param display_date: The display_date of this Publication.
        :type display_date: datetime
        """

        self._display_date = display_date

    @property
    def files(self) -> List[PublicationDocument]:
        """Gets the files of this Publication.


        :return: The files of this Publication.
        :rtype: List[PublicationDocument]
        """
        return self._files

    @files.setter
    def files(self, files: List[PublicationDocument]):
        """Sets the files of this Publication.


        :param files: The files of this Publication.
        :type files: List[PublicationDocument]
        """

        self._files = files

    @property
    def id(self) -> int:
        """Gets the id of this Publication.


        :return: The id of this Publication.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Publication.


        :param id: The id of this Publication.
        :type id: int
        """

        self._id = id

    @property
    def links(self) -> List[PublicationLink]:
        """Gets the links of this Publication.


        :return: The links of this Publication.
        :rtype: List[PublicationLink]
        """
        return self._links

    @links.setter
    def links(self, links: List[PublicationLink]):
        """Sets the links of this Publication.


        :param links: The links of this Publication.
        :type links: List[PublicationLink]
        """

        self._links = links

    @property
    def publication_type(self) -> PublicationType:
        """Gets the publication_type of this Publication.


        :return: The publication_type of this Publication.
        :rtype: PublicationType
        """
        return self._publication_type

    @publication_type.setter
    def publication_type(self, publication_type: PublicationType):
        """Sets the publication_type of this Publication.


        :param publication_type: The publication_type of this Publication.
        :type publication_type: PublicationType
        """

        self._publication_type = publication_type

    @property
    def title(self) -> str:
        """Gets the title of this Publication.


        :return: The title of this Publication.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this Publication.


        :param title: The title of this Publication.
        :type title: str
        """

        self._title = title
