from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class BillAgent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address=None, email=None, name=None, phone_no=None, website=None):  # noqa: E501
        """BillAgent - a model defined in OpenAPI

        :param address: The address of this BillAgent.  # noqa: E501
        :type address: str
        :param email: The email of this BillAgent.  # noqa: E501
        :type email: str
        :param name: The name of this BillAgent.  # noqa: E501
        :type name: str
        :param phone_no: The phone_no of this BillAgent.  # noqa: E501
        :type phone_no: str
        :param website: The website of this BillAgent.  # noqa: E501
        :type website: str
        """
        self.openapi_types = {
            'address': str,
            'email': str,
            'name': str,
            'phone_no': str,
            'website': str
        }

        self.attribute_map = {
            'address': 'address',
            'email': 'email',
            'name': 'name',
            'phone_no': 'phoneNo',
            'website': 'website'
        }

        self._address = address
        self._email = email
        self._name = name
        self._phone_no = phone_no
        self._website = website

    @classmethod
    def from_dict(cls, dikt) -> 'BillAgent':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BillAgent of this BillAgent.  # noqa: E501
        :rtype: BillAgent
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self) -> str:
        """Gets the address of this BillAgent.


        :return: The address of this BillAgent.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address: str):
        """Sets the address of this BillAgent.


        :param address: The address of this BillAgent.
        :type address: str
        """

        self._address = address

    @property
    def email(self) -> str:
        """Gets the email of this BillAgent.


        :return: The email of this BillAgent.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this BillAgent.


        :param email: The email of this BillAgent.
        :type email: str
        """

        self._email = email

    @property
    def name(self) -> str:
        """Gets the name of this BillAgent.


        :return: The name of this BillAgent.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this BillAgent.


        :param name: The name of this BillAgent.
        :type name: str
        """

        self._name = name

    @property
    def phone_no(self) -> str:
        """Gets the phone_no of this BillAgent.


        :return: The phone_no of this BillAgent.
        :rtype: str
        """
        return self._phone_no

    @phone_no.setter
    def phone_no(self, phone_no: str):
        """Sets the phone_no of this BillAgent.


        :param phone_no: The phone_no of this BillAgent.
        :type phone_no: str
        """

        self._phone_no = phone_no

    @property
    def website(self) -> str:
        """Gets the website of this BillAgent.


        :return: The website of this BillAgent.
        :rtype: str
        """
        return self._website

    @website.setter
    def website(self, website: str):
        """Sets the website of this BillAgent.


        :param website: The website of this BillAgent.
        :type website: str
        """

        self._website = website
