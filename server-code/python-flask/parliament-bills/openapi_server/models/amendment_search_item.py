from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.amendment_decision import AmendmentDecision
from openapi_server.models.amendment_member import AmendmentMember
from openapi_server.models.amendment_type import AmendmentType
from openapi_server import util

from openapi_server.models.amendment_decision import AmendmentDecision  # noqa: E501
from openapi_server.models.amendment_member import AmendmentMember  # noqa: E501
from openapi_server.models.amendment_type import AmendmentType  # noqa: E501

class AmendmentSearchItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amendment_id=None, amendment_position=None, amendment_type=None, bill_id=None, bill_stage_id=None, clause=None, decision=None, line_number=None, marshalled_list_text=None, page_number=None, schedule=None, sponsors=None, summary_text=None):  # noqa: E501
        """AmendmentSearchItem - a model defined in OpenAPI

        :param amendment_id: The amendment_id of this AmendmentSearchItem.  # noqa: E501
        :type amendment_id: int
        :param amendment_position: The amendment_position of this AmendmentSearchItem.  # noqa: E501
        :type amendment_position: str
        :param amendment_type: The amendment_type of this AmendmentSearchItem.  # noqa: E501
        :type amendment_type: AmendmentType
        :param bill_id: The bill_id of this AmendmentSearchItem.  # noqa: E501
        :type bill_id: int
        :param bill_stage_id: The bill_stage_id of this AmendmentSearchItem.  # noqa: E501
        :type bill_stage_id: int
        :param clause: The clause of this AmendmentSearchItem.  # noqa: E501
        :type clause: int
        :param decision: The decision of this AmendmentSearchItem.  # noqa: E501
        :type decision: AmendmentDecision
        :param line_number: The line_number of this AmendmentSearchItem.  # noqa: E501
        :type line_number: int
        :param marshalled_list_text: The marshalled_list_text of this AmendmentSearchItem.  # noqa: E501
        :type marshalled_list_text: str
        :param page_number: The page_number of this AmendmentSearchItem.  # noqa: E501
        :type page_number: int
        :param schedule: The schedule of this AmendmentSearchItem.  # noqa: E501
        :type schedule: int
        :param sponsors: The sponsors of this AmendmentSearchItem.  # noqa: E501
        :type sponsors: List[AmendmentMember]
        :param summary_text: The summary_text of this AmendmentSearchItem.  # noqa: E501
        :type summary_text: List[str]
        """
        self.openapi_types = {
            'amendment_id': int,
            'amendment_position': str,
            'amendment_type': AmendmentType,
            'bill_id': int,
            'bill_stage_id': int,
            'clause': int,
            'decision': AmendmentDecision,
            'line_number': int,
            'marshalled_list_text': str,
            'page_number': int,
            'schedule': int,
            'sponsors': List[AmendmentMember],
            'summary_text': List[str]
        }

        self.attribute_map = {
            'amendment_id': 'amendmentId',
            'amendment_position': 'amendmentPosition',
            'amendment_type': 'amendmentType',
            'bill_id': 'billId',
            'bill_stage_id': 'billStageId',
            'clause': 'clause',
            'decision': 'decision',
            'line_number': 'lineNumber',
            'marshalled_list_text': 'marshalledListText',
            'page_number': 'pageNumber',
            'schedule': 'schedule',
            'sponsors': 'sponsors',
            'summary_text': 'summaryText'
        }

        self._amendment_id = amendment_id
        self._amendment_position = amendment_position
        self._amendment_type = amendment_type
        self._bill_id = bill_id
        self._bill_stage_id = bill_stage_id
        self._clause = clause
        self._decision = decision
        self._line_number = line_number
        self._marshalled_list_text = marshalled_list_text
        self._page_number = page_number
        self._schedule = schedule
        self._sponsors = sponsors
        self._summary_text = summary_text

    @classmethod
    def from_dict(cls, dikt) -> 'AmendmentSearchItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AmendmentSearchItem of this AmendmentSearchItem.  # noqa: E501
        :rtype: AmendmentSearchItem
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amendment_id(self) -> int:
        """Gets the amendment_id of this AmendmentSearchItem.


        :return: The amendment_id of this AmendmentSearchItem.
        :rtype: int
        """
        return self._amendment_id

    @amendment_id.setter
    def amendment_id(self, amendment_id: int):
        """Sets the amendment_id of this AmendmentSearchItem.


        :param amendment_id: The amendment_id of this AmendmentSearchItem.
        :type amendment_id: int
        """

        self._amendment_id = amendment_id

    @property
    def amendment_position(self) -> str:
        """Gets the amendment_position of this AmendmentSearchItem.


        :return: The amendment_position of this AmendmentSearchItem.
        :rtype: str
        """
        return self._amendment_position

    @amendment_position.setter
    def amendment_position(self, amendment_position: str):
        """Sets the amendment_position of this AmendmentSearchItem.


        :param amendment_position: The amendment_position of this AmendmentSearchItem.
        :type amendment_position: str
        """

        self._amendment_position = amendment_position

    @property
    def amendment_type(self) -> AmendmentType:
        """Gets the amendment_type of this AmendmentSearchItem.


        :return: The amendment_type of this AmendmentSearchItem.
        :rtype: AmendmentType
        """
        return self._amendment_type

    @amendment_type.setter
    def amendment_type(self, amendment_type: AmendmentType):
        """Sets the amendment_type of this AmendmentSearchItem.


        :param amendment_type: The amendment_type of this AmendmentSearchItem.
        :type amendment_type: AmendmentType
        """

        self._amendment_type = amendment_type

    @property
    def bill_id(self) -> int:
        """Gets the bill_id of this AmendmentSearchItem.


        :return: The bill_id of this AmendmentSearchItem.
        :rtype: int
        """
        return self._bill_id

    @bill_id.setter
    def bill_id(self, bill_id: int):
        """Sets the bill_id of this AmendmentSearchItem.


        :param bill_id: The bill_id of this AmendmentSearchItem.
        :type bill_id: int
        """

        self._bill_id = bill_id

    @property
    def bill_stage_id(self) -> int:
        """Gets the bill_stage_id of this AmendmentSearchItem.


        :return: The bill_stage_id of this AmendmentSearchItem.
        :rtype: int
        """
        return self._bill_stage_id

    @bill_stage_id.setter
    def bill_stage_id(self, bill_stage_id: int):
        """Sets the bill_stage_id of this AmendmentSearchItem.


        :param bill_stage_id: The bill_stage_id of this AmendmentSearchItem.
        :type bill_stage_id: int
        """

        self._bill_stage_id = bill_stage_id

    @property
    def clause(self) -> int:
        """Gets the clause of this AmendmentSearchItem.


        :return: The clause of this AmendmentSearchItem.
        :rtype: int
        """
        return self._clause

    @clause.setter
    def clause(self, clause: int):
        """Sets the clause of this AmendmentSearchItem.


        :param clause: The clause of this AmendmentSearchItem.
        :type clause: int
        """

        self._clause = clause

    @property
    def decision(self) -> AmendmentDecision:
        """Gets the decision of this AmendmentSearchItem.


        :return: The decision of this AmendmentSearchItem.
        :rtype: AmendmentDecision
        """
        return self._decision

    @decision.setter
    def decision(self, decision: AmendmentDecision):
        """Sets the decision of this AmendmentSearchItem.


        :param decision: The decision of this AmendmentSearchItem.
        :type decision: AmendmentDecision
        """

        self._decision = decision

    @property
    def line_number(self) -> int:
        """Gets the line_number of this AmendmentSearchItem.


        :return: The line_number of this AmendmentSearchItem.
        :rtype: int
        """
        return self._line_number

    @line_number.setter
    def line_number(self, line_number: int):
        """Sets the line_number of this AmendmentSearchItem.


        :param line_number: The line_number of this AmendmentSearchItem.
        :type line_number: int
        """

        self._line_number = line_number

    @property
    def marshalled_list_text(self) -> str:
        """Gets the marshalled_list_text of this AmendmentSearchItem.


        :return: The marshalled_list_text of this AmendmentSearchItem.
        :rtype: str
        """
        return self._marshalled_list_text

    @marshalled_list_text.setter
    def marshalled_list_text(self, marshalled_list_text: str):
        """Sets the marshalled_list_text of this AmendmentSearchItem.


        :param marshalled_list_text: The marshalled_list_text of this AmendmentSearchItem.
        :type marshalled_list_text: str
        """

        self._marshalled_list_text = marshalled_list_text

    @property
    def page_number(self) -> int:
        """Gets the page_number of this AmendmentSearchItem.


        :return: The page_number of this AmendmentSearchItem.
        :rtype: int
        """
        return self._page_number

    @page_number.setter
    def page_number(self, page_number: int):
        """Sets the page_number of this AmendmentSearchItem.


        :param page_number: The page_number of this AmendmentSearchItem.
        :type page_number: int
        """

        self._page_number = page_number

    @property
    def schedule(self) -> int:
        """Gets the schedule of this AmendmentSearchItem.


        :return: The schedule of this AmendmentSearchItem.
        :rtype: int
        """
        return self._schedule

    @schedule.setter
    def schedule(self, schedule: int):
        """Sets the schedule of this AmendmentSearchItem.


        :param schedule: The schedule of this AmendmentSearchItem.
        :type schedule: int
        """

        self._schedule = schedule

    @property
    def sponsors(self) -> List[AmendmentMember]:
        """Gets the sponsors of this AmendmentSearchItem.


        :return: The sponsors of this AmendmentSearchItem.
        :rtype: List[AmendmentMember]
        """
        return self._sponsors

    @sponsors.setter
    def sponsors(self, sponsors: List[AmendmentMember]):
        """Sets the sponsors of this AmendmentSearchItem.


        :param sponsors: The sponsors of this AmendmentSearchItem.
        :type sponsors: List[AmendmentMember]
        """

        self._sponsors = sponsors

    @property
    def summary_text(self) -> List[str]:
        """Gets the summary_text of this AmendmentSearchItem.


        :return: The summary_text of this AmendmentSearchItem.
        :rtype: List[str]
        """
        return self._summary_text

    @summary_text.setter
    def summary_text(self, summary_text: List[str]):
        """Sets the summary_text of this AmendmentSearchItem.


        :param summary_text: The summary_text of this AmendmentSearchItem.
        :type summary_text: List[str]
        """

        self._summary_text = summary_text
