from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.bill_stage_sitting import BillStageSitting
from openapi_server.models.house import House
from openapi_server import util

from openapi_server.models.bill_stage_sitting import BillStageSitting  # noqa: E501
from openapi_server.models.house import House  # noqa: E501

class StageSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, abbreviation=None, description=None, house=None, id=None, session_id=None, sort_order=None, stage_id=None, stage_sittings=None):  # noqa: E501
        """StageSummary - a model defined in OpenAPI

        :param abbreviation: The abbreviation of this StageSummary.  # noqa: E501
        :type abbreviation: str
        :param description: The description of this StageSummary.  # noqa: E501
        :type description: str
        :param house: The house of this StageSummary.  # noqa: E501
        :type house: House
        :param id: The id of this StageSummary.  # noqa: E501
        :type id: int
        :param session_id: The session_id of this StageSummary.  # noqa: E501
        :type session_id: int
        :param sort_order: The sort_order of this StageSummary.  # noqa: E501
        :type sort_order: int
        :param stage_id: The stage_id of this StageSummary.  # noqa: E501
        :type stage_id: int
        :param stage_sittings: The stage_sittings of this StageSummary.  # noqa: E501
        :type stage_sittings: List[BillStageSitting]
        """
        self.openapi_types = {
            'abbreviation': str,
            'description': str,
            'house': House,
            'id': int,
            'session_id': int,
            'sort_order': int,
            'stage_id': int,
            'stage_sittings': List[BillStageSitting]
        }

        self.attribute_map = {
            'abbreviation': 'abbreviation',
            'description': 'description',
            'house': 'house',
            'id': 'id',
            'session_id': 'sessionId',
            'sort_order': 'sortOrder',
            'stage_id': 'stageId',
            'stage_sittings': 'stageSittings'
        }

        self._abbreviation = abbreviation
        self._description = description
        self._house = house
        self._id = id
        self._session_id = session_id
        self._sort_order = sort_order
        self._stage_id = stage_id
        self._stage_sittings = stage_sittings

    @classmethod
    def from_dict(cls, dikt) -> 'StageSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The StageSummary of this StageSummary.  # noqa: E501
        :rtype: StageSummary
        """
        return util.deserialize_model(dikt, cls)

    @property
    def abbreviation(self) -> str:
        """Gets the abbreviation of this StageSummary.


        :return: The abbreviation of this StageSummary.
        :rtype: str
        """
        return self._abbreviation

    @abbreviation.setter
    def abbreviation(self, abbreviation: str):
        """Sets the abbreviation of this StageSummary.


        :param abbreviation: The abbreviation of this StageSummary.
        :type abbreviation: str
        """

        self._abbreviation = abbreviation

    @property
    def description(self) -> str:
        """Gets the description of this StageSummary.


        :return: The description of this StageSummary.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this StageSummary.


        :param description: The description of this StageSummary.
        :type description: str
        """

        self._description = description

    @property
    def house(self) -> House:
        """Gets the house of this StageSummary.


        :return: The house of this StageSummary.
        :rtype: House
        """
        return self._house

    @house.setter
    def house(self, house: House):
        """Sets the house of this StageSummary.


        :param house: The house of this StageSummary.
        :type house: House
        """

        self._house = house

    @property
    def id(self) -> int:
        """Gets the id of this StageSummary.


        :return: The id of this StageSummary.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this StageSummary.


        :param id: The id of this StageSummary.
        :type id: int
        """

        self._id = id

    @property
    def session_id(self) -> int:
        """Gets the session_id of this StageSummary.


        :return: The session_id of this StageSummary.
        :rtype: int
        """
        return self._session_id

    @session_id.setter
    def session_id(self, session_id: int):
        """Sets the session_id of this StageSummary.


        :param session_id: The session_id of this StageSummary.
        :type session_id: int
        """

        self._session_id = session_id

    @property
    def sort_order(self) -> int:
        """Gets the sort_order of this StageSummary.


        :return: The sort_order of this StageSummary.
        :rtype: int
        """
        return self._sort_order

    @sort_order.setter
    def sort_order(self, sort_order: int):
        """Sets the sort_order of this StageSummary.


        :param sort_order: The sort_order of this StageSummary.
        :type sort_order: int
        """

        self._sort_order = sort_order

    @property
    def stage_id(self) -> int:
        """Gets the stage_id of this StageSummary.


        :return: The stage_id of this StageSummary.
        :rtype: int
        """
        return self._stage_id

    @stage_id.setter
    def stage_id(self, stage_id: int):
        """Sets the stage_id of this StageSummary.


        :param stage_id: The stage_id of this StageSummary.
        :type stage_id: int
        """

        self._stage_id = stage_id

    @property
    def stage_sittings(self) -> List[BillStageSitting]:
        """Gets the stage_sittings of this StageSummary.


        :return: The stage_sittings of this StageSummary.
        :rtype: List[BillStageSitting]
        """
        return self._stage_sittings

    @stage_sittings.setter
    def stage_sittings(self, stage_sittings: List[BillStageSitting]):
        """Sets the stage_sittings of this StageSummary.


        :param stage_sittings: The stage_sittings of this StageSummary.
        :type stage_sittings: List[BillStageSitting]
        """

        self._stage_sittings = stage_sittings
