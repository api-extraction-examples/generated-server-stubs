from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.category_type import CategoryType
from openapi_server.models.region_set import RegionSet
from openapi_server.models.shipping_option import ShippingOption
from openapi_server.models.time_duration import TimeDuration
from openapi_server import util

from openapi_server.models.category_type import CategoryType  # noqa: E501
from openapi_server.models.region_set import RegionSet  # noqa: E501
from openapi_server.models.shipping_option import ShippingOption  # noqa: E501
from openapi_server.models.time_duration import TimeDuration  # noqa: E501

class FulfillmentPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category_types=None, description=None, freight_shipping=None, fulfillment_policy_id=None, global_shipping=None, handling_time=None, local_pickup=None, marketplace_id=None, name=None, pickup_drop_off=None, ship_to_locations=None, shipping_options=None):  # noqa: E501
        """FulfillmentPolicy - a model defined in OpenAPI

        :param category_types: The category_types of this FulfillmentPolicy.  # noqa: E501
        :type category_types: List[CategoryType]
        :param description: The description of this FulfillmentPolicy.  # noqa: E501
        :type description: str
        :param freight_shipping: The freight_shipping of this FulfillmentPolicy.  # noqa: E501
        :type freight_shipping: bool
        :param fulfillment_policy_id: The fulfillment_policy_id of this FulfillmentPolicy.  # noqa: E501
        :type fulfillment_policy_id: str
        :param global_shipping: The global_shipping of this FulfillmentPolicy.  # noqa: E501
        :type global_shipping: bool
        :param handling_time: The handling_time of this FulfillmentPolicy.  # noqa: E501
        :type handling_time: TimeDuration
        :param local_pickup: The local_pickup of this FulfillmentPolicy.  # noqa: E501
        :type local_pickup: bool
        :param marketplace_id: The marketplace_id of this FulfillmentPolicy.  # noqa: E501
        :type marketplace_id: str
        :param name: The name of this FulfillmentPolicy.  # noqa: E501
        :type name: str
        :param pickup_drop_off: The pickup_drop_off of this FulfillmentPolicy.  # noqa: E501
        :type pickup_drop_off: bool
        :param ship_to_locations: The ship_to_locations of this FulfillmentPolicy.  # noqa: E501
        :type ship_to_locations: RegionSet
        :param shipping_options: The shipping_options of this FulfillmentPolicy.  # noqa: E501
        :type shipping_options: List[ShippingOption]
        """
        self.openapi_types = {
            'category_types': List[CategoryType],
            'description': str,
            'freight_shipping': bool,
            'fulfillment_policy_id': str,
            'global_shipping': bool,
            'handling_time': TimeDuration,
            'local_pickup': bool,
            'marketplace_id': str,
            'name': str,
            'pickup_drop_off': bool,
            'ship_to_locations': RegionSet,
            'shipping_options': List[ShippingOption]
        }

        self.attribute_map = {
            'category_types': 'categoryTypes',
            'description': 'description',
            'freight_shipping': 'freightShipping',
            'fulfillment_policy_id': 'fulfillmentPolicyId',
            'global_shipping': 'globalShipping',
            'handling_time': 'handlingTime',
            'local_pickup': 'localPickup',
            'marketplace_id': 'marketplaceId',
            'name': 'name',
            'pickup_drop_off': 'pickupDropOff',
            'ship_to_locations': 'shipToLocations',
            'shipping_options': 'shippingOptions'
        }

        self._category_types = category_types
        self._description = description
        self._freight_shipping = freight_shipping
        self._fulfillment_policy_id = fulfillment_policy_id
        self._global_shipping = global_shipping
        self._handling_time = handling_time
        self._local_pickup = local_pickup
        self._marketplace_id = marketplace_id
        self._name = name
        self._pickup_drop_off = pickup_drop_off
        self._ship_to_locations = ship_to_locations
        self._shipping_options = shipping_options

    @classmethod
    def from_dict(cls, dikt) -> 'FulfillmentPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FulfillmentPolicy of this FulfillmentPolicy.  # noqa: E501
        :rtype: FulfillmentPolicy
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category_types(self) -> List[CategoryType]:
        """Gets the category_types of this FulfillmentPolicy.

        This container indicates whether the fulfillment policy applies to motor vehicle listings, or if it applies to non-motor vehicle listings.  # noqa: E501

        :return: The category_types of this FulfillmentPolicy.
        :rtype: List[CategoryType]
        """
        return self._category_types

    @category_types.setter
    def category_types(self, category_types: List[CategoryType]):
        """Sets the category_types of this FulfillmentPolicy.

        This container indicates whether the fulfillment policy applies to motor vehicle listings, or if it applies to non-motor vehicle listings.  # noqa: E501

        :param category_types: The category_types of this FulfillmentPolicy.
        :type category_types: List[CategoryType]
        """

        self._category_types = category_types

    @property
    def description(self) -> str:
        """Gets the description of this FulfillmentPolicy.

        A seller-defined description of the fulfillment policy. This description is only for the seller's use, and is not exposed on any eBay pages. This field is returned if set for the policy. <br/><br/><b>Max length</b>: 250  # noqa: E501

        :return: The description of this FulfillmentPolicy.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this FulfillmentPolicy.

        A seller-defined description of the fulfillment policy. This description is only for the seller's use, and is not exposed on any eBay pages. This field is returned if set for the policy. <br/><br/><b>Max length</b>: 250  # noqa: E501

        :param description: The description of this FulfillmentPolicy.
        :type description: str
        """

        self._description = description

    @property
    def freight_shipping(self) -> bool:
        """Gets the freight_shipping of this FulfillmentPolicy.

        If returned as <code>true</code>, the seller offers freight shipping. Freight shipping can be used for large items over 150 lbs.  # noqa: E501

        :return: The freight_shipping of this FulfillmentPolicy.
        :rtype: bool
        """
        return self._freight_shipping

    @freight_shipping.setter
    def freight_shipping(self, freight_shipping: bool):
        """Sets the freight_shipping of this FulfillmentPolicy.

        If returned as <code>true</code>, the seller offers freight shipping. Freight shipping can be used for large items over 150 lbs.  # noqa: E501

        :param freight_shipping: The freight_shipping of this FulfillmentPolicy.
        :type freight_shipping: bool
        """

        self._freight_shipping = freight_shipping

    @property
    def fulfillment_policy_id(self) -> str:
        """Gets the fulfillment_policy_id of this FulfillmentPolicy.

        A unique eBay-assigned ID for the fulfillment policy. This ID is generated when the policy is created.  # noqa: E501

        :return: The fulfillment_policy_id of this FulfillmentPolicy.
        :rtype: str
        """
        return self._fulfillment_policy_id

    @fulfillment_policy_id.setter
    def fulfillment_policy_id(self, fulfillment_policy_id: str):
        """Sets the fulfillment_policy_id of this FulfillmentPolicy.

        A unique eBay-assigned ID for the fulfillment policy. This ID is generated when the policy is created.  # noqa: E501

        :param fulfillment_policy_id: The fulfillment_policy_id of this FulfillmentPolicy.
        :type fulfillment_policy_id: str
        """

        self._fulfillment_policy_id = fulfillment_policy_id

    @property
    def global_shipping(self) -> bool:
        """Gets the global_shipping of this FulfillmentPolicy.

        If returned as <code>true</code>, eBay's Global Shipping Program will be used by the seller to ship items to international locations.<br /><br /><span class=\"tablenote\"><b>Note</b>: On the US marketplace, the <em><b>Global Shipping Program</b></em> is scheduled to be replaced by a new intermediated international shipping program called <em><b>eBay International Shipping</b></em>. US sellers who are opted in to the Global Shipping Program will be automatically opted in to eBay International Shipping when it becomes available to them. All US sellers will be migrated by March 31, 2023. <br /><br />eBay International Shipping is an account level setting, and no field needs to be set in a Fulfillment business policy to enable it. As long as the US seller's account is opted in to eBay International Shipping, this shipping option will be enabled automatically for all listings where international shipping is available. <br /><br />A US seller who is opted in to eBay International Shipping can also specify individual international shipping service options for a Fulfillment business policy.</span>  # noqa: E501

        :return: The global_shipping of this FulfillmentPolicy.
        :rtype: bool
        """
        return self._global_shipping

    @global_shipping.setter
    def global_shipping(self, global_shipping: bool):
        """Sets the global_shipping of this FulfillmentPolicy.

        If returned as <code>true</code>, eBay's Global Shipping Program will be used by the seller to ship items to international locations.<br /><br /><span class=\"tablenote\"><b>Note</b>: On the US marketplace, the <em><b>Global Shipping Program</b></em> is scheduled to be replaced by a new intermediated international shipping program called <em><b>eBay International Shipping</b></em>. US sellers who are opted in to the Global Shipping Program will be automatically opted in to eBay International Shipping when it becomes available to them. All US sellers will be migrated by March 31, 2023. <br /><br />eBay International Shipping is an account level setting, and no field needs to be set in a Fulfillment business policy to enable it. As long as the US seller's account is opted in to eBay International Shipping, this shipping option will be enabled automatically for all listings where international shipping is available. <br /><br />A US seller who is opted in to eBay International Shipping can also specify individual international shipping service options for a Fulfillment business policy.</span>  # noqa: E501

        :param global_shipping: The global_shipping of this FulfillmentPolicy.
        :type global_shipping: bool
        """

        self._global_shipping = global_shipping

    @property
    def handling_time(self) -> TimeDuration:
        """Gets the handling_time of this FulfillmentPolicy.


        :return: The handling_time of this FulfillmentPolicy.
        :rtype: TimeDuration
        """
        return self._handling_time

    @handling_time.setter
    def handling_time(self, handling_time: TimeDuration):
        """Sets the handling_time of this FulfillmentPolicy.


        :param handling_time: The handling_time of this FulfillmentPolicy.
        :type handling_time: TimeDuration
        """

        self._handling_time = handling_time

    @property
    def local_pickup(self) -> bool:
        """Gets the local_pickup of this FulfillmentPolicy.

        If returned as <code>true</code>, local pickup is available for this policy.  # noqa: E501

        :return: The local_pickup of this FulfillmentPolicy.
        :rtype: bool
        """
        return self._local_pickup

    @local_pickup.setter
    def local_pickup(self, local_pickup: bool):
        """Sets the local_pickup of this FulfillmentPolicy.

        If returned as <code>true</code>, local pickup is available for this policy.  # noqa: E501

        :param local_pickup: The local_pickup of this FulfillmentPolicy.
        :type local_pickup: bool
        """

        self._local_pickup = local_pickup

    @property
    def marketplace_id(self) -> str:
        """Gets the marketplace_id of this FulfillmentPolicy.

        The ID of the eBay marketplace to which this fulfillment policy applies. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/ba:MarketplaceIdEnum'>eBay API documentation</a>  # noqa: E501

        :return: The marketplace_id of this FulfillmentPolicy.
        :rtype: str
        """
        return self._marketplace_id

    @marketplace_id.setter
    def marketplace_id(self, marketplace_id: str):
        """Sets the marketplace_id of this FulfillmentPolicy.

        The ID of the eBay marketplace to which this fulfillment policy applies. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/ba:MarketplaceIdEnum'>eBay API documentation</a>  # noqa: E501

        :param marketplace_id: The marketplace_id of this FulfillmentPolicy.
        :type marketplace_id: str
        """

        self._marketplace_id = marketplace_id

    @property
    def name(self) -> str:
        """Gets the name of this FulfillmentPolicy.

        A seller-defined name for this fulfillment policy. Names must be unique for policies assigned to the same marketplace. <br/><br/><b>Max length</b>: 64  # noqa: E501

        :return: The name of this FulfillmentPolicy.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this FulfillmentPolicy.

        A seller-defined name for this fulfillment policy. Names must be unique for policies assigned to the same marketplace. <br/><br/><b>Max length</b>: 64  # noqa: E501

        :param name: The name of this FulfillmentPolicy.
        :type name: str
        """

        self._name = name

    @property
    def pickup_drop_off(self) -> bool:
        """Gets the pickup_drop_off of this FulfillmentPolicy.

        If returned as <code>true</code>, the seller offers the \"Click and Collect\" option. <br/><br/>Currently, \"Click and Collect\" is available only to large retail merchants the eBay AU and UK marketplaces.  # noqa: E501

        :return: The pickup_drop_off of this FulfillmentPolicy.
        :rtype: bool
        """
        return self._pickup_drop_off

    @pickup_drop_off.setter
    def pickup_drop_off(self, pickup_drop_off: bool):
        """Sets the pickup_drop_off of this FulfillmentPolicy.

        If returned as <code>true</code>, the seller offers the \"Click and Collect\" option. <br/><br/>Currently, \"Click and Collect\" is available only to large retail merchants the eBay AU and UK marketplaces.  # noqa: E501

        :param pickup_drop_off: The pickup_drop_off of this FulfillmentPolicy.
        :type pickup_drop_off: bool
        """

        self._pickup_drop_off = pickup_drop_off

    @property
    def ship_to_locations(self) -> RegionSet:
        """Gets the ship_to_locations of this FulfillmentPolicy.


        :return: The ship_to_locations of this FulfillmentPolicy.
        :rtype: RegionSet
        """
        return self._ship_to_locations

    @ship_to_locations.setter
    def ship_to_locations(self, ship_to_locations: RegionSet):
        """Sets the ship_to_locations of this FulfillmentPolicy.


        :param ship_to_locations: The ship_to_locations of this FulfillmentPolicy.
        :type ship_to_locations: RegionSet
        """

        self._ship_to_locations = ship_to_locations

    @property
    def shipping_options(self) -> List[ShippingOption]:
        """Gets the shipping_options of this FulfillmentPolicy.

        This array is used to provide detailed information on the domestic and international shipping options available for the policy. A separate <b>ShippingOption</b> object covers domestic shipping service options and international shipping service options (if the seller ships to international locations). <br /><br />The <b>optionType</b> field indicates whether the <b>ShippingOption</b> object applies to domestic or international shipping, and the <b>costType</b> field indicates whether flat-rate shipping or calculated shipping will be used. <p>A separate <b>ShippingServices</b> object is used to specify cost and other details for every available domestic and international shipping service option. </p>  # noqa: E501

        :return: The shipping_options of this FulfillmentPolicy.
        :rtype: List[ShippingOption]
        """
        return self._shipping_options

    @shipping_options.setter
    def shipping_options(self, shipping_options: List[ShippingOption]):
        """Sets the shipping_options of this FulfillmentPolicy.

        This array is used to provide detailed information on the domestic and international shipping options available for the policy. A separate <b>ShippingOption</b> object covers domestic shipping service options and international shipping service options (if the seller ships to international locations). <br /><br />The <b>optionType</b> field indicates whether the <b>ShippingOption</b> object applies to domestic or international shipping, and the <b>costType</b> field indicates whether flat-rate shipping or calculated shipping will be used. <p>A separate <b>ShippingServices</b> object is used to specify cost and other details for every available domestic and international shipping service option. </p>  # noqa: E501

        :param shipping_options: The shipping_options of this FulfillmentPolicy.
        :type shipping_options: List[ShippingOption]
        """

        self._shipping_options = shipping_options
