from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.compact_custom_policy_response import CompactCustomPolicyResponse
from openapi_server import util

from openapi_server.models.compact_custom_policy_response import CompactCustomPolicyResponse  # noqa: E501

class CustomPolicyResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, custom_policies=None, href=None, limit=None, next=None, offset=None, prev=None, total=None):  # noqa: E501
        """CustomPolicyResponse - a model defined in OpenAPI

        :param custom_policies: The custom_policies of this CustomPolicyResponse.  # noqa: E501
        :type custom_policies: List[CompactCustomPolicyResponse]
        :param href: The href of this CustomPolicyResponse.  # noqa: E501
        :type href: str
        :param limit: The limit of this CustomPolicyResponse.  # noqa: E501
        :type limit: int
        :param next: The next of this CustomPolicyResponse.  # noqa: E501
        :type next: str
        :param offset: The offset of this CustomPolicyResponse.  # noqa: E501
        :type offset: int
        :param prev: The prev of this CustomPolicyResponse.  # noqa: E501
        :type prev: str
        :param total: The total of this CustomPolicyResponse.  # noqa: E501
        :type total: int
        """
        self.openapi_types = {
            'custom_policies': List[CompactCustomPolicyResponse],
            'href': str,
            'limit': int,
            'next': str,
            'offset': int,
            'prev': str,
            'total': int
        }

        self.attribute_map = {
            'custom_policies': 'customPolicies',
            'href': 'href',
            'limit': 'limit',
            'next': 'next',
            'offset': 'offset',
            'prev': 'prev',
            'total': 'total'
        }

        self._custom_policies = custom_policies
        self._href = href
        self._limit = limit
        self._next = next
        self._offset = offset
        self._prev = prev
        self._total = total

    @classmethod
    def from_dict(cls, dikt) -> 'CustomPolicyResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CustomPolicyResponse of this CustomPolicyResponse.  # noqa: E501
        :rtype: CustomPolicyResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def custom_policies(self) -> List[CompactCustomPolicyResponse]:
        """Gets the custom_policies of this CustomPolicyResponse.

        This array contains the custom policies that match the input criteria.  # noqa: E501

        :return: The custom_policies of this CustomPolicyResponse.
        :rtype: List[CompactCustomPolicyResponse]
        """
        return self._custom_policies

    @custom_policies.setter
    def custom_policies(self, custom_policies: List[CompactCustomPolicyResponse]):
        """Sets the custom_policies of this CustomPolicyResponse.

        This array contains the custom policies that match the input criteria.  # noqa: E501

        :param custom_policies: The custom_policies of this CustomPolicyResponse.
        :type custom_policies: List[CompactCustomPolicyResponse]
        """

        self._custom_policies = custom_policies

    @property
    def href(self) -> str:
        """Gets the href of this CustomPolicyResponse.

        <i>This field is for future use.</i>  # noqa: E501

        :return: The href of this CustomPolicyResponse.
        :rtype: str
        """
        return self._href

    @href.setter
    def href(self, href: str):
        """Sets the href of this CustomPolicyResponse.

        <i>This field is for future use.</i>  # noqa: E501

        :param href: The href of this CustomPolicyResponse.
        :type href: str
        """

        self._href = href

    @property
    def limit(self) -> int:
        """Gets the limit of this CustomPolicyResponse.

        <i>This field is for future use.</i>  # noqa: E501

        :return: The limit of this CustomPolicyResponse.
        :rtype: int
        """
        return self._limit

    @limit.setter
    def limit(self, limit: int):
        """Sets the limit of this CustomPolicyResponse.

        <i>This field is for future use.</i>  # noqa: E501

        :param limit: The limit of this CustomPolicyResponse.
        :type limit: int
        """

        self._limit = limit

    @property
    def next(self) -> str:
        """Gets the next of this CustomPolicyResponse.

        <i>This field is for future use.</i>  # noqa: E501

        :return: The next of this CustomPolicyResponse.
        :rtype: str
        """
        return self._next

    @next.setter
    def next(self, next: str):
        """Sets the next of this CustomPolicyResponse.

        <i>This field is for future use.</i>  # noqa: E501

        :param next: The next of this CustomPolicyResponse.
        :type next: str
        """

        self._next = next

    @property
    def offset(self) -> int:
        """Gets the offset of this CustomPolicyResponse.

        <i>This field is for future use.</i>  # noqa: E501

        :return: The offset of this CustomPolicyResponse.
        :rtype: int
        """
        return self._offset

    @offset.setter
    def offset(self, offset: int):
        """Sets the offset of this CustomPolicyResponse.

        <i>This field is for future use.</i>  # noqa: E501

        :param offset: The offset of this CustomPolicyResponse.
        :type offset: int
        """

        self._offset = offset

    @property
    def prev(self) -> str:
        """Gets the prev of this CustomPolicyResponse.

        <i>This field is for future use.</i>  # noqa: E501

        :return: The prev of this CustomPolicyResponse.
        :rtype: str
        """
        return self._prev

    @prev.setter
    def prev(self, prev: str):
        """Sets the prev of this CustomPolicyResponse.

        <i>This field is for future use.</i>  # noqa: E501

        :param prev: The prev of this CustomPolicyResponse.
        :type prev: str
        """

        self._prev = prev

    @property
    def total(self) -> int:
        """Gets the total of this CustomPolicyResponse.

        <i>This field is for future use.</i>  # noqa: E501

        :return: The total of this CustomPolicyResponse.
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total: int):
        """Sets the total of this CustomPolicyResponse.

        <i>This field is for future use.</i>  # noqa: E501

        :param total: The total of this CustomPolicyResponse.
        :type total: int
        """

        self._total = total
