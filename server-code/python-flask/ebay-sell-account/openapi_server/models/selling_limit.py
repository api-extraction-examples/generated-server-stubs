from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.amount import Amount
from openapi_server import util

from openapi_server.models.amount import Amount  # noqa: E501

class SellingLimit(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount=None, quantity=None):  # noqa: E501
        """SellingLimit - a model defined in OpenAPI

        :param amount: The amount of this SellingLimit.  # noqa: E501
        :type amount: Amount
        :param quantity: The quantity of this SellingLimit.  # noqa: E501
        :type quantity: int
        """
        self.openapi_types = {
            'amount': Amount,
            'quantity': int
        }

        self.attribute_map = {
            'amount': 'amount',
            'quantity': 'quantity'
        }

        self._amount = amount
        self._quantity = quantity

    @classmethod
    def from_dict(cls, dikt) -> 'SellingLimit':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SellingLimit of this SellingLimit.  # noqa: E501
        :rtype: SellingLimit
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self) -> Amount:
        """Gets the amount of this SellingLimit.


        :return: The amount of this SellingLimit.
        :rtype: Amount
        """
        return self._amount

    @amount.setter
    def amount(self, amount: Amount):
        """Sets the amount of this SellingLimit.


        :param amount: The amount of this SellingLimit.
        :type amount: Amount
        """

        self._amount = amount

    @property
    def quantity(self) -> int:
        """Gets the quantity of this SellingLimit.

        This field shows the monthly cap for total quantity sold allowed for the seller's account. This container may not be returned if a seller does not have a monthly cap for total quantity sold.  # noqa: E501

        :return: The quantity of this SellingLimit.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity: int):
        """Sets the quantity of this SellingLimit.

        This field shows the monthly cap for total quantity sold allowed for the seller's account. This container may not be returned if a seller does not have a monthly cap for total quantity sold.  # noqa: E501

        :param quantity: The quantity of this SellingLimit.
        :type quantity: int
        """

        self._quantity = quantity
