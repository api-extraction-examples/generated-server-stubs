from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.recipient_account_reference import RecipientAccountReference
from openapi_server import util

from openapi_server.models.recipient_account_reference import RecipientAccountReference  # noqa: E501

class PaymentMethod(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, brands=None, payment_method_type=None, recipient_account_reference=None):  # noqa: E501
        """PaymentMethod - a model defined in OpenAPI

        :param brands: The brands of this PaymentMethod.  # noqa: E501
        :type brands: List[str]
        :param payment_method_type: The payment_method_type of this PaymentMethod.  # noqa: E501
        :type payment_method_type: str
        :param recipient_account_reference: The recipient_account_reference of this PaymentMethod.  # noqa: E501
        :type recipient_account_reference: RecipientAccountReference
        """
        self.openapi_types = {
            'brands': List[str],
            'payment_method_type': str,
            'recipient_account_reference': RecipientAccountReference
        }

        self.attribute_map = {
            'brands': 'brands',
            'payment_method_type': 'paymentMethodType',
            'recipient_account_reference': 'recipientAccountReference'
        }

        self._brands = brands
        self._payment_method_type = payment_method_type
        self._recipient_account_reference = recipient_account_reference

    @classmethod
    def from_dict(cls, dikt) -> 'PaymentMethod':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PaymentMethod of this PaymentMethod.  # noqa: E501
        :rtype: PaymentMethod
        """
        return util.deserialize_model(dikt, cls)

    @property
    def brands(self) -> List[str]:
        """Gets the brands of this PaymentMethod.

        <span class=\"tablenote\"><b>Note</b>: This array is no longer applicable and should not be used. eBay now controls all electronic payment methods available for a marketplace, and a seller never has to specify any electronic payment methods, including any credit card brands accepted. </span>  # noqa: E501

        :return: The brands of this PaymentMethod.
        :rtype: List[str]
        """
        return self._brands

    @brands.setter
    def brands(self, brands: List[str]):
        """Sets the brands of this PaymentMethod.

        <span class=\"tablenote\"><b>Note</b>: This array is no longer applicable and should not be used. eBay now controls all electronic payment methods available for a marketplace, and a seller never has to specify any electronic payment methods, including any credit card brands accepted. </span>  # noqa: E501

        :param brands: The brands of this PaymentMethod.
        :type brands: List[str]
        """

        self._brands = brands

    @property
    def payment_method_type(self) -> str:
        """Gets the payment_method_type of this PaymentMethod.

        eBay now controls all electronic payment methods available for a marketplace, so only offline payment method enum values may be used in this field, and offline payment methods will only be applicable to listings that require or support offline payments. See the <b>PaymentMethodTypeEnum</b> type for supported offline payment method enum values. </p> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:PaymentMethodTypeEnum'>eBay API documentation</a>  # noqa: E501

        :return: The payment_method_type of this PaymentMethod.
        :rtype: str
        """
        return self._payment_method_type

    @payment_method_type.setter
    def payment_method_type(self, payment_method_type: str):
        """Sets the payment_method_type of this PaymentMethod.

        eBay now controls all electronic payment methods available for a marketplace, so only offline payment method enum values may be used in this field, and offline payment methods will only be applicable to listings that require or support offline payments. See the <b>PaymentMethodTypeEnum</b> type for supported offline payment method enum values. </p> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:PaymentMethodTypeEnum'>eBay API documentation</a>  # noqa: E501

        :param payment_method_type: The payment_method_type of this PaymentMethod.
        :type payment_method_type: str
        """

        self._payment_method_type = payment_method_type

    @property
    def recipient_account_reference(self) -> RecipientAccountReference:
        """Gets the recipient_account_reference of this PaymentMethod.


        :return: The recipient_account_reference of this PaymentMethod.
        :rtype: RecipientAccountReference
        """
        return self._recipient_account_reference

    @recipient_account_reference.setter
    def recipient_account_reference(self, recipient_account_reference: RecipientAccountReference):
        """Sets the recipient_account_reference of this PaymentMethod.


        :param recipient_account_reference: The recipient_account_reference of this PaymentMethod.
        :type recipient_account_reference: RecipientAccountReference
        """

        self._recipient_account_reference = recipient_account_reference
