from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.links import Links
from openapi_server.models.user_segment import UserSegment
from openapi_server import util

from openapi_server.models.links import Links  # noqa: E501
from openapi_server.models.user_segment import UserSegment  # noqa: E501

class UserSegments(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, links=None, items=None):  # noqa: E501
        """UserSegments - a model defined in OpenAPI

        :param links: The links of this UserSegments.  # noqa: E501
        :type links: Links
        :param items: The items of this UserSegments.  # noqa: E501
        :type items: List[UserSegment]
        """
        self.openapi_types = {
            'links': Links,
            'items': List[UserSegment]
        }

        self.attribute_map = {
            'links': '_links',
            'items': 'items'
        }

        self._links = links
        self._items = items

    @classmethod
    def from_dict(cls, dikt) -> 'UserSegments':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UserSegments of this UserSegments.  # noqa: E501
        :rtype: UserSegments
        """
        return util.deserialize_model(dikt, cls)

    @property
    def links(self) -> Links:
        """Gets the links of this UserSegments.


        :return: The links of this UserSegments.
        :rtype: Links
        """
        return self._links

    @links.setter
    def links(self, links: Links):
        """Sets the links of this UserSegments.


        :param links: The links of this UserSegments.
        :type links: Links
        """

        self._links = links

    @property
    def items(self) -> List[UserSegment]:
        """Gets the items of this UserSegments.


        :return: The items of this UserSegments.
        :rtype: List[UserSegment]
        """
        return self._items

    @items.setter
    def items(self, items: List[UserSegment]):
        """Sets the items of this UserSegments.


        :param items: The items of this UserSegments.
        :type items: List[UserSegment]
        """

        self._items = items
