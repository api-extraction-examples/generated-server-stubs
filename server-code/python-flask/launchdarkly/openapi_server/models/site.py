from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class Site(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, href=None, type=None):  # noqa: E501
        """Site - a model defined in OpenAPI

        :param href: The href of this Site.  # noqa: E501
        :type href: str
        :param type: The type of this Site.  # noqa: E501
        :type type: str
        """
        self.openapi_types = {
            'href': str,
            'type': str
        }

        self.attribute_map = {
            'href': 'href',
            'type': 'type'
        }

        self._href = href
        self._type = type

    @classmethod
    def from_dict(cls, dikt) -> 'Site':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Site of this Site.  # noqa: E501
        :rtype: Site
        """
        return util.deserialize_model(dikt, cls)

    @property
    def href(self) -> str:
        """Gets the href of this Site.


        :return: The href of this Site.
        :rtype: str
        """
        return self._href

    @href.setter
    def href(self, href: str):
        """Sets the href of this Site.


        :param href: The href of this Site.
        :type href: str
        """

        self._href = href

    @property
    def type(self) -> str:
        """Gets the type of this Site.


        :return: The type of this Site.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this Site.


        :param type: The type of this Site.
        :type type: str
        """

        self._type = type
