from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class PostReviewApprovalRequestRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, comment=None, kind=None):  # noqa: E501
        """PostReviewApprovalRequestRequest - a model defined in OpenAPI

        :param comment: The comment of this PostReviewApprovalRequestRequest.  # noqa: E501
        :type comment: str
        :param kind: The kind of this PostReviewApprovalRequestRequest.  # noqa: E501
        :type kind: str
        """
        self.openapi_types = {
            'comment': str,
            'kind': str
        }

        self.attribute_map = {
            'comment': 'comment',
            'kind': 'kind'
        }

        self._comment = comment
        self._kind = kind

    @classmethod
    def from_dict(cls, dikt) -> 'PostReviewApprovalRequestRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The postReviewApprovalRequest_request of this PostReviewApprovalRequestRequest.  # noqa: E501
        :rtype: PostReviewApprovalRequestRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def comment(self) -> str:
        """Gets the comment of this PostReviewApprovalRequestRequest.

        comment will be included in audit log item for change.  # noqa: E501

        :return: The comment of this PostReviewApprovalRequestRequest.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment: str):
        """Sets the comment of this PostReviewApprovalRequestRequest.

        comment will be included in audit log item for change.  # noqa: E501

        :param comment: The comment of this PostReviewApprovalRequestRequest.
        :type comment: str
        """

        self._comment = comment

    @property
    def kind(self) -> str:
        """Gets the kind of this PostReviewApprovalRequestRequest.

        One of approve, decline, or comment.  # noqa: E501

        :return: The kind of this PostReviewApprovalRequestRequest.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind: str):
        """Sets the kind of this PostReviewApprovalRequestRequest.

        One of approve, decline, or comment.  # noqa: E501

        :param kind: The kind of this PostReviewApprovalRequestRequest.
        :type kind: str
        """
        allowed_values = ["approve", "decline", "comment"]  # noqa: E501
        if kind not in allowed_values:
            raise ValueError(
                "Invalid value for `kind` ({0}), must be one of {1}"
                .format(kind, allowed_values)
            )

        self._kind = kind
