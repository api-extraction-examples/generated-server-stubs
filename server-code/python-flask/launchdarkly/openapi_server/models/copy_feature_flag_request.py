from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.copy_actions import CopyActions
from openapi_server.models.feature_flag_copy_object import FeatureFlagCopyObject
from openapi_server import util

from openapi_server.models.copy_actions import CopyActions  # noqa: E501
from openapi_server.models.feature_flag_copy_object import FeatureFlagCopyObject  # noqa: E501

class CopyFeatureFlagRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, comment=None, excluded_actions=None, included_actions=None, source=None, target=None):  # noqa: E501
        """CopyFeatureFlagRequest - a model defined in OpenAPI

        :param comment: The comment of this CopyFeatureFlagRequest.  # noqa: E501
        :type comment: str
        :param excluded_actions: The excluded_actions of this CopyFeatureFlagRequest.  # noqa: E501
        :type excluded_actions: List[CopyActions]
        :param included_actions: The included_actions of this CopyFeatureFlagRequest.  # noqa: E501
        :type included_actions: List[CopyActions]
        :param source: The source of this CopyFeatureFlagRequest.  # noqa: E501
        :type source: FeatureFlagCopyObject
        :param target: The target of this CopyFeatureFlagRequest.  # noqa: E501
        :type target: FeatureFlagCopyObject
        """
        self.openapi_types = {
            'comment': str,
            'excluded_actions': List[CopyActions],
            'included_actions': List[CopyActions],
            'source': FeatureFlagCopyObject,
            'target': FeatureFlagCopyObject
        }

        self.attribute_map = {
            'comment': 'comment',
            'excluded_actions': 'excludedActions',
            'included_actions': 'includedActions',
            'source': 'source',
            'target': 'target'
        }

        self._comment = comment
        self._excluded_actions = excluded_actions
        self._included_actions = included_actions
        self._source = source
        self._target = target

    @classmethod
    def from_dict(cls, dikt) -> 'CopyFeatureFlagRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The copyFeatureFlag_request of this CopyFeatureFlagRequest.  # noqa: E501
        :rtype: CopyFeatureFlagRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def comment(self) -> str:
        """Gets the comment of this CopyFeatureFlagRequest.

        comment will be included in audit log item for change.  # noqa: E501

        :return: The comment of this CopyFeatureFlagRequest.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment: str):
        """Sets the comment of this CopyFeatureFlagRequest.

        comment will be included in audit log item for change.  # noqa: E501

        :param comment: The comment of this CopyFeatureFlagRequest.
        :type comment: str
        """

        self._comment = comment

    @property
    def excluded_actions(self) -> List[CopyActions]:
        """Gets the excluded_actions of this CopyFeatureFlagRequest.

        Define the parts of the flag configuration that will not be copied.  # noqa: E501

        :return: The excluded_actions of this CopyFeatureFlagRequest.
        :rtype: List[CopyActions]
        """
        return self._excluded_actions

    @excluded_actions.setter
    def excluded_actions(self, excluded_actions: List[CopyActions]):
        """Sets the excluded_actions of this CopyFeatureFlagRequest.

        Define the parts of the flag configuration that will not be copied.  # noqa: E501

        :param excluded_actions: The excluded_actions of this CopyFeatureFlagRequest.
        :type excluded_actions: List[CopyActions]
        """

        self._excluded_actions = excluded_actions

    @property
    def included_actions(self) -> List[CopyActions]:
        """Gets the included_actions of this CopyFeatureFlagRequest.

        Define the parts of the flag configuration that will be copied.  # noqa: E501

        :return: The included_actions of this CopyFeatureFlagRequest.
        :rtype: List[CopyActions]
        """
        return self._included_actions

    @included_actions.setter
    def included_actions(self, included_actions: List[CopyActions]):
        """Sets the included_actions of this CopyFeatureFlagRequest.

        Define the parts of the flag configuration that will be copied.  # noqa: E501

        :param included_actions: The included_actions of this CopyFeatureFlagRequest.
        :type included_actions: List[CopyActions]
        """

        self._included_actions = included_actions

    @property
    def source(self) -> FeatureFlagCopyObject:
        """Gets the source of this CopyFeatureFlagRequest.


        :return: The source of this CopyFeatureFlagRequest.
        :rtype: FeatureFlagCopyObject
        """
        return self._source

    @source.setter
    def source(self, source: FeatureFlagCopyObject):
        """Sets the source of this CopyFeatureFlagRequest.


        :param source: The source of this CopyFeatureFlagRequest.
        :type source: FeatureFlagCopyObject
        """

        self._source = source

    @property
    def target(self) -> FeatureFlagCopyObject:
        """Gets the target of this CopyFeatureFlagRequest.


        :return: The target of this CopyFeatureFlagRequest.
        :rtype: FeatureFlagCopyObject
        """
        return self._target

    @target.setter
    def target(self, target: FeatureFlagCopyObject):
        """Sets the target of this CopyFeatureFlagRequest.


        :param target: The target of this CopyFeatureFlagRequest.
        :type target: FeatureFlagCopyObject
        """

        self._target = target
