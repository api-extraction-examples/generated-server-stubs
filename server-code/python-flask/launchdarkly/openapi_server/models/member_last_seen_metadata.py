from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class MemberLastSeenMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, token_id=None):  # noqa: E501
        """MemberLastSeenMetadata - a model defined in OpenAPI

        :param token_id: The token_id of this MemberLastSeenMetadata.  # noqa: E501
        :type token_id: str
        """
        self.openapi_types = {
            'token_id': str
        }

        self.attribute_map = {
            'token_id': 'tokenId'
        }

        self._token_id = token_id

    @classmethod
    def from_dict(cls, dikt) -> 'MemberLastSeenMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Member__lastSeenMetadata of this MemberLastSeenMetadata.  # noqa: E501
        :rtype: MemberLastSeenMetadata
        """
        return util.deserialize_model(dikt, cls)

    @property
    def token_id(self) -> str:
        """Gets the token_id of this MemberLastSeenMetadata.

        If the last time this member accessed LaunchDarkly was using the REST API, this value will be set to the ID of the personal access token used.  # noqa: E501

        :return: The token_id of this MemberLastSeenMetadata.
        :rtype: str
        """
        return self._token_id

    @token_id.setter
    def token_id(self, token_id: str):
        """Sets the token_id of this MemberLastSeenMetadata.

        If the last time this member accessed LaunchDarkly was using the REST API, this value will be set to the ID of the personal access token used.  # noqa: E501

        :param token_id: The token_id of this MemberLastSeenMetadata.
        :type token_id: str
        """

        self._token_id = token_id
