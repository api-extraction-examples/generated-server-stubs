from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.stream_usage_links import StreamUsageLinks
from openapi_server import util

from openapi_server.models.stream_usage_links import StreamUsageLinks  # noqa: E501

class Streams(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, links=None):  # noqa: E501
        """Streams - a model defined in OpenAPI

        :param links: The links of this Streams.  # noqa: E501
        :type links: StreamUsageLinks
        """
        self.openapi_types = {
            'links': StreamUsageLinks
        }

        self.attribute_map = {
            'links': '_links'
        }

        self._links = links

    @classmethod
    def from_dict(cls, dikt) -> 'Streams':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Streams of this Streams.  # noqa: E501
        :rtype: Streams
        """
        return util.deserialize_model(dikt, cls)

    @property
    def links(self) -> StreamUsageLinks:
        """Gets the links of this Streams.


        :return: The links of this Streams.
        :rtype: StreamUsageLinks
        """
        return self._links

    @links.setter
    def links(self, links: StreamUsageLinks):
        """Sets the links of this Streams.


        :param links: The links of this Streams.
        :type links: StreamUsageLinks
        """

        self._links = links
