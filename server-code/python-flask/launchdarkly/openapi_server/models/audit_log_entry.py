from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.audit_log_entry_target import AuditLogEntryTarget
from openapi_server.models.links import Links
from openapi_server.models.member import Member
from openapi_server import util

from openapi_server.models.audit_log_entry_target import AuditLogEntryTarget  # noqa: E501
from openapi_server.models.links import Links  # noqa: E501
from openapi_server.models.member import Member  # noqa: E501

class AuditLogEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, links=None, comment=None, _date=None, description=None, kind=None, member=None, name=None, short_description=None, target=None, title=None, title_verb=None):  # noqa: E501
        """AuditLogEntry - a model defined in OpenAPI

        :param id: The id of this AuditLogEntry.  # noqa: E501
        :type id: str
        :param links: The links of this AuditLogEntry.  # noqa: E501
        :type links: Links
        :param comment: The comment of this AuditLogEntry.  # noqa: E501
        :type comment: str
        :param _date: The _date of this AuditLogEntry.  # noqa: E501
        :type _date: int
        :param description: The description of this AuditLogEntry.  # noqa: E501
        :type description: str
        :param kind: The kind of this AuditLogEntry.  # noqa: E501
        :type kind: str
        :param member: The member of this AuditLogEntry.  # noqa: E501
        :type member: Member
        :param name: The name of this AuditLogEntry.  # noqa: E501
        :type name: str
        :param short_description: The short_description of this AuditLogEntry.  # noqa: E501
        :type short_description: str
        :param target: The target of this AuditLogEntry.  # noqa: E501
        :type target: AuditLogEntryTarget
        :param title: The title of this AuditLogEntry.  # noqa: E501
        :type title: str
        :param title_verb: The title_verb of this AuditLogEntry.  # noqa: E501
        :type title_verb: str
        """
        self.openapi_types = {
            'id': str,
            'links': Links,
            'comment': str,
            '_date': int,
            'description': str,
            'kind': str,
            'member': Member,
            'name': str,
            'short_description': str,
            'target': AuditLogEntryTarget,
            'title': str,
            'title_verb': str
        }

        self.attribute_map = {
            'id': '_id',
            'links': '_links',
            'comment': 'comment',
            '_date': 'date',
            'description': 'description',
            'kind': 'kind',
            'member': 'member',
            'name': 'name',
            'short_description': 'shortDescription',
            'target': 'target',
            'title': 'title',
            'title_verb': 'titleVerb'
        }

        self._id = id
        self._links = links
        self._comment = comment
        self.__date = _date
        self._description = description
        self._kind = kind
        self._member = member
        self._name = name
        self._short_description = short_description
        self._target = target
        self._title = title
        self._title_verb = title_verb

    @classmethod
    def from_dict(cls, dikt) -> 'AuditLogEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AuditLogEntry of this AuditLogEntry.  # noqa: E501
        :rtype: AuditLogEntry
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this AuditLogEntry.

        The unique resource id.  # noqa: E501

        :return: The id of this AuditLogEntry.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this AuditLogEntry.

        The unique resource id.  # noqa: E501

        :param id: The id of this AuditLogEntry.
        :type id: str
        """

        self._id = id

    @property
    def links(self) -> Links:
        """Gets the links of this AuditLogEntry.


        :return: The links of this AuditLogEntry.
        :rtype: Links
        """
        return self._links

    @links.setter
    def links(self, links: Links):
        """Sets the links of this AuditLogEntry.


        :param links: The links of this AuditLogEntry.
        :type links: Links
        """

        self._links = links

    @property
    def comment(self) -> str:
        """Gets the comment of this AuditLogEntry.


        :return: The comment of this AuditLogEntry.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment: str):
        """Sets the comment of this AuditLogEntry.


        :param comment: The comment of this AuditLogEntry.
        :type comment: str
        """

        self._comment = comment

    @property
    def _date(self) -> int:
        """Gets the _date of this AuditLogEntry.


        :return: The _date of this AuditLogEntry.
        :rtype: int
        """
        return self.__date

    @_date.setter
    def _date(self, _date: int):
        """Sets the _date of this AuditLogEntry.


        :param _date: The _date of this AuditLogEntry.
        :type _date: int
        """

        self.__date = _date

    @property
    def description(self) -> str:
        """Gets the description of this AuditLogEntry.


        :return: The description of this AuditLogEntry.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this AuditLogEntry.


        :param description: The description of this AuditLogEntry.
        :type description: str
        """

        self._description = description

    @property
    def kind(self) -> str:
        """Gets the kind of this AuditLogEntry.


        :return: The kind of this AuditLogEntry.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind: str):
        """Sets the kind of this AuditLogEntry.


        :param kind: The kind of this AuditLogEntry.
        :type kind: str
        """

        self._kind = kind

    @property
    def member(self) -> Member:
        """Gets the member of this AuditLogEntry.


        :return: The member of this AuditLogEntry.
        :rtype: Member
        """
        return self._member

    @member.setter
    def member(self, member: Member):
        """Sets the member of this AuditLogEntry.


        :param member: The member of this AuditLogEntry.
        :type member: Member
        """

        self._member = member

    @property
    def name(self) -> str:
        """Gets the name of this AuditLogEntry.


        :return: The name of this AuditLogEntry.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this AuditLogEntry.


        :param name: The name of this AuditLogEntry.
        :type name: str
        """

        self._name = name

    @property
    def short_description(self) -> str:
        """Gets the short_description of this AuditLogEntry.


        :return: The short_description of this AuditLogEntry.
        :rtype: str
        """
        return self._short_description

    @short_description.setter
    def short_description(self, short_description: str):
        """Sets the short_description of this AuditLogEntry.


        :param short_description: The short_description of this AuditLogEntry.
        :type short_description: str
        """

        self._short_description = short_description

    @property
    def target(self) -> AuditLogEntryTarget:
        """Gets the target of this AuditLogEntry.


        :return: The target of this AuditLogEntry.
        :rtype: AuditLogEntryTarget
        """
        return self._target

    @target.setter
    def target(self, target: AuditLogEntryTarget):
        """Sets the target of this AuditLogEntry.


        :param target: The target of this AuditLogEntry.
        :type target: AuditLogEntryTarget
        """

        self._target = target

    @property
    def title(self) -> str:
        """Gets the title of this AuditLogEntry.


        :return: The title of this AuditLogEntry.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this AuditLogEntry.


        :param title: The title of this AuditLogEntry.
        :type title: str
        """

        self._title = title

    @property
    def title_verb(self) -> str:
        """Gets the title_verb of this AuditLogEntry.


        :return: The title_verb of this AuditLogEntry.
        :rtype: str
        """
        return self._title_verb

    @title_verb.setter
    def title_verb(self, title_verb: str):
        """Sets the title_verb of this AuditLogEntry.


        :param title_verb: The title_verb of this AuditLogEntry.
        :type title_verb: str
        """

        self._title_verb = title_verb
