from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class StreamUsageSeries(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _0=None, time=None):  # noqa: E501
        """StreamUsageSeries - a model defined in OpenAPI

        :param _0: The _0 of this StreamUsageSeries.  # noqa: E501
        :type _0: int
        :param time: The time of this StreamUsageSeries.  # noqa: E501
        :type time: int
        """
        self.openapi_types = {
            '_0': int,
            'time': int
        }

        self.attribute_map = {
            '_0': '0',
            'time': 'time'
        }

        self.__0 = _0
        self._time = time

    @classmethod
    def from_dict(cls, dikt) -> 'StreamUsageSeries':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The StreamUsageSeries of this StreamUsageSeries.  # noqa: E501
        :rtype: StreamUsageSeries
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _0(self) -> int:
        """Gets the _0 of this StreamUsageSeries.

        A key corresponding to a time series data point.  # noqa: E501

        :return: The _0 of this StreamUsageSeries.
        :rtype: int
        """
        return self.__0

    @_0.setter
    def _0(self, _0: int):
        """Sets the _0 of this StreamUsageSeries.

        A key corresponding to a time series data point.  # noqa: E501

        :param _0: The _0 of this StreamUsageSeries.
        :type _0: int
        """

        self.__0 = _0

    @property
    def time(self) -> int:
        """Gets the time of this StreamUsageSeries.

        A unix epoch time in milliseconds specifying the creation time of this flag.  # noqa: E501

        :return: The time of this StreamUsageSeries.
        :rtype: int
        """
        return self._time

    @time.setter
    def time(self, time: int):
        """Sets the time of this StreamUsageSeries.

        A unix epoch time in milliseconds specifying the creation time of this flag.  # noqa: E501

        :param time: The time of this StreamUsageSeries.
        :type time: int
        """

        self._time = time
