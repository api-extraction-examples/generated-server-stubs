from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.rollout import Rollout
from openapi_server import util

from openapi_server.models.rollout import Rollout  # noqa: E501

class Fallthrough(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rollout=None, variation=None):  # noqa: E501
        """Fallthrough - a model defined in OpenAPI

        :param rollout: The rollout of this Fallthrough.  # noqa: E501
        :type rollout: Rollout
        :param variation: The variation of this Fallthrough.  # noqa: E501
        :type variation: int
        """
        self.openapi_types = {
            'rollout': Rollout,
            'variation': int
        }

        self.attribute_map = {
            'rollout': 'rollout',
            'variation': 'variation'
        }

        self._rollout = rollout
        self._variation = variation

    @classmethod
    def from_dict(cls, dikt) -> 'Fallthrough':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Fallthrough of this Fallthrough.  # noqa: E501
        :rtype: Fallthrough
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rollout(self) -> Rollout:
        """Gets the rollout of this Fallthrough.


        :return: The rollout of this Fallthrough.
        :rtype: Rollout
        """
        return self._rollout

    @rollout.setter
    def rollout(self, rollout: Rollout):
        """Sets the rollout of this Fallthrough.


        :param rollout: The rollout of this Fallthrough.
        :type rollout: Rollout
        """

        self._rollout = rollout

    @property
    def variation(self) -> int:
        """Gets the variation of this Fallthrough.


        :return: The variation of this Fallthrough.
        :rtype: int
        """
        return self._variation

    @variation.setter
    def variation(self, variation: int):
        """Sets the variation of this Fallthrough.


        :param variation: The variation of this Fallthrough.
        :type variation: int
        """

        self._variation = variation
