from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.relay_proxy_config import RelayProxyConfig
from openapi_server import util

from openapi_server.models.relay_proxy_config import RelayProxyConfig  # noqa: E501

class RelayProxyConfigs(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, items=None):  # noqa: E501
        """RelayProxyConfigs - a model defined in OpenAPI

        :param items: The items of this RelayProxyConfigs.  # noqa: E501
        :type items: List[RelayProxyConfig]
        """
        self.openapi_types = {
            'items': List[RelayProxyConfig]
        }

        self.attribute_map = {
            'items': 'items'
        }

        self._items = items

    @classmethod
    def from_dict(cls, dikt) -> 'RelayProxyConfigs':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RelayProxyConfigs of this RelayProxyConfigs.  # noqa: E501
        :rtype: RelayProxyConfigs
        """
        return util.deserialize_model(dikt, cls)

    @property
    def items(self) -> List[RelayProxyConfig]:
        """Gets the items of this RelayProxyConfigs.


        :return: The items of this RelayProxyConfigs.
        :rtype: List[RelayProxyConfig]
        """
        return self._items

    @items.setter
    def items(self, items: List[RelayProxyConfig]):
        """Sets the items of this RelayProxyConfigs.


        :param items: The items of this RelayProxyConfigs.
        :type items: List[RelayProxyConfig]
        """

        self._items = items
