from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class IntegrationSubscriptionStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error_count=None, last_success=None, success_count=None):  # noqa: E501
        """IntegrationSubscriptionStatus - a model defined in OpenAPI

        :param error_count: The error_count of this IntegrationSubscriptionStatus.  # noqa: E501
        :type error_count: int
        :param last_success: The last_success of this IntegrationSubscriptionStatus.  # noqa: E501
        :type last_success: int
        :param success_count: The success_count of this IntegrationSubscriptionStatus.  # noqa: E501
        :type success_count: int
        """
        self.openapi_types = {
            'error_count': int,
            'last_success': int,
            'success_count': int
        }

        self.attribute_map = {
            'error_count': 'errorCount',
            'last_success': 'lastSuccess',
            'success_count': 'successCount'
        }

        self._error_count = error_count
        self._last_success = last_success
        self._success_count = success_count

    @classmethod
    def from_dict(cls, dikt) -> 'IntegrationSubscriptionStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The IntegrationSubscription__status of this IntegrationSubscriptionStatus.  # noqa: E501
        :rtype: IntegrationSubscriptionStatus
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error_count(self) -> int:
        """Gets the error_count of this IntegrationSubscriptionStatus.


        :return: The error_count of this IntegrationSubscriptionStatus.
        :rtype: int
        """
        return self._error_count

    @error_count.setter
    def error_count(self, error_count: int):
        """Sets the error_count of this IntegrationSubscriptionStatus.


        :param error_count: The error_count of this IntegrationSubscriptionStatus.
        :type error_count: int
        """

        self._error_count = error_count

    @property
    def last_success(self) -> int:
        """Gets the last_success of this IntegrationSubscriptionStatus.

        A unix epoch time in milliseconds specifying the last time this integration was successfully used.  # noqa: E501

        :return: The last_success of this IntegrationSubscriptionStatus.
        :rtype: int
        """
        return self._last_success

    @last_success.setter
    def last_success(self, last_success: int):
        """Sets the last_success of this IntegrationSubscriptionStatus.

        A unix epoch time in milliseconds specifying the last time this integration was successfully used.  # noqa: E501

        :param last_success: The last_success of this IntegrationSubscriptionStatus.
        :type last_success: int
        """

        self._last_success = last_success

    @property
    def success_count(self) -> int:
        """Gets the success_count of this IntegrationSubscriptionStatus.


        :return: The success_count of this IntegrationSubscriptionStatus.
        :rtype: int
        """
        return self._success_count

    @success_count.setter
    def success_count(self, success_count: int):
        """Sets the success_count of this IntegrationSubscriptionStatus.


        :param success_count: The success_count of this IntegrationSubscriptionStatus.
        :type success_count: int
        """

        self._success_count = success_count
