from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class DestinationAmazonKinesis(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, region=None, role_arn=None, stream_name=None):  # noqa: E501
        """DestinationAmazonKinesis - a model defined in OpenAPI

        :param region: The region of this DestinationAmazonKinesis.  # noqa: E501
        :type region: str
        :param role_arn: The role_arn of this DestinationAmazonKinesis.  # noqa: E501
        :type role_arn: str
        :param stream_name: The stream_name of this DestinationAmazonKinesis.  # noqa: E501
        :type stream_name: str
        """
        self.openapi_types = {
            'region': str,
            'role_arn': str,
            'stream_name': str
        }

        self.attribute_map = {
            'region': 'region',
            'role_arn': 'roleArn',
            'stream_name': 'streamName'
        }

        self._region = region
        self._role_arn = role_arn
        self._stream_name = stream_name

    @classmethod
    def from_dict(cls, dikt) -> 'DestinationAmazonKinesis':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DestinationAmazonKinesis of this DestinationAmazonKinesis.  # noqa: E501
        :rtype: DestinationAmazonKinesis
        """
        return util.deserialize_model(dikt, cls)

    @property
    def region(self) -> str:
        """Gets the region of this DestinationAmazonKinesis.


        :return: The region of this DestinationAmazonKinesis.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region: str):
        """Sets the region of this DestinationAmazonKinesis.


        :param region: The region of this DestinationAmazonKinesis.
        :type region: str
        """

        self._region = region

    @property
    def role_arn(self) -> str:
        """Gets the role_arn of this DestinationAmazonKinesis.


        :return: The role_arn of this DestinationAmazonKinesis.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn: str):
        """Sets the role_arn of this DestinationAmazonKinesis.


        :param role_arn: The role_arn of this DestinationAmazonKinesis.
        :type role_arn: str
        """

        self._role_arn = role_arn

    @property
    def stream_name(self) -> str:
        """Gets the stream_name of this DestinationAmazonKinesis.


        :return: The stream_name of this DestinationAmazonKinesis.
        :rtype: str
        """
        return self._stream_name

    @stream_name.setter
    def stream_name(self, stream_name: str):
        """Sets the stream_name of this DestinationAmazonKinesis.


        :param stream_name: The stream_name of this DestinationAmazonKinesis.
        :type stream_name: str
        """

        self._stream_name = stream_name
