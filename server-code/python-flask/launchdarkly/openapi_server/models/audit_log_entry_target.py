from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.links import Links
from openapi_server import util

from openapi_server.models.links import Links  # noqa: E501

class AuditLogEntryTarget(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, links=None, name=None, resources=None):  # noqa: E501
        """AuditLogEntryTarget - a model defined in OpenAPI

        :param links: The links of this AuditLogEntryTarget.  # noqa: E501
        :type links: Links
        :param name: The name of this AuditLogEntryTarget.  # noqa: E501
        :type name: str
        :param resources: The resources of this AuditLogEntryTarget.  # noqa: E501
        :type resources: List[str]
        """
        self.openapi_types = {
            'links': Links,
            'name': str,
            'resources': List[str]
        }

        self.attribute_map = {
            'links': '_links',
            'name': 'name',
            'resources': 'resources'
        }

        self._links = links
        self._name = name
        self._resources = resources

    @classmethod
    def from_dict(cls, dikt) -> 'AuditLogEntryTarget':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AuditLogEntry_target of this AuditLogEntryTarget.  # noqa: E501
        :rtype: AuditLogEntryTarget
        """
        return util.deserialize_model(dikt, cls)

    @property
    def links(self) -> Links:
        """Gets the links of this AuditLogEntryTarget.


        :return: The links of this AuditLogEntryTarget.
        :rtype: Links
        """
        return self._links

    @links.setter
    def links(self, links: Links):
        """Sets the links of this AuditLogEntryTarget.


        :param links: The links of this AuditLogEntryTarget.
        :type links: Links
        """

        self._links = links

    @property
    def name(self) -> str:
        """Gets the name of this AuditLogEntryTarget.


        :return: The name of this AuditLogEntryTarget.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this AuditLogEntryTarget.


        :param name: The name of this AuditLogEntryTarget.
        :type name: str
        """

        self._name = name

    @property
    def resources(self) -> List[str]:
        """Gets the resources of this AuditLogEntryTarget.


        :return: The resources of this AuditLogEntryTarget.
        :rtype: List[str]
        """
        return self._resources

    @resources.setter
    def resources(self, resources: List[str]):
        """Sets the resources of this AuditLogEntryTarget.


        :param resources: The resources of this AuditLogEntryTarget.
        :type resources: List[str]
        """

        self._resources = resources
