from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class DestinationMParticle(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_key=None, environment=None, secret=None, user_identity=None):  # noqa: E501
        """DestinationMParticle - a model defined in OpenAPI

        :param api_key: The api_key of this DestinationMParticle.  # noqa: E501
        :type api_key: str
        :param environment: The environment of this DestinationMParticle.  # noqa: E501
        :type environment: str
        :param secret: The secret of this DestinationMParticle.  # noqa: E501
        :type secret: str
        :param user_identity: The user_identity of this DestinationMParticle.  # noqa: E501
        :type user_identity: str
        """
        self.openapi_types = {
            'api_key': str,
            'environment': str,
            'secret': str,
            'user_identity': str
        }

        self.attribute_map = {
            'api_key': 'apiKey',
            'environment': 'environment',
            'secret': 'secret',
            'user_identity': 'userIdentity'
        }

        self._api_key = api_key
        self._environment = environment
        self._secret = secret
        self._user_identity = user_identity

    @classmethod
    def from_dict(cls, dikt) -> 'DestinationMParticle':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DestinationMParticle of this DestinationMParticle.  # noqa: E501
        :rtype: DestinationMParticle
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_key(self) -> str:
        """Gets the api_key of this DestinationMParticle.


        :return: The api_key of this DestinationMParticle.
        :rtype: str
        """
        return self._api_key

    @api_key.setter
    def api_key(self, api_key: str):
        """Sets the api_key of this DestinationMParticle.


        :param api_key: The api_key of this DestinationMParticle.
        :type api_key: str
        """

        self._api_key = api_key

    @property
    def environment(self) -> str:
        """Gets the environment of this DestinationMParticle.


        :return: The environment of this DestinationMParticle.
        :rtype: str
        """
        return self._environment

    @environment.setter
    def environment(self, environment: str):
        """Sets the environment of this DestinationMParticle.


        :param environment: The environment of this DestinationMParticle.
        :type environment: str
        """

        self._environment = environment

    @property
    def secret(self) -> str:
        """Gets the secret of this DestinationMParticle.


        :return: The secret of this DestinationMParticle.
        :rtype: str
        """
        return self._secret

    @secret.setter
    def secret(self, secret: str):
        """Sets the secret of this DestinationMParticle.


        :param secret: The secret of this DestinationMParticle.
        :type secret: str
        """

        self._secret = secret

    @property
    def user_identity(self) -> str:
        """Gets the user_identity of this DestinationMParticle.


        :return: The user_identity of this DestinationMParticle.
        :rtype: str
        """
        return self._user_identity

    @user_identity.setter
    def user_identity(self, user_identity: str):
        """Sets the user_identity of this DestinationMParticle.


        :param user_identity: The user_identity of this DestinationMParticle.
        :type user_identity: str
        """

        self._user_identity = user_identity
