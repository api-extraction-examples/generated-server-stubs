from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.statement import Statement
from openapi_server import util

from openapi_server.models.statement import Statement  # noqa: E501

class PostTokenRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, custom_role_ids=None, default_api_version=None, inline_role=None, name=None, role=None, service_token=None):  # noqa: E501
        """PostTokenRequest - a model defined in OpenAPI

        :param custom_role_ids: The custom_role_ids of this PostTokenRequest.  # noqa: E501
        :type custom_role_ids: List[str]
        :param default_api_version: The default_api_version of this PostTokenRequest.  # noqa: E501
        :type default_api_version: int
        :param inline_role: The inline_role of this PostTokenRequest.  # noqa: E501
        :type inline_role: List[Statement]
        :param name: The name of this PostTokenRequest.  # noqa: E501
        :type name: str
        :param role: The role of this PostTokenRequest.  # noqa: E501
        :type role: str
        :param service_token: The service_token of this PostTokenRequest.  # noqa: E501
        :type service_token: bool
        """
        self.openapi_types = {
            'custom_role_ids': List[str],
            'default_api_version': int,
            'inline_role': List[Statement],
            'name': str,
            'role': str,
            'service_token': bool
        }

        self.attribute_map = {
            'custom_role_ids': 'customRoleIds',
            'default_api_version': 'defaultApiVersion',
            'inline_role': 'inlineRole',
            'name': 'name',
            'role': 'role',
            'service_token': 'serviceToken'
        }

        self._custom_role_ids = custom_role_ids
        self._default_api_version = default_api_version
        self._inline_role = inline_role
        self._name = name
        self._role = role
        self._service_token = service_token

    @classmethod
    def from_dict(cls, dikt) -> 'PostTokenRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The postToken_request of this PostTokenRequest.  # noqa: E501
        :rtype: PostTokenRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def custom_role_ids(self) -> List[str]:
        """Gets the custom_role_ids of this PostTokenRequest.

        A list of custom role IDs to use as access limits for the access token  # noqa: E501

        :return: The custom_role_ids of this PostTokenRequest.
        :rtype: List[str]
        """
        return self._custom_role_ids

    @custom_role_ids.setter
    def custom_role_ids(self, custom_role_ids: List[str]):
        """Sets the custom_role_ids of this PostTokenRequest.

        A list of custom role IDs to use as access limits for the access token  # noqa: E501

        :param custom_role_ids: The custom_role_ids of this PostTokenRequest.
        :type custom_role_ids: List[str]
        """

        self._custom_role_ids = custom_role_ids

    @property
    def default_api_version(self) -> int:
        """Gets the default_api_version of this PostTokenRequest.

        The default API version for this token  # noqa: E501

        :return: The default_api_version of this PostTokenRequest.
        :rtype: int
        """
        return self._default_api_version

    @default_api_version.setter
    def default_api_version(self, default_api_version: int):
        """Sets the default_api_version of this PostTokenRequest.

        The default API version for this token  # noqa: E501

        :param default_api_version: The default_api_version of this PostTokenRequest.
        :type default_api_version: int
        """

        self._default_api_version = default_api_version

    @property
    def inline_role(self) -> List[Statement]:
        """Gets the inline_role of this PostTokenRequest.


        :return: The inline_role of this PostTokenRequest.
        :rtype: List[Statement]
        """
        return self._inline_role

    @inline_role.setter
    def inline_role(self, inline_role: List[Statement]):
        """Sets the inline_role of this PostTokenRequest.


        :param inline_role: The inline_role of this PostTokenRequest.
        :type inline_role: List[Statement]
        """

        self._inline_role = inline_role

    @property
    def name(self) -> str:
        """Gets the name of this PostTokenRequest.

        A human-friendly name for the access token  # noqa: E501

        :return: The name of this PostTokenRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this PostTokenRequest.

        A human-friendly name for the access token  # noqa: E501

        :param name: The name of this PostTokenRequest.
        :type name: str
        """

        self._name = name

    @property
    def role(self) -> str:
        """Gets the role of this PostTokenRequest.

        The name of a built-in role for the token  # noqa: E501

        :return: The role of this PostTokenRequest.
        :rtype: str
        """
        return self._role

    @role.setter
    def role(self, role: str):
        """Sets the role of this PostTokenRequest.

        The name of a built-in role for the token  # noqa: E501

        :param role: The role of this PostTokenRequest.
        :type role: str
        """

        self._role = role

    @property
    def service_token(self) -> bool:
        """Gets the service_token of this PostTokenRequest.

        Whether the token will be a service token https://docs.launchdarkly.com/home/account-security/api-access-tokens#service-tokens  # noqa: E501

        :return: The service_token of this PostTokenRequest.
        :rtype: bool
        """
        return self._service_token

    @service_token.setter
    def service_token(self, service_token: bool):
        """Sets the service_token of this PostTokenRequest.

        Whether the token will be a service token https://docs.launchdarkly.com/home/account-security/api-access-tokens#service-tokens  # noqa: E501

        :param service_token: The service_token of this PostTokenRequest.
        :type service_token: bool
        """

        self._service_token = service_token
