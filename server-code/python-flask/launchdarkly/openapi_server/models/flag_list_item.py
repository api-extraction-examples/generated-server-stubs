from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.links import Links
from openapi_server.models.site import Site
from openapi_server import util

from openapi_server.models.links import Links  # noqa: E501
from openapi_server.models.site import Site  # noqa: E501

class FlagListItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, links=None, site=None, key=None, name=None):  # noqa: E501
        """FlagListItem - a model defined in OpenAPI

        :param links: The links of this FlagListItem.  # noqa: E501
        :type links: Links
        :param site: The site of this FlagListItem.  # noqa: E501
        :type site: Site
        :param key: The key of this FlagListItem.  # noqa: E501
        :type key: str
        :param name: The name of this FlagListItem.  # noqa: E501
        :type name: str
        """
        self.openapi_types = {
            'links': Links,
            'site': Site,
            'key': str,
            'name': str
        }

        self.attribute_map = {
            'links': '_links',
            'site': '_site',
            'key': 'key',
            'name': 'name'
        }

        self._links = links
        self._site = site
        self._key = key
        self._name = name

    @classmethod
    def from_dict(cls, dikt) -> 'FlagListItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FlagListItem of this FlagListItem.  # noqa: E501
        :rtype: FlagListItem
        """
        return util.deserialize_model(dikt, cls)

    @property
    def links(self) -> Links:
        """Gets the links of this FlagListItem.


        :return: The links of this FlagListItem.
        :rtype: Links
        """
        return self._links

    @links.setter
    def links(self, links: Links):
        """Sets the links of this FlagListItem.


        :param links: The links of this FlagListItem.
        :type links: Links
        """

        self._links = links

    @property
    def site(self) -> Site:
        """Gets the site of this FlagListItem.


        :return: The site of this FlagListItem.
        :rtype: Site
        """
        return self._site

    @site.setter
    def site(self, site: Site):
        """Sets the site of this FlagListItem.


        :param site: The site of this FlagListItem.
        :type site: Site
        """

        self._site = site

    @property
    def key(self) -> str:
        """Gets the key of this FlagListItem.


        :return: The key of this FlagListItem.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key: str):
        """Sets the key of this FlagListItem.


        :param key: The key of this FlagListItem.
        :type key: str
        """

        self._key = key

    @property
    def name(self) -> str:
        """Gets the name of this FlagListItem.


        :return: The name of this FlagListItem.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this FlagListItem.


        :param name: The name of this FlagListItem.
        :type name: str
        """

        self._name = name
