from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.semantic_patch_instruction_inner import SemanticPatchInstructionInner
from openapi_server import util

from openapi_server.models.semantic_patch_instruction_inner import SemanticPatchInstructionInner  # noqa: E501

class GetFlagConfigScheduledChangesConflictsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, execution_date=None, instructions=None):  # noqa: E501
        """GetFlagConfigScheduledChangesConflictsRequest - a model defined in OpenAPI

        :param execution_date: The execution_date of this GetFlagConfigScheduledChangesConflictsRequest.  # noqa: E501
        :type execution_date: int
        :param instructions: The instructions of this GetFlagConfigScheduledChangesConflictsRequest.  # noqa: E501
        :type instructions: List[SemanticPatchInstructionInner]
        """
        self.openapi_types = {
            'execution_date': int,
            'instructions': List[SemanticPatchInstructionInner]
        }

        self.attribute_map = {
            'execution_date': 'executionDate',
            'instructions': 'instructions'
        }

        self._execution_date = execution_date
        self._instructions = instructions

    @classmethod
    def from_dict(cls, dikt) -> 'GetFlagConfigScheduledChangesConflictsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The getFlagConfigScheduledChangesConflicts_request of this GetFlagConfigScheduledChangesConflictsRequest.  # noqa: E501
        :rtype: GetFlagConfigScheduledChangesConflictsRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def execution_date(self) -> int:
        """Gets the execution_date of this GetFlagConfigScheduledChangesConflictsRequest.

        A unix epoch time in milliseconds specifying the date the scheduled changes will be applied  # noqa: E501

        :return: The execution_date of this GetFlagConfigScheduledChangesConflictsRequest.
        :rtype: int
        """
        return self._execution_date

    @execution_date.setter
    def execution_date(self, execution_date: int):
        """Sets the execution_date of this GetFlagConfigScheduledChangesConflictsRequest.

        A unix epoch time in milliseconds specifying the date the scheduled changes will be applied  # noqa: E501

        :param execution_date: The execution_date of this GetFlagConfigScheduledChangesConflictsRequest.
        :type execution_date: int
        """

        self._execution_date = execution_date

    @property
    def instructions(self) -> List[SemanticPatchInstructionInner]:
        """Gets the instructions of this GetFlagConfigScheduledChangesConflictsRequest.


        :return: The instructions of this GetFlagConfigScheduledChangesConflictsRequest.
        :rtype: List[SemanticPatchInstructionInner]
        """
        return self._instructions

    @instructions.setter
    def instructions(self, instructions: List[SemanticPatchInstructionInner]):
        """Sets the instructions of this GetFlagConfigScheduledChangesConflictsRequest.


        :param instructions: The instructions of this GetFlagConfigScheduledChangesConflictsRequest.
        :type instructions: List[SemanticPatchInstructionInner]
        """

        self._instructions = instructions
