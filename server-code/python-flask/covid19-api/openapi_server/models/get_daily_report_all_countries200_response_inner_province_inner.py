from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class GetDailyReportAllCountries200ResponseInnerProvinceInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active=None, confirmed=None, deaths=None, recovered=None):  # noqa: E501
        """GetDailyReportAllCountries200ResponseInnerProvinceInner - a model defined in OpenAPI

        :param active: The active of this GetDailyReportAllCountries200ResponseInnerProvinceInner.  # noqa: E501
        :type active: int
        :param confirmed: The confirmed of this GetDailyReportAllCountries200ResponseInnerProvinceInner.  # noqa: E501
        :type confirmed: int
        :param deaths: The deaths of this GetDailyReportAllCountries200ResponseInnerProvinceInner.  # noqa: E501
        :type deaths: int
        :param recovered: The recovered of this GetDailyReportAllCountries200ResponseInnerProvinceInner.  # noqa: E501
        :type recovered: int
        """
        self.openapi_types = {
            'active': int,
            'confirmed': int,
            'deaths': int,
            'recovered': int
        }

        self.attribute_map = {
            'active': 'active',
            'confirmed': 'confirmed',
            'deaths': 'deaths',
            'recovered': 'recovered'
        }

        self._active = active
        self._confirmed = confirmed
        self._deaths = deaths
        self._recovered = recovered

    @classmethod
    def from_dict(cls, dikt) -> 'GetDailyReportAllCountries200ResponseInnerProvinceInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The getDailyReportAllCountries_200_response_inner_province_inner of this GetDailyReportAllCountries200ResponseInnerProvinceInner.  # noqa: E501
        :rtype: GetDailyReportAllCountries200ResponseInnerProvinceInner
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active(self) -> int:
        """Gets the active of this GetDailyReportAllCountries200ResponseInnerProvinceInner.


        :return: The active of this GetDailyReportAllCountries200ResponseInnerProvinceInner.
        :rtype: int
        """
        return self._active

    @active.setter
    def active(self, active: int):
        """Sets the active of this GetDailyReportAllCountries200ResponseInnerProvinceInner.


        :param active: The active of this GetDailyReportAllCountries200ResponseInnerProvinceInner.
        :type active: int
        """

        self._active = active

    @property
    def confirmed(self) -> int:
        """Gets the confirmed of this GetDailyReportAllCountries200ResponseInnerProvinceInner.


        :return: The confirmed of this GetDailyReportAllCountries200ResponseInnerProvinceInner.
        :rtype: int
        """
        return self._confirmed

    @confirmed.setter
    def confirmed(self, confirmed: int):
        """Sets the confirmed of this GetDailyReportAllCountries200ResponseInnerProvinceInner.


        :param confirmed: The confirmed of this GetDailyReportAllCountries200ResponseInnerProvinceInner.
        :type confirmed: int
        """

        self._confirmed = confirmed

    @property
    def deaths(self) -> int:
        """Gets the deaths of this GetDailyReportAllCountries200ResponseInnerProvinceInner.


        :return: The deaths of this GetDailyReportAllCountries200ResponseInnerProvinceInner.
        :rtype: int
        """
        return self._deaths

    @deaths.setter
    def deaths(self, deaths: int):
        """Sets the deaths of this GetDailyReportAllCountries200ResponseInnerProvinceInner.


        :param deaths: The deaths of this GetDailyReportAllCountries200ResponseInnerProvinceInner.
        :type deaths: int
        """

        self._deaths = deaths

    @property
    def recovered(self) -> int:
        """Gets the recovered of this GetDailyReportAllCountries200ResponseInnerProvinceInner.


        :return: The recovered of this GetDailyReportAllCountries200ResponseInnerProvinceInner.
        :rtype: int
        """
        return self._recovered

    @recovered.setter
    def recovered(self, recovered: int):
        """Sets the recovered of this GetDailyReportAllCountries200ResponseInnerProvinceInner.


        :param recovered: The recovered of this GetDailyReportAllCountries200ResponseInnerProvinceInner.
        :type recovered: int
        """

        self._recovered = recovered
