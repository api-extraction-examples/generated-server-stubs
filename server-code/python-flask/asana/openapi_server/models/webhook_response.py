from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.asana_named_resource import AsanaNamedResource
from openapi_server.models.webhook_response_all_of_filters import WebhookResponseAllOfFilters
from openapi_server import util

from openapi_server.models.asana_named_resource import AsanaNamedResource  # noqa: E501
from openapi_server.models.webhook_response_all_of_filters import WebhookResponseAllOfFilters  # noqa: E501

class WebhookResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gid=None, resource_type=None, active=None, resource=None, target=None, created_at=None, filters=None, last_failure_at=None, last_failure_content=None, last_success_at=None):  # noqa: E501
        """WebhookResponse - a model defined in OpenAPI

        :param gid: The gid of this WebhookResponse.  # noqa: E501
        :type gid: str
        :param resource_type: The resource_type of this WebhookResponse.  # noqa: E501
        :type resource_type: str
        :param active: The active of this WebhookResponse.  # noqa: E501
        :type active: bool
        :param resource: The resource of this WebhookResponse.  # noqa: E501
        :type resource: AsanaNamedResource
        :param target: The target of this WebhookResponse.  # noqa: E501
        :type target: str
        :param created_at: The created_at of this WebhookResponse.  # noqa: E501
        :type created_at: datetime
        :param filters: The filters of this WebhookResponse.  # noqa: E501
        :type filters: List[WebhookResponseAllOfFilters]
        :param last_failure_at: The last_failure_at of this WebhookResponse.  # noqa: E501
        :type last_failure_at: datetime
        :param last_failure_content: The last_failure_content of this WebhookResponse.  # noqa: E501
        :type last_failure_content: str
        :param last_success_at: The last_success_at of this WebhookResponse.  # noqa: E501
        :type last_success_at: datetime
        """
        self.openapi_types = {
            'gid': str,
            'resource_type': str,
            'active': bool,
            'resource': AsanaNamedResource,
            'target': str,
            'created_at': datetime,
            'filters': List[WebhookResponseAllOfFilters],
            'last_failure_at': datetime,
            'last_failure_content': str,
            'last_success_at': datetime
        }

        self.attribute_map = {
            'gid': 'gid',
            'resource_type': 'resource_type',
            'active': 'active',
            'resource': 'resource',
            'target': 'target',
            'created_at': 'created_at',
            'filters': 'filters',
            'last_failure_at': 'last_failure_at',
            'last_failure_content': 'last_failure_content',
            'last_success_at': 'last_success_at'
        }

        self._gid = gid
        self._resource_type = resource_type
        self._active = active
        self._resource = resource
        self._target = target
        self._created_at = created_at
        self._filters = filters
        self._last_failure_at = last_failure_at
        self._last_failure_content = last_failure_content
        self._last_success_at = last_success_at

    @classmethod
    def from_dict(cls, dikt) -> 'WebhookResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The WebhookResponse of this WebhookResponse.  # noqa: E501
        :rtype: WebhookResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gid(self) -> str:
        """Gets the gid of this WebhookResponse.

        Globally unique identifier of the resource, as a string.  # noqa: E501

        :return: The gid of this WebhookResponse.
        :rtype: str
        """
        return self._gid

    @gid.setter
    def gid(self, gid: str):
        """Sets the gid of this WebhookResponse.

        Globally unique identifier of the resource, as a string.  # noqa: E501

        :param gid: The gid of this WebhookResponse.
        :type gid: str
        """

        self._gid = gid

    @property
    def resource_type(self) -> str:
        """Gets the resource_type of this WebhookResponse.

        The base type of this resource.  # noqa: E501

        :return: The resource_type of this WebhookResponse.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type: str):
        """Sets the resource_type of this WebhookResponse.

        The base type of this resource.  # noqa: E501

        :param resource_type: The resource_type of this WebhookResponse.
        :type resource_type: str
        """

        self._resource_type = resource_type

    @property
    def active(self) -> bool:
        """Gets the active of this WebhookResponse.

        If true, the webhook will send events - if false it is considered inactive and will not generate events.  # noqa: E501

        :return: The active of this WebhookResponse.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active: bool):
        """Sets the active of this WebhookResponse.

        If true, the webhook will send events - if false it is considered inactive and will not generate events.  # noqa: E501

        :param active: The active of this WebhookResponse.
        :type active: bool
        """

        self._active = active

    @property
    def resource(self) -> AsanaNamedResource:
        """Gets the resource of this WebhookResponse.


        :return: The resource of this WebhookResponse.
        :rtype: AsanaNamedResource
        """
        return self._resource

    @resource.setter
    def resource(self, resource: AsanaNamedResource):
        """Sets the resource of this WebhookResponse.


        :param resource: The resource of this WebhookResponse.
        :type resource: AsanaNamedResource
        """

        self._resource = resource

    @property
    def target(self) -> str:
        """Gets the target of this WebhookResponse.

        The URL to receive the HTTP POST.  # noqa: E501

        :return: The target of this WebhookResponse.
        :rtype: str
        """
        return self._target

    @target.setter
    def target(self, target: str):
        """Sets the target of this WebhookResponse.

        The URL to receive the HTTP POST.  # noqa: E501

        :param target: The target of this WebhookResponse.
        :type target: str
        """

        self._target = target

    @property
    def created_at(self) -> datetime:
        """Gets the created_at of this WebhookResponse.

        The time at which this resource was created.  # noqa: E501

        :return: The created_at of this WebhookResponse.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: datetime):
        """Sets the created_at of this WebhookResponse.

        The time at which this resource was created.  # noqa: E501

        :param created_at: The created_at of this WebhookResponse.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def filters(self) -> List[WebhookResponseAllOfFilters]:
        """Gets the filters of this WebhookResponse.

        Whitelist of filters to apply to events from this webhook. If a webhook event passes any of the filters the event will be delivered; otherwise no event will be sent to the receiving server.  # noqa: E501

        :return: The filters of this WebhookResponse.
        :rtype: List[WebhookResponseAllOfFilters]
        """
        return self._filters

    @filters.setter
    def filters(self, filters: List[WebhookResponseAllOfFilters]):
        """Sets the filters of this WebhookResponse.

        Whitelist of filters to apply to events from this webhook. If a webhook event passes any of the filters the event will be delivered; otherwise no event will be sent to the receiving server.  # noqa: E501

        :param filters: The filters of this WebhookResponse.
        :type filters: List[WebhookResponseAllOfFilters]
        """

        self._filters = filters

    @property
    def last_failure_at(self) -> datetime:
        """Gets the last_failure_at of this WebhookResponse.

        The timestamp when the webhook last received an error when sending an event to the target.  # noqa: E501

        :return: The last_failure_at of this WebhookResponse.
        :rtype: datetime
        """
        return self._last_failure_at

    @last_failure_at.setter
    def last_failure_at(self, last_failure_at: datetime):
        """Sets the last_failure_at of this WebhookResponse.

        The timestamp when the webhook last received an error when sending an event to the target.  # noqa: E501

        :param last_failure_at: The last_failure_at of this WebhookResponse.
        :type last_failure_at: datetime
        """

        self._last_failure_at = last_failure_at

    @property
    def last_failure_content(self) -> str:
        """Gets the last_failure_content of this WebhookResponse.

        The contents of the last error response sent to the webhook when attempting to deliver events to the target.  # noqa: E501

        :return: The last_failure_content of this WebhookResponse.
        :rtype: str
        """
        return self._last_failure_content

    @last_failure_content.setter
    def last_failure_content(self, last_failure_content: str):
        """Sets the last_failure_content of this WebhookResponse.

        The contents of the last error response sent to the webhook when attempting to deliver events to the target.  # noqa: E501

        :param last_failure_content: The last_failure_content of this WebhookResponse.
        :type last_failure_content: str
        """

        self._last_failure_content = last_failure_content

    @property
    def last_success_at(self) -> datetime:
        """Gets the last_success_at of this WebhookResponse.

        The timestamp when the webhook last successfully sent an event to the target.  # noqa: E501

        :return: The last_success_at of this WebhookResponse.
        :rtype: datetime
        """
        return self._last_success_at

    @last_success_at.setter
    def last_success_at(self, last_success_at: datetime):
        """Sets the last_success_at of this WebhookResponse.

        The timestamp when the webhook last successfully sent an event to the target.  # noqa: E501

        :param last_success_at: The last_success_at of this WebhookResponse.
        :type last_success_at: datetime
        """

        self._last_success_at = last_success_at
