from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.project_compact import ProjectCompact
from openapi_server import util

from openapi_server.models.project_compact import ProjectCompact  # noqa: E501

class SectionResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gid=None, resource_type=None, name=None, created_at=None, project=None, projects=None):  # noqa: E501
        """SectionResponse - a model defined in OpenAPI

        :param gid: The gid of this SectionResponse.  # noqa: E501
        :type gid: str
        :param resource_type: The resource_type of this SectionResponse.  # noqa: E501
        :type resource_type: str
        :param name: The name of this SectionResponse.  # noqa: E501
        :type name: str
        :param created_at: The created_at of this SectionResponse.  # noqa: E501
        :type created_at: datetime
        :param project: The project of this SectionResponse.  # noqa: E501
        :type project: ProjectCompact
        :param projects: The projects of this SectionResponse.  # noqa: E501
        :type projects: List[ProjectCompact]
        """
        self.openapi_types = {
            'gid': str,
            'resource_type': str,
            'name': str,
            'created_at': datetime,
            'project': ProjectCompact,
            'projects': List[ProjectCompact]
        }

        self.attribute_map = {
            'gid': 'gid',
            'resource_type': 'resource_type',
            'name': 'name',
            'created_at': 'created_at',
            'project': 'project',
            'projects': 'projects'
        }

        self._gid = gid
        self._resource_type = resource_type
        self._name = name
        self._created_at = created_at
        self._project = project
        self._projects = projects

    @classmethod
    def from_dict(cls, dikt) -> 'SectionResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SectionResponse of this SectionResponse.  # noqa: E501
        :rtype: SectionResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gid(self) -> str:
        """Gets the gid of this SectionResponse.

        Globally unique identifier of the resource, as a string.  # noqa: E501

        :return: The gid of this SectionResponse.
        :rtype: str
        """
        return self._gid

    @gid.setter
    def gid(self, gid: str):
        """Sets the gid of this SectionResponse.

        Globally unique identifier of the resource, as a string.  # noqa: E501

        :param gid: The gid of this SectionResponse.
        :type gid: str
        """

        self._gid = gid

    @property
    def resource_type(self) -> str:
        """Gets the resource_type of this SectionResponse.

        The base type of this resource.  # noqa: E501

        :return: The resource_type of this SectionResponse.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type: str):
        """Sets the resource_type of this SectionResponse.

        The base type of this resource.  # noqa: E501

        :param resource_type: The resource_type of this SectionResponse.
        :type resource_type: str
        """

        self._resource_type = resource_type

    @property
    def name(self) -> str:
        """Gets the name of this SectionResponse.

        The name of the section (i.e. the text displayed as the section header).  # noqa: E501

        :return: The name of this SectionResponse.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this SectionResponse.

        The name of the section (i.e. the text displayed as the section header).  # noqa: E501

        :param name: The name of this SectionResponse.
        :type name: str
        """

        self._name = name

    @property
    def created_at(self) -> datetime:
        """Gets the created_at of this SectionResponse.

        The time at which this resource was created.  # noqa: E501

        :return: The created_at of this SectionResponse.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: datetime):
        """Sets the created_at of this SectionResponse.

        The time at which this resource was created.  # noqa: E501

        :param created_at: The created_at of this SectionResponse.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def project(self) -> ProjectCompact:
        """Gets the project of this SectionResponse.


        :return: The project of this SectionResponse.
        :rtype: ProjectCompact
        """
        return self._project

    @project.setter
    def project(self, project: ProjectCompact):
        """Sets the project of this SectionResponse.


        :param project: The project of this SectionResponse.
        :type project: ProjectCompact
        """

        self._project = project

    @property
    def projects(self) -> List[ProjectCompact]:
        """Gets the projects of this SectionResponse.

        *Deprecated - please use project instead*  # noqa: E501

        :return: The projects of this SectionResponse.
        :rtype: List[ProjectCompact]
        """
        return self._projects

    @projects.setter
    def projects(self, projects: List[ProjectCompact]):
        """Sets the projects of this SectionResponse.

        *Deprecated - please use project instead*  # noqa: E501

        :param projects: The projects of this SectionResponse.
        :type projects: List[ProjectCompact]
        """

        self._projects = projects
