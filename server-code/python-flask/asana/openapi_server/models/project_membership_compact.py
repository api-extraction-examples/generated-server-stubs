from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.user_compact import UserCompact
from openapi_server import util

from openapi_server.models.user_compact import UserCompact  # noqa: E501

class ProjectMembershipCompact(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gid=None, resource_type=None, user=None):  # noqa: E501
        """ProjectMembershipCompact - a model defined in OpenAPI

        :param gid: The gid of this ProjectMembershipCompact.  # noqa: E501
        :type gid: str
        :param resource_type: The resource_type of this ProjectMembershipCompact.  # noqa: E501
        :type resource_type: str
        :param user: The user of this ProjectMembershipCompact.  # noqa: E501
        :type user: UserCompact
        """
        self.openapi_types = {
            'gid': str,
            'resource_type': str,
            'user': UserCompact
        }

        self.attribute_map = {
            'gid': 'gid',
            'resource_type': 'resource_type',
            'user': 'user'
        }

        self._gid = gid
        self._resource_type = resource_type
        self._user = user

    @classmethod
    def from_dict(cls, dikt) -> 'ProjectMembershipCompact':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ProjectMembershipCompact of this ProjectMembershipCompact.  # noqa: E501
        :rtype: ProjectMembershipCompact
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gid(self) -> str:
        """Gets the gid of this ProjectMembershipCompact.

        Globally unique identifier of the resource, as a string.  # noqa: E501

        :return: The gid of this ProjectMembershipCompact.
        :rtype: str
        """
        return self._gid

    @gid.setter
    def gid(self, gid: str):
        """Sets the gid of this ProjectMembershipCompact.

        Globally unique identifier of the resource, as a string.  # noqa: E501

        :param gid: The gid of this ProjectMembershipCompact.
        :type gid: str
        """

        self._gid = gid

    @property
    def resource_type(self) -> str:
        """Gets the resource_type of this ProjectMembershipCompact.

        The base type of this resource.  # noqa: E501

        :return: The resource_type of this ProjectMembershipCompact.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type: str):
        """Sets the resource_type of this ProjectMembershipCompact.

        The base type of this resource.  # noqa: E501

        :param resource_type: The resource_type of this ProjectMembershipCompact.
        :type resource_type: str
        """

        self._resource_type = resource_type

    @property
    def user(self) -> UserCompact:
        """Gets the user of this ProjectMembershipCompact.


        :return: The user of this ProjectMembershipCompact.
        :rtype: UserCompact
        """
        return self._user

    @user.setter
    def user(self, user: UserCompact):
        """Sets the user of this ProjectMembershipCompact.


        :param user: The user of this ProjectMembershipCompact.
        :type user: UserCompact
        """

        self._user = user
