from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class GoalRemoveSupportingRelationshipRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, supporting_resource=None):  # noqa: E501
        """GoalRemoveSupportingRelationshipRequest - a model defined in OpenAPI

        :param supporting_resource: The supporting_resource of this GoalRemoveSupportingRelationshipRequest.  # noqa: E501
        :type supporting_resource: str
        """
        self.openapi_types = {
            'supporting_resource': str
        }

        self.attribute_map = {
            'supporting_resource': 'supporting_resource'
        }

        self._supporting_resource = supporting_resource

    @classmethod
    def from_dict(cls, dikt) -> 'GoalRemoveSupportingRelationshipRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GoalRemoveSupportingRelationshipRequest of this GoalRemoveSupportingRelationshipRequest.  # noqa: E501
        :rtype: GoalRemoveSupportingRelationshipRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def supporting_resource(self) -> str:
        """Gets the supporting_resource of this GoalRemoveSupportingRelationshipRequest.

        The gid of the supporting resource to remove from the parent goal. Must be the gid of a goal, project, or portfolio.  # noqa: E501

        :return: The supporting_resource of this GoalRemoveSupportingRelationshipRequest.
        :rtype: str
        """
        return self._supporting_resource

    @supporting_resource.setter
    def supporting_resource(self, supporting_resource: str):
        """Sets the supporting_resource of this GoalRemoveSupportingRelationshipRequest.

        The gid of the supporting resource to remove from the parent goal. Must be the gid of a goal, project, or portfolio.  # noqa: E501

        :param supporting_resource: The supporting_resource of this GoalRemoveSupportingRelationshipRequest.
        :type supporting_resource: str
        """
        if supporting_resource is None:
            raise ValueError("Invalid value for `supporting_resource`, must not be `None`")  # noqa: E501

        self._supporting_resource = supporting_resource
