from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class GoalResponseAllOfTimePeriod(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gid=None, resource_type=None, display_name=None, end_on=None, period=None, start_on=None):  # noqa: E501
        """GoalResponseAllOfTimePeriod - a model defined in OpenAPI

        :param gid: The gid of this GoalResponseAllOfTimePeriod.  # noqa: E501
        :type gid: str
        :param resource_type: The resource_type of this GoalResponseAllOfTimePeriod.  # noqa: E501
        :type resource_type: str
        :param display_name: The display_name of this GoalResponseAllOfTimePeriod.  # noqa: E501
        :type display_name: str
        :param end_on: The end_on of this GoalResponseAllOfTimePeriod.  # noqa: E501
        :type end_on: str
        :param period: The period of this GoalResponseAllOfTimePeriod.  # noqa: E501
        :type period: str
        :param start_on: The start_on of this GoalResponseAllOfTimePeriod.  # noqa: E501
        :type start_on: str
        """
        self.openapi_types = {
            'gid': str,
            'resource_type': str,
            'display_name': str,
            'end_on': str,
            'period': str,
            'start_on': str
        }

        self.attribute_map = {
            'gid': 'gid',
            'resource_type': 'resource_type',
            'display_name': 'display_name',
            'end_on': 'end_on',
            'period': 'period',
            'start_on': 'start_on'
        }

        self._gid = gid
        self._resource_type = resource_type
        self._display_name = display_name
        self._end_on = end_on
        self._period = period
        self._start_on = start_on

    @classmethod
    def from_dict(cls, dikt) -> 'GoalResponseAllOfTimePeriod':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GoalResponse_allOf_time_period of this GoalResponseAllOfTimePeriod.  # noqa: E501
        :rtype: GoalResponseAllOfTimePeriod
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gid(self) -> str:
        """Gets the gid of this GoalResponseAllOfTimePeriod.

        Globally unique identifier of the resource, as a string.  # noqa: E501

        :return: The gid of this GoalResponseAllOfTimePeriod.
        :rtype: str
        """
        return self._gid

    @gid.setter
    def gid(self, gid: str):
        """Sets the gid of this GoalResponseAllOfTimePeriod.

        Globally unique identifier of the resource, as a string.  # noqa: E501

        :param gid: The gid of this GoalResponseAllOfTimePeriod.
        :type gid: str
        """

        self._gid = gid

    @property
    def resource_type(self) -> str:
        """Gets the resource_type of this GoalResponseAllOfTimePeriod.

        The base type of this resource.  # noqa: E501

        :return: The resource_type of this GoalResponseAllOfTimePeriod.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type: str):
        """Sets the resource_type of this GoalResponseAllOfTimePeriod.

        The base type of this resource.  # noqa: E501

        :param resource_type: The resource_type of this GoalResponseAllOfTimePeriod.
        :type resource_type: str
        """

        self._resource_type = resource_type

    @property
    def display_name(self) -> str:
        """Gets the display_name of this GoalResponseAllOfTimePeriod.

        A string representing the cadence code and the fiscal year.  # noqa: E501

        :return: The display_name of this GoalResponseAllOfTimePeriod.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name: str):
        """Sets the display_name of this GoalResponseAllOfTimePeriod.

        A string representing the cadence code and the fiscal year.  # noqa: E501

        :param display_name: The display_name of this GoalResponseAllOfTimePeriod.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def end_on(self) -> str:
        """Gets the end_on of this GoalResponseAllOfTimePeriod.

        The localized end date of the time period in `YYYY-MM-DD` format.  # noqa: E501

        :return: The end_on of this GoalResponseAllOfTimePeriod.
        :rtype: str
        """
        return self._end_on

    @end_on.setter
    def end_on(self, end_on: str):
        """Sets the end_on of this GoalResponseAllOfTimePeriod.

        The localized end date of the time period in `YYYY-MM-DD` format.  # noqa: E501

        :param end_on: The end_on of this GoalResponseAllOfTimePeriod.
        :type end_on: str
        """

        self._end_on = end_on

    @property
    def period(self) -> str:
        """Gets the period of this GoalResponseAllOfTimePeriod.

        The cadence and index of the time period. The value is one of: `FY`, `H1`, `H2`, `Q1`, `Q2`, `Q3`, or `Q4`.  # noqa: E501

        :return: The period of this GoalResponseAllOfTimePeriod.
        :rtype: str
        """
        return self._period

    @period.setter
    def period(self, period: str):
        """Sets the period of this GoalResponseAllOfTimePeriod.

        The cadence and index of the time period. The value is one of: `FY`, `H1`, `H2`, `Q1`, `Q2`, `Q3`, or `Q4`.  # noqa: E501

        :param period: The period of this GoalResponseAllOfTimePeriod.
        :type period: str
        """
        allowed_values = ["FY", "H1", "H2", "Q1", "Q2", "Q3", "Q4"]  # noqa: E501
        if period not in allowed_values:
            raise ValueError(
                "Invalid value for `period` ({0}), must be one of {1}"
                .format(period, allowed_values)
            )

        self._period = period

    @property
    def start_on(self) -> str:
        """Gets the start_on of this GoalResponseAllOfTimePeriod.

        The localized start date of the time period in `YYYY-MM-DD` format.  # noqa: E501

        :return: The start_on of this GoalResponseAllOfTimePeriod.
        :rtype: str
        """
        return self._start_on

    @start_on.setter
    def start_on(self, start_on: str):
        """Sets the start_on of this GoalResponseAllOfTimePeriod.

        The localized start date of the time period in `YYYY-MM-DD` format.  # noqa: E501

        :param start_on: The start_on of this GoalResponseAllOfTimePeriod.
        :type start_on: str
        """

        self._start_on = start_on
