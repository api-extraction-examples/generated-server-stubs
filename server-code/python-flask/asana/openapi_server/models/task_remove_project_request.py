from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class TaskRemoveProjectRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, project=None):  # noqa: E501
        """TaskRemoveProjectRequest - a model defined in OpenAPI

        :param project: The project of this TaskRemoveProjectRequest.  # noqa: E501
        :type project: str
        """
        self.openapi_types = {
            'project': str
        }

        self.attribute_map = {
            'project': 'project'
        }

        self._project = project

    @classmethod
    def from_dict(cls, dikt) -> 'TaskRemoveProjectRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TaskRemoveProjectRequest of this TaskRemoveProjectRequest.  # noqa: E501
        :rtype: TaskRemoveProjectRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def project(self) -> str:
        """Gets the project of this TaskRemoveProjectRequest.

        The project to remove the task from.  # noqa: E501

        :return: The project of this TaskRemoveProjectRequest.
        :rtype: str
        """
        return self._project

    @project.setter
    def project(self, project: str):
        """Sets the project of this TaskRemoveProjectRequest.

        The project to remove the task from.  # noqa: E501

        :param project: The project of this TaskRemoveProjectRequest.
        :type project: str
        """
        if project is None:
            raise ValueError("Invalid value for `project`, must not be `None`")  # noqa: E501

        self._project = project
