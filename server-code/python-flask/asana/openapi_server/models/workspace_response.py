from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class WorkspaceResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gid=None, resource_type=None, name=None, email_domains=None, is_organization=None):  # noqa: E501
        """WorkspaceResponse - a model defined in OpenAPI

        :param gid: The gid of this WorkspaceResponse.  # noqa: E501
        :type gid: str
        :param resource_type: The resource_type of this WorkspaceResponse.  # noqa: E501
        :type resource_type: str
        :param name: The name of this WorkspaceResponse.  # noqa: E501
        :type name: str
        :param email_domains: The email_domains of this WorkspaceResponse.  # noqa: E501
        :type email_domains: List[str]
        :param is_organization: The is_organization of this WorkspaceResponse.  # noqa: E501
        :type is_organization: bool
        """
        self.openapi_types = {
            'gid': str,
            'resource_type': str,
            'name': str,
            'email_domains': List[str],
            'is_organization': bool
        }

        self.attribute_map = {
            'gid': 'gid',
            'resource_type': 'resource_type',
            'name': 'name',
            'email_domains': 'email_domains',
            'is_organization': 'is_organization'
        }

        self._gid = gid
        self._resource_type = resource_type
        self._name = name
        self._email_domains = email_domains
        self._is_organization = is_organization

    @classmethod
    def from_dict(cls, dikt) -> 'WorkspaceResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The WorkspaceResponse of this WorkspaceResponse.  # noqa: E501
        :rtype: WorkspaceResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gid(self) -> str:
        """Gets the gid of this WorkspaceResponse.

        Globally unique identifier of the resource, as a string.  # noqa: E501

        :return: The gid of this WorkspaceResponse.
        :rtype: str
        """
        return self._gid

    @gid.setter
    def gid(self, gid: str):
        """Sets the gid of this WorkspaceResponse.

        Globally unique identifier of the resource, as a string.  # noqa: E501

        :param gid: The gid of this WorkspaceResponse.
        :type gid: str
        """

        self._gid = gid

    @property
    def resource_type(self) -> str:
        """Gets the resource_type of this WorkspaceResponse.

        The base type of this resource.  # noqa: E501

        :return: The resource_type of this WorkspaceResponse.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type: str):
        """Sets the resource_type of this WorkspaceResponse.

        The base type of this resource.  # noqa: E501

        :param resource_type: The resource_type of this WorkspaceResponse.
        :type resource_type: str
        """

        self._resource_type = resource_type

    @property
    def name(self) -> str:
        """Gets the name of this WorkspaceResponse.

        The name of the workspace.  # noqa: E501

        :return: The name of this WorkspaceResponse.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this WorkspaceResponse.

        The name of the workspace.  # noqa: E501

        :param name: The name of this WorkspaceResponse.
        :type name: str
        """

        self._name = name

    @property
    def email_domains(self) -> List[str]:
        """Gets the email_domains of this WorkspaceResponse.

        The email domains that are associated with this workspace.  # noqa: E501

        :return: The email_domains of this WorkspaceResponse.
        :rtype: List[str]
        """
        return self._email_domains

    @email_domains.setter
    def email_domains(self, email_domains: List[str]):
        """Sets the email_domains of this WorkspaceResponse.

        The email domains that are associated with this workspace.  # noqa: E501

        :param email_domains: The email_domains of this WorkspaceResponse.
        :type email_domains: List[str]
        """

        self._email_domains = email_domains

    @property
    def is_organization(self) -> bool:
        """Gets the is_organization of this WorkspaceResponse.

        Whether the workspace is an *organization*.  # noqa: E501

        :return: The is_organization of this WorkspaceResponse.
        :rtype: bool
        """
        return self._is_organization

    @is_organization.setter
    def is_organization(self, is_organization: bool):
        """Sets the is_organization of this WorkspaceResponse.

        Whether the workspace is an *organization*.  # noqa: E501

        :param is_organization: The is_organization of this WorkspaceResponse.
        :type is_organization: bool
        """

        self._is_organization = is_organization
