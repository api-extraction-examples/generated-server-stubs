from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.project_brief_response_all_of_project import ProjectBriefResponseAllOfProject
from openapi_server import util

from openapi_server.models.project_brief_response_all_of_project import ProjectBriefResponseAllOfProject  # noqa: E501

class ProjectBriefResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gid=None, resource_type=None, html_text=None, title=None, permalink_url=None, project=None, text=None):  # noqa: E501
        """ProjectBriefResponse - a model defined in OpenAPI

        :param gid: The gid of this ProjectBriefResponse.  # noqa: E501
        :type gid: str
        :param resource_type: The resource_type of this ProjectBriefResponse.  # noqa: E501
        :type resource_type: str
        :param html_text: The html_text of this ProjectBriefResponse.  # noqa: E501
        :type html_text: str
        :param title: The title of this ProjectBriefResponse.  # noqa: E501
        :type title: str
        :param permalink_url: The permalink_url of this ProjectBriefResponse.  # noqa: E501
        :type permalink_url: str
        :param project: The project of this ProjectBriefResponse.  # noqa: E501
        :type project: ProjectBriefResponseAllOfProject
        :param text: The text of this ProjectBriefResponse.  # noqa: E501
        :type text: str
        """
        self.openapi_types = {
            'gid': str,
            'resource_type': str,
            'html_text': str,
            'title': str,
            'permalink_url': str,
            'project': ProjectBriefResponseAllOfProject,
            'text': str
        }

        self.attribute_map = {
            'gid': 'gid',
            'resource_type': 'resource_type',
            'html_text': 'html_text',
            'title': 'title',
            'permalink_url': 'permalink_url',
            'project': 'project',
            'text': 'text'
        }

        self._gid = gid
        self._resource_type = resource_type
        self._html_text = html_text
        self._title = title
        self._permalink_url = permalink_url
        self._project = project
        self._text = text

    @classmethod
    def from_dict(cls, dikt) -> 'ProjectBriefResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ProjectBriefResponse of this ProjectBriefResponse.  # noqa: E501
        :rtype: ProjectBriefResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gid(self) -> str:
        """Gets the gid of this ProjectBriefResponse.

        Globally unique identifier of the resource, as a string.  # noqa: E501

        :return: The gid of this ProjectBriefResponse.
        :rtype: str
        """
        return self._gid

    @gid.setter
    def gid(self, gid: str):
        """Sets the gid of this ProjectBriefResponse.

        Globally unique identifier of the resource, as a string.  # noqa: E501

        :param gid: The gid of this ProjectBriefResponse.
        :type gid: str
        """

        self._gid = gid

    @property
    def resource_type(self) -> str:
        """Gets the resource_type of this ProjectBriefResponse.

        The base type of this resource.  # noqa: E501

        :return: The resource_type of this ProjectBriefResponse.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type: str):
        """Sets the resource_type of this ProjectBriefResponse.

        The base type of this resource.  # noqa: E501

        :param resource_type: The resource_type of this ProjectBriefResponse.
        :type resource_type: str
        """

        self._resource_type = resource_type

    @property
    def html_text(self) -> str:
        """Gets the html_text of this ProjectBriefResponse.

        HTML formatted text for the project brief.  # noqa: E501

        :return: The html_text of this ProjectBriefResponse.
        :rtype: str
        """
        return self._html_text

    @html_text.setter
    def html_text(self, html_text: str):
        """Sets the html_text of this ProjectBriefResponse.

        HTML formatted text for the project brief.  # noqa: E501

        :param html_text: The html_text of this ProjectBriefResponse.
        :type html_text: str
        """

        self._html_text = html_text

    @property
    def title(self) -> str:
        """Gets the title of this ProjectBriefResponse.

        The title of the project brief.  # noqa: E501

        :return: The title of this ProjectBriefResponse.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this ProjectBriefResponse.

        The title of the project brief.  # noqa: E501

        :param title: The title of this ProjectBriefResponse.
        :type title: str
        """

        self._title = title

    @property
    def permalink_url(self) -> str:
        """Gets the permalink_url of this ProjectBriefResponse.

        A url that points directly to the object within Asana.  # noqa: E501

        :return: The permalink_url of this ProjectBriefResponse.
        :rtype: str
        """
        return self._permalink_url

    @permalink_url.setter
    def permalink_url(self, permalink_url: str):
        """Sets the permalink_url of this ProjectBriefResponse.

        A url that points directly to the object within Asana.  # noqa: E501

        :param permalink_url: The permalink_url of this ProjectBriefResponse.
        :type permalink_url: str
        """

        self._permalink_url = permalink_url

    @property
    def project(self) -> ProjectBriefResponseAllOfProject:
        """Gets the project of this ProjectBriefResponse.


        :return: The project of this ProjectBriefResponse.
        :rtype: ProjectBriefResponseAllOfProject
        """
        return self._project

    @project.setter
    def project(self, project: ProjectBriefResponseAllOfProject):
        """Sets the project of this ProjectBriefResponse.


        :param project: The project of this ProjectBriefResponse.
        :type project: ProjectBriefResponseAllOfProject
        """

        self._project = project

    @property
    def text(self) -> str:
        """Gets the text of this ProjectBriefResponse.

        [Opt In](/docs/input-output-options). The plain text of the project brief.  # noqa: E501

        :return: The text of this ProjectBriefResponse.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text: str):
        """Sets the text of this ProjectBriefResponse.

        [Opt In](/docs/input-output-options). The plain text of the project brief.  # noqa: E501

        :param text: The text of this ProjectBriefResponse.
        :type text: str
        """

        self._text = text
