from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class GoalRemoveSubgoalRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, subgoal=None):  # noqa: E501
        """GoalRemoveSubgoalRequest - a model defined in OpenAPI

        :param subgoal: The subgoal of this GoalRemoveSubgoalRequest.  # noqa: E501
        :type subgoal: str
        """
        self.openapi_types = {
            'subgoal': str
        }

        self.attribute_map = {
            'subgoal': 'subgoal'
        }

        self._subgoal = subgoal

    @classmethod
    def from_dict(cls, dikt) -> 'GoalRemoveSubgoalRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GoalRemoveSubgoalRequest of this GoalRemoveSubgoalRequest.  # noqa: E501
        :rtype: GoalRemoveSubgoalRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def subgoal(self) -> str:
        """Gets the subgoal of this GoalRemoveSubgoalRequest.

        The goal gid to remove as subgoal from the parent goal  # noqa: E501

        :return: The subgoal of this GoalRemoveSubgoalRequest.
        :rtype: str
        """
        return self._subgoal

    @subgoal.setter
    def subgoal(self, subgoal: str):
        """Sets the subgoal of this GoalRemoveSubgoalRequest.

        The goal gid to remove as subgoal from the parent goal  # noqa: E501

        :param subgoal: The subgoal of this GoalRemoveSubgoalRequest.
        :type subgoal: str
        """
        if subgoal is None:
            raise ValueError("Invalid value for `subgoal`, must not be `None`")  # noqa: E501

        self._subgoal = subgoal
