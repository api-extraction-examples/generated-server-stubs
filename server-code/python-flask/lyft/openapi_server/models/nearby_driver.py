from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.lat_lng import LatLng
from openapi_server import util

from openapi_server.models.lat_lng import LatLng  # noqa: E501

class NearbyDriver(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, locations=None):  # noqa: E501
        """NearbyDriver - a model defined in OpenAPI

        :param locations: The locations of this NearbyDriver.  # noqa: E501
        :type locations: List[LatLng]
        """
        self.openapi_types = {
            'locations': List[LatLng]
        }

        self.attribute_map = {
            'locations': 'locations'
        }

        self._locations = locations

    @classmethod
    def from_dict(cls, dikt) -> 'NearbyDriver':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NearbyDriver of this NearbyDriver.  # noqa: E501
        :rtype: NearbyDriver
        """
        return util.deserialize_model(dikt, cls)

    @property
    def locations(self) -> List[LatLng]:
        """Gets the locations of this NearbyDriver.

        the lastest recorded driver locations up to 5 sorted in chronological order.  # noqa: E501

        :return: The locations of this NearbyDriver.
        :rtype: List[LatLng]
        """
        return self._locations

    @locations.setter
    def locations(self, locations: List[LatLng]):
        """Sets the locations of this NearbyDriver.

        the lastest recorded driver locations up to 5 sorted in chronological order.  # noqa: E501

        :param locations: The locations of this NearbyDriver.
        :type locations: List[LatLng]
        """

        self._locations = locations
