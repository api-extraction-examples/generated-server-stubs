from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.nearby_driver import NearbyDriver
from openapi_server import util

from openapi_server.models.nearby_driver import NearbyDriver  # noqa: E501

class NearbyDriversByRideType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, drivers=None, ride_type=None):  # noqa: E501
        """NearbyDriversByRideType - a model defined in OpenAPI

        :param drivers: The drivers of this NearbyDriversByRideType.  # noqa: E501
        :type drivers: List[NearbyDriver]
        :param ride_type: The ride_type of this NearbyDriversByRideType.  # noqa: E501
        :type ride_type: str
        """
        self.openapi_types = {
            'drivers': List[NearbyDriver],
            'ride_type': str
        }

        self.attribute_map = {
            'drivers': 'drivers',
            'ride_type': 'ride_type'
        }

        self._drivers = drivers
        self._ride_type = ride_type

    @classmethod
    def from_dict(cls, dikt) -> 'NearbyDriversByRideType':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NearbyDriversByRideType of this NearbyDriversByRideType.  # noqa: E501
        :rtype: NearbyDriversByRideType
        """
        return util.deserialize_model(dikt, cls)

    @property
    def drivers(self) -> List[NearbyDriver]:
        """Gets the drivers of this NearbyDriversByRideType.

        list of nearby drivers group by ride type sorted by eta  # noqa: E501

        :return: The drivers of this NearbyDriversByRideType.
        :rtype: List[NearbyDriver]
        """
        return self._drivers

    @drivers.setter
    def drivers(self, drivers: List[NearbyDriver]):
        """Sets the drivers of this NearbyDriversByRideType.

        list of nearby drivers group by ride type sorted by eta  # noqa: E501

        :param drivers: The drivers of this NearbyDriversByRideType.
        :type drivers: List[NearbyDriver]
        """

        self._drivers = drivers

    @property
    def ride_type(self) -> str:
        """Gets the ride_type of this NearbyDriversByRideType.

        driver's ride type. if driver is eligable for several ride types, he will be duplicated.  # noqa: E501

        :return: The ride_type of this NearbyDriversByRideType.
        :rtype: str
        """
        return self._ride_type

    @ride_type.setter
    def ride_type(self, ride_type: str):
        """Sets the ride_type of this NearbyDriversByRideType.

        driver's ride type. if driver is eligable for several ride types, he will be duplicated.  # noqa: E501

        :param ride_type: The ride_type of this NearbyDriversByRideType.
        :type ride_type: str
        """

        self._ride_type = ride_type
