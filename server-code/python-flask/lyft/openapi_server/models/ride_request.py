from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.location import Location
from openapi_server.models.passenger_detail import PassengerDetail
from openapi_server.models.ride_status_enum import RideStatusEnum
from openapi_server import util

from openapi_server.models.location import Location  # noqa: E501
from openapi_server.models.passenger_detail import PassengerDetail  # noqa: E501
from openapi_server.models.ride_status_enum import RideStatusEnum  # noqa: E501

class RideRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, destination=None, origin=None, passenger=None, ride_id=None, status=None):  # noqa: E501
        """RideRequest - a model defined in OpenAPI

        :param destination: The destination of this RideRequest.  # noqa: E501
        :type destination: Location
        :param origin: The origin of this RideRequest.  # noqa: E501
        :type origin: Location
        :param passenger: The passenger of this RideRequest.  # noqa: E501
        :type passenger: PassengerDetail
        :param ride_id: The ride_id of this RideRequest.  # noqa: E501
        :type ride_id: str
        :param status: The status of this RideRequest.  # noqa: E501
        :type status: RideStatusEnum
        """
        self.openapi_types = {
            'destination': Location,
            'origin': Location,
            'passenger': PassengerDetail,
            'ride_id': str,
            'status': RideStatusEnum
        }

        self.attribute_map = {
            'destination': 'destination',
            'origin': 'origin',
            'passenger': 'passenger',
            'ride_id': 'ride_id',
            'status': 'status'
        }

        self._destination = destination
        self._origin = origin
        self._passenger = passenger
        self._ride_id = ride_id
        self._status = status

    @classmethod
    def from_dict(cls, dikt) -> 'RideRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RideRequest of this RideRequest.  # noqa: E501
        :rtype: RideRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def destination(self) -> Location:
        """Gets the destination of this RideRequest.


        :return: The destination of this RideRequest.
        :rtype: Location
        """
        return self._destination

    @destination.setter
    def destination(self, destination: Location):
        """Sets the destination of this RideRequest.


        :param destination: The destination of this RideRequest.
        :type destination: Location
        """

        self._destination = destination

    @property
    def origin(self) -> Location:
        """Gets the origin of this RideRequest.


        :return: The origin of this RideRequest.
        :rtype: Location
        """
        return self._origin

    @origin.setter
    def origin(self, origin: Location):
        """Sets the origin of this RideRequest.


        :param origin: The origin of this RideRequest.
        :type origin: Location
        """

        self._origin = origin

    @property
    def passenger(self) -> PassengerDetail:
        """Gets the passenger of this RideRequest.


        :return: The passenger of this RideRequest.
        :rtype: PassengerDetail
        """
        return self._passenger

    @passenger.setter
    def passenger(self, passenger: PassengerDetail):
        """Sets the passenger of this RideRequest.


        :param passenger: The passenger of this RideRequest.
        :type passenger: PassengerDetail
        """

        self._passenger = passenger

    @property
    def ride_id(self) -> str:
        """Gets the ride_id of this RideRequest.

        The ID of the requested ride  # noqa: E501

        :return: The ride_id of this RideRequest.
        :rtype: str
        """
        return self._ride_id

    @ride_id.setter
    def ride_id(self, ride_id: str):
        """Sets the ride_id of this RideRequest.

        The ID of the requested ride  # noqa: E501

        :param ride_id: The ride_id of this RideRequest.
        :type ride_id: str
        """

        self._ride_id = ride_id

    @property
    def status(self) -> RideStatusEnum:
        """Gets the status of this RideRequest.


        :return: The status of this RideRequest.
        :rtype: RideStatusEnum
        """
        return self._status

    @status.setter
    def status(self, status: RideStatusEnum):
        """Sets the status of this RideRequest.


        :param status: The status of this RideRequest.
        :type status: RideStatusEnum
        """

        self._status = status
