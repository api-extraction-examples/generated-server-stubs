from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class SystemEvents200ResponseActor(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attributes=None, id=None):  # noqa: E501
        """SystemEvents200ResponseActor - a model defined in OpenAPI

        :param attributes: The attributes of this SystemEvents200ResponseActor.  # noqa: E501
        :type attributes: Dict[str, str]
        :param id: The id of this SystemEvents200ResponseActor.  # noqa: E501
        :type id: str
        """
        self.openapi_types = {
            'attributes': Dict[str, str],
            'id': str
        }

        self.attribute_map = {
            'attributes': 'Attributes',
            'id': 'ID'
        }

        self._attributes = attributes
        self._id = id

    @classmethod
    def from_dict(cls, dikt) -> 'SystemEvents200ResponseActor':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SystemEvents_200_response_Actor of this SystemEvents200ResponseActor.  # noqa: E501
        :rtype: SystemEvents200ResponseActor
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attributes(self) -> Dict[str, str]:
        """Gets the attributes of this SystemEvents200ResponseActor.

        Various key/value attributes of the object, depending on its type  # noqa: E501

        :return: The attributes of this SystemEvents200ResponseActor.
        :rtype: Dict[str, str]
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes: Dict[str, str]):
        """Sets the attributes of this SystemEvents200ResponseActor.

        Various key/value attributes of the object, depending on its type  # noqa: E501

        :param attributes: The attributes of this SystemEvents200ResponseActor.
        :type attributes: Dict[str, str]
        """

        self._attributes = attributes

    @property
    def id(self) -> str:
        """Gets the id of this SystemEvents200ResponseActor.

        The ID of the object emitting the event  # noqa: E501

        :return: The id of this SystemEvents200ResponseActor.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this SystemEvents200ResponseActor.

        The ID of the object emitting the event  # noqa: E501

        :param id: The id of this SystemEvents200ResponseActor.
        :type id: str
        """

        self._id = id
