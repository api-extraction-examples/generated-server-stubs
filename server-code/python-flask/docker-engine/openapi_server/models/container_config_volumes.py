from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class ContainerConfigVolumes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_properties=None):  # noqa: E501
        """ContainerConfigVolumes - a model defined in OpenAPI

        :param additional_properties: The additional_properties of this ContainerConfigVolumes.  # noqa: E501
        :type additional_properties: object
        """
        self.openapi_types = {
            'additional_properties': object
        }

        self.attribute_map = {
            'additional_properties': 'additionalProperties'
        }

        self._additional_properties = additional_properties

    @classmethod
    def from_dict(cls, dikt) -> 'ContainerConfigVolumes':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ContainerConfig_Volumes of this ContainerConfigVolumes.  # noqa: E501
        :rtype: ContainerConfigVolumes
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_properties(self) -> object:
        """Gets the additional_properties of this ContainerConfigVolumes.


        :return: The additional_properties of this ContainerConfigVolumes.
        :rtype: object
        """
        return self._additional_properties

    @additional_properties.setter
    def additional_properties(self, additional_properties: object):
        """Sets the additional_properties of this ContainerConfigVolumes.


        :param additional_properties: The additional_properties of this ContainerConfigVolumes.
        :type additional_properties: object
        """
        allowed_values = [{}]  # noqa: E501
        if additional_properties not in allowed_values:
            raise ValueError(
                "Invalid value for `additional_properties` ({0}), must be one of {1}"
                .format(additional_properties, allowed_values)
            )

        self._additional_properties = additional_properties
