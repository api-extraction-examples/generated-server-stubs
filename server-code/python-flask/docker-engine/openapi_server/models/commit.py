from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class Commit(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expected=None, id=None):  # noqa: E501
        """Commit - a model defined in OpenAPI

        :param expected: The expected of this Commit.  # noqa: E501
        :type expected: str
        :param id: The id of this Commit.  # noqa: E501
        :type id: str
        """
        self.openapi_types = {
            'expected': str,
            'id': str
        }

        self.attribute_map = {
            'expected': 'Expected',
            'id': 'ID'
        }

        self._expected = expected
        self._id = id

    @classmethod
    def from_dict(cls, dikt) -> 'Commit':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Commit of this Commit.  # noqa: E501
        :rtype: Commit
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expected(self) -> str:
        """Gets the expected of this Commit.

        Commit ID of external tool expected by dockerd as set at build time.   # noqa: E501

        :return: The expected of this Commit.
        :rtype: str
        """
        return self._expected

    @expected.setter
    def expected(self, expected: str):
        """Sets the expected of this Commit.

        Commit ID of external tool expected by dockerd as set at build time.   # noqa: E501

        :param expected: The expected of this Commit.
        :type expected: str
        """

        self._expected = expected

    @property
    def id(self) -> str:
        """Gets the id of this Commit.

        Actual commit ID of external tool.  # noqa: E501

        :return: The id of this Commit.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this Commit.

        Actual commit ID of external tool.  # noqa: E501

        :param id: The id of this Commit.
        :type id: str
        """

        self._id = id
