from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.system_events200_response_actor import SystemEvents200ResponseActor
from openapi_server import util

from openapi_server.models.system_events200_response_actor import SystemEvents200ResponseActor  # noqa: E501

class SystemEvents200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action=None, actor=None, type=None, time=None, time_nano=None):  # noqa: E501
        """SystemEvents200Response - a model defined in OpenAPI

        :param action: The action of this SystemEvents200Response.  # noqa: E501
        :type action: str
        :param actor: The actor of this SystemEvents200Response.  # noqa: E501
        :type actor: SystemEvents200ResponseActor
        :param type: The type of this SystemEvents200Response.  # noqa: E501
        :type type: str
        :param time: The time of this SystemEvents200Response.  # noqa: E501
        :type time: int
        :param time_nano: The time_nano of this SystemEvents200Response.  # noqa: E501
        :type time_nano: int
        """
        self.openapi_types = {
            'action': str,
            'actor': SystemEvents200ResponseActor,
            'type': str,
            'time': int,
            'time_nano': int
        }

        self.attribute_map = {
            'action': 'Action',
            'actor': 'Actor',
            'type': 'Type',
            'time': 'time',
            'time_nano': 'timeNano'
        }

        self._action = action
        self._actor = actor
        self._type = type
        self._time = time
        self._time_nano = time_nano

    @classmethod
    def from_dict(cls, dikt) -> 'SystemEvents200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SystemEvents_200_response of this SystemEvents200Response.  # noqa: E501
        :rtype: SystemEvents200Response
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action(self) -> str:
        """Gets the action of this SystemEvents200Response.

        The type of event  # noqa: E501

        :return: The action of this SystemEvents200Response.
        :rtype: str
        """
        return self._action

    @action.setter
    def action(self, action: str):
        """Sets the action of this SystemEvents200Response.

        The type of event  # noqa: E501

        :param action: The action of this SystemEvents200Response.
        :type action: str
        """

        self._action = action

    @property
    def actor(self) -> SystemEvents200ResponseActor:
        """Gets the actor of this SystemEvents200Response.


        :return: The actor of this SystemEvents200Response.
        :rtype: SystemEvents200ResponseActor
        """
        return self._actor

    @actor.setter
    def actor(self, actor: SystemEvents200ResponseActor):
        """Sets the actor of this SystemEvents200Response.


        :param actor: The actor of this SystemEvents200Response.
        :type actor: SystemEvents200ResponseActor
        """

        self._actor = actor

    @property
    def type(self) -> str:
        """Gets the type of this SystemEvents200Response.

        The type of object emitting the event  # noqa: E501

        :return: The type of this SystemEvents200Response.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this SystemEvents200Response.

        The type of object emitting the event  # noqa: E501

        :param type: The type of this SystemEvents200Response.
        :type type: str
        """

        self._type = type

    @property
    def time(self) -> int:
        """Gets the time of this SystemEvents200Response.

        Timestamp of event  # noqa: E501

        :return: The time of this SystemEvents200Response.
        :rtype: int
        """
        return self._time

    @time.setter
    def time(self, time: int):
        """Sets the time of this SystemEvents200Response.

        Timestamp of event  # noqa: E501

        :param time: The time of this SystemEvents200Response.
        :type time: int
        """

        self._time = time

    @property
    def time_nano(self) -> int:
        """Gets the time_nano of this SystemEvents200Response.

        Timestamp of event, with nanosecond accuracy  # noqa: E501

        :return: The time_nano of this SystemEvents200Response.
        :rtype: int
        """
        return self._time_nano

    @time_nano.setter
    def time_nano(self, time_nano: int):
        """Sets the time_nano of this SystemEvents200Response.

        Timestamp of event, with nanosecond accuracy  # noqa: E501

        :param time_nano: The time_nano of this SystemEvents200Response.
        :type time_nano: int
        """

        self._time_nano = time_nano
