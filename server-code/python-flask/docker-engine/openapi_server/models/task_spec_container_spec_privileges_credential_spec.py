from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class TaskSpecContainerSpecPrivilegesCredentialSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file=None, registry=None):  # noqa: E501
        """TaskSpecContainerSpecPrivilegesCredentialSpec - a model defined in OpenAPI

        :param file: The file of this TaskSpecContainerSpecPrivilegesCredentialSpec.  # noqa: E501
        :type file: str
        :param registry: The registry of this TaskSpecContainerSpecPrivilegesCredentialSpec.  # noqa: E501
        :type registry: str
        """
        self.openapi_types = {
            'file': str,
            'registry': str
        }

        self.attribute_map = {
            'file': 'File',
            'registry': 'Registry'
        }

        self._file = file
        self._registry = registry

    @classmethod
    def from_dict(cls, dikt) -> 'TaskSpecContainerSpecPrivilegesCredentialSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TaskSpec_ContainerSpec_Privileges_CredentialSpec of this TaskSpecContainerSpecPrivilegesCredentialSpec.  # noqa: E501
        :rtype: TaskSpecContainerSpecPrivilegesCredentialSpec
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file(self) -> str:
        """Gets the file of this TaskSpecContainerSpecPrivilegesCredentialSpec.

        Load credential spec from this file. The file is read by the daemon, and must be present in the `CredentialSpecs` subdirectory in the docker data directory, which defaults to `C:\\ProgramData\\Docker\\` on Windows.  For example, specifying `spec.json` loads `C:\\ProgramData\\Docker\\CredentialSpecs\\spec.json`.  <p><br /></p>  > **Note**: `CredentialSpec.File` and `CredentialSpec.Registry` are mutually exclusive.   # noqa: E501

        :return: The file of this TaskSpecContainerSpecPrivilegesCredentialSpec.
        :rtype: str
        """
        return self._file

    @file.setter
    def file(self, file: str):
        """Sets the file of this TaskSpecContainerSpecPrivilegesCredentialSpec.

        Load credential spec from this file. The file is read by the daemon, and must be present in the `CredentialSpecs` subdirectory in the docker data directory, which defaults to `C:\\ProgramData\\Docker\\` on Windows.  For example, specifying `spec.json` loads `C:\\ProgramData\\Docker\\CredentialSpecs\\spec.json`.  <p><br /></p>  > **Note**: `CredentialSpec.File` and `CredentialSpec.Registry` are mutually exclusive.   # noqa: E501

        :param file: The file of this TaskSpecContainerSpecPrivilegesCredentialSpec.
        :type file: str
        """

        self._file = file

    @property
    def registry(self) -> str:
        """Gets the registry of this TaskSpecContainerSpecPrivilegesCredentialSpec.

        Load credential spec from this value in the Windows registry. The specified registry value must be located in:  `HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Virtualization\\Containers\\CredentialSpecs`  <p><br /></p>   > **Note**: `CredentialSpec.File` and `CredentialSpec.Registry` are mutually exclusive.   # noqa: E501

        :return: The registry of this TaskSpecContainerSpecPrivilegesCredentialSpec.
        :rtype: str
        """
        return self._registry

    @registry.setter
    def registry(self, registry: str):
        """Sets the registry of this TaskSpecContainerSpecPrivilegesCredentialSpec.

        Load credential spec from this value in the Windows registry. The specified registry value must be located in:  `HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Virtualization\\Containers\\CredentialSpecs`  <p><br /></p>   > **Note**: `CredentialSpec.File` and `CredentialSpec.Registry` are mutually exclusive.   # noqa: E501

        :param registry: The registry of this TaskSpecContainerSpecPrivilegesCredentialSpec.
        :type registry: str
        """

        self._registry = registry
