from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class MountBindOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, propagation=None):  # noqa: E501
        """MountBindOptions - a model defined in OpenAPI

        :param propagation: The propagation of this MountBindOptions.  # noqa: E501
        :type propagation: str
        """
        self.openapi_types = {
            'propagation': str
        }

        self.attribute_map = {
            'propagation': 'Propagation'
        }

        self._propagation = propagation

    @classmethod
    def from_dict(cls, dikt) -> 'MountBindOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Mount_BindOptions of this MountBindOptions.  # noqa: E501
        :rtype: MountBindOptions
        """
        return util.deserialize_model(dikt, cls)

    @property
    def propagation(self) -> str:
        """Gets the propagation of this MountBindOptions.

        A propagation mode with the value `[r]private`, `[r]shared`, or `[r]slave`.  # noqa: E501

        :return: The propagation of this MountBindOptions.
        :rtype: str
        """
        return self._propagation

    @propagation.setter
    def propagation(self, propagation: str):
        """Sets the propagation of this MountBindOptions.

        A propagation mode with the value `[r]private`, `[r]shared`, or `[r]slave`.  # noqa: E501

        :param propagation: The propagation of this MountBindOptions.
        :type propagation: str
        """
        allowed_values = ["private", "rprivate", "shared", "rshared", "slave", "rslave"]  # noqa: E501
        if propagation not in allowed_values:
            raise ValueError(
                "Invalid value for `propagation` ({0}), must be one of {1}"
                .format(propagation, allowed_values)
            )

        self._propagation = propagation
