from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class SystemVersion200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_version=None, arch=None, build_time=None, experimental=None, git_commit=None, go_version=None, kernel_version=None, min_api_version=None, os=None, version=None):  # noqa: E501
        """SystemVersion200Response - a model defined in OpenAPI

        :param api_version: The api_version of this SystemVersion200Response.  # noqa: E501
        :type api_version: str
        :param arch: The arch of this SystemVersion200Response.  # noqa: E501
        :type arch: str
        :param build_time: The build_time of this SystemVersion200Response.  # noqa: E501
        :type build_time: str
        :param experimental: The experimental of this SystemVersion200Response.  # noqa: E501
        :type experimental: bool
        :param git_commit: The git_commit of this SystemVersion200Response.  # noqa: E501
        :type git_commit: str
        :param go_version: The go_version of this SystemVersion200Response.  # noqa: E501
        :type go_version: str
        :param kernel_version: The kernel_version of this SystemVersion200Response.  # noqa: E501
        :type kernel_version: str
        :param min_api_version: The min_api_version of this SystemVersion200Response.  # noqa: E501
        :type min_api_version: str
        :param os: The os of this SystemVersion200Response.  # noqa: E501
        :type os: str
        :param version: The version of this SystemVersion200Response.  # noqa: E501
        :type version: str
        """
        self.openapi_types = {
            'api_version': str,
            'arch': str,
            'build_time': str,
            'experimental': bool,
            'git_commit': str,
            'go_version': str,
            'kernel_version': str,
            'min_api_version': str,
            'os': str,
            'version': str
        }

        self.attribute_map = {
            'api_version': 'ApiVersion',
            'arch': 'Arch',
            'build_time': 'BuildTime',
            'experimental': 'Experimental',
            'git_commit': 'GitCommit',
            'go_version': 'GoVersion',
            'kernel_version': 'KernelVersion',
            'min_api_version': 'MinAPIVersion',
            'os': 'Os',
            'version': 'Version'
        }

        self._api_version = api_version
        self._arch = arch
        self._build_time = build_time
        self._experimental = experimental
        self._git_commit = git_commit
        self._go_version = go_version
        self._kernel_version = kernel_version
        self._min_api_version = min_api_version
        self._os = os
        self._version = version

    @classmethod
    def from_dict(cls, dikt) -> 'SystemVersion200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SystemVersion_200_response of this SystemVersion200Response.  # noqa: E501
        :rtype: SystemVersion200Response
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_version(self) -> str:
        """Gets the api_version of this SystemVersion200Response.


        :return: The api_version of this SystemVersion200Response.
        :rtype: str
        """
        return self._api_version

    @api_version.setter
    def api_version(self, api_version: str):
        """Sets the api_version of this SystemVersion200Response.


        :param api_version: The api_version of this SystemVersion200Response.
        :type api_version: str
        """

        self._api_version = api_version

    @property
    def arch(self) -> str:
        """Gets the arch of this SystemVersion200Response.


        :return: The arch of this SystemVersion200Response.
        :rtype: str
        """
        return self._arch

    @arch.setter
    def arch(self, arch: str):
        """Sets the arch of this SystemVersion200Response.


        :param arch: The arch of this SystemVersion200Response.
        :type arch: str
        """

        self._arch = arch

    @property
    def build_time(self) -> str:
        """Gets the build_time of this SystemVersion200Response.


        :return: The build_time of this SystemVersion200Response.
        :rtype: str
        """
        return self._build_time

    @build_time.setter
    def build_time(self, build_time: str):
        """Sets the build_time of this SystemVersion200Response.


        :param build_time: The build_time of this SystemVersion200Response.
        :type build_time: str
        """

        self._build_time = build_time

    @property
    def experimental(self) -> bool:
        """Gets the experimental of this SystemVersion200Response.


        :return: The experimental of this SystemVersion200Response.
        :rtype: bool
        """
        return self._experimental

    @experimental.setter
    def experimental(self, experimental: bool):
        """Sets the experimental of this SystemVersion200Response.


        :param experimental: The experimental of this SystemVersion200Response.
        :type experimental: bool
        """

        self._experimental = experimental

    @property
    def git_commit(self) -> str:
        """Gets the git_commit of this SystemVersion200Response.


        :return: The git_commit of this SystemVersion200Response.
        :rtype: str
        """
        return self._git_commit

    @git_commit.setter
    def git_commit(self, git_commit: str):
        """Sets the git_commit of this SystemVersion200Response.


        :param git_commit: The git_commit of this SystemVersion200Response.
        :type git_commit: str
        """

        self._git_commit = git_commit

    @property
    def go_version(self) -> str:
        """Gets the go_version of this SystemVersion200Response.


        :return: The go_version of this SystemVersion200Response.
        :rtype: str
        """
        return self._go_version

    @go_version.setter
    def go_version(self, go_version: str):
        """Sets the go_version of this SystemVersion200Response.


        :param go_version: The go_version of this SystemVersion200Response.
        :type go_version: str
        """

        self._go_version = go_version

    @property
    def kernel_version(self) -> str:
        """Gets the kernel_version of this SystemVersion200Response.


        :return: The kernel_version of this SystemVersion200Response.
        :rtype: str
        """
        return self._kernel_version

    @kernel_version.setter
    def kernel_version(self, kernel_version: str):
        """Sets the kernel_version of this SystemVersion200Response.


        :param kernel_version: The kernel_version of this SystemVersion200Response.
        :type kernel_version: str
        """

        self._kernel_version = kernel_version

    @property
    def min_api_version(self) -> str:
        """Gets the min_api_version of this SystemVersion200Response.


        :return: The min_api_version of this SystemVersion200Response.
        :rtype: str
        """
        return self._min_api_version

    @min_api_version.setter
    def min_api_version(self, min_api_version: str):
        """Sets the min_api_version of this SystemVersion200Response.


        :param min_api_version: The min_api_version of this SystemVersion200Response.
        :type min_api_version: str
        """

        self._min_api_version = min_api_version

    @property
    def os(self) -> str:
        """Gets the os of this SystemVersion200Response.


        :return: The os of this SystemVersion200Response.
        :rtype: str
        """
        return self._os

    @os.setter
    def os(self, os: str):
        """Sets the os of this SystemVersion200Response.


        :param os: The os of this SystemVersion200Response.
        :type os: str
        """

        self._os = os

    @property
    def version(self) -> str:
        """Gets the version of this SystemVersion200Response.


        :return: The version of this SystemVersion200Response.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version: str):
        """Sets the version of this SystemVersion200Response.


        :param version: The version of this SystemVersion200Response.
        :type version: str
        """

        self._version = version
