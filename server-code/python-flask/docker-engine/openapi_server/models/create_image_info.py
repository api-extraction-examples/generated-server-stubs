from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.progress_detail import ProgressDetail
from openapi_server import util

from openapi_server.models.progress_detail import ProgressDetail  # noqa: E501

class CreateImageInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error=None, progress=None, progress_detail=None, status=None):  # noqa: E501
        """CreateImageInfo - a model defined in OpenAPI

        :param error: The error of this CreateImageInfo.  # noqa: E501
        :type error: str
        :param progress: The progress of this CreateImageInfo.  # noqa: E501
        :type progress: str
        :param progress_detail: The progress_detail of this CreateImageInfo.  # noqa: E501
        :type progress_detail: ProgressDetail
        :param status: The status of this CreateImageInfo.  # noqa: E501
        :type status: str
        """
        self.openapi_types = {
            'error': str,
            'progress': str,
            'progress_detail': ProgressDetail,
            'status': str
        }

        self.attribute_map = {
            'error': 'error',
            'progress': 'progress',
            'progress_detail': 'progressDetail',
            'status': 'status'
        }

        self._error = error
        self._progress = progress
        self._progress_detail = progress_detail
        self._status = status

    @classmethod
    def from_dict(cls, dikt) -> 'CreateImageInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CreateImageInfo of this CreateImageInfo.  # noqa: E501
        :rtype: CreateImageInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error(self) -> str:
        """Gets the error of this CreateImageInfo.


        :return: The error of this CreateImageInfo.
        :rtype: str
        """
        return self._error

    @error.setter
    def error(self, error: str):
        """Sets the error of this CreateImageInfo.


        :param error: The error of this CreateImageInfo.
        :type error: str
        """

        self._error = error

    @property
    def progress(self) -> str:
        """Gets the progress of this CreateImageInfo.


        :return: The progress of this CreateImageInfo.
        :rtype: str
        """
        return self._progress

    @progress.setter
    def progress(self, progress: str):
        """Sets the progress of this CreateImageInfo.


        :param progress: The progress of this CreateImageInfo.
        :type progress: str
        """

        self._progress = progress

    @property
    def progress_detail(self) -> ProgressDetail:
        """Gets the progress_detail of this CreateImageInfo.


        :return: The progress_detail of this CreateImageInfo.
        :rtype: ProgressDetail
        """
        return self._progress_detail

    @progress_detail.setter
    def progress_detail(self, progress_detail: ProgressDetail):
        """Sets the progress_detail of this CreateImageInfo.


        :param progress_detail: The progress_detail of this CreateImageInfo.
        :type progress_detail: ProgressDetail
        """

        self._progress_detail = progress_detail

    @property
    def status(self) -> str:
        """Gets the status of this CreateImageInfo.


        :return: The status of this CreateImageInfo.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status: str):
        """Sets the status of this CreateImageInfo.


        :param status: The status of this CreateImageInfo.
        :type status: str
        """

        self._status = status
