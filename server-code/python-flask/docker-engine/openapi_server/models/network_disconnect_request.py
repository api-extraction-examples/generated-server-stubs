from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class NetworkDisconnectRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, container=None, force=None):  # noqa: E501
        """NetworkDisconnectRequest - a model defined in OpenAPI

        :param container: The container of this NetworkDisconnectRequest.  # noqa: E501
        :type container: str
        :param force: The force of this NetworkDisconnectRequest.  # noqa: E501
        :type force: bool
        """
        self.openapi_types = {
            'container': str,
            'force': bool
        }

        self.attribute_map = {
            'container': 'Container',
            'force': 'Force'
        }

        self._container = container
        self._force = force

    @classmethod
    def from_dict(cls, dikt) -> 'NetworkDisconnectRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NetworkDisconnect_request of this NetworkDisconnectRequest.  # noqa: E501
        :rtype: NetworkDisconnectRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def container(self) -> str:
        """Gets the container of this NetworkDisconnectRequest.

        The ID or name of the container to disconnect from the network.  # noqa: E501

        :return: The container of this NetworkDisconnectRequest.
        :rtype: str
        """
        return self._container

    @container.setter
    def container(self, container: str):
        """Sets the container of this NetworkDisconnectRequest.

        The ID or name of the container to disconnect from the network.  # noqa: E501

        :param container: The container of this NetworkDisconnectRequest.
        :type container: str
        """

        self._container = container

    @property
    def force(self) -> bool:
        """Gets the force of this NetworkDisconnectRequest.

        Force the container to disconnect from the network.  # noqa: E501

        :return: The force of this NetworkDisconnectRequest.
        :rtype: bool
        """
        return self._force

    @force.setter
    def force(self, force: bool):
        """Sets the force of this NetworkDisconnectRequest.

        Force the container to disconnect from the network.  # noqa: E501

        :param force: The force of this NetworkDisconnectRequest.
        :type force: bool
        """

        self._force = force
