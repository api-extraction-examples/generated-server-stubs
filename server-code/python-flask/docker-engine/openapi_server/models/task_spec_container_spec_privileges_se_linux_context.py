from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class TaskSpecContainerSpecPrivilegesSELinuxContext(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disable=None, level=None, role=None, type=None, user=None):  # noqa: E501
        """TaskSpecContainerSpecPrivilegesSELinuxContext - a model defined in OpenAPI

        :param disable: The disable of this TaskSpecContainerSpecPrivilegesSELinuxContext.  # noqa: E501
        :type disable: bool
        :param level: The level of this TaskSpecContainerSpecPrivilegesSELinuxContext.  # noqa: E501
        :type level: str
        :param role: The role of this TaskSpecContainerSpecPrivilegesSELinuxContext.  # noqa: E501
        :type role: str
        :param type: The type of this TaskSpecContainerSpecPrivilegesSELinuxContext.  # noqa: E501
        :type type: str
        :param user: The user of this TaskSpecContainerSpecPrivilegesSELinuxContext.  # noqa: E501
        :type user: str
        """
        self.openapi_types = {
            'disable': bool,
            'level': str,
            'role': str,
            'type': str,
            'user': str
        }

        self.attribute_map = {
            'disable': 'Disable',
            'level': 'Level',
            'role': 'Role',
            'type': 'Type',
            'user': 'User'
        }

        self._disable = disable
        self._level = level
        self._role = role
        self._type = type
        self._user = user

    @classmethod
    def from_dict(cls, dikt) -> 'TaskSpecContainerSpecPrivilegesSELinuxContext':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TaskSpec_ContainerSpec_Privileges_SELinuxContext of this TaskSpecContainerSpecPrivilegesSELinuxContext.  # noqa: E501
        :rtype: TaskSpecContainerSpecPrivilegesSELinuxContext
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disable(self) -> bool:
        """Gets the disable of this TaskSpecContainerSpecPrivilegesSELinuxContext.

        Disable SELinux  # noqa: E501

        :return: The disable of this TaskSpecContainerSpecPrivilegesSELinuxContext.
        :rtype: bool
        """
        return self._disable

    @disable.setter
    def disable(self, disable: bool):
        """Sets the disable of this TaskSpecContainerSpecPrivilegesSELinuxContext.

        Disable SELinux  # noqa: E501

        :param disable: The disable of this TaskSpecContainerSpecPrivilegesSELinuxContext.
        :type disable: bool
        """

        self._disable = disable

    @property
    def level(self) -> str:
        """Gets the level of this TaskSpecContainerSpecPrivilegesSELinuxContext.

        SELinux level label  # noqa: E501

        :return: The level of this TaskSpecContainerSpecPrivilegesSELinuxContext.
        :rtype: str
        """
        return self._level

    @level.setter
    def level(self, level: str):
        """Sets the level of this TaskSpecContainerSpecPrivilegesSELinuxContext.

        SELinux level label  # noqa: E501

        :param level: The level of this TaskSpecContainerSpecPrivilegesSELinuxContext.
        :type level: str
        """

        self._level = level

    @property
    def role(self) -> str:
        """Gets the role of this TaskSpecContainerSpecPrivilegesSELinuxContext.

        SELinux role label  # noqa: E501

        :return: The role of this TaskSpecContainerSpecPrivilegesSELinuxContext.
        :rtype: str
        """
        return self._role

    @role.setter
    def role(self, role: str):
        """Sets the role of this TaskSpecContainerSpecPrivilegesSELinuxContext.

        SELinux role label  # noqa: E501

        :param role: The role of this TaskSpecContainerSpecPrivilegesSELinuxContext.
        :type role: str
        """

        self._role = role

    @property
    def type(self) -> str:
        """Gets the type of this TaskSpecContainerSpecPrivilegesSELinuxContext.

        SELinux type label  # noqa: E501

        :return: The type of this TaskSpecContainerSpecPrivilegesSELinuxContext.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this TaskSpecContainerSpecPrivilegesSELinuxContext.

        SELinux type label  # noqa: E501

        :param type: The type of this TaskSpecContainerSpecPrivilegesSELinuxContext.
        :type type: str
        """

        self._type = type

    @property
    def user(self) -> str:
        """Gets the user of this TaskSpecContainerSpecPrivilegesSELinuxContext.

        SELinux user label  # noqa: E501

        :return: The user of this TaskSpecContainerSpecPrivilegesSELinuxContext.
        :rtype: str
        """
        return self._user

    @user.setter
    def user(self, user: str):
        """Sets the user of this TaskSpecContainerSpecPrivilegesSELinuxContext.

        SELinux user label  # noqa: E501

        :param user: The user of this TaskSpecContainerSpecPrivilegesSELinuxContext.
        :type user: str
        """

        self._user = user
