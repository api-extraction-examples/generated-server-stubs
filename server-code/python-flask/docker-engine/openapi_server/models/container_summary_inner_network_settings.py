from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.endpoint_settings import EndpointSettings
from openapi_server import util

from openapi_server.models.endpoint_settings import EndpointSettings  # noqa: E501

class ContainerSummaryInnerNetworkSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, networks=None):  # noqa: E501
        """ContainerSummaryInnerNetworkSettings - a model defined in OpenAPI

        :param networks: The networks of this ContainerSummaryInnerNetworkSettings.  # noqa: E501
        :type networks: Dict[str, EndpointSettings]
        """
        self.openapi_types = {
            'networks': Dict[str, EndpointSettings]
        }

        self.attribute_map = {
            'networks': 'Networks'
        }

        self._networks = networks

    @classmethod
    def from_dict(cls, dikt) -> 'ContainerSummaryInnerNetworkSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ContainerSummary_inner_NetworkSettings of this ContainerSummaryInnerNetworkSettings.  # noqa: E501
        :rtype: ContainerSummaryInnerNetworkSettings
        """
        return util.deserialize_model(dikt, cls)

    @property
    def networks(self) -> Dict[str, EndpointSettings]:
        """Gets the networks of this ContainerSummaryInnerNetworkSettings.


        :return: The networks of this ContainerSummaryInnerNetworkSettings.
        :rtype: Dict[str, EndpointSettings]
        """
        return self._networks

    @networks.setter
    def networks(self, networks: Dict[str, EndpointSettings]):
        """Sets the networks of this ContainerSummaryInnerNetworkSettings.


        :param networks: The networks of this ContainerSummaryInnerNetworkSettings.
        :type networks: Dict[str, EndpointSettings]
        """

        self._networks = networks
