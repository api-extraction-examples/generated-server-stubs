from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.driver import Driver
from openapi_server import util

from openapi_server.models.driver import Driver  # noqa: E501

class SecretCreateRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data=None, driver=None, labels=None, name=None):  # noqa: E501
        """SecretCreateRequest - a model defined in OpenAPI

        :param data: The data of this SecretCreateRequest.  # noqa: E501
        :type data: str
        :param driver: The driver of this SecretCreateRequest.  # noqa: E501
        :type driver: Driver
        :param labels: The labels of this SecretCreateRequest.  # noqa: E501
        :type labels: Dict[str, str]
        :param name: The name of this SecretCreateRequest.  # noqa: E501
        :type name: str
        """
        self.openapi_types = {
            'data': str,
            'driver': Driver,
            'labels': Dict[str, str],
            'name': str
        }

        self.attribute_map = {
            'data': 'Data',
            'driver': 'Driver',
            'labels': 'Labels',
            'name': 'Name'
        }

        self._data = data
        self._driver = driver
        self._labels = labels
        self._name = name

    @classmethod
    def from_dict(cls, dikt) -> 'SecretCreateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SecretCreate_request of this SecretCreateRequest.  # noqa: E501
        :rtype: SecretCreateRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data(self) -> str:
        """Gets the data of this SecretCreateRequest.

        Base64-url-safe-encoded ([RFC 4648](https://tools.ietf.org/html/rfc4648#section-3.2)) data to store as secret.  This field is only used to _create_ a secret, and is not returned by other endpoints.   # noqa: E501

        :return: The data of this SecretCreateRequest.
        :rtype: str
        """
        return self._data

    @data.setter
    def data(self, data: str):
        """Sets the data of this SecretCreateRequest.

        Base64-url-safe-encoded ([RFC 4648](https://tools.ietf.org/html/rfc4648#section-3.2)) data to store as secret.  This field is only used to _create_ a secret, and is not returned by other endpoints.   # noqa: E501

        :param data: The data of this SecretCreateRequest.
        :type data: str
        """

        self._data = data

    @property
    def driver(self) -> Driver:
        """Gets the driver of this SecretCreateRequest.


        :return: The driver of this SecretCreateRequest.
        :rtype: Driver
        """
        return self._driver

    @driver.setter
    def driver(self, driver: Driver):
        """Sets the driver of this SecretCreateRequest.


        :param driver: The driver of this SecretCreateRequest.
        :type driver: Driver
        """

        self._driver = driver

    @property
    def labels(self) -> Dict[str, str]:
        """Gets the labels of this SecretCreateRequest.

        User-defined key/value metadata.  # noqa: E501

        :return: The labels of this SecretCreateRequest.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels: Dict[str, str]):
        """Sets the labels of this SecretCreateRequest.

        User-defined key/value metadata.  # noqa: E501

        :param labels: The labels of this SecretCreateRequest.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def name(self) -> str:
        """Gets the name of this SecretCreateRequest.

        User-defined name of the secret.  # noqa: E501

        :return: The name of this SecretCreateRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this SecretCreateRequest.

        User-defined name of the secret.  # noqa: E501

        :param name: The name of this SecretCreateRequest.
        :type name: str
        """

        self._name = name
