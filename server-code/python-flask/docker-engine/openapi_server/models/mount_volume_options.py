from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.mount_volume_options_driver_config import MountVolumeOptionsDriverConfig
from openapi_server import util

from openapi_server.models.mount_volume_options_driver_config import MountVolumeOptionsDriverConfig  # noqa: E501

class MountVolumeOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, driver_config=None, labels=None, no_copy=False):  # noqa: E501
        """MountVolumeOptions - a model defined in OpenAPI

        :param driver_config: The driver_config of this MountVolumeOptions.  # noqa: E501
        :type driver_config: MountVolumeOptionsDriverConfig
        :param labels: The labels of this MountVolumeOptions.  # noqa: E501
        :type labels: Dict[str, str]
        :param no_copy: The no_copy of this MountVolumeOptions.  # noqa: E501
        :type no_copy: bool
        """
        self.openapi_types = {
            'driver_config': MountVolumeOptionsDriverConfig,
            'labels': Dict[str, str],
            'no_copy': bool
        }

        self.attribute_map = {
            'driver_config': 'DriverConfig',
            'labels': 'Labels',
            'no_copy': 'NoCopy'
        }

        self._driver_config = driver_config
        self._labels = labels
        self._no_copy = no_copy

    @classmethod
    def from_dict(cls, dikt) -> 'MountVolumeOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Mount_VolumeOptions of this MountVolumeOptions.  # noqa: E501
        :rtype: MountVolumeOptions
        """
        return util.deserialize_model(dikt, cls)

    @property
    def driver_config(self) -> MountVolumeOptionsDriverConfig:
        """Gets the driver_config of this MountVolumeOptions.


        :return: The driver_config of this MountVolumeOptions.
        :rtype: MountVolumeOptionsDriverConfig
        """
        return self._driver_config

    @driver_config.setter
    def driver_config(self, driver_config: MountVolumeOptionsDriverConfig):
        """Sets the driver_config of this MountVolumeOptions.


        :param driver_config: The driver_config of this MountVolumeOptions.
        :type driver_config: MountVolumeOptionsDriverConfig
        """

        self._driver_config = driver_config

    @property
    def labels(self) -> Dict[str, str]:
        """Gets the labels of this MountVolumeOptions.

        User-defined key/value metadata.  # noqa: E501

        :return: The labels of this MountVolumeOptions.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels: Dict[str, str]):
        """Sets the labels of this MountVolumeOptions.

        User-defined key/value metadata.  # noqa: E501

        :param labels: The labels of this MountVolumeOptions.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def no_copy(self) -> bool:
        """Gets the no_copy of this MountVolumeOptions.

        Populate volume with data from the target.  # noqa: E501

        :return: The no_copy of this MountVolumeOptions.
        :rtype: bool
        """
        return self._no_copy

    @no_copy.setter
    def no_copy(self, no_copy: bool):
        """Sets the no_copy of this MountVolumeOptions.

        Populate volume with data from the target.  # noqa: E501

        :param no_copy: The no_copy of this MountVolumeOptions.
        :type no_copy: bool
        """

        self._no_copy = no_copy
