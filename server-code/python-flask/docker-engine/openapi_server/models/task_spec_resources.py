from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.resource_object import ResourceObject
from openapi_server import util

from openapi_server.models.resource_object import ResourceObject  # noqa: E501

class TaskSpecResources(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, limits=None, reservation=None):  # noqa: E501
        """TaskSpecResources - a model defined in OpenAPI

        :param limits: The limits of this TaskSpecResources.  # noqa: E501
        :type limits: ResourceObject
        :param reservation: The reservation of this TaskSpecResources.  # noqa: E501
        :type reservation: ResourceObject
        """
        self.openapi_types = {
            'limits': ResourceObject,
            'reservation': ResourceObject
        }

        self.attribute_map = {
            'limits': 'Limits',
            'reservation': 'Reservation'
        }

        self._limits = limits
        self._reservation = reservation

    @classmethod
    def from_dict(cls, dikt) -> 'TaskSpecResources':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TaskSpec_Resources of this TaskSpecResources.  # noqa: E501
        :rtype: TaskSpecResources
        """
        return util.deserialize_model(dikt, cls)

    @property
    def limits(self) -> ResourceObject:
        """Gets the limits of this TaskSpecResources.


        :return: The limits of this TaskSpecResources.
        :rtype: ResourceObject
        """
        return self._limits

    @limits.setter
    def limits(self, limits: ResourceObject):
        """Sets the limits of this TaskSpecResources.


        :param limits: The limits of this TaskSpecResources.
        :type limits: ResourceObject
        """

        self._limits = limits

    @property
    def reservation(self) -> ResourceObject:
        """Gets the reservation of this TaskSpecResources.


        :return: The reservation of this TaskSpecResources.
        :rtype: ResourceObject
        """
        return self._reservation

    @reservation.setter
    def reservation(self, reservation: ResourceObject):
        """Sets the reservation of this TaskSpecResources.


        :param reservation: The reservation of this TaskSpecResources.
        :type reservation: ResourceObject
        """

        self._reservation = reservation
