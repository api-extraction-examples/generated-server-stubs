from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class DeviceMapping(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cgroup_permissions=None, path_in_container=None, path_on_host=None):  # noqa: E501
        """DeviceMapping - a model defined in OpenAPI

        :param cgroup_permissions: The cgroup_permissions of this DeviceMapping.  # noqa: E501
        :type cgroup_permissions: str
        :param path_in_container: The path_in_container of this DeviceMapping.  # noqa: E501
        :type path_in_container: str
        :param path_on_host: The path_on_host of this DeviceMapping.  # noqa: E501
        :type path_on_host: str
        """
        self.openapi_types = {
            'cgroup_permissions': str,
            'path_in_container': str,
            'path_on_host': str
        }

        self.attribute_map = {
            'cgroup_permissions': 'CgroupPermissions',
            'path_in_container': 'PathInContainer',
            'path_on_host': 'PathOnHost'
        }

        self._cgroup_permissions = cgroup_permissions
        self._path_in_container = path_in_container
        self._path_on_host = path_on_host

    @classmethod
    def from_dict(cls, dikt) -> 'DeviceMapping':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DeviceMapping of this DeviceMapping.  # noqa: E501
        :rtype: DeviceMapping
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cgroup_permissions(self) -> str:
        """Gets the cgroup_permissions of this DeviceMapping.


        :return: The cgroup_permissions of this DeviceMapping.
        :rtype: str
        """
        return self._cgroup_permissions

    @cgroup_permissions.setter
    def cgroup_permissions(self, cgroup_permissions: str):
        """Sets the cgroup_permissions of this DeviceMapping.


        :param cgroup_permissions: The cgroup_permissions of this DeviceMapping.
        :type cgroup_permissions: str
        """

        self._cgroup_permissions = cgroup_permissions

    @property
    def path_in_container(self) -> str:
        """Gets the path_in_container of this DeviceMapping.


        :return: The path_in_container of this DeviceMapping.
        :rtype: str
        """
        return self._path_in_container

    @path_in_container.setter
    def path_in_container(self, path_in_container: str):
        """Sets the path_in_container of this DeviceMapping.


        :param path_in_container: The path_in_container of this DeviceMapping.
        :type path_in_container: str
        """

        self._path_in_container = path_in_container

    @property
    def path_on_host(self) -> str:
        """Gets the path_on_host of this DeviceMapping.


        :return: The path_on_host of this DeviceMapping.
        :rtype: str
        """
        return self._path_on_host

    @path_on_host.setter
    def path_on_host(self, path_on_host: str):
        """Sets the path_on_host of this DeviceMapping.


        :param path_on_host: The path_on_host of this DeviceMapping.
        :type path_on_host: str
        """

        self._path_on_host = path_on_host
