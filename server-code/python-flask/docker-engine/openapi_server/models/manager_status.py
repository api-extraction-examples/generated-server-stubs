from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.reachability import Reachability
from openapi_server import util

from openapi_server.models.reachability import Reachability  # noqa: E501

class ManagerStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, addr=None, leader=False, reachability=None):  # noqa: E501
        """ManagerStatus - a model defined in OpenAPI

        :param addr: The addr of this ManagerStatus.  # noqa: E501
        :type addr: str
        :param leader: The leader of this ManagerStatus.  # noqa: E501
        :type leader: bool
        :param reachability: The reachability of this ManagerStatus.  # noqa: E501
        :type reachability: Reachability
        """
        self.openapi_types = {
            'addr': str,
            'leader': bool,
            'reachability': Reachability
        }

        self.attribute_map = {
            'addr': 'Addr',
            'leader': 'Leader',
            'reachability': 'Reachability'
        }

        self._addr = addr
        self._leader = leader
        self._reachability = reachability

    @classmethod
    def from_dict(cls, dikt) -> 'ManagerStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ManagerStatus of this ManagerStatus.  # noqa: E501
        :rtype: ManagerStatus
        """
        return util.deserialize_model(dikt, cls)

    @property
    def addr(self) -> str:
        """Gets the addr of this ManagerStatus.

        The IP address and port at which the manager is reachable.   # noqa: E501

        :return: The addr of this ManagerStatus.
        :rtype: str
        """
        return self._addr

    @addr.setter
    def addr(self, addr: str):
        """Sets the addr of this ManagerStatus.

        The IP address and port at which the manager is reachable.   # noqa: E501

        :param addr: The addr of this ManagerStatus.
        :type addr: str
        """

        self._addr = addr

    @property
    def leader(self) -> bool:
        """Gets the leader of this ManagerStatus.


        :return: The leader of this ManagerStatus.
        :rtype: bool
        """
        return self._leader

    @leader.setter
    def leader(self, leader: bool):
        """Sets the leader of this ManagerStatus.


        :param leader: The leader of this ManagerStatus.
        :type leader: bool
        """

        self._leader = leader

    @property
    def reachability(self) -> Reachability:
        """Gets the reachability of this ManagerStatus.


        :return: The reachability of this ManagerStatus.
        :rtype: Reachability
        """
        return self._reachability

    @reachability.setter
    def reachability(self, reachability: Reachability):
        """Sets the reachability of this ManagerStatus.


        :param reachability: The reachability of this ManagerStatus.
        :type reachability: Reachability
        """

        self._reachability = reachability
