from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class ContainerCreate201Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, warnings=None):  # noqa: E501
        """ContainerCreate201Response - a model defined in OpenAPI

        :param id: The id of this ContainerCreate201Response.  # noqa: E501
        :type id: str
        :param warnings: The warnings of this ContainerCreate201Response.  # noqa: E501
        :type warnings: List[str]
        """
        self.openapi_types = {
            'id': str,
            'warnings': List[str]
        }

        self.attribute_map = {
            'id': 'Id',
            'warnings': 'Warnings'
        }

        self._id = id
        self._warnings = warnings

    @classmethod
    def from_dict(cls, dikt) -> 'ContainerCreate201Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ContainerCreate_201_response of this ContainerCreate201Response.  # noqa: E501
        :rtype: ContainerCreate201Response
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this ContainerCreate201Response.

        The ID of the created container  # noqa: E501

        :return: The id of this ContainerCreate201Response.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this ContainerCreate201Response.

        The ID of the created container  # noqa: E501

        :param id: The id of this ContainerCreate201Response.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def warnings(self) -> List[str]:
        """Gets the warnings of this ContainerCreate201Response.

        Warnings encountered when creating the container  # noqa: E501

        :return: The warnings of this ContainerCreate201Response.
        :rtype: List[str]
        """
        return self._warnings

    @warnings.setter
    def warnings(self, warnings: List[str]):
        """Sets the warnings of this ContainerCreate201Response.

        Warnings encountered when creating the container  # noqa: E501

        :param warnings: The warnings of this ContainerCreate201Response.
        :type warnings: List[str]
        """
        if warnings is None:
            raise ValueError("Invalid value for `warnings`, must not be `None`")  # noqa: E501

        self._warnings = warnings
