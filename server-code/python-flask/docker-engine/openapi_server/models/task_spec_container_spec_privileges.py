from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.task_spec_container_spec_privileges_credential_spec import TaskSpecContainerSpecPrivilegesCredentialSpec
from openapi_server.models.task_spec_container_spec_privileges_se_linux_context import TaskSpecContainerSpecPrivilegesSELinuxContext
from openapi_server import util

from openapi_server.models.task_spec_container_spec_privileges_credential_spec import TaskSpecContainerSpecPrivilegesCredentialSpec  # noqa: E501
from openapi_server.models.task_spec_container_spec_privileges_se_linux_context import TaskSpecContainerSpecPrivilegesSELinuxContext  # noqa: E501

class TaskSpecContainerSpecPrivileges(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, credential_spec=None, se_linux_context=None):  # noqa: E501
        """TaskSpecContainerSpecPrivileges - a model defined in OpenAPI

        :param credential_spec: The credential_spec of this TaskSpecContainerSpecPrivileges.  # noqa: E501
        :type credential_spec: TaskSpecContainerSpecPrivilegesCredentialSpec
        :param se_linux_context: The se_linux_context of this TaskSpecContainerSpecPrivileges.  # noqa: E501
        :type se_linux_context: TaskSpecContainerSpecPrivilegesSELinuxContext
        """
        self.openapi_types = {
            'credential_spec': TaskSpecContainerSpecPrivilegesCredentialSpec,
            'se_linux_context': TaskSpecContainerSpecPrivilegesSELinuxContext
        }

        self.attribute_map = {
            'credential_spec': 'CredentialSpec',
            'se_linux_context': 'SELinuxContext'
        }

        self._credential_spec = credential_spec
        self._se_linux_context = se_linux_context

    @classmethod
    def from_dict(cls, dikt) -> 'TaskSpecContainerSpecPrivileges':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TaskSpec_ContainerSpec_Privileges of this TaskSpecContainerSpecPrivileges.  # noqa: E501
        :rtype: TaskSpecContainerSpecPrivileges
        """
        return util.deserialize_model(dikt, cls)

    @property
    def credential_spec(self) -> TaskSpecContainerSpecPrivilegesCredentialSpec:
        """Gets the credential_spec of this TaskSpecContainerSpecPrivileges.


        :return: The credential_spec of this TaskSpecContainerSpecPrivileges.
        :rtype: TaskSpecContainerSpecPrivilegesCredentialSpec
        """
        return self._credential_spec

    @credential_spec.setter
    def credential_spec(self, credential_spec: TaskSpecContainerSpecPrivilegesCredentialSpec):
        """Sets the credential_spec of this TaskSpecContainerSpecPrivileges.


        :param credential_spec: The credential_spec of this TaskSpecContainerSpecPrivileges.
        :type credential_spec: TaskSpecContainerSpecPrivilegesCredentialSpec
        """

        self._credential_spec = credential_spec

    @property
    def se_linux_context(self) -> TaskSpecContainerSpecPrivilegesSELinuxContext:
        """Gets the se_linux_context of this TaskSpecContainerSpecPrivileges.


        :return: The se_linux_context of this TaskSpecContainerSpecPrivileges.
        :rtype: TaskSpecContainerSpecPrivilegesSELinuxContext
        """
        return self._se_linux_context

    @se_linux_context.setter
    def se_linux_context(self, se_linux_context: TaskSpecContainerSpecPrivilegesSELinuxContext):
        """Sets the se_linux_context of this TaskSpecContainerSpecPrivileges.


        :param se_linux_context: The se_linux_context of this TaskSpecContainerSpecPrivileges.
        :type se_linux_context: TaskSpecContainerSpecPrivilegesSELinuxContext
        """

        self._se_linux_context = se_linux_context
