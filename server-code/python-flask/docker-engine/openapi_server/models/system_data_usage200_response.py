from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.container_summary_inner import ContainerSummaryInner
from openapi_server.models.image_summary import ImageSummary
from openapi_server.models.volume import Volume
from openapi_server import util

from openapi_server.models.container_summary_inner import ContainerSummaryInner  # noqa: E501
from openapi_server.models.image_summary import ImageSummary  # noqa: E501
from openapi_server.models.volume import Volume  # noqa: E501

class SystemDataUsage200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, containers=None, images=None, layers_size=None, volumes=None):  # noqa: E501
        """SystemDataUsage200Response - a model defined in OpenAPI

        :param containers: The containers of this SystemDataUsage200Response.  # noqa: E501
        :type containers: List[List[ContainerSummaryInner]]
        :param images: The images of this SystemDataUsage200Response.  # noqa: E501
        :type images: List[ImageSummary]
        :param layers_size: The layers_size of this SystemDataUsage200Response.  # noqa: E501
        :type layers_size: int
        :param volumes: The volumes of this SystemDataUsage200Response.  # noqa: E501
        :type volumes: List[Volume]
        """
        self.openapi_types = {
            'containers': List[List[ContainerSummaryInner]],
            'images': List[ImageSummary],
            'layers_size': int,
            'volumes': List[Volume]
        }

        self.attribute_map = {
            'containers': 'Containers',
            'images': 'Images',
            'layers_size': 'LayersSize',
            'volumes': 'Volumes'
        }

        self._containers = containers
        self._images = images
        self._layers_size = layers_size
        self._volumes = volumes

    @classmethod
    def from_dict(cls, dikt) -> 'SystemDataUsage200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SystemDataUsage_200_response of this SystemDataUsage200Response.  # noqa: E501
        :rtype: SystemDataUsage200Response
        """
        return util.deserialize_model(dikt, cls)

    @property
    def containers(self) -> List[List[ContainerSummaryInner]]:
        """Gets the containers of this SystemDataUsage200Response.


        :return: The containers of this SystemDataUsage200Response.
        :rtype: List[List[ContainerSummaryInner]]
        """
        return self._containers

    @containers.setter
    def containers(self, containers: List[List[ContainerSummaryInner]]):
        """Sets the containers of this SystemDataUsage200Response.


        :param containers: The containers of this SystemDataUsage200Response.
        :type containers: List[List[ContainerSummaryInner]]
        """

        self._containers = containers

    @property
    def images(self) -> List[ImageSummary]:
        """Gets the images of this SystemDataUsage200Response.


        :return: The images of this SystemDataUsage200Response.
        :rtype: List[ImageSummary]
        """
        return self._images

    @images.setter
    def images(self, images: List[ImageSummary]):
        """Sets the images of this SystemDataUsage200Response.


        :param images: The images of this SystemDataUsage200Response.
        :type images: List[ImageSummary]
        """

        self._images = images

    @property
    def layers_size(self) -> int:
        """Gets the layers_size of this SystemDataUsage200Response.


        :return: The layers_size of this SystemDataUsage200Response.
        :rtype: int
        """
        return self._layers_size

    @layers_size.setter
    def layers_size(self, layers_size: int):
        """Sets the layers_size of this SystemDataUsage200Response.


        :param layers_size: The layers_size of this SystemDataUsage200Response.
        :type layers_size: int
        """

        self._layers_size = layers_size

    @property
    def volumes(self) -> List[Volume]:
        """Gets the volumes of this SystemDataUsage200Response.


        :return: The volumes of this SystemDataUsage200Response.
        :rtype: List[Volume]
        """
        return self._volumes

    @volumes.setter
    def volumes(self, volumes: List[Volume]):
        """Sets the volumes of this SystemDataUsage200Response.


        :param volumes: The volumes of this SystemDataUsage200Response.
        :type volumes: List[Volume]
        """

        self._volumes = volumes
