from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class ImageSearch200ResponseInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description=None, is_automated=None, is_official=None, name=None, star_count=None):  # noqa: E501
        """ImageSearch200ResponseInner - a model defined in OpenAPI

        :param description: The description of this ImageSearch200ResponseInner.  # noqa: E501
        :type description: str
        :param is_automated: The is_automated of this ImageSearch200ResponseInner.  # noqa: E501
        :type is_automated: bool
        :param is_official: The is_official of this ImageSearch200ResponseInner.  # noqa: E501
        :type is_official: bool
        :param name: The name of this ImageSearch200ResponseInner.  # noqa: E501
        :type name: str
        :param star_count: The star_count of this ImageSearch200ResponseInner.  # noqa: E501
        :type star_count: int
        """
        self.openapi_types = {
            'description': str,
            'is_automated': bool,
            'is_official': bool,
            'name': str,
            'star_count': int
        }

        self.attribute_map = {
            'description': 'description',
            'is_automated': 'is_automated',
            'is_official': 'is_official',
            'name': 'name',
            'star_count': 'star_count'
        }

        self._description = description
        self._is_automated = is_automated
        self._is_official = is_official
        self._name = name
        self._star_count = star_count

    @classmethod
    def from_dict(cls, dikt) -> 'ImageSearch200ResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ImageSearch_200_response_inner of this ImageSearch200ResponseInner.  # noqa: E501
        :rtype: ImageSearch200ResponseInner
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self) -> str:
        """Gets the description of this ImageSearch200ResponseInner.


        :return: The description of this ImageSearch200ResponseInner.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this ImageSearch200ResponseInner.


        :param description: The description of this ImageSearch200ResponseInner.
        :type description: str
        """

        self._description = description

    @property
    def is_automated(self) -> bool:
        """Gets the is_automated of this ImageSearch200ResponseInner.


        :return: The is_automated of this ImageSearch200ResponseInner.
        :rtype: bool
        """
        return self._is_automated

    @is_automated.setter
    def is_automated(self, is_automated: bool):
        """Sets the is_automated of this ImageSearch200ResponseInner.


        :param is_automated: The is_automated of this ImageSearch200ResponseInner.
        :type is_automated: bool
        """

        self._is_automated = is_automated

    @property
    def is_official(self) -> bool:
        """Gets the is_official of this ImageSearch200ResponseInner.


        :return: The is_official of this ImageSearch200ResponseInner.
        :rtype: bool
        """
        return self._is_official

    @is_official.setter
    def is_official(self, is_official: bool):
        """Sets the is_official of this ImageSearch200ResponseInner.


        :param is_official: The is_official of this ImageSearch200ResponseInner.
        :type is_official: bool
        """

        self._is_official = is_official

    @property
    def name(self) -> str:
        """Gets the name of this ImageSearch200ResponseInner.


        :return: The name of this ImageSearch200ResponseInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this ImageSearch200ResponseInner.


        :param name: The name of this ImageSearch200ResponseInner.
        :type name: str
        """

        self._name = name

    @property
    def star_count(self) -> int:
        """Gets the star_count of this ImageSearch200ResponseInner.


        :return: The star_count of this ImageSearch200ResponseInner.
        :rtype: int
        """
        return self._star_count

    @star_count.setter
    def star_count(self, star_count: int):
        """Sets the star_count of this ImageSearch200ResponseInner.


        :param star_count: The star_count of this ImageSearch200ResponseInner.
        :type star_count: int
        """

        self._star_count = star_count
