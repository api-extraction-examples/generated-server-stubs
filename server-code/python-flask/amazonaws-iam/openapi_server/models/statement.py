from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.policy_source_type import PolicySourceType
from openapi_server.models.statement_end_position import StatementEndPosition
from openapi_server.models.statement_start_position import StatementStartPosition
from openapi_server import util

from openapi_server.models.policy_source_type import PolicySourceType  # noqa: E501
from openapi_server.models.statement_end_position import StatementEndPosition  # noqa: E501
from openapi_server.models.statement_start_position import StatementStartPosition  # noqa: E501

class Statement(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source_policy_id=None, source_policy_type=None, start_position=None, end_position=None):  # noqa: E501
        """Statement - a model defined in OpenAPI

        :param source_policy_id: The source_policy_id of this Statement.  # noqa: E501
        :type source_policy_id: str
        :param source_policy_type: The source_policy_type of this Statement.  # noqa: E501
        :type source_policy_type: PolicySourceType
        :param start_position: The start_position of this Statement.  # noqa: E501
        :type start_position: StatementStartPosition
        :param end_position: The end_position of this Statement.  # noqa: E501
        :type end_position: StatementEndPosition
        """
        self.openapi_types = {
            'source_policy_id': str,
            'source_policy_type': PolicySourceType,
            'start_position': StatementStartPosition,
            'end_position': StatementEndPosition
        }

        self.attribute_map = {
            'source_policy_id': 'SourcePolicyId',
            'source_policy_type': 'SourcePolicyType',
            'start_position': 'StartPosition',
            'end_position': 'EndPosition'
        }

        self._source_policy_id = source_policy_id
        self._source_policy_type = source_policy_type
        self._start_position = start_position
        self._end_position = end_position

    @classmethod
    def from_dict(cls, dikt) -> 'Statement':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Statement of this Statement.  # noqa: E501
        :rtype: Statement
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_policy_id(self) -> str:
        """Gets the source_policy_id of this Statement.


        :return: The source_policy_id of this Statement.
        :rtype: str
        """
        return self._source_policy_id

    @source_policy_id.setter
    def source_policy_id(self, source_policy_id: str):
        """Sets the source_policy_id of this Statement.


        :param source_policy_id: The source_policy_id of this Statement.
        :type source_policy_id: str
        """

        self._source_policy_id = source_policy_id

    @property
    def source_policy_type(self) -> PolicySourceType:
        """Gets the source_policy_type of this Statement.


        :return: The source_policy_type of this Statement.
        :rtype: PolicySourceType
        """
        return self._source_policy_type

    @source_policy_type.setter
    def source_policy_type(self, source_policy_type: PolicySourceType):
        """Sets the source_policy_type of this Statement.


        :param source_policy_type: The source_policy_type of this Statement.
        :type source_policy_type: PolicySourceType
        """

        self._source_policy_type = source_policy_type

    @property
    def start_position(self) -> StatementStartPosition:
        """Gets the start_position of this Statement.


        :return: The start_position of this Statement.
        :rtype: StatementStartPosition
        """
        return self._start_position

    @start_position.setter
    def start_position(self, start_position: StatementStartPosition):
        """Sets the start_position of this Statement.


        :param start_position: The start_position of this Statement.
        :type start_position: StatementStartPosition
        """

        self._start_position = start_position

    @property
    def end_position(self) -> StatementEndPosition:
        """Gets the end_position of this Statement.


        :return: The end_position of this Statement.
        :rtype: StatementEndPosition
        """
        return self._end_position

    @end_position.setter
    def end_position(self, end_position: StatementEndPosition):
        """Sets the end_position of this Statement.


        :param end_position: The end_position of this Statement.
        :type end_position: StatementEndPosition
        """

        self._end_position = end_position
