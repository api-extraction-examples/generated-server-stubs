from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.get_server_certificate_response_server_certificate import GetServerCertificateResponseServerCertificate
from openapi_server import util

from openapi_server.models.get_server_certificate_response_server_certificate import GetServerCertificateResponseServerCertificate  # noqa: E501

class GetServerCertificateResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, server_certificate=None):  # noqa: E501
        """GetServerCertificateResponse - a model defined in OpenAPI

        :param server_certificate: The server_certificate of this GetServerCertificateResponse.  # noqa: E501
        :type server_certificate: GetServerCertificateResponseServerCertificate
        """
        self.openapi_types = {
            'server_certificate': GetServerCertificateResponseServerCertificate
        }

        self.attribute_map = {
            'server_certificate': 'ServerCertificate'
        }

        self._server_certificate = server_certificate

    @classmethod
    def from_dict(cls, dikt) -> 'GetServerCertificateResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GetServerCertificateResponse of this GetServerCertificateResponse.  # noqa: E501
        :rtype: GetServerCertificateResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def server_certificate(self) -> GetServerCertificateResponseServerCertificate:
        """Gets the server_certificate of this GetServerCertificateResponse.


        :return: The server_certificate of this GetServerCertificateResponse.
        :rtype: GetServerCertificateResponseServerCertificate
        """
        return self._server_certificate

    @server_certificate.setter
    def server_certificate(self, server_certificate: GetServerCertificateResponseServerCertificate):
        """Sets the server_certificate of this GetServerCertificateResponse.


        :param server_certificate: The server_certificate of this GetServerCertificateResponse.
        :type server_certificate: GetServerCertificateResponseServerCertificate
        """
        if server_certificate is None:
            raise ValueError("Invalid value for `server_certificate`, must not be `None`")  # noqa: E501

        self._server_certificate = server_certificate
