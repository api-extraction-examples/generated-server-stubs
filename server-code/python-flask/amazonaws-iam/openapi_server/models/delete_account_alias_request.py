from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteAccountAliasRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_alias=None):  # noqa: E501
        """DeleteAccountAliasRequest - a model defined in OpenAPI

        :param account_alias: The account_alias of this DeleteAccountAliasRequest.  # noqa: E501
        :type account_alias: str
        """
        self.openapi_types = {
            'account_alias': str
        }

        self.attribute_map = {
            'account_alias': 'AccountAlias'
        }

        self._account_alias = account_alias

    @classmethod
    def from_dict(cls, dikt) -> 'DeleteAccountAliasRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DeleteAccountAliasRequest of this DeleteAccountAliasRequest.  # noqa: E501
        :rtype: DeleteAccountAliasRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_alias(self) -> str:
        """Gets the account_alias of this DeleteAccountAliasRequest.


        :return: The account_alias of this DeleteAccountAliasRequest.
        :rtype: str
        """
        return self._account_alias

    @account_alias.setter
    def account_alias(self, account_alias: str):
        """Sets the account_alias of this DeleteAccountAliasRequest.


        :param account_alias: The account_alias of this DeleteAccountAliasRequest.
        :type account_alias: str
        """
        if account_alias is None:
            raise ValueError("Invalid value for `account_alias`, must not be `None`")  # noqa: E501

        self._account_alias = account_alias
