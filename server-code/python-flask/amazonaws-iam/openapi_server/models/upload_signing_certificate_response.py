from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.upload_signing_certificate_response_certificate import UploadSigningCertificateResponseCertificate
from openapi_server import util

from openapi_server.models.upload_signing_certificate_response_certificate import UploadSigningCertificateResponseCertificate  # noqa: E501

class UploadSigningCertificateResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, certificate=None):  # noqa: E501
        """UploadSigningCertificateResponse - a model defined in OpenAPI

        :param certificate: The certificate of this UploadSigningCertificateResponse.  # noqa: E501
        :type certificate: UploadSigningCertificateResponseCertificate
        """
        self.openapi_types = {
            'certificate': UploadSigningCertificateResponseCertificate
        }

        self.attribute_map = {
            'certificate': 'Certificate'
        }

        self._certificate = certificate

    @classmethod
    def from_dict(cls, dikt) -> 'UploadSigningCertificateResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UploadSigningCertificateResponse of this UploadSigningCertificateResponse.  # noqa: E501
        :rtype: UploadSigningCertificateResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def certificate(self) -> UploadSigningCertificateResponseCertificate:
        """Gets the certificate of this UploadSigningCertificateResponse.


        :return: The certificate of this UploadSigningCertificateResponse.
        :rtype: UploadSigningCertificateResponseCertificate
        """
        return self._certificate

    @certificate.setter
    def certificate(self, certificate: UploadSigningCertificateResponseCertificate):
        """Sets the certificate of this UploadSigningCertificateResponse.


        :param certificate: The certificate of this UploadSigningCertificateResponse.
        :type certificate: UploadSigningCertificateResponseCertificate
        """
        if certificate is None:
            raise ValueError("Invalid value for `certificate`, must not be `None`")  # noqa: E501

        self._certificate = certificate
