from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.create_access_key_response_access_key import CreateAccessKeyResponseAccessKey
from openapi_server import util

from openapi_server.models.create_access_key_response_access_key import CreateAccessKeyResponseAccessKey  # noqa: E501

class CreateAccessKeyResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_key=None):  # noqa: E501
        """CreateAccessKeyResponse - a model defined in OpenAPI

        :param access_key: The access_key of this CreateAccessKeyResponse.  # noqa: E501
        :type access_key: CreateAccessKeyResponseAccessKey
        """
        self.openapi_types = {
            'access_key': CreateAccessKeyResponseAccessKey
        }

        self.attribute_map = {
            'access_key': 'AccessKey'
        }

        self._access_key = access_key

    @classmethod
    def from_dict(cls, dikt) -> 'CreateAccessKeyResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CreateAccessKeyResponse of this CreateAccessKeyResponse.  # noqa: E501
        :rtype: CreateAccessKeyResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_key(self) -> CreateAccessKeyResponseAccessKey:
        """Gets the access_key of this CreateAccessKeyResponse.


        :return: The access_key of this CreateAccessKeyResponse.
        :rtype: CreateAccessKeyResponseAccessKey
        """
        return self._access_key

    @access_key.setter
    def access_key(self, access_key: CreateAccessKeyResponseAccessKey):
        """Sets the access_key of this CreateAccessKeyResponse.


        :param access_key: The access_key of this CreateAccessKeyResponse.
        :type access_key: CreateAccessKeyResponseAccessKey
        """
        if access_key is None:
            raise ValueError("Invalid value for `access_key`, must not be `None`")  # noqa: E501

        self._access_key = access_key
