from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class GetContextKeysForPrincipalPolicyRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, policy_source_arn=None, policy_input_list=None):  # noqa: E501
        """GetContextKeysForPrincipalPolicyRequest - a model defined in OpenAPI

        :param policy_source_arn: The policy_source_arn of this GetContextKeysForPrincipalPolicyRequest.  # noqa: E501
        :type policy_source_arn: str
        :param policy_input_list: The policy_input_list of this GetContextKeysForPrincipalPolicyRequest.  # noqa: E501
        :type policy_input_list: List
        """
        self.openapi_types = {
            'policy_source_arn': str,
            'policy_input_list': List
        }

        self.attribute_map = {
            'policy_source_arn': 'PolicySourceArn',
            'policy_input_list': 'PolicyInputList'
        }

        self._policy_source_arn = policy_source_arn
        self._policy_input_list = policy_input_list

    @classmethod
    def from_dict(cls, dikt) -> 'GetContextKeysForPrincipalPolicyRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GetContextKeysForPrincipalPolicyRequest of this GetContextKeysForPrincipalPolicyRequest.  # noqa: E501
        :rtype: GetContextKeysForPrincipalPolicyRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def policy_source_arn(self) -> str:
        """Gets the policy_source_arn of this GetContextKeysForPrincipalPolicyRequest.


        :return: The policy_source_arn of this GetContextKeysForPrincipalPolicyRequest.
        :rtype: str
        """
        return self._policy_source_arn

    @policy_source_arn.setter
    def policy_source_arn(self, policy_source_arn: str):
        """Sets the policy_source_arn of this GetContextKeysForPrincipalPolicyRequest.


        :param policy_source_arn: The policy_source_arn of this GetContextKeysForPrincipalPolicyRequest.
        :type policy_source_arn: str
        """
        if policy_source_arn is None:
            raise ValueError("Invalid value for `policy_source_arn`, must not be `None`")  # noqa: E501

        self._policy_source_arn = policy_source_arn

    @property
    def policy_input_list(self) -> List:
        """Gets the policy_input_list of this GetContextKeysForPrincipalPolicyRequest.


        :return: The policy_input_list of this GetContextKeysForPrincipalPolicyRequest.
        :rtype: List
        """
        return self._policy_input_list

    @policy_input_list.setter
    def policy_input_list(self, policy_input_list: List):
        """Sets the policy_input_list of this GetContextKeysForPrincipalPolicyRequest.


        :param policy_input_list: The policy_input_list of this GetContextKeysForPrincipalPolicyRequest.
        :type policy_input_list: List
        """

        self._policy_input_list = policy_input_list
