from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class ListAccessKeysResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_key_metadata=None, is_truncated=None, marker=None):  # noqa: E501
        """ListAccessKeysResponse - a model defined in OpenAPI

        :param access_key_metadata: The access_key_metadata of this ListAccessKeysResponse.  # noqa: E501
        :type access_key_metadata: List
        :param is_truncated: The is_truncated of this ListAccessKeysResponse.  # noqa: E501
        :type is_truncated: bool
        :param marker: The marker of this ListAccessKeysResponse.  # noqa: E501
        :type marker: str
        """
        self.openapi_types = {
            'access_key_metadata': List,
            'is_truncated': bool,
            'marker': str
        }

        self.attribute_map = {
            'access_key_metadata': 'AccessKeyMetadata',
            'is_truncated': 'IsTruncated',
            'marker': 'Marker'
        }

        self._access_key_metadata = access_key_metadata
        self._is_truncated = is_truncated
        self._marker = marker

    @classmethod
    def from_dict(cls, dikt) -> 'ListAccessKeysResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ListAccessKeysResponse of this ListAccessKeysResponse.  # noqa: E501
        :rtype: ListAccessKeysResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_key_metadata(self) -> List:
        """Gets the access_key_metadata of this ListAccessKeysResponse.


        :return: The access_key_metadata of this ListAccessKeysResponse.
        :rtype: List
        """
        return self._access_key_metadata

    @access_key_metadata.setter
    def access_key_metadata(self, access_key_metadata: List):
        """Sets the access_key_metadata of this ListAccessKeysResponse.


        :param access_key_metadata: The access_key_metadata of this ListAccessKeysResponse.
        :type access_key_metadata: List
        """
        if access_key_metadata is None:
            raise ValueError("Invalid value for `access_key_metadata`, must not be `None`")  # noqa: E501

        self._access_key_metadata = access_key_metadata

    @property
    def is_truncated(self) -> bool:
        """Gets the is_truncated of this ListAccessKeysResponse.


        :return: The is_truncated of this ListAccessKeysResponse.
        :rtype: bool
        """
        return self._is_truncated

    @is_truncated.setter
    def is_truncated(self, is_truncated: bool):
        """Sets the is_truncated of this ListAccessKeysResponse.


        :param is_truncated: The is_truncated of this ListAccessKeysResponse.
        :type is_truncated: bool
        """

        self._is_truncated = is_truncated

    @property
    def marker(self) -> str:
        """Gets the marker of this ListAccessKeysResponse.


        :return: The marker of this ListAccessKeysResponse.
        :rtype: str
        """
        return self._marker

    @marker.setter
    def marker(self, marker: str):
        """Sets the marker of this ListAccessKeysResponse.


        :param marker: The marker of this ListAccessKeysResponse.
        :type marker: str
        """

        self._marker = marker
