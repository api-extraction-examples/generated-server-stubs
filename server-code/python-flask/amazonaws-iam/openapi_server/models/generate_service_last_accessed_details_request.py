from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.access_advisor_usage_granularity_type import AccessAdvisorUsageGranularityType
from openapi_server import util

from openapi_server.models.access_advisor_usage_granularity_type import AccessAdvisorUsageGranularityType  # noqa: E501

class GenerateServiceLastAccessedDetailsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn=None, granularity=None):  # noqa: E501
        """GenerateServiceLastAccessedDetailsRequest - a model defined in OpenAPI

        :param arn: The arn of this GenerateServiceLastAccessedDetailsRequest.  # noqa: E501
        :type arn: str
        :param granularity: The granularity of this GenerateServiceLastAccessedDetailsRequest.  # noqa: E501
        :type granularity: AccessAdvisorUsageGranularityType
        """
        self.openapi_types = {
            'arn': str,
            'granularity': AccessAdvisorUsageGranularityType
        }

        self.attribute_map = {
            'arn': 'Arn',
            'granularity': 'Granularity'
        }

        self._arn = arn
        self._granularity = granularity

    @classmethod
    def from_dict(cls, dikt) -> 'GenerateServiceLastAccessedDetailsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GenerateServiceLastAccessedDetailsRequest of this GenerateServiceLastAccessedDetailsRequest.  # noqa: E501
        :rtype: GenerateServiceLastAccessedDetailsRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self) -> str:
        """Gets the arn of this GenerateServiceLastAccessedDetailsRequest.


        :return: The arn of this GenerateServiceLastAccessedDetailsRequest.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn: str):
        """Sets the arn of this GenerateServiceLastAccessedDetailsRequest.


        :param arn: The arn of this GenerateServiceLastAccessedDetailsRequest.
        :type arn: str
        """
        if arn is None:
            raise ValueError("Invalid value for `arn`, must not be `None`")  # noqa: E501

        self._arn = arn

    @property
    def granularity(self) -> AccessAdvisorUsageGranularityType:
        """Gets the granularity of this GenerateServiceLastAccessedDetailsRequest.


        :return: The granularity of this GenerateServiceLastAccessedDetailsRequest.
        :rtype: AccessAdvisorUsageGranularityType
        """
        return self._granularity

    @granularity.setter
    def granularity(self, granularity: AccessAdvisorUsageGranularityType):
        """Sets the granularity of this GenerateServiceLastAccessedDetailsRequest.


        :param granularity: The granularity of this GenerateServiceLastAccessedDetailsRequest.
        :type granularity: AccessAdvisorUsageGranularityType
        """

        self._granularity = granularity
