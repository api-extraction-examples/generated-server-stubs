from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.deletion_task_status_type import DeletionTaskStatusType
from openapi_server.models.get_service_linked_role_deletion_status_response_reason import GetServiceLinkedRoleDeletionStatusResponseReason
from openapi_server import util

from openapi_server.models.deletion_task_status_type import DeletionTaskStatusType  # noqa: E501
from openapi_server.models.get_service_linked_role_deletion_status_response_reason import GetServiceLinkedRoleDeletionStatusResponseReason  # noqa: E501

class GetServiceLinkedRoleDeletionStatusResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status=None, reason=None):  # noqa: E501
        """GetServiceLinkedRoleDeletionStatusResponse - a model defined in OpenAPI

        :param status: The status of this GetServiceLinkedRoleDeletionStatusResponse.  # noqa: E501
        :type status: DeletionTaskStatusType
        :param reason: The reason of this GetServiceLinkedRoleDeletionStatusResponse.  # noqa: E501
        :type reason: GetServiceLinkedRoleDeletionStatusResponseReason
        """
        self.openapi_types = {
            'status': DeletionTaskStatusType,
            'reason': GetServiceLinkedRoleDeletionStatusResponseReason
        }

        self.attribute_map = {
            'status': 'Status',
            'reason': 'Reason'
        }

        self._status = status
        self._reason = reason

    @classmethod
    def from_dict(cls, dikt) -> 'GetServiceLinkedRoleDeletionStatusResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GetServiceLinkedRoleDeletionStatusResponse of this GetServiceLinkedRoleDeletionStatusResponse.  # noqa: E501
        :rtype: GetServiceLinkedRoleDeletionStatusResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self) -> DeletionTaskStatusType:
        """Gets the status of this GetServiceLinkedRoleDeletionStatusResponse.


        :return: The status of this GetServiceLinkedRoleDeletionStatusResponse.
        :rtype: DeletionTaskStatusType
        """
        return self._status

    @status.setter
    def status(self, status: DeletionTaskStatusType):
        """Sets the status of this GetServiceLinkedRoleDeletionStatusResponse.


        :param status: The status of this GetServiceLinkedRoleDeletionStatusResponse.
        :type status: DeletionTaskStatusType
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")  # noqa: E501

        self._status = status

    @property
    def reason(self) -> GetServiceLinkedRoleDeletionStatusResponseReason:
        """Gets the reason of this GetServiceLinkedRoleDeletionStatusResponse.


        :return: The reason of this GetServiceLinkedRoleDeletionStatusResponse.
        :rtype: GetServiceLinkedRoleDeletionStatusResponseReason
        """
        return self._reason

    @reason.setter
    def reason(self, reason: GetServiceLinkedRoleDeletionStatusResponseReason):
        """Sets the reason of this GetServiceLinkedRoleDeletionStatusResponse.


        :param reason: The reason of this GetServiceLinkedRoleDeletionStatusResponse.
        :type reason: GetServiceLinkedRoleDeletionStatusResponseReason
        """

        self._reason = reason
