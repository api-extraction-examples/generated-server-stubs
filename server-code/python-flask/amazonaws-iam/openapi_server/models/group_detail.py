from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class GroupDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, path=None, group_name=None, group_id=None, arn=None, create_date=None, group_policy_list=None, attached_managed_policies=None):  # noqa: E501
        """GroupDetail - a model defined in OpenAPI

        :param path: The path of this GroupDetail.  # noqa: E501
        :type path: str
        :param group_name: The group_name of this GroupDetail.  # noqa: E501
        :type group_name: str
        :param group_id: The group_id of this GroupDetail.  # noqa: E501
        :type group_id: str
        :param arn: The arn of this GroupDetail.  # noqa: E501
        :type arn: str
        :param create_date: The create_date of this GroupDetail.  # noqa: E501
        :type create_date: datetime
        :param group_policy_list: The group_policy_list of this GroupDetail.  # noqa: E501
        :type group_policy_list: List
        :param attached_managed_policies: The attached_managed_policies of this GroupDetail.  # noqa: E501
        :type attached_managed_policies: List
        """
        self.openapi_types = {
            'path': str,
            'group_name': str,
            'group_id': str,
            'arn': str,
            'create_date': datetime,
            'group_policy_list': List,
            'attached_managed_policies': List
        }

        self.attribute_map = {
            'path': 'Path',
            'group_name': 'GroupName',
            'group_id': 'GroupId',
            'arn': 'Arn',
            'create_date': 'CreateDate',
            'group_policy_list': 'GroupPolicyList',
            'attached_managed_policies': 'AttachedManagedPolicies'
        }

        self._path = path
        self._group_name = group_name
        self._group_id = group_id
        self._arn = arn
        self._create_date = create_date
        self._group_policy_list = group_policy_list
        self._attached_managed_policies = attached_managed_policies

    @classmethod
    def from_dict(cls, dikt) -> 'GroupDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GroupDetail of this GroupDetail.  # noqa: E501
        :rtype: GroupDetail
        """
        return util.deserialize_model(dikt, cls)

    @property
    def path(self) -> str:
        """Gets the path of this GroupDetail.


        :return: The path of this GroupDetail.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path: str):
        """Sets the path of this GroupDetail.


        :param path: The path of this GroupDetail.
        :type path: str
        """

        self._path = path

    @property
    def group_name(self) -> str:
        """Gets the group_name of this GroupDetail.


        :return: The group_name of this GroupDetail.
        :rtype: str
        """
        return self._group_name

    @group_name.setter
    def group_name(self, group_name: str):
        """Sets the group_name of this GroupDetail.


        :param group_name: The group_name of this GroupDetail.
        :type group_name: str
        """

        self._group_name = group_name

    @property
    def group_id(self) -> str:
        """Gets the group_id of this GroupDetail.


        :return: The group_id of this GroupDetail.
        :rtype: str
        """
        return self._group_id

    @group_id.setter
    def group_id(self, group_id: str):
        """Sets the group_id of this GroupDetail.


        :param group_id: The group_id of this GroupDetail.
        :type group_id: str
        """

        self._group_id = group_id

    @property
    def arn(self) -> str:
        """Gets the arn of this GroupDetail.

        <p>The Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>. </p>  # noqa: E501

        :return: The arn of this GroupDetail.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn: str):
        """Sets the arn of this GroupDetail.

        <p>The Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>. </p>  # noqa: E501

        :param arn: The arn of this GroupDetail.
        :type arn: str
        """
        if arn is not None and len(arn) > 2048:
            raise ValueError("Invalid value for `arn`, length must be less than or equal to `2048`")  # noqa: E501
        if arn is not None and len(arn) < 20:
            raise ValueError("Invalid value for `arn`, length must be greater than or equal to `20`")  # noqa: E501

        self._arn = arn

    @property
    def create_date(self) -> datetime:
        """Gets the create_date of this GroupDetail.


        :return: The create_date of this GroupDetail.
        :rtype: datetime
        """
        return self._create_date

    @create_date.setter
    def create_date(self, create_date: datetime):
        """Sets the create_date of this GroupDetail.


        :param create_date: The create_date of this GroupDetail.
        :type create_date: datetime
        """

        self._create_date = create_date

    @property
    def group_policy_list(self) -> List:
        """Gets the group_policy_list of this GroupDetail.


        :return: The group_policy_list of this GroupDetail.
        :rtype: List
        """
        return self._group_policy_list

    @group_policy_list.setter
    def group_policy_list(self, group_policy_list: List):
        """Sets the group_policy_list of this GroupDetail.


        :param group_policy_list: The group_policy_list of this GroupDetail.
        :type group_policy_list: List
        """

        self._group_policy_list = group_policy_list

    @property
    def attached_managed_policies(self) -> List:
        """Gets the attached_managed_policies of this GroupDetail.


        :return: The attached_managed_policies of this GroupDetail.
        :rtype: List
        """
        return self._attached_managed_policies

    @attached_managed_policies.setter
    def attached_managed_policies(self, attached_managed_policies: List):
        """Sets the attached_managed_policies of this GroupDetail.


        :param attached_managed_policies: The attached_managed_policies of this GroupDetail.
        :type attached_managed_policies: List
        """

        self._attached_managed_policies = attached_managed_policies
