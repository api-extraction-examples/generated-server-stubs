from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateServerCertificateRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, server_certificate_name=None, new_path=None, new_server_certificate_name=None):  # noqa: E501
        """UpdateServerCertificateRequest - a model defined in OpenAPI

        :param server_certificate_name: The server_certificate_name of this UpdateServerCertificateRequest.  # noqa: E501
        :type server_certificate_name: str
        :param new_path: The new_path of this UpdateServerCertificateRequest.  # noqa: E501
        :type new_path: str
        :param new_server_certificate_name: The new_server_certificate_name of this UpdateServerCertificateRequest.  # noqa: E501
        :type new_server_certificate_name: str
        """
        self.openapi_types = {
            'server_certificate_name': str,
            'new_path': str,
            'new_server_certificate_name': str
        }

        self.attribute_map = {
            'server_certificate_name': 'ServerCertificateName',
            'new_path': 'NewPath',
            'new_server_certificate_name': 'NewServerCertificateName'
        }

        self._server_certificate_name = server_certificate_name
        self._new_path = new_path
        self._new_server_certificate_name = new_server_certificate_name

    @classmethod
    def from_dict(cls, dikt) -> 'UpdateServerCertificateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UpdateServerCertificateRequest of this UpdateServerCertificateRequest.  # noqa: E501
        :rtype: UpdateServerCertificateRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def server_certificate_name(self) -> str:
        """Gets the server_certificate_name of this UpdateServerCertificateRequest.


        :return: The server_certificate_name of this UpdateServerCertificateRequest.
        :rtype: str
        """
        return self._server_certificate_name

    @server_certificate_name.setter
    def server_certificate_name(self, server_certificate_name: str):
        """Sets the server_certificate_name of this UpdateServerCertificateRequest.


        :param server_certificate_name: The server_certificate_name of this UpdateServerCertificateRequest.
        :type server_certificate_name: str
        """
        if server_certificate_name is None:
            raise ValueError("Invalid value for `server_certificate_name`, must not be `None`")  # noqa: E501

        self._server_certificate_name = server_certificate_name

    @property
    def new_path(self) -> str:
        """Gets the new_path of this UpdateServerCertificateRequest.


        :return: The new_path of this UpdateServerCertificateRequest.
        :rtype: str
        """
        return self._new_path

    @new_path.setter
    def new_path(self, new_path: str):
        """Sets the new_path of this UpdateServerCertificateRequest.


        :param new_path: The new_path of this UpdateServerCertificateRequest.
        :type new_path: str
        """

        self._new_path = new_path

    @property
    def new_server_certificate_name(self) -> str:
        """Gets the new_server_certificate_name of this UpdateServerCertificateRequest.


        :return: The new_server_certificate_name of this UpdateServerCertificateRequest.
        :rtype: str
        """
        return self._new_server_certificate_name

    @new_server_certificate_name.setter
    def new_server_certificate_name(self, new_server_certificate_name: str):
        """Sets the new_server_certificate_name of this UpdateServerCertificateRequest.


        :param new_server_certificate_name: The new_server_certificate_name of this UpdateServerCertificateRequest.
        :type new_server_certificate_name: str
        """

        self._new_server_certificate_name = new_server_certificate_name
