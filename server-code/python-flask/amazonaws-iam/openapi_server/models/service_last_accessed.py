from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class ServiceLastAccessed(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, service_name=None, last_authenticated=None, service_namespace=None, last_authenticated_entity=None, last_authenticated_region=None, total_authenticated_entities=None, tracked_actions_last_accessed=None):  # noqa: E501
        """ServiceLastAccessed - a model defined in OpenAPI

        :param service_name: The service_name of this ServiceLastAccessed.  # noqa: E501
        :type service_name: str
        :param last_authenticated: The last_authenticated of this ServiceLastAccessed.  # noqa: E501
        :type last_authenticated: datetime
        :param service_namespace: The service_namespace of this ServiceLastAccessed.  # noqa: E501
        :type service_namespace: str
        :param last_authenticated_entity: The last_authenticated_entity of this ServiceLastAccessed.  # noqa: E501
        :type last_authenticated_entity: str
        :param last_authenticated_region: The last_authenticated_region of this ServiceLastAccessed.  # noqa: E501
        :type last_authenticated_region: str
        :param total_authenticated_entities: The total_authenticated_entities of this ServiceLastAccessed.  # noqa: E501
        :type total_authenticated_entities: int
        :param tracked_actions_last_accessed: The tracked_actions_last_accessed of this ServiceLastAccessed.  # noqa: E501
        :type tracked_actions_last_accessed: List
        """
        self.openapi_types = {
            'service_name': str,
            'last_authenticated': datetime,
            'service_namespace': str,
            'last_authenticated_entity': str,
            'last_authenticated_region': str,
            'total_authenticated_entities': int,
            'tracked_actions_last_accessed': List
        }

        self.attribute_map = {
            'service_name': 'ServiceName',
            'last_authenticated': 'LastAuthenticated',
            'service_namespace': 'ServiceNamespace',
            'last_authenticated_entity': 'LastAuthenticatedEntity',
            'last_authenticated_region': 'LastAuthenticatedRegion',
            'total_authenticated_entities': 'TotalAuthenticatedEntities',
            'tracked_actions_last_accessed': 'TrackedActionsLastAccessed'
        }

        self._service_name = service_name
        self._last_authenticated = last_authenticated
        self._service_namespace = service_namespace
        self._last_authenticated_entity = last_authenticated_entity
        self._last_authenticated_region = last_authenticated_region
        self._total_authenticated_entities = total_authenticated_entities
        self._tracked_actions_last_accessed = tracked_actions_last_accessed

    @classmethod
    def from_dict(cls, dikt) -> 'ServiceLastAccessed':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ServiceLastAccessed of this ServiceLastAccessed.  # noqa: E501
        :rtype: ServiceLastAccessed
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_name(self) -> str:
        """Gets the service_name of this ServiceLastAccessed.


        :return: The service_name of this ServiceLastAccessed.
        :rtype: str
        """
        return self._service_name

    @service_name.setter
    def service_name(self, service_name: str):
        """Sets the service_name of this ServiceLastAccessed.


        :param service_name: The service_name of this ServiceLastAccessed.
        :type service_name: str
        """
        if service_name is None:
            raise ValueError("Invalid value for `service_name`, must not be `None`")  # noqa: E501

        self._service_name = service_name

    @property
    def last_authenticated(self) -> datetime:
        """Gets the last_authenticated of this ServiceLastAccessed.


        :return: The last_authenticated of this ServiceLastAccessed.
        :rtype: datetime
        """
        return self._last_authenticated

    @last_authenticated.setter
    def last_authenticated(self, last_authenticated: datetime):
        """Sets the last_authenticated of this ServiceLastAccessed.


        :param last_authenticated: The last_authenticated of this ServiceLastAccessed.
        :type last_authenticated: datetime
        """

        self._last_authenticated = last_authenticated

    @property
    def service_namespace(self) -> str:
        """Gets the service_namespace of this ServiceLastAccessed.


        :return: The service_namespace of this ServiceLastAccessed.
        :rtype: str
        """
        return self._service_namespace

    @service_namespace.setter
    def service_namespace(self, service_namespace: str):
        """Sets the service_namespace of this ServiceLastAccessed.


        :param service_namespace: The service_namespace of this ServiceLastAccessed.
        :type service_namespace: str
        """
        if service_namespace is None:
            raise ValueError("Invalid value for `service_namespace`, must not be `None`")  # noqa: E501

        self._service_namespace = service_namespace

    @property
    def last_authenticated_entity(self) -> str:
        """Gets the last_authenticated_entity of this ServiceLastAccessed.


        :return: The last_authenticated_entity of this ServiceLastAccessed.
        :rtype: str
        """
        return self._last_authenticated_entity

    @last_authenticated_entity.setter
    def last_authenticated_entity(self, last_authenticated_entity: str):
        """Sets the last_authenticated_entity of this ServiceLastAccessed.


        :param last_authenticated_entity: The last_authenticated_entity of this ServiceLastAccessed.
        :type last_authenticated_entity: str
        """

        self._last_authenticated_entity = last_authenticated_entity

    @property
    def last_authenticated_region(self) -> str:
        """Gets the last_authenticated_region of this ServiceLastAccessed.


        :return: The last_authenticated_region of this ServiceLastAccessed.
        :rtype: str
        """
        return self._last_authenticated_region

    @last_authenticated_region.setter
    def last_authenticated_region(self, last_authenticated_region: str):
        """Sets the last_authenticated_region of this ServiceLastAccessed.


        :param last_authenticated_region: The last_authenticated_region of this ServiceLastAccessed.
        :type last_authenticated_region: str
        """

        self._last_authenticated_region = last_authenticated_region

    @property
    def total_authenticated_entities(self) -> int:
        """Gets the total_authenticated_entities of this ServiceLastAccessed.


        :return: The total_authenticated_entities of this ServiceLastAccessed.
        :rtype: int
        """
        return self._total_authenticated_entities

    @total_authenticated_entities.setter
    def total_authenticated_entities(self, total_authenticated_entities: int):
        """Sets the total_authenticated_entities of this ServiceLastAccessed.


        :param total_authenticated_entities: The total_authenticated_entities of this ServiceLastAccessed.
        :type total_authenticated_entities: int
        """

        self._total_authenticated_entities = total_authenticated_entities

    @property
    def tracked_actions_last_accessed(self) -> List:
        """Gets the tracked_actions_last_accessed of this ServiceLastAccessed.


        :return: The tracked_actions_last_accessed of this ServiceLastAccessed.
        :rtype: List
        """
        return self._tracked_actions_last_accessed

    @tracked_actions_last_accessed.setter
    def tracked_actions_last_accessed(self, tracked_actions_last_accessed: List):
        """Sets the tracked_actions_last_accessed of this ServiceLastAccessed.


        :param tracked_actions_last_accessed: The tracked_actions_last_accessed of this ServiceLastAccessed.
        :type tracked_actions_last_accessed: List
        """

        self._tracked_actions_last_accessed = tracked_actions_last_accessed
