from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateOpenIDConnectProviderRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, url=None, client_id_list=None, thumbprint_list=None, tags=None):  # noqa: E501
        """CreateOpenIDConnectProviderRequest - a model defined in OpenAPI

        :param url: The url of this CreateOpenIDConnectProviderRequest.  # noqa: E501
        :type url: str
        :param client_id_list: The client_id_list of this CreateOpenIDConnectProviderRequest.  # noqa: E501
        :type client_id_list: List
        :param thumbprint_list: The thumbprint_list of this CreateOpenIDConnectProviderRequest.  # noqa: E501
        :type thumbprint_list: List
        :param tags: The tags of this CreateOpenIDConnectProviderRequest.  # noqa: E501
        :type tags: List
        """
        self.openapi_types = {
            'url': str,
            'client_id_list': List,
            'thumbprint_list': List,
            'tags': List
        }

        self.attribute_map = {
            'url': 'Url',
            'client_id_list': 'ClientIDList',
            'thumbprint_list': 'ThumbprintList',
            'tags': 'Tags'
        }

        self._url = url
        self._client_id_list = client_id_list
        self._thumbprint_list = thumbprint_list
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt) -> 'CreateOpenIDConnectProviderRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CreateOpenIDConnectProviderRequest of this CreateOpenIDConnectProviderRequest.  # noqa: E501
        :rtype: CreateOpenIDConnectProviderRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def url(self) -> str:
        """Gets the url of this CreateOpenIDConnectProviderRequest.


        :return: The url of this CreateOpenIDConnectProviderRequest.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url: str):
        """Sets the url of this CreateOpenIDConnectProviderRequest.


        :param url: The url of this CreateOpenIDConnectProviderRequest.
        :type url: str
        """
        if url is None:
            raise ValueError("Invalid value for `url`, must not be `None`")  # noqa: E501

        self._url = url

    @property
    def client_id_list(self) -> List:
        """Gets the client_id_list of this CreateOpenIDConnectProviderRequest.


        :return: The client_id_list of this CreateOpenIDConnectProviderRequest.
        :rtype: List
        """
        return self._client_id_list

    @client_id_list.setter
    def client_id_list(self, client_id_list: List):
        """Sets the client_id_list of this CreateOpenIDConnectProviderRequest.


        :param client_id_list: The client_id_list of this CreateOpenIDConnectProviderRequest.
        :type client_id_list: List
        """

        self._client_id_list = client_id_list

    @property
    def thumbprint_list(self) -> List:
        """Gets the thumbprint_list of this CreateOpenIDConnectProviderRequest.


        :return: The thumbprint_list of this CreateOpenIDConnectProviderRequest.
        :rtype: List
        """
        return self._thumbprint_list

    @thumbprint_list.setter
    def thumbprint_list(self, thumbprint_list: List):
        """Sets the thumbprint_list of this CreateOpenIDConnectProviderRequest.


        :param thumbprint_list: The thumbprint_list of this CreateOpenIDConnectProviderRequest.
        :type thumbprint_list: List
        """
        if thumbprint_list is None:
            raise ValueError("Invalid value for `thumbprint_list`, must not be `None`")  # noqa: E501

        self._thumbprint_list = thumbprint_list

    @property
    def tags(self) -> List:
        """Gets the tags of this CreateOpenIDConnectProviderRequest.


        :return: The tags of this CreateOpenIDConnectProviderRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags: List):
        """Sets the tags of this CreateOpenIDConnectProviderRequest.


        :param tags: The tags of this CreateOpenIDConnectProviderRequest.
        :type tags: List
        """

        self._tags = tags
