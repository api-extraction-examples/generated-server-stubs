from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateOpenIDConnectProviderThumbprintRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, open_id_connect_provider_arn=None, thumbprint_list=None):  # noqa: E501
        """UpdateOpenIDConnectProviderThumbprintRequest - a model defined in OpenAPI

        :param open_id_connect_provider_arn: The open_id_connect_provider_arn of this UpdateOpenIDConnectProviderThumbprintRequest.  # noqa: E501
        :type open_id_connect_provider_arn: str
        :param thumbprint_list: The thumbprint_list of this UpdateOpenIDConnectProviderThumbprintRequest.  # noqa: E501
        :type thumbprint_list: List
        """
        self.openapi_types = {
            'open_id_connect_provider_arn': str,
            'thumbprint_list': List
        }

        self.attribute_map = {
            'open_id_connect_provider_arn': 'OpenIDConnectProviderArn',
            'thumbprint_list': 'ThumbprintList'
        }

        self._open_id_connect_provider_arn = open_id_connect_provider_arn
        self._thumbprint_list = thumbprint_list

    @classmethod
    def from_dict(cls, dikt) -> 'UpdateOpenIDConnectProviderThumbprintRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UpdateOpenIDConnectProviderThumbprintRequest of this UpdateOpenIDConnectProviderThumbprintRequest.  # noqa: E501
        :rtype: UpdateOpenIDConnectProviderThumbprintRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def open_id_connect_provider_arn(self) -> str:
        """Gets the open_id_connect_provider_arn of this UpdateOpenIDConnectProviderThumbprintRequest.


        :return: The open_id_connect_provider_arn of this UpdateOpenIDConnectProviderThumbprintRequest.
        :rtype: str
        """
        return self._open_id_connect_provider_arn

    @open_id_connect_provider_arn.setter
    def open_id_connect_provider_arn(self, open_id_connect_provider_arn: str):
        """Sets the open_id_connect_provider_arn of this UpdateOpenIDConnectProviderThumbprintRequest.


        :param open_id_connect_provider_arn: The open_id_connect_provider_arn of this UpdateOpenIDConnectProviderThumbprintRequest.
        :type open_id_connect_provider_arn: str
        """
        if open_id_connect_provider_arn is None:
            raise ValueError("Invalid value for `open_id_connect_provider_arn`, must not be `None`")  # noqa: E501

        self._open_id_connect_provider_arn = open_id_connect_provider_arn

    @property
    def thumbprint_list(self) -> List:
        """Gets the thumbprint_list of this UpdateOpenIDConnectProviderThumbprintRequest.


        :return: The thumbprint_list of this UpdateOpenIDConnectProviderThumbprintRequest.
        :rtype: List
        """
        return self._thumbprint_list

    @thumbprint_list.setter
    def thumbprint_list(self, thumbprint_list: List):
        """Sets the thumbprint_list of this UpdateOpenIDConnectProviderThumbprintRequest.


        :param thumbprint_list: The thumbprint_list of this UpdateOpenIDConnectProviderThumbprintRequest.
        :type thumbprint_list: List
        """
        if thumbprint_list is None:
            raise ValueError("Invalid value for `thumbprint_list`, must not be `None`")  # noqa: E501

        self._thumbprint_list = thumbprint_list
