from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteServiceSpecificCredentialRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, user_name=None, service_specific_credential_id=None):  # noqa: E501
        """DeleteServiceSpecificCredentialRequest - a model defined in OpenAPI

        :param user_name: The user_name of this DeleteServiceSpecificCredentialRequest.  # noqa: E501
        :type user_name: str
        :param service_specific_credential_id: The service_specific_credential_id of this DeleteServiceSpecificCredentialRequest.  # noqa: E501
        :type service_specific_credential_id: str
        """
        self.openapi_types = {
            'user_name': str,
            'service_specific_credential_id': str
        }

        self.attribute_map = {
            'user_name': 'UserName',
            'service_specific_credential_id': 'ServiceSpecificCredentialId'
        }

        self._user_name = user_name
        self._service_specific_credential_id = service_specific_credential_id

    @classmethod
    def from_dict(cls, dikt) -> 'DeleteServiceSpecificCredentialRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DeleteServiceSpecificCredentialRequest of this DeleteServiceSpecificCredentialRequest.  # noqa: E501
        :rtype: DeleteServiceSpecificCredentialRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user_name(self) -> str:
        """Gets the user_name of this DeleteServiceSpecificCredentialRequest.


        :return: The user_name of this DeleteServiceSpecificCredentialRequest.
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name: str):
        """Sets the user_name of this DeleteServiceSpecificCredentialRequest.


        :param user_name: The user_name of this DeleteServiceSpecificCredentialRequest.
        :type user_name: str
        """

        self._user_name = user_name

    @property
    def service_specific_credential_id(self) -> str:
        """Gets the service_specific_credential_id of this DeleteServiceSpecificCredentialRequest.


        :return: The service_specific_credential_id of this DeleteServiceSpecificCredentialRequest.
        :rtype: str
        """
        return self._service_specific_credential_id

    @service_specific_credential_id.setter
    def service_specific_credential_id(self, service_specific_credential_id: str):
        """Sets the service_specific_credential_id of this DeleteServiceSpecificCredentialRequest.


        :param service_specific_credential_id: The service_specific_credential_id of this DeleteServiceSpecificCredentialRequest.
        :type service_specific_credential_id: str
        """
        if service_specific_credential_id is None:
            raise ValueError("Invalid value for `service_specific_credential_id`, must not be `None`")  # noqa: E501

        self._service_specific_credential_id = service_specific_credential_id
