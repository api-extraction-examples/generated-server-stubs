from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class ListAttachedUserPoliciesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attached_policies=None, is_truncated=None, marker=None):  # noqa: E501
        """ListAttachedUserPoliciesResponse - a model defined in OpenAPI

        :param attached_policies: The attached_policies of this ListAttachedUserPoliciesResponse.  # noqa: E501
        :type attached_policies: List
        :param is_truncated: The is_truncated of this ListAttachedUserPoliciesResponse.  # noqa: E501
        :type is_truncated: bool
        :param marker: The marker of this ListAttachedUserPoliciesResponse.  # noqa: E501
        :type marker: str
        """
        self.openapi_types = {
            'attached_policies': List,
            'is_truncated': bool,
            'marker': str
        }

        self.attribute_map = {
            'attached_policies': 'AttachedPolicies',
            'is_truncated': 'IsTruncated',
            'marker': 'Marker'
        }

        self._attached_policies = attached_policies
        self._is_truncated = is_truncated
        self._marker = marker

    @classmethod
    def from_dict(cls, dikt) -> 'ListAttachedUserPoliciesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ListAttachedUserPoliciesResponse of this ListAttachedUserPoliciesResponse.  # noqa: E501
        :rtype: ListAttachedUserPoliciesResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attached_policies(self) -> List:
        """Gets the attached_policies of this ListAttachedUserPoliciesResponse.


        :return: The attached_policies of this ListAttachedUserPoliciesResponse.
        :rtype: List
        """
        return self._attached_policies

    @attached_policies.setter
    def attached_policies(self, attached_policies: List):
        """Sets the attached_policies of this ListAttachedUserPoliciesResponse.


        :param attached_policies: The attached_policies of this ListAttachedUserPoliciesResponse.
        :type attached_policies: List
        """

        self._attached_policies = attached_policies

    @property
    def is_truncated(self) -> bool:
        """Gets the is_truncated of this ListAttachedUserPoliciesResponse.


        :return: The is_truncated of this ListAttachedUserPoliciesResponse.
        :rtype: bool
        """
        return self._is_truncated

    @is_truncated.setter
    def is_truncated(self, is_truncated: bool):
        """Sets the is_truncated of this ListAttachedUserPoliciesResponse.


        :param is_truncated: The is_truncated of this ListAttachedUserPoliciesResponse.
        :type is_truncated: bool
        """

        self._is_truncated = is_truncated

    @property
    def marker(self) -> str:
        """Gets the marker of this ListAttachedUserPoliciesResponse.


        :return: The marker of this ListAttachedUserPoliciesResponse.
        :rtype: str
        """
        return self._marker

    @marker.setter
    def marker(self, marker: str):
        """Sets the marker of this ListAttachedUserPoliciesResponse.


        :param marker: The marker of this ListAttachedUserPoliciesResponse.
        :type marker: str
        """

        self._marker = marker
