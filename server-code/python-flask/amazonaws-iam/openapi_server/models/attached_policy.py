from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class AttachedPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, policy_name=None, policy_arn=None):  # noqa: E501
        """AttachedPolicy - a model defined in OpenAPI

        :param policy_name: The policy_name of this AttachedPolicy.  # noqa: E501
        :type policy_name: str
        :param policy_arn: The policy_arn of this AttachedPolicy.  # noqa: E501
        :type policy_arn: str
        """
        self.openapi_types = {
            'policy_name': str,
            'policy_arn': str
        }

        self.attribute_map = {
            'policy_name': 'PolicyName',
            'policy_arn': 'PolicyArn'
        }

        self._policy_name = policy_name
        self._policy_arn = policy_arn

    @classmethod
    def from_dict(cls, dikt) -> 'AttachedPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AttachedPolicy of this AttachedPolicy.  # noqa: E501
        :rtype: AttachedPolicy
        """
        return util.deserialize_model(dikt, cls)

    @property
    def policy_name(self) -> str:
        """Gets the policy_name of this AttachedPolicy.


        :return: The policy_name of this AttachedPolicy.
        :rtype: str
        """
        return self._policy_name

    @policy_name.setter
    def policy_name(self, policy_name: str):
        """Sets the policy_name of this AttachedPolicy.


        :param policy_name: The policy_name of this AttachedPolicy.
        :type policy_name: str
        """

        self._policy_name = policy_name

    @property
    def policy_arn(self) -> str:
        """Gets the policy_arn of this AttachedPolicy.

        <p>The Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>. </p>  # noqa: E501

        :return: The policy_arn of this AttachedPolicy.
        :rtype: str
        """
        return self._policy_arn

    @policy_arn.setter
    def policy_arn(self, policy_arn: str):
        """Sets the policy_arn of this AttachedPolicy.

        <p>The Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>. </p>  # noqa: E501

        :param policy_arn: The policy_arn of this AttachedPolicy.
        :type policy_arn: str
        """
        if policy_arn is not None and len(policy_arn) > 2048:
            raise ValueError("Invalid value for `policy_arn`, length must be less than or equal to `2048`")  # noqa: E501
        if policy_arn is not None and len(policy_arn) < 20:
            raise ValueError("Invalid value for `policy_arn`, length must be greater than or equal to `20`")  # noqa: E501

        self._policy_arn = policy_arn
