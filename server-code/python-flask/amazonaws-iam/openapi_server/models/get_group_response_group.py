from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class GetGroupResponseGroup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, path=None, group_name=None, group_id=None, arn=None, create_date=None):  # noqa: E501
        """GetGroupResponseGroup - a model defined in OpenAPI

        :param path: The path of this GetGroupResponseGroup.  # noqa: E501
        :type path: str
        :param group_name: The group_name of this GetGroupResponseGroup.  # noqa: E501
        :type group_name: str
        :param group_id: The group_id of this GetGroupResponseGroup.  # noqa: E501
        :type group_id: str
        :param arn: The arn of this GetGroupResponseGroup.  # noqa: E501
        :type arn: str
        :param create_date: The create_date of this GetGroupResponseGroup.  # noqa: E501
        :type create_date: datetime
        """
        self.openapi_types = {
            'path': str,
            'group_name': str,
            'group_id': str,
            'arn': str,
            'create_date': datetime
        }

        self.attribute_map = {
            'path': 'Path',
            'group_name': 'GroupName',
            'group_id': 'GroupId',
            'arn': 'Arn',
            'create_date': 'CreateDate'
        }

        self._path = path
        self._group_name = group_name
        self._group_id = group_id
        self._arn = arn
        self._create_date = create_date

    @classmethod
    def from_dict(cls, dikt) -> 'GetGroupResponseGroup':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GetGroupResponse_Group of this GetGroupResponseGroup.  # noqa: E501
        :rtype: GetGroupResponseGroup
        """
        return util.deserialize_model(dikt, cls)

    @property
    def path(self) -> str:
        """Gets the path of this GetGroupResponseGroup.


        :return: The path of this GetGroupResponseGroup.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path: str):
        """Sets the path of this GetGroupResponseGroup.


        :param path: The path of this GetGroupResponseGroup.
        :type path: str
        """
        if path is None:
            raise ValueError("Invalid value for `path`, must not be `None`")  # noqa: E501

        self._path = path

    @property
    def group_name(self) -> str:
        """Gets the group_name of this GetGroupResponseGroup.


        :return: The group_name of this GetGroupResponseGroup.
        :rtype: str
        """
        return self._group_name

    @group_name.setter
    def group_name(self, group_name: str):
        """Sets the group_name of this GetGroupResponseGroup.


        :param group_name: The group_name of this GetGroupResponseGroup.
        :type group_name: str
        """
        if group_name is None:
            raise ValueError("Invalid value for `group_name`, must not be `None`")  # noqa: E501

        self._group_name = group_name

    @property
    def group_id(self) -> str:
        """Gets the group_id of this GetGroupResponseGroup.


        :return: The group_id of this GetGroupResponseGroup.
        :rtype: str
        """
        return self._group_id

    @group_id.setter
    def group_id(self, group_id: str):
        """Sets the group_id of this GetGroupResponseGroup.


        :param group_id: The group_id of this GetGroupResponseGroup.
        :type group_id: str
        """
        if group_id is None:
            raise ValueError("Invalid value for `group_id`, must not be `None`")  # noqa: E501

        self._group_id = group_id

    @property
    def arn(self) -> str:
        """Gets the arn of this GetGroupResponseGroup.


        :return: The arn of this GetGroupResponseGroup.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn: str):
        """Sets the arn of this GetGroupResponseGroup.


        :param arn: The arn of this GetGroupResponseGroup.
        :type arn: str
        """
        if arn is None:
            raise ValueError("Invalid value for `arn`, must not be `None`")  # noqa: E501

        self._arn = arn

    @property
    def create_date(self) -> datetime:
        """Gets the create_date of this GetGroupResponseGroup.


        :return: The create_date of this GetGroupResponseGroup.
        :rtype: datetime
        """
        return self._create_date

    @create_date.setter
    def create_date(self, create_date: datetime):
        """Sets the create_date of this GetGroupResponseGroup.


        :param create_date: The create_date of this GetGroupResponseGroup.
        :type create_date: datetime
        """
        if create_date is None:
            raise ValueError("Invalid value for `create_date`, must not be `None`")  # noqa: E501

        self._create_date = create_date
