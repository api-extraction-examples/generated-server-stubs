from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class DeletePolicyVersionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, policy_arn=None, version_id=None):  # noqa: E501
        """DeletePolicyVersionRequest - a model defined in OpenAPI

        :param policy_arn: The policy_arn of this DeletePolicyVersionRequest.  # noqa: E501
        :type policy_arn: str
        :param version_id: The version_id of this DeletePolicyVersionRequest.  # noqa: E501
        :type version_id: str
        """
        self.openapi_types = {
            'policy_arn': str,
            'version_id': str
        }

        self.attribute_map = {
            'policy_arn': 'PolicyArn',
            'version_id': 'VersionId'
        }

        self._policy_arn = policy_arn
        self._version_id = version_id

    @classmethod
    def from_dict(cls, dikt) -> 'DeletePolicyVersionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DeletePolicyVersionRequest of this DeletePolicyVersionRequest.  # noqa: E501
        :rtype: DeletePolicyVersionRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def policy_arn(self) -> str:
        """Gets the policy_arn of this DeletePolicyVersionRequest.


        :return: The policy_arn of this DeletePolicyVersionRequest.
        :rtype: str
        """
        return self._policy_arn

    @policy_arn.setter
    def policy_arn(self, policy_arn: str):
        """Sets the policy_arn of this DeletePolicyVersionRequest.


        :param policy_arn: The policy_arn of this DeletePolicyVersionRequest.
        :type policy_arn: str
        """
        if policy_arn is None:
            raise ValueError("Invalid value for `policy_arn`, must not be `None`")  # noqa: E501

        self._policy_arn = policy_arn

    @property
    def version_id(self) -> str:
        """Gets the version_id of this DeletePolicyVersionRequest.


        :return: The version_id of this DeletePolicyVersionRequest.
        :rtype: str
        """
        return self._version_id

    @version_id.setter
    def version_id(self, version_id: str):
        """Sets the version_id of this DeletePolicyVersionRequest.


        :param version_id: The version_id of this DeletePolicyVersionRequest.
        :type version_id: str
        """
        if version_id is None:
            raise ValueError("Invalid value for `version_id`, must not be `None`")  # noqa: E501

        self._version_id = version_id
