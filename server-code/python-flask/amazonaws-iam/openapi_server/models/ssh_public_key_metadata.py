from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.status_type import StatusType
from openapi_server import util

from openapi_server.models.status_type import StatusType  # noqa: E501

class SSHPublicKeyMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, user_name=None, ssh_public_key_id=None, status=None, upload_date=None):  # noqa: E501
        """SSHPublicKeyMetadata - a model defined in OpenAPI

        :param user_name: The user_name of this SSHPublicKeyMetadata.  # noqa: E501
        :type user_name: str
        :param ssh_public_key_id: The ssh_public_key_id of this SSHPublicKeyMetadata.  # noqa: E501
        :type ssh_public_key_id: str
        :param status: The status of this SSHPublicKeyMetadata.  # noqa: E501
        :type status: StatusType
        :param upload_date: The upload_date of this SSHPublicKeyMetadata.  # noqa: E501
        :type upload_date: datetime
        """
        self.openapi_types = {
            'user_name': str,
            'ssh_public_key_id': str,
            'status': StatusType,
            'upload_date': datetime
        }

        self.attribute_map = {
            'user_name': 'UserName',
            'ssh_public_key_id': 'SSHPublicKeyId',
            'status': 'Status',
            'upload_date': 'UploadDate'
        }

        self._user_name = user_name
        self._ssh_public_key_id = ssh_public_key_id
        self._status = status
        self._upload_date = upload_date

    @classmethod
    def from_dict(cls, dikt) -> 'SSHPublicKeyMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SSHPublicKeyMetadata of this SSHPublicKeyMetadata.  # noqa: E501
        :rtype: SSHPublicKeyMetadata
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user_name(self) -> str:
        """Gets the user_name of this SSHPublicKeyMetadata.


        :return: The user_name of this SSHPublicKeyMetadata.
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name: str):
        """Sets the user_name of this SSHPublicKeyMetadata.


        :param user_name: The user_name of this SSHPublicKeyMetadata.
        :type user_name: str
        """
        if user_name is None:
            raise ValueError("Invalid value for `user_name`, must not be `None`")  # noqa: E501

        self._user_name = user_name

    @property
    def ssh_public_key_id(self) -> str:
        """Gets the ssh_public_key_id of this SSHPublicKeyMetadata.


        :return: The ssh_public_key_id of this SSHPublicKeyMetadata.
        :rtype: str
        """
        return self._ssh_public_key_id

    @ssh_public_key_id.setter
    def ssh_public_key_id(self, ssh_public_key_id: str):
        """Sets the ssh_public_key_id of this SSHPublicKeyMetadata.


        :param ssh_public_key_id: The ssh_public_key_id of this SSHPublicKeyMetadata.
        :type ssh_public_key_id: str
        """
        if ssh_public_key_id is None:
            raise ValueError("Invalid value for `ssh_public_key_id`, must not be `None`")  # noqa: E501

        self._ssh_public_key_id = ssh_public_key_id

    @property
    def status(self) -> StatusType:
        """Gets the status of this SSHPublicKeyMetadata.


        :return: The status of this SSHPublicKeyMetadata.
        :rtype: StatusType
        """
        return self._status

    @status.setter
    def status(self, status: StatusType):
        """Sets the status of this SSHPublicKeyMetadata.


        :param status: The status of this SSHPublicKeyMetadata.
        :type status: StatusType
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")  # noqa: E501

        self._status = status

    @property
    def upload_date(self) -> datetime:
        """Gets the upload_date of this SSHPublicKeyMetadata.


        :return: The upload_date of this SSHPublicKeyMetadata.
        :rtype: datetime
        """
        return self._upload_date

    @upload_date.setter
    def upload_date(self, upload_date: datetime):
        """Sets the upload_date of this SSHPublicKeyMetadata.


        :param upload_date: The upload_date of this SSHPublicKeyMetadata.
        :type upload_date: datetime
        """
        if upload_date is None:
            raise ValueError("Invalid value for `upload_date`, must not be `None`")  # noqa: E501

        self._upload_date = upload_date
