from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.policy_evaluation_decision_type import PolicyEvaluationDecisionType
from openapi_server.models.resource_specific_result_permissions_boundary_decision_detail import ResourceSpecificResultPermissionsBoundaryDecisionDetail
from openapi_server import util

from openapi_server.models.policy_evaluation_decision_type import PolicyEvaluationDecisionType  # noqa: E501
from openapi_server.models.resource_specific_result_permissions_boundary_decision_detail import ResourceSpecificResultPermissionsBoundaryDecisionDetail  # noqa: E501

class ResourceSpecificResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, eval_resource_name=None, eval_resource_decision=None, matched_statements=None, missing_context_values=None, eval_decision_details=None, permissions_boundary_decision_detail=None):  # noqa: E501
        """ResourceSpecificResult - a model defined in OpenAPI

        :param eval_resource_name: The eval_resource_name of this ResourceSpecificResult.  # noqa: E501
        :type eval_resource_name: str
        :param eval_resource_decision: The eval_resource_decision of this ResourceSpecificResult.  # noqa: E501
        :type eval_resource_decision: PolicyEvaluationDecisionType
        :param matched_statements: The matched_statements of this ResourceSpecificResult.  # noqa: E501
        :type matched_statements: List
        :param missing_context_values: The missing_context_values of this ResourceSpecificResult.  # noqa: E501
        :type missing_context_values: List
        :param eval_decision_details: The eval_decision_details of this ResourceSpecificResult.  # noqa: E501
        :type eval_decision_details: Dict
        :param permissions_boundary_decision_detail: The permissions_boundary_decision_detail of this ResourceSpecificResult.  # noqa: E501
        :type permissions_boundary_decision_detail: ResourceSpecificResultPermissionsBoundaryDecisionDetail
        """
        self.openapi_types = {
            'eval_resource_name': str,
            'eval_resource_decision': PolicyEvaluationDecisionType,
            'matched_statements': List,
            'missing_context_values': List,
            'eval_decision_details': Dict,
            'permissions_boundary_decision_detail': ResourceSpecificResultPermissionsBoundaryDecisionDetail
        }

        self.attribute_map = {
            'eval_resource_name': 'EvalResourceName',
            'eval_resource_decision': 'EvalResourceDecision',
            'matched_statements': 'MatchedStatements',
            'missing_context_values': 'MissingContextValues',
            'eval_decision_details': 'EvalDecisionDetails',
            'permissions_boundary_decision_detail': 'PermissionsBoundaryDecisionDetail'
        }

        self._eval_resource_name = eval_resource_name
        self._eval_resource_decision = eval_resource_decision
        self._matched_statements = matched_statements
        self._missing_context_values = missing_context_values
        self._eval_decision_details = eval_decision_details
        self._permissions_boundary_decision_detail = permissions_boundary_decision_detail

    @classmethod
    def from_dict(cls, dikt) -> 'ResourceSpecificResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ResourceSpecificResult of this ResourceSpecificResult.  # noqa: E501
        :rtype: ResourceSpecificResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def eval_resource_name(self) -> str:
        """Gets the eval_resource_name of this ResourceSpecificResult.


        :return: The eval_resource_name of this ResourceSpecificResult.
        :rtype: str
        """
        return self._eval_resource_name

    @eval_resource_name.setter
    def eval_resource_name(self, eval_resource_name: str):
        """Sets the eval_resource_name of this ResourceSpecificResult.


        :param eval_resource_name: The eval_resource_name of this ResourceSpecificResult.
        :type eval_resource_name: str
        """
        if eval_resource_name is None:
            raise ValueError("Invalid value for `eval_resource_name`, must not be `None`")  # noqa: E501

        self._eval_resource_name = eval_resource_name

    @property
    def eval_resource_decision(self) -> PolicyEvaluationDecisionType:
        """Gets the eval_resource_decision of this ResourceSpecificResult.


        :return: The eval_resource_decision of this ResourceSpecificResult.
        :rtype: PolicyEvaluationDecisionType
        """
        return self._eval_resource_decision

    @eval_resource_decision.setter
    def eval_resource_decision(self, eval_resource_decision: PolicyEvaluationDecisionType):
        """Sets the eval_resource_decision of this ResourceSpecificResult.


        :param eval_resource_decision: The eval_resource_decision of this ResourceSpecificResult.
        :type eval_resource_decision: PolicyEvaluationDecisionType
        """
        if eval_resource_decision is None:
            raise ValueError("Invalid value for `eval_resource_decision`, must not be `None`")  # noqa: E501

        self._eval_resource_decision = eval_resource_decision

    @property
    def matched_statements(self) -> List:
        """Gets the matched_statements of this ResourceSpecificResult.


        :return: The matched_statements of this ResourceSpecificResult.
        :rtype: List
        """
        return self._matched_statements

    @matched_statements.setter
    def matched_statements(self, matched_statements: List):
        """Sets the matched_statements of this ResourceSpecificResult.


        :param matched_statements: The matched_statements of this ResourceSpecificResult.
        :type matched_statements: List
        """

        self._matched_statements = matched_statements

    @property
    def missing_context_values(self) -> List:
        """Gets the missing_context_values of this ResourceSpecificResult.


        :return: The missing_context_values of this ResourceSpecificResult.
        :rtype: List
        """
        return self._missing_context_values

    @missing_context_values.setter
    def missing_context_values(self, missing_context_values: List):
        """Sets the missing_context_values of this ResourceSpecificResult.


        :param missing_context_values: The missing_context_values of this ResourceSpecificResult.
        :type missing_context_values: List
        """

        self._missing_context_values = missing_context_values

    @property
    def eval_decision_details(self) -> Dict:
        """Gets the eval_decision_details of this ResourceSpecificResult.


        :return: The eval_decision_details of this ResourceSpecificResult.
        :rtype: Dict
        """
        return self._eval_decision_details

    @eval_decision_details.setter
    def eval_decision_details(self, eval_decision_details: Dict):
        """Sets the eval_decision_details of this ResourceSpecificResult.


        :param eval_decision_details: The eval_decision_details of this ResourceSpecificResult.
        :type eval_decision_details: Dict
        """

        self._eval_decision_details = eval_decision_details

    @property
    def permissions_boundary_decision_detail(self) -> ResourceSpecificResultPermissionsBoundaryDecisionDetail:
        """Gets the permissions_boundary_decision_detail of this ResourceSpecificResult.


        :return: The permissions_boundary_decision_detail of this ResourceSpecificResult.
        :rtype: ResourceSpecificResultPermissionsBoundaryDecisionDetail
        """
        return self._permissions_boundary_decision_detail

    @permissions_boundary_decision_detail.setter
    def permissions_boundary_decision_detail(self, permissions_boundary_decision_detail: ResourceSpecificResultPermissionsBoundaryDecisionDetail):
        """Sets the permissions_boundary_decision_detail of this ResourceSpecificResult.


        :param permissions_boundary_decision_detail: The permissions_boundary_decision_detail of this ResourceSpecificResult.
        :type permissions_boundary_decision_detail: ResourceSpecificResultPermissionsBoundaryDecisionDetail
        """

        self._permissions_boundary_decision_detail = permissions_boundary_decision_detail
