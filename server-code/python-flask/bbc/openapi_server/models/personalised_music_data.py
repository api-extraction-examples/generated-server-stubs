from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.personalised_music_artist import PersonalisedMusicArtist
from openapi_server.models.personalised_music_clip import PersonalisedMusicClip
from openapi_server.models.personalised_music_genre import PersonalisedMusicGenre
from openapi_server.models.personalised_music_playlist import PersonalisedMusicPlaylist
from openapi_server.models.personalised_music_service import PersonalisedMusicService
from openapi_server.models.personalised_music_track import PersonalisedMusicTrack
from openapi_server import util

from openapi_server.models.personalised_music_artist import PersonalisedMusicArtist  # noqa: E501
from openapi_server.models.personalised_music_clip import PersonalisedMusicClip  # noqa: E501
from openapi_server.models.personalised_music_genre import PersonalisedMusicGenre  # noqa: E501
from openapi_server.models.personalised_music_playlist import PersonalisedMusicPlaylist  # noqa: E501
from openapi_server.models.personalised_music_service import PersonalisedMusicService  # noqa: E501
from openapi_server.models.personalised_music_track import PersonalisedMusicTrack  # noqa: E501

class PersonalisedMusicData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, artist=None, clip=None, genre=None, playlist=None, service=None, track=None):  # noqa: E501
        """PersonalisedMusicData - a model defined in OpenAPI

        :param artist: The artist of this PersonalisedMusicData.  # noqa: E501
        :type artist: PersonalisedMusicArtist
        :param clip: The clip of this PersonalisedMusicData.  # noqa: E501
        :type clip: PersonalisedMusicClip
        :param genre: The genre of this PersonalisedMusicData.  # noqa: E501
        :type genre: PersonalisedMusicGenre
        :param playlist: The playlist of this PersonalisedMusicData.  # noqa: E501
        :type playlist: PersonalisedMusicPlaylist
        :param service: The service of this PersonalisedMusicData.  # noqa: E501
        :type service: PersonalisedMusicService
        :param track: The track of this PersonalisedMusicData.  # noqa: E501
        :type track: PersonalisedMusicTrack
        """
        self.openapi_types = {
            'artist': PersonalisedMusicArtist,
            'clip': PersonalisedMusicClip,
            'genre': PersonalisedMusicGenre,
            'playlist': PersonalisedMusicPlaylist,
            'service': PersonalisedMusicService,
            'track': PersonalisedMusicTrack
        }

        self.attribute_map = {
            'artist': 'artist',
            'clip': 'clip',
            'genre': 'genre',
            'playlist': 'playlist',
            'service': 'service',
            'track': 'track'
        }

        self._artist = artist
        self._clip = clip
        self._genre = genre
        self._playlist = playlist
        self._service = service
        self._track = track

    @classmethod
    def from_dict(cls, dikt) -> 'PersonalisedMusicData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PersonalisedMusicData of this PersonalisedMusicData.  # noqa: E501
        :rtype: PersonalisedMusicData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def artist(self) -> PersonalisedMusicArtist:
        """Gets the artist of this PersonalisedMusicData.


        :return: The artist of this PersonalisedMusicData.
        :rtype: PersonalisedMusicArtist
        """
        return self._artist

    @artist.setter
    def artist(self, artist: PersonalisedMusicArtist):
        """Sets the artist of this PersonalisedMusicData.


        :param artist: The artist of this PersonalisedMusicData.
        :type artist: PersonalisedMusicArtist
        """

        self._artist = artist

    @property
    def clip(self) -> PersonalisedMusicClip:
        """Gets the clip of this PersonalisedMusicData.


        :return: The clip of this PersonalisedMusicData.
        :rtype: PersonalisedMusicClip
        """
        return self._clip

    @clip.setter
    def clip(self, clip: PersonalisedMusicClip):
        """Sets the clip of this PersonalisedMusicData.


        :param clip: The clip of this PersonalisedMusicData.
        :type clip: PersonalisedMusicClip
        """

        self._clip = clip

    @property
    def genre(self) -> PersonalisedMusicGenre:
        """Gets the genre of this PersonalisedMusicData.


        :return: The genre of this PersonalisedMusicData.
        :rtype: PersonalisedMusicGenre
        """
        return self._genre

    @genre.setter
    def genre(self, genre: PersonalisedMusicGenre):
        """Sets the genre of this PersonalisedMusicData.


        :param genre: The genre of this PersonalisedMusicData.
        :type genre: PersonalisedMusicGenre
        """

        self._genre = genre

    @property
    def playlist(self) -> PersonalisedMusicPlaylist:
        """Gets the playlist of this PersonalisedMusicData.


        :return: The playlist of this PersonalisedMusicData.
        :rtype: PersonalisedMusicPlaylist
        """
        return self._playlist

    @playlist.setter
    def playlist(self, playlist: PersonalisedMusicPlaylist):
        """Sets the playlist of this PersonalisedMusicData.


        :param playlist: The playlist of this PersonalisedMusicData.
        :type playlist: PersonalisedMusicPlaylist
        """

        self._playlist = playlist

    @property
    def service(self) -> PersonalisedMusicService:
        """Gets the service of this PersonalisedMusicData.


        :return: The service of this PersonalisedMusicData.
        :rtype: PersonalisedMusicService
        """
        return self._service

    @service.setter
    def service(self, service: PersonalisedMusicService):
        """Sets the service of this PersonalisedMusicData.


        :param service: The service of this PersonalisedMusicData.
        :type service: PersonalisedMusicService
        """

        self._service = service

    @property
    def track(self) -> PersonalisedMusicTrack:
        """Gets the track of this PersonalisedMusicData.


        :return: The track of this PersonalisedMusicData.
        :rtype: PersonalisedMusicTrack
        """
        return self._track

    @track.setter
    def track(self, track: PersonalisedMusicTrack):
        """Sets the track of this PersonalisedMusicData.


        :param track: The track of this PersonalisedMusicData.
        :type track: PersonalisedMusicTrack
        """

        self._track = track
