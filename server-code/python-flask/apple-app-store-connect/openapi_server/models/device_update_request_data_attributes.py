from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class DeviceUpdateRequestDataAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name=None, status=None):  # noqa: E501
        """DeviceUpdateRequestDataAttributes - a model defined in OpenAPI

        :param name: The name of this DeviceUpdateRequestDataAttributes.  # noqa: E501
        :type name: str
        :param status: The status of this DeviceUpdateRequestDataAttributes.  # noqa: E501
        :type status: str
        """
        self.openapi_types = {
            'name': str,
            'status': str
        }

        self.attribute_map = {
            'name': 'name',
            'status': 'status'
        }

        self._name = name
        self._status = status

    @classmethod
    def from_dict(cls, dikt) -> 'DeviceUpdateRequestDataAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DeviceUpdateRequest_data_attributes of this DeviceUpdateRequestDataAttributes.  # noqa: E501
        :rtype: DeviceUpdateRequestDataAttributes
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this DeviceUpdateRequestDataAttributes.


        :return: The name of this DeviceUpdateRequestDataAttributes.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this DeviceUpdateRequestDataAttributes.


        :param name: The name of this DeviceUpdateRequestDataAttributes.
        :type name: str
        """

        self._name = name

    @property
    def status(self) -> str:
        """Gets the status of this DeviceUpdateRequestDataAttributes.


        :return: The status of this DeviceUpdateRequestDataAttributes.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status: str):
        """Sets the status of this DeviceUpdateRequestDataAttributes.


        :param status: The status of this DeviceUpdateRequestDataAttributes.
        :type status: str
        """
        allowed_values = ["ENABLED", "DISABLED"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status
