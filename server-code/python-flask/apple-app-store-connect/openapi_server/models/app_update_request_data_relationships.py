from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.app_update_request_data_relationships_available_territories import AppUpdateRequestDataRelationshipsAvailableTerritories
from openapi_server.models.app_update_request_data_relationships_prices import AppUpdateRequestDataRelationshipsPrices
from openapi_server import util

from openapi_server.models.app_update_request_data_relationships_available_territories import AppUpdateRequestDataRelationshipsAvailableTerritories  # noqa: E501
from openapi_server.models.app_update_request_data_relationships_prices import AppUpdateRequestDataRelationshipsPrices  # noqa: E501

class AppUpdateRequestDataRelationships(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, available_territories=None, prices=None):  # noqa: E501
        """AppUpdateRequestDataRelationships - a model defined in OpenAPI

        :param available_territories: The available_territories of this AppUpdateRequestDataRelationships.  # noqa: E501
        :type available_territories: AppUpdateRequestDataRelationshipsAvailableTerritories
        :param prices: The prices of this AppUpdateRequestDataRelationships.  # noqa: E501
        :type prices: AppUpdateRequestDataRelationshipsPrices
        """
        self.openapi_types = {
            'available_territories': AppUpdateRequestDataRelationshipsAvailableTerritories,
            'prices': AppUpdateRequestDataRelationshipsPrices
        }

        self.attribute_map = {
            'available_territories': 'availableTerritories',
            'prices': 'prices'
        }

        self._available_territories = available_territories
        self._prices = prices

    @classmethod
    def from_dict(cls, dikt) -> 'AppUpdateRequestDataRelationships':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AppUpdateRequest_data_relationships of this AppUpdateRequestDataRelationships.  # noqa: E501
        :rtype: AppUpdateRequestDataRelationships
        """
        return util.deserialize_model(dikt, cls)

    @property
    def available_territories(self) -> AppUpdateRequestDataRelationshipsAvailableTerritories:
        """Gets the available_territories of this AppUpdateRequestDataRelationships.


        :return: The available_territories of this AppUpdateRequestDataRelationships.
        :rtype: AppUpdateRequestDataRelationshipsAvailableTerritories
        """
        return self._available_territories

    @available_territories.setter
    def available_territories(self, available_territories: AppUpdateRequestDataRelationshipsAvailableTerritories):
        """Sets the available_territories of this AppUpdateRequestDataRelationships.


        :param available_territories: The available_territories of this AppUpdateRequestDataRelationships.
        :type available_territories: AppUpdateRequestDataRelationshipsAvailableTerritories
        """

        self._available_territories = available_territories

    @property
    def prices(self) -> AppUpdateRequestDataRelationshipsPrices:
        """Gets the prices of this AppUpdateRequestDataRelationships.


        :return: The prices of this AppUpdateRequestDataRelationships.
        :rtype: AppUpdateRequestDataRelationshipsPrices
        """
        return self._prices

    @prices.setter
    def prices(self, prices: AppUpdateRequestDataRelationshipsPrices):
        """Sets the prices of this AppUpdateRequestDataRelationships.


        :param prices: The prices of this AppUpdateRequestDataRelationships.
        :type prices: AppUpdateRequestDataRelationshipsPrices
        """

        self._prices = prices
