from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class BetaTesterCreateRequestDataAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, email=None, first_name=None, last_name=None):  # noqa: E501
        """BetaTesterCreateRequestDataAttributes - a model defined in OpenAPI

        :param email: The email of this BetaTesterCreateRequestDataAttributes.  # noqa: E501
        :type email: str
        :param first_name: The first_name of this BetaTesterCreateRequestDataAttributes.  # noqa: E501
        :type first_name: str
        :param last_name: The last_name of this BetaTesterCreateRequestDataAttributes.  # noqa: E501
        :type last_name: str
        """
        self.openapi_types = {
            'email': str,
            'first_name': str,
            'last_name': str
        }

        self.attribute_map = {
            'email': 'email',
            'first_name': 'firstName',
            'last_name': 'lastName'
        }

        self._email = email
        self._first_name = first_name
        self._last_name = last_name

    @classmethod
    def from_dict(cls, dikt) -> 'BetaTesterCreateRequestDataAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BetaTesterCreateRequest_data_attributes of this BetaTesterCreateRequestDataAttributes.  # noqa: E501
        :rtype: BetaTesterCreateRequestDataAttributes
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email(self) -> str:
        """Gets the email of this BetaTesterCreateRequestDataAttributes.


        :return: The email of this BetaTesterCreateRequestDataAttributes.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this BetaTesterCreateRequestDataAttributes.


        :param email: The email of this BetaTesterCreateRequestDataAttributes.
        :type email: str
        """
        if email is None:
            raise ValueError("Invalid value for `email`, must not be `None`")  # noqa: E501

        self._email = email

    @property
    def first_name(self) -> str:
        """Gets the first_name of this BetaTesterCreateRequestDataAttributes.


        :return: The first_name of this BetaTesterCreateRequestDataAttributes.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name: str):
        """Sets the first_name of this BetaTesterCreateRequestDataAttributes.


        :param first_name: The first_name of this BetaTesterCreateRequestDataAttributes.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def last_name(self) -> str:
        """Gets the last_name of this BetaTesterCreateRequestDataAttributes.


        :return: The last_name of this BetaTesterCreateRequestDataAttributes.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name: str):
        """Sets the last_name of this BetaTesterCreateRequestDataAttributes.


        :param last_name: The last_name of this BetaTesterCreateRequestDataAttributes.
        :type last_name: str
        """

        self._last_name = last_name
