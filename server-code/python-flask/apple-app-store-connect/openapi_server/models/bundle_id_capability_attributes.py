from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.capability_setting import CapabilitySetting
from openapi_server.models.capability_type import CapabilityType
from openapi_server import util

from openapi_server.models.capability_setting import CapabilitySetting  # noqa: E501
from openapi_server.models.capability_type import CapabilityType  # noqa: E501

class BundleIdCapabilityAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, capability_type=None, settings=None):  # noqa: E501
        """BundleIdCapabilityAttributes - a model defined in OpenAPI

        :param capability_type: The capability_type of this BundleIdCapabilityAttributes.  # noqa: E501
        :type capability_type: CapabilityType
        :param settings: The settings of this BundleIdCapabilityAttributes.  # noqa: E501
        :type settings: List[CapabilitySetting]
        """
        self.openapi_types = {
            'capability_type': CapabilityType,
            'settings': List[CapabilitySetting]
        }

        self.attribute_map = {
            'capability_type': 'capabilityType',
            'settings': 'settings'
        }

        self._capability_type = capability_type
        self._settings = settings

    @classmethod
    def from_dict(cls, dikt) -> 'BundleIdCapabilityAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BundleIdCapability_attributes of this BundleIdCapabilityAttributes.  # noqa: E501
        :rtype: BundleIdCapabilityAttributes
        """
        return util.deserialize_model(dikt, cls)

    @property
    def capability_type(self) -> CapabilityType:
        """Gets the capability_type of this BundleIdCapabilityAttributes.


        :return: The capability_type of this BundleIdCapabilityAttributes.
        :rtype: CapabilityType
        """
        return self._capability_type

    @capability_type.setter
    def capability_type(self, capability_type: CapabilityType):
        """Sets the capability_type of this BundleIdCapabilityAttributes.


        :param capability_type: The capability_type of this BundleIdCapabilityAttributes.
        :type capability_type: CapabilityType
        """

        self._capability_type = capability_type

    @property
    def settings(self) -> List[CapabilitySetting]:
        """Gets the settings of this BundleIdCapabilityAttributes.


        :return: The settings of this BundleIdCapabilityAttributes.
        :rtype: List[CapabilitySetting]
        """
        return self._settings

    @settings.setter
    def settings(self, settings: List[CapabilitySetting]):
        """Sets the settings of this BundleIdCapabilityAttributes.


        :param settings: The settings of this BundleIdCapabilityAttributes.
        :type settings: List[CapabilitySetting]
        """

        self._settings = settings
