from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class PagedDocumentLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, first=None, next=None, _self=None):  # noqa: E501
        """PagedDocumentLinks - a model defined in OpenAPI

        :param first: The first of this PagedDocumentLinks.  # noqa: E501
        :type first: str
        :param next: The next of this PagedDocumentLinks.  # noqa: E501
        :type next: str
        :param _self: The _self of this PagedDocumentLinks.  # noqa: E501
        :type _self: str
        """
        self.openapi_types = {
            'first': str,
            'next': str,
            '_self': str
        }

        self.attribute_map = {
            'first': 'first',
            'next': 'next',
            '_self': 'self'
        }

        self._first = first
        self._next = next
        self.__self = _self

    @classmethod
    def from_dict(cls, dikt) -> 'PagedDocumentLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PagedDocumentLinks of this PagedDocumentLinks.  # noqa: E501
        :rtype: PagedDocumentLinks
        """
        return util.deserialize_model(dikt, cls)

    @property
    def first(self) -> str:
        """Gets the first of this PagedDocumentLinks.


        :return: The first of this PagedDocumentLinks.
        :rtype: str
        """
        return self._first

    @first.setter
    def first(self, first: str):
        """Sets the first of this PagedDocumentLinks.


        :param first: The first of this PagedDocumentLinks.
        :type first: str
        """

        self._first = first

    @property
    def next(self) -> str:
        """Gets the next of this PagedDocumentLinks.


        :return: The next of this PagedDocumentLinks.
        :rtype: str
        """
        return self._next

    @next.setter
    def next(self, next: str):
        """Sets the next of this PagedDocumentLinks.


        :param next: The next of this PagedDocumentLinks.
        :type next: str
        """

        self._next = next

    @property
    def _self(self) -> str:
        """Gets the _self of this PagedDocumentLinks.


        :return: The _self of this PagedDocumentLinks.
        :rtype: str
        """
        return self.__self

    @_self.setter
    def _self(self, _self: str):
        """Sets the _self of this PagedDocumentLinks.


        :param _self: The _self of this PagedDocumentLinks.
        :type _self: str
        """
        if _self is None:
            raise ValueError("Invalid value for `_self`, must not be `None`")  # noqa: E501

        self.__self = _self
