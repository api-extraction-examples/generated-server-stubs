from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.build_relationships_app_encryption_declaration_data import BuildRelationshipsAppEncryptionDeclarationData
from openapi_server.models.document_links import DocumentLinks
from openapi_server import util

from openapi_server.models.build_relationships_app_encryption_declaration_data import BuildRelationshipsAppEncryptionDeclarationData  # noqa: E501
from openapi_server.models.document_links import DocumentLinks  # noqa: E501

class BuildAppEncryptionDeclarationLinkageResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data=None, links=None):  # noqa: E501
        """BuildAppEncryptionDeclarationLinkageResponse - a model defined in OpenAPI

        :param data: The data of this BuildAppEncryptionDeclarationLinkageResponse.  # noqa: E501
        :type data: BuildRelationshipsAppEncryptionDeclarationData
        :param links: The links of this BuildAppEncryptionDeclarationLinkageResponse.  # noqa: E501
        :type links: DocumentLinks
        """
        self.openapi_types = {
            'data': BuildRelationshipsAppEncryptionDeclarationData,
            'links': DocumentLinks
        }

        self.attribute_map = {
            'data': 'data',
            'links': 'links'
        }

        self._data = data
        self._links = links

    @classmethod
    def from_dict(cls, dikt) -> 'BuildAppEncryptionDeclarationLinkageResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BuildAppEncryptionDeclarationLinkageResponse of this BuildAppEncryptionDeclarationLinkageResponse.  # noqa: E501
        :rtype: BuildAppEncryptionDeclarationLinkageResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data(self) -> BuildRelationshipsAppEncryptionDeclarationData:
        """Gets the data of this BuildAppEncryptionDeclarationLinkageResponse.


        :return: The data of this BuildAppEncryptionDeclarationLinkageResponse.
        :rtype: BuildRelationshipsAppEncryptionDeclarationData
        """
        return self._data

    @data.setter
    def data(self, data: BuildRelationshipsAppEncryptionDeclarationData):
        """Sets the data of this BuildAppEncryptionDeclarationLinkageResponse.


        :param data: The data of this BuildAppEncryptionDeclarationLinkageResponse.
        :type data: BuildRelationshipsAppEncryptionDeclarationData
        """
        if data is None:
            raise ValueError("Invalid value for `data`, must not be `None`")  # noqa: E501

        self._data = data

    @property
    def links(self) -> DocumentLinks:
        """Gets the links of this BuildAppEncryptionDeclarationLinkageResponse.


        :return: The links of this BuildAppEncryptionDeclarationLinkageResponse.
        :rtype: DocumentLinks
        """
        return self._links

    @links.setter
    def links(self, links: DocumentLinks):
        """Sets the links of this BuildAppEncryptionDeclarationLinkageResponse.


        :param links: The links of this BuildAppEncryptionDeclarationLinkageResponse.
        :type links: DocumentLinks
        """
        if links is None:
            raise ValueError("Invalid value for `links`, must not be `None`")  # noqa: E501

        self._links = links
