from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.app_relationships_app_infos_links import AppRelationshipsAppInfosLinks
from openapi_server.models.app_relationships_end_user_license_agreement_data import AppRelationshipsEndUserLicenseAgreementData
from openapi_server import util

from openapi_server.models.app_relationships_app_infos_links import AppRelationshipsAppInfosLinks  # noqa: E501
from openapi_server.models.app_relationships_end_user_license_agreement_data import AppRelationshipsEndUserLicenseAgreementData  # noqa: E501

class AppRelationshipsEndUserLicenseAgreement(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data=None, links=None):  # noqa: E501
        """AppRelationshipsEndUserLicenseAgreement - a model defined in OpenAPI

        :param data: The data of this AppRelationshipsEndUserLicenseAgreement.  # noqa: E501
        :type data: AppRelationshipsEndUserLicenseAgreementData
        :param links: The links of this AppRelationshipsEndUserLicenseAgreement.  # noqa: E501
        :type links: AppRelationshipsAppInfosLinks
        """
        self.openapi_types = {
            'data': AppRelationshipsEndUserLicenseAgreementData,
            'links': AppRelationshipsAppInfosLinks
        }

        self.attribute_map = {
            'data': 'data',
            'links': 'links'
        }

        self._data = data
        self._links = links

    @classmethod
    def from_dict(cls, dikt) -> 'AppRelationshipsEndUserLicenseAgreement':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The App_relationships_endUserLicenseAgreement of this AppRelationshipsEndUserLicenseAgreement.  # noqa: E501
        :rtype: AppRelationshipsEndUserLicenseAgreement
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data(self) -> AppRelationshipsEndUserLicenseAgreementData:
        """Gets the data of this AppRelationshipsEndUserLicenseAgreement.


        :return: The data of this AppRelationshipsEndUserLicenseAgreement.
        :rtype: AppRelationshipsEndUserLicenseAgreementData
        """
        return self._data

    @data.setter
    def data(self, data: AppRelationshipsEndUserLicenseAgreementData):
        """Sets the data of this AppRelationshipsEndUserLicenseAgreement.


        :param data: The data of this AppRelationshipsEndUserLicenseAgreement.
        :type data: AppRelationshipsEndUserLicenseAgreementData
        """

        self._data = data

    @property
    def links(self) -> AppRelationshipsAppInfosLinks:
        """Gets the links of this AppRelationshipsEndUserLicenseAgreement.


        :return: The links of this AppRelationshipsEndUserLicenseAgreement.
        :rtype: AppRelationshipsAppInfosLinks
        """
        return self._links

    @links.setter
    def links(self, links: AppRelationshipsAppInfosLinks):
        """Sets the links of this AppRelationshipsEndUserLicenseAgreement.


        :param links: The links of this AppRelationshipsEndUserLicenseAgreement.
        :type links: AppRelationshipsAppInfosLinks
        """

        self._links = links
