from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.app_store_version_state import AppStoreVersionState
from openapi_server.models.platform import Platform
from openapi_server import util

from openapi_server.models.app_store_version_state import AppStoreVersionState  # noqa: E501
from openapi_server.models.platform import Platform  # noqa: E501

class AppStoreVersionAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_store_state=None, copyright=None, created_date=None, downloadable=None, earliest_release_date=None, platform=None, release_type=None, uses_idfa=None, version_string=None):  # noqa: E501
        """AppStoreVersionAttributes - a model defined in OpenAPI

        :param app_store_state: The app_store_state of this AppStoreVersionAttributes.  # noqa: E501
        :type app_store_state: AppStoreVersionState
        :param copyright: The copyright of this AppStoreVersionAttributes.  # noqa: E501
        :type copyright: str
        :param created_date: The created_date of this AppStoreVersionAttributes.  # noqa: E501
        :type created_date: datetime
        :param downloadable: The downloadable of this AppStoreVersionAttributes.  # noqa: E501
        :type downloadable: bool
        :param earliest_release_date: The earliest_release_date of this AppStoreVersionAttributes.  # noqa: E501
        :type earliest_release_date: datetime
        :param platform: The platform of this AppStoreVersionAttributes.  # noqa: E501
        :type platform: Platform
        :param release_type: The release_type of this AppStoreVersionAttributes.  # noqa: E501
        :type release_type: str
        :param uses_idfa: The uses_idfa of this AppStoreVersionAttributes.  # noqa: E501
        :type uses_idfa: bool
        :param version_string: The version_string of this AppStoreVersionAttributes.  # noqa: E501
        :type version_string: str
        """
        self.openapi_types = {
            'app_store_state': AppStoreVersionState,
            'copyright': str,
            'created_date': datetime,
            'downloadable': bool,
            'earliest_release_date': datetime,
            'platform': Platform,
            'release_type': str,
            'uses_idfa': bool,
            'version_string': str
        }

        self.attribute_map = {
            'app_store_state': 'appStoreState',
            'copyright': 'copyright',
            'created_date': 'createdDate',
            'downloadable': 'downloadable',
            'earliest_release_date': 'earliestReleaseDate',
            'platform': 'platform',
            'release_type': 'releaseType',
            'uses_idfa': 'usesIdfa',
            'version_string': 'versionString'
        }

        self._app_store_state = app_store_state
        self._copyright = copyright
        self._created_date = created_date
        self._downloadable = downloadable
        self._earliest_release_date = earliest_release_date
        self._platform = platform
        self._release_type = release_type
        self._uses_idfa = uses_idfa
        self._version_string = version_string

    @classmethod
    def from_dict(cls, dikt) -> 'AppStoreVersionAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AppStoreVersion_attributes of this AppStoreVersionAttributes.  # noqa: E501
        :rtype: AppStoreVersionAttributes
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_store_state(self) -> AppStoreVersionState:
        """Gets the app_store_state of this AppStoreVersionAttributes.


        :return: The app_store_state of this AppStoreVersionAttributes.
        :rtype: AppStoreVersionState
        """
        return self._app_store_state

    @app_store_state.setter
    def app_store_state(self, app_store_state: AppStoreVersionState):
        """Sets the app_store_state of this AppStoreVersionAttributes.


        :param app_store_state: The app_store_state of this AppStoreVersionAttributes.
        :type app_store_state: AppStoreVersionState
        """

        self._app_store_state = app_store_state

    @property
    def copyright(self) -> str:
        """Gets the copyright of this AppStoreVersionAttributes.


        :return: The copyright of this AppStoreVersionAttributes.
        :rtype: str
        """
        return self._copyright

    @copyright.setter
    def copyright(self, copyright: str):
        """Sets the copyright of this AppStoreVersionAttributes.


        :param copyright: The copyright of this AppStoreVersionAttributes.
        :type copyright: str
        """

        self._copyright = copyright

    @property
    def created_date(self) -> datetime:
        """Gets the created_date of this AppStoreVersionAttributes.


        :return: The created_date of this AppStoreVersionAttributes.
        :rtype: datetime
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date: datetime):
        """Sets the created_date of this AppStoreVersionAttributes.


        :param created_date: The created_date of this AppStoreVersionAttributes.
        :type created_date: datetime
        """

        self._created_date = created_date

    @property
    def downloadable(self) -> bool:
        """Gets the downloadable of this AppStoreVersionAttributes.


        :return: The downloadable of this AppStoreVersionAttributes.
        :rtype: bool
        """
        return self._downloadable

    @downloadable.setter
    def downloadable(self, downloadable: bool):
        """Sets the downloadable of this AppStoreVersionAttributes.


        :param downloadable: The downloadable of this AppStoreVersionAttributes.
        :type downloadable: bool
        """

        self._downloadable = downloadable

    @property
    def earliest_release_date(self) -> datetime:
        """Gets the earliest_release_date of this AppStoreVersionAttributes.


        :return: The earliest_release_date of this AppStoreVersionAttributes.
        :rtype: datetime
        """
        return self._earliest_release_date

    @earliest_release_date.setter
    def earliest_release_date(self, earliest_release_date: datetime):
        """Sets the earliest_release_date of this AppStoreVersionAttributes.


        :param earliest_release_date: The earliest_release_date of this AppStoreVersionAttributes.
        :type earliest_release_date: datetime
        """

        self._earliest_release_date = earliest_release_date

    @property
    def platform(self) -> Platform:
        """Gets the platform of this AppStoreVersionAttributes.


        :return: The platform of this AppStoreVersionAttributes.
        :rtype: Platform
        """
        return self._platform

    @platform.setter
    def platform(self, platform: Platform):
        """Sets the platform of this AppStoreVersionAttributes.


        :param platform: The platform of this AppStoreVersionAttributes.
        :type platform: Platform
        """

        self._platform = platform

    @property
    def release_type(self) -> str:
        """Gets the release_type of this AppStoreVersionAttributes.


        :return: The release_type of this AppStoreVersionAttributes.
        :rtype: str
        """
        return self._release_type

    @release_type.setter
    def release_type(self, release_type: str):
        """Sets the release_type of this AppStoreVersionAttributes.


        :param release_type: The release_type of this AppStoreVersionAttributes.
        :type release_type: str
        """
        allowed_values = ["MANUAL", "AFTER_APPROVAL", "SCHEDULED"]  # noqa: E501
        if release_type not in allowed_values:
            raise ValueError(
                "Invalid value for `release_type` ({0}), must be one of {1}"
                .format(release_type, allowed_values)
            )

        self._release_type = release_type

    @property
    def uses_idfa(self) -> bool:
        """Gets the uses_idfa of this AppStoreVersionAttributes.


        :return: The uses_idfa of this AppStoreVersionAttributes.
        :rtype: bool
        """
        return self._uses_idfa

    @uses_idfa.setter
    def uses_idfa(self, uses_idfa: bool):
        """Sets the uses_idfa of this AppStoreVersionAttributes.


        :param uses_idfa: The uses_idfa of this AppStoreVersionAttributes.
        :type uses_idfa: bool
        """

        self._uses_idfa = uses_idfa

    @property
    def version_string(self) -> str:
        """Gets the version_string of this AppStoreVersionAttributes.


        :return: The version_string of this AppStoreVersionAttributes.
        :rtype: str
        """
        return self._version_string

    @version_string.setter
    def version_string(self, version_string: str):
        """Sets the version_string of this AppStoreVersionAttributes.


        :param version_string: The version_string of this AppStoreVersionAttributes.
        :type version_string: str
        """

        self._version_string = version_string
