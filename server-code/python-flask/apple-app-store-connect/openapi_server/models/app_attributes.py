from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class AppAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, available_in_new_territories=None, bundle_id=None, content_rights_declaration=None, is_or_ever_was_made_for_kids=None, name=None, primary_locale=None, sku=None):  # noqa: E501
        """AppAttributes - a model defined in OpenAPI

        :param available_in_new_territories: The available_in_new_territories of this AppAttributes.  # noqa: E501
        :type available_in_new_territories: bool
        :param bundle_id: The bundle_id of this AppAttributes.  # noqa: E501
        :type bundle_id: str
        :param content_rights_declaration: The content_rights_declaration of this AppAttributes.  # noqa: E501
        :type content_rights_declaration: str
        :param is_or_ever_was_made_for_kids: The is_or_ever_was_made_for_kids of this AppAttributes.  # noqa: E501
        :type is_or_ever_was_made_for_kids: bool
        :param name: The name of this AppAttributes.  # noqa: E501
        :type name: str
        :param primary_locale: The primary_locale of this AppAttributes.  # noqa: E501
        :type primary_locale: str
        :param sku: The sku of this AppAttributes.  # noqa: E501
        :type sku: str
        """
        self.openapi_types = {
            'available_in_new_territories': bool,
            'bundle_id': str,
            'content_rights_declaration': str,
            'is_or_ever_was_made_for_kids': bool,
            'name': str,
            'primary_locale': str,
            'sku': str
        }

        self.attribute_map = {
            'available_in_new_territories': 'availableInNewTerritories',
            'bundle_id': 'bundleId',
            'content_rights_declaration': 'contentRightsDeclaration',
            'is_or_ever_was_made_for_kids': 'isOrEverWasMadeForKids',
            'name': 'name',
            'primary_locale': 'primaryLocale',
            'sku': 'sku'
        }

        self._available_in_new_territories = available_in_new_territories
        self._bundle_id = bundle_id
        self._content_rights_declaration = content_rights_declaration
        self._is_or_ever_was_made_for_kids = is_or_ever_was_made_for_kids
        self._name = name
        self._primary_locale = primary_locale
        self._sku = sku

    @classmethod
    def from_dict(cls, dikt) -> 'AppAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The App_attributes of this AppAttributes.  # noqa: E501
        :rtype: AppAttributes
        """
        return util.deserialize_model(dikt, cls)

    @property
    def available_in_new_territories(self) -> bool:
        """Gets the available_in_new_territories of this AppAttributes.


        :return: The available_in_new_territories of this AppAttributes.
        :rtype: bool
        """
        return self._available_in_new_territories

    @available_in_new_territories.setter
    def available_in_new_territories(self, available_in_new_territories: bool):
        """Sets the available_in_new_territories of this AppAttributes.


        :param available_in_new_territories: The available_in_new_territories of this AppAttributes.
        :type available_in_new_territories: bool
        """

        self._available_in_new_territories = available_in_new_territories

    @property
    def bundle_id(self) -> str:
        """Gets the bundle_id of this AppAttributes.


        :return: The bundle_id of this AppAttributes.
        :rtype: str
        """
        return self._bundle_id

    @bundle_id.setter
    def bundle_id(self, bundle_id: str):
        """Sets the bundle_id of this AppAttributes.


        :param bundle_id: The bundle_id of this AppAttributes.
        :type bundle_id: str
        """

        self._bundle_id = bundle_id

    @property
    def content_rights_declaration(self) -> str:
        """Gets the content_rights_declaration of this AppAttributes.


        :return: The content_rights_declaration of this AppAttributes.
        :rtype: str
        """
        return self._content_rights_declaration

    @content_rights_declaration.setter
    def content_rights_declaration(self, content_rights_declaration: str):
        """Sets the content_rights_declaration of this AppAttributes.


        :param content_rights_declaration: The content_rights_declaration of this AppAttributes.
        :type content_rights_declaration: str
        """
        allowed_values = ["DOES_NOT_USE_THIRD_PARTY_CONTENT", "USES_THIRD_PARTY_CONTENT"]  # noqa: E501
        if content_rights_declaration not in allowed_values:
            raise ValueError(
                "Invalid value for `content_rights_declaration` ({0}), must be one of {1}"
                .format(content_rights_declaration, allowed_values)
            )

        self._content_rights_declaration = content_rights_declaration

    @property
    def is_or_ever_was_made_for_kids(self) -> bool:
        """Gets the is_or_ever_was_made_for_kids of this AppAttributes.


        :return: The is_or_ever_was_made_for_kids of this AppAttributes.
        :rtype: bool
        """
        return self._is_or_ever_was_made_for_kids

    @is_or_ever_was_made_for_kids.setter
    def is_or_ever_was_made_for_kids(self, is_or_ever_was_made_for_kids: bool):
        """Sets the is_or_ever_was_made_for_kids of this AppAttributes.


        :param is_or_ever_was_made_for_kids: The is_or_ever_was_made_for_kids of this AppAttributes.
        :type is_or_ever_was_made_for_kids: bool
        """

        self._is_or_ever_was_made_for_kids = is_or_ever_was_made_for_kids

    @property
    def name(self) -> str:
        """Gets the name of this AppAttributes.


        :return: The name of this AppAttributes.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this AppAttributes.


        :param name: The name of this AppAttributes.
        :type name: str
        """

        self._name = name

    @property
    def primary_locale(self) -> str:
        """Gets the primary_locale of this AppAttributes.


        :return: The primary_locale of this AppAttributes.
        :rtype: str
        """
        return self._primary_locale

    @primary_locale.setter
    def primary_locale(self, primary_locale: str):
        """Sets the primary_locale of this AppAttributes.


        :param primary_locale: The primary_locale of this AppAttributes.
        :type primary_locale: str
        """

        self._primary_locale = primary_locale

    @property
    def sku(self) -> str:
        """Gets the sku of this AppAttributes.


        :return: The sku of this AppAttributes.
        :rtype: str
        """
        return self._sku

    @sku.setter
    def sku(self, sku: str):
        """Sets the sku of this AppAttributes.


        :param sku: The sku of this AppAttributes.
        :type sku: str
        """

        self._sku = sku
