from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.dataset_event import DatasetEvent
from openapi_server import util

from openapi_server.models.dataset_event import DatasetEvent  # noqa: E501

class DatasetEventCollection(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, total_entries=None, dataset_events=None):  # noqa: E501
        """DatasetEventCollection - a model defined in OpenAPI

        :param total_entries: The total_entries of this DatasetEventCollection.  # noqa: E501
        :type total_entries: int
        :param dataset_events: The dataset_events of this DatasetEventCollection.  # noqa: E501
        :type dataset_events: List[DatasetEvent]
        """
        self.openapi_types = {
            'total_entries': int,
            'dataset_events': List[DatasetEvent]
        }

        self.attribute_map = {
            'total_entries': 'total_entries',
            'dataset_events': 'dataset_events'
        }

        self._total_entries = total_entries
        self._dataset_events = dataset_events

    @classmethod
    def from_dict(cls, dikt) -> 'DatasetEventCollection':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DatasetEventCollection of this DatasetEventCollection.  # noqa: E501
        :rtype: DatasetEventCollection
        """
        return util.deserialize_model(dikt, cls)

    @property
    def total_entries(self) -> int:
        """Gets the total_entries of this DatasetEventCollection.

        Count of total objects in the current result set before pagination parameters (limit, offset) are applied.   # noqa: E501

        :return: The total_entries of this DatasetEventCollection.
        :rtype: int
        """
        return self._total_entries

    @total_entries.setter
    def total_entries(self, total_entries: int):
        """Sets the total_entries of this DatasetEventCollection.

        Count of total objects in the current result set before pagination parameters (limit, offset) are applied.   # noqa: E501

        :param total_entries: The total_entries of this DatasetEventCollection.
        :type total_entries: int
        """

        self._total_entries = total_entries

    @property
    def dataset_events(self) -> List[DatasetEvent]:
        """Gets the dataset_events of this DatasetEventCollection.


        :return: The dataset_events of this DatasetEventCollection.
        :rtype: List[DatasetEvent]
        """
        return self._dataset_events

    @dataset_events.setter
    def dataset_events(self, dataset_events: List[DatasetEvent]):
        """Sets the dataset_events of this DatasetEventCollection.


        :param dataset_events: The dataset_events of this DatasetEventCollection.
        :type dataset_events: List[DatasetEvent]
        """

        self._dataset_events = dataset_events
