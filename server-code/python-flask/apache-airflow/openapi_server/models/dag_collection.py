from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.dag import DAG
from openapi_server import util

from openapi_server.models.dag import DAG  # noqa: E501

class DAGCollection(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, total_entries=None, dags=None):  # noqa: E501
        """DAGCollection - a model defined in OpenAPI

        :param total_entries: The total_entries of this DAGCollection.  # noqa: E501
        :type total_entries: int
        :param dags: The dags of this DAGCollection.  # noqa: E501
        :type dags: List[DAG]
        """
        self.openapi_types = {
            'total_entries': int,
            'dags': List[DAG]
        }

        self.attribute_map = {
            'total_entries': 'total_entries',
            'dags': 'dags'
        }

        self._total_entries = total_entries
        self._dags = dags

    @classmethod
    def from_dict(cls, dikt) -> 'DAGCollection':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DAGCollection of this DAGCollection.  # noqa: E501
        :rtype: DAGCollection
        """
        return util.deserialize_model(dikt, cls)

    @property
    def total_entries(self) -> int:
        """Gets the total_entries of this DAGCollection.

        Count of total objects in the current result set before pagination parameters (limit, offset) are applied.   # noqa: E501

        :return: The total_entries of this DAGCollection.
        :rtype: int
        """
        return self._total_entries

    @total_entries.setter
    def total_entries(self, total_entries: int):
        """Sets the total_entries of this DAGCollection.

        Count of total objects in the current result set before pagination parameters (limit, offset) are applied.   # noqa: E501

        :param total_entries: The total_entries of this DAGCollection.
        :type total_entries: int
        """

        self._total_entries = total_entries

    @property
    def dags(self) -> List[DAG]:
        """Gets the dags of this DAGCollection.


        :return: The dags of this DAGCollection.
        :rtype: List[DAG]
        """
        return self._dags

    @dags.setter
    def dags(self, dags: List[DAG]):
        """Sets the dags of this DAGCollection.


        :param dags: The dags of this DAGCollection.
        :type dags: List[DAG]
        """

        self._dags = dags
