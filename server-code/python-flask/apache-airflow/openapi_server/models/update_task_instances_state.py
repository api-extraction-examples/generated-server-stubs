from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateTaskInstancesState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dag_run_id=None, dry_run=True, execution_date=None, include_downstream=None, include_future=None, include_past=None, include_upstream=None, new_state=None, task_id=None):  # noqa: E501
        """UpdateTaskInstancesState - a model defined in OpenAPI

        :param dag_run_id: The dag_run_id of this UpdateTaskInstancesState.  # noqa: E501
        :type dag_run_id: str
        :param dry_run: The dry_run of this UpdateTaskInstancesState.  # noqa: E501
        :type dry_run: bool
        :param execution_date: The execution_date of this UpdateTaskInstancesState.  # noqa: E501
        :type execution_date: str
        :param include_downstream: The include_downstream of this UpdateTaskInstancesState.  # noqa: E501
        :type include_downstream: bool
        :param include_future: The include_future of this UpdateTaskInstancesState.  # noqa: E501
        :type include_future: bool
        :param include_past: The include_past of this UpdateTaskInstancesState.  # noqa: E501
        :type include_past: bool
        :param include_upstream: The include_upstream of this UpdateTaskInstancesState.  # noqa: E501
        :type include_upstream: bool
        :param new_state: The new_state of this UpdateTaskInstancesState.  # noqa: E501
        :type new_state: str
        :param task_id: The task_id of this UpdateTaskInstancesState.  # noqa: E501
        :type task_id: str
        """
        self.openapi_types = {
            'dag_run_id': str,
            'dry_run': bool,
            'execution_date': str,
            'include_downstream': bool,
            'include_future': bool,
            'include_past': bool,
            'include_upstream': bool,
            'new_state': str,
            'task_id': str
        }

        self.attribute_map = {
            'dag_run_id': 'dag_run_id',
            'dry_run': 'dry_run',
            'execution_date': 'execution_date',
            'include_downstream': 'include_downstream',
            'include_future': 'include_future',
            'include_past': 'include_past',
            'include_upstream': 'include_upstream',
            'new_state': 'new_state',
            'task_id': 'task_id'
        }

        self._dag_run_id = dag_run_id
        self._dry_run = dry_run
        self._execution_date = execution_date
        self._include_downstream = include_downstream
        self._include_future = include_future
        self._include_past = include_past
        self._include_upstream = include_upstream
        self._new_state = new_state
        self._task_id = task_id

    @classmethod
    def from_dict(cls, dikt) -> 'UpdateTaskInstancesState':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UpdateTaskInstancesState of this UpdateTaskInstancesState.  # noqa: E501
        :rtype: UpdateTaskInstancesState
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dag_run_id(self) -> str:
        """Gets the dag_run_id of this UpdateTaskInstancesState.

        The task instance's DAG run ID. Either set this or execution_date but not both.  *New in version 2.3.0*   # noqa: E501

        :return: The dag_run_id of this UpdateTaskInstancesState.
        :rtype: str
        """
        return self._dag_run_id

    @dag_run_id.setter
    def dag_run_id(self, dag_run_id: str):
        """Sets the dag_run_id of this UpdateTaskInstancesState.

        The task instance's DAG run ID. Either set this or execution_date but not both.  *New in version 2.3.0*   # noqa: E501

        :param dag_run_id: The dag_run_id of this UpdateTaskInstancesState.
        :type dag_run_id: str
        """

        self._dag_run_id = dag_run_id

    @property
    def dry_run(self) -> bool:
        """Gets the dry_run of this UpdateTaskInstancesState.

        If set, don't actually run this operation. The response will contain a list of task instances planned to be affected, but won't be modified in any way.   # noqa: E501

        :return: The dry_run of this UpdateTaskInstancesState.
        :rtype: bool
        """
        return self._dry_run

    @dry_run.setter
    def dry_run(self, dry_run: bool):
        """Sets the dry_run of this UpdateTaskInstancesState.

        If set, don't actually run this operation. The response will contain a list of task instances planned to be affected, but won't be modified in any way.   # noqa: E501

        :param dry_run: The dry_run of this UpdateTaskInstancesState.
        :type dry_run: bool
        """

        self._dry_run = dry_run

    @property
    def execution_date(self) -> str:
        """Gets the execution_date of this UpdateTaskInstancesState.

        The execution date. Either set this or dag_run_id but not both.  # noqa: E501

        :return: The execution_date of this UpdateTaskInstancesState.
        :rtype: str
        """
        return self._execution_date

    @execution_date.setter
    def execution_date(self, execution_date: str):
        """Sets the execution_date of this UpdateTaskInstancesState.

        The execution date. Either set this or dag_run_id but not both.  # noqa: E501

        :param execution_date: The execution_date of this UpdateTaskInstancesState.
        :type execution_date: str
        """

        self._execution_date = execution_date

    @property
    def include_downstream(self) -> bool:
        """Gets the include_downstream of this UpdateTaskInstancesState.

        If set to true, downstream tasks are also affected.  # noqa: E501

        :return: The include_downstream of this UpdateTaskInstancesState.
        :rtype: bool
        """
        return self._include_downstream

    @include_downstream.setter
    def include_downstream(self, include_downstream: bool):
        """Sets the include_downstream of this UpdateTaskInstancesState.

        If set to true, downstream tasks are also affected.  # noqa: E501

        :param include_downstream: The include_downstream of this UpdateTaskInstancesState.
        :type include_downstream: bool
        """

        self._include_downstream = include_downstream

    @property
    def include_future(self) -> bool:
        """Gets the include_future of this UpdateTaskInstancesState.

        If set to True, also tasks from future DAG Runs are affected.  # noqa: E501

        :return: The include_future of this UpdateTaskInstancesState.
        :rtype: bool
        """
        return self._include_future

    @include_future.setter
    def include_future(self, include_future: bool):
        """Sets the include_future of this UpdateTaskInstancesState.

        If set to True, also tasks from future DAG Runs are affected.  # noqa: E501

        :param include_future: The include_future of this UpdateTaskInstancesState.
        :type include_future: bool
        """

        self._include_future = include_future

    @property
    def include_past(self) -> bool:
        """Gets the include_past of this UpdateTaskInstancesState.

        If set to True, also tasks from past DAG Runs are affected.  # noqa: E501

        :return: The include_past of this UpdateTaskInstancesState.
        :rtype: bool
        """
        return self._include_past

    @include_past.setter
    def include_past(self, include_past: bool):
        """Sets the include_past of this UpdateTaskInstancesState.

        If set to True, also tasks from past DAG Runs are affected.  # noqa: E501

        :param include_past: The include_past of this UpdateTaskInstancesState.
        :type include_past: bool
        """

        self._include_past = include_past

    @property
    def include_upstream(self) -> bool:
        """Gets the include_upstream of this UpdateTaskInstancesState.

        If set to true, upstream tasks are also affected.  # noqa: E501

        :return: The include_upstream of this UpdateTaskInstancesState.
        :rtype: bool
        """
        return self._include_upstream

    @include_upstream.setter
    def include_upstream(self, include_upstream: bool):
        """Sets the include_upstream of this UpdateTaskInstancesState.

        If set to true, upstream tasks are also affected.  # noqa: E501

        :param include_upstream: The include_upstream of this UpdateTaskInstancesState.
        :type include_upstream: bool
        """

        self._include_upstream = include_upstream

    @property
    def new_state(self) -> str:
        """Gets the new_state of this UpdateTaskInstancesState.

        Expected new state.  # noqa: E501

        :return: The new_state of this UpdateTaskInstancesState.
        :rtype: str
        """
        return self._new_state

    @new_state.setter
    def new_state(self, new_state: str):
        """Sets the new_state of this UpdateTaskInstancesState.

        Expected new state.  # noqa: E501

        :param new_state: The new_state of this UpdateTaskInstancesState.
        :type new_state: str
        """
        allowed_values = ["success", "failed"]  # noqa: E501
        if new_state not in allowed_values:
            raise ValueError(
                "Invalid value for `new_state` ({0}), must be one of {1}"
                .format(new_state, allowed_values)
            )

        self._new_state = new_state

    @property
    def task_id(self) -> str:
        """Gets the task_id of this UpdateTaskInstancesState.

        The task ID.  # noqa: E501

        :return: The task_id of this UpdateTaskInstancesState.
        :rtype: str
        """
        return self._task_id

    @task_id.setter
    def task_id(self, task_id: str):
        """Sets the task_id of this UpdateTaskInstancesState.

        The task ID.  # noqa: E501

        :param task_id: The task_id of this UpdateTaskInstancesState.
        :type task_id: str
        """

        self._task_id = task_id
