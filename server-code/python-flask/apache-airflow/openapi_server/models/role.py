from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.action_resource import ActionResource
from openapi_server import util

from openapi_server.models.action_resource import ActionResource  # noqa: E501

class Role(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, actions=None, name=None):  # noqa: E501
        """Role - a model defined in OpenAPI

        :param actions: The actions of this Role.  # noqa: E501
        :type actions: List[ActionResource]
        :param name: The name of this Role.  # noqa: E501
        :type name: str
        """
        self.openapi_types = {
            'actions': List[ActionResource],
            'name': str
        }

        self.attribute_map = {
            'actions': 'actions',
            'name': 'name'
        }

        self._actions = actions
        self._name = name

    @classmethod
    def from_dict(cls, dikt) -> 'Role':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Role of this Role.  # noqa: E501
        :rtype: Role
        """
        return util.deserialize_model(dikt, cls)

    @property
    def actions(self) -> List[ActionResource]:
        """Gets the actions of this Role.


        :return: The actions of this Role.
        :rtype: List[ActionResource]
        """
        return self._actions

    @actions.setter
    def actions(self, actions: List[ActionResource]):
        """Sets the actions of this Role.


        :param actions: The actions of this Role.
        :type actions: List[ActionResource]
        """

        self._actions = actions

    @property
    def name(self) -> str:
        """Gets the name of this Role.

        The name of the role  *Changed in version 2.3.0*&#58; A minimum character length requirement ('minLength') is added.   # noqa: E501

        :return: The name of this Role.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Role.

        The name of the role  *Changed in version 2.3.0*&#58; A minimum character length requirement ('minLength') is added.   # noqa: E501

        :param name: The name of this Role.
        :type name: str
        """
        if name is not None and len(name) < 1:
            raise ValueError("Invalid value for `name`, length must be greater than or equal to `1`")  # noqa: E501

        self._name = name
