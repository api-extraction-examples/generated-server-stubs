from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.exposed_action_schema import ExposedActionSchema
from openapi_server import util

from openapi_server.models.exposed_action_schema import ExposedActionSchema  # noqa: E501

class ExposedActionResponseSchema(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, configuration_link=None, results=None):  # noqa: E501
        """ExposedActionResponseSchema - a model defined in OpenAPI

        :param configuration_link: The configuration_link of this ExposedActionResponseSchema.  # noqa: E501
        :type configuration_link: str
        :param results: The results of this ExposedActionResponseSchema.  # noqa: E501
        :type results: List[ExposedActionSchema]
        """
        self.openapi_types = {
            'configuration_link': str,
            'results': List[ExposedActionSchema]
        }

        self.attribute_map = {
            'configuration_link': 'configuration_link',
            'results': 'results'
        }

        self._configuration_link = configuration_link
        self._results = results

    @classmethod
    def from_dict(cls, dikt) -> 'ExposedActionResponseSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ExposedActionResponseSchema of this ExposedActionResponseSchema.  # noqa: E501
        :rtype: ExposedActionResponseSchema
        """
        return util.deserialize_model(dikt, cls)

    @property
    def configuration_link(self) -> str:
        """Gets the configuration_link of this ExposedActionResponseSchema.

        URL to configure and expose more actions.  # noqa: E501

        :return: The configuration_link of this ExposedActionResponseSchema.
        :rtype: str
        """
        return self._configuration_link

    @configuration_link.setter
    def configuration_link(self, configuration_link: str):
        """Sets the configuration_link of this ExposedActionResponseSchema.

        URL to configure and expose more actions.  # noqa: E501

        :param configuration_link: The configuration_link of this ExposedActionResponseSchema.
        :type configuration_link: str
        """
        if configuration_link is None:
            raise ValueError("Invalid value for `configuration_link`, must not be `None`")  # noqa: E501

        self._configuration_link = configuration_link

    @property
    def results(self) -> List[ExposedActionSchema]:
        """Gets the results of this ExposedActionResponseSchema.


        :return: The results of this ExposedActionResponseSchema.
        :rtype: List[ExposedActionSchema]
        """
        return self._results

    @results.setter
    def results(self, results: List[ExposedActionSchema]):
        """Sets the results of this ExposedActionResponseSchema.


        :param results: The results of this ExposedActionResponseSchema.
        :type results: List[ExposedActionSchema]
        """
        if results is None:
            raise ValueError("Invalid value for `results`, must not be `None`")  # noqa: E501

        self._results = results
