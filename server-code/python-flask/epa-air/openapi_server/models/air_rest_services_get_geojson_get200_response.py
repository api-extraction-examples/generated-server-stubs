from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.air09 import Air09
from openapi_server import util

from openapi_server.models.air09 import Air09  # noqa: E501

class AirRestServicesGetGeojsonGet200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, features=None, type=None):  # noqa: E501
        """AirRestServicesGetGeojsonGet200Response - a model defined in OpenAPI

        :param features: The features of this AirRestServicesGetGeojsonGet200Response.  # noqa: E501
        :type features: List[Air09]
        :param type: The type of this AirRestServicesGetGeojsonGet200Response.  # noqa: E501
        :type type: str
        """
        self.openapi_types = {
            'features': List[Air09],
            'type': str
        }

        self.attribute_map = {
            'features': 'features',
            'type': 'type'
        }

        self._features = features
        self._type = type

    @classmethod
    def from_dict(cls, dikt) -> 'AirRestServicesGetGeojsonGet200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The _air_rest_services_get_geojson_get_200_response of this AirRestServicesGetGeojsonGet200Response.  # noqa: E501
        :rtype: AirRestServicesGetGeojsonGet200Response
        """
        return util.deserialize_model(dikt, cls)

    @property
    def features(self) -> List[Air09]:
        """Gets the features of this AirRestServicesGetGeojsonGet200Response.

        Array of features in the feature collection.  # noqa: E501

        :return: The features of this AirRestServicesGetGeojsonGet200Response.
        :rtype: List[Air09]
        """
        return self._features

    @features.setter
    def features(self, features: List[Air09]):
        """Sets the features of this AirRestServicesGetGeojsonGet200Response.

        Array of features in the feature collection.  # noqa: E501

        :param features: The features of this AirRestServicesGetGeojsonGet200Response.
        :type features: List[Air09]
        """
        if features is None:
            raise ValueError("Invalid value for `features`, must not be `None`")  # noqa: E501

        self._features = features

    @property
    def type(self) -> str:
        """Gets the type of this AirRestServicesGetGeojsonGet200Response.

        Static marker indicating object is a GeoJSON Feature Collection.  # noqa: E501

        :return: The type of this AirRestServicesGetGeojsonGet200Response.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this AirRestServicesGetGeojsonGet200Response.

        Static marker indicating object is a GeoJSON Feature Collection.  # noqa: E501

        :param type: The type of this AirRestServicesGetGeojsonGet200Response.
        :type type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")  # noqa: E501

        self._type = type
