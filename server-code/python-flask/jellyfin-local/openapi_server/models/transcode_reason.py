from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class TranscodeReason(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    CONTAINERNOTSUPPORTED = 'ContainerNotSupported'
    VIDEOCODECNOTSUPPORTED = 'VideoCodecNotSupported'
    AUDIOCODECNOTSUPPORTED = 'AudioCodecNotSupported'
    CONTAINERBITRATEEXCEEDSLIMIT = 'ContainerBitrateExceedsLimit'
    AUDIOBITRATENOTSUPPORTED = 'AudioBitrateNotSupported'
    AUDIOCHANNELSNOTSUPPORTED = 'AudioChannelsNotSupported'
    VIDEORESOLUTIONNOTSUPPORTED = 'VideoResolutionNotSupported'
    UNKNOWNVIDEOSTREAMINFO = 'UnknownVideoStreamInfo'
    UNKNOWNAUDIOSTREAMINFO = 'UnknownAudioStreamInfo'
    AUDIOPROFILENOTSUPPORTED = 'AudioProfileNotSupported'
    AUDIOSAMPLERATENOTSUPPORTED = 'AudioSampleRateNotSupported'
    ANAMORPHICVIDEONOTSUPPORTED = 'AnamorphicVideoNotSupported'
    INTERLACEDVIDEONOTSUPPORTED = 'InterlacedVideoNotSupported'
    SECONDARYAUDIONOTSUPPORTED = 'SecondaryAudioNotSupported'
    REFFRAMESNOTSUPPORTED = 'RefFramesNotSupported'
    VIDEOBITDEPTHNOTSUPPORTED = 'VideoBitDepthNotSupported'
    VIDEOBITRATENOTSUPPORTED = 'VideoBitrateNotSupported'
    VIDEOFRAMERATENOTSUPPORTED = 'VideoFramerateNotSupported'
    VIDEOLEVELNOTSUPPORTED = 'VideoLevelNotSupported'
    VIDEOPROFILENOTSUPPORTED = 'VideoProfileNotSupported'
    AUDIOBITDEPTHNOTSUPPORTED = 'AudioBitDepthNotSupported'
    SUBTITLECODECNOTSUPPORTED = 'SubtitleCodecNotSupported'
    DIRECTPLAYERROR = 'DirectPlayError'
    def __init__(self):  # noqa: E501
        """TranscodeReason - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt) -> 'TranscodeReason':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TranscodeReason of this TranscodeReason.  # noqa: E501
        :rtype: TranscodeReason
        """
        return util.deserialize_model(dikt, cls)
