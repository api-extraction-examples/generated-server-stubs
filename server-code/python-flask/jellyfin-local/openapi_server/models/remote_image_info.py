from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.image_type import ImageType
from openapi_server.models.rating_type import RatingType
from openapi_server import util

from openapi_server.models.image_type import ImageType  # noqa: E501
from openapi_server.models.rating_type import RatingType  # noqa: E501

class RemoteImageInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, community_rating=None, height=None, language=None, provider_name=None, rating_type=None, thumbnail_url=None, type=None, url=None, vote_count=None, width=None):  # noqa: E501
        """RemoteImageInfo - a model defined in OpenAPI

        :param community_rating: The community_rating of this RemoteImageInfo.  # noqa: E501
        :type community_rating: float
        :param height: The height of this RemoteImageInfo.  # noqa: E501
        :type height: int
        :param language: The language of this RemoteImageInfo.  # noqa: E501
        :type language: str
        :param provider_name: The provider_name of this RemoteImageInfo.  # noqa: E501
        :type provider_name: str
        :param rating_type: The rating_type of this RemoteImageInfo.  # noqa: E501
        :type rating_type: RatingType
        :param thumbnail_url: The thumbnail_url of this RemoteImageInfo.  # noqa: E501
        :type thumbnail_url: str
        :param type: The type of this RemoteImageInfo.  # noqa: E501
        :type type: ImageType
        :param url: The url of this RemoteImageInfo.  # noqa: E501
        :type url: str
        :param vote_count: The vote_count of this RemoteImageInfo.  # noqa: E501
        :type vote_count: int
        :param width: The width of this RemoteImageInfo.  # noqa: E501
        :type width: int
        """
        self.openapi_types = {
            'community_rating': float,
            'height': int,
            'language': str,
            'provider_name': str,
            'rating_type': RatingType,
            'thumbnail_url': str,
            'type': ImageType,
            'url': str,
            'vote_count': int,
            'width': int
        }

        self.attribute_map = {
            'community_rating': 'CommunityRating',
            'height': 'Height',
            'language': 'Language',
            'provider_name': 'ProviderName',
            'rating_type': 'RatingType',
            'thumbnail_url': 'ThumbnailUrl',
            'type': 'Type',
            'url': 'Url',
            'vote_count': 'VoteCount',
            'width': 'Width'
        }

        self._community_rating = community_rating
        self._height = height
        self._language = language
        self._provider_name = provider_name
        self._rating_type = rating_type
        self._thumbnail_url = thumbnail_url
        self._type = type
        self._url = url
        self._vote_count = vote_count
        self._width = width

    @classmethod
    def from_dict(cls, dikt) -> 'RemoteImageInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RemoteImageInfo of this RemoteImageInfo.  # noqa: E501
        :rtype: RemoteImageInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def community_rating(self) -> float:
        """Gets the community_rating of this RemoteImageInfo.

        Gets or sets the community rating.  # noqa: E501

        :return: The community_rating of this RemoteImageInfo.
        :rtype: float
        """
        return self._community_rating

    @community_rating.setter
    def community_rating(self, community_rating: float):
        """Sets the community_rating of this RemoteImageInfo.

        Gets or sets the community rating.  # noqa: E501

        :param community_rating: The community_rating of this RemoteImageInfo.
        :type community_rating: float
        """

        self._community_rating = community_rating

    @property
    def height(self) -> int:
        """Gets the height of this RemoteImageInfo.

        Gets or sets the height.  # noqa: E501

        :return: The height of this RemoteImageInfo.
        :rtype: int
        """
        return self._height

    @height.setter
    def height(self, height: int):
        """Sets the height of this RemoteImageInfo.

        Gets or sets the height.  # noqa: E501

        :param height: The height of this RemoteImageInfo.
        :type height: int
        """

        self._height = height

    @property
    def language(self) -> str:
        """Gets the language of this RemoteImageInfo.

        Gets or sets the language.  # noqa: E501

        :return: The language of this RemoteImageInfo.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language: str):
        """Sets the language of this RemoteImageInfo.

        Gets or sets the language.  # noqa: E501

        :param language: The language of this RemoteImageInfo.
        :type language: str
        """

        self._language = language

    @property
    def provider_name(self) -> str:
        """Gets the provider_name of this RemoteImageInfo.

        Gets or sets the name of the provider.  # noqa: E501

        :return: The provider_name of this RemoteImageInfo.
        :rtype: str
        """
        return self._provider_name

    @provider_name.setter
    def provider_name(self, provider_name: str):
        """Sets the provider_name of this RemoteImageInfo.

        Gets or sets the name of the provider.  # noqa: E501

        :param provider_name: The provider_name of this RemoteImageInfo.
        :type provider_name: str
        """

        self._provider_name = provider_name

    @property
    def rating_type(self) -> RatingType:
        """Gets the rating_type of this RemoteImageInfo.


        :return: The rating_type of this RemoteImageInfo.
        :rtype: RatingType
        """
        return self._rating_type

    @rating_type.setter
    def rating_type(self, rating_type: RatingType):
        """Sets the rating_type of this RemoteImageInfo.


        :param rating_type: The rating_type of this RemoteImageInfo.
        :type rating_type: RatingType
        """

        self._rating_type = rating_type

    @property
    def thumbnail_url(self) -> str:
        """Gets the thumbnail_url of this RemoteImageInfo.

        Gets a url used for previewing a smaller version.  # noqa: E501

        :return: The thumbnail_url of this RemoteImageInfo.
        :rtype: str
        """
        return self._thumbnail_url

    @thumbnail_url.setter
    def thumbnail_url(self, thumbnail_url: str):
        """Sets the thumbnail_url of this RemoteImageInfo.

        Gets a url used for previewing a smaller version.  # noqa: E501

        :param thumbnail_url: The thumbnail_url of this RemoteImageInfo.
        :type thumbnail_url: str
        """

        self._thumbnail_url = thumbnail_url

    @property
    def type(self) -> ImageType:
        """Gets the type of this RemoteImageInfo.


        :return: The type of this RemoteImageInfo.
        :rtype: ImageType
        """
        return self._type

    @type.setter
    def type(self, type: ImageType):
        """Sets the type of this RemoteImageInfo.


        :param type: The type of this RemoteImageInfo.
        :type type: ImageType
        """

        self._type = type

    @property
    def url(self) -> str:
        """Gets the url of this RemoteImageInfo.

        Gets or sets the URL.  # noqa: E501

        :return: The url of this RemoteImageInfo.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url: str):
        """Sets the url of this RemoteImageInfo.

        Gets or sets the URL.  # noqa: E501

        :param url: The url of this RemoteImageInfo.
        :type url: str
        """

        self._url = url

    @property
    def vote_count(self) -> int:
        """Gets the vote_count of this RemoteImageInfo.

        Gets or sets the vote count.  # noqa: E501

        :return: The vote_count of this RemoteImageInfo.
        :rtype: int
        """
        return self._vote_count

    @vote_count.setter
    def vote_count(self, vote_count: int):
        """Sets the vote_count of this RemoteImageInfo.

        Gets or sets the vote count.  # noqa: E501

        :param vote_count: The vote_count of this RemoteImageInfo.
        :type vote_count: int
        """

        self._vote_count = vote_count

    @property
    def width(self) -> int:
        """Gets the width of this RemoteImageInfo.

        Gets or sets the width.  # noqa: E501

        :return: The width of this RemoteImageInfo.
        :rtype: int
        """
        return self._width

    @width.setter
    def width(self, width: int):
        """Sets the width of this RemoteImageInfo.

        Gets or sets the width.  # noqa: E501

        :param width: The width of this RemoteImageInfo.
        :type width: int
        """

        self._width = width
