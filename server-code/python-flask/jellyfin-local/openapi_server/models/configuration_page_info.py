from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.configuration_page_type import ConfigurationPageType
from openapi_server import util

from openapi_server.models.configuration_page_type import ConfigurationPageType  # noqa: E501

class ConfigurationPageInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, configuration_page_type=None, display_name=None, enable_in_main_menu=None, menu_icon=None, menu_section=None, name=None, plugin_id=None):  # noqa: E501
        """ConfigurationPageInfo - a model defined in OpenAPI

        :param configuration_page_type: The configuration_page_type of this ConfigurationPageInfo.  # noqa: E501
        :type configuration_page_type: ConfigurationPageType
        :param display_name: The display_name of this ConfigurationPageInfo.  # noqa: E501
        :type display_name: str
        :param enable_in_main_menu: The enable_in_main_menu of this ConfigurationPageInfo.  # noqa: E501
        :type enable_in_main_menu: bool
        :param menu_icon: The menu_icon of this ConfigurationPageInfo.  # noqa: E501
        :type menu_icon: str
        :param menu_section: The menu_section of this ConfigurationPageInfo.  # noqa: E501
        :type menu_section: str
        :param name: The name of this ConfigurationPageInfo.  # noqa: E501
        :type name: str
        :param plugin_id: The plugin_id of this ConfigurationPageInfo.  # noqa: E501
        :type plugin_id: str
        """
        self.openapi_types = {
            'configuration_page_type': ConfigurationPageType,
            'display_name': str,
            'enable_in_main_menu': bool,
            'menu_icon': str,
            'menu_section': str,
            'name': str,
            'plugin_id': str
        }

        self.attribute_map = {
            'configuration_page_type': 'ConfigurationPageType',
            'display_name': 'DisplayName',
            'enable_in_main_menu': 'EnableInMainMenu',
            'menu_icon': 'MenuIcon',
            'menu_section': 'MenuSection',
            'name': 'Name',
            'plugin_id': 'PluginId'
        }

        self._configuration_page_type = configuration_page_type
        self._display_name = display_name
        self._enable_in_main_menu = enable_in_main_menu
        self._menu_icon = menu_icon
        self._menu_section = menu_section
        self._name = name
        self._plugin_id = plugin_id

    @classmethod
    def from_dict(cls, dikt) -> 'ConfigurationPageInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ConfigurationPageInfo of this ConfigurationPageInfo.  # noqa: E501
        :rtype: ConfigurationPageInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def configuration_page_type(self) -> ConfigurationPageType:
        """Gets the configuration_page_type of this ConfigurationPageInfo.


        :return: The configuration_page_type of this ConfigurationPageInfo.
        :rtype: ConfigurationPageType
        """
        return self._configuration_page_type

    @configuration_page_type.setter
    def configuration_page_type(self, configuration_page_type: ConfigurationPageType):
        """Sets the configuration_page_type of this ConfigurationPageInfo.


        :param configuration_page_type: The configuration_page_type of this ConfigurationPageInfo.
        :type configuration_page_type: ConfigurationPageType
        """

        self._configuration_page_type = configuration_page_type

    @property
    def display_name(self) -> str:
        """Gets the display_name of this ConfigurationPageInfo.

        Gets or sets the display name.  # noqa: E501

        :return: The display_name of this ConfigurationPageInfo.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name: str):
        """Sets the display_name of this ConfigurationPageInfo.

        Gets or sets the display name.  # noqa: E501

        :param display_name: The display_name of this ConfigurationPageInfo.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def enable_in_main_menu(self) -> bool:
        """Gets the enable_in_main_menu of this ConfigurationPageInfo.

        Gets or sets a value indicating whether the configurations page is enabled in the main menu.  # noqa: E501

        :return: The enable_in_main_menu of this ConfigurationPageInfo.
        :rtype: bool
        """
        return self._enable_in_main_menu

    @enable_in_main_menu.setter
    def enable_in_main_menu(self, enable_in_main_menu: bool):
        """Sets the enable_in_main_menu of this ConfigurationPageInfo.

        Gets or sets a value indicating whether the configurations page is enabled in the main menu.  # noqa: E501

        :param enable_in_main_menu: The enable_in_main_menu of this ConfigurationPageInfo.
        :type enable_in_main_menu: bool
        """

        self._enable_in_main_menu = enable_in_main_menu

    @property
    def menu_icon(self) -> str:
        """Gets the menu_icon of this ConfigurationPageInfo.

        Gets or sets the menu icon.  # noqa: E501

        :return: The menu_icon of this ConfigurationPageInfo.
        :rtype: str
        """
        return self._menu_icon

    @menu_icon.setter
    def menu_icon(self, menu_icon: str):
        """Sets the menu_icon of this ConfigurationPageInfo.

        Gets or sets the menu icon.  # noqa: E501

        :param menu_icon: The menu_icon of this ConfigurationPageInfo.
        :type menu_icon: str
        """

        self._menu_icon = menu_icon

    @property
    def menu_section(self) -> str:
        """Gets the menu_section of this ConfigurationPageInfo.

        Gets or sets the menu section.  # noqa: E501

        :return: The menu_section of this ConfigurationPageInfo.
        :rtype: str
        """
        return self._menu_section

    @menu_section.setter
    def menu_section(self, menu_section: str):
        """Sets the menu_section of this ConfigurationPageInfo.

        Gets or sets the menu section.  # noqa: E501

        :param menu_section: The menu_section of this ConfigurationPageInfo.
        :type menu_section: str
        """

        self._menu_section = menu_section

    @property
    def name(self) -> str:
        """Gets the name of this ConfigurationPageInfo.

        Gets or sets the name.  # noqa: E501

        :return: The name of this ConfigurationPageInfo.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this ConfigurationPageInfo.

        Gets or sets the name.  # noqa: E501

        :param name: The name of this ConfigurationPageInfo.
        :type name: str
        """

        self._name = name

    @property
    def plugin_id(self) -> str:
        """Gets the plugin_id of this ConfigurationPageInfo.

        Gets or sets the plugin id.  # noqa: E501

        :return: The plugin_id of this ConfigurationPageInfo.
        :rtype: str
        """
        return self._plugin_id

    @plugin_id.setter
    def plugin_id(self, plugin_id: str):
        """Sets the plugin_id of this ConfigurationPageInfo.

        Gets or sets the plugin id.  # noqa: E501

        :param plugin_id: The plugin_id of this ConfigurationPageInfo.
        :type plugin_id: str
        """

        self._plugin_id = plugin_id
