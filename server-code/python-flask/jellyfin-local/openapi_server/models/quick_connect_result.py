from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class QuickConnectResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, authenticated=None, authentication=None, code=None, date_added=None, error=None, secret=None):  # noqa: E501
        """QuickConnectResult - a model defined in OpenAPI

        :param authenticated: The authenticated of this QuickConnectResult.  # noqa: E501
        :type authenticated: bool
        :param authentication: The authentication of this QuickConnectResult.  # noqa: E501
        :type authentication: str
        :param code: The code of this QuickConnectResult.  # noqa: E501
        :type code: str
        :param date_added: The date_added of this QuickConnectResult.  # noqa: E501
        :type date_added: datetime
        :param error: The error of this QuickConnectResult.  # noqa: E501
        :type error: str
        :param secret: The secret of this QuickConnectResult.  # noqa: E501
        :type secret: str
        """
        self.openapi_types = {
            'authenticated': bool,
            'authentication': str,
            'code': str,
            'date_added': datetime,
            'error': str,
            'secret': str
        }

        self.attribute_map = {
            'authenticated': 'Authenticated',
            'authentication': 'Authentication',
            'code': 'Code',
            'date_added': 'DateAdded',
            'error': 'Error',
            'secret': 'Secret'
        }

        self._authenticated = authenticated
        self._authentication = authentication
        self._code = code
        self._date_added = date_added
        self._error = error
        self._secret = secret

    @classmethod
    def from_dict(cls, dikt) -> 'QuickConnectResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The QuickConnectResult of this QuickConnectResult.  # noqa: E501
        :rtype: QuickConnectResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def authenticated(self) -> bool:
        """Gets the authenticated of this QuickConnectResult.

        Gets a value indicating whether this request is authorized.  # noqa: E501

        :return: The authenticated of this QuickConnectResult.
        :rtype: bool
        """
        return self._authenticated

    @authenticated.setter
    def authenticated(self, authenticated: bool):
        """Sets the authenticated of this QuickConnectResult.

        Gets a value indicating whether this request is authorized.  # noqa: E501

        :param authenticated: The authenticated of this QuickConnectResult.
        :type authenticated: bool
        """

        self._authenticated = authenticated

    @property
    def authentication(self) -> str:
        """Gets the authentication of this QuickConnectResult.

        Gets or sets the private access token.  # noqa: E501

        :return: The authentication of this QuickConnectResult.
        :rtype: str
        """
        return self._authentication

    @authentication.setter
    def authentication(self, authentication: str):
        """Sets the authentication of this QuickConnectResult.

        Gets or sets the private access token.  # noqa: E501

        :param authentication: The authentication of this QuickConnectResult.
        :type authentication: str
        """

        self._authentication = authentication

    @property
    def code(self) -> str:
        """Gets the code of this QuickConnectResult.

        Gets or sets the user facing code used so the user can quickly differentiate this request from others.  # noqa: E501

        :return: The code of this QuickConnectResult.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code: str):
        """Sets the code of this QuickConnectResult.

        Gets or sets the user facing code used so the user can quickly differentiate this request from others.  # noqa: E501

        :param code: The code of this QuickConnectResult.
        :type code: str
        """

        self._code = code

    @property
    def date_added(self) -> datetime:
        """Gets the date_added of this QuickConnectResult.

        Gets or sets the DateTime that this request was created.  # noqa: E501

        :return: The date_added of this QuickConnectResult.
        :rtype: datetime
        """
        return self._date_added

    @date_added.setter
    def date_added(self, date_added: datetime):
        """Sets the date_added of this QuickConnectResult.

        Gets or sets the DateTime that this request was created.  # noqa: E501

        :param date_added: The date_added of this QuickConnectResult.
        :type date_added: datetime
        """

        self._date_added = date_added

    @property
    def error(self) -> str:
        """Gets the error of this QuickConnectResult.

        Gets or sets an error message.  # noqa: E501

        :return: The error of this QuickConnectResult.
        :rtype: str
        """
        return self._error

    @error.setter
    def error(self, error: str):
        """Sets the error of this QuickConnectResult.

        Gets or sets an error message.  # noqa: E501

        :param error: The error of this QuickConnectResult.
        :type error: str
        """

        self._error = error

    @property
    def secret(self) -> str:
        """Gets the secret of this QuickConnectResult.

        Gets or sets the secret value used to uniquely identify this request. Can be used to retrieve authentication information.  # noqa: E501

        :return: The secret of this QuickConnectResult.
        :rtype: str
        """
        return self._secret

    @secret.setter
    def secret(self, secret: str):
        """Sets the secret of this QuickConnectResult.

        Gets or sets the secret value used to uniquely identify this request. Can be used to retrieve authentication information.  # noqa: E501

        :param secret: The secret of this QuickConnectResult.
        :type secret: str
        """

        self._secret = secret
