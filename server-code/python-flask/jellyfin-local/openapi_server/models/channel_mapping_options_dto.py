from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.name_id_pair import NameIdPair
from openapi_server.models.name_value_pair import NameValuePair
from openapi_server.models.tuner_channel_mapping import TunerChannelMapping
from openapi_server import util

from openapi_server.models.name_id_pair import NameIdPair  # noqa: E501
from openapi_server.models.name_value_pair import NameValuePair  # noqa: E501
from openapi_server.models.tuner_channel_mapping import TunerChannelMapping  # noqa: E501

class ChannelMappingOptionsDto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mappings=None, provider_channels=None, provider_name=None, tuner_channels=None):  # noqa: E501
        """ChannelMappingOptionsDto - a model defined in OpenAPI

        :param mappings: The mappings of this ChannelMappingOptionsDto.  # noqa: E501
        :type mappings: List[NameValuePair]
        :param provider_channels: The provider_channels of this ChannelMappingOptionsDto.  # noqa: E501
        :type provider_channels: List[NameIdPair]
        :param provider_name: The provider_name of this ChannelMappingOptionsDto.  # noqa: E501
        :type provider_name: str
        :param tuner_channels: The tuner_channels of this ChannelMappingOptionsDto.  # noqa: E501
        :type tuner_channels: List[TunerChannelMapping]
        """
        self.openapi_types = {
            'mappings': List[NameValuePair],
            'provider_channels': List[NameIdPair],
            'provider_name': str,
            'tuner_channels': List[TunerChannelMapping]
        }

        self.attribute_map = {
            'mappings': 'Mappings',
            'provider_channels': 'ProviderChannels',
            'provider_name': 'ProviderName',
            'tuner_channels': 'TunerChannels'
        }

        self._mappings = mappings
        self._provider_channels = provider_channels
        self._provider_name = provider_name
        self._tuner_channels = tuner_channels

    @classmethod
    def from_dict(cls, dikt) -> 'ChannelMappingOptionsDto':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ChannelMappingOptionsDto of this ChannelMappingOptionsDto.  # noqa: E501
        :rtype: ChannelMappingOptionsDto
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mappings(self) -> List[NameValuePair]:
        """Gets the mappings of this ChannelMappingOptionsDto.

        Gets or sets list of mappings.  # noqa: E501

        :return: The mappings of this ChannelMappingOptionsDto.
        :rtype: List[NameValuePair]
        """
        return self._mappings

    @mappings.setter
    def mappings(self, mappings: List[NameValuePair]):
        """Sets the mappings of this ChannelMappingOptionsDto.

        Gets or sets list of mappings.  # noqa: E501

        :param mappings: The mappings of this ChannelMappingOptionsDto.
        :type mappings: List[NameValuePair]
        """

        self._mappings = mappings

    @property
    def provider_channels(self) -> List[NameIdPair]:
        """Gets the provider_channels of this ChannelMappingOptionsDto.

        Gets or sets list of provider channels.  # noqa: E501

        :return: The provider_channels of this ChannelMappingOptionsDto.
        :rtype: List[NameIdPair]
        """
        return self._provider_channels

    @provider_channels.setter
    def provider_channels(self, provider_channels: List[NameIdPair]):
        """Sets the provider_channels of this ChannelMappingOptionsDto.

        Gets or sets list of provider channels.  # noqa: E501

        :param provider_channels: The provider_channels of this ChannelMappingOptionsDto.
        :type provider_channels: List[NameIdPair]
        """

        self._provider_channels = provider_channels

    @property
    def provider_name(self) -> str:
        """Gets the provider_name of this ChannelMappingOptionsDto.

        Gets or sets provider name.  # noqa: E501

        :return: The provider_name of this ChannelMappingOptionsDto.
        :rtype: str
        """
        return self._provider_name

    @provider_name.setter
    def provider_name(self, provider_name: str):
        """Sets the provider_name of this ChannelMappingOptionsDto.

        Gets or sets provider name.  # noqa: E501

        :param provider_name: The provider_name of this ChannelMappingOptionsDto.
        :type provider_name: str
        """

        self._provider_name = provider_name

    @property
    def tuner_channels(self) -> List[TunerChannelMapping]:
        """Gets the tuner_channels of this ChannelMappingOptionsDto.

        Gets or sets list of tuner channels.  # noqa: E501

        :return: The tuner_channels of this ChannelMappingOptionsDto.
        :rtype: List[TunerChannelMapping]
        """
        return self._tuner_channels

    @tuner_channels.setter
    def tuner_channels(self, tuner_channels: List[TunerChannelMapping]):
        """Sets the tuner_channels of this ChannelMappingOptionsDto.

        Gets or sets list of tuner channels.  # noqa: E501

        :param tuner_channels: The tuner_channels of this ChannelMappingOptionsDto.
        :type tuner_channels: List[TunerChannelMapping]
        """

        self._tuner_channels = tuner_channels
