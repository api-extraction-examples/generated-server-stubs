from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class Version(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, build=None, major=None, major_revision=None, minor=None, minor_revision=None, revision=None):  # noqa: E501
        """Version - a model defined in OpenAPI

        :param build: The build of this Version.  # noqa: E501
        :type build: int
        :param major: The major of this Version.  # noqa: E501
        :type major: int
        :param major_revision: The major_revision of this Version.  # noqa: E501
        :type major_revision: int
        :param minor: The minor of this Version.  # noqa: E501
        :type minor: int
        :param minor_revision: The minor_revision of this Version.  # noqa: E501
        :type minor_revision: int
        :param revision: The revision of this Version.  # noqa: E501
        :type revision: int
        """
        self.openapi_types = {
            'build': int,
            'major': int,
            'major_revision': int,
            'minor': int,
            'minor_revision': int,
            'revision': int
        }

        self.attribute_map = {
            'build': 'Build',
            'major': 'Major',
            'major_revision': 'MajorRevision',
            'minor': 'Minor',
            'minor_revision': 'MinorRevision',
            'revision': 'Revision'
        }

        self._build = build
        self._major = major
        self._major_revision = major_revision
        self._minor = minor
        self._minor_revision = minor_revision
        self._revision = revision

    @classmethod
    def from_dict(cls, dikt) -> 'Version':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Version of this Version.  # noqa: E501
        :rtype: Version
        """
        return util.deserialize_model(dikt, cls)

    @property
    def build(self) -> int:
        """Gets the build of this Version.


        :return: The build of this Version.
        :rtype: int
        """
        return self._build

    @build.setter
    def build(self, build: int):
        """Sets the build of this Version.


        :param build: The build of this Version.
        :type build: int
        """

        self._build = build

    @property
    def major(self) -> int:
        """Gets the major of this Version.


        :return: The major of this Version.
        :rtype: int
        """
        return self._major

    @major.setter
    def major(self, major: int):
        """Sets the major of this Version.


        :param major: The major of this Version.
        :type major: int
        """

        self._major = major

    @property
    def major_revision(self) -> int:
        """Gets the major_revision of this Version.


        :return: The major_revision of this Version.
        :rtype: int
        """
        return self._major_revision

    @major_revision.setter
    def major_revision(self, major_revision: int):
        """Sets the major_revision of this Version.


        :param major_revision: The major_revision of this Version.
        :type major_revision: int
        """

        self._major_revision = major_revision

    @property
    def minor(self) -> int:
        """Gets the minor of this Version.


        :return: The minor of this Version.
        :rtype: int
        """
        return self._minor

    @minor.setter
    def minor(self, minor: int):
        """Sets the minor of this Version.


        :param minor: The minor of this Version.
        :type minor: int
        """

        self._minor = minor

    @property
    def minor_revision(self) -> int:
        """Gets the minor_revision of this Version.


        :return: The minor_revision of this Version.
        :rtype: int
        """
        return self._minor_revision

    @minor_revision.setter
    def minor_revision(self, minor_revision: int):
        """Sets the minor_revision of this Version.


        :param minor_revision: The minor_revision of this Version.
        :type minor_revision: int
        """

        self._minor_revision = minor_revision

    @property
    def revision(self) -> int:
        """Gets the revision of this Version.


        :return: The revision of this Version.
        :rtype: int
        """
        return self._revision

    @revision.setter
    def revision(self, revision: int):
        """Sets the revision of this Version.


        :param revision: The revision of this Version.
        :type revision: int
        """

        self._revision = revision
