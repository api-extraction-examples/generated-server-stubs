from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class BrandingOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, custom_css=None, login_disclaimer=None):  # noqa: E501
        """BrandingOptions - a model defined in OpenAPI

        :param custom_css: The custom_css of this BrandingOptions.  # noqa: E501
        :type custom_css: str
        :param login_disclaimer: The login_disclaimer of this BrandingOptions.  # noqa: E501
        :type login_disclaimer: str
        """
        self.openapi_types = {
            'custom_css': str,
            'login_disclaimer': str
        }

        self.attribute_map = {
            'custom_css': 'CustomCss',
            'login_disclaimer': 'LoginDisclaimer'
        }

        self._custom_css = custom_css
        self._login_disclaimer = login_disclaimer

    @classmethod
    def from_dict(cls, dikt) -> 'BrandingOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BrandingOptions of this BrandingOptions.  # noqa: E501
        :rtype: BrandingOptions
        """
        return util.deserialize_model(dikt, cls)

    @property
    def custom_css(self) -> str:
        """Gets the custom_css of this BrandingOptions.

        Gets or sets the custom CSS.  # noqa: E501

        :return: The custom_css of this BrandingOptions.
        :rtype: str
        """
        return self._custom_css

    @custom_css.setter
    def custom_css(self, custom_css: str):
        """Sets the custom_css of this BrandingOptions.

        Gets or sets the custom CSS.  # noqa: E501

        :param custom_css: The custom_css of this BrandingOptions.
        :type custom_css: str
        """

        self._custom_css = custom_css

    @property
    def login_disclaimer(self) -> str:
        """Gets the login_disclaimer of this BrandingOptions.

        Gets or sets the login disclaimer.  # noqa: E501

        :return: The login_disclaimer of this BrandingOptions.
        :rtype: str
        """
        return self._login_disclaimer

    @login_disclaimer.setter
    def login_disclaimer(self, login_disclaimer: str):
        """Sets the login_disclaimer of this BrandingOptions.

        Gets or sets the login disclaimer.  # noqa: E501

        :param login_disclaimer: The login_disclaimer of this BrandingOptions.
        :type login_disclaimer: str
        """

        self._login_disclaimer = login_disclaimer
