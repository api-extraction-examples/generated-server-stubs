from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.device_profile_type import DeviceProfileType
from openapi_server import util

from openapi_server.models.device_profile_type import DeviceProfileType  # noqa: E501

class DeviceProfileInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, name=None, type=None):  # noqa: E501
        """DeviceProfileInfo - a model defined in OpenAPI

        :param id: The id of this DeviceProfileInfo.  # noqa: E501
        :type id: str
        :param name: The name of this DeviceProfileInfo.  # noqa: E501
        :type name: str
        :param type: The type of this DeviceProfileInfo.  # noqa: E501
        :type type: DeviceProfileType
        """
        self.openapi_types = {
            'id': str,
            'name': str,
            'type': DeviceProfileType
        }

        self.attribute_map = {
            'id': 'Id',
            'name': 'Name',
            'type': 'Type'
        }

        self._id = id
        self._name = name
        self._type = type

    @classmethod
    def from_dict(cls, dikt) -> 'DeviceProfileInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DeviceProfileInfo of this DeviceProfileInfo.  # noqa: E501
        :rtype: DeviceProfileInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this DeviceProfileInfo.

        Gets or sets the identifier.  # noqa: E501

        :return: The id of this DeviceProfileInfo.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this DeviceProfileInfo.

        Gets or sets the identifier.  # noqa: E501

        :param id: The id of this DeviceProfileInfo.
        :type id: str
        """

        self._id = id

    @property
    def name(self) -> str:
        """Gets the name of this DeviceProfileInfo.

        Gets or sets the name.  # noqa: E501

        :return: The name of this DeviceProfileInfo.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this DeviceProfileInfo.

        Gets or sets the name.  # noqa: E501

        :param name: The name of this DeviceProfileInfo.
        :type name: str
        """

        self._name = name

    @property
    def type(self) -> DeviceProfileType:
        """Gets the type of this DeviceProfileInfo.


        :return: The type of this DeviceProfileInfo.
        :rtype: DeviceProfileType
        """
        return self._type

    @type.setter
    def type(self, type: DeviceProfileType):
        """Sets the type of this DeviceProfileInfo.


        :param type: The type of this DeviceProfileInfo.
        :type type: DeviceProfileType
        """

        self._type = type
