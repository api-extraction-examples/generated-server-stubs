from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class StartupConfigurationDto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, metadata_country_code=None, preferred_metadata_language=None, ui_culture=None):  # noqa: E501
        """StartupConfigurationDto - a model defined in OpenAPI

        :param metadata_country_code: The metadata_country_code of this StartupConfigurationDto.  # noqa: E501
        :type metadata_country_code: str
        :param preferred_metadata_language: The preferred_metadata_language of this StartupConfigurationDto.  # noqa: E501
        :type preferred_metadata_language: str
        :param ui_culture: The ui_culture of this StartupConfigurationDto.  # noqa: E501
        :type ui_culture: str
        """
        self.openapi_types = {
            'metadata_country_code': str,
            'preferred_metadata_language': str,
            'ui_culture': str
        }

        self.attribute_map = {
            'metadata_country_code': 'MetadataCountryCode',
            'preferred_metadata_language': 'PreferredMetadataLanguage',
            'ui_culture': 'UICulture'
        }

        self._metadata_country_code = metadata_country_code
        self._preferred_metadata_language = preferred_metadata_language
        self._ui_culture = ui_culture

    @classmethod
    def from_dict(cls, dikt) -> 'StartupConfigurationDto':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The StartupConfigurationDto of this StartupConfigurationDto.  # noqa: E501
        :rtype: StartupConfigurationDto
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metadata_country_code(self) -> str:
        """Gets the metadata_country_code of this StartupConfigurationDto.

        Gets or sets the metadata country code.  # noqa: E501

        :return: The metadata_country_code of this StartupConfigurationDto.
        :rtype: str
        """
        return self._metadata_country_code

    @metadata_country_code.setter
    def metadata_country_code(self, metadata_country_code: str):
        """Sets the metadata_country_code of this StartupConfigurationDto.

        Gets or sets the metadata country code.  # noqa: E501

        :param metadata_country_code: The metadata_country_code of this StartupConfigurationDto.
        :type metadata_country_code: str
        """

        self._metadata_country_code = metadata_country_code

    @property
    def preferred_metadata_language(self) -> str:
        """Gets the preferred_metadata_language of this StartupConfigurationDto.

        Gets or sets the preferred language for the metadata.  # noqa: E501

        :return: The preferred_metadata_language of this StartupConfigurationDto.
        :rtype: str
        """
        return self._preferred_metadata_language

    @preferred_metadata_language.setter
    def preferred_metadata_language(self, preferred_metadata_language: str):
        """Sets the preferred_metadata_language of this StartupConfigurationDto.

        Gets or sets the preferred language for the metadata.  # noqa: E501

        :param preferred_metadata_language: The preferred_metadata_language of this StartupConfigurationDto.
        :type preferred_metadata_language: str
        """

        self._preferred_metadata_language = preferred_metadata_language

    @property
    def ui_culture(self) -> str:
        """Gets the ui_culture of this StartupConfigurationDto.

        Gets or sets UI language culture.  # noqa: E501

        :return: The ui_culture of this StartupConfigurationDto.
        :rtype: str
        """
        return self._ui_culture

    @ui_culture.setter
    def ui_culture(self, ui_culture: str):
        """Sets the ui_culture of this StartupConfigurationDto.

        Gets or sets UI language culture.  # noqa: E501

        :param ui_culture: The ui_culture of this StartupConfigurationDto.
        :type ui_culture: str
        """

        self._ui_culture = ui_culture
