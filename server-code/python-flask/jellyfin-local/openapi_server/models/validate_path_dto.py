from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class ValidatePathDto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_file=None, path=None, validate_writable=None):  # noqa: E501
        """ValidatePathDto - a model defined in OpenAPI

        :param is_file: The is_file of this ValidatePathDto.  # noqa: E501
        :type is_file: bool
        :param path: The path of this ValidatePathDto.  # noqa: E501
        :type path: str
        :param validate_writable: The validate_writable of this ValidatePathDto.  # noqa: E501
        :type validate_writable: bool
        """
        self.openapi_types = {
            'is_file': bool,
            'path': str,
            'validate_writable': bool
        }

        self.attribute_map = {
            'is_file': 'IsFile',
            'path': 'Path',
            'validate_writable': 'ValidateWritable'
        }

        self._is_file = is_file
        self._path = path
        self._validate_writable = validate_writable

    @classmethod
    def from_dict(cls, dikt) -> 'ValidatePathDto':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ValidatePathDto of this ValidatePathDto.  # noqa: E501
        :rtype: ValidatePathDto
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_file(self) -> bool:
        """Gets the is_file of this ValidatePathDto.

        Gets or sets is path file.  # noqa: E501

        :return: The is_file of this ValidatePathDto.
        :rtype: bool
        """
        return self._is_file

    @is_file.setter
    def is_file(self, is_file: bool):
        """Sets the is_file of this ValidatePathDto.

        Gets or sets is path file.  # noqa: E501

        :param is_file: The is_file of this ValidatePathDto.
        :type is_file: bool
        """

        self._is_file = is_file

    @property
    def path(self) -> str:
        """Gets the path of this ValidatePathDto.

        Gets or sets the path.  # noqa: E501

        :return: The path of this ValidatePathDto.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path: str):
        """Sets the path of this ValidatePathDto.

        Gets or sets the path.  # noqa: E501

        :param path: The path of this ValidatePathDto.
        :type path: str
        """

        self._path = path

    @property
    def validate_writable(self) -> bool:
        """Gets the validate_writable of this ValidatePathDto.

        Gets or sets a value indicating whether validate if path is writable.  # noqa: E501

        :return: The validate_writable of this ValidatePathDto.
        :rtype: bool
        """
        return self._validate_writable

    @validate_writable.setter
    def validate_writable(self, validate_writable: bool):
        """Sets the validate_writable of this ValidatePathDto.

        Gets or sets a value indicating whether validate if path is writable.  # noqa: E501

        :param validate_writable: The validate_writable of this ValidatePathDto.
        :type validate_writable: bool
        """

        self._validate_writable = validate_writable
