from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class RemoteSubtitleInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, author=None, comment=None, community_rating=None, date_created=None, download_count=None, format=None, id=None, is_hash_match=None, name=None, provider_name=None, three_letter_iso_language_name=None):  # noqa: E501
        """RemoteSubtitleInfo - a model defined in OpenAPI

        :param author: The author of this RemoteSubtitleInfo.  # noqa: E501
        :type author: str
        :param comment: The comment of this RemoteSubtitleInfo.  # noqa: E501
        :type comment: str
        :param community_rating: The community_rating of this RemoteSubtitleInfo.  # noqa: E501
        :type community_rating: float
        :param date_created: The date_created of this RemoteSubtitleInfo.  # noqa: E501
        :type date_created: datetime
        :param download_count: The download_count of this RemoteSubtitleInfo.  # noqa: E501
        :type download_count: int
        :param format: The format of this RemoteSubtitleInfo.  # noqa: E501
        :type format: str
        :param id: The id of this RemoteSubtitleInfo.  # noqa: E501
        :type id: str
        :param is_hash_match: The is_hash_match of this RemoteSubtitleInfo.  # noqa: E501
        :type is_hash_match: bool
        :param name: The name of this RemoteSubtitleInfo.  # noqa: E501
        :type name: str
        :param provider_name: The provider_name of this RemoteSubtitleInfo.  # noqa: E501
        :type provider_name: str
        :param three_letter_iso_language_name: The three_letter_iso_language_name of this RemoteSubtitleInfo.  # noqa: E501
        :type three_letter_iso_language_name: str
        """
        self.openapi_types = {
            'author': str,
            'comment': str,
            'community_rating': float,
            'date_created': datetime,
            'download_count': int,
            'format': str,
            'id': str,
            'is_hash_match': bool,
            'name': str,
            'provider_name': str,
            'three_letter_iso_language_name': str
        }

        self.attribute_map = {
            'author': 'Author',
            'comment': 'Comment',
            'community_rating': 'CommunityRating',
            'date_created': 'DateCreated',
            'download_count': 'DownloadCount',
            'format': 'Format',
            'id': 'Id',
            'is_hash_match': 'IsHashMatch',
            'name': 'Name',
            'provider_name': 'ProviderName',
            'three_letter_iso_language_name': 'ThreeLetterISOLanguageName'
        }

        self._author = author
        self._comment = comment
        self._community_rating = community_rating
        self._date_created = date_created
        self._download_count = download_count
        self._format = format
        self._id = id
        self._is_hash_match = is_hash_match
        self._name = name
        self._provider_name = provider_name
        self._three_letter_iso_language_name = three_letter_iso_language_name

    @classmethod
    def from_dict(cls, dikt) -> 'RemoteSubtitleInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RemoteSubtitleInfo of this RemoteSubtitleInfo.  # noqa: E501
        :rtype: RemoteSubtitleInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def author(self) -> str:
        """Gets the author of this RemoteSubtitleInfo.


        :return: The author of this RemoteSubtitleInfo.
        :rtype: str
        """
        return self._author

    @author.setter
    def author(self, author: str):
        """Sets the author of this RemoteSubtitleInfo.


        :param author: The author of this RemoteSubtitleInfo.
        :type author: str
        """

        self._author = author

    @property
    def comment(self) -> str:
        """Gets the comment of this RemoteSubtitleInfo.


        :return: The comment of this RemoteSubtitleInfo.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment: str):
        """Sets the comment of this RemoteSubtitleInfo.


        :param comment: The comment of this RemoteSubtitleInfo.
        :type comment: str
        """

        self._comment = comment

    @property
    def community_rating(self) -> float:
        """Gets the community_rating of this RemoteSubtitleInfo.


        :return: The community_rating of this RemoteSubtitleInfo.
        :rtype: float
        """
        return self._community_rating

    @community_rating.setter
    def community_rating(self, community_rating: float):
        """Sets the community_rating of this RemoteSubtitleInfo.


        :param community_rating: The community_rating of this RemoteSubtitleInfo.
        :type community_rating: float
        """

        self._community_rating = community_rating

    @property
    def date_created(self) -> datetime:
        """Gets the date_created of this RemoteSubtitleInfo.


        :return: The date_created of this RemoteSubtitleInfo.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created: datetime):
        """Sets the date_created of this RemoteSubtitleInfo.


        :param date_created: The date_created of this RemoteSubtitleInfo.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def download_count(self) -> int:
        """Gets the download_count of this RemoteSubtitleInfo.


        :return: The download_count of this RemoteSubtitleInfo.
        :rtype: int
        """
        return self._download_count

    @download_count.setter
    def download_count(self, download_count: int):
        """Sets the download_count of this RemoteSubtitleInfo.


        :param download_count: The download_count of this RemoteSubtitleInfo.
        :type download_count: int
        """

        self._download_count = download_count

    @property
    def format(self) -> str:
        """Gets the format of this RemoteSubtitleInfo.


        :return: The format of this RemoteSubtitleInfo.
        :rtype: str
        """
        return self._format

    @format.setter
    def format(self, format: str):
        """Sets the format of this RemoteSubtitleInfo.


        :param format: The format of this RemoteSubtitleInfo.
        :type format: str
        """

        self._format = format

    @property
    def id(self) -> str:
        """Gets the id of this RemoteSubtitleInfo.


        :return: The id of this RemoteSubtitleInfo.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this RemoteSubtitleInfo.


        :param id: The id of this RemoteSubtitleInfo.
        :type id: str
        """

        self._id = id

    @property
    def is_hash_match(self) -> bool:
        """Gets the is_hash_match of this RemoteSubtitleInfo.


        :return: The is_hash_match of this RemoteSubtitleInfo.
        :rtype: bool
        """
        return self._is_hash_match

    @is_hash_match.setter
    def is_hash_match(self, is_hash_match: bool):
        """Sets the is_hash_match of this RemoteSubtitleInfo.


        :param is_hash_match: The is_hash_match of this RemoteSubtitleInfo.
        :type is_hash_match: bool
        """

        self._is_hash_match = is_hash_match

    @property
    def name(self) -> str:
        """Gets the name of this RemoteSubtitleInfo.


        :return: The name of this RemoteSubtitleInfo.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this RemoteSubtitleInfo.


        :param name: The name of this RemoteSubtitleInfo.
        :type name: str
        """

        self._name = name

    @property
    def provider_name(self) -> str:
        """Gets the provider_name of this RemoteSubtitleInfo.


        :return: The provider_name of this RemoteSubtitleInfo.
        :rtype: str
        """
        return self._provider_name

    @provider_name.setter
    def provider_name(self, provider_name: str):
        """Sets the provider_name of this RemoteSubtitleInfo.


        :param provider_name: The provider_name of this RemoteSubtitleInfo.
        :type provider_name: str
        """

        self._provider_name = provider_name

    @property
    def three_letter_iso_language_name(self) -> str:
        """Gets the three_letter_iso_language_name of this RemoteSubtitleInfo.


        :return: The three_letter_iso_language_name of this RemoteSubtitleInfo.
        :rtype: str
        """
        return self._three_letter_iso_language_name

    @three_letter_iso_language_name.setter
    def three_letter_iso_language_name(self, three_letter_iso_language_name: str):
        """Sets the three_letter_iso_language_name of this RemoteSubtitleInfo.


        :param three_letter_iso_language_name: The three_letter_iso_language_name of this RemoteSubtitleInfo.
        :type three_letter_iso_language_name: str
        """

        self._three_letter_iso_language_name = three_letter_iso_language_name
