from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class PluginSecurityInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_mb_supporter=None, supporter_key=None):  # noqa: E501
        """PluginSecurityInfo - a model defined in OpenAPI

        :param is_mb_supporter: The is_mb_supporter of this PluginSecurityInfo.  # noqa: E501
        :type is_mb_supporter: bool
        :param supporter_key: The supporter_key of this PluginSecurityInfo.  # noqa: E501
        :type supporter_key: str
        """
        self.openapi_types = {
            'is_mb_supporter': bool,
            'supporter_key': str
        }

        self.attribute_map = {
            'is_mb_supporter': 'IsMbSupporter',
            'supporter_key': 'SupporterKey'
        }

        self._is_mb_supporter = is_mb_supporter
        self._supporter_key = supporter_key

    @classmethod
    def from_dict(cls, dikt) -> 'PluginSecurityInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PluginSecurityInfo of this PluginSecurityInfo.  # noqa: E501
        :rtype: PluginSecurityInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_mb_supporter(self) -> bool:
        """Gets the is_mb_supporter of this PluginSecurityInfo.

        Gets or sets a value indicating whether is mb supporter.  # noqa: E501

        :return: The is_mb_supporter of this PluginSecurityInfo.
        :rtype: bool
        """
        return self._is_mb_supporter

    @is_mb_supporter.setter
    def is_mb_supporter(self, is_mb_supporter: bool):
        """Sets the is_mb_supporter of this PluginSecurityInfo.

        Gets or sets a value indicating whether is mb supporter.  # noqa: E501

        :param is_mb_supporter: The is_mb_supporter of this PluginSecurityInfo.
        :type is_mb_supporter: bool
        """

        self._is_mb_supporter = is_mb_supporter

    @property
    def supporter_key(self) -> str:
        """Gets the supporter_key of this PluginSecurityInfo.

        Gets or sets the supporter key.  # noqa: E501

        :return: The supporter_key of this PluginSecurityInfo.
        :rtype: str
        """
        return self._supporter_key

    @supporter_key.setter
    def supporter_key(self, supporter_key: str):
        """Sets the supporter_key of this PluginSecurityInfo.

        Gets or sets the supporter key.  # noqa: E501

        :param supporter_key: The supporter_key of this PluginSecurityInfo.
        :type supporter_key: str
        """

        self._supporter_key = supporter_key
