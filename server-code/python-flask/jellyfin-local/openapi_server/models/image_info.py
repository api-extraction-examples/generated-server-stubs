from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.image_type import ImageType
from openapi_server import util

from openapi_server.models.image_type import ImageType  # noqa: E501

class ImageInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, blur_hash=None, height=None, image_index=None, image_tag=None, image_type=None, path=None, size=None, width=None):  # noqa: E501
        """ImageInfo - a model defined in OpenAPI

        :param blur_hash: The blur_hash of this ImageInfo.  # noqa: E501
        :type blur_hash: str
        :param height: The height of this ImageInfo.  # noqa: E501
        :type height: int
        :param image_index: The image_index of this ImageInfo.  # noqa: E501
        :type image_index: int
        :param image_tag: The image_tag of this ImageInfo.  # noqa: E501
        :type image_tag: str
        :param image_type: The image_type of this ImageInfo.  # noqa: E501
        :type image_type: ImageType
        :param path: The path of this ImageInfo.  # noqa: E501
        :type path: str
        :param size: The size of this ImageInfo.  # noqa: E501
        :type size: int
        :param width: The width of this ImageInfo.  # noqa: E501
        :type width: int
        """
        self.openapi_types = {
            'blur_hash': str,
            'height': int,
            'image_index': int,
            'image_tag': str,
            'image_type': ImageType,
            'path': str,
            'size': int,
            'width': int
        }

        self.attribute_map = {
            'blur_hash': 'BlurHash',
            'height': 'Height',
            'image_index': 'ImageIndex',
            'image_tag': 'ImageTag',
            'image_type': 'ImageType',
            'path': 'Path',
            'size': 'Size',
            'width': 'Width'
        }

        self._blur_hash = blur_hash
        self._height = height
        self._image_index = image_index
        self._image_tag = image_tag
        self._image_type = image_type
        self._path = path
        self._size = size
        self._width = width

    @classmethod
    def from_dict(cls, dikt) -> 'ImageInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ImageInfo of this ImageInfo.  # noqa: E501
        :rtype: ImageInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blur_hash(self) -> str:
        """Gets the blur_hash of this ImageInfo.

        Gets or sets the blurhash.  # noqa: E501

        :return: The blur_hash of this ImageInfo.
        :rtype: str
        """
        return self._blur_hash

    @blur_hash.setter
    def blur_hash(self, blur_hash: str):
        """Sets the blur_hash of this ImageInfo.

        Gets or sets the blurhash.  # noqa: E501

        :param blur_hash: The blur_hash of this ImageInfo.
        :type blur_hash: str
        """

        self._blur_hash = blur_hash

    @property
    def height(self) -> int:
        """Gets the height of this ImageInfo.

        Gets or sets the height.  # noqa: E501

        :return: The height of this ImageInfo.
        :rtype: int
        """
        return self._height

    @height.setter
    def height(self, height: int):
        """Sets the height of this ImageInfo.

        Gets or sets the height.  # noqa: E501

        :param height: The height of this ImageInfo.
        :type height: int
        """

        self._height = height

    @property
    def image_index(self) -> int:
        """Gets the image_index of this ImageInfo.

        Gets or sets the index of the image.  # noqa: E501

        :return: The image_index of this ImageInfo.
        :rtype: int
        """
        return self._image_index

    @image_index.setter
    def image_index(self, image_index: int):
        """Sets the image_index of this ImageInfo.

        Gets or sets the index of the image.  # noqa: E501

        :param image_index: The image_index of this ImageInfo.
        :type image_index: int
        """

        self._image_index = image_index

    @property
    def image_tag(self) -> str:
        """Gets the image_tag of this ImageInfo.

        Gets or sets the image tag.  # noqa: E501

        :return: The image_tag of this ImageInfo.
        :rtype: str
        """
        return self._image_tag

    @image_tag.setter
    def image_tag(self, image_tag: str):
        """Sets the image_tag of this ImageInfo.

        Gets or sets the image tag.  # noqa: E501

        :param image_tag: The image_tag of this ImageInfo.
        :type image_tag: str
        """

        self._image_tag = image_tag

    @property
    def image_type(self) -> ImageType:
        """Gets the image_type of this ImageInfo.


        :return: The image_type of this ImageInfo.
        :rtype: ImageType
        """
        return self._image_type

    @image_type.setter
    def image_type(self, image_type: ImageType):
        """Sets the image_type of this ImageInfo.


        :param image_type: The image_type of this ImageInfo.
        :type image_type: ImageType
        """

        self._image_type = image_type

    @property
    def path(self) -> str:
        """Gets the path of this ImageInfo.

        Gets or sets the path.  # noqa: E501

        :return: The path of this ImageInfo.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path: str):
        """Sets the path of this ImageInfo.

        Gets or sets the path.  # noqa: E501

        :param path: The path of this ImageInfo.
        :type path: str
        """

        self._path = path

    @property
    def size(self) -> int:
        """Gets the size of this ImageInfo.

        Gets or sets the size.  # noqa: E501

        :return: The size of this ImageInfo.
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size: int):
        """Sets the size of this ImageInfo.

        Gets or sets the size.  # noqa: E501

        :param size: The size of this ImageInfo.
        :type size: int
        """

        self._size = size

    @property
    def width(self) -> int:
        """Gets the width of this ImageInfo.

        Gets or sets the width.  # noqa: E501

        :return: The width of this ImageInfo.
        :rtype: int
        """
        return self._width

    @width.setter
    def width(self, width: int):
        """Sets the width of this ImageInfo.

        Gets or sets the width.  # noqa: E501

        :param width: The width of this ImageInfo.
        :type width: int
        """

        self._width = width
