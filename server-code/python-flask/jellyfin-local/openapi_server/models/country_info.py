from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class CountryInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name=None, name=None, three_letter_iso_region_name=None, two_letter_iso_region_name=None):  # noqa: E501
        """CountryInfo - a model defined in OpenAPI

        :param display_name: The display_name of this CountryInfo.  # noqa: E501
        :type display_name: str
        :param name: The name of this CountryInfo.  # noqa: E501
        :type name: str
        :param three_letter_iso_region_name: The three_letter_iso_region_name of this CountryInfo.  # noqa: E501
        :type three_letter_iso_region_name: str
        :param two_letter_iso_region_name: The two_letter_iso_region_name of this CountryInfo.  # noqa: E501
        :type two_letter_iso_region_name: str
        """
        self.openapi_types = {
            'display_name': str,
            'name': str,
            'three_letter_iso_region_name': str,
            'two_letter_iso_region_name': str
        }

        self.attribute_map = {
            'display_name': 'DisplayName',
            'name': 'Name',
            'three_letter_iso_region_name': 'ThreeLetterISORegionName',
            'two_letter_iso_region_name': 'TwoLetterISORegionName'
        }

        self._display_name = display_name
        self._name = name
        self._three_letter_iso_region_name = three_letter_iso_region_name
        self._two_letter_iso_region_name = two_letter_iso_region_name

    @classmethod
    def from_dict(cls, dikt) -> 'CountryInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CountryInfo of this CountryInfo.  # noqa: E501
        :rtype: CountryInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self) -> str:
        """Gets the display_name of this CountryInfo.

        Gets or sets the display name.  # noqa: E501

        :return: The display_name of this CountryInfo.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name: str):
        """Sets the display_name of this CountryInfo.

        Gets or sets the display name.  # noqa: E501

        :param display_name: The display_name of this CountryInfo.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def name(self) -> str:
        """Gets the name of this CountryInfo.

        Gets or sets the name.  # noqa: E501

        :return: The name of this CountryInfo.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this CountryInfo.

        Gets or sets the name.  # noqa: E501

        :param name: The name of this CountryInfo.
        :type name: str
        """

        self._name = name

    @property
    def three_letter_iso_region_name(self) -> str:
        """Gets the three_letter_iso_region_name of this CountryInfo.

        Gets or sets the name of the three letter ISO region.  # noqa: E501

        :return: The three_letter_iso_region_name of this CountryInfo.
        :rtype: str
        """
        return self._three_letter_iso_region_name

    @three_letter_iso_region_name.setter
    def three_letter_iso_region_name(self, three_letter_iso_region_name: str):
        """Sets the three_letter_iso_region_name of this CountryInfo.

        Gets or sets the name of the three letter ISO region.  # noqa: E501

        :param three_letter_iso_region_name: The three_letter_iso_region_name of this CountryInfo.
        :type three_letter_iso_region_name: str
        """

        self._three_letter_iso_region_name = three_letter_iso_region_name

    @property
    def two_letter_iso_region_name(self) -> str:
        """Gets the two_letter_iso_region_name of this CountryInfo.

        Gets or sets the name of the two letter ISO region.  # noqa: E501

        :return: The two_letter_iso_region_name of this CountryInfo.
        :rtype: str
        """
        return self._two_letter_iso_region_name

    @two_letter_iso_region_name.setter
    def two_letter_iso_region_name(self, two_letter_iso_region_name: str):
        """Sets the two_letter_iso_region_name of this CountryInfo.

        Gets or sets the name of the two letter ISO region.  # noqa: E501

        :param two_letter_iso_region_name: The two_letter_iso_region_name of this CountryInfo.
        :type two_letter_iso_region_name: str
        """

        self._two_letter_iso_region_name = two_letter_iso_region_name
