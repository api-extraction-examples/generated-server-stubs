from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.day_of_week import DayOfWeek
from openapi_server import util

from openapi_server.models.day_of_week import DayOfWeek  # noqa: E501

class TaskTriggerInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, day_of_week=None, interval_ticks=None, max_runtime_ticks=None, time_of_day_ticks=None, type=None):  # noqa: E501
        """TaskTriggerInfo - a model defined in OpenAPI

        :param day_of_week: The day_of_week of this TaskTriggerInfo.  # noqa: E501
        :type day_of_week: DayOfWeek
        :param interval_ticks: The interval_ticks of this TaskTriggerInfo.  # noqa: E501
        :type interval_ticks: int
        :param max_runtime_ticks: The max_runtime_ticks of this TaskTriggerInfo.  # noqa: E501
        :type max_runtime_ticks: int
        :param time_of_day_ticks: The time_of_day_ticks of this TaskTriggerInfo.  # noqa: E501
        :type time_of_day_ticks: int
        :param type: The type of this TaskTriggerInfo.  # noqa: E501
        :type type: str
        """
        self.openapi_types = {
            'day_of_week': DayOfWeek,
            'interval_ticks': int,
            'max_runtime_ticks': int,
            'time_of_day_ticks': int,
            'type': str
        }

        self.attribute_map = {
            'day_of_week': 'DayOfWeek',
            'interval_ticks': 'IntervalTicks',
            'max_runtime_ticks': 'MaxRuntimeTicks',
            'time_of_day_ticks': 'TimeOfDayTicks',
            'type': 'Type'
        }

        self._day_of_week = day_of_week
        self._interval_ticks = interval_ticks
        self._max_runtime_ticks = max_runtime_ticks
        self._time_of_day_ticks = time_of_day_ticks
        self._type = type

    @classmethod
    def from_dict(cls, dikt) -> 'TaskTriggerInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TaskTriggerInfo of this TaskTriggerInfo.  # noqa: E501
        :rtype: TaskTriggerInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def day_of_week(self) -> DayOfWeek:
        """Gets the day_of_week of this TaskTriggerInfo.


        :return: The day_of_week of this TaskTriggerInfo.
        :rtype: DayOfWeek
        """
        return self._day_of_week

    @day_of_week.setter
    def day_of_week(self, day_of_week: DayOfWeek):
        """Sets the day_of_week of this TaskTriggerInfo.


        :param day_of_week: The day_of_week of this TaskTriggerInfo.
        :type day_of_week: DayOfWeek
        """

        self._day_of_week = day_of_week

    @property
    def interval_ticks(self) -> int:
        """Gets the interval_ticks of this TaskTriggerInfo.

        Gets or sets the interval.  # noqa: E501

        :return: The interval_ticks of this TaskTriggerInfo.
        :rtype: int
        """
        return self._interval_ticks

    @interval_ticks.setter
    def interval_ticks(self, interval_ticks: int):
        """Sets the interval_ticks of this TaskTriggerInfo.

        Gets or sets the interval.  # noqa: E501

        :param interval_ticks: The interval_ticks of this TaskTriggerInfo.
        :type interval_ticks: int
        """

        self._interval_ticks = interval_ticks

    @property
    def max_runtime_ticks(self) -> int:
        """Gets the max_runtime_ticks of this TaskTriggerInfo.

        Gets or sets the maximum runtime ticks.  # noqa: E501

        :return: The max_runtime_ticks of this TaskTriggerInfo.
        :rtype: int
        """
        return self._max_runtime_ticks

    @max_runtime_ticks.setter
    def max_runtime_ticks(self, max_runtime_ticks: int):
        """Sets the max_runtime_ticks of this TaskTriggerInfo.

        Gets or sets the maximum runtime ticks.  # noqa: E501

        :param max_runtime_ticks: The max_runtime_ticks of this TaskTriggerInfo.
        :type max_runtime_ticks: int
        """

        self._max_runtime_ticks = max_runtime_ticks

    @property
    def time_of_day_ticks(self) -> int:
        """Gets the time_of_day_ticks of this TaskTriggerInfo.

        Gets or sets the time of day.  # noqa: E501

        :return: The time_of_day_ticks of this TaskTriggerInfo.
        :rtype: int
        """
        return self._time_of_day_ticks

    @time_of_day_ticks.setter
    def time_of_day_ticks(self, time_of_day_ticks: int):
        """Sets the time_of_day_ticks of this TaskTriggerInfo.

        Gets or sets the time of day.  # noqa: E501

        :param time_of_day_ticks: The time_of_day_ticks of this TaskTriggerInfo.
        :type time_of_day_ticks: int
        """

        self._time_of_day_ticks = time_of_day_ticks

    @property
    def type(self) -> str:
        """Gets the type of this TaskTriggerInfo.

        Gets or sets the type.  # noqa: E501

        :return: The type of this TaskTriggerInfo.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this TaskTriggerInfo.

        Gets or sets the type.  # noqa: E501

        :param type: The type of this TaskTriggerInfo.
        :type type: str
        """

        self._type = type
