from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.image_type import ImageType
from openapi_server import util

from openapi_server.models.image_type import ImageType  # noqa: E501

class ImageOption(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, limit=None, min_width=None, type=None):  # noqa: E501
        """ImageOption - a model defined in OpenAPI

        :param limit: The limit of this ImageOption.  # noqa: E501
        :type limit: int
        :param min_width: The min_width of this ImageOption.  # noqa: E501
        :type min_width: int
        :param type: The type of this ImageOption.  # noqa: E501
        :type type: ImageType
        """
        self.openapi_types = {
            'limit': int,
            'min_width': int,
            'type': ImageType
        }

        self.attribute_map = {
            'limit': 'Limit',
            'min_width': 'MinWidth',
            'type': 'Type'
        }

        self._limit = limit
        self._min_width = min_width
        self._type = type

    @classmethod
    def from_dict(cls, dikt) -> 'ImageOption':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ImageOption of this ImageOption.  # noqa: E501
        :rtype: ImageOption
        """
        return util.deserialize_model(dikt, cls)

    @property
    def limit(self) -> int:
        """Gets the limit of this ImageOption.

        Gets or sets the limit.  # noqa: E501

        :return: The limit of this ImageOption.
        :rtype: int
        """
        return self._limit

    @limit.setter
    def limit(self, limit: int):
        """Sets the limit of this ImageOption.

        Gets or sets the limit.  # noqa: E501

        :param limit: The limit of this ImageOption.
        :type limit: int
        """

        self._limit = limit

    @property
    def min_width(self) -> int:
        """Gets the min_width of this ImageOption.

        Gets or sets the minimum width.  # noqa: E501

        :return: The min_width of this ImageOption.
        :rtype: int
        """
        return self._min_width

    @min_width.setter
    def min_width(self, min_width: int):
        """Sets the min_width of this ImageOption.

        Gets or sets the minimum width.  # noqa: E501

        :param min_width: The min_width of this ImageOption.
        :type min_width: int
        """

        self._min_width = min_width

    @property
    def type(self) -> ImageType:
        """Gets the type of this ImageOption.


        :return: The type of this ImageOption.
        :rtype: ImageType
        """
        return self._type

    @type.setter
    def type(self, type: ImageType):
        """Sets the type of this ImageOption.


        :param type: The type of this ImageOption.
        :type type: ImageType
        """

        self._type = type
