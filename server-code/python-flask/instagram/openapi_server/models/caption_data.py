from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.user_short_info import UserShortInfo
from openapi_server import util

from openapi_server.models.user_short_info import UserShortInfo  # noqa: E501

class CaptionData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_time=None, _from=None, id=None, text=None):  # noqa: E501
        """CaptionData - a model defined in OpenAPI

        :param created_time: The created_time of this CaptionData.  # noqa: E501
        :type created_time: str
        :param _from: The _from of this CaptionData.  # noqa: E501
        :type _from: UserShortInfo
        :param id: The id of this CaptionData.  # noqa: E501
        :type id: str
        :param text: The text of this CaptionData.  # noqa: E501
        :type text: str
        """
        self.openapi_types = {
            'created_time': str,
            '_from': UserShortInfo,
            'id': str,
            'text': str
        }

        self.attribute_map = {
            'created_time': 'created_time',
            '_from': 'from',
            'id': 'id',
            'text': 'text'
        }

        self._created_time = created_time
        self.__from = _from
        self._id = id
        self._text = text

    @classmethod
    def from_dict(cls, dikt) -> 'CaptionData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CaptionData of this CaptionData.  # noqa: E501
        :rtype: CaptionData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_time(self) -> str:
        """Gets the created_time of this CaptionData.

        Caption creation UNIX timestamp  # noqa: E501

        :return: The created_time of this CaptionData.
        :rtype: str
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time: str):
        """Sets the created_time of this CaptionData.

        Caption creation UNIX timestamp  # noqa: E501

        :param created_time: The created_time of this CaptionData.
        :type created_time: str
        """

        self._created_time = created_time

    @property
    def _from(self) -> UserShortInfo:
        """Gets the _from of this CaptionData.


        :return: The _from of this CaptionData.
        :rtype: UserShortInfo
        """
        return self.__from

    @_from.setter
    def _from(self, _from: UserShortInfo):
        """Sets the _from of this CaptionData.


        :param _from: The _from of this CaptionData.
        :type _from: UserShortInfo
        """

        self.__from = _from

    @property
    def id(self) -> str:
        """Gets the id of this CaptionData.

        ID of this caption  # noqa: E501

        :return: The id of this CaptionData.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this CaptionData.

        ID of this caption  # noqa: E501

        :param id: The id of this CaptionData.
        :type id: str
        """

        self._id = id

    @property
    def text(self) -> str:
        """Gets the text of this CaptionData.

        Caption text  # noqa: E501

        :return: The text of this CaptionData.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text: str):
        """Sets the text of this CaptionData.

        Caption text  # noqa: E501

        :param text: The text of this CaptionData.
        :type text: str
        """

        self._text = text
