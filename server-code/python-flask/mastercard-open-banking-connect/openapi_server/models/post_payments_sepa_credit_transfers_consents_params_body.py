from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.post_payments_sepa_credit_transfers_consents_params_body_payments import PostPaymentsSepaCreditTransfersConsentsParamsBodyPayments
from openapi_server.models.post_payments_sepa_credit_transfers_consents_params_body_request_info import PostPaymentsSepaCreditTransfersConsentsParamsBodyRequestInfo
from openapi_server import util

from openapi_server.models.post_payments_sepa_credit_transfers_consents_params_body_payments import PostPaymentsSepaCreditTransfersConsentsParamsBodyPayments  # noqa: E501
from openapi_server.models.post_payments_sepa_credit_transfers_consents_params_body_request_info import PostPaymentsSepaCreditTransfersConsentsParamsBodyRequestInfo  # noqa: E501

class PostPaymentsSepaCreditTransfersConsentsParamsBody(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, payments=None, request_info=None):  # noqa: E501
        """PostPaymentsSepaCreditTransfersConsentsParamsBody - a model defined in OpenAPI

        :param payments: The payments of this PostPaymentsSepaCreditTransfersConsentsParamsBody.  # noqa: E501
        :type payments: PostPaymentsSepaCreditTransfersConsentsParamsBodyPayments
        :param request_info: The request_info of this PostPaymentsSepaCreditTransfersConsentsParamsBody.  # noqa: E501
        :type request_info: PostPaymentsSepaCreditTransfersConsentsParamsBodyRequestInfo
        """
        self.openapi_types = {
            'payments': PostPaymentsSepaCreditTransfersConsentsParamsBodyPayments,
            'request_info': PostPaymentsSepaCreditTransfersConsentsParamsBodyRequestInfo
        }

        self.attribute_map = {
            'payments': 'payments',
            'request_info': 'requestInfo'
        }

        self._payments = payments
        self._request_info = request_info

    @classmethod
    def from_dict(cls, dikt) -> 'PostPaymentsSepaCreditTransfersConsentsParamsBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The postPaymentsSepaCreditTransfersConsentsParamsBody of this PostPaymentsSepaCreditTransfersConsentsParamsBody.  # noqa: E501
        :rtype: PostPaymentsSepaCreditTransfersConsentsParamsBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def payments(self) -> PostPaymentsSepaCreditTransfersConsentsParamsBodyPayments:
        """Gets the payments of this PostPaymentsSepaCreditTransfersConsentsParamsBody.


        :return: The payments of this PostPaymentsSepaCreditTransfersConsentsParamsBody.
        :rtype: PostPaymentsSepaCreditTransfersConsentsParamsBodyPayments
        """
        return self._payments

    @payments.setter
    def payments(self, payments: PostPaymentsSepaCreditTransfersConsentsParamsBodyPayments):
        """Sets the payments of this PostPaymentsSepaCreditTransfersConsentsParamsBody.


        :param payments: The payments of this PostPaymentsSepaCreditTransfersConsentsParamsBody.
        :type payments: PostPaymentsSepaCreditTransfersConsentsParamsBodyPayments
        """
        if payments is None:
            raise ValueError("Invalid value for `payments`, must not be `None`")  # noqa: E501

        self._payments = payments

    @property
    def request_info(self) -> PostPaymentsSepaCreditTransfersConsentsParamsBodyRequestInfo:
        """Gets the request_info of this PostPaymentsSepaCreditTransfersConsentsParamsBody.


        :return: The request_info of this PostPaymentsSepaCreditTransfersConsentsParamsBody.
        :rtype: PostPaymentsSepaCreditTransfersConsentsParamsBodyRequestInfo
        """
        return self._request_info

    @request_info.setter
    def request_info(self, request_info: PostPaymentsSepaCreditTransfersConsentsParamsBodyRequestInfo):
        """Sets the request_info of this PostPaymentsSepaCreditTransfersConsentsParamsBody.


        :param request_info: The request_info of this PostPaymentsSepaCreditTransfersConsentsParamsBody.
        :type request_info: PostPaymentsSepaCreditTransfersConsentsParamsBodyRequestInfo
        """
        if request_info is None:
            raise ValueError("Invalid value for `request_info`, must not be `None`")  # noqa: E501

        self._request_info = request_info
