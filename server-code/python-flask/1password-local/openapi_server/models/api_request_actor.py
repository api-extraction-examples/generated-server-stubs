from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class APIRequestActor(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account=None, id=None, jti=None, request_ip=None, user_agent=None):  # noqa: E501
        """APIRequestActor - a model defined in OpenAPI

        :param account: The account of this APIRequestActor.  # noqa: E501
        :type account: str
        :param id: The id of this APIRequestActor.  # noqa: E501
        :type id: str
        :param jti: The jti of this APIRequestActor.  # noqa: E501
        :type jti: str
        :param request_ip: The request_ip of this APIRequestActor.  # noqa: E501
        :type request_ip: str
        :param user_agent: The user_agent of this APIRequestActor.  # noqa: E501
        :type user_agent: str
        """
        self.openapi_types = {
            'account': str,
            'id': str,
            'jti': str,
            'request_ip': str,
            'user_agent': str
        }

        self.attribute_map = {
            'account': 'account',
            'id': 'id',
            'jti': 'jti',
            'request_ip': 'requestIp',
            'user_agent': 'userAgent'
        }

        self._account = account
        self._id = id
        self._jti = jti
        self._request_ip = request_ip
        self._user_agent = user_agent

    @classmethod
    def from_dict(cls, dikt) -> 'APIRequestActor':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The APIRequest_actor of this APIRequestActor.  # noqa: E501
        :rtype: APIRequestActor
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account(self) -> str:
        """Gets the account of this APIRequestActor.


        :return: The account of this APIRequestActor.
        :rtype: str
        """
        return self._account

    @account.setter
    def account(self, account: str):
        """Sets the account of this APIRequestActor.


        :param account: The account of this APIRequestActor.
        :type account: str
        """

        self._account = account

    @property
    def id(self) -> str:
        """Gets the id of this APIRequestActor.


        :return: The id of this APIRequestActor.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this APIRequestActor.


        :param id: The id of this APIRequestActor.
        :type id: str
        """

        self._id = id

    @property
    def jti(self) -> str:
        """Gets the jti of this APIRequestActor.


        :return: The jti of this APIRequestActor.
        :rtype: str
        """
        return self._jti

    @jti.setter
    def jti(self, jti: str):
        """Sets the jti of this APIRequestActor.


        :param jti: The jti of this APIRequestActor.
        :type jti: str
        """

        self._jti = jti

    @property
    def request_ip(self) -> str:
        """Gets the request_ip of this APIRequestActor.


        :return: The request_ip of this APIRequestActor.
        :rtype: str
        """
        return self._request_ip

    @request_ip.setter
    def request_ip(self, request_ip: str):
        """Sets the request_ip of this APIRequestActor.


        :param request_ip: The request_ip of this APIRequestActor.
        :type request_ip: str
        """

        self._request_ip = request_ip

    @property
    def user_agent(self) -> str:
        """Gets the user_agent of this APIRequestActor.


        :return: The user_agent of this APIRequestActor.
        :rtype: str
        """
        return self._user_agent

    @user_agent.setter
    def user_agent(self, user_agent: str):
        """Sets the user_agent of this APIRequestActor.


        :param user_agent: The user_agent of this APIRequestActor.
        :type user_agent: str
        """

        self._user_agent = user_agent
