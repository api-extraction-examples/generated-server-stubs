from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.api_request_resource_item import APIRequestResourceItem
from openapi_server import util

from openapi_server.models.api_request_resource_item import APIRequestResourceItem  # noqa: E501

class APIRequestResource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, item=None, item_version=None, type=None, vault=None):  # noqa: E501
        """APIRequestResource - a model defined in OpenAPI

        :param item: The item of this APIRequestResource.  # noqa: E501
        :type item: APIRequestResourceItem
        :param item_version: The item_version of this APIRequestResource.  # noqa: E501
        :type item_version: int
        :param type: The type of this APIRequestResource.  # noqa: E501
        :type type: str
        :param vault: The vault of this APIRequestResource.  # noqa: E501
        :type vault: APIRequestResourceItem
        """
        self.openapi_types = {
            'item': APIRequestResourceItem,
            'item_version': int,
            'type': str,
            'vault': APIRequestResourceItem
        }

        self.attribute_map = {
            'item': 'item',
            'item_version': 'itemVersion',
            'type': 'type',
            'vault': 'vault'
        }

        self._item = item
        self._item_version = item_version
        self._type = type
        self._vault = vault

    @classmethod
    def from_dict(cls, dikt) -> 'APIRequestResource':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The APIRequest_resource of this APIRequestResource.  # noqa: E501
        :rtype: APIRequestResource
        """
        return util.deserialize_model(dikt, cls)

    @property
    def item(self) -> APIRequestResourceItem:
        """Gets the item of this APIRequestResource.


        :return: The item of this APIRequestResource.
        :rtype: APIRequestResourceItem
        """
        return self._item

    @item.setter
    def item(self, item: APIRequestResourceItem):
        """Sets the item of this APIRequestResource.


        :param item: The item of this APIRequestResource.
        :type item: APIRequestResourceItem
        """

        self._item = item

    @property
    def item_version(self) -> int:
        """Gets the item_version of this APIRequestResource.


        :return: The item_version of this APIRequestResource.
        :rtype: int
        """
        return self._item_version

    @item_version.setter
    def item_version(self, item_version: int):
        """Sets the item_version of this APIRequestResource.


        :param item_version: The item_version of this APIRequestResource.
        :type item_version: int
        """

        self._item_version = item_version

    @property
    def type(self) -> str:
        """Gets the type of this APIRequestResource.


        :return: The type of this APIRequestResource.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this APIRequestResource.


        :param type: The type of this APIRequestResource.
        :type type: str
        """
        allowed_values = ["ITEM", "VAULT"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def vault(self) -> APIRequestResourceItem:
        """Gets the vault of this APIRequestResource.


        :return: The vault of this APIRequestResource.
        :rtype: APIRequestResourceItem
        """
        return self._vault

    @vault.setter
    def vault(self, vault: APIRequestResourceItem):
        """Sets the vault of this APIRequestResource.


        :param vault: The vault of this APIRequestResource.
        :type vault: APIRequestResourceItem
        """

        self._vault = vault
