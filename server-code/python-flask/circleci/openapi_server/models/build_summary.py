from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.outcome import Outcome
from openapi_server.models.status import Status
from openapi_server import util

from openapi_server.models.outcome import Outcome  # noqa: E501
from openapi_server.models.status import Status  # noqa: E501

class BuildSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, added_at=None, build_num=None, outcome=None, pushed_at=None, status=None, vcs_revision=None):  # noqa: E501
        """BuildSummary - a model defined in OpenAPI

        :param added_at: The added_at of this BuildSummary.  # noqa: E501
        :type added_at: datetime
        :param build_num: The build_num of this BuildSummary.  # noqa: E501
        :type build_num: int
        :param outcome: The outcome of this BuildSummary.  # noqa: E501
        :type outcome: Outcome
        :param pushed_at: The pushed_at of this BuildSummary.  # noqa: E501
        :type pushed_at: datetime
        :param status: The status of this BuildSummary.  # noqa: E501
        :type status: Status
        :param vcs_revision: The vcs_revision of this BuildSummary.  # noqa: E501
        :type vcs_revision: str
        """
        self.openapi_types = {
            'added_at': datetime,
            'build_num': int,
            'outcome': Outcome,
            'pushed_at': datetime,
            'status': Status,
            'vcs_revision': str
        }

        self.attribute_map = {
            'added_at': 'added_at',
            'build_num': 'build_num',
            'outcome': 'outcome',
            'pushed_at': 'pushed_at',
            'status': 'status',
            'vcs_revision': 'vcs_revision'
        }

        self._added_at = added_at
        self._build_num = build_num
        self._outcome = outcome
        self._pushed_at = pushed_at
        self._status = status
        self._vcs_revision = vcs_revision

    @classmethod
    def from_dict(cls, dikt) -> 'BuildSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BuildSummary of this BuildSummary.  # noqa: E501
        :rtype: BuildSummary
        """
        return util.deserialize_model(dikt, cls)

    @property
    def added_at(self) -> datetime:
        """Gets the added_at of this BuildSummary.


        :return: The added_at of this BuildSummary.
        :rtype: datetime
        """
        return self._added_at

    @added_at.setter
    def added_at(self, added_at: datetime):
        """Sets the added_at of this BuildSummary.


        :param added_at: The added_at of this BuildSummary.
        :type added_at: datetime
        """

        self._added_at = added_at

    @property
    def build_num(self) -> int:
        """Gets the build_num of this BuildSummary.


        :return: The build_num of this BuildSummary.
        :rtype: int
        """
        return self._build_num

    @build_num.setter
    def build_num(self, build_num: int):
        """Sets the build_num of this BuildSummary.


        :param build_num: The build_num of this BuildSummary.
        :type build_num: int
        """

        self._build_num = build_num

    @property
    def outcome(self) -> Outcome:
        """Gets the outcome of this BuildSummary.


        :return: The outcome of this BuildSummary.
        :rtype: Outcome
        """
        return self._outcome

    @outcome.setter
    def outcome(self, outcome: Outcome):
        """Sets the outcome of this BuildSummary.


        :param outcome: The outcome of this BuildSummary.
        :type outcome: Outcome
        """

        self._outcome = outcome

    @property
    def pushed_at(self) -> datetime:
        """Gets the pushed_at of this BuildSummary.


        :return: The pushed_at of this BuildSummary.
        :rtype: datetime
        """
        return self._pushed_at

    @pushed_at.setter
    def pushed_at(self, pushed_at: datetime):
        """Sets the pushed_at of this BuildSummary.


        :param pushed_at: The pushed_at of this BuildSummary.
        :type pushed_at: datetime
        """

        self._pushed_at = pushed_at

    @property
    def status(self) -> Status:
        """Gets the status of this BuildSummary.


        :return: The status of this BuildSummary.
        :rtype: Status
        """
        return self._status

    @status.setter
    def status(self, status: Status):
        """Sets the status of this BuildSummary.


        :param status: The status of this BuildSummary.
        :type status: Status
        """

        self._status = status

    @property
    def vcs_revision(self) -> str:
        """Gets the vcs_revision of this BuildSummary.


        :return: The vcs_revision of this BuildSummary.
        :rtype: str
        """
        return self._vcs_revision

    @vcs_revision.setter
    def vcs_revision(self, vcs_revision: str):
        """Sets the vcs_revision of this BuildSummary.


        :param vcs_revision: The vcs_revision of this BuildSummary.
        :type vcs_revision: str
        """

        self._vcs_revision = vcs_revision
