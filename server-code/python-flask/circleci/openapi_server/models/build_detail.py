from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.commit_detail import CommitDetail
from openapi_server.models.previous_build import PreviousBuild
from openapi_server.models.user import User
from openapi_server import util

from openapi_server.models.commit_detail import CommitDetail  # noqa: E501
from openapi_server.models.previous_build import PreviousBuild  # noqa: E501
from openapi_server.models.user import User  # noqa: E501

class BuildDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, all_commit_details=None, compare=None, job_name=None, node=None, previous_successful_build=None, retries=None, ssh_enabled=None, timedout=None, usage_queued_at=None, user=None):  # noqa: E501
        """BuildDetail - a model defined in OpenAPI

        :param all_commit_details: The all_commit_details of this BuildDetail.  # noqa: E501
        :type all_commit_details: List[CommitDetail]
        :param compare: The compare of this BuildDetail.  # noqa: E501
        :type compare: str
        :param job_name: The job_name of this BuildDetail.  # noqa: E501
        :type job_name: str
        :param node: The node of this BuildDetail.  # noqa: E501
        :type node: object
        :param previous_successful_build: The previous_successful_build of this BuildDetail.  # noqa: E501
        :type previous_successful_build: PreviousBuild
        :param retries: The retries of this BuildDetail.  # noqa: E501
        :type retries: bool
        :param ssh_enabled: The ssh_enabled of this BuildDetail.  # noqa: E501
        :type ssh_enabled: bool
        :param timedout: The timedout of this BuildDetail.  # noqa: E501
        :type timedout: bool
        :param usage_queued_at: The usage_queued_at of this BuildDetail.  # noqa: E501
        :type usage_queued_at: datetime
        :param user: The user of this BuildDetail.  # noqa: E501
        :type user: User
        """
        self.openapi_types = {
            'all_commit_details': List[CommitDetail],
            'compare': str,
            'job_name': str,
            'node': object,
            'previous_successful_build': PreviousBuild,
            'retries': bool,
            'ssh_enabled': bool,
            'timedout': bool,
            'usage_queued_at': datetime,
            'user': User
        }

        self.attribute_map = {
            'all_commit_details': 'all_commit_details',
            'compare': 'compare',
            'job_name': 'job_name',
            'node': 'node',
            'previous_successful_build': 'previous_successful_build',
            'retries': 'retries',
            'ssh_enabled': 'ssh_enabled',
            'timedout': 'timedout',
            'usage_queued_at': 'usage_queued_at',
            'user': 'user'
        }

        self._all_commit_details = all_commit_details
        self._compare = compare
        self._job_name = job_name
        self._node = node
        self._previous_successful_build = previous_successful_build
        self._retries = retries
        self._ssh_enabled = ssh_enabled
        self._timedout = timedout
        self._usage_queued_at = usage_queued_at
        self._user = user

    @classmethod
    def from_dict(cls, dikt) -> 'BuildDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BuildDetail of this BuildDetail.  # noqa: E501
        :rtype: BuildDetail
        """
        return util.deserialize_model(dikt, cls)

    @property
    def all_commit_details(self) -> List[CommitDetail]:
        """Gets the all_commit_details of this BuildDetail.


        :return: The all_commit_details of this BuildDetail.
        :rtype: List[CommitDetail]
        """
        return self._all_commit_details

    @all_commit_details.setter
    def all_commit_details(self, all_commit_details: List[CommitDetail]):
        """Sets the all_commit_details of this BuildDetail.


        :param all_commit_details: The all_commit_details of this BuildDetail.
        :type all_commit_details: List[CommitDetail]
        """

        self._all_commit_details = all_commit_details

    @property
    def compare(self) -> str:
        """Gets the compare of this BuildDetail.


        :return: The compare of this BuildDetail.
        :rtype: str
        """
        return self._compare

    @compare.setter
    def compare(self, compare: str):
        """Sets the compare of this BuildDetail.


        :param compare: The compare of this BuildDetail.
        :type compare: str
        """

        self._compare = compare

    @property
    def job_name(self) -> str:
        """Gets the job_name of this BuildDetail.


        :return: The job_name of this BuildDetail.
        :rtype: str
        """
        return self._job_name

    @job_name.setter
    def job_name(self, job_name: str):
        """Sets the job_name of this BuildDetail.


        :param job_name: The job_name of this BuildDetail.
        :type job_name: str
        """

        self._job_name = job_name

    @property
    def node(self) -> object:
        """Gets the node of this BuildDetail.


        :return: The node of this BuildDetail.
        :rtype: object
        """
        return self._node

    @node.setter
    def node(self, node: object):
        """Sets the node of this BuildDetail.


        :param node: The node of this BuildDetail.
        :type node: object
        """

        self._node = node

    @property
    def previous_successful_build(self) -> PreviousBuild:
        """Gets the previous_successful_build of this BuildDetail.


        :return: The previous_successful_build of this BuildDetail.
        :rtype: PreviousBuild
        """
        return self._previous_successful_build

    @previous_successful_build.setter
    def previous_successful_build(self, previous_successful_build: PreviousBuild):
        """Sets the previous_successful_build of this BuildDetail.


        :param previous_successful_build: The previous_successful_build of this BuildDetail.
        :type previous_successful_build: PreviousBuild
        """

        self._previous_successful_build = previous_successful_build

    @property
    def retries(self) -> bool:
        """Gets the retries of this BuildDetail.


        :return: The retries of this BuildDetail.
        :rtype: bool
        """
        return self._retries

    @retries.setter
    def retries(self, retries: bool):
        """Sets the retries of this BuildDetail.


        :param retries: The retries of this BuildDetail.
        :type retries: bool
        """

        self._retries = retries

    @property
    def ssh_enabled(self) -> bool:
        """Gets the ssh_enabled of this BuildDetail.


        :return: The ssh_enabled of this BuildDetail.
        :rtype: bool
        """
        return self._ssh_enabled

    @ssh_enabled.setter
    def ssh_enabled(self, ssh_enabled: bool):
        """Sets the ssh_enabled of this BuildDetail.


        :param ssh_enabled: The ssh_enabled of this BuildDetail.
        :type ssh_enabled: bool
        """

        self._ssh_enabled = ssh_enabled

    @property
    def timedout(self) -> bool:
        """Gets the timedout of this BuildDetail.


        :return: The timedout of this BuildDetail.
        :rtype: bool
        """
        return self._timedout

    @timedout.setter
    def timedout(self, timedout: bool):
        """Sets the timedout of this BuildDetail.


        :param timedout: The timedout of this BuildDetail.
        :type timedout: bool
        """

        self._timedout = timedout

    @property
    def usage_queued_at(self) -> datetime:
        """Gets the usage_queued_at of this BuildDetail.


        :return: The usage_queued_at of this BuildDetail.
        :rtype: datetime
        """
        return self._usage_queued_at

    @usage_queued_at.setter
    def usage_queued_at(self, usage_queued_at: datetime):
        """Sets the usage_queued_at of this BuildDetail.


        :param usage_queued_at: The usage_queued_at of this BuildDetail.
        :type usage_queued_at: datetime
        """

        self._usage_queued_at = usage_queued_at

    @property
    def user(self) -> User:
        """Gets the user of this BuildDetail.


        :return: The user of this BuildDetail.
        :rtype: User
        """
        return self._user

    @user.setter
    def user(self, user: User):
        """Sets the user of this BuildDetail.


        :param user: The user of this BuildDetail.
        :type user: User
        """

        self._user = user
