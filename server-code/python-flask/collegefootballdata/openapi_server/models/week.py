from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class Week(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, first_game_start=None, last_game_start=None, season=None, season_type=None, week=None):  # noqa: E501
        """Week - a model defined in OpenAPI

        :param first_game_start: The first_game_start of this Week.  # noqa: E501
        :type first_game_start: str
        :param last_game_start: The last_game_start of this Week.  # noqa: E501
        :type last_game_start: str
        :param season: The season of this Week.  # noqa: E501
        :type season: int
        :param season_type: The season_type of this Week.  # noqa: E501
        :type season_type: str
        :param week: The week of this Week.  # noqa: E501
        :type week: int
        """
        self.openapi_types = {
            'first_game_start': str,
            'last_game_start': str,
            'season': int,
            'season_type': str,
            'week': int
        }

        self.attribute_map = {
            'first_game_start': 'firstGameStart',
            'last_game_start': 'lastGameStart',
            'season': 'season',
            'season_type': 'seasonType',
            'week': 'week'
        }

        self._first_game_start = first_game_start
        self._last_game_start = last_game_start
        self._season = season
        self._season_type = season_type
        self._week = week

    @classmethod
    def from_dict(cls, dikt) -> 'Week':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Week of this Week.  # noqa: E501
        :rtype: Week
        """
        return util.deserialize_model(dikt, cls)

    @property
    def first_game_start(self) -> str:
        """Gets the first_game_start of this Week.


        :return: The first_game_start of this Week.
        :rtype: str
        """
        return self._first_game_start

    @first_game_start.setter
    def first_game_start(self, first_game_start: str):
        """Sets the first_game_start of this Week.


        :param first_game_start: The first_game_start of this Week.
        :type first_game_start: str
        """

        self._first_game_start = first_game_start

    @property
    def last_game_start(self) -> str:
        """Gets the last_game_start of this Week.


        :return: The last_game_start of this Week.
        :rtype: str
        """
        return self._last_game_start

    @last_game_start.setter
    def last_game_start(self, last_game_start: str):
        """Sets the last_game_start of this Week.


        :param last_game_start: The last_game_start of this Week.
        :type last_game_start: str
        """

        self._last_game_start = last_game_start

    @property
    def season(self) -> int:
        """Gets the season of this Week.


        :return: The season of this Week.
        :rtype: int
        """
        return self._season

    @season.setter
    def season(self, season: int):
        """Sets the season of this Week.


        :param season: The season of this Week.
        :type season: int
        """

        self._season = season

    @property
    def season_type(self) -> str:
        """Gets the season_type of this Week.


        :return: The season_type of this Week.
        :rtype: str
        """
        return self._season_type

    @season_type.setter
    def season_type(self, season_type: str):
        """Sets the season_type of this Week.


        :param season_type: The season_type of this Week.
        :type season_type: str
        """

        self._season_type = season_type

    @property
    def week(self) -> int:
        """Gets the week of this Week.


        :return: The week of this Week.
        :rtype: int
        """
        return self._week

    @week.setter
    def week(self, week: int):
        """Sets the week of this Week.


        :param week: The week of this Week.
        :type week: int
        """

        self._week = week
