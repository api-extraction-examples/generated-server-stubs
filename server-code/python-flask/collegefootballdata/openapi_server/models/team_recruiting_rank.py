from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class TeamRecruitingRank(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, points=None, rank=None, team=None, year=None):  # noqa: E501
        """TeamRecruitingRank - a model defined in OpenAPI

        :param points: The points of this TeamRecruitingRank.  # noqa: E501
        :type points: float
        :param rank: The rank of this TeamRecruitingRank.  # noqa: E501
        :type rank: int
        :param team: The team of this TeamRecruitingRank.  # noqa: E501
        :type team: str
        :param year: The year of this TeamRecruitingRank.  # noqa: E501
        :type year: int
        """
        self.openapi_types = {
            'points': float,
            'rank': int,
            'team': str,
            'year': int
        }

        self.attribute_map = {
            'points': 'points',
            'rank': 'rank',
            'team': 'team',
            'year': 'year'
        }

        self._points = points
        self._rank = rank
        self._team = team
        self._year = year

    @classmethod
    def from_dict(cls, dikt) -> 'TeamRecruitingRank':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TeamRecruitingRank of this TeamRecruitingRank.  # noqa: E501
        :rtype: TeamRecruitingRank
        """
        return util.deserialize_model(dikt, cls)

    @property
    def points(self) -> float:
        """Gets the points of this TeamRecruitingRank.


        :return: The points of this TeamRecruitingRank.
        :rtype: float
        """
        return self._points

    @points.setter
    def points(self, points: float):
        """Sets the points of this TeamRecruitingRank.


        :param points: The points of this TeamRecruitingRank.
        :type points: float
        """

        self._points = points

    @property
    def rank(self) -> int:
        """Gets the rank of this TeamRecruitingRank.


        :return: The rank of this TeamRecruitingRank.
        :rtype: int
        """
        return self._rank

    @rank.setter
    def rank(self, rank: int):
        """Sets the rank of this TeamRecruitingRank.


        :param rank: The rank of this TeamRecruitingRank.
        :type rank: int
        """

        self._rank = rank

    @property
    def team(self) -> str:
        """Gets the team of this TeamRecruitingRank.


        :return: The team of this TeamRecruitingRank.
        :rtype: str
        """
        return self._team

    @team.setter
    def team(self, team: str):
        """Sets the team of this TeamRecruitingRank.


        :param team: The team of this TeamRecruitingRank.
        :type team: str
        """

        self._team = team

    @property
    def year(self) -> int:
        """Gets the year of this TeamRecruitingRank.


        :return: The year of this TeamRecruitingRank.
        :rtype: int
        """
        return self._year

    @year.setter
    def year(self, year: int):
        """Sets the year of this TeamRecruitingRank.


        :param year: The year of this TeamRecruitingRank.
        :type year: int
        """

        self._year = year
