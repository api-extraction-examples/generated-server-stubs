from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class PlayerUsageUsage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, first_down=None, overall=None, _pass=None, passing_downs=None, rush=None, second_down=None, standard_downs=None, third_down=None):  # noqa: E501
        """PlayerUsageUsage - a model defined in OpenAPI

        :param first_down: The first_down of this PlayerUsageUsage.  # noqa: E501
        :type first_down: float
        :param overall: The overall of this PlayerUsageUsage.  # noqa: E501
        :type overall: float
        :param _pass: The _pass of this PlayerUsageUsage.  # noqa: E501
        :type _pass: float
        :param passing_downs: The passing_downs of this PlayerUsageUsage.  # noqa: E501
        :type passing_downs: float
        :param rush: The rush of this PlayerUsageUsage.  # noqa: E501
        :type rush: float
        :param second_down: The second_down of this PlayerUsageUsage.  # noqa: E501
        :type second_down: float
        :param standard_downs: The standard_downs of this PlayerUsageUsage.  # noqa: E501
        :type standard_downs: float
        :param third_down: The third_down of this PlayerUsageUsage.  # noqa: E501
        :type third_down: float
        """
        self.openapi_types = {
            'first_down': float,
            'overall': float,
            '_pass': float,
            'passing_downs': float,
            'rush': float,
            'second_down': float,
            'standard_downs': float,
            'third_down': float
        }

        self.attribute_map = {
            'first_down': 'firstDown',
            'overall': 'overall',
            '_pass': 'pass',
            'passing_downs': 'passingDowns',
            'rush': 'rush',
            'second_down': 'secondDown',
            'standard_downs': 'standardDowns',
            'third_down': 'thirdDown'
        }

        self._first_down = first_down
        self._overall = overall
        self.__pass = _pass
        self._passing_downs = passing_downs
        self._rush = rush
        self._second_down = second_down
        self._standard_downs = standard_downs
        self._third_down = third_down

    @classmethod
    def from_dict(cls, dikt) -> 'PlayerUsageUsage':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PlayerUsage_usage of this PlayerUsageUsage.  # noqa: E501
        :rtype: PlayerUsageUsage
        """
        return util.deserialize_model(dikt, cls)

    @property
    def first_down(self) -> float:
        """Gets the first_down of this PlayerUsageUsage.


        :return: The first_down of this PlayerUsageUsage.
        :rtype: float
        """
        return self._first_down

    @first_down.setter
    def first_down(self, first_down: float):
        """Sets the first_down of this PlayerUsageUsage.


        :param first_down: The first_down of this PlayerUsageUsage.
        :type first_down: float
        """

        self._first_down = first_down

    @property
    def overall(self) -> float:
        """Gets the overall of this PlayerUsageUsage.


        :return: The overall of this PlayerUsageUsage.
        :rtype: float
        """
        return self._overall

    @overall.setter
    def overall(self, overall: float):
        """Sets the overall of this PlayerUsageUsage.


        :param overall: The overall of this PlayerUsageUsage.
        :type overall: float
        """

        self._overall = overall

    @property
    def _pass(self) -> float:
        """Gets the _pass of this PlayerUsageUsage.


        :return: The _pass of this PlayerUsageUsage.
        :rtype: float
        """
        return self.__pass

    @_pass.setter
    def _pass(self, _pass: float):
        """Sets the _pass of this PlayerUsageUsage.


        :param _pass: The _pass of this PlayerUsageUsage.
        :type _pass: float
        """

        self.__pass = _pass

    @property
    def passing_downs(self) -> float:
        """Gets the passing_downs of this PlayerUsageUsage.


        :return: The passing_downs of this PlayerUsageUsage.
        :rtype: float
        """
        return self._passing_downs

    @passing_downs.setter
    def passing_downs(self, passing_downs: float):
        """Sets the passing_downs of this PlayerUsageUsage.


        :param passing_downs: The passing_downs of this PlayerUsageUsage.
        :type passing_downs: float
        """

        self._passing_downs = passing_downs

    @property
    def rush(self) -> float:
        """Gets the rush of this PlayerUsageUsage.


        :return: The rush of this PlayerUsageUsage.
        :rtype: float
        """
        return self._rush

    @rush.setter
    def rush(self, rush: float):
        """Sets the rush of this PlayerUsageUsage.


        :param rush: The rush of this PlayerUsageUsage.
        :type rush: float
        """

        self._rush = rush

    @property
    def second_down(self) -> float:
        """Gets the second_down of this PlayerUsageUsage.


        :return: The second_down of this PlayerUsageUsage.
        :rtype: float
        """
        return self._second_down

    @second_down.setter
    def second_down(self, second_down: float):
        """Sets the second_down of this PlayerUsageUsage.


        :param second_down: The second_down of this PlayerUsageUsage.
        :type second_down: float
        """

        self._second_down = second_down

    @property
    def standard_downs(self) -> float:
        """Gets the standard_downs of this PlayerUsageUsage.


        :return: The standard_downs of this PlayerUsageUsage.
        :rtype: float
        """
        return self._standard_downs

    @standard_downs.setter
    def standard_downs(self, standard_downs: float):
        """Sets the standard_downs of this PlayerUsageUsage.


        :param standard_downs: The standard_downs of this PlayerUsageUsage.
        :type standard_downs: float
        """

        self._standard_downs = standard_downs

    @property
    def third_down(self) -> float:
        """Gets the third_down of this PlayerUsageUsage.


        :return: The third_down of this PlayerUsageUsage.
        :rtype: float
        """
        return self._third_down

    @third_down.setter
    def third_down(self, third_down: float):
        """Sets the third_down of this PlayerUsageUsage.


        :param third_down: The third_down of this PlayerUsageUsage.
        :type third_down: float
        """

        self._third_down = third_down
