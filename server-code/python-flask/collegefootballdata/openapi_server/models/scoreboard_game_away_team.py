from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class ScoreboardGameAwayTeam(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, classification=None, conference=None, id=None, name=None, points=None):  # noqa: E501
        """ScoreboardGameAwayTeam - a model defined in OpenAPI

        :param classification: The classification of this ScoreboardGameAwayTeam.  # noqa: E501
        :type classification: str
        :param conference: The conference of this ScoreboardGameAwayTeam.  # noqa: E501
        :type conference: str
        :param id: The id of this ScoreboardGameAwayTeam.  # noqa: E501
        :type id: int
        :param name: The name of this ScoreboardGameAwayTeam.  # noqa: E501
        :type name: str
        :param points: The points of this ScoreboardGameAwayTeam.  # noqa: E501
        :type points: int
        """
        self.openapi_types = {
            'classification': str,
            'conference': str,
            'id': int,
            'name': str,
            'points': int
        }

        self.attribute_map = {
            'classification': 'classification',
            'conference': 'conference',
            'id': 'id',
            'name': 'name',
            'points': 'points'
        }

        self._classification = classification
        self._conference = conference
        self._id = id
        self._name = name
        self._points = points

    @classmethod
    def from_dict(cls, dikt) -> 'ScoreboardGameAwayTeam':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ScoreboardGame_awayTeam of this ScoreboardGameAwayTeam.  # noqa: E501
        :rtype: ScoreboardGameAwayTeam
        """
        return util.deserialize_model(dikt, cls)

    @property
    def classification(self) -> str:
        """Gets the classification of this ScoreboardGameAwayTeam.


        :return: The classification of this ScoreboardGameAwayTeam.
        :rtype: str
        """
        return self._classification

    @classification.setter
    def classification(self, classification: str):
        """Sets the classification of this ScoreboardGameAwayTeam.


        :param classification: The classification of this ScoreboardGameAwayTeam.
        :type classification: str
        """

        self._classification = classification

    @property
    def conference(self) -> str:
        """Gets the conference of this ScoreboardGameAwayTeam.


        :return: The conference of this ScoreboardGameAwayTeam.
        :rtype: str
        """
        return self._conference

    @conference.setter
    def conference(self, conference: str):
        """Sets the conference of this ScoreboardGameAwayTeam.


        :param conference: The conference of this ScoreboardGameAwayTeam.
        :type conference: str
        """

        self._conference = conference

    @property
    def id(self) -> int:
        """Gets the id of this ScoreboardGameAwayTeam.


        :return: The id of this ScoreboardGameAwayTeam.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this ScoreboardGameAwayTeam.


        :param id: The id of this ScoreboardGameAwayTeam.
        :type id: int
        """

        self._id = id

    @property
    def name(self) -> str:
        """Gets the name of this ScoreboardGameAwayTeam.


        :return: The name of this ScoreboardGameAwayTeam.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this ScoreboardGameAwayTeam.


        :param name: The name of this ScoreboardGameAwayTeam.
        :type name: str
        """

        self._name = name

    @property
    def points(self) -> int:
        """Gets the points of this ScoreboardGameAwayTeam.


        :return: The points of this ScoreboardGameAwayTeam.
        :rtype: int
        """
        return self._points

    @points.setter
    def points(self, points: int):
        """Sets the points of this ScoreboardGameAwayTeam.


        :param points: The points of this ScoreboardGameAwayTeam.
        :type points: int
        """

        self._points = points
