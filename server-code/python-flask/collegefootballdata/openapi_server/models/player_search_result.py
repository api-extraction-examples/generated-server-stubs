from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class PlayerSearchResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, first_name=None, height=None, hometown=None, id=None, jersey=None, last_name=None, name=None, position=None, team=None, team_color=None, team_color_secondary=None, weight=None):  # noqa: E501
        """PlayerSearchResult - a model defined in OpenAPI

        :param first_name: The first_name of this PlayerSearchResult.  # noqa: E501
        :type first_name: str
        :param height: The height of this PlayerSearchResult.  # noqa: E501
        :type height: int
        :param hometown: The hometown of this PlayerSearchResult.  # noqa: E501
        :type hometown: str
        :param id: The id of this PlayerSearchResult.  # noqa: E501
        :type id: int
        :param jersey: The jersey of this PlayerSearchResult.  # noqa: E501
        :type jersey: int
        :param last_name: The last_name of this PlayerSearchResult.  # noqa: E501
        :type last_name: str
        :param name: The name of this PlayerSearchResult.  # noqa: E501
        :type name: str
        :param position: The position of this PlayerSearchResult.  # noqa: E501
        :type position: str
        :param team: The team of this PlayerSearchResult.  # noqa: E501
        :type team: str
        :param team_color: The team_color of this PlayerSearchResult.  # noqa: E501
        :type team_color: str
        :param team_color_secondary: The team_color_secondary of this PlayerSearchResult.  # noqa: E501
        :type team_color_secondary: str
        :param weight: The weight of this PlayerSearchResult.  # noqa: E501
        :type weight: int
        """
        self.openapi_types = {
            'first_name': str,
            'height': int,
            'hometown': str,
            'id': int,
            'jersey': int,
            'last_name': str,
            'name': str,
            'position': str,
            'team': str,
            'team_color': str,
            'team_color_secondary': str,
            'weight': int
        }

        self.attribute_map = {
            'first_name': 'firstName',
            'height': 'height',
            'hometown': 'hometown',
            'id': 'id',
            'jersey': 'jersey',
            'last_name': 'lastName',
            'name': 'name',
            'position': 'position',
            'team': 'team',
            'team_color': 'teamColor',
            'team_color_secondary': 'teamColorSecondary',
            'weight': 'weight'
        }

        self._first_name = first_name
        self._height = height
        self._hometown = hometown
        self._id = id
        self._jersey = jersey
        self._last_name = last_name
        self._name = name
        self._position = position
        self._team = team
        self._team_color = team_color
        self._team_color_secondary = team_color_secondary
        self._weight = weight

    @classmethod
    def from_dict(cls, dikt) -> 'PlayerSearchResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PlayerSearchResult of this PlayerSearchResult.  # noqa: E501
        :rtype: PlayerSearchResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def first_name(self) -> str:
        """Gets the first_name of this PlayerSearchResult.


        :return: The first_name of this PlayerSearchResult.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name: str):
        """Sets the first_name of this PlayerSearchResult.


        :param first_name: The first_name of this PlayerSearchResult.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def height(self) -> int:
        """Gets the height of this PlayerSearchResult.


        :return: The height of this PlayerSearchResult.
        :rtype: int
        """
        return self._height

    @height.setter
    def height(self, height: int):
        """Sets the height of this PlayerSearchResult.


        :param height: The height of this PlayerSearchResult.
        :type height: int
        """

        self._height = height

    @property
    def hometown(self) -> str:
        """Gets the hometown of this PlayerSearchResult.


        :return: The hometown of this PlayerSearchResult.
        :rtype: str
        """
        return self._hometown

    @hometown.setter
    def hometown(self, hometown: str):
        """Sets the hometown of this PlayerSearchResult.


        :param hometown: The hometown of this PlayerSearchResult.
        :type hometown: str
        """

        self._hometown = hometown

    @property
    def id(self) -> int:
        """Gets the id of this PlayerSearchResult.


        :return: The id of this PlayerSearchResult.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this PlayerSearchResult.


        :param id: The id of this PlayerSearchResult.
        :type id: int
        """

        self._id = id

    @property
    def jersey(self) -> int:
        """Gets the jersey of this PlayerSearchResult.


        :return: The jersey of this PlayerSearchResult.
        :rtype: int
        """
        return self._jersey

    @jersey.setter
    def jersey(self, jersey: int):
        """Sets the jersey of this PlayerSearchResult.


        :param jersey: The jersey of this PlayerSearchResult.
        :type jersey: int
        """

        self._jersey = jersey

    @property
    def last_name(self) -> str:
        """Gets the last_name of this PlayerSearchResult.


        :return: The last_name of this PlayerSearchResult.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name: str):
        """Sets the last_name of this PlayerSearchResult.


        :param last_name: The last_name of this PlayerSearchResult.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def name(self) -> str:
        """Gets the name of this PlayerSearchResult.


        :return: The name of this PlayerSearchResult.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this PlayerSearchResult.


        :param name: The name of this PlayerSearchResult.
        :type name: str
        """

        self._name = name

    @property
    def position(self) -> str:
        """Gets the position of this PlayerSearchResult.


        :return: The position of this PlayerSearchResult.
        :rtype: str
        """
        return self._position

    @position.setter
    def position(self, position: str):
        """Sets the position of this PlayerSearchResult.


        :param position: The position of this PlayerSearchResult.
        :type position: str
        """

        self._position = position

    @property
    def team(self) -> str:
        """Gets the team of this PlayerSearchResult.


        :return: The team of this PlayerSearchResult.
        :rtype: str
        """
        return self._team

    @team.setter
    def team(self, team: str):
        """Sets the team of this PlayerSearchResult.


        :param team: The team of this PlayerSearchResult.
        :type team: str
        """

        self._team = team

    @property
    def team_color(self) -> str:
        """Gets the team_color of this PlayerSearchResult.


        :return: The team_color of this PlayerSearchResult.
        :rtype: str
        """
        return self._team_color

    @team_color.setter
    def team_color(self, team_color: str):
        """Sets the team_color of this PlayerSearchResult.


        :param team_color: The team_color of this PlayerSearchResult.
        :type team_color: str
        """

        self._team_color = team_color

    @property
    def team_color_secondary(self) -> str:
        """Gets the team_color_secondary of this PlayerSearchResult.


        :return: The team_color_secondary of this PlayerSearchResult.
        :rtype: str
        """
        return self._team_color_secondary

    @team_color_secondary.setter
    def team_color_secondary(self, team_color_secondary: str):
        """Sets the team_color_secondary of this PlayerSearchResult.


        :param team_color_secondary: The team_color_secondary of this PlayerSearchResult.
        :type team_color_secondary: str
        """

        self._team_color_secondary = team_color_secondary

    @property
    def weight(self) -> int:
        """Gets the weight of this PlayerSearchResult.


        :return: The weight of this PlayerSearchResult.
        :rtype: int
        """
        return self._weight

    @weight.setter
    def weight(self, weight: int):
        """Sets the weight of this PlayerSearchResult.


        :param weight: The weight of this PlayerSearchResult.
        :type weight: int
        """

        self._weight = weight
