from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.team_game_teams_inner_stats_inner import TeamGameTeamsInnerStatsInner
from openapi_server import util

from openapi_server.models.team_game_teams_inner_stats_inner import TeamGameTeamsInnerStatsInner  # noqa: E501

class TeamGameTeamsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, conference=None, home_away=None, points=None, school=None, stats=None):  # noqa: E501
        """TeamGameTeamsInner - a model defined in OpenAPI

        :param conference: The conference of this TeamGameTeamsInner.  # noqa: E501
        :type conference: str
        :param home_away: The home_away of this TeamGameTeamsInner.  # noqa: E501
        :type home_away: str
        :param points: The points of this TeamGameTeamsInner.  # noqa: E501
        :type points: int
        :param school: The school of this TeamGameTeamsInner.  # noqa: E501
        :type school: str
        :param stats: The stats of this TeamGameTeamsInner.  # noqa: E501
        :type stats: List[TeamGameTeamsInnerStatsInner]
        """
        self.openapi_types = {
            'conference': str,
            'home_away': str,
            'points': int,
            'school': str,
            'stats': List[TeamGameTeamsInnerStatsInner]
        }

        self.attribute_map = {
            'conference': 'conference',
            'home_away': 'homeAway',
            'points': 'points',
            'school': 'school',
            'stats': 'stats'
        }

        self._conference = conference
        self._home_away = home_away
        self._points = points
        self._school = school
        self._stats = stats

    @classmethod
    def from_dict(cls, dikt) -> 'TeamGameTeamsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TeamGame_teams_inner of this TeamGameTeamsInner.  # noqa: E501
        :rtype: TeamGameTeamsInner
        """
        return util.deserialize_model(dikt, cls)

    @property
    def conference(self) -> str:
        """Gets the conference of this TeamGameTeamsInner.


        :return: The conference of this TeamGameTeamsInner.
        :rtype: str
        """
        return self._conference

    @conference.setter
    def conference(self, conference: str):
        """Sets the conference of this TeamGameTeamsInner.


        :param conference: The conference of this TeamGameTeamsInner.
        :type conference: str
        """

        self._conference = conference

    @property
    def home_away(self) -> str:
        """Gets the home_away of this TeamGameTeamsInner.


        :return: The home_away of this TeamGameTeamsInner.
        :rtype: str
        """
        return self._home_away

    @home_away.setter
    def home_away(self, home_away: str):
        """Sets the home_away of this TeamGameTeamsInner.


        :param home_away: The home_away of this TeamGameTeamsInner.
        :type home_away: str
        """

        self._home_away = home_away

    @property
    def points(self) -> int:
        """Gets the points of this TeamGameTeamsInner.


        :return: The points of this TeamGameTeamsInner.
        :rtype: int
        """
        return self._points

    @points.setter
    def points(self, points: int):
        """Sets the points of this TeamGameTeamsInner.


        :param points: The points of this TeamGameTeamsInner.
        :type points: int
        """

        self._points = points

    @property
    def school(self) -> str:
        """Gets the school of this TeamGameTeamsInner.


        :return: The school of this TeamGameTeamsInner.
        :rtype: str
        """
        return self._school

    @school.setter
    def school(self, school: str):
        """Sets the school of this TeamGameTeamsInner.


        :param school: The school of this TeamGameTeamsInner.
        :type school: str
        """

        self._school = school

    @property
    def stats(self) -> List[TeamGameTeamsInnerStatsInner]:
        """Gets the stats of this TeamGameTeamsInner.


        :return: The stats of this TeamGameTeamsInner.
        :rtype: List[TeamGameTeamsInnerStatsInner]
        """
        return self._stats

    @stats.setter
    def stats(self, stats: List[TeamGameTeamsInnerStatsInner]):
        """Sets the stats of this TeamGameTeamsInner.


        :param stats: The stats of this TeamGameTeamsInner.
        :type stats: List[TeamGameTeamsInnerStatsInner]
        """

        self._stats = stats
