from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.drive_end_time import DriveEndTime
from openapi_server import util

from openapi_server.models.drive_end_time import DriveEndTime  # noqa: E501

class Play(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, away=None, clock=None, defense=None, defense_conference=None, defense_score=None, defense_timeouts=None, distance=None, down=None, drive_id=None, drive_number=None, game_id=None, home=None, id=None, offense=None, offense_conference=None, offense_score=None, offense_timeouts=None, period=None, play_number=None, play_text=None, play_type=None, ppa=None, scoring=None, wallclock=None, yard_line=None, yards_gained=None, yards_to_goal=None):  # noqa: E501
        """Play - a model defined in OpenAPI

        :param away: The away of this Play.  # noqa: E501
        :type away: str
        :param clock: The clock of this Play.  # noqa: E501
        :type clock: DriveEndTime
        :param defense: The defense of this Play.  # noqa: E501
        :type defense: str
        :param defense_conference: The defense_conference of this Play.  # noqa: E501
        :type defense_conference: str
        :param defense_score: The defense_score of this Play.  # noqa: E501
        :type defense_score: int
        :param defense_timeouts: The defense_timeouts of this Play.  # noqa: E501
        :type defense_timeouts: int
        :param distance: The distance of this Play.  # noqa: E501
        :type distance: int
        :param down: The down of this Play.  # noqa: E501
        :type down: int
        :param drive_id: The drive_id of this Play.  # noqa: E501
        :type drive_id: int
        :param drive_number: The drive_number of this Play.  # noqa: E501
        :type drive_number: int
        :param game_id: The game_id of this Play.  # noqa: E501
        :type game_id: int
        :param home: The home of this Play.  # noqa: E501
        :type home: str
        :param id: The id of this Play.  # noqa: E501
        :type id: int
        :param offense: The offense of this Play.  # noqa: E501
        :type offense: str
        :param offense_conference: The offense_conference of this Play.  # noqa: E501
        :type offense_conference: str
        :param offense_score: The offense_score of this Play.  # noqa: E501
        :type offense_score: int
        :param offense_timeouts: The offense_timeouts of this Play.  # noqa: E501
        :type offense_timeouts: int
        :param period: The period of this Play.  # noqa: E501
        :type period: int
        :param play_number: The play_number of this Play.  # noqa: E501
        :type play_number: int
        :param play_text: The play_text of this Play.  # noqa: E501
        :type play_text: str
        :param play_type: The play_type of this Play.  # noqa: E501
        :type play_type: str
        :param ppa: The ppa of this Play.  # noqa: E501
        :type ppa: float
        :param scoring: The scoring of this Play.  # noqa: E501
        :type scoring: bool
        :param wallclock: The wallclock of this Play.  # noqa: E501
        :type wallclock: str
        :param yard_line: The yard_line of this Play.  # noqa: E501
        :type yard_line: int
        :param yards_gained: The yards_gained of this Play.  # noqa: E501
        :type yards_gained: int
        :param yards_to_goal: The yards_to_goal of this Play.  # noqa: E501
        :type yards_to_goal: int
        """
        self.openapi_types = {
            'away': str,
            'clock': DriveEndTime,
            'defense': str,
            'defense_conference': str,
            'defense_score': int,
            'defense_timeouts': int,
            'distance': int,
            'down': int,
            'drive_id': int,
            'drive_number': int,
            'game_id': int,
            'home': str,
            'id': int,
            'offense': str,
            'offense_conference': str,
            'offense_score': int,
            'offense_timeouts': int,
            'period': int,
            'play_number': int,
            'play_text': str,
            'play_type': str,
            'ppa': float,
            'scoring': bool,
            'wallclock': str,
            'yard_line': int,
            'yards_gained': int,
            'yards_to_goal': int
        }

        self.attribute_map = {
            'away': 'away',
            'clock': 'clock',
            'defense': 'defense',
            'defense_conference': 'defense_conference',
            'defense_score': 'defense_score',
            'defense_timeouts': 'defense_timeouts',
            'distance': 'distance',
            'down': 'down',
            'drive_id': 'drive_id',
            'drive_number': 'drive_number',
            'game_id': 'game_id',
            'home': 'home',
            'id': 'id',
            'offense': 'offense',
            'offense_conference': 'offense_conference',
            'offense_score': 'offense_score',
            'offense_timeouts': 'offense_timeouts',
            'period': 'period',
            'play_number': 'play_number',
            'play_text': 'play_text',
            'play_type': 'play_type',
            'ppa': 'ppa',
            'scoring': 'scoring',
            'wallclock': 'wallclock',
            'yard_line': 'yard_line',
            'yards_gained': 'yards_gained',
            'yards_to_goal': 'yards_to_goal'
        }

        self._away = away
        self._clock = clock
        self._defense = defense
        self._defense_conference = defense_conference
        self._defense_score = defense_score
        self._defense_timeouts = defense_timeouts
        self._distance = distance
        self._down = down
        self._drive_id = drive_id
        self._drive_number = drive_number
        self._game_id = game_id
        self._home = home
        self._id = id
        self._offense = offense
        self._offense_conference = offense_conference
        self._offense_score = offense_score
        self._offense_timeouts = offense_timeouts
        self._period = period
        self._play_number = play_number
        self._play_text = play_text
        self._play_type = play_type
        self._ppa = ppa
        self._scoring = scoring
        self._wallclock = wallclock
        self._yard_line = yard_line
        self._yards_gained = yards_gained
        self._yards_to_goal = yards_to_goal

    @classmethod
    def from_dict(cls, dikt) -> 'Play':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Play of this Play.  # noqa: E501
        :rtype: Play
        """
        return util.deserialize_model(dikt, cls)

    @property
    def away(self) -> str:
        """Gets the away of this Play.


        :return: The away of this Play.
        :rtype: str
        """
        return self._away

    @away.setter
    def away(self, away: str):
        """Sets the away of this Play.


        :param away: The away of this Play.
        :type away: str
        """

        self._away = away

    @property
    def clock(self) -> DriveEndTime:
        """Gets the clock of this Play.


        :return: The clock of this Play.
        :rtype: DriveEndTime
        """
        return self._clock

    @clock.setter
    def clock(self, clock: DriveEndTime):
        """Sets the clock of this Play.


        :param clock: The clock of this Play.
        :type clock: DriveEndTime
        """

        self._clock = clock

    @property
    def defense(self) -> str:
        """Gets the defense of this Play.


        :return: The defense of this Play.
        :rtype: str
        """
        return self._defense

    @defense.setter
    def defense(self, defense: str):
        """Sets the defense of this Play.


        :param defense: The defense of this Play.
        :type defense: str
        """

        self._defense = defense

    @property
    def defense_conference(self) -> str:
        """Gets the defense_conference of this Play.


        :return: The defense_conference of this Play.
        :rtype: str
        """
        return self._defense_conference

    @defense_conference.setter
    def defense_conference(self, defense_conference: str):
        """Sets the defense_conference of this Play.


        :param defense_conference: The defense_conference of this Play.
        :type defense_conference: str
        """

        self._defense_conference = defense_conference

    @property
    def defense_score(self) -> int:
        """Gets the defense_score of this Play.


        :return: The defense_score of this Play.
        :rtype: int
        """
        return self._defense_score

    @defense_score.setter
    def defense_score(self, defense_score: int):
        """Sets the defense_score of this Play.


        :param defense_score: The defense_score of this Play.
        :type defense_score: int
        """

        self._defense_score = defense_score

    @property
    def defense_timeouts(self) -> int:
        """Gets the defense_timeouts of this Play.


        :return: The defense_timeouts of this Play.
        :rtype: int
        """
        return self._defense_timeouts

    @defense_timeouts.setter
    def defense_timeouts(self, defense_timeouts: int):
        """Sets the defense_timeouts of this Play.


        :param defense_timeouts: The defense_timeouts of this Play.
        :type defense_timeouts: int
        """

        self._defense_timeouts = defense_timeouts

    @property
    def distance(self) -> int:
        """Gets the distance of this Play.


        :return: The distance of this Play.
        :rtype: int
        """
        return self._distance

    @distance.setter
    def distance(self, distance: int):
        """Sets the distance of this Play.


        :param distance: The distance of this Play.
        :type distance: int
        """

        self._distance = distance

    @property
    def down(self) -> int:
        """Gets the down of this Play.


        :return: The down of this Play.
        :rtype: int
        """
        return self._down

    @down.setter
    def down(self, down: int):
        """Sets the down of this Play.


        :param down: The down of this Play.
        :type down: int
        """

        self._down = down

    @property
    def drive_id(self) -> int:
        """Gets the drive_id of this Play.


        :return: The drive_id of this Play.
        :rtype: int
        """
        return self._drive_id

    @drive_id.setter
    def drive_id(self, drive_id: int):
        """Sets the drive_id of this Play.


        :param drive_id: The drive_id of this Play.
        :type drive_id: int
        """

        self._drive_id = drive_id

    @property
    def drive_number(self) -> int:
        """Gets the drive_number of this Play.


        :return: The drive_number of this Play.
        :rtype: int
        """
        return self._drive_number

    @drive_number.setter
    def drive_number(self, drive_number: int):
        """Sets the drive_number of this Play.


        :param drive_number: The drive_number of this Play.
        :type drive_number: int
        """

        self._drive_number = drive_number

    @property
    def game_id(self) -> int:
        """Gets the game_id of this Play.


        :return: The game_id of this Play.
        :rtype: int
        """
        return self._game_id

    @game_id.setter
    def game_id(self, game_id: int):
        """Sets the game_id of this Play.


        :param game_id: The game_id of this Play.
        :type game_id: int
        """

        self._game_id = game_id

    @property
    def home(self) -> str:
        """Gets the home of this Play.


        :return: The home of this Play.
        :rtype: str
        """
        return self._home

    @home.setter
    def home(self, home: str):
        """Sets the home of this Play.


        :param home: The home of this Play.
        :type home: str
        """

        self._home = home

    @property
    def id(self) -> int:
        """Gets the id of this Play.


        :return: The id of this Play.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Play.


        :param id: The id of this Play.
        :type id: int
        """

        self._id = id

    @property
    def offense(self) -> str:
        """Gets the offense of this Play.


        :return: The offense of this Play.
        :rtype: str
        """
        return self._offense

    @offense.setter
    def offense(self, offense: str):
        """Sets the offense of this Play.


        :param offense: The offense of this Play.
        :type offense: str
        """

        self._offense = offense

    @property
    def offense_conference(self) -> str:
        """Gets the offense_conference of this Play.


        :return: The offense_conference of this Play.
        :rtype: str
        """
        return self._offense_conference

    @offense_conference.setter
    def offense_conference(self, offense_conference: str):
        """Sets the offense_conference of this Play.


        :param offense_conference: The offense_conference of this Play.
        :type offense_conference: str
        """

        self._offense_conference = offense_conference

    @property
    def offense_score(self) -> int:
        """Gets the offense_score of this Play.


        :return: The offense_score of this Play.
        :rtype: int
        """
        return self._offense_score

    @offense_score.setter
    def offense_score(self, offense_score: int):
        """Sets the offense_score of this Play.


        :param offense_score: The offense_score of this Play.
        :type offense_score: int
        """

        self._offense_score = offense_score

    @property
    def offense_timeouts(self) -> int:
        """Gets the offense_timeouts of this Play.


        :return: The offense_timeouts of this Play.
        :rtype: int
        """
        return self._offense_timeouts

    @offense_timeouts.setter
    def offense_timeouts(self, offense_timeouts: int):
        """Sets the offense_timeouts of this Play.


        :param offense_timeouts: The offense_timeouts of this Play.
        :type offense_timeouts: int
        """

        self._offense_timeouts = offense_timeouts

    @property
    def period(self) -> int:
        """Gets the period of this Play.


        :return: The period of this Play.
        :rtype: int
        """
        return self._period

    @period.setter
    def period(self, period: int):
        """Sets the period of this Play.


        :param period: The period of this Play.
        :type period: int
        """

        self._period = period

    @property
    def play_number(self) -> int:
        """Gets the play_number of this Play.


        :return: The play_number of this Play.
        :rtype: int
        """
        return self._play_number

    @play_number.setter
    def play_number(self, play_number: int):
        """Sets the play_number of this Play.


        :param play_number: The play_number of this Play.
        :type play_number: int
        """

        self._play_number = play_number

    @property
    def play_text(self) -> str:
        """Gets the play_text of this Play.


        :return: The play_text of this Play.
        :rtype: str
        """
        return self._play_text

    @play_text.setter
    def play_text(self, play_text: str):
        """Sets the play_text of this Play.


        :param play_text: The play_text of this Play.
        :type play_text: str
        """

        self._play_text = play_text

    @property
    def play_type(self) -> str:
        """Gets the play_type of this Play.


        :return: The play_type of this Play.
        :rtype: str
        """
        return self._play_type

    @play_type.setter
    def play_type(self, play_type: str):
        """Sets the play_type of this Play.


        :param play_type: The play_type of this Play.
        :type play_type: str
        """

        self._play_type = play_type

    @property
    def ppa(self) -> float:
        """Gets the ppa of this Play.


        :return: The ppa of this Play.
        :rtype: float
        """
        return self._ppa

    @ppa.setter
    def ppa(self, ppa: float):
        """Sets the ppa of this Play.


        :param ppa: The ppa of this Play.
        :type ppa: float
        """

        self._ppa = ppa

    @property
    def scoring(self) -> bool:
        """Gets the scoring of this Play.


        :return: The scoring of this Play.
        :rtype: bool
        """
        return self._scoring

    @scoring.setter
    def scoring(self, scoring: bool):
        """Sets the scoring of this Play.


        :param scoring: The scoring of this Play.
        :type scoring: bool
        """

        self._scoring = scoring

    @property
    def wallclock(self) -> str:
        """Gets the wallclock of this Play.


        :return: The wallclock of this Play.
        :rtype: str
        """
        return self._wallclock

    @wallclock.setter
    def wallclock(self, wallclock: str):
        """Sets the wallclock of this Play.


        :param wallclock: The wallclock of this Play.
        :type wallclock: str
        """

        self._wallclock = wallclock

    @property
    def yard_line(self) -> int:
        """Gets the yard_line of this Play.


        :return: The yard_line of this Play.
        :rtype: int
        """
        return self._yard_line

    @yard_line.setter
    def yard_line(self, yard_line: int):
        """Sets the yard_line of this Play.


        :param yard_line: The yard_line of this Play.
        :type yard_line: int
        """

        self._yard_line = yard_line

    @property
    def yards_gained(self) -> int:
        """Gets the yards_gained of this Play.


        :return: The yards_gained of this Play.
        :rtype: int
        """
        return self._yards_gained

    @yards_gained.setter
    def yards_gained(self, yards_gained: int):
        """Sets the yards_gained of this Play.


        :param yards_gained: The yards_gained of this Play.
        :type yards_gained: int
        """

        self._yards_gained = yards_gained

    @property
    def yards_to_goal(self) -> int:
        """Gets the yards_to_goal of this Play.


        :return: The yards_to_goal of this Play.
        :rtype: int
        """
        return self._yards_to_goal

    @yards_to_goal.setter
    def yards_to_goal(self, yards_to_goal: int):
        """Sets the yards_to_goal of this Play.


        :param yards_to_goal: The yards_to_goal of this Play.
        :type yards_to_goal: int
        """

        self._yards_to_goal = yards_to_goal
