from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class PortalPlayer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, destination=None, eligibility=None, first_name=None, last_name=None, origin=None, position=None, rating=None, season=None, stars=None, transfer_date=None):  # noqa: E501
        """PortalPlayer - a model defined in OpenAPI

        :param destination: The destination of this PortalPlayer.  # noqa: E501
        :type destination: str
        :param eligibility: The eligibility of this PortalPlayer.  # noqa: E501
        :type eligibility: str
        :param first_name: The first_name of this PortalPlayer.  # noqa: E501
        :type first_name: str
        :param last_name: The last_name of this PortalPlayer.  # noqa: E501
        :type last_name: str
        :param origin: The origin of this PortalPlayer.  # noqa: E501
        :type origin: str
        :param position: The position of this PortalPlayer.  # noqa: E501
        :type position: str
        :param rating: The rating of this PortalPlayer.  # noqa: E501
        :type rating: float
        :param season: The season of this PortalPlayer.  # noqa: E501
        :type season: int
        :param stars: The stars of this PortalPlayer.  # noqa: E501
        :type stars: int
        :param transfer_date: The transfer_date of this PortalPlayer.  # noqa: E501
        :type transfer_date: str
        """
        self.openapi_types = {
            'destination': str,
            'eligibility': str,
            'first_name': str,
            'last_name': str,
            'origin': str,
            'position': str,
            'rating': float,
            'season': int,
            'stars': int,
            'transfer_date': str
        }

        self.attribute_map = {
            'destination': 'destination',
            'eligibility': 'eligibility',
            'first_name': 'firstName',
            'last_name': 'lastName',
            'origin': 'origin',
            'position': 'position',
            'rating': 'rating',
            'season': 'season',
            'stars': 'stars',
            'transfer_date': 'transferDate'
        }

        self._destination = destination
        self._eligibility = eligibility
        self._first_name = first_name
        self._last_name = last_name
        self._origin = origin
        self._position = position
        self._rating = rating
        self._season = season
        self._stars = stars
        self._transfer_date = transfer_date

    @classmethod
    def from_dict(cls, dikt) -> 'PortalPlayer':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PortalPlayer of this PortalPlayer.  # noqa: E501
        :rtype: PortalPlayer
        """
        return util.deserialize_model(dikt, cls)

    @property
    def destination(self) -> str:
        """Gets the destination of this PortalPlayer.


        :return: The destination of this PortalPlayer.
        :rtype: str
        """
        return self._destination

    @destination.setter
    def destination(self, destination: str):
        """Sets the destination of this PortalPlayer.


        :param destination: The destination of this PortalPlayer.
        :type destination: str
        """

        self._destination = destination

    @property
    def eligibility(self) -> str:
        """Gets the eligibility of this PortalPlayer.


        :return: The eligibility of this PortalPlayer.
        :rtype: str
        """
        return self._eligibility

    @eligibility.setter
    def eligibility(self, eligibility: str):
        """Sets the eligibility of this PortalPlayer.


        :param eligibility: The eligibility of this PortalPlayer.
        :type eligibility: str
        """

        self._eligibility = eligibility

    @property
    def first_name(self) -> str:
        """Gets the first_name of this PortalPlayer.


        :return: The first_name of this PortalPlayer.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name: str):
        """Sets the first_name of this PortalPlayer.


        :param first_name: The first_name of this PortalPlayer.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def last_name(self) -> str:
        """Gets the last_name of this PortalPlayer.


        :return: The last_name of this PortalPlayer.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name: str):
        """Sets the last_name of this PortalPlayer.


        :param last_name: The last_name of this PortalPlayer.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def origin(self) -> str:
        """Gets the origin of this PortalPlayer.


        :return: The origin of this PortalPlayer.
        :rtype: str
        """
        return self._origin

    @origin.setter
    def origin(self, origin: str):
        """Sets the origin of this PortalPlayer.


        :param origin: The origin of this PortalPlayer.
        :type origin: str
        """

        self._origin = origin

    @property
    def position(self) -> str:
        """Gets the position of this PortalPlayer.


        :return: The position of this PortalPlayer.
        :rtype: str
        """
        return self._position

    @position.setter
    def position(self, position: str):
        """Sets the position of this PortalPlayer.


        :param position: The position of this PortalPlayer.
        :type position: str
        """

        self._position = position

    @property
    def rating(self) -> float:
        """Gets the rating of this PortalPlayer.


        :return: The rating of this PortalPlayer.
        :rtype: float
        """
        return self._rating

    @rating.setter
    def rating(self, rating: float):
        """Sets the rating of this PortalPlayer.


        :param rating: The rating of this PortalPlayer.
        :type rating: float
        """

        self._rating = rating

    @property
    def season(self) -> int:
        """Gets the season of this PortalPlayer.


        :return: The season of this PortalPlayer.
        :rtype: int
        """
        return self._season

    @season.setter
    def season(self, season: int):
        """Sets the season of this PortalPlayer.


        :param season: The season of this PortalPlayer.
        :type season: int
        """

        self._season = season

    @property
    def stars(self) -> int:
        """Gets the stars of this PortalPlayer.


        :return: The stars of this PortalPlayer.
        :rtype: int
        """
        return self._stars

    @stars.setter
    def stars(self, stars: int):
        """Sets the stars of this PortalPlayer.


        :param stars: The stars of this PortalPlayer.
        :type stars: int
        """

        self._stars = stars

    @property
    def transfer_date(self) -> str:
        """Gets the transfer_date of this PortalPlayer.


        :return: The transfer_date of this PortalPlayer.
        :rtype: str
        """
        return self._transfer_date

    @transfer_date.setter
    def transfer_date(self, transfer_date: str):
        """Sets the transfer_date of this PortalPlayer.


        :param transfer_date: The transfer_date of this PortalPlayer.
        :type transfer_date: str
        """

        self._transfer_date = transfer_date
