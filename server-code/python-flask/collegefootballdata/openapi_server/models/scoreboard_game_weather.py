from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class ScoreboardGameWeather(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description=None, temperature=None, wind_direction=None, wind_speed=None):  # noqa: E501
        """ScoreboardGameWeather - a model defined in OpenAPI

        :param description: The description of this ScoreboardGameWeather.  # noqa: E501
        :type description: str
        :param temperature: The temperature of this ScoreboardGameWeather.  # noqa: E501
        :type temperature: float
        :param wind_direction: The wind_direction of this ScoreboardGameWeather.  # noqa: E501
        :type wind_direction: float
        :param wind_speed: The wind_speed of this ScoreboardGameWeather.  # noqa: E501
        :type wind_speed: float
        """
        self.openapi_types = {
            'description': str,
            'temperature': float,
            'wind_direction': float,
            'wind_speed': float
        }

        self.attribute_map = {
            'description': 'description',
            'temperature': 'temperature',
            'wind_direction': 'windDirection',
            'wind_speed': 'windSpeed'
        }

        self._description = description
        self._temperature = temperature
        self._wind_direction = wind_direction
        self._wind_speed = wind_speed

    @classmethod
    def from_dict(cls, dikt) -> 'ScoreboardGameWeather':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ScoreboardGame_weather of this ScoreboardGameWeather.  # noqa: E501
        :rtype: ScoreboardGameWeather
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self) -> str:
        """Gets the description of this ScoreboardGameWeather.


        :return: The description of this ScoreboardGameWeather.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this ScoreboardGameWeather.


        :param description: The description of this ScoreboardGameWeather.
        :type description: str
        """

        self._description = description

    @property
    def temperature(self) -> float:
        """Gets the temperature of this ScoreboardGameWeather.


        :return: The temperature of this ScoreboardGameWeather.
        :rtype: float
        """
        return self._temperature

    @temperature.setter
    def temperature(self, temperature: float):
        """Sets the temperature of this ScoreboardGameWeather.


        :param temperature: The temperature of this ScoreboardGameWeather.
        :type temperature: float
        """

        self._temperature = temperature

    @property
    def wind_direction(self) -> float:
        """Gets the wind_direction of this ScoreboardGameWeather.


        :return: The wind_direction of this ScoreboardGameWeather.
        :rtype: float
        """
        return self._wind_direction

    @wind_direction.setter
    def wind_direction(self, wind_direction: float):
        """Sets the wind_direction of this ScoreboardGameWeather.


        :param wind_direction: The wind_direction of this ScoreboardGameWeather.
        :type wind_direction: float
        """

        self._wind_direction = wind_direction

    @property
    def wind_speed(self) -> float:
        """Gets the wind_speed of this ScoreboardGameWeather.


        :return: The wind_speed of this ScoreboardGameWeather.
        :rtype: float
        """
        return self._wind_speed

    @wind_speed.setter
    def wind_speed(self, wind_speed: float):
        """Sets the wind_speed of this ScoreboardGameWeather.


        :param wind_speed: The wind_speed of this ScoreboardGameWeather.
        :type wind_speed: float
        """

        self._wind_speed = wind_speed
