from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class DraftPickHometownInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, city=None, country=None, country_fips=None, latitude=None, longitude=None, state=None):  # noqa: E501
        """DraftPickHometownInfo - a model defined in OpenAPI

        :param city: The city of this DraftPickHometownInfo.  # noqa: E501
        :type city: str
        :param country: The country of this DraftPickHometownInfo.  # noqa: E501
        :type country: str
        :param country_fips: The country_fips of this DraftPickHometownInfo.  # noqa: E501
        :type country_fips: int
        :param latitude: The latitude of this DraftPickHometownInfo.  # noqa: E501
        :type latitude: float
        :param longitude: The longitude of this DraftPickHometownInfo.  # noqa: E501
        :type longitude: float
        :param state: The state of this DraftPickHometownInfo.  # noqa: E501
        :type state: str
        """
        self.openapi_types = {
            'city': str,
            'country': str,
            'country_fips': int,
            'latitude': float,
            'longitude': float,
            'state': str
        }

        self.attribute_map = {
            'city': 'city',
            'country': 'country',
            'country_fips': 'countryFips',
            'latitude': 'latitude',
            'longitude': 'longitude',
            'state': 'state'
        }

        self._city = city
        self._country = country
        self._country_fips = country_fips
        self._latitude = latitude
        self._longitude = longitude
        self._state = state

    @classmethod
    def from_dict(cls, dikt) -> 'DraftPickHometownInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DraftPick_hometownInfo of this DraftPickHometownInfo.  # noqa: E501
        :rtype: DraftPickHometownInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def city(self) -> str:
        """Gets the city of this DraftPickHometownInfo.


        :return: The city of this DraftPickHometownInfo.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city: str):
        """Sets the city of this DraftPickHometownInfo.


        :param city: The city of this DraftPickHometownInfo.
        :type city: str
        """

        self._city = city

    @property
    def country(self) -> str:
        """Gets the country of this DraftPickHometownInfo.


        :return: The country of this DraftPickHometownInfo.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country: str):
        """Sets the country of this DraftPickHometownInfo.


        :param country: The country of this DraftPickHometownInfo.
        :type country: str
        """

        self._country = country

    @property
    def country_fips(self) -> int:
        """Gets the country_fips of this DraftPickHometownInfo.


        :return: The country_fips of this DraftPickHometownInfo.
        :rtype: int
        """
        return self._country_fips

    @country_fips.setter
    def country_fips(self, country_fips: int):
        """Sets the country_fips of this DraftPickHometownInfo.


        :param country_fips: The country_fips of this DraftPickHometownInfo.
        :type country_fips: int
        """

        self._country_fips = country_fips

    @property
    def latitude(self) -> float:
        """Gets the latitude of this DraftPickHometownInfo.


        :return: The latitude of this DraftPickHometownInfo.
        :rtype: float
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude: float):
        """Sets the latitude of this DraftPickHometownInfo.


        :param latitude: The latitude of this DraftPickHometownInfo.
        :type latitude: float
        """

        self._latitude = latitude

    @property
    def longitude(self) -> float:
        """Gets the longitude of this DraftPickHometownInfo.


        :return: The longitude of this DraftPickHometownInfo.
        :rtype: float
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude: float):
        """Sets the longitude of this DraftPickHometownInfo.


        :param longitude: The longitude of this DraftPickHometownInfo.
        :type longitude: float
        """

        self._longitude = longitude

    @property
    def state(self) -> str:
        """Gets the state of this DraftPickHometownInfo.


        :return: The state of this DraftPickHometownInfo.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state: str):
        """Sets the state of this DraftPickHometownInfo.


        :param state: The state of this DraftPickHometownInfo.
        :type state: str
        """

        self._state = state
