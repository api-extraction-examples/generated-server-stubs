from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class AdvancedSeasonStatDefenseFieldPosition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, average_predicted_points=None, average_start=None):  # noqa: E501
        """AdvancedSeasonStatDefenseFieldPosition - a model defined in OpenAPI

        :param average_predicted_points: The average_predicted_points of this AdvancedSeasonStatDefenseFieldPosition.  # noqa: E501
        :type average_predicted_points: float
        :param average_start: The average_start of this AdvancedSeasonStatDefenseFieldPosition.  # noqa: E501
        :type average_start: float
        """
        self.openapi_types = {
            'average_predicted_points': float,
            'average_start': float
        }

        self.attribute_map = {
            'average_predicted_points': 'averagePredictedPoints',
            'average_start': 'averageStart'
        }

        self._average_predicted_points = average_predicted_points
        self._average_start = average_start

    @classmethod
    def from_dict(cls, dikt) -> 'AdvancedSeasonStatDefenseFieldPosition':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AdvancedSeasonStat_defense_fieldPosition of this AdvancedSeasonStatDefenseFieldPosition.  # noqa: E501
        :rtype: AdvancedSeasonStatDefenseFieldPosition
        """
        return util.deserialize_model(dikt, cls)

    @property
    def average_predicted_points(self) -> float:
        """Gets the average_predicted_points of this AdvancedSeasonStatDefenseFieldPosition.


        :return: The average_predicted_points of this AdvancedSeasonStatDefenseFieldPosition.
        :rtype: float
        """
        return self._average_predicted_points

    @average_predicted_points.setter
    def average_predicted_points(self, average_predicted_points: float):
        """Sets the average_predicted_points of this AdvancedSeasonStatDefenseFieldPosition.


        :param average_predicted_points: The average_predicted_points of this AdvancedSeasonStatDefenseFieldPosition.
        :type average_predicted_points: float
        """

        self._average_predicted_points = average_predicted_points

    @property
    def average_start(self) -> float:
        """Gets the average_start of this AdvancedSeasonStatDefenseFieldPosition.


        :return: The average_start of this AdvancedSeasonStatDefenseFieldPosition.
        :rtype: float
        """
        return self._average_start

    @average_start.setter
    def average_start(self, average_start: float):
        """Sets the average_start of this AdvancedSeasonStatDefenseFieldPosition.


        :param average_start: The average_start of this AdvancedSeasonStatDefenseFieldPosition.
        :type average_start: float
        """

        self._average_start = average_start
