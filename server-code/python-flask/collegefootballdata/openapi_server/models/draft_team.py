from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class DraftTeam(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name=None, location=None, logo=None, nickname=None):  # noqa: E501
        """DraftTeam - a model defined in OpenAPI

        :param display_name: The display_name of this DraftTeam.  # noqa: E501
        :type display_name: str
        :param location: The location of this DraftTeam.  # noqa: E501
        :type location: str
        :param logo: The logo of this DraftTeam.  # noqa: E501
        :type logo: str
        :param nickname: The nickname of this DraftTeam.  # noqa: E501
        :type nickname: str
        """
        self.openapi_types = {
            'display_name': str,
            'location': str,
            'logo': str,
            'nickname': str
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'location': 'location',
            'logo': 'logo',
            'nickname': 'nickname'
        }

        self._display_name = display_name
        self._location = location
        self._logo = logo
        self._nickname = nickname

    @classmethod
    def from_dict(cls, dikt) -> 'DraftTeam':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DraftTeam of this DraftTeam.  # noqa: E501
        :rtype: DraftTeam
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self) -> str:
        """Gets the display_name of this DraftTeam.


        :return: The display_name of this DraftTeam.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name: str):
        """Sets the display_name of this DraftTeam.


        :param display_name: The display_name of this DraftTeam.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def location(self) -> str:
        """Gets the location of this DraftTeam.


        :return: The location of this DraftTeam.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location: str):
        """Sets the location of this DraftTeam.


        :param location: The location of this DraftTeam.
        :type location: str
        """

        self._location = location

    @property
    def logo(self) -> str:
        """Gets the logo of this DraftTeam.


        :return: The logo of this DraftTeam.
        :rtype: str
        """
        return self._logo

    @logo.setter
    def logo(self, logo: str):
        """Sets the logo of this DraftTeam.


        :param logo: The logo of this DraftTeam.
        :type logo: str
        """

        self._logo = logo

    @property
    def nickname(self) -> str:
        """Gets the nickname of this DraftTeam.


        :return: The nickname of this DraftTeam.
        :rtype: str
        """
        return self._nickname

    @nickname.setter
    def nickname(self, nickname: str):
        """Sets the nickname of this DraftTeam.


        :param nickname: The nickname of this DraftTeam.
        :type nickname: str
        """

        self._nickname = nickname
