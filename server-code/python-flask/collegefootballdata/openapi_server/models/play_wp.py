from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class PlayWP(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, away=None, away_id=None, away_score=None, distance=None, down=None, games_id=None, home=None, home_ball=None, home_id=None, home_score=None, home_win_prob=None, play_id=None, play_number=None, play_text=None, spread=None, time_remaining=None, yard_line=None):  # noqa: E501
        """PlayWP - a model defined in OpenAPI

        :param away: The away of this PlayWP.  # noqa: E501
        :type away: str
        :param away_id: The away_id of this PlayWP.  # noqa: E501
        :type away_id: int
        :param away_score: The away_score of this PlayWP.  # noqa: E501
        :type away_score: int
        :param distance: The distance of this PlayWP.  # noqa: E501
        :type distance: int
        :param down: The down of this PlayWP.  # noqa: E501
        :type down: int
        :param games_id: The games_id of this PlayWP.  # noqa: E501
        :type games_id: int
        :param home: The home of this PlayWP.  # noqa: E501
        :type home: str
        :param home_ball: The home_ball of this PlayWP.  # noqa: E501
        :type home_ball: bool
        :param home_id: The home_id of this PlayWP.  # noqa: E501
        :type home_id: int
        :param home_score: The home_score of this PlayWP.  # noqa: E501
        :type home_score: int
        :param home_win_prob: The home_win_prob of this PlayWP.  # noqa: E501
        :type home_win_prob: float
        :param play_id: The play_id of this PlayWP.  # noqa: E501
        :type play_id: int
        :param play_number: The play_number of this PlayWP.  # noqa: E501
        :type play_number: int
        :param play_text: The play_text of this PlayWP.  # noqa: E501
        :type play_text: str
        :param spread: The spread of this PlayWP.  # noqa: E501
        :type spread: float
        :param time_remaining: The time_remaining of this PlayWP.  # noqa: E501
        :type time_remaining: int
        :param yard_line: The yard_line of this PlayWP.  # noqa: E501
        :type yard_line: int
        """
        self.openapi_types = {
            'away': str,
            'away_id': int,
            'away_score': int,
            'distance': int,
            'down': int,
            'games_id': int,
            'home': str,
            'home_ball': bool,
            'home_id': int,
            'home_score': int,
            'home_win_prob': float,
            'play_id': int,
            'play_number': int,
            'play_text': str,
            'spread': float,
            'time_remaining': int,
            'yard_line': int
        }

        self.attribute_map = {
            'away': 'away',
            'away_id': 'awayId',
            'away_score': 'awayScore',
            'distance': 'distance',
            'down': 'down',
            'games_id': 'gamesId',
            'home': 'home',
            'home_ball': 'homeBall',
            'home_id': 'homeId',
            'home_score': 'homeScore',
            'home_win_prob': 'homeWinProb',
            'play_id': 'playId',
            'play_number': 'playNumber',
            'play_text': 'playText',
            'spread': 'spread',
            'time_remaining': 'timeRemaining',
            'yard_line': 'yardLine'
        }

        self._away = away
        self._away_id = away_id
        self._away_score = away_score
        self._distance = distance
        self._down = down
        self._games_id = games_id
        self._home = home
        self._home_ball = home_ball
        self._home_id = home_id
        self._home_score = home_score
        self._home_win_prob = home_win_prob
        self._play_id = play_id
        self._play_number = play_number
        self._play_text = play_text
        self._spread = spread
        self._time_remaining = time_remaining
        self._yard_line = yard_line

    @classmethod
    def from_dict(cls, dikt) -> 'PlayWP':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PlayWP of this PlayWP.  # noqa: E501
        :rtype: PlayWP
        """
        return util.deserialize_model(dikt, cls)

    @property
    def away(self) -> str:
        """Gets the away of this PlayWP.


        :return: The away of this PlayWP.
        :rtype: str
        """
        return self._away

    @away.setter
    def away(self, away: str):
        """Sets the away of this PlayWP.


        :param away: The away of this PlayWP.
        :type away: str
        """

        self._away = away

    @property
    def away_id(self) -> int:
        """Gets the away_id of this PlayWP.


        :return: The away_id of this PlayWP.
        :rtype: int
        """
        return self._away_id

    @away_id.setter
    def away_id(self, away_id: int):
        """Sets the away_id of this PlayWP.


        :param away_id: The away_id of this PlayWP.
        :type away_id: int
        """

        self._away_id = away_id

    @property
    def away_score(self) -> int:
        """Gets the away_score of this PlayWP.


        :return: The away_score of this PlayWP.
        :rtype: int
        """
        return self._away_score

    @away_score.setter
    def away_score(self, away_score: int):
        """Sets the away_score of this PlayWP.


        :param away_score: The away_score of this PlayWP.
        :type away_score: int
        """

        self._away_score = away_score

    @property
    def distance(self) -> int:
        """Gets the distance of this PlayWP.


        :return: The distance of this PlayWP.
        :rtype: int
        """
        return self._distance

    @distance.setter
    def distance(self, distance: int):
        """Sets the distance of this PlayWP.


        :param distance: The distance of this PlayWP.
        :type distance: int
        """

        self._distance = distance

    @property
    def down(self) -> int:
        """Gets the down of this PlayWP.


        :return: The down of this PlayWP.
        :rtype: int
        """
        return self._down

    @down.setter
    def down(self, down: int):
        """Sets the down of this PlayWP.


        :param down: The down of this PlayWP.
        :type down: int
        """

        self._down = down

    @property
    def games_id(self) -> int:
        """Gets the games_id of this PlayWP.


        :return: The games_id of this PlayWP.
        :rtype: int
        """
        return self._games_id

    @games_id.setter
    def games_id(self, games_id: int):
        """Sets the games_id of this PlayWP.


        :param games_id: The games_id of this PlayWP.
        :type games_id: int
        """

        self._games_id = games_id

    @property
    def home(self) -> str:
        """Gets the home of this PlayWP.


        :return: The home of this PlayWP.
        :rtype: str
        """
        return self._home

    @home.setter
    def home(self, home: str):
        """Sets the home of this PlayWP.


        :param home: The home of this PlayWP.
        :type home: str
        """

        self._home = home

    @property
    def home_ball(self) -> bool:
        """Gets the home_ball of this PlayWP.


        :return: The home_ball of this PlayWP.
        :rtype: bool
        """
        return self._home_ball

    @home_ball.setter
    def home_ball(self, home_ball: bool):
        """Sets the home_ball of this PlayWP.


        :param home_ball: The home_ball of this PlayWP.
        :type home_ball: bool
        """

        self._home_ball = home_ball

    @property
    def home_id(self) -> int:
        """Gets the home_id of this PlayWP.


        :return: The home_id of this PlayWP.
        :rtype: int
        """
        return self._home_id

    @home_id.setter
    def home_id(self, home_id: int):
        """Sets the home_id of this PlayWP.


        :param home_id: The home_id of this PlayWP.
        :type home_id: int
        """

        self._home_id = home_id

    @property
    def home_score(self) -> int:
        """Gets the home_score of this PlayWP.


        :return: The home_score of this PlayWP.
        :rtype: int
        """
        return self._home_score

    @home_score.setter
    def home_score(self, home_score: int):
        """Sets the home_score of this PlayWP.


        :param home_score: The home_score of this PlayWP.
        :type home_score: int
        """

        self._home_score = home_score

    @property
    def home_win_prob(self) -> float:
        """Gets the home_win_prob of this PlayWP.


        :return: The home_win_prob of this PlayWP.
        :rtype: float
        """
        return self._home_win_prob

    @home_win_prob.setter
    def home_win_prob(self, home_win_prob: float):
        """Sets the home_win_prob of this PlayWP.


        :param home_win_prob: The home_win_prob of this PlayWP.
        :type home_win_prob: float
        """

        self._home_win_prob = home_win_prob

    @property
    def play_id(self) -> int:
        """Gets the play_id of this PlayWP.


        :return: The play_id of this PlayWP.
        :rtype: int
        """
        return self._play_id

    @play_id.setter
    def play_id(self, play_id: int):
        """Sets the play_id of this PlayWP.


        :param play_id: The play_id of this PlayWP.
        :type play_id: int
        """

        self._play_id = play_id

    @property
    def play_number(self) -> int:
        """Gets the play_number of this PlayWP.


        :return: The play_number of this PlayWP.
        :rtype: int
        """
        return self._play_number

    @play_number.setter
    def play_number(self, play_number: int):
        """Sets the play_number of this PlayWP.


        :param play_number: The play_number of this PlayWP.
        :type play_number: int
        """

        self._play_number = play_number

    @property
    def play_text(self) -> str:
        """Gets the play_text of this PlayWP.


        :return: The play_text of this PlayWP.
        :rtype: str
        """
        return self._play_text

    @play_text.setter
    def play_text(self, play_text: str):
        """Sets the play_text of this PlayWP.


        :param play_text: The play_text of this PlayWP.
        :type play_text: str
        """

        self._play_text = play_text

    @property
    def spread(self) -> float:
        """Gets the spread of this PlayWP.


        :return: The spread of this PlayWP.
        :rtype: float
        """
        return self._spread

    @spread.setter
    def spread(self, spread: float):
        """Sets the spread of this PlayWP.


        :param spread: The spread of this PlayWP.
        :type spread: float
        """

        self._spread = spread

    @property
    def time_remaining(self) -> int:
        """Gets the time_remaining of this PlayWP.


        :return: The time_remaining of this PlayWP.
        :rtype: int
        """
        return self._time_remaining

    @time_remaining.setter
    def time_remaining(self, time_remaining: int):
        """Sets the time_remaining of this PlayWP.


        :param time_remaining: The time_remaining of this PlayWP.
        :type time_remaining: int
        """

        self._time_remaining = time_remaining

    @property
    def yard_line(self) -> int:
        """Gets the yard_line of this PlayWP.


        :return: The yard_line of this PlayWP.
        :rtype: int
        """
        return self._yard_line

    @yard_line.setter
    def yard_line(self, yard_line: int):
        """Sets the yard_line of this PlayWP.


        :param yard_line: The yard_line of this PlayWP.
        :type yard_line: int
        """

        self._yard_line = yard_line
