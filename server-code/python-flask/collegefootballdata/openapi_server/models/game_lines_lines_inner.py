from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class GameLinesLinesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, away_moneyline=None, formatted_spread=None, home_moneyline=None, over_under=None, over_under_open=None, provider=None, spread=None, spread_open=None):  # noqa: E501
        """GameLinesLinesInner - a model defined in OpenAPI

        :param away_moneyline: The away_moneyline of this GameLinesLinesInner.  # noqa: E501
        :type away_moneyline: float
        :param formatted_spread: The formatted_spread of this GameLinesLinesInner.  # noqa: E501
        :type formatted_spread: str
        :param home_moneyline: The home_moneyline of this GameLinesLinesInner.  # noqa: E501
        :type home_moneyline: float
        :param over_under: The over_under of this GameLinesLinesInner.  # noqa: E501
        :type over_under: float
        :param over_under_open: The over_under_open of this GameLinesLinesInner.  # noqa: E501
        :type over_under_open: float
        :param provider: The provider of this GameLinesLinesInner.  # noqa: E501
        :type provider: str
        :param spread: The spread of this GameLinesLinesInner.  # noqa: E501
        :type spread: float
        :param spread_open: The spread_open of this GameLinesLinesInner.  # noqa: E501
        :type spread_open: float
        """
        self.openapi_types = {
            'away_moneyline': float,
            'formatted_spread': str,
            'home_moneyline': float,
            'over_under': float,
            'over_under_open': float,
            'provider': str,
            'spread': float,
            'spread_open': float
        }

        self.attribute_map = {
            'away_moneyline': 'awayMoneyline',
            'formatted_spread': 'formattedSpread',
            'home_moneyline': 'homeMoneyline',
            'over_under': 'overUnder',
            'over_under_open': 'overUnderOpen',
            'provider': 'provider',
            'spread': 'spread',
            'spread_open': 'spreadOpen'
        }

        self._away_moneyline = away_moneyline
        self._formatted_spread = formatted_spread
        self._home_moneyline = home_moneyline
        self._over_under = over_under
        self._over_under_open = over_under_open
        self._provider = provider
        self._spread = spread
        self._spread_open = spread_open

    @classmethod
    def from_dict(cls, dikt) -> 'GameLinesLinesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GameLines_lines_inner of this GameLinesLinesInner.  # noqa: E501
        :rtype: GameLinesLinesInner
        """
        return util.deserialize_model(dikt, cls)

    @property
    def away_moneyline(self) -> float:
        """Gets the away_moneyline of this GameLinesLinesInner.


        :return: The away_moneyline of this GameLinesLinesInner.
        :rtype: float
        """
        return self._away_moneyline

    @away_moneyline.setter
    def away_moneyline(self, away_moneyline: float):
        """Sets the away_moneyline of this GameLinesLinesInner.


        :param away_moneyline: The away_moneyline of this GameLinesLinesInner.
        :type away_moneyline: float
        """

        self._away_moneyline = away_moneyline

    @property
    def formatted_spread(self) -> str:
        """Gets the formatted_spread of this GameLinesLinesInner.


        :return: The formatted_spread of this GameLinesLinesInner.
        :rtype: str
        """
        return self._formatted_spread

    @formatted_spread.setter
    def formatted_spread(self, formatted_spread: str):
        """Sets the formatted_spread of this GameLinesLinesInner.


        :param formatted_spread: The formatted_spread of this GameLinesLinesInner.
        :type formatted_spread: str
        """

        self._formatted_spread = formatted_spread

    @property
    def home_moneyline(self) -> float:
        """Gets the home_moneyline of this GameLinesLinesInner.


        :return: The home_moneyline of this GameLinesLinesInner.
        :rtype: float
        """
        return self._home_moneyline

    @home_moneyline.setter
    def home_moneyline(self, home_moneyline: float):
        """Sets the home_moneyline of this GameLinesLinesInner.


        :param home_moneyline: The home_moneyline of this GameLinesLinesInner.
        :type home_moneyline: float
        """

        self._home_moneyline = home_moneyline

    @property
    def over_under(self) -> float:
        """Gets the over_under of this GameLinesLinesInner.


        :return: The over_under of this GameLinesLinesInner.
        :rtype: float
        """
        return self._over_under

    @over_under.setter
    def over_under(self, over_under: float):
        """Sets the over_under of this GameLinesLinesInner.


        :param over_under: The over_under of this GameLinesLinesInner.
        :type over_under: float
        """

        self._over_under = over_under

    @property
    def over_under_open(self) -> float:
        """Gets the over_under_open of this GameLinesLinesInner.


        :return: The over_under_open of this GameLinesLinesInner.
        :rtype: float
        """
        return self._over_under_open

    @over_under_open.setter
    def over_under_open(self, over_under_open: float):
        """Sets the over_under_open of this GameLinesLinesInner.


        :param over_under_open: The over_under_open of this GameLinesLinesInner.
        :type over_under_open: float
        """

        self._over_under_open = over_under_open

    @property
    def provider(self) -> str:
        """Gets the provider of this GameLinesLinesInner.


        :return: The provider of this GameLinesLinesInner.
        :rtype: str
        """
        return self._provider

    @provider.setter
    def provider(self, provider: str):
        """Sets the provider of this GameLinesLinesInner.


        :param provider: The provider of this GameLinesLinesInner.
        :type provider: str
        """

        self._provider = provider

    @property
    def spread(self) -> float:
        """Gets the spread of this GameLinesLinesInner.


        :return: The spread of this GameLinesLinesInner.
        :rtype: float
        """
        return self._spread

    @spread.setter
    def spread(self, spread: float):
        """Sets the spread of this GameLinesLinesInner.


        :param spread: The spread of this GameLinesLinesInner.
        :type spread: float
        """

        self._spread = spread

    @property
    def spread_open(self) -> float:
        """Gets the spread_open of this GameLinesLinesInner.


        :return: The spread_open of this GameLinesLinesInner.
        :rtype: float
        """
        return self._spread_open

    @spread_open.setter
    def spread_open(self, spread_open: float):
        """Sets the spread_open of this GameLinesLinesInner.


        :param spread_open: The spread_open of this GameLinesLinesInner.
        :type spread_open: float
        """

        self._spread_open = spread_open
