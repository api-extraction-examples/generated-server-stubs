from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.recruit_hometown_info import RecruitHometownInfo
from openapi_server import util

from openapi_server.models.recruit_hometown_info import RecruitHometownInfo  # noqa: E501

class Recruit(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, athlete_id=None, city=None, committed_to=None, country=None, height=None, hometown_info=None, id=None, name=None, position=None, ranking=None, rating=None, recruit_type=None, school=None, stars=None, state_province=None, weight=None, year=None):  # noqa: E501
        """Recruit - a model defined in OpenAPI

        :param athlete_id: The athlete_id of this Recruit.  # noqa: E501
        :type athlete_id: int
        :param city: The city of this Recruit.  # noqa: E501
        :type city: str
        :param committed_to: The committed_to of this Recruit.  # noqa: E501
        :type committed_to: str
        :param country: The country of this Recruit.  # noqa: E501
        :type country: str
        :param height: The height of this Recruit.  # noqa: E501
        :type height: float
        :param hometown_info: The hometown_info of this Recruit.  # noqa: E501
        :type hometown_info: RecruitHometownInfo
        :param id: The id of this Recruit.  # noqa: E501
        :type id: int
        :param name: The name of this Recruit.  # noqa: E501
        :type name: str
        :param position: The position of this Recruit.  # noqa: E501
        :type position: str
        :param ranking: The ranking of this Recruit.  # noqa: E501
        :type ranking: int
        :param rating: The rating of this Recruit.  # noqa: E501
        :type rating: float
        :param recruit_type: The recruit_type of this Recruit.  # noqa: E501
        :type recruit_type: str
        :param school: The school of this Recruit.  # noqa: E501
        :type school: str
        :param stars: The stars of this Recruit.  # noqa: E501
        :type stars: int
        :param state_province: The state_province of this Recruit.  # noqa: E501
        :type state_province: str
        :param weight: The weight of this Recruit.  # noqa: E501
        :type weight: int
        :param year: The year of this Recruit.  # noqa: E501
        :type year: int
        """
        self.openapi_types = {
            'athlete_id': int,
            'city': str,
            'committed_to': str,
            'country': str,
            'height': float,
            'hometown_info': RecruitHometownInfo,
            'id': int,
            'name': str,
            'position': str,
            'ranking': int,
            'rating': float,
            'recruit_type': str,
            'school': str,
            'stars': int,
            'state_province': str,
            'weight': int,
            'year': int
        }

        self.attribute_map = {
            'athlete_id': 'athleteId',
            'city': 'city',
            'committed_to': 'committedTo',
            'country': 'country',
            'height': 'height',
            'hometown_info': 'hometownInfo',
            'id': 'id',
            'name': 'name',
            'position': 'position',
            'ranking': 'ranking',
            'rating': 'rating',
            'recruit_type': 'recruitType',
            'school': 'school',
            'stars': 'stars',
            'state_province': 'stateProvince',
            'weight': 'weight',
            'year': 'year'
        }

        self._athlete_id = athlete_id
        self._city = city
        self._committed_to = committed_to
        self._country = country
        self._height = height
        self._hometown_info = hometown_info
        self._id = id
        self._name = name
        self._position = position
        self._ranking = ranking
        self._rating = rating
        self._recruit_type = recruit_type
        self._school = school
        self._stars = stars
        self._state_province = state_province
        self._weight = weight
        self._year = year

    @classmethod
    def from_dict(cls, dikt) -> 'Recruit':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Recruit of this Recruit.  # noqa: E501
        :rtype: Recruit
        """
        return util.deserialize_model(dikt, cls)

    @property
    def athlete_id(self) -> int:
        """Gets the athlete_id of this Recruit.


        :return: The athlete_id of this Recruit.
        :rtype: int
        """
        return self._athlete_id

    @athlete_id.setter
    def athlete_id(self, athlete_id: int):
        """Sets the athlete_id of this Recruit.


        :param athlete_id: The athlete_id of this Recruit.
        :type athlete_id: int
        """

        self._athlete_id = athlete_id

    @property
    def city(self) -> str:
        """Gets the city of this Recruit.


        :return: The city of this Recruit.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city: str):
        """Sets the city of this Recruit.


        :param city: The city of this Recruit.
        :type city: str
        """

        self._city = city

    @property
    def committed_to(self) -> str:
        """Gets the committed_to of this Recruit.


        :return: The committed_to of this Recruit.
        :rtype: str
        """
        return self._committed_to

    @committed_to.setter
    def committed_to(self, committed_to: str):
        """Sets the committed_to of this Recruit.


        :param committed_to: The committed_to of this Recruit.
        :type committed_to: str
        """

        self._committed_to = committed_to

    @property
    def country(self) -> str:
        """Gets the country of this Recruit.


        :return: The country of this Recruit.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country: str):
        """Sets the country of this Recruit.


        :param country: The country of this Recruit.
        :type country: str
        """

        self._country = country

    @property
    def height(self) -> float:
        """Gets the height of this Recruit.


        :return: The height of this Recruit.
        :rtype: float
        """
        return self._height

    @height.setter
    def height(self, height: float):
        """Sets the height of this Recruit.


        :param height: The height of this Recruit.
        :type height: float
        """

        self._height = height

    @property
    def hometown_info(self) -> RecruitHometownInfo:
        """Gets the hometown_info of this Recruit.


        :return: The hometown_info of this Recruit.
        :rtype: RecruitHometownInfo
        """
        return self._hometown_info

    @hometown_info.setter
    def hometown_info(self, hometown_info: RecruitHometownInfo):
        """Sets the hometown_info of this Recruit.


        :param hometown_info: The hometown_info of this Recruit.
        :type hometown_info: RecruitHometownInfo
        """

        self._hometown_info = hometown_info

    @property
    def id(self) -> int:
        """Gets the id of this Recruit.


        :return: The id of this Recruit.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Recruit.


        :param id: The id of this Recruit.
        :type id: int
        """

        self._id = id

    @property
    def name(self) -> str:
        """Gets the name of this Recruit.


        :return: The name of this Recruit.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Recruit.


        :param name: The name of this Recruit.
        :type name: str
        """

        self._name = name

    @property
    def position(self) -> str:
        """Gets the position of this Recruit.


        :return: The position of this Recruit.
        :rtype: str
        """
        return self._position

    @position.setter
    def position(self, position: str):
        """Sets the position of this Recruit.


        :param position: The position of this Recruit.
        :type position: str
        """

        self._position = position

    @property
    def ranking(self) -> int:
        """Gets the ranking of this Recruit.


        :return: The ranking of this Recruit.
        :rtype: int
        """
        return self._ranking

    @ranking.setter
    def ranking(self, ranking: int):
        """Sets the ranking of this Recruit.


        :param ranking: The ranking of this Recruit.
        :type ranking: int
        """

        self._ranking = ranking

    @property
    def rating(self) -> float:
        """Gets the rating of this Recruit.


        :return: The rating of this Recruit.
        :rtype: float
        """
        return self._rating

    @rating.setter
    def rating(self, rating: float):
        """Sets the rating of this Recruit.


        :param rating: The rating of this Recruit.
        :type rating: float
        """

        self._rating = rating

    @property
    def recruit_type(self) -> str:
        """Gets the recruit_type of this Recruit.


        :return: The recruit_type of this Recruit.
        :rtype: str
        """
        return self._recruit_type

    @recruit_type.setter
    def recruit_type(self, recruit_type: str):
        """Sets the recruit_type of this Recruit.


        :param recruit_type: The recruit_type of this Recruit.
        :type recruit_type: str
        """

        self._recruit_type = recruit_type

    @property
    def school(self) -> str:
        """Gets the school of this Recruit.


        :return: The school of this Recruit.
        :rtype: str
        """
        return self._school

    @school.setter
    def school(self, school: str):
        """Sets the school of this Recruit.


        :param school: The school of this Recruit.
        :type school: str
        """

        self._school = school

    @property
    def stars(self) -> int:
        """Gets the stars of this Recruit.


        :return: The stars of this Recruit.
        :rtype: int
        """
        return self._stars

    @stars.setter
    def stars(self, stars: int):
        """Sets the stars of this Recruit.


        :param stars: The stars of this Recruit.
        :type stars: int
        """

        self._stars = stars

    @property
    def state_province(self) -> str:
        """Gets the state_province of this Recruit.


        :return: The state_province of this Recruit.
        :rtype: str
        """
        return self._state_province

    @state_province.setter
    def state_province(self, state_province: str):
        """Sets the state_province of this Recruit.


        :param state_province: The state_province of this Recruit.
        :type state_province: str
        """

        self._state_province = state_province

    @property
    def weight(self) -> int:
        """Gets the weight of this Recruit.


        :return: The weight of this Recruit.
        :rtype: int
        """
        return self._weight

    @weight.setter
    def weight(self, weight: int):
        """Sets the weight of this Recruit.


        :param weight: The weight of this Recruit.
        :type weight: int
        """

        self._weight = weight

    @property
    def year(self) -> int:
        """Gets the year of this Recruit.


        :return: The year of this Recruit.
        :rtype: int
        """
        return self._year

    @year.setter
    def year(self, year: int):
        """Sets the year of this Recruit.


        :param year: The year of this Recruit.
        :type year: int
        """

        self._year = year
