from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class GamePPADefense(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, first_down=None, overall=None, passing=None, rushing=None, second_down=None, third_down=None):  # noqa: E501
        """GamePPADefense - a model defined in OpenAPI

        :param first_down: The first_down of this GamePPADefense.  # noqa: E501
        :type first_down: float
        :param overall: The overall of this GamePPADefense.  # noqa: E501
        :type overall: float
        :param passing: The passing of this GamePPADefense.  # noqa: E501
        :type passing: float
        :param rushing: The rushing of this GamePPADefense.  # noqa: E501
        :type rushing: float
        :param second_down: The second_down of this GamePPADefense.  # noqa: E501
        :type second_down: float
        :param third_down: The third_down of this GamePPADefense.  # noqa: E501
        :type third_down: float
        """
        self.openapi_types = {
            'first_down': float,
            'overall': float,
            'passing': float,
            'rushing': float,
            'second_down': float,
            'third_down': float
        }

        self.attribute_map = {
            'first_down': 'firstDown',
            'overall': 'overall',
            'passing': 'passing',
            'rushing': 'rushing',
            'second_down': 'secondDown',
            'third_down': 'thirdDown'
        }

        self._first_down = first_down
        self._overall = overall
        self._passing = passing
        self._rushing = rushing
        self._second_down = second_down
        self._third_down = third_down

    @classmethod
    def from_dict(cls, dikt) -> 'GamePPADefense':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GamePPA_defense of this GamePPADefense.  # noqa: E501
        :rtype: GamePPADefense
        """
        return util.deserialize_model(dikt, cls)

    @property
    def first_down(self) -> float:
        """Gets the first_down of this GamePPADefense.


        :return: The first_down of this GamePPADefense.
        :rtype: float
        """
        return self._first_down

    @first_down.setter
    def first_down(self, first_down: float):
        """Sets the first_down of this GamePPADefense.


        :param first_down: The first_down of this GamePPADefense.
        :type first_down: float
        """

        self._first_down = first_down

    @property
    def overall(self) -> float:
        """Gets the overall of this GamePPADefense.


        :return: The overall of this GamePPADefense.
        :rtype: float
        """
        return self._overall

    @overall.setter
    def overall(self, overall: float):
        """Sets the overall of this GamePPADefense.


        :param overall: The overall of this GamePPADefense.
        :type overall: float
        """

        self._overall = overall

    @property
    def passing(self) -> float:
        """Gets the passing of this GamePPADefense.


        :return: The passing of this GamePPADefense.
        :rtype: float
        """
        return self._passing

    @passing.setter
    def passing(self, passing: float):
        """Sets the passing of this GamePPADefense.


        :param passing: The passing of this GamePPADefense.
        :type passing: float
        """

        self._passing = passing

    @property
    def rushing(self) -> float:
        """Gets the rushing of this GamePPADefense.


        :return: The rushing of this GamePPADefense.
        :rtype: float
        """
        return self._rushing

    @rushing.setter
    def rushing(self, rushing: float):
        """Sets the rushing of this GamePPADefense.


        :param rushing: The rushing of this GamePPADefense.
        :type rushing: float
        """

        self._rushing = rushing

    @property
    def second_down(self) -> float:
        """Gets the second_down of this GamePPADefense.


        :return: The second_down of this GamePPADefense.
        :rtype: float
        """
        return self._second_down

    @second_down.setter
    def second_down(self, second_down: float):
        """Sets the second_down of this GamePPADefense.


        :param second_down: The second_down of this GamePPADefense.
        :type second_down: float
        """

        self._second_down = second_down

    @property
    def third_down(self) -> float:
        """Gets the third_down of this GamePPADefense.


        :return: The third_down of this GamePPADefense.
        :rtype: float
        """
        return self._third_down

    @third_down.setter
    def third_down(self, third_down: float):
        """Sets the third_down of this GamePPADefense.


        :param third_down: The third_down of this GamePPADefense.
        :type third_down: float
        """

        self._third_down = third_down
