from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class ScoreboardGameBetting(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, away_moneyline=None, home_moneyline=None, over_under=None, spread=None):  # noqa: E501
        """ScoreboardGameBetting - a model defined in OpenAPI

        :param away_moneyline: The away_moneyline of this ScoreboardGameBetting.  # noqa: E501
        :type away_moneyline: int
        :param home_moneyline: The home_moneyline of this ScoreboardGameBetting.  # noqa: E501
        :type home_moneyline: int
        :param over_under: The over_under of this ScoreboardGameBetting.  # noqa: E501
        :type over_under: float
        :param spread: The spread of this ScoreboardGameBetting.  # noqa: E501
        :type spread: float
        """
        self.openapi_types = {
            'away_moneyline': int,
            'home_moneyline': int,
            'over_under': float,
            'spread': float
        }

        self.attribute_map = {
            'away_moneyline': 'awayMoneyline',
            'home_moneyline': 'homeMoneyline',
            'over_under': 'overUnder',
            'spread': 'spread'
        }

        self._away_moneyline = away_moneyline
        self._home_moneyline = home_moneyline
        self._over_under = over_under
        self._spread = spread

    @classmethod
    def from_dict(cls, dikt) -> 'ScoreboardGameBetting':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ScoreboardGame_betting of this ScoreboardGameBetting.  # noqa: E501
        :rtype: ScoreboardGameBetting
        """
        return util.deserialize_model(dikt, cls)

    @property
    def away_moneyline(self) -> int:
        """Gets the away_moneyline of this ScoreboardGameBetting.


        :return: The away_moneyline of this ScoreboardGameBetting.
        :rtype: int
        """
        return self._away_moneyline

    @away_moneyline.setter
    def away_moneyline(self, away_moneyline: int):
        """Sets the away_moneyline of this ScoreboardGameBetting.


        :param away_moneyline: The away_moneyline of this ScoreboardGameBetting.
        :type away_moneyline: int
        """

        self._away_moneyline = away_moneyline

    @property
    def home_moneyline(self) -> int:
        """Gets the home_moneyline of this ScoreboardGameBetting.


        :return: The home_moneyline of this ScoreboardGameBetting.
        :rtype: int
        """
        return self._home_moneyline

    @home_moneyline.setter
    def home_moneyline(self, home_moneyline: int):
        """Sets the home_moneyline of this ScoreboardGameBetting.


        :param home_moneyline: The home_moneyline of this ScoreboardGameBetting.
        :type home_moneyline: int
        """

        self._home_moneyline = home_moneyline

    @property
    def over_under(self) -> float:
        """Gets the over_under of this ScoreboardGameBetting.


        :return: The over_under of this ScoreboardGameBetting.
        :rtype: float
        """
        return self._over_under

    @over_under.setter
    def over_under(self, over_under: float):
        """Sets the over_under of this ScoreboardGameBetting.


        :param over_under: The over_under of this ScoreboardGameBetting.
        :type over_under: float
        """

        self._over_under = over_under

    @property
    def spread(self) -> float:
        """Gets the spread of this ScoreboardGameBetting.


        :return: The spread of this ScoreboardGameBetting.
        :rtype: float
        """
        return self._spread

    @spread.setter
    def spread(self, spread: float):
        """Sets the spread of this ScoreboardGameBetting.


        :param spread: The spread of this ScoreboardGameBetting.
        :type spread: float
        """

        self._spread = spread
