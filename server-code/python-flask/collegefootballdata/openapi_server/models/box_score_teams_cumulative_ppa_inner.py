from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.box_score_teams_cumulative_ppa_inner_overall import BoxScoreTeamsCumulativePpaInnerOverall
from openapi_server import util

from openapi_server.models.box_score_teams_cumulative_ppa_inner_overall import BoxScoreTeamsCumulativePpaInnerOverall  # noqa: E501

class BoxScoreTeamsCumulativePpaInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, overall=None, passing=None, plays=None, rushing=None, team=None):  # noqa: E501
        """BoxScoreTeamsCumulativePpaInner - a model defined in OpenAPI

        :param overall: The overall of this BoxScoreTeamsCumulativePpaInner.  # noqa: E501
        :type overall: BoxScoreTeamsCumulativePpaInnerOverall
        :param passing: The passing of this BoxScoreTeamsCumulativePpaInner.  # noqa: E501
        :type passing: BoxScoreTeamsCumulativePpaInnerOverall
        :param plays: The plays of this BoxScoreTeamsCumulativePpaInner.  # noqa: E501
        :type plays: float
        :param rushing: The rushing of this BoxScoreTeamsCumulativePpaInner.  # noqa: E501
        :type rushing: BoxScoreTeamsCumulativePpaInnerOverall
        :param team: The team of this BoxScoreTeamsCumulativePpaInner.  # noqa: E501
        :type team: str
        """
        self.openapi_types = {
            'overall': BoxScoreTeamsCumulativePpaInnerOverall,
            'passing': BoxScoreTeamsCumulativePpaInnerOverall,
            'plays': float,
            'rushing': BoxScoreTeamsCumulativePpaInnerOverall,
            'team': str
        }

        self.attribute_map = {
            'overall': 'overall',
            'passing': 'passing',
            'plays': 'plays',
            'rushing': 'rushing',
            'team': 'team'
        }

        self._overall = overall
        self._passing = passing
        self._plays = plays
        self._rushing = rushing
        self._team = team

    @classmethod
    def from_dict(cls, dikt) -> 'BoxScoreTeamsCumulativePpaInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BoxScore_teams_cumulativePpa_inner of this BoxScoreTeamsCumulativePpaInner.  # noqa: E501
        :rtype: BoxScoreTeamsCumulativePpaInner
        """
        return util.deserialize_model(dikt, cls)

    @property
    def overall(self) -> BoxScoreTeamsCumulativePpaInnerOverall:
        """Gets the overall of this BoxScoreTeamsCumulativePpaInner.


        :return: The overall of this BoxScoreTeamsCumulativePpaInner.
        :rtype: BoxScoreTeamsCumulativePpaInnerOverall
        """
        return self._overall

    @overall.setter
    def overall(self, overall: BoxScoreTeamsCumulativePpaInnerOverall):
        """Sets the overall of this BoxScoreTeamsCumulativePpaInner.


        :param overall: The overall of this BoxScoreTeamsCumulativePpaInner.
        :type overall: BoxScoreTeamsCumulativePpaInnerOverall
        """

        self._overall = overall

    @property
    def passing(self) -> BoxScoreTeamsCumulativePpaInnerOverall:
        """Gets the passing of this BoxScoreTeamsCumulativePpaInner.


        :return: The passing of this BoxScoreTeamsCumulativePpaInner.
        :rtype: BoxScoreTeamsCumulativePpaInnerOverall
        """
        return self._passing

    @passing.setter
    def passing(self, passing: BoxScoreTeamsCumulativePpaInnerOverall):
        """Sets the passing of this BoxScoreTeamsCumulativePpaInner.


        :param passing: The passing of this BoxScoreTeamsCumulativePpaInner.
        :type passing: BoxScoreTeamsCumulativePpaInnerOverall
        """

        self._passing = passing

    @property
    def plays(self) -> float:
        """Gets the plays of this BoxScoreTeamsCumulativePpaInner.


        :return: The plays of this BoxScoreTeamsCumulativePpaInner.
        :rtype: float
        """
        return self._plays

    @plays.setter
    def plays(self, plays: float):
        """Sets the plays of this BoxScoreTeamsCumulativePpaInner.


        :param plays: The plays of this BoxScoreTeamsCumulativePpaInner.
        :type plays: float
        """

        self._plays = plays

    @property
    def rushing(self) -> BoxScoreTeamsCumulativePpaInnerOverall:
        """Gets the rushing of this BoxScoreTeamsCumulativePpaInner.


        :return: The rushing of this BoxScoreTeamsCumulativePpaInner.
        :rtype: BoxScoreTeamsCumulativePpaInnerOverall
        """
        return self._rushing

    @rushing.setter
    def rushing(self, rushing: BoxScoreTeamsCumulativePpaInnerOverall):
        """Sets the rushing of this BoxScoreTeamsCumulativePpaInner.


        :param rushing: The rushing of this BoxScoreTeamsCumulativePpaInner.
        :type rushing: BoxScoreTeamsCumulativePpaInnerOverall
        """

        self._rushing = rushing

    @property
    def team(self) -> str:
        """Gets the team of this BoxScoreTeamsCumulativePpaInner.


        :return: The team of this BoxScoreTeamsCumulativePpaInner.
        :rtype: str
        """
        return self._team

    @team.setter
    def team(self, team: str):
        """Sets the team of this BoxScoreTeamsCumulativePpaInner.


        :param team: The team of this BoxScoreTeamsCumulativePpaInner.
        :type team: str
        """

        self._team = team
