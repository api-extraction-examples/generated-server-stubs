from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class SecurityLevelMemberHolder(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expand=None, parameter=None, type=None, value=None):  # noqa: E501
        """SecurityLevelMemberHolder - a model defined in OpenAPI

        :param expand: The expand of this SecurityLevelMemberHolder.  # noqa: E501
        :type expand: str
        :param parameter: The parameter of this SecurityLevelMemberHolder.  # noqa: E501
        :type parameter: str
        :param type: The type of this SecurityLevelMemberHolder.  # noqa: E501
        :type type: str
        :param value: The value of this SecurityLevelMemberHolder.  # noqa: E501
        :type value: str
        """
        self.openapi_types = {
            'expand': str,
            'parameter': str,
            'type': str,
            'value': str
        }

        self.attribute_map = {
            'expand': 'expand',
            'parameter': 'parameter',
            'type': 'type',
            'value': 'value'
        }

        self._expand = expand
        self._parameter = parameter
        self._type = type
        self._value = value

    @classmethod
    def from_dict(cls, dikt) -> 'SecurityLevelMemberHolder':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SecurityLevelMember_holder of this SecurityLevelMemberHolder.  # noqa: E501
        :rtype: SecurityLevelMemberHolder
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expand(self) -> str:
        """Gets the expand of this SecurityLevelMemberHolder.

        Expand options that include additional permission holder details in the response.  # noqa: E501

        :return: The expand of this SecurityLevelMemberHolder.
        :rtype: str
        """
        return self._expand

    @expand.setter
    def expand(self, expand: str):
        """Sets the expand of this SecurityLevelMemberHolder.

        Expand options that include additional permission holder details in the response.  # noqa: E501

        :param expand: The expand of this SecurityLevelMemberHolder.
        :type expand: str
        """

        self._expand = expand

    @property
    def parameter(self) -> str:
        """Gets the parameter of this SecurityLevelMemberHolder.

        As a group's name can change, use of `value` is recommended. The identifier associated withthe `type` value that defines the holder of the permission.  # noqa: E501

        :return: The parameter of this SecurityLevelMemberHolder.
        :rtype: str
        """
        return self._parameter

    @parameter.setter
    def parameter(self, parameter: str):
        """Sets the parameter of this SecurityLevelMemberHolder.

        As a group's name can change, use of `value` is recommended. The identifier associated withthe `type` value that defines the holder of the permission.  # noqa: E501

        :param parameter: The parameter of this SecurityLevelMemberHolder.
        :type parameter: str
        """

        self._parameter = parameter

    @property
    def type(self) -> str:
        """Gets the type of this SecurityLevelMemberHolder.

        The type of permission holder.  # noqa: E501

        :return: The type of this SecurityLevelMemberHolder.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this SecurityLevelMemberHolder.

        The type of permission holder.  # noqa: E501

        :param type: The type of this SecurityLevelMemberHolder.
        :type type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")  # noqa: E501

        self._type = type

    @property
    def value(self) -> str:
        """Gets the value of this SecurityLevelMemberHolder.

        The identifier associated with the `type` value that defines the holder of the permission.  # noqa: E501

        :return: The value of this SecurityLevelMemberHolder.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value: str):
        """Sets the value of this SecurityLevelMemberHolder.

        The identifier associated with the `type` value that defines the holder of the permission.  # noqa: E501

        :param value: The value of this SecurityLevelMemberHolder.
        :type value: str
        """

        self._value = value
