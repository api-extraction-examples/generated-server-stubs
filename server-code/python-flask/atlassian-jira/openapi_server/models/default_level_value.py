from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class DefaultLevelValue(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default_level_id=None, issue_security_scheme_id=None):  # noqa: E501
        """DefaultLevelValue - a model defined in OpenAPI

        :param default_level_id: The default_level_id of this DefaultLevelValue.  # noqa: E501
        :type default_level_id: str
        :param issue_security_scheme_id: The issue_security_scheme_id of this DefaultLevelValue.  # noqa: E501
        :type issue_security_scheme_id: str
        """
        self.openapi_types = {
            'default_level_id': str,
            'issue_security_scheme_id': str
        }

        self.attribute_map = {
            'default_level_id': 'defaultLevelId',
            'issue_security_scheme_id': 'issueSecuritySchemeId'
        }

        self._default_level_id = default_level_id
        self._issue_security_scheme_id = issue_security_scheme_id

    @classmethod
    def from_dict(cls, dikt) -> 'DefaultLevelValue':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DefaultLevelValue of this DefaultLevelValue.  # noqa: E501
        :rtype: DefaultLevelValue
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default_level_id(self) -> str:
        """Gets the default_level_id of this DefaultLevelValue.

        The ID of the issue security level to set as default for the specified scheme. Providing null will reset the default level.  # noqa: E501

        :return: The default_level_id of this DefaultLevelValue.
        :rtype: str
        """
        return self._default_level_id

    @default_level_id.setter
    def default_level_id(self, default_level_id: str):
        """Sets the default_level_id of this DefaultLevelValue.

        The ID of the issue security level to set as default for the specified scheme. Providing null will reset the default level.  # noqa: E501

        :param default_level_id: The default_level_id of this DefaultLevelValue.
        :type default_level_id: str
        """
        if default_level_id is None:
            raise ValueError("Invalid value for `default_level_id`, must not be `None`")  # noqa: E501

        self._default_level_id = default_level_id

    @property
    def issue_security_scheme_id(self) -> str:
        """Gets the issue_security_scheme_id of this DefaultLevelValue.

        The ID of the issue security scheme to set default level for.  # noqa: E501

        :return: The issue_security_scheme_id of this DefaultLevelValue.
        :rtype: str
        """
        return self._issue_security_scheme_id

    @issue_security_scheme_id.setter
    def issue_security_scheme_id(self, issue_security_scheme_id: str):
        """Sets the issue_security_scheme_id of this DefaultLevelValue.

        The ID of the issue security scheme to set default level for.  # noqa: E501

        :param issue_security_scheme_id: The issue_security_scheme_id of this DefaultLevelValue.
        :type issue_security_scheme_id: str
        """
        if issue_security_scheme_id is None:
            raise ValueError("Invalid value for `issue_security_scheme_id`, must not be `None`")  # noqa: E501

        self._issue_security_scheme_id = issue_security_scheme_id
