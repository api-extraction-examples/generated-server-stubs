from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class SimpleErrorCollection(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error_messages=None, errors=None, http_status_code=None):  # noqa: E501
        """SimpleErrorCollection - a model defined in OpenAPI

        :param error_messages: The error_messages of this SimpleErrorCollection.  # noqa: E501
        :type error_messages: List[str]
        :param errors: The errors of this SimpleErrorCollection.  # noqa: E501
        :type errors: Dict[str, str]
        :param http_status_code: The http_status_code of this SimpleErrorCollection.  # noqa: E501
        :type http_status_code: int
        """
        self.openapi_types = {
            'error_messages': List[str],
            'errors': Dict[str, str],
            'http_status_code': int
        }

        self.attribute_map = {
            'error_messages': 'errorMessages',
            'errors': 'errors',
            'http_status_code': 'httpStatusCode'
        }

        self._error_messages = error_messages
        self._errors = errors
        self._http_status_code = http_status_code

    @classmethod
    def from_dict(cls, dikt) -> 'SimpleErrorCollection':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SimpleErrorCollection of this SimpleErrorCollection.  # noqa: E501
        :rtype: SimpleErrorCollection
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error_messages(self) -> List[str]:
        """Gets the error_messages of this SimpleErrorCollection.

        The list of error messages produced by this operation. For example, \"input parameter 'key' must be provided\"  # noqa: E501

        :return: The error_messages of this SimpleErrorCollection.
        :rtype: List[str]
        """
        return self._error_messages

    @error_messages.setter
    def error_messages(self, error_messages: List[str]):
        """Sets the error_messages of this SimpleErrorCollection.

        The list of error messages produced by this operation. For example, \"input parameter 'key' must be provided\"  # noqa: E501

        :param error_messages: The error_messages of this SimpleErrorCollection.
        :type error_messages: List[str]
        """

        self._error_messages = error_messages

    @property
    def errors(self) -> Dict[str, str]:
        """Gets the errors of this SimpleErrorCollection.

        The list of errors by parameter returned by the operation. For example,\"projectKey\": \"Project keys must start with an uppercase letter, followed by one or more uppercase alphanumeric characters.\"  # noqa: E501

        :return: The errors of this SimpleErrorCollection.
        :rtype: Dict[str, str]
        """
        return self._errors

    @errors.setter
    def errors(self, errors: Dict[str, str]):
        """Sets the errors of this SimpleErrorCollection.

        The list of errors by parameter returned by the operation. For example,\"projectKey\": \"Project keys must start with an uppercase letter, followed by one or more uppercase alphanumeric characters.\"  # noqa: E501

        :param errors: The errors of this SimpleErrorCollection.
        :type errors: Dict[str, str]
        """

        self._errors = errors

    @property
    def http_status_code(self) -> int:
        """Gets the http_status_code of this SimpleErrorCollection.


        :return: The http_status_code of this SimpleErrorCollection.
        :rtype: int
        """
        return self._http_status_code

    @http_status_code.setter
    def http_status_code(self, http_status_code: int):
        """Sets the http_status_code of this SimpleErrorCollection.


        :param http_status_code: The http_status_code of this SimpleErrorCollection.
        :type http_status_code: int
        """

        self._http_status_code = http_status_code
