from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.field_metadata import FieldMetadata
from openapi_server import util

from openapi_server.models.field_metadata import FieldMetadata  # noqa: E501

class IssueUpdateMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fields=None):  # noqa: E501
        """IssueUpdateMetadata - a model defined in OpenAPI

        :param fields: The fields of this IssueUpdateMetadata.  # noqa: E501
        :type fields: Dict[str, FieldMetadata]
        """
        self.openapi_types = {
            'fields': Dict[str, FieldMetadata]
        }

        self.attribute_map = {
            'fields': 'fields'
        }

        self._fields = fields

    @classmethod
    def from_dict(cls, dikt) -> 'IssueUpdateMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The IssueUpdateMetadata of this IssueUpdateMetadata.  # noqa: E501
        :rtype: IssueUpdateMetadata
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fields(self) -> Dict[str, FieldMetadata]:
        """Gets the fields of this IssueUpdateMetadata.


        :return: The fields of this IssueUpdateMetadata.
        :rtype: Dict[str, FieldMetadata]
        """
        return self._fields

    @fields.setter
    def fields(self, fields: Dict[str, FieldMetadata]):
        """Sets the fields of this IssueUpdateMetadata.


        :param fields: The fields of this IssueUpdateMetadata.
        :type fields: Dict[str, FieldMetadata]
        """

        self._fields = fields
