from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class FieldsTimetracking(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, original_estimate=None, original_estimate_seconds=None, remaining_estimate=None, remaining_estimate_seconds=None, time_spent=None, time_spent_seconds=None):  # noqa: E501
        """FieldsTimetracking - a model defined in OpenAPI

        :param original_estimate: The original_estimate of this FieldsTimetracking.  # noqa: E501
        :type original_estimate: str
        :param original_estimate_seconds: The original_estimate_seconds of this FieldsTimetracking.  # noqa: E501
        :type original_estimate_seconds: int
        :param remaining_estimate: The remaining_estimate of this FieldsTimetracking.  # noqa: E501
        :type remaining_estimate: str
        :param remaining_estimate_seconds: The remaining_estimate_seconds of this FieldsTimetracking.  # noqa: E501
        :type remaining_estimate_seconds: int
        :param time_spent: The time_spent of this FieldsTimetracking.  # noqa: E501
        :type time_spent: str
        :param time_spent_seconds: The time_spent_seconds of this FieldsTimetracking.  # noqa: E501
        :type time_spent_seconds: int
        """
        self.openapi_types = {
            'original_estimate': str,
            'original_estimate_seconds': int,
            'remaining_estimate': str,
            'remaining_estimate_seconds': int,
            'time_spent': str,
            'time_spent_seconds': int
        }

        self.attribute_map = {
            'original_estimate': 'originalEstimate',
            'original_estimate_seconds': 'originalEstimateSeconds',
            'remaining_estimate': 'remainingEstimate',
            'remaining_estimate_seconds': 'remainingEstimateSeconds',
            'time_spent': 'timeSpent',
            'time_spent_seconds': 'timeSpentSeconds'
        }

        self._original_estimate = original_estimate
        self._original_estimate_seconds = original_estimate_seconds
        self._remaining_estimate = remaining_estimate
        self._remaining_estimate_seconds = remaining_estimate_seconds
        self._time_spent = time_spent
        self._time_spent_seconds = time_spent_seconds

    @classmethod
    def from_dict(cls, dikt) -> 'FieldsTimetracking':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Fields_timetracking of this FieldsTimetracking.  # noqa: E501
        :rtype: FieldsTimetracking
        """
        return util.deserialize_model(dikt, cls)

    @property
    def original_estimate(self) -> str:
        """Gets the original_estimate of this FieldsTimetracking.

        The original estimate of time needed for this issue in readable format.  # noqa: E501

        :return: The original_estimate of this FieldsTimetracking.
        :rtype: str
        """
        return self._original_estimate

    @original_estimate.setter
    def original_estimate(self, original_estimate: str):
        """Sets the original_estimate of this FieldsTimetracking.

        The original estimate of time needed for this issue in readable format.  # noqa: E501

        :param original_estimate: The original_estimate of this FieldsTimetracking.
        :type original_estimate: str
        """

        self._original_estimate = original_estimate

    @property
    def original_estimate_seconds(self) -> int:
        """Gets the original_estimate_seconds of this FieldsTimetracking.

        The original estimate of time needed for this issue in seconds.  # noqa: E501

        :return: The original_estimate_seconds of this FieldsTimetracking.
        :rtype: int
        """
        return self._original_estimate_seconds

    @original_estimate_seconds.setter
    def original_estimate_seconds(self, original_estimate_seconds: int):
        """Sets the original_estimate_seconds of this FieldsTimetracking.

        The original estimate of time needed for this issue in seconds.  # noqa: E501

        :param original_estimate_seconds: The original_estimate_seconds of this FieldsTimetracking.
        :type original_estimate_seconds: int
        """

        self._original_estimate_seconds = original_estimate_seconds

    @property
    def remaining_estimate(self) -> str:
        """Gets the remaining_estimate of this FieldsTimetracking.

        The remaining estimate of time needed for this issue in readable format.  # noqa: E501

        :return: The remaining_estimate of this FieldsTimetracking.
        :rtype: str
        """
        return self._remaining_estimate

    @remaining_estimate.setter
    def remaining_estimate(self, remaining_estimate: str):
        """Sets the remaining_estimate of this FieldsTimetracking.

        The remaining estimate of time needed for this issue in readable format.  # noqa: E501

        :param remaining_estimate: The remaining_estimate of this FieldsTimetracking.
        :type remaining_estimate: str
        """

        self._remaining_estimate = remaining_estimate

    @property
    def remaining_estimate_seconds(self) -> int:
        """Gets the remaining_estimate_seconds of this FieldsTimetracking.

        The remaining estimate of time needed for this issue in seconds.  # noqa: E501

        :return: The remaining_estimate_seconds of this FieldsTimetracking.
        :rtype: int
        """
        return self._remaining_estimate_seconds

    @remaining_estimate_seconds.setter
    def remaining_estimate_seconds(self, remaining_estimate_seconds: int):
        """Sets the remaining_estimate_seconds of this FieldsTimetracking.

        The remaining estimate of time needed for this issue in seconds.  # noqa: E501

        :param remaining_estimate_seconds: The remaining_estimate_seconds of this FieldsTimetracking.
        :type remaining_estimate_seconds: int
        """

        self._remaining_estimate_seconds = remaining_estimate_seconds

    @property
    def time_spent(self) -> str:
        """Gets the time_spent of this FieldsTimetracking.

        Time worked on this issue in readable format.  # noqa: E501

        :return: The time_spent of this FieldsTimetracking.
        :rtype: str
        """
        return self._time_spent

    @time_spent.setter
    def time_spent(self, time_spent: str):
        """Sets the time_spent of this FieldsTimetracking.

        Time worked on this issue in readable format.  # noqa: E501

        :param time_spent: The time_spent of this FieldsTimetracking.
        :type time_spent: str
        """

        self._time_spent = time_spent

    @property
    def time_spent_seconds(self) -> int:
        """Gets the time_spent_seconds of this FieldsTimetracking.

        Time worked on this issue in seconds.  # noqa: E501

        :return: The time_spent_seconds of this FieldsTimetracking.
        :rtype: int
        """
        return self._time_spent_seconds

    @time_spent_seconds.setter
    def time_spent_seconds(self, time_spent_seconds: int):
        """Sets the time_spent_seconds of this FieldsTimetracking.

        Time worked on this issue in seconds.  # noqa: E501

        :param time_spent_seconds: The time_spent_seconds of this FieldsTimetracking.
        :type time_spent_seconds: int
        """

        self._time_spent_seconds = time_spent_seconds
