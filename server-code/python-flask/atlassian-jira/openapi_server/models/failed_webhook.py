from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class FailedWebhook(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, body=None, failure_time=None, id=None, url=None):  # noqa: E501
        """FailedWebhook - a model defined in OpenAPI

        :param body: The body of this FailedWebhook.  # noqa: E501
        :type body: str
        :param failure_time: The failure_time of this FailedWebhook.  # noqa: E501
        :type failure_time: int
        :param id: The id of this FailedWebhook.  # noqa: E501
        :type id: str
        :param url: The url of this FailedWebhook.  # noqa: E501
        :type url: str
        """
        self.openapi_types = {
            'body': str,
            'failure_time': int,
            'id': str,
            'url': str
        }

        self.attribute_map = {
            'body': 'body',
            'failure_time': 'failureTime',
            'id': 'id',
            'url': 'url'
        }

        self._body = body
        self._failure_time = failure_time
        self._id = id
        self._url = url

    @classmethod
    def from_dict(cls, dikt) -> 'FailedWebhook':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FailedWebhook of this FailedWebhook.  # noqa: E501
        :rtype: FailedWebhook
        """
        return util.deserialize_model(dikt, cls)

    @property
    def body(self) -> str:
        """Gets the body of this FailedWebhook.

        The webhook body.  # noqa: E501

        :return: The body of this FailedWebhook.
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body: str):
        """Sets the body of this FailedWebhook.

        The webhook body.  # noqa: E501

        :param body: The body of this FailedWebhook.
        :type body: str
        """

        self._body = body

    @property
    def failure_time(self) -> int:
        """Gets the failure_time of this FailedWebhook.

        The time the webhook was added to the list of failed webhooks (that is, the time of the last failed retry).  # noqa: E501

        :return: The failure_time of this FailedWebhook.
        :rtype: int
        """
        return self._failure_time

    @failure_time.setter
    def failure_time(self, failure_time: int):
        """Sets the failure_time of this FailedWebhook.

        The time the webhook was added to the list of failed webhooks (that is, the time of the last failed retry).  # noqa: E501

        :param failure_time: The failure_time of this FailedWebhook.
        :type failure_time: int
        """
        if failure_time is None:
            raise ValueError("Invalid value for `failure_time`, must not be `None`")  # noqa: E501

        self._failure_time = failure_time

    @property
    def id(self) -> str:
        """Gets the id of this FailedWebhook.

        The webhook ID, as sent in the `X-Atlassian-Webhook-Identifier` header with the webhook.  # noqa: E501

        :return: The id of this FailedWebhook.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this FailedWebhook.

        The webhook ID, as sent in the `X-Atlassian-Webhook-Identifier` header with the webhook.  # noqa: E501

        :param id: The id of this FailedWebhook.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def url(self) -> str:
        """Gets the url of this FailedWebhook.

        The original webhook destination.  # noqa: E501

        :return: The url of this FailedWebhook.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url: str):
        """Sets the url of this FailedWebhook.

        The original webhook destination.  # noqa: E501

        :param url: The url of this FailedWebhook.
        :type url: str
        """
        if url is None:
            raise ValueError("Invalid value for `url`, must not be `None`")  # noqa: E501

        self._url = url
