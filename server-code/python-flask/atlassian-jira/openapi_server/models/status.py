from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.icon import Icon
from openapi_server import util

from openapi_server.models.icon import Icon  # noqa: E501

class Status(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, icon=None, resolved=None):  # noqa: E501
        """Status - a model defined in OpenAPI

        :param icon: The icon of this Status.  # noqa: E501
        :type icon: Icon
        :param resolved: The resolved of this Status.  # noqa: E501
        :type resolved: bool
        """
        self.openapi_types = {
            'icon': Icon,
            'resolved': bool
        }

        self.attribute_map = {
            'icon': 'icon',
            'resolved': 'resolved'
        }

        self._icon = icon
        self._resolved = resolved

    @classmethod
    def from_dict(cls, dikt) -> 'Status':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Status of this Status.  # noqa: E501
        :rtype: Status
        """
        return util.deserialize_model(dikt, cls)

    @property
    def icon(self) -> Icon:
        """Gets the icon of this Status.


        :return: The icon of this Status.
        :rtype: Icon
        """
        return self._icon

    @icon.setter
    def icon(self, icon: Icon):
        """Sets the icon of this Status.


        :param icon: The icon of this Status.
        :type icon: Icon
        """

        self._icon = icon

    @property
    def resolved(self) -> bool:
        """Gets the resolved of this Status.

        Whether the item is resolved. If set to \"true\", the link to the issue is displayed in a strikethrough font, otherwise the link displays in normal font.  # noqa: E501

        :return: The resolved of this Status.
        :rtype: bool
        """
        return self._resolved

    @resolved.setter
    def resolved(self, resolved: bool):
        """Sets the resolved of this Status.

        Whether the item is resolved. If set to \"true\", the link to the issue is displayed in a strikethrough font, otherwise the link displays in normal font.  # noqa: E501

        :param resolved: The resolved of this Status.
        :type resolved: bool
        """

        self._resolved = resolved
