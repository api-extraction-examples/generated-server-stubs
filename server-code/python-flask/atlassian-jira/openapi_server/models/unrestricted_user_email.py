from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class UnrestrictedUserEmail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id=None, email=None):  # noqa: E501
        """UnrestrictedUserEmail - a model defined in OpenAPI

        :param account_id: The account_id of this UnrestrictedUserEmail.  # noqa: E501
        :type account_id: str
        :param email: The email of this UnrestrictedUserEmail.  # noqa: E501
        :type email: str
        """
        self.openapi_types = {
            'account_id': str,
            'email': str
        }

        self.attribute_map = {
            'account_id': 'accountId',
            'email': 'email'
        }

        self._account_id = account_id
        self._email = email

    @classmethod
    def from_dict(cls, dikt) -> 'UnrestrictedUserEmail':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UnrestrictedUserEmail of this UnrestrictedUserEmail.  # noqa: E501
        :rtype: UnrestrictedUserEmail
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self) -> str:
        """Gets the account_id of this UnrestrictedUserEmail.

        The accountId of the user  # noqa: E501

        :return: The account_id of this UnrestrictedUserEmail.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id: str):
        """Sets the account_id of this UnrestrictedUserEmail.

        The accountId of the user  # noqa: E501

        :param account_id: The account_id of this UnrestrictedUserEmail.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def email(self) -> str:
        """Gets the email of this UnrestrictedUserEmail.

        The email of the user  # noqa: E501

        :return: The email of this UnrestrictedUserEmail.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this UnrestrictedUserEmail.

        The email of the user  # noqa: E501

        :param email: The email of this UnrestrictedUserEmail.
        :type email: str
        """

        self._email = email
