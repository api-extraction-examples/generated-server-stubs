from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class GroupName(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, group_id=None, name=None, _self=None):  # noqa: E501
        """GroupName - a model defined in OpenAPI

        :param group_id: The group_id of this GroupName.  # noqa: E501
        :type group_id: str
        :param name: The name of this GroupName.  # noqa: E501
        :type name: str
        :param _self: The _self of this GroupName.  # noqa: E501
        :type _self: str
        """
        self.openapi_types = {
            'group_id': str,
            'name': str,
            '_self': str
        }

        self.attribute_map = {
            'group_id': 'groupId',
            'name': 'name',
            '_self': 'self'
        }

        self._group_id = group_id
        self._name = name
        self.__self = _self

    @classmethod
    def from_dict(cls, dikt) -> 'GroupName':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GroupName of this GroupName.  # noqa: E501
        :rtype: GroupName
        """
        return util.deserialize_model(dikt, cls)

    @property
    def group_id(self) -> str:
        """Gets the group_id of this GroupName.

        The ID of the group, which uniquely identifies the group across all Atlassian products. For example, *952d12c3-5b5b-4d04-bb32-44d383afc4b2*.  # noqa: E501

        :return: The group_id of this GroupName.
        :rtype: str
        """
        return self._group_id

    @group_id.setter
    def group_id(self, group_id: str):
        """Sets the group_id of this GroupName.

        The ID of the group, which uniquely identifies the group across all Atlassian products. For example, *952d12c3-5b5b-4d04-bb32-44d383afc4b2*.  # noqa: E501

        :param group_id: The group_id of this GroupName.
        :type group_id: str
        """

        self._group_id = group_id

    @property
    def name(self) -> str:
        """Gets the name of this GroupName.

        The name of group.  # noqa: E501

        :return: The name of this GroupName.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this GroupName.

        The name of group.  # noqa: E501

        :param name: The name of this GroupName.
        :type name: str
        """

        self._name = name

    @property
    def _self(self) -> str:
        """Gets the _self of this GroupName.

        The URL for these group details.  # noqa: E501

        :return: The _self of this GroupName.
        :rtype: str
        """
        return self.__self

    @_self.setter
    def _self(self, _self: str):
        """Sets the _self of this GroupName.

        The URL for these group details.  # noqa: E501

        :param _self: The _self of this GroupName.
        :type _self: str
        """

        self.__self = _self
