from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.screen_types import ScreenTypes
from openapi_server import util

from openapi_server.models.screen_types import ScreenTypes  # noqa: E501

class ScreenSchemeDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description=None, name=None, screens=None):  # noqa: E501
        """ScreenSchemeDetails - a model defined in OpenAPI

        :param description: The description of this ScreenSchemeDetails.  # noqa: E501
        :type description: str
        :param name: The name of this ScreenSchemeDetails.  # noqa: E501
        :type name: str
        :param screens: The screens of this ScreenSchemeDetails.  # noqa: E501
        :type screens: ScreenTypes
        """
        self.openapi_types = {
            'description': str,
            'name': str,
            'screens': ScreenTypes
        }

        self.attribute_map = {
            'description': 'description',
            'name': 'name',
            'screens': 'screens'
        }

        self._description = description
        self._name = name
        self._screens = screens

    @classmethod
    def from_dict(cls, dikt) -> 'ScreenSchemeDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ScreenSchemeDetails of this ScreenSchemeDetails.  # noqa: E501
        :rtype: ScreenSchemeDetails
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self) -> str:
        """Gets the description of this ScreenSchemeDetails.

        The description of the screen scheme. The maximum length is 255 characters.  # noqa: E501

        :return: The description of this ScreenSchemeDetails.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this ScreenSchemeDetails.

        The description of the screen scheme. The maximum length is 255 characters.  # noqa: E501

        :param description: The description of this ScreenSchemeDetails.
        :type description: str
        """

        self._description = description

    @property
    def name(self) -> str:
        """Gets the name of this ScreenSchemeDetails.

        The name of the screen scheme. The name must be unique. The maximum length is 255 characters.  # noqa: E501

        :return: The name of this ScreenSchemeDetails.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this ScreenSchemeDetails.

        The name of the screen scheme. The name must be unique. The maximum length is 255 characters.  # noqa: E501

        :param name: The name of this ScreenSchemeDetails.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._name = name

    @property
    def screens(self) -> ScreenTypes:
        """Gets the screens of this ScreenSchemeDetails.


        :return: The screens of this ScreenSchemeDetails.
        :rtype: ScreenTypes
        """
        return self._screens

    @screens.setter
    def screens(self, screens: ScreenTypes):
        """Sets the screens of this ScreenSchemeDetails.


        :param screens: The screens of this ScreenSchemeDetails.
        :type screens: ScreenTypes
        """
        if screens is None:
            raise ValueError("Invalid value for `screens`, must not be `None`")  # noqa: E501

        self._screens = screens
