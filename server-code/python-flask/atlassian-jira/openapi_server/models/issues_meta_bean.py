from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.issues_jql_meta_data_bean import IssuesJqlMetaDataBean
from openapi_server import util

from openapi_server.models.issues_jql_meta_data_bean import IssuesJqlMetaDataBean  # noqa: E501

class IssuesMetaBean(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, jql=None):  # noqa: E501
        """IssuesMetaBean - a model defined in OpenAPI

        :param jql: The jql of this IssuesMetaBean.  # noqa: E501
        :type jql: IssuesJqlMetaDataBean
        """
        self.openapi_types = {
            'jql': IssuesJqlMetaDataBean
        }

        self.attribute_map = {
            'jql': 'jql'
        }

        self._jql = jql

    @classmethod
    def from_dict(cls, dikt) -> 'IssuesMetaBean':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The IssuesMetaBean of this IssuesMetaBean.  # noqa: E501
        :rtype: IssuesMetaBean
        """
        return util.deserialize_model(dikt, cls)

    @property
    def jql(self) -> IssuesJqlMetaDataBean:
        """Gets the jql of this IssuesMetaBean.


        :return: The jql of this IssuesMetaBean.
        :rtype: IssuesJqlMetaDataBean
        """
        return self._jql

    @jql.setter
    def jql(self, jql: IssuesJqlMetaDataBean):
        """Sets the jql of this IssuesMetaBean.


        :param jql: The jql of this IssuesMetaBean.
        :type jql: IssuesJqlMetaDataBean
        """

        self._jql = jql
