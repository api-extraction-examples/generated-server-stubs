from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class VersionUnresolvedIssuesCount(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, issues_count=None, issues_unresolved_count=None, _self=None):  # noqa: E501
        """VersionUnresolvedIssuesCount - a model defined in OpenAPI

        :param issues_count: The issues_count of this VersionUnresolvedIssuesCount.  # noqa: E501
        :type issues_count: int
        :param issues_unresolved_count: The issues_unresolved_count of this VersionUnresolvedIssuesCount.  # noqa: E501
        :type issues_unresolved_count: int
        :param _self: The _self of this VersionUnresolvedIssuesCount.  # noqa: E501
        :type _self: str
        """
        self.openapi_types = {
            'issues_count': int,
            'issues_unresolved_count': int,
            '_self': str
        }

        self.attribute_map = {
            'issues_count': 'issuesCount',
            'issues_unresolved_count': 'issuesUnresolvedCount',
            '_self': 'self'
        }

        self._issues_count = issues_count
        self._issues_unresolved_count = issues_unresolved_count
        self.__self = _self

    @classmethod
    def from_dict(cls, dikt) -> 'VersionUnresolvedIssuesCount':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The VersionUnresolvedIssuesCount of this VersionUnresolvedIssuesCount.  # noqa: E501
        :rtype: VersionUnresolvedIssuesCount
        """
        return util.deserialize_model(dikt, cls)

    @property
    def issues_count(self) -> int:
        """Gets the issues_count of this VersionUnresolvedIssuesCount.

        Count of issues.  # noqa: E501

        :return: The issues_count of this VersionUnresolvedIssuesCount.
        :rtype: int
        """
        return self._issues_count

    @issues_count.setter
    def issues_count(self, issues_count: int):
        """Sets the issues_count of this VersionUnresolvedIssuesCount.

        Count of issues.  # noqa: E501

        :param issues_count: The issues_count of this VersionUnresolvedIssuesCount.
        :type issues_count: int
        """

        self._issues_count = issues_count

    @property
    def issues_unresolved_count(self) -> int:
        """Gets the issues_unresolved_count of this VersionUnresolvedIssuesCount.

        Count of unresolved issues.  # noqa: E501

        :return: The issues_unresolved_count of this VersionUnresolvedIssuesCount.
        :rtype: int
        """
        return self._issues_unresolved_count

    @issues_unresolved_count.setter
    def issues_unresolved_count(self, issues_unresolved_count: int):
        """Sets the issues_unresolved_count of this VersionUnresolvedIssuesCount.

        Count of unresolved issues.  # noqa: E501

        :param issues_unresolved_count: The issues_unresolved_count of this VersionUnresolvedIssuesCount.
        :type issues_unresolved_count: int
        """

        self._issues_unresolved_count = issues_unresolved_count

    @property
    def _self(self) -> str:
        """Gets the _self of this VersionUnresolvedIssuesCount.

        The URL of these count details.  # noqa: E501

        :return: The _self of this VersionUnresolvedIssuesCount.
        :rtype: str
        """
        return self.__self

    @_self.setter
    def _self(self, _self: str):
        """Sets the _self of this VersionUnresolvedIssuesCount.

        The URL of these count details.  # noqa: E501

        :param _self: The _self of this VersionUnresolvedIssuesCount.
        :type _self: str
        """

        self.__self = _self
