from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.issue_type_details_scope import IssueTypeDetailsScope
from openapi_server import util

from openapi_server.models.issue_type_details_scope import IssueTypeDetailsScope  # noqa: E501

class IssueTypeDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, avatar_id=None, description=None, entity_id=None, hierarchy_level=None, icon_url=None, id=None, name=None, scope=None, _self=None, subtask=None):  # noqa: E501
        """IssueTypeDetails - a model defined in OpenAPI

        :param avatar_id: The avatar_id of this IssueTypeDetails.  # noqa: E501
        :type avatar_id: int
        :param description: The description of this IssueTypeDetails.  # noqa: E501
        :type description: str
        :param entity_id: The entity_id of this IssueTypeDetails.  # noqa: E501
        :type entity_id: str
        :param hierarchy_level: The hierarchy_level of this IssueTypeDetails.  # noqa: E501
        :type hierarchy_level: int
        :param icon_url: The icon_url of this IssueTypeDetails.  # noqa: E501
        :type icon_url: str
        :param id: The id of this IssueTypeDetails.  # noqa: E501
        :type id: str
        :param name: The name of this IssueTypeDetails.  # noqa: E501
        :type name: str
        :param scope: The scope of this IssueTypeDetails.  # noqa: E501
        :type scope: IssueTypeDetailsScope
        :param _self: The _self of this IssueTypeDetails.  # noqa: E501
        :type _self: str
        :param subtask: The subtask of this IssueTypeDetails.  # noqa: E501
        :type subtask: bool
        """
        self.openapi_types = {
            'avatar_id': int,
            'description': str,
            'entity_id': str,
            'hierarchy_level': int,
            'icon_url': str,
            'id': str,
            'name': str,
            'scope': IssueTypeDetailsScope,
            '_self': str,
            'subtask': bool
        }

        self.attribute_map = {
            'avatar_id': 'avatarId',
            'description': 'description',
            'entity_id': 'entityId',
            'hierarchy_level': 'hierarchyLevel',
            'icon_url': 'iconUrl',
            'id': 'id',
            'name': 'name',
            'scope': 'scope',
            '_self': 'self',
            'subtask': 'subtask'
        }

        self._avatar_id = avatar_id
        self._description = description
        self._entity_id = entity_id
        self._hierarchy_level = hierarchy_level
        self._icon_url = icon_url
        self._id = id
        self._name = name
        self._scope = scope
        self.__self = _self
        self._subtask = subtask

    @classmethod
    def from_dict(cls, dikt) -> 'IssueTypeDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The IssueTypeDetails of this IssueTypeDetails.  # noqa: E501
        :rtype: IssueTypeDetails
        """
        return util.deserialize_model(dikt, cls)

    @property
    def avatar_id(self) -> int:
        """Gets the avatar_id of this IssueTypeDetails.

        The ID of the issue type's avatar.  # noqa: E501

        :return: The avatar_id of this IssueTypeDetails.
        :rtype: int
        """
        return self._avatar_id

    @avatar_id.setter
    def avatar_id(self, avatar_id: int):
        """Sets the avatar_id of this IssueTypeDetails.

        The ID of the issue type's avatar.  # noqa: E501

        :param avatar_id: The avatar_id of this IssueTypeDetails.
        :type avatar_id: int
        """

        self._avatar_id = avatar_id

    @property
    def description(self) -> str:
        """Gets the description of this IssueTypeDetails.

        The description of the issue type.  # noqa: E501

        :return: The description of this IssueTypeDetails.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this IssueTypeDetails.

        The description of the issue type.  # noqa: E501

        :param description: The description of this IssueTypeDetails.
        :type description: str
        """

        self._description = description

    @property
    def entity_id(self) -> str:
        """Gets the entity_id of this IssueTypeDetails.

        Unique ID for next-gen projects.  # noqa: E501

        :return: The entity_id of this IssueTypeDetails.
        :rtype: str
        """
        return self._entity_id

    @entity_id.setter
    def entity_id(self, entity_id: str):
        """Sets the entity_id of this IssueTypeDetails.

        Unique ID for next-gen projects.  # noqa: E501

        :param entity_id: The entity_id of this IssueTypeDetails.
        :type entity_id: str
        """

        self._entity_id = entity_id

    @property
    def hierarchy_level(self) -> int:
        """Gets the hierarchy_level of this IssueTypeDetails.

        Hierarchy level of the issue type.  # noqa: E501

        :return: The hierarchy_level of this IssueTypeDetails.
        :rtype: int
        """
        return self._hierarchy_level

    @hierarchy_level.setter
    def hierarchy_level(self, hierarchy_level: int):
        """Sets the hierarchy_level of this IssueTypeDetails.

        Hierarchy level of the issue type.  # noqa: E501

        :param hierarchy_level: The hierarchy_level of this IssueTypeDetails.
        :type hierarchy_level: int
        """

        self._hierarchy_level = hierarchy_level

    @property
    def icon_url(self) -> str:
        """Gets the icon_url of this IssueTypeDetails.

        The URL of the issue type's avatar.  # noqa: E501

        :return: The icon_url of this IssueTypeDetails.
        :rtype: str
        """
        return self._icon_url

    @icon_url.setter
    def icon_url(self, icon_url: str):
        """Sets the icon_url of this IssueTypeDetails.

        The URL of the issue type's avatar.  # noqa: E501

        :param icon_url: The icon_url of this IssueTypeDetails.
        :type icon_url: str
        """

        self._icon_url = icon_url

    @property
    def id(self) -> str:
        """Gets the id of this IssueTypeDetails.

        The ID of the issue type.  # noqa: E501

        :return: The id of this IssueTypeDetails.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this IssueTypeDetails.

        The ID of the issue type.  # noqa: E501

        :param id: The id of this IssueTypeDetails.
        :type id: str
        """

        self._id = id

    @property
    def name(self) -> str:
        """Gets the name of this IssueTypeDetails.

        The name of the issue type.  # noqa: E501

        :return: The name of this IssueTypeDetails.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this IssueTypeDetails.

        The name of the issue type.  # noqa: E501

        :param name: The name of this IssueTypeDetails.
        :type name: str
        """

        self._name = name

    @property
    def scope(self) -> IssueTypeDetailsScope:
        """Gets the scope of this IssueTypeDetails.


        :return: The scope of this IssueTypeDetails.
        :rtype: IssueTypeDetailsScope
        """
        return self._scope

    @scope.setter
    def scope(self, scope: IssueTypeDetailsScope):
        """Sets the scope of this IssueTypeDetails.


        :param scope: The scope of this IssueTypeDetails.
        :type scope: IssueTypeDetailsScope
        """

        self._scope = scope

    @property
    def _self(self) -> str:
        """Gets the _self of this IssueTypeDetails.

        The URL of these issue type details.  # noqa: E501

        :return: The _self of this IssueTypeDetails.
        :rtype: str
        """
        return self.__self

    @_self.setter
    def _self(self, _self: str):
        """Sets the _self of this IssueTypeDetails.

        The URL of these issue type details.  # noqa: E501

        :param _self: The _self of this IssueTypeDetails.
        :type _self: str
        """

        self.__self = _self

    @property
    def subtask(self) -> bool:
        """Gets the subtask of this IssueTypeDetails.

        Whether this issue type is used to create subtasks.  # noqa: E501

        :return: The subtask of this IssueTypeDetails.
        :rtype: bool
        """
        return self._subtask

    @subtask.setter
    def subtask(self, subtask: bool):
        """Sets the subtask of this IssueTypeDetails.

        Whether this issue type is used to create subtasks.  # noqa: E501

        :param subtask: The subtask of this IssueTypeDetails.
        :type subtask: bool
        """

        self._subtask = subtask
