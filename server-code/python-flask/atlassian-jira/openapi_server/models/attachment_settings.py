from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class AttachmentSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enabled=None, upload_limit=None):  # noqa: E501
        """AttachmentSettings - a model defined in OpenAPI

        :param enabled: The enabled of this AttachmentSettings.  # noqa: E501
        :type enabled: bool
        :param upload_limit: The upload_limit of this AttachmentSettings.  # noqa: E501
        :type upload_limit: int
        """
        self.openapi_types = {
            'enabled': bool,
            'upload_limit': int
        }

        self.attribute_map = {
            'enabled': 'enabled',
            'upload_limit': 'uploadLimit'
        }

        self._enabled = enabled
        self._upload_limit = upload_limit

    @classmethod
    def from_dict(cls, dikt) -> 'AttachmentSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AttachmentSettings of this AttachmentSettings.  # noqa: E501
        :rtype: AttachmentSettings
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enabled(self) -> bool:
        """Gets the enabled of this AttachmentSettings.

        Whether the ability to add attachments is enabled.  # noqa: E501

        :return: The enabled of this AttachmentSettings.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled: bool):
        """Sets the enabled of this AttachmentSettings.

        Whether the ability to add attachments is enabled.  # noqa: E501

        :param enabled: The enabled of this AttachmentSettings.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def upload_limit(self) -> int:
        """Gets the upload_limit of this AttachmentSettings.

        The maximum size of attachments permitted, in bytes.  # noqa: E501

        :return: The upload_limit of this AttachmentSettings.
        :rtype: int
        """
        return self._upload_limit

    @upload_limit.setter
    def upload_limit(self, upload_limit: int):
        """Sets the upload_limit of this AttachmentSettings.

        The maximum size of attachments permitted, in bytes.  # noqa: E501

        :param upload_limit: The upload_limit of this AttachmentSettings.
        :type upload_limit: int
        """

        self._upload_limit = upload_limit
