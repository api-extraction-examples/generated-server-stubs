from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class AttachmentArchiveEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, abbreviated_name=None, entry_index=None, media_type=None, name=None, size=None):  # noqa: E501
        """AttachmentArchiveEntry - a model defined in OpenAPI

        :param abbreviated_name: The abbreviated_name of this AttachmentArchiveEntry.  # noqa: E501
        :type abbreviated_name: str
        :param entry_index: The entry_index of this AttachmentArchiveEntry.  # noqa: E501
        :type entry_index: int
        :param media_type: The media_type of this AttachmentArchiveEntry.  # noqa: E501
        :type media_type: str
        :param name: The name of this AttachmentArchiveEntry.  # noqa: E501
        :type name: str
        :param size: The size of this AttachmentArchiveEntry.  # noqa: E501
        :type size: int
        """
        self.openapi_types = {
            'abbreviated_name': str,
            'entry_index': int,
            'media_type': str,
            'name': str,
            'size': int
        }

        self.attribute_map = {
            'abbreviated_name': 'abbreviatedName',
            'entry_index': 'entryIndex',
            'media_type': 'mediaType',
            'name': 'name',
            'size': 'size'
        }

        self._abbreviated_name = abbreviated_name
        self._entry_index = entry_index
        self._media_type = media_type
        self._name = name
        self._size = size

    @classmethod
    def from_dict(cls, dikt) -> 'AttachmentArchiveEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AttachmentArchiveEntry of this AttachmentArchiveEntry.  # noqa: E501
        :rtype: AttachmentArchiveEntry
        """
        return util.deserialize_model(dikt, cls)

    @property
    def abbreviated_name(self) -> str:
        """Gets the abbreviated_name of this AttachmentArchiveEntry.


        :return: The abbreviated_name of this AttachmentArchiveEntry.
        :rtype: str
        """
        return self._abbreviated_name

    @abbreviated_name.setter
    def abbreviated_name(self, abbreviated_name: str):
        """Sets the abbreviated_name of this AttachmentArchiveEntry.


        :param abbreviated_name: The abbreviated_name of this AttachmentArchiveEntry.
        :type abbreviated_name: str
        """

        self._abbreviated_name = abbreviated_name

    @property
    def entry_index(self) -> int:
        """Gets the entry_index of this AttachmentArchiveEntry.


        :return: The entry_index of this AttachmentArchiveEntry.
        :rtype: int
        """
        return self._entry_index

    @entry_index.setter
    def entry_index(self, entry_index: int):
        """Sets the entry_index of this AttachmentArchiveEntry.


        :param entry_index: The entry_index of this AttachmentArchiveEntry.
        :type entry_index: int
        """

        self._entry_index = entry_index

    @property
    def media_type(self) -> str:
        """Gets the media_type of this AttachmentArchiveEntry.


        :return: The media_type of this AttachmentArchiveEntry.
        :rtype: str
        """
        return self._media_type

    @media_type.setter
    def media_type(self, media_type: str):
        """Sets the media_type of this AttachmentArchiveEntry.


        :param media_type: The media_type of this AttachmentArchiveEntry.
        :type media_type: str
        """

        self._media_type = media_type

    @property
    def name(self) -> str:
        """Gets the name of this AttachmentArchiveEntry.


        :return: The name of this AttachmentArchiveEntry.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this AttachmentArchiveEntry.


        :param name: The name of this AttachmentArchiveEntry.
        :type name: str
        """

        self._name = name

    @property
    def size(self) -> int:
        """Gets the size of this AttachmentArchiveEntry.


        :return: The size of this AttachmentArchiveEntry.
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size: int):
        """Sets the size of this AttachmentArchiveEntry.


        :param size: The size of this AttachmentArchiveEntry.
        :type size: int
        """

        self._size = size
