from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.bulk_project_permission_grants import BulkProjectPermissionGrants
from openapi_server import util

from openapi_server.models.bulk_project_permission_grants import BulkProjectPermissionGrants  # noqa: E501

class BulkPermissionGrants(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, global_permissions=None, project_permissions=None):  # noqa: E501
        """BulkPermissionGrants - a model defined in OpenAPI

        :param global_permissions: The global_permissions of this BulkPermissionGrants.  # noqa: E501
        :type global_permissions: list[str]
        :param project_permissions: The project_permissions of this BulkPermissionGrants.  # noqa: E501
        :type project_permissions: list[BulkProjectPermissionGrants]
        """
        self.openapi_types = {
            'global_permissions': list[str],
            'project_permissions': list[BulkProjectPermissionGrants]
        }

        self.attribute_map = {
            'global_permissions': 'globalPermissions',
            'project_permissions': 'projectPermissions'
        }

        self._global_permissions = global_permissions
        self._project_permissions = project_permissions

    @classmethod
    def from_dict(cls, dikt) -> 'BulkPermissionGrants':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BulkPermissionGrants of this BulkPermissionGrants.  # noqa: E501
        :rtype: BulkPermissionGrants
        """
        return util.deserialize_model(dikt, cls)

    @property
    def global_permissions(self) -> list[str]:
        """Gets the global_permissions of this BulkPermissionGrants.

        List of permissions granted to the user.  # noqa: E501

        :return: The global_permissions of this BulkPermissionGrants.
        :rtype: list[str]
        """
        return self._global_permissions

    @global_permissions.setter
    def global_permissions(self, global_permissions: list[str]):
        """Sets the global_permissions of this BulkPermissionGrants.

        List of permissions granted to the user.  # noqa: E501

        :param global_permissions: The global_permissions of this BulkPermissionGrants.
        :type global_permissions: list[str]
        """
        if global_permissions is None:
            raise ValueError("Invalid value for `global_permissions`, must not be `None`")  # noqa: E501

        self._global_permissions = global_permissions

    @property
    def project_permissions(self) -> list[BulkProjectPermissionGrants]:
        """Gets the project_permissions of this BulkPermissionGrants.

        List of project permissions and the projects and issues those permissions provide access to.  # noqa: E501

        :return: The project_permissions of this BulkPermissionGrants.
        :rtype: list[BulkProjectPermissionGrants]
        """
        return self._project_permissions

    @project_permissions.setter
    def project_permissions(self, project_permissions: list[BulkProjectPermissionGrants]):
        """Sets the project_permissions of this BulkPermissionGrants.

        List of project permissions and the projects and issues those permissions provide access to.  # noqa: E501

        :param project_permissions: The project_permissions of this BulkPermissionGrants.
        :type project_permissions: list[BulkProjectPermissionGrants]
        """
        if project_permissions is None:
            raise ValueError("Invalid value for `project_permissions`, must not be `None`")  # noqa: E501

        self._project_permissions = project_permissions
