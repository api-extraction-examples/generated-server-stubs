from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class CustomFieldContextDefaultValueForgeGroupField(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, context_id=None, group_id=None, type=None):  # noqa: E501
        """CustomFieldContextDefaultValueForgeGroupField - a model defined in OpenAPI

        :param context_id: The context_id of this CustomFieldContextDefaultValueForgeGroupField.  # noqa: E501
        :type context_id: str
        :param group_id: The group_id of this CustomFieldContextDefaultValueForgeGroupField.  # noqa: E501
        :type group_id: str
        :param type: The type of this CustomFieldContextDefaultValueForgeGroupField.  # noqa: E501
        :type type: str
        """
        self.openapi_types = {
            'context_id': str,
            'group_id': str,
            'type': str
        }

        self.attribute_map = {
            'context_id': 'contextId',
            'group_id': 'groupId',
            'type': 'type'
        }

        self._context_id = context_id
        self._group_id = group_id
        self._type = type

    @classmethod
    def from_dict(cls, dikt) -> 'CustomFieldContextDefaultValueForgeGroupField':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CustomFieldContextDefaultValueForgeGroupField of this CustomFieldContextDefaultValueForgeGroupField.  # noqa: E501
        :rtype: CustomFieldContextDefaultValueForgeGroupField
        """
        return util.deserialize_model(dikt, cls)

    @property
    def context_id(self) -> str:
        """Gets the context_id of this CustomFieldContextDefaultValueForgeGroupField.

        The ID of the context.  # noqa: E501

        :return: The context_id of this CustomFieldContextDefaultValueForgeGroupField.
        :rtype: str
        """
        return self._context_id

    @context_id.setter
    def context_id(self, context_id: str):
        """Sets the context_id of this CustomFieldContextDefaultValueForgeGroupField.

        The ID of the context.  # noqa: E501

        :param context_id: The context_id of this CustomFieldContextDefaultValueForgeGroupField.
        :type context_id: str
        """
        if context_id is None:
            raise ValueError("Invalid value for `context_id`, must not be `None`")  # noqa: E501

        self._context_id = context_id

    @property
    def group_id(self) -> str:
        """Gets the group_id of this CustomFieldContextDefaultValueForgeGroupField.

        The ID of the the default group.  # noqa: E501

        :return: The group_id of this CustomFieldContextDefaultValueForgeGroupField.
        :rtype: str
        """
        return self._group_id

    @group_id.setter
    def group_id(self, group_id: str):
        """Sets the group_id of this CustomFieldContextDefaultValueForgeGroupField.

        The ID of the the default group.  # noqa: E501

        :param group_id: The group_id of this CustomFieldContextDefaultValueForgeGroupField.
        :type group_id: str
        """
        if group_id is None:
            raise ValueError("Invalid value for `group_id`, must not be `None`")  # noqa: E501

        self._group_id = group_id

    @property
    def type(self) -> str:
        """Gets the type of this CustomFieldContextDefaultValueForgeGroupField.


        :return: The type of this CustomFieldContextDefaultValueForgeGroupField.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this CustomFieldContextDefaultValueForgeGroupField.


        :param type: The type of this CustomFieldContextDefaultValueForgeGroupField.
        :type type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")  # noqa: E501

        self._type = type
