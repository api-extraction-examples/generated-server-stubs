from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class UserMigrationBean(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id=None, key=None, username=None):  # noqa: E501
        """UserMigrationBean - a model defined in OpenAPI

        :param account_id: The account_id of this UserMigrationBean.  # noqa: E501
        :type account_id: str
        :param key: The key of this UserMigrationBean.  # noqa: E501
        :type key: str
        :param username: The username of this UserMigrationBean.  # noqa: E501
        :type username: str
        """
        self.openapi_types = {
            'account_id': str,
            'key': str,
            'username': str
        }

        self.attribute_map = {
            'account_id': 'accountId',
            'key': 'key',
            'username': 'username'
        }

        self._account_id = account_id
        self._key = key
        self._username = username

    @classmethod
    def from_dict(cls, dikt) -> 'UserMigrationBean':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UserMigrationBean of this UserMigrationBean.  # noqa: E501
        :rtype: UserMigrationBean
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self) -> str:
        """Gets the account_id of this UserMigrationBean.


        :return: The account_id of this UserMigrationBean.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id: str):
        """Sets the account_id of this UserMigrationBean.


        :param account_id: The account_id of this UserMigrationBean.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def key(self) -> str:
        """Gets the key of this UserMigrationBean.


        :return: The key of this UserMigrationBean.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key: str):
        """Sets the key of this UserMigrationBean.


        :param key: The key of this UserMigrationBean.
        :type key: str
        """

        self._key = key

    @property
    def username(self) -> str:
        """Gets the username of this UserMigrationBean.


        :return: The username of this UserMigrationBean.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username: str):
        """Sets the username of this UserMigrationBean.


        :param username: The username of this UserMigrationBean.
        :type username: str
        """

        self._username = username
