from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.project_feature import ProjectFeature
from openapi_server import util

from openapi_server.models.project_feature import ProjectFeature  # noqa: E501

class ContainerForProjectFeatures(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, features=None):  # noqa: E501
        """ContainerForProjectFeatures - a model defined in OpenAPI

        :param features: The features of this ContainerForProjectFeatures.  # noqa: E501
        :type features: List[ProjectFeature]
        """
        self.openapi_types = {
            'features': List[ProjectFeature]
        }

        self.attribute_map = {
            'features': 'features'
        }

        self._features = features

    @classmethod
    def from_dict(cls, dikt) -> 'ContainerForProjectFeatures':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ContainerForProjectFeatures of this ContainerForProjectFeatures.  # noqa: E501
        :rtype: ContainerForProjectFeatures
        """
        return util.deserialize_model(dikt, cls)

    @property
    def features(self) -> List[ProjectFeature]:
        """Gets the features of this ContainerForProjectFeatures.

        The project features.  # noqa: E501

        :return: The features of this ContainerForProjectFeatures.
        :rtype: List[ProjectFeature]
        """
        return self._features

    @features.setter
    def features(self, features: List[ProjectFeature]):
        """Sets the features of this ContainerForProjectFeatures.

        The project features.  # noqa: E501

        :param features: The features of this ContainerForProjectFeatures.
        :type features: List[ProjectFeature]
        """

        self._features = features
