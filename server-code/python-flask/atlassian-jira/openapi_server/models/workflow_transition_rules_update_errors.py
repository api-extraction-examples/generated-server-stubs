from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.workflow_transition_rules_update_error_details import WorkflowTransitionRulesUpdateErrorDetails
from openapi_server import util

from openapi_server.models.workflow_transition_rules_update_error_details import WorkflowTransitionRulesUpdateErrorDetails  # noqa: E501

class WorkflowTransitionRulesUpdateErrors(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, update_results=None):  # noqa: E501
        """WorkflowTransitionRulesUpdateErrors - a model defined in OpenAPI

        :param update_results: The update_results of this WorkflowTransitionRulesUpdateErrors.  # noqa: E501
        :type update_results: List[WorkflowTransitionRulesUpdateErrorDetails]
        """
        self.openapi_types = {
            'update_results': List[WorkflowTransitionRulesUpdateErrorDetails]
        }

        self.attribute_map = {
            'update_results': 'updateResults'
        }

        self._update_results = update_results

    @classmethod
    def from_dict(cls, dikt) -> 'WorkflowTransitionRulesUpdateErrors':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The WorkflowTransitionRulesUpdateErrors of this WorkflowTransitionRulesUpdateErrors.  # noqa: E501
        :rtype: WorkflowTransitionRulesUpdateErrors
        """
        return util.deserialize_model(dikt, cls)

    @property
    def update_results(self) -> List[WorkflowTransitionRulesUpdateErrorDetails]:
        """Gets the update_results of this WorkflowTransitionRulesUpdateErrors.

        A list of workflows.  # noqa: E501

        :return: The update_results of this WorkflowTransitionRulesUpdateErrors.
        :rtype: List[WorkflowTransitionRulesUpdateErrorDetails]
        """
        return self._update_results

    @update_results.setter
    def update_results(self, update_results: List[WorkflowTransitionRulesUpdateErrorDetails]):
        """Sets the update_results of this WorkflowTransitionRulesUpdateErrors.

        A list of workflows.  # noqa: E501

        :param update_results: The update_results of this WorkflowTransitionRulesUpdateErrors.
        :type update_results: List[WorkflowTransitionRulesUpdateErrorDetails]
        """
        if update_results is None:
            raise ValueError("Invalid value for `update_results`, must not be `None`")  # noqa: E501

        self._update_results = update_results
