from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class ChangedValueBean(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, changed_from=None, changed_to=None, field_name=None):  # noqa: E501
        """ChangedValueBean - a model defined in OpenAPI

        :param changed_from: The changed_from of this ChangedValueBean.  # noqa: E501
        :type changed_from: str
        :param changed_to: The changed_to of this ChangedValueBean.  # noqa: E501
        :type changed_to: str
        :param field_name: The field_name of this ChangedValueBean.  # noqa: E501
        :type field_name: str
        """
        self.openapi_types = {
            'changed_from': str,
            'changed_to': str,
            'field_name': str
        }

        self.attribute_map = {
            'changed_from': 'changedFrom',
            'changed_to': 'changedTo',
            'field_name': 'fieldName'
        }

        self._changed_from = changed_from
        self._changed_to = changed_to
        self._field_name = field_name

    @classmethod
    def from_dict(cls, dikt) -> 'ChangedValueBean':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ChangedValueBean of this ChangedValueBean.  # noqa: E501
        :rtype: ChangedValueBean
        """
        return util.deserialize_model(dikt, cls)

    @property
    def changed_from(self) -> str:
        """Gets the changed_from of this ChangedValueBean.

        The value of the field before the change.  # noqa: E501

        :return: The changed_from of this ChangedValueBean.
        :rtype: str
        """
        return self._changed_from

    @changed_from.setter
    def changed_from(self, changed_from: str):
        """Sets the changed_from of this ChangedValueBean.

        The value of the field before the change.  # noqa: E501

        :param changed_from: The changed_from of this ChangedValueBean.
        :type changed_from: str
        """

        self._changed_from = changed_from

    @property
    def changed_to(self) -> str:
        """Gets the changed_to of this ChangedValueBean.

        The value of the field after the change.  # noqa: E501

        :return: The changed_to of this ChangedValueBean.
        :rtype: str
        """
        return self._changed_to

    @changed_to.setter
    def changed_to(self, changed_to: str):
        """Sets the changed_to of this ChangedValueBean.

        The value of the field after the change.  # noqa: E501

        :param changed_to: The changed_to of this ChangedValueBean.
        :type changed_to: str
        """

        self._changed_to = changed_to

    @property
    def field_name(self) -> str:
        """Gets the field_name of this ChangedValueBean.

        The name of the field changed.  # noqa: E501

        :return: The field_name of this ChangedValueBean.
        :rtype: str
        """
        return self._field_name

    @field_name.setter
    def field_name(self, field_name: str):
        """Sets the field_name of this ChangedValueBean.

        The name of the field changed.  # noqa: E501

        :param field_name: The field_name of this ChangedValueBean.
        :type field_name: str
        """

        self._field_name = field_name
