from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class KeywordOperand(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, keyword=None):  # noqa: E501
        """KeywordOperand - a model defined in OpenAPI

        :param keyword: The keyword of this KeywordOperand.  # noqa: E501
        :type keyword: str
        """
        self.openapi_types = {
            'keyword': str
        }

        self.attribute_map = {
            'keyword': 'keyword'
        }

        self._keyword = keyword

    @classmethod
    def from_dict(cls, dikt) -> 'KeywordOperand':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The KeywordOperand of this KeywordOperand.  # noqa: E501
        :rtype: KeywordOperand
        """
        return util.deserialize_model(dikt, cls)

    @property
    def keyword(self) -> str:
        """Gets the keyword of this KeywordOperand.

        The keyword that is the operand value.  # noqa: E501

        :return: The keyword of this KeywordOperand.
        :rtype: str
        """
        return self._keyword

    @keyword.setter
    def keyword(self, keyword: str):
        """Sets the keyword of this KeywordOperand.

        The keyword that is the operand value.  # noqa: E501

        :param keyword: The keyword of this KeywordOperand.
        :type keyword: str
        """
        allowed_values = ["empty"]  # noqa: E501
        if keyword not in allowed_values:
            raise ValueError(
                "Invalid value for `keyword` ({0}), must be one of {1}"
                .format(keyword, allowed_values)
            )

        self._keyword = keyword
