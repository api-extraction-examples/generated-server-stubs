from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.associated_item_bean import AssociatedItemBean
from openapi_server.models.changed_value_bean import ChangedValueBean
from openapi_server import util

from openapi_server.models.associated_item_bean import AssociatedItemBean  # noqa: E501
from openapi_server.models.changed_value_bean import ChangedValueBean  # noqa: E501

class AuditRecordBean(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, associated_items=None, author_key=None, category=None, changed_values=None, created=None, description=None, event_source=None, id=None, object_item=None, remote_address=None, summary=None):  # noqa: E501
        """AuditRecordBean - a model defined in OpenAPI

        :param associated_items: The associated_items of this AuditRecordBean.  # noqa: E501
        :type associated_items: List[AssociatedItemBean]
        :param author_key: The author_key of this AuditRecordBean.  # noqa: E501
        :type author_key: str
        :param category: The category of this AuditRecordBean.  # noqa: E501
        :type category: str
        :param changed_values: The changed_values of this AuditRecordBean.  # noqa: E501
        :type changed_values: List[ChangedValueBean]
        :param created: The created of this AuditRecordBean.  # noqa: E501
        :type created: datetime
        :param description: The description of this AuditRecordBean.  # noqa: E501
        :type description: str
        :param event_source: The event_source of this AuditRecordBean.  # noqa: E501
        :type event_source: str
        :param id: The id of this AuditRecordBean.  # noqa: E501
        :type id: int
        :param object_item: The object_item of this AuditRecordBean.  # noqa: E501
        :type object_item: AssociatedItemBean
        :param remote_address: The remote_address of this AuditRecordBean.  # noqa: E501
        :type remote_address: str
        :param summary: The summary of this AuditRecordBean.  # noqa: E501
        :type summary: str
        """
        self.openapi_types = {
            'associated_items': List[AssociatedItemBean],
            'author_key': str,
            'category': str,
            'changed_values': List[ChangedValueBean],
            'created': datetime,
            'description': str,
            'event_source': str,
            'id': int,
            'object_item': AssociatedItemBean,
            'remote_address': str,
            'summary': str
        }

        self.attribute_map = {
            'associated_items': 'associatedItems',
            'author_key': 'authorKey',
            'category': 'category',
            'changed_values': 'changedValues',
            'created': 'created',
            'description': 'description',
            'event_source': 'eventSource',
            'id': 'id',
            'object_item': 'objectItem',
            'remote_address': 'remoteAddress',
            'summary': 'summary'
        }

        self._associated_items = associated_items
        self._author_key = author_key
        self._category = category
        self._changed_values = changed_values
        self._created = created
        self._description = description
        self._event_source = event_source
        self._id = id
        self._object_item = object_item
        self._remote_address = remote_address
        self._summary = summary

    @classmethod
    def from_dict(cls, dikt) -> 'AuditRecordBean':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AuditRecordBean of this AuditRecordBean.  # noqa: E501
        :rtype: AuditRecordBean
        """
        return util.deserialize_model(dikt, cls)

    @property
    def associated_items(self) -> List[AssociatedItemBean]:
        """Gets the associated_items of this AuditRecordBean.

        The list of items associated with the changed record.  # noqa: E501

        :return: The associated_items of this AuditRecordBean.
        :rtype: List[AssociatedItemBean]
        """
        return self._associated_items

    @associated_items.setter
    def associated_items(self, associated_items: List[AssociatedItemBean]):
        """Sets the associated_items of this AuditRecordBean.

        The list of items associated with the changed record.  # noqa: E501

        :param associated_items: The associated_items of this AuditRecordBean.
        :type associated_items: List[AssociatedItemBean]
        """

        self._associated_items = associated_items

    @property
    def author_key(self) -> str:
        """Gets the author_key of this AuditRecordBean.

        Deprecated, use `authorAccountId` instead. The key of the user who created the audit record.  # noqa: E501

        :return: The author_key of this AuditRecordBean.
        :rtype: str
        """
        return self._author_key

    @author_key.setter
    def author_key(self, author_key: str):
        """Sets the author_key of this AuditRecordBean.

        Deprecated, use `authorAccountId` instead. The key of the user who created the audit record.  # noqa: E501

        :param author_key: The author_key of this AuditRecordBean.
        :type author_key: str
        """

        self._author_key = author_key

    @property
    def category(self) -> str:
        """Gets the category of this AuditRecordBean.

        The category of the audit record. For a list of these categories, see the help article [Auditing in Jira applications](https://confluence.atlassian.com/x/noXKM).  # noqa: E501

        :return: The category of this AuditRecordBean.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category: str):
        """Sets the category of this AuditRecordBean.

        The category of the audit record. For a list of these categories, see the help article [Auditing in Jira applications](https://confluence.atlassian.com/x/noXKM).  # noqa: E501

        :param category: The category of this AuditRecordBean.
        :type category: str
        """

        self._category = category

    @property
    def changed_values(self) -> List[ChangedValueBean]:
        """Gets the changed_values of this AuditRecordBean.

        The list of values changed in the record event.  # noqa: E501

        :return: The changed_values of this AuditRecordBean.
        :rtype: List[ChangedValueBean]
        """
        return self._changed_values

    @changed_values.setter
    def changed_values(self, changed_values: List[ChangedValueBean]):
        """Sets the changed_values of this AuditRecordBean.

        The list of values changed in the record event.  # noqa: E501

        :param changed_values: The changed_values of this AuditRecordBean.
        :type changed_values: List[ChangedValueBean]
        """

        self._changed_values = changed_values

    @property
    def created(self) -> datetime:
        """Gets the created of this AuditRecordBean.

        The date and time on which the audit record was created.  # noqa: E501

        :return: The created of this AuditRecordBean.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created: datetime):
        """Sets the created of this AuditRecordBean.

        The date and time on which the audit record was created.  # noqa: E501

        :param created: The created of this AuditRecordBean.
        :type created: datetime
        """

        self._created = created

    @property
    def description(self) -> str:
        """Gets the description of this AuditRecordBean.

        The description of the audit record.  # noqa: E501

        :return: The description of this AuditRecordBean.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this AuditRecordBean.

        The description of the audit record.  # noqa: E501

        :param description: The description of this AuditRecordBean.
        :type description: str
        """

        self._description = description

    @property
    def event_source(self) -> str:
        """Gets the event_source of this AuditRecordBean.

        The event the audit record originated from.  # noqa: E501

        :return: The event_source of this AuditRecordBean.
        :rtype: str
        """
        return self._event_source

    @event_source.setter
    def event_source(self, event_source: str):
        """Sets the event_source of this AuditRecordBean.

        The event the audit record originated from.  # noqa: E501

        :param event_source: The event_source of this AuditRecordBean.
        :type event_source: str
        """

        self._event_source = event_source

    @property
    def id(self) -> int:
        """Gets the id of this AuditRecordBean.

        The ID of the audit record.  # noqa: E501

        :return: The id of this AuditRecordBean.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this AuditRecordBean.

        The ID of the audit record.  # noqa: E501

        :param id: The id of this AuditRecordBean.
        :type id: int
        """

        self._id = id

    @property
    def object_item(self) -> AssociatedItemBean:
        """Gets the object_item of this AuditRecordBean.


        :return: The object_item of this AuditRecordBean.
        :rtype: AssociatedItemBean
        """
        return self._object_item

    @object_item.setter
    def object_item(self, object_item: AssociatedItemBean):
        """Sets the object_item of this AuditRecordBean.


        :param object_item: The object_item of this AuditRecordBean.
        :type object_item: AssociatedItemBean
        """

        self._object_item = object_item

    @property
    def remote_address(self) -> str:
        """Gets the remote_address of this AuditRecordBean.

        The URL of the computer where the creation of the audit record was initiated.  # noqa: E501

        :return: The remote_address of this AuditRecordBean.
        :rtype: str
        """
        return self._remote_address

    @remote_address.setter
    def remote_address(self, remote_address: str):
        """Sets the remote_address of this AuditRecordBean.

        The URL of the computer where the creation of the audit record was initiated.  # noqa: E501

        :param remote_address: The remote_address of this AuditRecordBean.
        :type remote_address: str
        """

        self._remote_address = remote_address

    @property
    def summary(self) -> str:
        """Gets the summary of this AuditRecordBean.

        The summary of the audit record.  # noqa: E501

        :return: The summary of this AuditRecordBean.
        :rtype: str
        """
        return self._summary

    @summary.setter
    def summary(self, summary: str):
        """Sets the summary of this AuditRecordBean.

        The summary of the audit record.  # noqa: E501

        :param summary: The summary of this AuditRecordBean.
        :type summary: str
        """

        self._summary = summary
