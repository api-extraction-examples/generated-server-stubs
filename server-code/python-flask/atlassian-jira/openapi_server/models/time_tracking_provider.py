from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class TimeTrackingProvider(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key=None, name=None, url=None):  # noqa: E501
        """TimeTrackingProvider - a model defined in OpenAPI

        :param key: The key of this TimeTrackingProvider.  # noqa: E501
        :type key: str
        :param name: The name of this TimeTrackingProvider.  # noqa: E501
        :type name: str
        :param url: The url of this TimeTrackingProvider.  # noqa: E501
        :type url: str
        """
        self.openapi_types = {
            'key': str,
            'name': str,
            'url': str
        }

        self.attribute_map = {
            'key': 'key',
            'name': 'name',
            'url': 'url'
        }

        self._key = key
        self._name = name
        self._url = url

    @classmethod
    def from_dict(cls, dikt) -> 'TimeTrackingProvider':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TimeTrackingProvider of this TimeTrackingProvider.  # noqa: E501
        :rtype: TimeTrackingProvider
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key(self) -> str:
        """Gets the key of this TimeTrackingProvider.

        The key for the time tracking provider. For example, *JIRA*.  # noqa: E501

        :return: The key of this TimeTrackingProvider.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key: str):
        """Sets the key of this TimeTrackingProvider.

        The key for the time tracking provider. For example, *JIRA*.  # noqa: E501

        :param key: The key of this TimeTrackingProvider.
        :type key: str
        """
        if key is None:
            raise ValueError("Invalid value for `key`, must not be `None`")  # noqa: E501

        self._key = key

    @property
    def name(self) -> str:
        """Gets the name of this TimeTrackingProvider.

        The name of the time tracking provider. For example, *JIRA provided time tracking*.  # noqa: E501

        :return: The name of this TimeTrackingProvider.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this TimeTrackingProvider.

        The name of the time tracking provider. For example, *JIRA provided time tracking*.  # noqa: E501

        :param name: The name of this TimeTrackingProvider.
        :type name: str
        """

        self._name = name

    @property
    def url(self) -> str:
        """Gets the url of this TimeTrackingProvider.

        The URL of the configuration page for the time tracking provider app. For example, */example/config/url*. This property is only returned if the `adminPageKey` property is set in the module descriptor of the time tracking provider app.  # noqa: E501

        :return: The url of this TimeTrackingProvider.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url: str):
        """Sets the url of this TimeTrackingProvider.

        The URL of the configuration page for the time tracking provider app. For example, */example/config/url*. This property is only returned if the `adminPageKey` property is set in the module descriptor of the time tracking provider app.  # noqa: E501

        :param url: The url of this TimeTrackingProvider.
        :type url: str
        """

        self._url = url
