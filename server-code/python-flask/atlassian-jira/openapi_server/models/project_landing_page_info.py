from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class ProjectLandingPageInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attributes=None, board_id=None, board_name=None, project_key=None, project_type=None, queue_category=None, queue_id=None, queue_name=None, simple_board=None, simplified=None, url=None):  # noqa: E501
        """ProjectLandingPageInfo - a model defined in OpenAPI

        :param attributes: The attributes of this ProjectLandingPageInfo.  # noqa: E501
        :type attributes: Dict[str, str]
        :param board_id: The board_id of this ProjectLandingPageInfo.  # noqa: E501
        :type board_id: int
        :param board_name: The board_name of this ProjectLandingPageInfo.  # noqa: E501
        :type board_name: str
        :param project_key: The project_key of this ProjectLandingPageInfo.  # noqa: E501
        :type project_key: str
        :param project_type: The project_type of this ProjectLandingPageInfo.  # noqa: E501
        :type project_type: str
        :param queue_category: The queue_category of this ProjectLandingPageInfo.  # noqa: E501
        :type queue_category: str
        :param queue_id: The queue_id of this ProjectLandingPageInfo.  # noqa: E501
        :type queue_id: int
        :param queue_name: The queue_name of this ProjectLandingPageInfo.  # noqa: E501
        :type queue_name: str
        :param simple_board: The simple_board of this ProjectLandingPageInfo.  # noqa: E501
        :type simple_board: bool
        :param simplified: The simplified of this ProjectLandingPageInfo.  # noqa: E501
        :type simplified: bool
        :param url: The url of this ProjectLandingPageInfo.  # noqa: E501
        :type url: str
        """
        self.openapi_types = {
            'attributes': Dict[str, str],
            'board_id': int,
            'board_name': str,
            'project_key': str,
            'project_type': str,
            'queue_category': str,
            'queue_id': int,
            'queue_name': str,
            'simple_board': bool,
            'simplified': bool,
            'url': str
        }

        self.attribute_map = {
            'attributes': 'attributes',
            'board_id': 'boardId',
            'board_name': 'boardName',
            'project_key': 'projectKey',
            'project_type': 'projectType',
            'queue_category': 'queueCategory',
            'queue_id': 'queueId',
            'queue_name': 'queueName',
            'simple_board': 'simpleBoard',
            'simplified': 'simplified',
            'url': 'url'
        }

        self._attributes = attributes
        self._board_id = board_id
        self._board_name = board_name
        self._project_key = project_key
        self._project_type = project_type
        self._queue_category = queue_category
        self._queue_id = queue_id
        self._queue_name = queue_name
        self._simple_board = simple_board
        self._simplified = simplified
        self._url = url

    @classmethod
    def from_dict(cls, dikt) -> 'ProjectLandingPageInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Project_landingPageInfo of this ProjectLandingPageInfo.  # noqa: E501
        :rtype: ProjectLandingPageInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attributes(self) -> Dict[str, str]:
        """Gets the attributes of this ProjectLandingPageInfo.


        :return: The attributes of this ProjectLandingPageInfo.
        :rtype: Dict[str, str]
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes: Dict[str, str]):
        """Sets the attributes of this ProjectLandingPageInfo.


        :param attributes: The attributes of this ProjectLandingPageInfo.
        :type attributes: Dict[str, str]
        """

        self._attributes = attributes

    @property
    def board_id(self) -> int:
        """Gets the board_id of this ProjectLandingPageInfo.


        :return: The board_id of this ProjectLandingPageInfo.
        :rtype: int
        """
        return self._board_id

    @board_id.setter
    def board_id(self, board_id: int):
        """Sets the board_id of this ProjectLandingPageInfo.


        :param board_id: The board_id of this ProjectLandingPageInfo.
        :type board_id: int
        """

        self._board_id = board_id

    @property
    def board_name(self) -> str:
        """Gets the board_name of this ProjectLandingPageInfo.


        :return: The board_name of this ProjectLandingPageInfo.
        :rtype: str
        """
        return self._board_name

    @board_name.setter
    def board_name(self, board_name: str):
        """Sets the board_name of this ProjectLandingPageInfo.


        :param board_name: The board_name of this ProjectLandingPageInfo.
        :type board_name: str
        """

        self._board_name = board_name

    @property
    def project_key(self) -> str:
        """Gets the project_key of this ProjectLandingPageInfo.


        :return: The project_key of this ProjectLandingPageInfo.
        :rtype: str
        """
        return self._project_key

    @project_key.setter
    def project_key(self, project_key: str):
        """Sets the project_key of this ProjectLandingPageInfo.


        :param project_key: The project_key of this ProjectLandingPageInfo.
        :type project_key: str
        """

        self._project_key = project_key

    @property
    def project_type(self) -> str:
        """Gets the project_type of this ProjectLandingPageInfo.


        :return: The project_type of this ProjectLandingPageInfo.
        :rtype: str
        """
        return self._project_type

    @project_type.setter
    def project_type(self, project_type: str):
        """Sets the project_type of this ProjectLandingPageInfo.


        :param project_type: The project_type of this ProjectLandingPageInfo.
        :type project_type: str
        """

        self._project_type = project_type

    @property
    def queue_category(self) -> str:
        """Gets the queue_category of this ProjectLandingPageInfo.


        :return: The queue_category of this ProjectLandingPageInfo.
        :rtype: str
        """
        return self._queue_category

    @queue_category.setter
    def queue_category(self, queue_category: str):
        """Sets the queue_category of this ProjectLandingPageInfo.


        :param queue_category: The queue_category of this ProjectLandingPageInfo.
        :type queue_category: str
        """

        self._queue_category = queue_category

    @property
    def queue_id(self) -> int:
        """Gets the queue_id of this ProjectLandingPageInfo.


        :return: The queue_id of this ProjectLandingPageInfo.
        :rtype: int
        """
        return self._queue_id

    @queue_id.setter
    def queue_id(self, queue_id: int):
        """Sets the queue_id of this ProjectLandingPageInfo.


        :param queue_id: The queue_id of this ProjectLandingPageInfo.
        :type queue_id: int
        """

        self._queue_id = queue_id

    @property
    def queue_name(self) -> str:
        """Gets the queue_name of this ProjectLandingPageInfo.


        :return: The queue_name of this ProjectLandingPageInfo.
        :rtype: str
        """
        return self._queue_name

    @queue_name.setter
    def queue_name(self, queue_name: str):
        """Sets the queue_name of this ProjectLandingPageInfo.


        :param queue_name: The queue_name of this ProjectLandingPageInfo.
        :type queue_name: str
        """

        self._queue_name = queue_name

    @property
    def simple_board(self) -> bool:
        """Gets the simple_board of this ProjectLandingPageInfo.


        :return: The simple_board of this ProjectLandingPageInfo.
        :rtype: bool
        """
        return self._simple_board

    @simple_board.setter
    def simple_board(self, simple_board: bool):
        """Sets the simple_board of this ProjectLandingPageInfo.


        :param simple_board: The simple_board of this ProjectLandingPageInfo.
        :type simple_board: bool
        """

        self._simple_board = simple_board

    @property
    def simplified(self) -> bool:
        """Gets the simplified of this ProjectLandingPageInfo.


        :return: The simplified of this ProjectLandingPageInfo.
        :rtype: bool
        """
        return self._simplified

    @simplified.setter
    def simplified(self, simplified: bool):
        """Sets the simplified of this ProjectLandingPageInfo.


        :param simplified: The simplified of this ProjectLandingPageInfo.
        :type simplified: bool
        """

        self._simplified = simplified

    @property
    def url(self) -> str:
        """Gets the url of this ProjectLandingPageInfo.


        :return: The url of this ProjectLandingPageInfo.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url: str):
        """Sets the url of this ProjectLandingPageInfo.


        :param url: The url of this ProjectLandingPageInfo.
        :type url: str
        """

        self._url = url
