from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.security_scheme_level_bean import SecuritySchemeLevelBean
from openapi_server import util

from openapi_server.models.security_scheme_level_bean import SecuritySchemeLevelBean  # noqa: E501

class CreateIssueSecuritySchemeDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description=None, levels=None, name=None):  # noqa: E501
        """CreateIssueSecuritySchemeDetails - a model defined in OpenAPI

        :param description: The description of this CreateIssueSecuritySchemeDetails.  # noqa: E501
        :type description: str
        :param levels: The levels of this CreateIssueSecuritySchemeDetails.  # noqa: E501
        :type levels: List[SecuritySchemeLevelBean]
        :param name: The name of this CreateIssueSecuritySchemeDetails.  # noqa: E501
        :type name: str
        """
        self.openapi_types = {
            'description': str,
            'levels': List[SecuritySchemeLevelBean],
            'name': str
        }

        self.attribute_map = {
            'description': 'description',
            'levels': 'levels',
            'name': 'name'
        }

        self._description = description
        self._levels = levels
        self._name = name

    @classmethod
    def from_dict(cls, dikt) -> 'CreateIssueSecuritySchemeDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CreateIssueSecuritySchemeDetails of this CreateIssueSecuritySchemeDetails.  # noqa: E501
        :rtype: CreateIssueSecuritySchemeDetails
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self) -> str:
        """Gets the description of this CreateIssueSecuritySchemeDetails.

        The description of the issue security scheme.  # noqa: E501

        :return: The description of this CreateIssueSecuritySchemeDetails.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this CreateIssueSecuritySchemeDetails.

        The description of the issue security scheme.  # noqa: E501

        :param description: The description of this CreateIssueSecuritySchemeDetails.
        :type description: str
        """
        if description is not None and len(description) > 255:
            raise ValueError("Invalid value for `description`, length must be less than or equal to `255`")  # noqa: E501

        self._description = description

    @property
    def levels(self) -> List[SecuritySchemeLevelBean]:
        """Gets the levels of this CreateIssueSecuritySchemeDetails.

        The list of scheme levels which should be added to the security scheme.  # noqa: E501

        :return: The levels of this CreateIssueSecuritySchemeDetails.
        :rtype: List[SecuritySchemeLevelBean]
        """
        return self._levels

    @levels.setter
    def levels(self, levels: List[SecuritySchemeLevelBean]):
        """Sets the levels of this CreateIssueSecuritySchemeDetails.

        The list of scheme levels which should be added to the security scheme.  # noqa: E501

        :param levels: The levels of this CreateIssueSecuritySchemeDetails.
        :type levels: List[SecuritySchemeLevelBean]
        """

        self._levels = levels

    @property
    def name(self) -> str:
        """Gets the name of this CreateIssueSecuritySchemeDetails.

        The name of the issue security scheme. Must be unique (case-insensitive).  # noqa: E501

        :return: The name of this CreateIssueSecuritySchemeDetails.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this CreateIssueSecuritySchemeDetails.

        The name of the issue security scheme. Must be unique (case-insensitive).  # noqa: E501

        :param name: The name of this CreateIssueSecuritySchemeDetails.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501
        if name is not None and len(name) > 60:
            raise ValueError("Invalid value for `name`, length must be less than or equal to `60`")  # noqa: E501

        self._name = name
