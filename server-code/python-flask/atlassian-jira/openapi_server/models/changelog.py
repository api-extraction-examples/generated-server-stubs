from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.change_details import ChangeDetails
from openapi_server.models.changelog_author import ChangelogAuthor
from openapi_server.models.changelog_history_metadata import ChangelogHistoryMetadata
from openapi_server import util

from openapi_server.models.change_details import ChangeDetails  # noqa: E501
from openapi_server.models.changelog_author import ChangelogAuthor  # noqa: E501
from openapi_server.models.changelog_history_metadata import ChangelogHistoryMetadata  # noqa: E501

class Changelog(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, author=None, created=None, history_metadata=None, id=None, items=None):  # noqa: E501
        """Changelog - a model defined in OpenAPI

        :param author: The author of this Changelog.  # noqa: E501
        :type author: ChangelogAuthor
        :param created: The created of this Changelog.  # noqa: E501
        :type created: datetime
        :param history_metadata: The history_metadata of this Changelog.  # noqa: E501
        :type history_metadata: ChangelogHistoryMetadata
        :param id: The id of this Changelog.  # noqa: E501
        :type id: str
        :param items: The items of this Changelog.  # noqa: E501
        :type items: List[ChangeDetails]
        """
        self.openapi_types = {
            'author': ChangelogAuthor,
            'created': datetime,
            'history_metadata': ChangelogHistoryMetadata,
            'id': str,
            'items': List[ChangeDetails]
        }

        self.attribute_map = {
            'author': 'author',
            'created': 'created',
            'history_metadata': 'historyMetadata',
            'id': 'id',
            'items': 'items'
        }

        self._author = author
        self._created = created
        self._history_metadata = history_metadata
        self._id = id
        self._items = items

    @classmethod
    def from_dict(cls, dikt) -> 'Changelog':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Changelog of this Changelog.  # noqa: E501
        :rtype: Changelog
        """
        return util.deserialize_model(dikt, cls)

    @property
    def author(self) -> ChangelogAuthor:
        """Gets the author of this Changelog.


        :return: The author of this Changelog.
        :rtype: ChangelogAuthor
        """
        return self._author

    @author.setter
    def author(self, author: ChangelogAuthor):
        """Sets the author of this Changelog.


        :param author: The author of this Changelog.
        :type author: ChangelogAuthor
        """

        self._author = author

    @property
    def created(self) -> datetime:
        """Gets the created of this Changelog.

        The date on which the change took place.  # noqa: E501

        :return: The created of this Changelog.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created: datetime):
        """Sets the created of this Changelog.

        The date on which the change took place.  # noqa: E501

        :param created: The created of this Changelog.
        :type created: datetime
        """

        self._created = created

    @property
    def history_metadata(self) -> ChangelogHistoryMetadata:
        """Gets the history_metadata of this Changelog.


        :return: The history_metadata of this Changelog.
        :rtype: ChangelogHistoryMetadata
        """
        return self._history_metadata

    @history_metadata.setter
    def history_metadata(self, history_metadata: ChangelogHistoryMetadata):
        """Sets the history_metadata of this Changelog.


        :param history_metadata: The history_metadata of this Changelog.
        :type history_metadata: ChangelogHistoryMetadata
        """

        self._history_metadata = history_metadata

    @property
    def id(self) -> str:
        """Gets the id of this Changelog.

        The ID of the changelog.  # noqa: E501

        :return: The id of this Changelog.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this Changelog.

        The ID of the changelog.  # noqa: E501

        :param id: The id of this Changelog.
        :type id: str
        """

        self._id = id

    @property
    def items(self) -> List[ChangeDetails]:
        """Gets the items of this Changelog.

        The list of items changed.  # noqa: E501

        :return: The items of this Changelog.
        :rtype: List[ChangeDetails]
        """
        return self._items

    @items.setter
    def items(self, items: List[ChangeDetails]):
        """Sets the items of this Changelog.

        The list of items changed.  # noqa: E501

        :param items: The items of this Changelog.
        :type items: List[ChangeDetails]
        """

        self._items = items
