from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class PermissionsKeysBean(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, permissions=None):  # noqa: E501
        """PermissionsKeysBean - a model defined in OpenAPI

        :param permissions: The permissions of this PermissionsKeysBean.  # noqa: E501
        :type permissions: List[str]
        """
        self.openapi_types = {
            'permissions': List[str]
        }

        self.attribute_map = {
            'permissions': 'permissions'
        }

        self._permissions = permissions

    @classmethod
    def from_dict(cls, dikt) -> 'PermissionsKeysBean':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PermissionsKeysBean of this PermissionsKeysBean.  # noqa: E501
        :rtype: PermissionsKeysBean
        """
        return util.deserialize_model(dikt, cls)

    @property
    def permissions(self) -> List[str]:
        """Gets the permissions of this PermissionsKeysBean.

        A list of permission keys.  # noqa: E501

        :return: The permissions of this PermissionsKeysBean.
        :rtype: List[str]
        """
        return self._permissions

    @permissions.setter
    def permissions(self, permissions: List[str]):
        """Sets the permissions of this PermissionsKeysBean.

        A list of permission keys.  # noqa: E501

        :param permissions: The permissions of this PermissionsKeysBean.
        :type permissions: List[str]
        """
        if permissions is None:
            raise ValueError("Invalid value for `permissions`, must not be `None`")  # noqa: E501

        self._permissions = permissions
