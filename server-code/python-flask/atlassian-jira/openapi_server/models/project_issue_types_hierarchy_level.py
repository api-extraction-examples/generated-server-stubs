from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.issue_type_info import IssueTypeInfo
from openapi_server import util

from openapi_server.models.issue_type_info import IssueTypeInfo  # noqa: E501

class ProjectIssueTypesHierarchyLevel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entity_id=None, issue_types=None, level=None, name=None):  # noqa: E501
        """ProjectIssueTypesHierarchyLevel - a model defined in OpenAPI

        :param entity_id: The entity_id of this ProjectIssueTypesHierarchyLevel.  # noqa: E501
        :type entity_id: str
        :param issue_types: The issue_types of this ProjectIssueTypesHierarchyLevel.  # noqa: E501
        :type issue_types: List[IssueTypeInfo]
        :param level: The level of this ProjectIssueTypesHierarchyLevel.  # noqa: E501
        :type level: int
        :param name: The name of this ProjectIssueTypesHierarchyLevel.  # noqa: E501
        :type name: str
        """
        self.openapi_types = {
            'entity_id': str,
            'issue_types': List[IssueTypeInfo],
            'level': int,
            'name': str
        }

        self.attribute_map = {
            'entity_id': 'entityId',
            'issue_types': 'issueTypes',
            'level': 'level',
            'name': 'name'
        }

        self._entity_id = entity_id
        self._issue_types = issue_types
        self._level = level
        self._name = name

    @classmethod
    def from_dict(cls, dikt) -> 'ProjectIssueTypesHierarchyLevel':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ProjectIssueTypesHierarchyLevel of this ProjectIssueTypesHierarchyLevel.  # noqa: E501
        :rtype: ProjectIssueTypesHierarchyLevel
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entity_id(self) -> str:
        """Gets the entity_id of this ProjectIssueTypesHierarchyLevel.

        The ID of the issue type hierarchy level. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).  # noqa: E501

        :return: The entity_id of this ProjectIssueTypesHierarchyLevel.
        :rtype: str
        """
        return self._entity_id

    @entity_id.setter
    def entity_id(self, entity_id: str):
        """Sets the entity_id of this ProjectIssueTypesHierarchyLevel.

        The ID of the issue type hierarchy level. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).  # noqa: E501

        :param entity_id: The entity_id of this ProjectIssueTypesHierarchyLevel.
        :type entity_id: str
        """

        self._entity_id = entity_id

    @property
    def issue_types(self) -> List[IssueTypeInfo]:
        """Gets the issue_types of this ProjectIssueTypesHierarchyLevel.

        The list of issue types in the hierarchy level.  # noqa: E501

        :return: The issue_types of this ProjectIssueTypesHierarchyLevel.
        :rtype: List[IssueTypeInfo]
        """
        return self._issue_types

    @issue_types.setter
    def issue_types(self, issue_types: List[IssueTypeInfo]):
        """Sets the issue_types of this ProjectIssueTypesHierarchyLevel.

        The list of issue types in the hierarchy level.  # noqa: E501

        :param issue_types: The issue_types of this ProjectIssueTypesHierarchyLevel.
        :type issue_types: List[IssueTypeInfo]
        """

        self._issue_types = issue_types

    @property
    def level(self) -> int:
        """Gets the level of this ProjectIssueTypesHierarchyLevel.

        The level of the issue type hierarchy level.  # noqa: E501

        :return: The level of this ProjectIssueTypesHierarchyLevel.
        :rtype: int
        """
        return self._level

    @level.setter
    def level(self, level: int):
        """Sets the level of this ProjectIssueTypesHierarchyLevel.

        The level of the issue type hierarchy level.  # noqa: E501

        :param level: The level of this ProjectIssueTypesHierarchyLevel.
        :type level: int
        """

        self._level = level

    @property
    def name(self) -> str:
        """Gets the name of this ProjectIssueTypesHierarchyLevel.

        The name of the issue type hierarchy level.  # noqa: E501

        :return: The name of this ProjectIssueTypesHierarchyLevel.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this ProjectIssueTypesHierarchyLevel.

        The name of the issue type hierarchy level.  # noqa: E501

        :param name: The name of this ProjectIssueTypesHierarchyLevel.
        :type name: str
        """

        self._name = name
