from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class ChangeDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, field=None, field_id=None, fieldtype=None, _from=None, from_string=None, to=None):  # noqa: E501
        """ChangeDetails - a model defined in OpenAPI

        :param field: The field of this ChangeDetails.  # noqa: E501
        :type field: str
        :param field_id: The field_id of this ChangeDetails.  # noqa: E501
        :type field_id: str
        :param fieldtype: The fieldtype of this ChangeDetails.  # noqa: E501
        :type fieldtype: str
        :param _from: The _from of this ChangeDetails.  # noqa: E501
        :type _from: str
        :param from_string: The from_string of this ChangeDetails.  # noqa: E501
        :type from_string: str
        :param to: The to of this ChangeDetails.  # noqa: E501
        :type to: str
        """
        self.openapi_types = {
            'field': str,
            'field_id': str,
            'fieldtype': str,
            '_from': str,
            'from_string': str,
            'to': str
        }

        self.attribute_map = {
            'field': 'field',
            'field_id': 'fieldId',
            'fieldtype': 'fieldtype',
            '_from': 'from',
            'from_string': 'fromString',
            'to': 'to'
        }

        self._field = field
        self._field_id = field_id
        self._fieldtype = fieldtype
        self.__from = _from
        self._from_string = from_string
        self._to = to

    @classmethod
    def from_dict(cls, dikt) -> 'ChangeDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ChangeDetails of this ChangeDetails.  # noqa: E501
        :rtype: ChangeDetails
        """
        return util.deserialize_model(dikt, cls)

    @property
    def field(self) -> str:
        """Gets the field of this ChangeDetails.

        The name of the field changed.  # noqa: E501

        :return: The field of this ChangeDetails.
        :rtype: str
        """
        return self._field

    @field.setter
    def field(self, field: str):
        """Sets the field of this ChangeDetails.

        The name of the field changed.  # noqa: E501

        :param field: The field of this ChangeDetails.
        :type field: str
        """

        self._field = field

    @property
    def field_id(self) -> str:
        """Gets the field_id of this ChangeDetails.

        The ID of the field changed.  # noqa: E501

        :return: The field_id of this ChangeDetails.
        :rtype: str
        """
        return self._field_id

    @field_id.setter
    def field_id(self, field_id: str):
        """Sets the field_id of this ChangeDetails.

        The ID of the field changed.  # noqa: E501

        :param field_id: The field_id of this ChangeDetails.
        :type field_id: str
        """

        self._field_id = field_id

    @property
    def fieldtype(self) -> str:
        """Gets the fieldtype of this ChangeDetails.

        The type of the field changed.  # noqa: E501

        :return: The fieldtype of this ChangeDetails.
        :rtype: str
        """
        return self._fieldtype

    @fieldtype.setter
    def fieldtype(self, fieldtype: str):
        """Sets the fieldtype of this ChangeDetails.

        The type of the field changed.  # noqa: E501

        :param fieldtype: The fieldtype of this ChangeDetails.
        :type fieldtype: str
        """

        self._fieldtype = fieldtype

    @property
    def _from(self) -> str:
        """Gets the _from of this ChangeDetails.

        The details of the original value.  # noqa: E501

        :return: The _from of this ChangeDetails.
        :rtype: str
        """
        return self.__from

    @_from.setter
    def _from(self, _from: str):
        """Sets the _from of this ChangeDetails.

        The details of the original value.  # noqa: E501

        :param _from: The _from of this ChangeDetails.
        :type _from: str
        """

        self.__from = _from

    @property
    def from_string(self) -> str:
        """Gets the from_string of this ChangeDetails.

        The details of the original value as a string.  # noqa: E501

        :return: The from_string of this ChangeDetails.
        :rtype: str
        """
        return self._from_string

    @from_string.setter
    def from_string(self, from_string: str):
        """Sets the from_string of this ChangeDetails.

        The details of the original value as a string.  # noqa: E501

        :param from_string: The from_string of this ChangeDetails.
        :type from_string: str
        """

        self._from_string = from_string

    @property
    def to(self) -> str:
        """Gets the to of this ChangeDetails.

        The details of the new value.  # noqa: E501

        :return: The to of this ChangeDetails.
        :rtype: str
        """
        return self._to

    @to.setter
    def to(self, to: str):
        """Sets the to of this ChangeDetails.

        The details of the new value.  # noqa: E501

        :param to: The to of this ChangeDetails.
        :type to: str
        """

        self._to = to
