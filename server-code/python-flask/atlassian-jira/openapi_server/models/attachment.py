from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.attachment_author import AttachmentAuthor
from openapi_server import util

from openapi_server.models.attachment_author import AttachmentAuthor  # noqa: E501

class Attachment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, author=None, content=None, created=None, filename=None, id=None, mime_type=None, _self=None, size=None, thumbnail=None):  # noqa: E501
        """Attachment - a model defined in OpenAPI

        :param author: The author of this Attachment.  # noqa: E501
        :type author: AttachmentAuthor
        :param content: The content of this Attachment.  # noqa: E501
        :type content: str
        :param created: The created of this Attachment.  # noqa: E501
        :type created: datetime
        :param filename: The filename of this Attachment.  # noqa: E501
        :type filename: str
        :param id: The id of this Attachment.  # noqa: E501
        :type id: str
        :param mime_type: The mime_type of this Attachment.  # noqa: E501
        :type mime_type: str
        :param _self: The _self of this Attachment.  # noqa: E501
        :type _self: str
        :param size: The size of this Attachment.  # noqa: E501
        :type size: int
        :param thumbnail: The thumbnail of this Attachment.  # noqa: E501
        :type thumbnail: str
        """
        self.openapi_types = {
            'author': AttachmentAuthor,
            'content': str,
            'created': datetime,
            'filename': str,
            'id': str,
            'mime_type': str,
            '_self': str,
            'size': int,
            'thumbnail': str
        }

        self.attribute_map = {
            'author': 'author',
            'content': 'content',
            'created': 'created',
            'filename': 'filename',
            'id': 'id',
            'mime_type': 'mimeType',
            '_self': 'self',
            'size': 'size',
            'thumbnail': 'thumbnail'
        }

        self._author = author
        self._content = content
        self._created = created
        self._filename = filename
        self._id = id
        self._mime_type = mime_type
        self.__self = _self
        self._size = size
        self._thumbnail = thumbnail

    @classmethod
    def from_dict(cls, dikt) -> 'Attachment':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Attachment of this Attachment.  # noqa: E501
        :rtype: Attachment
        """
        return util.deserialize_model(dikt, cls)

    @property
    def author(self) -> AttachmentAuthor:
        """Gets the author of this Attachment.


        :return: The author of this Attachment.
        :rtype: AttachmentAuthor
        """
        return self._author

    @author.setter
    def author(self, author: AttachmentAuthor):
        """Sets the author of this Attachment.


        :param author: The author of this Attachment.
        :type author: AttachmentAuthor
        """

        self._author = author

    @property
    def content(self) -> str:
        """Gets the content of this Attachment.

        The content of the attachment.  # noqa: E501

        :return: The content of this Attachment.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content: str):
        """Sets the content of this Attachment.

        The content of the attachment.  # noqa: E501

        :param content: The content of this Attachment.
        :type content: str
        """

        self._content = content

    @property
    def created(self) -> datetime:
        """Gets the created of this Attachment.

        The datetime the attachment was created.  # noqa: E501

        :return: The created of this Attachment.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created: datetime):
        """Sets the created of this Attachment.

        The datetime the attachment was created.  # noqa: E501

        :param created: The created of this Attachment.
        :type created: datetime
        """

        self._created = created

    @property
    def filename(self) -> str:
        """Gets the filename of this Attachment.

        The file name of the attachment.  # noqa: E501

        :return: The filename of this Attachment.
        :rtype: str
        """
        return self._filename

    @filename.setter
    def filename(self, filename: str):
        """Sets the filename of this Attachment.

        The file name of the attachment.  # noqa: E501

        :param filename: The filename of this Attachment.
        :type filename: str
        """

        self._filename = filename

    @property
    def id(self) -> str:
        """Gets the id of this Attachment.

        The ID of the attachment.  # noqa: E501

        :return: The id of this Attachment.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this Attachment.

        The ID of the attachment.  # noqa: E501

        :param id: The id of this Attachment.
        :type id: str
        """

        self._id = id

    @property
    def mime_type(self) -> str:
        """Gets the mime_type of this Attachment.

        The MIME type of the attachment.  # noqa: E501

        :return: The mime_type of this Attachment.
        :rtype: str
        """
        return self._mime_type

    @mime_type.setter
    def mime_type(self, mime_type: str):
        """Sets the mime_type of this Attachment.

        The MIME type of the attachment.  # noqa: E501

        :param mime_type: The mime_type of this Attachment.
        :type mime_type: str
        """

        self._mime_type = mime_type

    @property
    def _self(self) -> str:
        """Gets the _self of this Attachment.

        The URL of the attachment details response.  # noqa: E501

        :return: The _self of this Attachment.
        :rtype: str
        """
        return self.__self

    @_self.setter
    def _self(self, _self: str):
        """Sets the _self of this Attachment.

        The URL of the attachment details response.  # noqa: E501

        :param _self: The _self of this Attachment.
        :type _self: str
        """

        self.__self = _self

    @property
    def size(self) -> int:
        """Gets the size of this Attachment.

        The size of the attachment.  # noqa: E501

        :return: The size of this Attachment.
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size: int):
        """Sets the size of this Attachment.

        The size of the attachment.  # noqa: E501

        :param size: The size of this Attachment.
        :type size: int
        """

        self._size = size

    @property
    def thumbnail(self) -> str:
        """Gets the thumbnail of this Attachment.

        The URL of a thumbnail representing the attachment.  # noqa: E501

        :return: The thumbnail of this Attachment.
        :rtype: str
        """
        return self._thumbnail

    @thumbnail.setter
    def thumbnail(self, thumbnail: str):
        """Sets the thumbnail of this Attachment.

        The URL of a thumbnail representing the attachment.  # noqa: E501

        :param thumbnail: The thumbnail of this Attachment.
        :type thumbnail: str
        """

        self._thumbnail = thumbnail
