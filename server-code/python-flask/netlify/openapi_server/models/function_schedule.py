from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class FunctionSchedule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cron=None, name=None):  # noqa: E501
        """FunctionSchedule - a model defined in OpenAPI

        :param cron: The cron of this FunctionSchedule.  # noqa: E501
        :type cron: str
        :param name: The name of this FunctionSchedule.  # noqa: E501
        :type name: str
        """
        self.openapi_types = {
            'cron': str,
            'name': str
        }

        self.attribute_map = {
            'cron': 'cron',
            'name': 'name'
        }

        self._cron = cron
        self._name = name

    @classmethod
    def from_dict(cls, dikt) -> 'FunctionSchedule':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The functionSchedule of this FunctionSchedule.  # noqa: E501
        :rtype: FunctionSchedule
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cron(self) -> str:
        """Gets the cron of this FunctionSchedule.


        :return: The cron of this FunctionSchedule.
        :rtype: str
        """
        return self._cron

    @cron.setter
    def cron(self, cron: str):
        """Sets the cron of this FunctionSchedule.


        :param cron: The cron of this FunctionSchedule.
        :type cron: str
        """

        self._cron = cron

    @property
    def name(self) -> str:
        """Gets the name of this FunctionSchedule.


        :return: The name of this FunctionSchedule.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this FunctionSchedule.


        :param name: The name of this FunctionSchedule.
        :type name: str
        """

        self._name = name
