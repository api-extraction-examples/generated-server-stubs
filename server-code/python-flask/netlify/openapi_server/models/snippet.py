from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class Snippet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, general=None, general_position=None, goal=None, goal_position=None, id=None, site_id=None, title=None):  # noqa: E501
        """Snippet - a model defined in OpenAPI

        :param general: The general of this Snippet.  # noqa: E501
        :type general: str
        :param general_position: The general_position of this Snippet.  # noqa: E501
        :type general_position: str
        :param goal: The goal of this Snippet.  # noqa: E501
        :type goal: str
        :param goal_position: The goal_position of this Snippet.  # noqa: E501
        :type goal_position: str
        :param id: The id of this Snippet.  # noqa: E501
        :type id: int
        :param site_id: The site_id of this Snippet.  # noqa: E501
        :type site_id: str
        :param title: The title of this Snippet.  # noqa: E501
        :type title: str
        """
        self.openapi_types = {
            'general': str,
            'general_position': str,
            'goal': str,
            'goal_position': str,
            'id': int,
            'site_id': str,
            'title': str
        }

        self.attribute_map = {
            'general': 'general',
            'general_position': 'general_position',
            'goal': 'goal',
            'goal_position': 'goal_position',
            'id': 'id',
            'site_id': 'site_id',
            'title': 'title'
        }

        self._general = general
        self._general_position = general_position
        self._goal = goal
        self._goal_position = goal_position
        self._id = id
        self._site_id = site_id
        self._title = title

    @classmethod
    def from_dict(cls, dikt) -> 'Snippet':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The snippet of this Snippet.  # noqa: E501
        :rtype: Snippet
        """
        return util.deserialize_model(dikt, cls)

    @property
    def general(self) -> str:
        """Gets the general of this Snippet.


        :return: The general of this Snippet.
        :rtype: str
        """
        return self._general

    @general.setter
    def general(self, general: str):
        """Sets the general of this Snippet.


        :param general: The general of this Snippet.
        :type general: str
        """

        self._general = general

    @property
    def general_position(self) -> str:
        """Gets the general_position of this Snippet.


        :return: The general_position of this Snippet.
        :rtype: str
        """
        return self._general_position

    @general_position.setter
    def general_position(self, general_position: str):
        """Sets the general_position of this Snippet.


        :param general_position: The general_position of this Snippet.
        :type general_position: str
        """

        self._general_position = general_position

    @property
    def goal(self) -> str:
        """Gets the goal of this Snippet.


        :return: The goal of this Snippet.
        :rtype: str
        """
        return self._goal

    @goal.setter
    def goal(self, goal: str):
        """Sets the goal of this Snippet.


        :param goal: The goal of this Snippet.
        :type goal: str
        """

        self._goal = goal

    @property
    def goal_position(self) -> str:
        """Gets the goal_position of this Snippet.


        :return: The goal_position of this Snippet.
        :rtype: str
        """
        return self._goal_position

    @goal_position.setter
    def goal_position(self, goal_position: str):
        """Sets the goal_position of this Snippet.


        :param goal_position: The goal_position of this Snippet.
        :type goal_position: str
        """

        self._goal_position = goal_position

    @property
    def id(self) -> int:
        """Gets the id of this Snippet.


        :return: The id of this Snippet.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Snippet.


        :param id: The id of this Snippet.
        :type id: int
        """

        self._id = id

    @property
    def site_id(self) -> str:
        """Gets the site_id of this Snippet.


        :return: The site_id of this Snippet.
        :rtype: str
        """
        return self._site_id

    @site_id.setter
    def site_id(self, site_id: str):
        """Sets the site_id of this Snippet.


        :param site_id: The site_id of this Snippet.
        :type site_id: str
        """

        self._site_id = site_id

    @property
    def title(self) -> str:
        """Gets the title of this Snippet.


        :return: The title of this Snippet.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this Snippet.


        :param title: The title of this Snippet.
        :type title: str
        """

        self._title = title
