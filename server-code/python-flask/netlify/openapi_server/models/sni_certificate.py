from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class SniCertificate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at=None, domains=None, expires_at=None, state=None, updated_at=None):  # noqa: E501
        """SniCertificate - a model defined in OpenAPI

        :param created_at: The created_at of this SniCertificate.  # noqa: E501
        :type created_at: str
        :param domains: The domains of this SniCertificate.  # noqa: E501
        :type domains: List[str]
        :param expires_at: The expires_at of this SniCertificate.  # noqa: E501
        :type expires_at: str
        :param state: The state of this SniCertificate.  # noqa: E501
        :type state: str
        :param updated_at: The updated_at of this SniCertificate.  # noqa: E501
        :type updated_at: str
        """
        self.openapi_types = {
            'created_at': str,
            'domains': List[str],
            'expires_at': str,
            'state': str,
            'updated_at': str
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'domains': 'domains',
            'expires_at': 'expires_at',
            'state': 'state',
            'updated_at': 'updated_at'
        }

        self._created_at = created_at
        self._domains = domains
        self._expires_at = expires_at
        self._state = state
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt) -> 'SniCertificate':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The sniCertificate of this SniCertificate.  # noqa: E501
        :rtype: SniCertificate
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self) -> str:
        """Gets the created_at of this SniCertificate.


        :return: The created_at of this SniCertificate.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: str):
        """Sets the created_at of this SniCertificate.


        :param created_at: The created_at of this SniCertificate.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def domains(self) -> List[str]:
        """Gets the domains of this SniCertificate.


        :return: The domains of this SniCertificate.
        :rtype: List[str]
        """
        return self._domains

    @domains.setter
    def domains(self, domains: List[str]):
        """Sets the domains of this SniCertificate.


        :param domains: The domains of this SniCertificate.
        :type domains: List[str]
        """

        self._domains = domains

    @property
    def expires_at(self) -> str:
        """Gets the expires_at of this SniCertificate.


        :return: The expires_at of this SniCertificate.
        :rtype: str
        """
        return self._expires_at

    @expires_at.setter
    def expires_at(self, expires_at: str):
        """Sets the expires_at of this SniCertificate.


        :param expires_at: The expires_at of this SniCertificate.
        :type expires_at: str
        """

        self._expires_at = expires_at

    @property
    def state(self) -> str:
        """Gets the state of this SniCertificate.


        :return: The state of this SniCertificate.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state: str):
        """Sets the state of this SniCertificate.


        :param state: The state of this SniCertificate.
        :type state: str
        """

        self._state = state

    @property
    def updated_at(self) -> str:
        """Gets the updated_at of this SniCertificate.


        :return: The updated_at of this SniCertificate.
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at: str):
        """Sets the updated_at of this SniCertificate.


        :param updated_at: The updated_at of this SniCertificate.
        :type updated_at: str
        """

        self._updated_at = updated_at
