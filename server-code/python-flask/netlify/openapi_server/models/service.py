from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class Service(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at=None, description=None, environments=None, events=None, icon=None, id=None, long_description=None, manifest_url=None, name=None, service_path=None, slug=None, tags=None, updated_at=None):  # noqa: E501
        """Service - a model defined in OpenAPI

        :param created_at: The created_at of this Service.  # noqa: E501
        :type created_at: str
        :param description: The description of this Service.  # noqa: E501
        :type description: str
        :param environments: The environments of this Service.  # noqa: E501
        :type environments: List[str]
        :param events: The events of this Service.  # noqa: E501
        :type events: List[object]
        :param icon: The icon of this Service.  # noqa: E501
        :type icon: str
        :param id: The id of this Service.  # noqa: E501
        :type id: str
        :param long_description: The long_description of this Service.  # noqa: E501
        :type long_description: str
        :param manifest_url: The manifest_url of this Service.  # noqa: E501
        :type manifest_url: str
        :param name: The name of this Service.  # noqa: E501
        :type name: str
        :param service_path: The service_path of this Service.  # noqa: E501
        :type service_path: str
        :param slug: The slug of this Service.  # noqa: E501
        :type slug: str
        :param tags: The tags of this Service.  # noqa: E501
        :type tags: List[str]
        :param updated_at: The updated_at of this Service.  # noqa: E501
        :type updated_at: str
        """
        self.openapi_types = {
            'created_at': str,
            'description': str,
            'environments': List[str],
            'events': List[object],
            'icon': str,
            'id': str,
            'long_description': str,
            'manifest_url': str,
            'name': str,
            'service_path': str,
            'slug': str,
            'tags': List[str],
            'updated_at': str
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'description': 'description',
            'environments': 'environments',
            'events': 'events',
            'icon': 'icon',
            'id': 'id',
            'long_description': 'long_description',
            'manifest_url': 'manifest_url',
            'name': 'name',
            'service_path': 'service_path',
            'slug': 'slug',
            'tags': 'tags',
            'updated_at': 'updated_at'
        }

        self._created_at = created_at
        self._description = description
        self._environments = environments
        self._events = events
        self._icon = icon
        self._id = id
        self._long_description = long_description
        self._manifest_url = manifest_url
        self._name = name
        self._service_path = service_path
        self._slug = slug
        self._tags = tags
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt) -> 'Service':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The service of this Service.  # noqa: E501
        :rtype: Service
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self) -> str:
        """Gets the created_at of this Service.


        :return: The created_at of this Service.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: str):
        """Sets the created_at of this Service.


        :param created_at: The created_at of this Service.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def description(self) -> str:
        """Gets the description of this Service.


        :return: The description of this Service.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this Service.


        :param description: The description of this Service.
        :type description: str
        """

        self._description = description

    @property
    def environments(self) -> List[str]:
        """Gets the environments of this Service.


        :return: The environments of this Service.
        :rtype: List[str]
        """
        return self._environments

    @environments.setter
    def environments(self, environments: List[str]):
        """Sets the environments of this Service.


        :param environments: The environments of this Service.
        :type environments: List[str]
        """

        self._environments = environments

    @property
    def events(self) -> List[object]:
        """Gets the events of this Service.


        :return: The events of this Service.
        :rtype: List[object]
        """
        return self._events

    @events.setter
    def events(self, events: List[object]):
        """Sets the events of this Service.


        :param events: The events of this Service.
        :type events: List[object]
        """

        self._events = events

    @property
    def icon(self) -> str:
        """Gets the icon of this Service.


        :return: The icon of this Service.
        :rtype: str
        """
        return self._icon

    @icon.setter
    def icon(self, icon: str):
        """Sets the icon of this Service.


        :param icon: The icon of this Service.
        :type icon: str
        """

        self._icon = icon

    @property
    def id(self) -> str:
        """Gets the id of this Service.


        :return: The id of this Service.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this Service.


        :param id: The id of this Service.
        :type id: str
        """

        self._id = id

    @property
    def long_description(self) -> str:
        """Gets the long_description of this Service.


        :return: The long_description of this Service.
        :rtype: str
        """
        return self._long_description

    @long_description.setter
    def long_description(self, long_description: str):
        """Sets the long_description of this Service.


        :param long_description: The long_description of this Service.
        :type long_description: str
        """

        self._long_description = long_description

    @property
    def manifest_url(self) -> str:
        """Gets the manifest_url of this Service.


        :return: The manifest_url of this Service.
        :rtype: str
        """
        return self._manifest_url

    @manifest_url.setter
    def manifest_url(self, manifest_url: str):
        """Sets the manifest_url of this Service.


        :param manifest_url: The manifest_url of this Service.
        :type manifest_url: str
        """

        self._manifest_url = manifest_url

    @property
    def name(self) -> str:
        """Gets the name of this Service.


        :return: The name of this Service.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Service.


        :param name: The name of this Service.
        :type name: str
        """

        self._name = name

    @property
    def service_path(self) -> str:
        """Gets the service_path of this Service.


        :return: The service_path of this Service.
        :rtype: str
        """
        return self._service_path

    @service_path.setter
    def service_path(self, service_path: str):
        """Sets the service_path of this Service.


        :param service_path: The service_path of this Service.
        :type service_path: str
        """

        self._service_path = service_path

    @property
    def slug(self) -> str:
        """Gets the slug of this Service.


        :return: The slug of this Service.
        :rtype: str
        """
        return self._slug

    @slug.setter
    def slug(self, slug: str):
        """Sets the slug of this Service.


        :param slug: The slug of this Service.
        :type slug: str
        """

        self._slug = slug

    @property
    def tags(self) -> List[str]:
        """Gets the tags of this Service.


        :return: The tags of this Service.
        :rtype: List[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags: List[str]):
        """Sets the tags of this Service.


        :param tags: The tags of this Service.
        :type tags: List[str]
        """

        self._tags = tags

    @property
    def updated_at(self) -> str:
        """Gets the updated_at of this Service.


        :return: The updated_at of this Service.
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at: str):
        """Sets the updated_at of this Service.


        :param updated_at: The updated_at of this Service.
        :type updated_at: str
        """

        self._updated_at = updated_at
