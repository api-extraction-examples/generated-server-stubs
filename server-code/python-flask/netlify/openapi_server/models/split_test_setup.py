from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class SplitTestSetup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, branch_tests=None):  # noqa: E501
        """SplitTestSetup - a model defined in OpenAPI

        :param branch_tests: The branch_tests of this SplitTestSetup.  # noqa: E501
        :type branch_tests: object
        """
        self.openapi_types = {
            'branch_tests': object
        }

        self.attribute_map = {
            'branch_tests': 'branch_tests'
        }

        self._branch_tests = branch_tests

    @classmethod
    def from_dict(cls, dikt) -> 'SplitTestSetup':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The splitTestSetup of this SplitTestSetup.  # noqa: E501
        :rtype: SplitTestSetup
        """
        return util.deserialize_model(dikt, cls)

    @property
    def branch_tests(self) -> object:
        """Gets the branch_tests of this SplitTestSetup.


        :return: The branch_tests of this SplitTestSetup.
        :rtype: object
        """
        return self._branch_tests

    @branch_tests.setter
    def branch_tests(self, branch_tests: object):
        """Sets the branch_tests of this SplitTestSetup.


        :param branch_tests: The branch_tests of this SplitTestSetup.
        :type branch_tests: object
        """

        self._branch_tests = branch_tests
