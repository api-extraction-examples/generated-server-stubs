from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.asset import Asset
from openapi_server.models.asset_form import AssetForm
from openapi_server import util

from openapi_server.models.asset import Asset  # noqa: E501
from openapi_server.models.asset_form import AssetForm  # noqa: E501

class AssetSignature(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, asset=None, form=None):  # noqa: E501
        """AssetSignature - a model defined in OpenAPI

        :param asset: The asset of this AssetSignature.  # noqa: E501
        :type asset: Asset
        :param form: The form of this AssetSignature.  # noqa: E501
        :type form: AssetForm
        """
        self.openapi_types = {
            'asset': Asset,
            'form': AssetForm
        }

        self.attribute_map = {
            'asset': 'asset',
            'form': 'form'
        }

        self._asset = asset
        self._form = form

    @classmethod
    def from_dict(cls, dikt) -> 'AssetSignature':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The assetSignature of this AssetSignature.  # noqa: E501
        :rtype: AssetSignature
        """
        return util.deserialize_model(dikt, cls)

    @property
    def asset(self) -> Asset:
        """Gets the asset of this AssetSignature.


        :return: The asset of this AssetSignature.
        :rtype: Asset
        """
        return self._asset

    @asset.setter
    def asset(self, asset: Asset):
        """Sets the asset of this AssetSignature.


        :param asset: The asset of this AssetSignature.
        :type asset: Asset
        """

        self._asset = asset

    @property
    def form(self) -> AssetForm:
        """Gets the form of this AssetSignature.


        :return: The form of this AssetSignature.
        :rtype: AssetForm
        """
        return self._form

    @form.setter
    def form(self, form: AssetForm):
        """Sets the form of this AssetSignature.


        :param form: The form of this AssetSignature.
        :type form: AssetForm
        """

        self._form = form
