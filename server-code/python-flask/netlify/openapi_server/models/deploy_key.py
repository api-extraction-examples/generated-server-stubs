from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class DeployKey(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at=None, id=None, public_key=None):  # noqa: E501
        """DeployKey - a model defined in OpenAPI

        :param created_at: The created_at of this DeployKey.  # noqa: E501
        :type created_at: str
        :param id: The id of this DeployKey.  # noqa: E501
        :type id: str
        :param public_key: The public_key of this DeployKey.  # noqa: E501
        :type public_key: str
        """
        self.openapi_types = {
            'created_at': str,
            'id': str,
            'public_key': str
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'id': 'id',
            'public_key': 'public_key'
        }

        self._created_at = created_at
        self._id = id
        self._public_key = public_key

    @classmethod
    def from_dict(cls, dikt) -> 'DeployKey':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The deployKey of this DeployKey.  # noqa: E501
        :rtype: DeployKey
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self) -> str:
        """Gets the created_at of this DeployKey.


        :return: The created_at of this DeployKey.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: str):
        """Sets the created_at of this DeployKey.


        :param created_at: The created_at of this DeployKey.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def id(self) -> str:
        """Gets the id of this DeployKey.


        :return: The id of this DeployKey.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this DeployKey.


        :param id: The id of this DeployKey.
        :type id: str
        """

        self._id = id

    @property
    def public_key(self) -> str:
        """Gets the public_key of this DeployKey.


        :return: The public_key of this DeployKey.
        :rtype: str
        """
        return self._public_key

    @public_key.setter
    def public_key(self, public_key: str):
        """Sets the public_key of this DeployKey.


        :param public_key: The public_key of this DeployKey.
        :type public_key: str
        """

        self._public_key = public_key
