from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.deploy import Deploy
from openapi_server.models.repo_info import RepoInfo
from openapi_server.models.site_default_hooks_data import SiteDefaultHooksData
from openapi_server.models.site_processing_settings import SiteProcessingSettings
from openapi_server import util

from openapi_server.models.deploy import Deploy  # noqa: E501
from openapi_server.models.repo_info import RepoInfo  # noqa: E501
from openapi_server.models.site_default_hooks_data import SiteDefaultHooksData  # noqa: E501
from openapi_server.models.site_processing_settings import SiteProcessingSettings  # noqa: E501

class Site(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_name=None, account_slug=None, admin_url=None, build_image=None, build_settings=None, capabilities=None, created_at=None, custom_domain=None, default_hooks_data=None, deploy_hook=None, deploy_url=None, domain_aliases=None, force_ssl=None, git_provider=None, id=None, id_domain=None, managed_dns=None, name=None, notification_email=None, password=None, plan=None, prerender=None, processing_settings=None, published_deploy=None, screenshot_url=None, session_id=None, ssl=None, ssl_url=None, state=None, updated_at=None, url=None, user_id=None):  # noqa: E501
        """Site - a model defined in OpenAPI

        :param account_name: The account_name of this Site.  # noqa: E501
        :type account_name: str
        :param account_slug: The account_slug of this Site.  # noqa: E501
        :type account_slug: str
        :param admin_url: The admin_url of this Site.  # noqa: E501
        :type admin_url: str
        :param build_image: The build_image of this Site.  # noqa: E501
        :type build_image: str
        :param build_settings: The build_settings of this Site.  # noqa: E501
        :type build_settings: RepoInfo
        :param capabilities: The capabilities of this Site.  # noqa: E501
        :type capabilities: Dict[str, object]
        :param created_at: The created_at of this Site.  # noqa: E501
        :type created_at: str
        :param custom_domain: The custom_domain of this Site.  # noqa: E501
        :type custom_domain: str
        :param default_hooks_data: The default_hooks_data of this Site.  # noqa: E501
        :type default_hooks_data: SiteDefaultHooksData
        :param deploy_hook: The deploy_hook of this Site.  # noqa: E501
        :type deploy_hook: str
        :param deploy_url: The deploy_url of this Site.  # noqa: E501
        :type deploy_url: str
        :param domain_aliases: The domain_aliases of this Site.  # noqa: E501
        :type domain_aliases: List[str]
        :param force_ssl: The force_ssl of this Site.  # noqa: E501
        :type force_ssl: bool
        :param git_provider: The git_provider of this Site.  # noqa: E501
        :type git_provider: str
        :param id: The id of this Site.  # noqa: E501
        :type id: str
        :param id_domain: The id_domain of this Site.  # noqa: E501
        :type id_domain: str
        :param managed_dns: The managed_dns of this Site.  # noqa: E501
        :type managed_dns: bool
        :param name: The name of this Site.  # noqa: E501
        :type name: str
        :param notification_email: The notification_email of this Site.  # noqa: E501
        :type notification_email: str
        :param password: The password of this Site.  # noqa: E501
        :type password: str
        :param plan: The plan of this Site.  # noqa: E501
        :type plan: str
        :param prerender: The prerender of this Site.  # noqa: E501
        :type prerender: str
        :param processing_settings: The processing_settings of this Site.  # noqa: E501
        :type processing_settings: SiteProcessingSettings
        :param published_deploy: The published_deploy of this Site.  # noqa: E501
        :type published_deploy: Deploy
        :param screenshot_url: The screenshot_url of this Site.  # noqa: E501
        :type screenshot_url: str
        :param session_id: The session_id of this Site.  # noqa: E501
        :type session_id: str
        :param ssl: The ssl of this Site.  # noqa: E501
        :type ssl: bool
        :param ssl_url: The ssl_url of this Site.  # noqa: E501
        :type ssl_url: str
        :param state: The state of this Site.  # noqa: E501
        :type state: str
        :param updated_at: The updated_at of this Site.  # noqa: E501
        :type updated_at: str
        :param url: The url of this Site.  # noqa: E501
        :type url: str
        :param user_id: The user_id of this Site.  # noqa: E501
        :type user_id: str
        """
        self.openapi_types = {
            'account_name': str,
            'account_slug': str,
            'admin_url': str,
            'build_image': str,
            'build_settings': RepoInfo,
            'capabilities': Dict[str, object],
            'created_at': str,
            'custom_domain': str,
            'default_hooks_data': SiteDefaultHooksData,
            'deploy_hook': str,
            'deploy_url': str,
            'domain_aliases': List[str],
            'force_ssl': bool,
            'git_provider': str,
            'id': str,
            'id_domain': str,
            'managed_dns': bool,
            'name': str,
            'notification_email': str,
            'password': str,
            'plan': str,
            'prerender': str,
            'processing_settings': SiteProcessingSettings,
            'published_deploy': Deploy,
            'screenshot_url': str,
            'session_id': str,
            'ssl': bool,
            'ssl_url': str,
            'state': str,
            'updated_at': str,
            'url': str,
            'user_id': str
        }

        self.attribute_map = {
            'account_name': 'account_name',
            'account_slug': 'account_slug',
            'admin_url': 'admin_url',
            'build_image': 'build_image',
            'build_settings': 'build_settings',
            'capabilities': 'capabilities',
            'created_at': 'created_at',
            'custom_domain': 'custom_domain',
            'default_hooks_data': 'default_hooks_data',
            'deploy_hook': 'deploy_hook',
            'deploy_url': 'deploy_url',
            'domain_aliases': 'domain_aliases',
            'force_ssl': 'force_ssl',
            'git_provider': 'git_provider',
            'id': 'id',
            'id_domain': 'id_domain',
            'managed_dns': 'managed_dns',
            'name': 'name',
            'notification_email': 'notification_email',
            'password': 'password',
            'plan': 'plan',
            'prerender': 'prerender',
            'processing_settings': 'processing_settings',
            'published_deploy': 'published_deploy',
            'screenshot_url': 'screenshot_url',
            'session_id': 'session_id',
            'ssl': 'ssl',
            'ssl_url': 'ssl_url',
            'state': 'state',
            'updated_at': 'updated_at',
            'url': 'url',
            'user_id': 'user_id'
        }

        self._account_name = account_name
        self._account_slug = account_slug
        self._admin_url = admin_url
        self._build_image = build_image
        self._build_settings = build_settings
        self._capabilities = capabilities
        self._created_at = created_at
        self._custom_domain = custom_domain
        self._default_hooks_data = default_hooks_data
        self._deploy_hook = deploy_hook
        self._deploy_url = deploy_url
        self._domain_aliases = domain_aliases
        self._force_ssl = force_ssl
        self._git_provider = git_provider
        self._id = id
        self._id_domain = id_domain
        self._managed_dns = managed_dns
        self._name = name
        self._notification_email = notification_email
        self._password = password
        self._plan = plan
        self._prerender = prerender
        self._processing_settings = processing_settings
        self._published_deploy = published_deploy
        self._screenshot_url = screenshot_url
        self._session_id = session_id
        self._ssl = ssl
        self._ssl_url = ssl_url
        self._state = state
        self._updated_at = updated_at
        self._url = url
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt) -> 'Site':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The site of this Site.  # noqa: E501
        :rtype: Site
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_name(self) -> str:
        """Gets the account_name of this Site.


        :return: The account_name of this Site.
        :rtype: str
        """
        return self._account_name

    @account_name.setter
    def account_name(self, account_name: str):
        """Sets the account_name of this Site.


        :param account_name: The account_name of this Site.
        :type account_name: str
        """

        self._account_name = account_name

    @property
    def account_slug(self) -> str:
        """Gets the account_slug of this Site.


        :return: The account_slug of this Site.
        :rtype: str
        """
        return self._account_slug

    @account_slug.setter
    def account_slug(self, account_slug: str):
        """Sets the account_slug of this Site.


        :param account_slug: The account_slug of this Site.
        :type account_slug: str
        """

        self._account_slug = account_slug

    @property
    def admin_url(self) -> str:
        """Gets the admin_url of this Site.


        :return: The admin_url of this Site.
        :rtype: str
        """
        return self._admin_url

    @admin_url.setter
    def admin_url(self, admin_url: str):
        """Sets the admin_url of this Site.


        :param admin_url: The admin_url of this Site.
        :type admin_url: str
        """

        self._admin_url = admin_url

    @property
    def build_image(self) -> str:
        """Gets the build_image of this Site.


        :return: The build_image of this Site.
        :rtype: str
        """
        return self._build_image

    @build_image.setter
    def build_image(self, build_image: str):
        """Sets the build_image of this Site.


        :param build_image: The build_image of this Site.
        :type build_image: str
        """

        self._build_image = build_image

    @property
    def build_settings(self) -> RepoInfo:
        """Gets the build_settings of this Site.


        :return: The build_settings of this Site.
        :rtype: RepoInfo
        """
        return self._build_settings

    @build_settings.setter
    def build_settings(self, build_settings: RepoInfo):
        """Sets the build_settings of this Site.


        :param build_settings: The build_settings of this Site.
        :type build_settings: RepoInfo
        """

        self._build_settings = build_settings

    @property
    def capabilities(self) -> Dict[str, object]:
        """Gets the capabilities of this Site.


        :return: The capabilities of this Site.
        :rtype: Dict[str, object]
        """
        return self._capabilities

    @capabilities.setter
    def capabilities(self, capabilities: Dict[str, object]):
        """Sets the capabilities of this Site.


        :param capabilities: The capabilities of this Site.
        :type capabilities: Dict[str, object]
        """

        self._capabilities = capabilities

    @property
    def created_at(self) -> str:
        """Gets the created_at of this Site.


        :return: The created_at of this Site.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: str):
        """Sets the created_at of this Site.


        :param created_at: The created_at of this Site.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def custom_domain(self) -> str:
        """Gets the custom_domain of this Site.


        :return: The custom_domain of this Site.
        :rtype: str
        """
        return self._custom_domain

    @custom_domain.setter
    def custom_domain(self, custom_domain: str):
        """Sets the custom_domain of this Site.


        :param custom_domain: The custom_domain of this Site.
        :type custom_domain: str
        """

        self._custom_domain = custom_domain

    @property
    def default_hooks_data(self) -> SiteDefaultHooksData:
        """Gets the default_hooks_data of this Site.


        :return: The default_hooks_data of this Site.
        :rtype: SiteDefaultHooksData
        """
        return self._default_hooks_data

    @default_hooks_data.setter
    def default_hooks_data(self, default_hooks_data: SiteDefaultHooksData):
        """Sets the default_hooks_data of this Site.


        :param default_hooks_data: The default_hooks_data of this Site.
        :type default_hooks_data: SiteDefaultHooksData
        """

        self._default_hooks_data = default_hooks_data

    @property
    def deploy_hook(self) -> str:
        """Gets the deploy_hook of this Site.


        :return: The deploy_hook of this Site.
        :rtype: str
        """
        return self._deploy_hook

    @deploy_hook.setter
    def deploy_hook(self, deploy_hook: str):
        """Sets the deploy_hook of this Site.


        :param deploy_hook: The deploy_hook of this Site.
        :type deploy_hook: str
        """

        self._deploy_hook = deploy_hook

    @property
    def deploy_url(self) -> str:
        """Gets the deploy_url of this Site.


        :return: The deploy_url of this Site.
        :rtype: str
        """
        return self._deploy_url

    @deploy_url.setter
    def deploy_url(self, deploy_url: str):
        """Sets the deploy_url of this Site.


        :param deploy_url: The deploy_url of this Site.
        :type deploy_url: str
        """

        self._deploy_url = deploy_url

    @property
    def domain_aliases(self) -> List[str]:
        """Gets the domain_aliases of this Site.


        :return: The domain_aliases of this Site.
        :rtype: List[str]
        """
        return self._domain_aliases

    @domain_aliases.setter
    def domain_aliases(self, domain_aliases: List[str]):
        """Sets the domain_aliases of this Site.


        :param domain_aliases: The domain_aliases of this Site.
        :type domain_aliases: List[str]
        """

        self._domain_aliases = domain_aliases

    @property
    def force_ssl(self) -> bool:
        """Gets the force_ssl of this Site.


        :return: The force_ssl of this Site.
        :rtype: bool
        """
        return self._force_ssl

    @force_ssl.setter
    def force_ssl(self, force_ssl: bool):
        """Sets the force_ssl of this Site.


        :param force_ssl: The force_ssl of this Site.
        :type force_ssl: bool
        """

        self._force_ssl = force_ssl

    @property
    def git_provider(self) -> str:
        """Gets the git_provider of this Site.


        :return: The git_provider of this Site.
        :rtype: str
        """
        return self._git_provider

    @git_provider.setter
    def git_provider(self, git_provider: str):
        """Sets the git_provider of this Site.


        :param git_provider: The git_provider of this Site.
        :type git_provider: str
        """

        self._git_provider = git_provider

    @property
    def id(self) -> str:
        """Gets the id of this Site.


        :return: The id of this Site.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this Site.


        :param id: The id of this Site.
        :type id: str
        """

        self._id = id

    @property
    def id_domain(self) -> str:
        """Gets the id_domain of this Site.


        :return: The id_domain of this Site.
        :rtype: str
        """
        return self._id_domain

    @id_domain.setter
    def id_domain(self, id_domain: str):
        """Sets the id_domain of this Site.


        :param id_domain: The id_domain of this Site.
        :type id_domain: str
        """

        self._id_domain = id_domain

    @property
    def managed_dns(self) -> bool:
        """Gets the managed_dns of this Site.


        :return: The managed_dns of this Site.
        :rtype: bool
        """
        return self._managed_dns

    @managed_dns.setter
    def managed_dns(self, managed_dns: bool):
        """Sets the managed_dns of this Site.


        :param managed_dns: The managed_dns of this Site.
        :type managed_dns: bool
        """

        self._managed_dns = managed_dns

    @property
    def name(self) -> str:
        """Gets the name of this Site.


        :return: The name of this Site.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Site.


        :param name: The name of this Site.
        :type name: str
        """

        self._name = name

    @property
    def notification_email(self) -> str:
        """Gets the notification_email of this Site.


        :return: The notification_email of this Site.
        :rtype: str
        """
        return self._notification_email

    @notification_email.setter
    def notification_email(self, notification_email: str):
        """Sets the notification_email of this Site.


        :param notification_email: The notification_email of this Site.
        :type notification_email: str
        """

        self._notification_email = notification_email

    @property
    def password(self) -> str:
        """Gets the password of this Site.


        :return: The password of this Site.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password: str):
        """Sets the password of this Site.


        :param password: The password of this Site.
        :type password: str
        """

        self._password = password

    @property
    def plan(self) -> str:
        """Gets the plan of this Site.


        :return: The plan of this Site.
        :rtype: str
        """
        return self._plan

    @plan.setter
    def plan(self, plan: str):
        """Sets the plan of this Site.


        :param plan: The plan of this Site.
        :type plan: str
        """

        self._plan = plan

    @property
    def prerender(self) -> str:
        """Gets the prerender of this Site.


        :return: The prerender of this Site.
        :rtype: str
        """
        return self._prerender

    @prerender.setter
    def prerender(self, prerender: str):
        """Sets the prerender of this Site.


        :param prerender: The prerender of this Site.
        :type prerender: str
        """

        self._prerender = prerender

    @property
    def processing_settings(self) -> SiteProcessingSettings:
        """Gets the processing_settings of this Site.


        :return: The processing_settings of this Site.
        :rtype: SiteProcessingSettings
        """
        return self._processing_settings

    @processing_settings.setter
    def processing_settings(self, processing_settings: SiteProcessingSettings):
        """Sets the processing_settings of this Site.


        :param processing_settings: The processing_settings of this Site.
        :type processing_settings: SiteProcessingSettings
        """

        self._processing_settings = processing_settings

    @property
    def published_deploy(self) -> Deploy:
        """Gets the published_deploy of this Site.


        :return: The published_deploy of this Site.
        :rtype: Deploy
        """
        return self._published_deploy

    @published_deploy.setter
    def published_deploy(self, published_deploy: Deploy):
        """Sets the published_deploy of this Site.


        :param published_deploy: The published_deploy of this Site.
        :type published_deploy: Deploy
        """

        self._published_deploy = published_deploy

    @property
    def screenshot_url(self) -> str:
        """Gets the screenshot_url of this Site.


        :return: The screenshot_url of this Site.
        :rtype: str
        """
        return self._screenshot_url

    @screenshot_url.setter
    def screenshot_url(self, screenshot_url: str):
        """Sets the screenshot_url of this Site.


        :param screenshot_url: The screenshot_url of this Site.
        :type screenshot_url: str
        """

        self._screenshot_url = screenshot_url

    @property
    def session_id(self) -> str:
        """Gets the session_id of this Site.


        :return: The session_id of this Site.
        :rtype: str
        """
        return self._session_id

    @session_id.setter
    def session_id(self, session_id: str):
        """Sets the session_id of this Site.


        :param session_id: The session_id of this Site.
        :type session_id: str
        """

        self._session_id = session_id

    @property
    def ssl(self) -> bool:
        """Gets the ssl of this Site.


        :return: The ssl of this Site.
        :rtype: bool
        """
        return self._ssl

    @ssl.setter
    def ssl(self, ssl: bool):
        """Sets the ssl of this Site.


        :param ssl: The ssl of this Site.
        :type ssl: bool
        """

        self._ssl = ssl

    @property
    def ssl_url(self) -> str:
        """Gets the ssl_url of this Site.


        :return: The ssl_url of this Site.
        :rtype: str
        """
        return self._ssl_url

    @ssl_url.setter
    def ssl_url(self, ssl_url: str):
        """Sets the ssl_url of this Site.


        :param ssl_url: The ssl_url of this Site.
        :type ssl_url: str
        """

        self._ssl_url = ssl_url

    @property
    def state(self) -> str:
        """Gets the state of this Site.


        :return: The state of this Site.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state: str):
        """Sets the state of this Site.


        :param state: The state of this Site.
        :type state: str
        """

        self._state = state

    @property
    def updated_at(self) -> str:
        """Gets the updated_at of this Site.


        :return: The updated_at of this Site.
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at: str):
        """Sets the updated_at of this Site.


        :param updated_at: The updated_at of this Site.
        :type updated_at: str
        """

        self._updated_at = updated_at

    @property
    def url(self) -> str:
        """Gets the url of this Site.


        :return: The url of this Site.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url: str):
        """Sets the url of this Site.


        :param url: The url of this Site.
        :type url: str
        """

        self._url = url

    @property
    def user_id(self) -> str:
        """Gets the user_id of this Site.


        :return: The user_id of this Site.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id: str):
        """Sets the user_id of this Site.


        :param user_id: The user_id of this Site.
        :type user_id: str
        """

        self._user_id = user_id
