from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class AuditLog(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id=None, id=None, payload=None):  # noqa: E501
        """AuditLog - a model defined in OpenAPI

        :param account_id: The account_id of this AuditLog.  # noqa: E501
        :type account_id: str
        :param id: The id of this AuditLog.  # noqa: E501
        :type id: str
        :param payload: The payload of this AuditLog.  # noqa: E501
        :type payload: Dict[str, object]
        """
        self.openapi_types = {
            'account_id': str,
            'id': str,
            'payload': Dict[str, object]
        }

        self.attribute_map = {
            'account_id': 'account_id',
            'id': 'id',
            'payload': 'payload'
        }

        self._account_id = account_id
        self._id = id
        self._payload = payload

    @classmethod
    def from_dict(cls, dikt) -> 'AuditLog':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The auditLog of this AuditLog.  # noqa: E501
        :rtype: AuditLog
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self) -> str:
        """Gets the account_id of this AuditLog.


        :return: The account_id of this AuditLog.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id: str):
        """Sets the account_id of this AuditLog.


        :param account_id: The account_id of this AuditLog.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def id(self) -> str:
        """Gets the id of this AuditLog.


        :return: The id of this AuditLog.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this AuditLog.


        :param id: The id of this AuditLog.
        :type id: str
        """

        self._id = id

    @property
    def payload(self) -> Dict[str, object]:
        """Gets the payload of this AuditLog.


        :return: The payload of this AuditLog.
        :rtype: Dict[str, object]
        """
        return self._payload

    @payload.setter
    def payload(self, payload: Dict[str, object]):
        """Sets the payload of this AuditLog.


        :param payload: The payload of this AuditLog.
        :type payload: Dict[str, object]
        """

        self._payload = payload
