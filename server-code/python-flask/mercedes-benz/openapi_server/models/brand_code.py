from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.brand import Brand
from openapi_server import util

from openapi_server.models.brand import Brand  # noqa: E501

class BrandCode(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, brand=None):  # noqa: E501
        """BrandCode - a model defined in OpenAPI

        :param brand: The brand of this BrandCode.  # noqa: E501
        :type brand: Brand
        """
        self.openapi_types = {
            'brand': Brand
        }

        self.attribute_map = {
            'brand': 'brand'
        }

        self._brand = brand

    @classmethod
    def from_dict(cls, dikt) -> 'BrandCode':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BrandCode of this BrandCode.  # noqa: E501
        :rtype: BrandCode
        """
        return util.deserialize_model(dikt, cls)

    @property
    def brand(self) -> Brand:
        """Gets the brand of this BrandCode.


        :return: The brand of this BrandCode.
        :rtype: Brand
        """
        return self._brand

    @brand.setter
    def brand(self, brand: Brand):
        """Sets the brand of this BrandCode.


        :param brand: The brand of this BrandCode.
        :type brand: Brand
        """
        if brand is None:
            raise ValueError("Invalid value for `brand`, must not be `None`")  # noqa: E501

        self._brand = brand
