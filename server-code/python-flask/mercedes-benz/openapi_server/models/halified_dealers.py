from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.dealer import Dealer
from openapi_server.models.default_links import DefaultLinks
from openapi_server import util

from openapi_server.models.dealer import Dealer  # noqa: E501
from openapi_server.models.default_links import DefaultLinks  # noqa: E501

class HalifiedDealers(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, links=None, dealers=None):  # noqa: E501
        """HalifiedDealers - a model defined in OpenAPI

        :param links: The links of this HalifiedDealers.  # noqa: E501
        :type links: DefaultLinks
        :param dealers: The dealers of this HalifiedDealers.  # noqa: E501
        :type dealers: List[Dealer]
        """
        self.openapi_types = {
            'links': DefaultLinks,
            'dealers': List[Dealer]
        }

        self.attribute_map = {
            'links': '_links',
            'dealers': 'dealers'
        }

        self._links = links
        self._dealers = dealers

    @classmethod
    def from_dict(cls, dikt) -> 'HalifiedDealers':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The HalifiedDealers of this HalifiedDealers.  # noqa: E501
        :rtype: HalifiedDealers
        """
        return util.deserialize_model(dikt, cls)

    @property
    def links(self) -> DefaultLinks:
        """Gets the links of this HalifiedDealers.


        :return: The links of this HalifiedDealers.
        :rtype: DefaultLinks
        """
        return self._links

    @links.setter
    def links(self, links: DefaultLinks):
        """Sets the links of this HalifiedDealers.


        :param links: The links of this HalifiedDealers.
        :type links: DefaultLinks
        """
        if links is None:
            raise ValueError("Invalid value for `links`, must not be `None`")  # noqa: E501

        self._links = links

    @property
    def dealers(self) -> List[Dealer]:
        """Gets the dealers of this HalifiedDealers.

        dealers  # noqa: E501

        :return: The dealers of this HalifiedDealers.
        :rtype: List[Dealer]
        """
        return self._dealers

    @dealers.setter
    def dealers(self, dealers: List[Dealer]):
        """Sets the dealers of this HalifiedDealers.

        dealers  # noqa: E501

        :param dealers: The dealers of this HalifiedDealers.
        :type dealers: List[Dealer]
        """

        self._dealers = dealers
