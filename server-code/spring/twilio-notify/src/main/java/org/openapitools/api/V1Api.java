/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.2.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.BindingEnumBindingType;
import org.openapitools.model.CredentialEnumPushService;
import org.springframework.format.annotation.DateTimeFormat;
import org.openapitools.model.ListBindingResponse;
import org.openapitools.model.ListCredentialResponse;
import org.openapitools.model.ListServiceResponse;
import java.time.LocalDate;
import org.openapitools.model.NotificationEnumPriority;
import org.openapitools.model.NotifyV1Credential;
import org.openapitools.model.NotifyV1Service;
import org.openapitools.model.NotifyV1ServiceBinding;
import org.openapitools.model.NotifyV1ServiceNotification;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-01-06T13:55:49.917798-04:00[America/Lower_Princes]")
@Validated
@Tag(name = "NotifyV1Binding", description = "the NotifyV1Binding API")
public interface V1Api {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /v1/Services/{ServiceSid}/Bindings
     * 
     *
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/notify/api/service-resource) to create the resource under. (required)
     * @param address The channel-specific address. For APNS, the device token. For FCM and GCM, the registration token. For SMS, a phone number in E.164 format. For Facebook Messenger, the Messenger ID of the user or a phone number in E.164 format. (required)
     * @param bindingType  (required)
     * @param identity The &#x60;identity&#x60; value that uniquely identifies the new resource&#39;s [User](https://www.twilio.com/docs/chat/rest/user-resource) within the [Service](https://www.twilio.com/docs/notify/api/service-resource). Up to 20 Bindings can be created for the same Identity in a given Service. (required)
     * @param credentialSid The SID of the [Credential](https://www.twilio.com/docs/notify/api/credential-resource) resource to be used to send notifications to this Binding. If present, this overrides the Credential specified in the Service resource. Applies to only &#x60;apn&#x60;, &#x60;fcm&#x60;, and &#x60;gcm&#x60; type Bindings. (optional)
     * @param endpoint Deprecated. (optional)
     * @param notificationProtocolVersion The protocol version to use to send the notification. This defaults to the value of &#x60;default_xxxx_notification_protocol_version&#x60; for the protocol in the [Service](https://www.twilio.com/docs/notify/api/service-resource). The current version is &#x60;\\\&quot;3\\\&quot;&#x60; for &#x60;apn&#x60;, &#x60;fcm&#x60;, and &#x60;gcm&#x60; type Bindings. The parameter is not applicable to &#x60;sms&#x60; and &#x60;facebook-messenger&#x60; type Bindings as the data format is fixed. (optional)
     * @param tag A tag that can be used to select the Bindings to notify. Repeat this parameter to specify more than one tag, up to a total of 20 tags. (optional)
     * @return Created (status code 201)
     */
    @Operation(
        operationId = "createBinding",
        description = "",
        tags = { "NotifyV1Binding" },
        responses = {
            @ApiResponse(responseCode = "201", description = "Created", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = NotifyV1ServiceBinding.class))
            })
        },
        security = {
            @SecurityRequirement(name = "accountSid_authToken")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/v1/Services/{ServiceSid}/Bindings",
        produces = { "application/json" },
        consumes = { "application/x-www-form-urlencoded" }
    )
    
    default ResponseEntity<NotifyV1ServiceBinding> createBinding(
        @Pattern(regexp = "^IS[0-9a-fA-F]{32}$") @Size(min = 34, max = 34) @Parameter(name = "ServiceSid", description = "The SID of the [Service](https://www.twilio.com/docs/notify/api/service-resource) to create the resource under.", required = true, in = ParameterIn.PATH) @PathVariable("ServiceSid") String serviceSid,
        @Parameter(name = "Address", description = "The channel-specific address. For APNS, the device token. For FCM and GCM, the registration token. For SMS, a phone number in E.164 format. For Facebook Messenger, the Messenger ID of the user or a phone number in E.164 format.", required = true) @Valid @RequestParam(value = "Address", required = true) String address,
        @Parameter(name = "BindingType", description = "", required = true) @Valid @RequestParam(value = "BindingType", required = true) BindingEnumBindingType bindingType,
        @Parameter(name = "Identity", description = "The `identity` value that uniquely identifies the new resource's [User](https://www.twilio.com/docs/chat/rest/user-resource) within the [Service](https://www.twilio.com/docs/notify/api/service-resource). Up to 20 Bindings can be created for the same Identity in a given Service.", required = true) @Valid @RequestParam(value = "Identity", required = true) String identity,
        @Parameter(name = "CredentialSid", description = "The SID of the [Credential](https://www.twilio.com/docs/notify/api/credential-resource) resource to be used to send notifications to this Binding. If present, this overrides the Credential specified in the Service resource. Applies to only `apn`, `fcm`, and `gcm` type Bindings.") @Valid @RequestParam(value = "CredentialSid", required = false) String credentialSid,
        @Parameter(name = "Endpoint", description = "Deprecated.") @Valid @RequestParam(value = "Endpoint", required = false) String endpoint,
        @Parameter(name = "NotificationProtocolVersion", description = "The protocol version to use to send the notification. This defaults to the value of `default_xxxx_notification_protocol_version` for the protocol in the [Service](https://www.twilio.com/docs/notify/api/service-resource). The current version is `\\\"3\\\"` for `apn`, `fcm`, and `gcm` type Bindings. The parameter is not applicable to `sms` and `facebook-messenger` type Bindings as the data format is fixed.") @Valid @RequestParam(value = "NotificationProtocolVersion", required = false) String notificationProtocolVersion,
        @Parameter(name = "Tag", description = "A tag that can be used to select the Bindings to notify. Repeat this parameter to specify more than one tag, up to a total of 20 tags.") @Valid @RequestPart(value = "Tag", required = false) List<String> tag
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"credential_sid\" : \"credential_sid\", \"binding_type\" : \"binding_type\", \"address\" : \"address\", \"date_updated\" : \"2000-01-23T04:56:07.000+00:00\", \"date_created\" : \"2000-01-23T04:56:07.000+00:00\", \"url\" : \"https://openapi-generator.tech\", \"sid\" : \"sid\", \"tags\" : [ \"tags\", \"tags\" ], \"service_sid\" : \"service_sid\", \"endpoint\" : \"endpoint\", \"identity\" : \"identity\", \"notification_protocol_version\" : \"notification_protocol_version\", \"account_sid\" : \"account_sid\", \"links\" : \"{}\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /v1/Credentials
     * 
     *
     * @param type  (required)
     * @param apiKey [GCM only] The &#x60;Server key&#x60; of your project from Firebase console under Settings / Cloud messaging. (optional)
     * @param certificate [APN only] The URL-encoded representation of the certificate. Strip everything outside of the headers, e.g. &#x60;-----BEGIN CERTIFICATE-----MIIFnTCCBIWgAwIBAgIIAjy9H849+E8wDQYJKoZIhvcNAQEFBQAwgZYxCzAJBgNV.....A&#x3D;&#x3D;-----END CERTIFICATE-----&#x60; (optional)
     * @param friendlyName A descriptive string that you create to describe the resource. It can be up to 64 characters long. (optional)
     * @param privateKey [APN only] The URL-encoded representation of the private key. Strip everything outside of the headers, e.g. &#x60;-----BEGIN RSA PRIVATE KEY-----MIIEpQIBAAKCAQEAuyf/lNrH9ck8DmNyo3fGgvCI1l9s+cmBY3WIz+cUDqmxiieR\\\\n.-----END RSA PRIVATE KEY-----&#x60; (optional)
     * @param sandbox [APN only] Whether to send the credential to sandbox APNs. Can be &#x60;true&#x60; to send to sandbox APNs or &#x60;false&#x60; to send to production. (optional)
     * @param secret [FCM only] The &#x60;Server key&#x60; of your project from Firebase console under Settings / Cloud messaging. (optional)
     * @return Created (status code 201)
     */
    @Operation(
        operationId = "createCredential",
        description = "",
        tags = { "NotifyV1Credential" },
        responses = {
            @ApiResponse(responseCode = "201", description = "Created", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = NotifyV1Credential.class))
            })
        },
        security = {
            @SecurityRequirement(name = "accountSid_authToken")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/v1/Credentials",
        produces = { "application/json" },
        consumes = { "application/x-www-form-urlencoded" }
    )
    
    default ResponseEntity<NotifyV1Credential> createCredential(
        @Parameter(name = "Type", description = "", required = true) @Valid @RequestParam(value = "Type", required = true) CredentialEnumPushService type,
        @Parameter(name = "ApiKey", description = "[GCM only] The `Server key` of your project from Firebase console under Settings / Cloud messaging.") @Valid @RequestParam(value = "ApiKey", required = false) String apiKey,
        @Parameter(name = "Certificate", description = "[APN only] The URL-encoded representation of the certificate. Strip everything outside of the headers, e.g. `-----BEGIN CERTIFICATE-----MIIFnTCCBIWgAwIBAgIIAjy9H849+E8wDQYJKoZIhvcNAQEFBQAwgZYxCzAJBgNV.....A==-----END CERTIFICATE-----`") @Valid @RequestParam(value = "Certificate", required = false) String certificate,
        @Parameter(name = "FriendlyName", description = "A descriptive string that you create to describe the resource. It can be up to 64 characters long.") @Valid @RequestParam(value = "FriendlyName", required = false) String friendlyName,
        @Parameter(name = "PrivateKey", description = "[APN only] The URL-encoded representation of the private key. Strip everything outside of the headers, e.g. `-----BEGIN RSA PRIVATE KEY-----MIIEpQIBAAKCAQEAuyf/lNrH9ck8DmNyo3fGgvCI1l9s+cmBY3WIz+cUDqmxiieR\\\\n.-----END RSA PRIVATE KEY-----`") @Valid @RequestParam(value = "PrivateKey", required = false) String privateKey,
        @Parameter(name = "Sandbox", description = "[APN only] Whether to send the credential to sandbox APNs. Can be `true` to send to sandbox APNs or `false` to send to production.") @Valid @RequestParam(value = "Sandbox", required = false) Boolean sandbox,
        @Parameter(name = "Secret", description = "[FCM only] The `Server key` of your project from Firebase console under Settings / Cloud messaging.") @Valid @RequestParam(value = "Secret", required = false) String secret
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"friendly_name\" : \"friendly_name\", \"date_updated\" : \"2000-01-23T04:56:07.000+00:00\", \"date_created\" : \"2000-01-23T04:56:07.000+00:00\", \"sandbox\" : \"sandbox\", \"account_sid\" : \"account_sid\", \"type\" : \"type\", \"url\" : \"https://openapi-generator.tech\", \"sid\" : \"sid\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /v1/Services/{ServiceSid}/Notifications
     * 
     *
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/notify/api/service-resource) to create the resource under. (required)
     * @param action The actions to display for the notification. For APNS, translates to the &#x60;aps.category&#x60; value. For GCM, translates to the &#x60;data.twi_action&#x60; value. For SMS, this parameter is not supported and is omitted from deliveries to those channels. (optional)
     * @param alexa Deprecated. (optional)
     * @param apn The APNS-specific payload that overrides corresponding attributes in the generic payload for APNS Bindings. This property maps to the APNS &#x60;Payload&#x60; item, therefore the &#x60;aps&#x60; key must be used to change standard attributes. Adds custom key-value pairs to the root of the dictionary. See the [APNS documentation](https://developer.apple.com/library/content/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/CommunicatingwithAPNs.html) for more details. We reserve keys that start with &#x60;twi_&#x60; for future use. Custom keys that start with &#x60;twi_&#x60; are not allowed. (optional)
     * @param body The notification text. For FCM and GCM, translates to &#x60;data.twi_body&#x60;. For APNS, translates to &#x60;aps.alert.body&#x60;. For SMS, translates to &#x60;body&#x60;. SMS requires either this &#x60;body&#x60; value, or &#x60;media_urls&#x60; attribute defined in the &#x60;sms&#x60; parameter of the notification. (optional)
     * @param data The custom key-value pairs of the notification&#39;s payload. For FCM and GCM, this value translates to &#x60;data&#x60; in the FCM and GCM payloads. FCM and GCM [reserve certain keys](https://firebase.google.com/docs/cloud-messaging/http-server-ref) that cannot be used in those channels. For APNS, attributes of &#x60;data&#x60; are inserted into the APNS payload as custom properties outside of the &#x60;aps&#x60; dictionary. In all channels, we reserve keys that start with &#x60;twi_&#x60; for future use. Custom keys that start with &#x60;twi_&#x60; are not allowed and are rejected as 400 Bad request with no delivery attempted. For SMS, this parameter is not supported and is omitted from deliveries to those channels. (optional)
     * @param deliveryCallbackUrl URL to send webhooks. (optional)
     * @param facebookMessenger Deprecated. (optional)
     * @param fcm The FCM-specific payload that overrides corresponding attributes in the generic payload for FCM Bindings. This property maps to the root JSON dictionary. See the [FCM documentation](https://firebase.google.com/docs/cloud-messaging/http-server-ref#downstream) for more details. Target parameters &#x60;to&#x60;, &#x60;registration_ids&#x60;, &#x60;condition&#x60;, and &#x60;notification_key&#x60; are not allowed in this parameter. We reserve keys that start with &#x60;twi_&#x60; for future use. Custom keys that start with &#x60;twi_&#x60; are not allowed. FCM also [reserves certain keys](https://firebase.google.com/docs/cloud-messaging/http-server-ref), which cannot be used in that channel. (optional)
     * @param gcm The GCM-specific payload that overrides corresponding attributes in the generic payload for GCM Bindings.  This property maps to the root JSON dictionary. See the [GCM documentation](https://firebase.google.com/docs/cloud-messaging/http-server-ref) for more details. Target parameters &#x60;to&#x60;, &#x60;registration_ids&#x60;, and &#x60;notification_key&#x60; are not allowed. We reserve keys that start with &#x60;twi_&#x60; for future use. Custom keys that start with &#x60;twi_&#x60; are not allowed. GCM also [reserves certain keys](https://firebase.google.com/docs/cloud-messaging/http-server-ref). (optional)
     * @param identity The &#x60;identity&#x60; value that uniquely identifies the new resource&#39;s [User](https://www.twilio.com/docs/chat/rest/user-resource) within the [Service](https://www.twilio.com/docs/notify/api/service-resource). Delivery will be attempted only to Bindings with an Identity in this list. No more than 20 items are allowed in this list. (optional)
     * @param priority  (optional)
     * @param segment The Segment resource is deprecated. Use the &#x60;tag&#x60; parameter, instead. (optional)
     * @param sms The SMS-specific payload that overrides corresponding attributes in the generic payload for SMS Bindings.  Each attribute in this value maps to the corresponding &#x60;form&#x60; parameter of the Twilio [Message](https://www.twilio.com/docs/sms/quickstart) resource.  These parameters of the Message resource are supported in snake case format: &#x60;body&#x60;, &#x60;media_urls&#x60;, &#x60;status_callback&#x60;, and &#x60;max_price&#x60;.  The &#x60;status_callback&#x60; parameter overrides the corresponding parameter in the messaging service, if configured. The &#x60;media_urls&#x60; property expects a JSON array. (optional)
     * @param sound The name of the sound to be played for the notification. For FCM and GCM, this Translates to &#x60;data.twi_sound&#x60;.  For APNS, this translates to &#x60;aps.sound&#x60;.  SMS does not support this property. (optional)
     * @param tag A tag that selects the Bindings to notify. Repeat this parameter to specify more than one tag, up to a total of 5 tags. The implicit tag &#x60;all&#x60; is available to notify all Bindings in a Service instance. Similarly, the implicit tags &#x60;apn&#x60;, &#x60;fcm&#x60;, &#x60;gcm&#x60;, &#x60;sms&#x60; and &#x60;facebook-messenger&#x60; are available to notify all Bindings in a specific channel. (optional)
     * @param title The notification title. For FCM and GCM, this translates to the &#x60;data.twi_title&#x60; value. For APNS, this translates to the &#x60;aps.alert.title&#x60; value. SMS does not support this property. This field is not visible on iOS phones and tablets but appears on Apple Watch and Android devices. (optional)
     * @param toBinding The destination address specified as a JSON string.  Multiple &#x60;to_binding&#x60; parameters can be included but the total size of the request entity should not exceed 1MB. This is typically sufficient for 10,000 phone numbers. (optional)
     * @param ttl How long, in seconds, the notification is valid. Can be an integer between 0 and 2,419,200, which is 4 weeks, the default and the maximum supported time to live (TTL). Delivery should be attempted if the device is offline until the TTL elapses. Zero means that the notification delivery is attempted immediately, only once, and is not stored for future delivery. SMS does not support this property. (optional)
     * @return Created (status code 201)
     */
    @Operation(
        operationId = "createNotification",
        description = "",
        tags = { "NotifyV1Notification" },
        responses = {
            @ApiResponse(responseCode = "201", description = "Created", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = NotifyV1ServiceNotification.class))
            })
        },
        security = {
            @SecurityRequirement(name = "accountSid_authToken")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/v1/Services/{ServiceSid}/Notifications",
        produces = { "application/json" },
        consumes = { "application/x-www-form-urlencoded" }
    )
    
    default ResponseEntity<NotifyV1ServiceNotification> createNotification(
        @Pattern(regexp = "^IS[0-9a-fA-F]{32}$") @Size(min = 34, max = 34) @Parameter(name = "ServiceSid", description = "The SID of the [Service](https://www.twilio.com/docs/notify/api/service-resource) to create the resource under.", required = true, in = ParameterIn.PATH) @PathVariable("ServiceSid") String serviceSid,
        @Parameter(name = "Action", description = "The actions to display for the notification. For APNS, translates to the `aps.category` value. For GCM, translates to the `data.twi_action` value. For SMS, this parameter is not supported and is omitted from deliveries to those channels.") @Valid @RequestParam(value = "Action", required = false) String action,
        @Parameter(name = "Alexa", description = "Deprecated.") @Valid @RequestParam(value = "Alexa", required = false) Object alexa,
        @Parameter(name = "Apn", description = "The APNS-specific payload that overrides corresponding attributes in the generic payload for APNS Bindings. This property maps to the APNS `Payload` item, therefore the `aps` key must be used to change standard attributes. Adds custom key-value pairs to the root of the dictionary. See the [APNS documentation](https://developer.apple.com/library/content/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/CommunicatingwithAPNs.html) for more details. We reserve keys that start with `twi_` for future use. Custom keys that start with `twi_` are not allowed.") @Valid @RequestParam(value = "Apn", required = false) Object apn,
        @Parameter(name = "Body", description = "The notification text. For FCM and GCM, translates to `data.twi_body`. For APNS, translates to `aps.alert.body`. For SMS, translates to `body`. SMS requires either this `body` value, or `media_urls` attribute defined in the `sms` parameter of the notification.") @Valid @RequestParam(value = "Body", required = false) String body,
        @Parameter(name = "Data", description = "The custom key-value pairs of the notification's payload. For FCM and GCM, this value translates to `data` in the FCM and GCM payloads. FCM and GCM [reserve certain keys](https://firebase.google.com/docs/cloud-messaging/http-server-ref) that cannot be used in those channels. For APNS, attributes of `data` are inserted into the APNS payload as custom properties outside of the `aps` dictionary. In all channels, we reserve keys that start with `twi_` for future use. Custom keys that start with `twi_` are not allowed and are rejected as 400 Bad request with no delivery attempted. For SMS, this parameter is not supported and is omitted from deliveries to those channels.") @Valid @RequestParam(value = "Data", required = false) Object data,
        @Parameter(name = "DeliveryCallbackUrl", description = "URL to send webhooks.") @Valid @RequestParam(value = "DeliveryCallbackUrl", required = false) String deliveryCallbackUrl,
        @Parameter(name = "FacebookMessenger", description = "Deprecated.") @Valid @RequestParam(value = "FacebookMessenger", required = false) Object facebookMessenger,
        @Parameter(name = "Fcm", description = "The FCM-specific payload that overrides corresponding attributes in the generic payload for FCM Bindings. This property maps to the root JSON dictionary. See the [FCM documentation](https://firebase.google.com/docs/cloud-messaging/http-server-ref#downstream) for more details. Target parameters `to`, `registration_ids`, `condition`, and `notification_key` are not allowed in this parameter. We reserve keys that start with `twi_` for future use. Custom keys that start with `twi_` are not allowed. FCM also [reserves certain keys](https://firebase.google.com/docs/cloud-messaging/http-server-ref), which cannot be used in that channel.") @Valid @RequestParam(value = "Fcm", required = false) Object fcm,
        @Parameter(name = "Gcm", description = "The GCM-specific payload that overrides corresponding attributes in the generic payload for GCM Bindings.  This property maps to the root JSON dictionary. See the [GCM documentation](https://firebase.google.com/docs/cloud-messaging/http-server-ref) for more details. Target parameters `to`, `registration_ids`, and `notification_key` are not allowed. We reserve keys that start with `twi_` for future use. Custom keys that start with `twi_` are not allowed. GCM also [reserves certain keys](https://firebase.google.com/docs/cloud-messaging/http-server-ref).") @Valid @RequestParam(value = "Gcm", required = false) Object gcm,
        @Parameter(name = "Identity", description = "The `identity` value that uniquely identifies the new resource's [User](https://www.twilio.com/docs/chat/rest/user-resource) within the [Service](https://www.twilio.com/docs/notify/api/service-resource). Delivery will be attempted only to Bindings with an Identity in this list. No more than 20 items are allowed in this list.") @Valid @RequestPart(value = "Identity", required = false) List<String> identity,
        @Parameter(name = "Priority", description = "") @Valid @RequestParam(value = "Priority", required = false) NotificationEnumPriority priority,
        @Parameter(name = "Segment", description = "The Segment resource is deprecated. Use the `tag` parameter, instead.") @Valid @RequestPart(value = "Segment", required = false) List<String> segment,
        @Parameter(name = "Sms", description = "The SMS-specific payload that overrides corresponding attributes in the generic payload for SMS Bindings.  Each attribute in this value maps to the corresponding `form` parameter of the Twilio [Message](https://www.twilio.com/docs/sms/quickstart) resource.  These parameters of the Message resource are supported in snake case format: `body`, `media_urls`, `status_callback`, and `max_price`.  The `status_callback` parameter overrides the corresponding parameter in the messaging service, if configured. The `media_urls` property expects a JSON array.") @Valid @RequestParam(value = "Sms", required = false) Object sms,
        @Parameter(name = "Sound", description = "The name of the sound to be played for the notification. For FCM and GCM, this Translates to `data.twi_sound`.  For APNS, this translates to `aps.sound`.  SMS does not support this property.") @Valid @RequestParam(value = "Sound", required = false) String sound,
        @Parameter(name = "Tag", description = "A tag that selects the Bindings to notify. Repeat this parameter to specify more than one tag, up to a total of 5 tags. The implicit tag `all` is available to notify all Bindings in a Service instance. Similarly, the implicit tags `apn`, `fcm`, `gcm`, `sms` and `facebook-messenger` are available to notify all Bindings in a specific channel.") @Valid @RequestPart(value = "Tag", required = false) List<String> tag,
        @Parameter(name = "Title", description = "The notification title. For FCM and GCM, this translates to the `data.twi_title` value. For APNS, this translates to the `aps.alert.title` value. SMS does not support this property. This field is not visible on iOS phones and tablets but appears on Apple Watch and Android devices.") @Valid @RequestParam(value = "Title", required = false) String title,
        @Parameter(name = "ToBinding", description = "The destination address specified as a JSON string.  Multiple `to_binding` parameters can be included but the total size of the request entity should not exceed 1MB. This is typically sufficient for 10,000 phone numbers.") @Valid @RequestPart(value = "ToBinding", required = false) List<String> toBinding,
        @Parameter(name = "Ttl", description = "How long, in seconds, the notification is valid. Can be an integer between 0 and 2,419,200, which is 4 weeks, the default and the maximum supported time to live (TTL). Delivery should be attempted if the device is offline until the TTL elapses. Zero means that the notification delivery is attempted immediately, only once, and is not stored for future delivery. SMS does not support this property.") @Valid @RequestParam(value = "Ttl", required = false) Integer ttl
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"data\" : \"\", \"date_created\" : \"2000-01-23T04:56:07.000+00:00\", \"sound\" : \"sound\", \"facebook_messenger\" : \"\", \"alexa\" : \"\", \"body\" : \"body\", \"priority\" : \"priority\", \"title\" : \"title\", \"ttl\" : 0, \"segments\" : [ \"segments\", \"segments\" ], \"sid\" : \"sid\", \"tags\" : [ \"tags\", \"tags\" ], \"gcm\" : \"\", \"service_sid\" : \"service_sid\", \"fcm\" : \"\", \"identities\" : [ \"identities\", \"identities\" ], \"sms\" : \"\", \"account_sid\" : \"account_sid\", \"action\" : \"action\", \"apn\" : \"\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /v1/Services
     * 
     *
     * @param alexaSkillId Deprecated. (optional)
     * @param apnCredentialSid The SID of the [Credential](https://www.twilio.com/docs/notify/api/credential-resource) to use for APN Bindings. (optional)
     * @param defaultAlexaNotificationProtocolVersion Deprecated. (optional)
     * @param defaultApnNotificationProtocolVersion The protocol version to use for sending APNS notifications. Can be overridden on a Binding by Binding basis when creating a [Binding](https://www.twilio.com/docs/notify/api/binding-resource) resource. (optional)
     * @param defaultFcmNotificationProtocolVersion The protocol version to use for sending FCM notifications. Can be overridden on a Binding by Binding basis when creating a [Binding](https://www.twilio.com/docs/notify/api/binding-resource) resource. (optional)
     * @param defaultGcmNotificationProtocolVersion The protocol version to use for sending GCM notifications. Can be overridden on a Binding by Binding basis when creating a [Binding](https://www.twilio.com/docs/notify/api/binding-resource) resource. (optional)
     * @param deliveryCallbackEnabled Callback configuration that enables delivery callbacks, default false (optional)
     * @param deliveryCallbackUrl URL to send delivery status callback. (optional)
     * @param facebookMessengerPageId Deprecated. (optional)
     * @param fcmCredentialSid The SID of the [Credential](https://www.twilio.com/docs/notify/api/credential-resource) to use for FCM Bindings. (optional)
     * @param friendlyName A descriptive string that you create to describe the resource. It can be up to 64 characters long. (optional)
     * @param gcmCredentialSid The SID of the [Credential](https://www.twilio.com/docs/notify/api/credential-resource) to use for GCM Bindings. (optional)
     * @param logEnabled Whether to log notifications. Can be: &#x60;true&#x60; or &#x60;false&#x60; and the default is &#x60;true&#x60;. (optional)
     * @param messagingServiceSid The SID of the [Messaging Service](https://www.twilio.com/docs/sms/quickstart#messaging-services) to use for SMS Bindings. This parameter must be set in order to send SMS notifications. (optional)
     * @return Created (status code 201)
     */
    @Operation(
        operationId = "createService",
        description = "",
        tags = { "NotifyV1Service" },
        responses = {
            @ApiResponse(responseCode = "201", description = "Created", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = NotifyV1Service.class))
            })
        },
        security = {
            @SecurityRequirement(name = "accountSid_authToken")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/v1/Services",
        produces = { "application/json" },
        consumes = { "application/x-www-form-urlencoded" }
    )
    
    default ResponseEntity<NotifyV1Service> createService(
        @Parameter(name = "AlexaSkillId", description = "Deprecated.") @Valid @RequestParam(value = "AlexaSkillId", required = false) String alexaSkillId,
        @Parameter(name = "ApnCredentialSid", description = "The SID of the [Credential](https://www.twilio.com/docs/notify/api/credential-resource) to use for APN Bindings.") @Valid @RequestParam(value = "ApnCredentialSid", required = false) String apnCredentialSid,
        @Parameter(name = "DefaultAlexaNotificationProtocolVersion", description = "Deprecated.") @Valid @RequestParam(value = "DefaultAlexaNotificationProtocolVersion", required = false) String defaultAlexaNotificationProtocolVersion,
        @Parameter(name = "DefaultApnNotificationProtocolVersion", description = "The protocol version to use for sending APNS notifications. Can be overridden on a Binding by Binding basis when creating a [Binding](https://www.twilio.com/docs/notify/api/binding-resource) resource.") @Valid @RequestParam(value = "DefaultApnNotificationProtocolVersion", required = false) String defaultApnNotificationProtocolVersion,
        @Parameter(name = "DefaultFcmNotificationProtocolVersion", description = "The protocol version to use for sending FCM notifications. Can be overridden on a Binding by Binding basis when creating a [Binding](https://www.twilio.com/docs/notify/api/binding-resource) resource.") @Valid @RequestParam(value = "DefaultFcmNotificationProtocolVersion", required = false) String defaultFcmNotificationProtocolVersion,
        @Parameter(name = "DefaultGcmNotificationProtocolVersion", description = "The protocol version to use for sending GCM notifications. Can be overridden on a Binding by Binding basis when creating a [Binding](https://www.twilio.com/docs/notify/api/binding-resource) resource.") @Valid @RequestParam(value = "DefaultGcmNotificationProtocolVersion", required = false) String defaultGcmNotificationProtocolVersion,
        @Parameter(name = "DeliveryCallbackEnabled", description = "Callback configuration that enables delivery callbacks, default false") @Valid @RequestParam(value = "DeliveryCallbackEnabled", required = false) Boolean deliveryCallbackEnabled,
        @Parameter(name = "DeliveryCallbackUrl", description = "URL to send delivery status callback.") @Valid @RequestParam(value = "DeliveryCallbackUrl", required = false) String deliveryCallbackUrl,
        @Parameter(name = "FacebookMessengerPageId", description = "Deprecated.") @Valid @RequestParam(value = "FacebookMessengerPageId", required = false) String facebookMessengerPageId,
        @Parameter(name = "FcmCredentialSid", description = "The SID of the [Credential](https://www.twilio.com/docs/notify/api/credential-resource) to use for FCM Bindings.") @Valid @RequestParam(value = "FcmCredentialSid", required = false) String fcmCredentialSid,
        @Parameter(name = "FriendlyName", description = "A descriptive string that you create to describe the resource. It can be up to 64 characters long.") @Valid @RequestParam(value = "FriendlyName", required = false) String friendlyName,
        @Parameter(name = "GcmCredentialSid", description = "The SID of the [Credential](https://www.twilio.com/docs/notify/api/credential-resource) to use for GCM Bindings.") @Valid @RequestParam(value = "GcmCredentialSid", required = false) String gcmCredentialSid,
        @Parameter(name = "LogEnabled", description = "Whether to log notifications. Can be: `true` or `false` and the default is `true`.") @Valid @RequestParam(value = "LogEnabled", required = false) Boolean logEnabled,
        @Parameter(name = "MessagingServiceSid", description = "The SID of the [Messaging Service](https://www.twilio.com/docs/sms/quickstart#messaging-services) to use for SMS Bindings. This parameter must be set in order to send SMS notifications.") @Valid @RequestParam(value = "MessagingServiceSid", required = false) String messagingServiceSid
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"friendly_name\" : \"friendly_name\", \"alexa_skill_id\" : \"alexa_skill_id\", \"date_updated\" : \"2000-01-23T04:56:07.000+00:00\", \"default_apn_notification_protocol_version\" : \"default_apn_notification_protocol_version\", \"default_fcm_notification_protocol_version\" : \"default_fcm_notification_protocol_version\", \"gcm_credential_sid\" : \"gcm_credential_sid\", \"date_created\" : \"2000-01-23T04:56:07.000+00:00\", \"fcm_credential_sid\" : \"fcm_credential_sid\", \"default_gcm_notification_protocol_version\" : \"default_gcm_notification_protocol_version\", \"url\" : \"https://openapi-generator.tech\", \"sid\" : \"sid\", \"default_alexa_notification_protocol_version\" : \"default_alexa_notification_protocol_version\", \"facebook_messenger_page_id\" : \"facebook_messenger_page_id\", \"delivery_callback_enabled\" : true, \"messaging_service_sid\" : \"messaging_service_sid\", \"delivery_callback_url\" : \"delivery_callback_url\", \"account_sid\" : \"account_sid\", \"links\" : \"{}\", \"log_enabled\" : true, \"apn_credential_sid\" : \"apn_credential_sid\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /v1/Services/{ServiceSid}/Bindings/{Sid}
     * 
     *
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/notify/api/service-resource) to delete the resource from. (required)
     * @param sid The Twilio-provided string that uniquely identifies the Binding resource to delete. (required)
     * @return The resource was deleted successfully. (status code 204)
     */
    @Operation(
        operationId = "deleteBinding",
        description = "",
        tags = { "NotifyV1Binding" },
        responses = {
            @ApiResponse(responseCode = "204", description = "The resource was deleted successfully.")
        },
        security = {
            @SecurityRequirement(name = "accountSid_authToken")
        }
    )
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/v1/Services/{ServiceSid}/Bindings/{Sid}"
    )
    
    default ResponseEntity<Void> deleteBinding(
        @Pattern(regexp = "^IS[0-9a-fA-F]{32}$") @Size(min = 34, max = 34) @Parameter(name = "ServiceSid", description = "The SID of the [Service](https://www.twilio.com/docs/notify/api/service-resource) to delete the resource from.", required = true, in = ParameterIn.PATH) @PathVariable("ServiceSid") String serviceSid,
        @Pattern(regexp = "^BS[0-9a-fA-F]{32}$") @Size(min = 34, max = 34) @Parameter(name = "Sid", description = "The Twilio-provided string that uniquely identifies the Binding resource to delete.", required = true, in = ParameterIn.PATH) @PathVariable("Sid") String sid
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /v1/Credentials/{Sid}
     * 
     *
     * @param sid The Twilio-provided string that uniquely identifies the Credential resource to delete. (required)
     * @return The resource was deleted successfully. (status code 204)
     */
    @Operation(
        operationId = "deleteCredential",
        description = "",
        tags = { "NotifyV1Credential" },
        responses = {
            @ApiResponse(responseCode = "204", description = "The resource was deleted successfully.")
        },
        security = {
            @SecurityRequirement(name = "accountSid_authToken")
        }
    )
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/v1/Credentials/{Sid}"
    )
    
    default ResponseEntity<Void> deleteCredential(
        @Pattern(regexp = "^CR[0-9a-fA-F]{32}$") @Size(min = 34, max = 34) @Parameter(name = "Sid", description = "The Twilio-provided string that uniquely identifies the Credential resource to delete.", required = true, in = ParameterIn.PATH) @PathVariable("Sid") String sid
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /v1/Services/{Sid}
     * 
     *
     * @param sid The Twilio-provided string that uniquely identifies the Service resource to delete. (required)
     * @return The resource was deleted successfully. (status code 204)
     */
    @Operation(
        operationId = "deleteService",
        description = "",
        tags = { "NotifyV1Service" },
        responses = {
            @ApiResponse(responseCode = "204", description = "The resource was deleted successfully.")
        },
        security = {
            @SecurityRequirement(name = "accountSid_authToken")
        }
    )
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/v1/Services/{Sid}"
    )
    
    default ResponseEntity<Void> deleteService(
        @Pattern(regexp = "^IS[0-9a-fA-F]{32}$") @Size(min = 34, max = 34) @Parameter(name = "Sid", description = "The Twilio-provided string that uniquely identifies the Service resource to delete.", required = true, in = ParameterIn.PATH) @PathVariable("Sid") String sid
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /v1/Services/{ServiceSid}/Bindings/{Sid}
     * 
     *
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/notify/api/service-resource) to fetch the resource from. (required)
     * @param sid The Twilio-provided string that uniquely identifies the Binding resource to fetch. (required)
     * @return OK (status code 200)
     */
    @Operation(
        operationId = "fetchBinding",
        description = "",
        tags = { "NotifyV1Binding" },
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = NotifyV1ServiceBinding.class))
            })
        },
        security = {
            @SecurityRequirement(name = "accountSid_authToken")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/v1/Services/{ServiceSid}/Bindings/{Sid}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<NotifyV1ServiceBinding> fetchBinding(
        @Pattern(regexp = "^IS[0-9a-fA-F]{32}$") @Size(min = 34, max = 34) @Parameter(name = "ServiceSid", description = "The SID of the [Service](https://www.twilio.com/docs/notify/api/service-resource) to fetch the resource from.", required = true, in = ParameterIn.PATH) @PathVariable("ServiceSid") String serviceSid,
        @Pattern(regexp = "^BS[0-9a-fA-F]{32}$") @Size(min = 34, max = 34) @Parameter(name = "Sid", description = "The Twilio-provided string that uniquely identifies the Binding resource to fetch.", required = true, in = ParameterIn.PATH) @PathVariable("Sid") String sid
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"credential_sid\" : \"credential_sid\", \"binding_type\" : \"binding_type\", \"address\" : \"address\", \"date_updated\" : \"2000-01-23T04:56:07.000+00:00\", \"date_created\" : \"2000-01-23T04:56:07.000+00:00\", \"url\" : \"https://openapi-generator.tech\", \"sid\" : \"sid\", \"tags\" : [ \"tags\", \"tags\" ], \"service_sid\" : \"service_sid\", \"endpoint\" : \"endpoint\", \"identity\" : \"identity\", \"notification_protocol_version\" : \"notification_protocol_version\", \"account_sid\" : \"account_sid\", \"links\" : \"{}\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /v1/Credentials/{Sid}
     * 
     *
     * @param sid The Twilio-provided string that uniquely identifies the Credential resource to fetch. (required)
     * @return OK (status code 200)
     */
    @Operation(
        operationId = "fetchCredential",
        description = "",
        tags = { "NotifyV1Credential" },
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = NotifyV1Credential.class))
            })
        },
        security = {
            @SecurityRequirement(name = "accountSid_authToken")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/v1/Credentials/{Sid}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<NotifyV1Credential> fetchCredential(
        @Pattern(regexp = "^CR[0-9a-fA-F]{32}$") @Size(min = 34, max = 34) @Parameter(name = "Sid", description = "The Twilio-provided string that uniquely identifies the Credential resource to fetch.", required = true, in = ParameterIn.PATH) @PathVariable("Sid") String sid
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"friendly_name\" : \"friendly_name\", \"date_updated\" : \"2000-01-23T04:56:07.000+00:00\", \"date_created\" : \"2000-01-23T04:56:07.000+00:00\", \"sandbox\" : \"sandbox\", \"account_sid\" : \"account_sid\", \"type\" : \"type\", \"url\" : \"https://openapi-generator.tech\", \"sid\" : \"sid\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /v1/Services/{Sid}
     * 
     *
     * @param sid The Twilio-provided string that uniquely identifies the Service resource to fetch. (required)
     * @return OK (status code 200)
     */
    @Operation(
        operationId = "fetchService",
        description = "",
        tags = { "NotifyV1Service" },
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = NotifyV1Service.class))
            })
        },
        security = {
            @SecurityRequirement(name = "accountSid_authToken")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/v1/Services/{Sid}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<NotifyV1Service> fetchService(
        @Pattern(regexp = "^IS[0-9a-fA-F]{32}$") @Size(min = 34, max = 34) @Parameter(name = "Sid", description = "The Twilio-provided string that uniquely identifies the Service resource to fetch.", required = true, in = ParameterIn.PATH) @PathVariable("Sid") String sid
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"friendly_name\" : \"friendly_name\", \"alexa_skill_id\" : \"alexa_skill_id\", \"date_updated\" : \"2000-01-23T04:56:07.000+00:00\", \"default_apn_notification_protocol_version\" : \"default_apn_notification_protocol_version\", \"default_fcm_notification_protocol_version\" : \"default_fcm_notification_protocol_version\", \"gcm_credential_sid\" : \"gcm_credential_sid\", \"date_created\" : \"2000-01-23T04:56:07.000+00:00\", \"fcm_credential_sid\" : \"fcm_credential_sid\", \"default_gcm_notification_protocol_version\" : \"default_gcm_notification_protocol_version\", \"url\" : \"https://openapi-generator.tech\", \"sid\" : \"sid\", \"default_alexa_notification_protocol_version\" : \"default_alexa_notification_protocol_version\", \"facebook_messenger_page_id\" : \"facebook_messenger_page_id\", \"delivery_callback_enabled\" : true, \"messaging_service_sid\" : \"messaging_service_sid\", \"delivery_callback_url\" : \"delivery_callback_url\", \"account_sid\" : \"account_sid\", \"links\" : \"{}\", \"log_enabled\" : true, \"apn_credential_sid\" : \"apn_credential_sid\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /v1/Services/{ServiceSid}/Bindings
     * 
     *
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/notify/api/service-resource) to read the resource from. (required)
     * @param startDate Only include usage that has occurred on or after this date. Specify the date in GMT and format as &#x60;YYYY-MM-DD&#x60;. (optional)
     * @param endDate Only include usage that occurred on or before this date. Specify the date in GMT and format as &#x60;YYYY-MM-DD&#x60;. (optional)
     * @param identity The [User](https://www.twilio.com/docs/chat/rest/user-resource)&#39;s &#x60;identity&#x60; value of the resources to read. (optional)
     * @param tag Only list Bindings that have all of the specified Tags. The following implicit tags are available: &#x60;all&#x60;, &#x60;apn&#x60;, &#x60;fcm&#x60;, &#x60;gcm&#x60;, &#x60;sms&#x60;, &#x60;facebook-messenger&#x60;. Up to 5 tags are allowed. (optional)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @return OK (status code 200)
     */
    @Operation(
        operationId = "listBinding",
        description = "",
        tags = { "NotifyV1Binding" },
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ListBindingResponse.class))
            })
        },
        security = {
            @SecurityRequirement(name = "accountSid_authToken")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/v1/Services/{ServiceSid}/Bindings",
        produces = { "application/json" }
    )
    
    default ResponseEntity<ListBindingResponse> listBinding(
        @Pattern(regexp = "^IS[0-9a-fA-F]{32}$") @Size(min = 34, max = 34) @Parameter(name = "ServiceSid", description = "The SID of the [Service](https://www.twilio.com/docs/notify/api/service-resource) to read the resource from.", required = true, in = ParameterIn.PATH) @PathVariable("ServiceSid") String serviceSid,
        @Parameter(name = "StartDate", description = "Only include usage that has occurred on or after this date. Specify the date in GMT and format as `YYYY-MM-DD`.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "StartDate", required = false) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate startDate,
        @Parameter(name = "EndDate", description = "Only include usage that occurred on or before this date. Specify the date in GMT and format as `YYYY-MM-DD`.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "EndDate", required = false) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate endDate,
        @Parameter(name = "Identity", description = "The [User](https://www.twilio.com/docs/chat/rest/user-resource)'s `identity` value of the resources to read.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "Identity", required = false) List<String> identity,
        @Parameter(name = "Tag", description = "Only list Bindings that have all of the specified Tags. The following implicit tags are available: `all`, `apn`, `fcm`, `gcm`, `sms`, `facebook-messenger`. Up to 5 tags are allowed.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "Tag", required = false) List<String> tag,
        @Min(1) @Max(1000) @Parameter(name = "PageSize", description = "How many resources to return in each list page. The default is 50, and the maximum is 1000.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "PageSize", required = false) Integer pageSize,
        @Min(0) @Parameter(name = "Page", description = "The page index. This value is simply for client state.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "Page", required = false) Integer page,
        @Parameter(name = "PageToken", description = "The page token. This is provided by the API.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "PageToken", required = false) String pageToken
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"meta\" : { \"first_page_url\" : \"https://openapi-generator.tech\", \"next_page_url\" : \"https://openapi-generator.tech\", \"previous_page_url\" : \"https://openapi-generator.tech\", \"page\" : 0, \"key\" : \"key\", \"url\" : \"https://openapi-generator.tech\", \"page_size\" : 6 }, \"bindings\" : [ { \"credential_sid\" : \"credential_sid\", \"binding_type\" : \"binding_type\", \"address\" : \"address\", \"date_updated\" : \"2000-01-23T04:56:07.000+00:00\", \"date_created\" : \"2000-01-23T04:56:07.000+00:00\", \"url\" : \"https://openapi-generator.tech\", \"sid\" : \"sid\", \"tags\" : [ \"tags\", \"tags\" ], \"service_sid\" : \"service_sid\", \"endpoint\" : \"endpoint\", \"identity\" : \"identity\", \"notification_protocol_version\" : \"notification_protocol_version\", \"account_sid\" : \"account_sid\", \"links\" : \"{}\" }, { \"credential_sid\" : \"credential_sid\", \"binding_type\" : \"binding_type\", \"address\" : \"address\", \"date_updated\" : \"2000-01-23T04:56:07.000+00:00\", \"date_created\" : \"2000-01-23T04:56:07.000+00:00\", \"url\" : \"https://openapi-generator.tech\", \"sid\" : \"sid\", \"tags\" : [ \"tags\", \"tags\" ], \"service_sid\" : \"service_sid\", \"endpoint\" : \"endpoint\", \"identity\" : \"identity\", \"notification_protocol_version\" : \"notification_protocol_version\", \"account_sid\" : \"account_sid\", \"links\" : \"{}\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /v1/Credentials
     * 
     *
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @return OK (status code 200)
     */
    @Operation(
        operationId = "listCredential",
        description = "",
        tags = { "NotifyV1Credential" },
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ListCredentialResponse.class))
            })
        },
        security = {
            @SecurityRequirement(name = "accountSid_authToken")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/v1/Credentials",
        produces = { "application/json" }
    )
    
    default ResponseEntity<ListCredentialResponse> listCredential(
        @Min(1) @Max(1000) @Parameter(name = "PageSize", description = "How many resources to return in each list page. The default is 50, and the maximum is 1000.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "PageSize", required = false) Integer pageSize,
        @Min(0) @Parameter(name = "Page", description = "The page index. This value is simply for client state.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "Page", required = false) Integer page,
        @Parameter(name = "PageToken", description = "The page token. This is provided by the API.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "PageToken", required = false) String pageToken
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"credentials\" : [ { \"friendly_name\" : \"friendly_name\", \"date_updated\" : \"2000-01-23T04:56:07.000+00:00\", \"date_created\" : \"2000-01-23T04:56:07.000+00:00\", \"sandbox\" : \"sandbox\", \"account_sid\" : \"account_sid\", \"type\" : \"type\", \"url\" : \"https://openapi-generator.tech\", \"sid\" : \"sid\" }, { \"friendly_name\" : \"friendly_name\", \"date_updated\" : \"2000-01-23T04:56:07.000+00:00\", \"date_created\" : \"2000-01-23T04:56:07.000+00:00\", \"sandbox\" : \"sandbox\", \"account_sid\" : \"account_sid\", \"type\" : \"type\", \"url\" : \"https://openapi-generator.tech\", \"sid\" : \"sid\" } ], \"meta\" : { \"first_page_url\" : \"https://openapi-generator.tech\", \"next_page_url\" : \"https://openapi-generator.tech\", \"previous_page_url\" : \"https://openapi-generator.tech\", \"page\" : 0, \"key\" : \"key\", \"url\" : \"https://openapi-generator.tech\", \"page_size\" : 6 } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /v1/Services
     * 
     *
     * @param friendlyName The string that identifies the Service resources to read. (optional)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @return OK (status code 200)
     */
    @Operation(
        operationId = "listService",
        description = "",
        tags = { "NotifyV1Service" },
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ListServiceResponse.class))
            })
        },
        security = {
            @SecurityRequirement(name = "accountSid_authToken")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/v1/Services",
        produces = { "application/json" }
    )
    
    default ResponseEntity<ListServiceResponse> listService(
        @Parameter(name = "FriendlyName", description = "The string that identifies the Service resources to read.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "FriendlyName", required = false) String friendlyName,
        @Min(1) @Max(1000) @Parameter(name = "PageSize", description = "How many resources to return in each list page. The default is 50, and the maximum is 1000.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "PageSize", required = false) Integer pageSize,
        @Min(0) @Parameter(name = "Page", description = "The page index. This value is simply for client state.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "Page", required = false) Integer page,
        @Parameter(name = "PageToken", description = "The page token. This is provided by the API.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "PageToken", required = false) String pageToken
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"meta\" : { \"first_page_url\" : \"https://openapi-generator.tech\", \"next_page_url\" : \"https://openapi-generator.tech\", \"previous_page_url\" : \"https://openapi-generator.tech\", \"page\" : 0, \"key\" : \"key\", \"url\" : \"https://openapi-generator.tech\", \"page_size\" : 6 }, \"services\" : [ { \"friendly_name\" : \"friendly_name\", \"alexa_skill_id\" : \"alexa_skill_id\", \"date_updated\" : \"2000-01-23T04:56:07.000+00:00\", \"default_apn_notification_protocol_version\" : \"default_apn_notification_protocol_version\", \"default_fcm_notification_protocol_version\" : \"default_fcm_notification_protocol_version\", \"gcm_credential_sid\" : \"gcm_credential_sid\", \"date_created\" : \"2000-01-23T04:56:07.000+00:00\", \"fcm_credential_sid\" : \"fcm_credential_sid\", \"default_gcm_notification_protocol_version\" : \"default_gcm_notification_protocol_version\", \"url\" : \"https://openapi-generator.tech\", \"sid\" : \"sid\", \"default_alexa_notification_protocol_version\" : \"default_alexa_notification_protocol_version\", \"facebook_messenger_page_id\" : \"facebook_messenger_page_id\", \"delivery_callback_enabled\" : true, \"messaging_service_sid\" : \"messaging_service_sid\", \"delivery_callback_url\" : \"delivery_callback_url\", \"account_sid\" : \"account_sid\", \"links\" : \"{}\", \"log_enabled\" : true, \"apn_credential_sid\" : \"apn_credential_sid\" }, { \"friendly_name\" : \"friendly_name\", \"alexa_skill_id\" : \"alexa_skill_id\", \"date_updated\" : \"2000-01-23T04:56:07.000+00:00\", \"default_apn_notification_protocol_version\" : \"default_apn_notification_protocol_version\", \"default_fcm_notification_protocol_version\" : \"default_fcm_notification_protocol_version\", \"gcm_credential_sid\" : \"gcm_credential_sid\", \"date_created\" : \"2000-01-23T04:56:07.000+00:00\", \"fcm_credential_sid\" : \"fcm_credential_sid\", \"default_gcm_notification_protocol_version\" : \"default_gcm_notification_protocol_version\", \"url\" : \"https://openapi-generator.tech\", \"sid\" : \"sid\", \"default_alexa_notification_protocol_version\" : \"default_alexa_notification_protocol_version\", \"facebook_messenger_page_id\" : \"facebook_messenger_page_id\", \"delivery_callback_enabled\" : true, \"messaging_service_sid\" : \"messaging_service_sid\", \"delivery_callback_url\" : \"delivery_callback_url\", \"account_sid\" : \"account_sid\", \"links\" : \"{}\", \"log_enabled\" : true, \"apn_credential_sid\" : \"apn_credential_sid\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /v1/Credentials/{Sid}
     * 
     *
     * @param sid The Twilio-provided string that uniquely identifies the Credential resource to update. (required)
     * @param apiKey [GCM only] The &#x60;Server key&#x60; of your project from Firebase console under Settings / Cloud messaging. (optional)
     * @param certificate [APN only] The URL-encoded representation of the certificate. Strip everything outside of the headers, e.g. &#x60;-----BEGIN CERTIFICATE-----MIIFnTCCBIWgAwIBAgIIAjy9H849+E8wDQYJKoZIhvcNAQEFBQAwgZYxCzAJBgNV.....A&#x3D;&#x3D;-----END CERTIFICATE-----&#x60; (optional)
     * @param friendlyName A descriptive string that you create to describe the resource. It can be up to 64 characters long. (optional)
     * @param privateKey [APN only] The URL-encoded representation of the private key. Strip everything outside of the headers, e.g. &#x60;-----BEGIN RSA PRIVATE KEY-----MIIEpQIBAAKCAQEAuyf/lNrH9ck8DmNyo3fGgvCI1l9s+cmBY3WIz+cUDqmxiieR\\\\n.-----END RSA PRIVATE KEY-----&#x60; (optional)
     * @param sandbox [APN only] Whether to send the credential to sandbox APNs. Can be &#x60;true&#x60; to send to sandbox APNs or &#x60;false&#x60; to send to production. (optional)
     * @param secret [FCM only] The &#x60;Server key&#x60; of your project from Firebase console under Settings / Cloud messaging. (optional)
     * @return OK (status code 200)
     */
    @Operation(
        operationId = "updateCredential",
        description = "",
        tags = { "NotifyV1Credential" },
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = NotifyV1Credential.class))
            })
        },
        security = {
            @SecurityRequirement(name = "accountSid_authToken")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/v1/Credentials/{Sid}",
        produces = { "application/json" },
        consumes = { "application/x-www-form-urlencoded" }
    )
    
    default ResponseEntity<NotifyV1Credential> updateCredential(
        @Pattern(regexp = "^CR[0-9a-fA-F]{32}$") @Size(min = 34, max = 34) @Parameter(name = "Sid", description = "The Twilio-provided string that uniquely identifies the Credential resource to update.", required = true, in = ParameterIn.PATH) @PathVariable("Sid") String sid,
        @Parameter(name = "ApiKey", description = "[GCM only] The `Server key` of your project from Firebase console under Settings / Cloud messaging.") @Valid @RequestParam(value = "ApiKey", required = false) String apiKey,
        @Parameter(name = "Certificate", description = "[APN only] The URL-encoded representation of the certificate. Strip everything outside of the headers, e.g. `-----BEGIN CERTIFICATE-----MIIFnTCCBIWgAwIBAgIIAjy9H849+E8wDQYJKoZIhvcNAQEFBQAwgZYxCzAJBgNV.....A==-----END CERTIFICATE-----`") @Valid @RequestParam(value = "Certificate", required = false) String certificate,
        @Parameter(name = "FriendlyName", description = "A descriptive string that you create to describe the resource. It can be up to 64 characters long.") @Valid @RequestParam(value = "FriendlyName", required = false) String friendlyName,
        @Parameter(name = "PrivateKey", description = "[APN only] The URL-encoded representation of the private key. Strip everything outside of the headers, e.g. `-----BEGIN RSA PRIVATE KEY-----MIIEpQIBAAKCAQEAuyf/lNrH9ck8DmNyo3fGgvCI1l9s+cmBY3WIz+cUDqmxiieR\\\\n.-----END RSA PRIVATE KEY-----`") @Valid @RequestParam(value = "PrivateKey", required = false) String privateKey,
        @Parameter(name = "Sandbox", description = "[APN only] Whether to send the credential to sandbox APNs. Can be `true` to send to sandbox APNs or `false` to send to production.") @Valid @RequestParam(value = "Sandbox", required = false) Boolean sandbox,
        @Parameter(name = "Secret", description = "[FCM only] The `Server key` of your project from Firebase console under Settings / Cloud messaging.") @Valid @RequestParam(value = "Secret", required = false) String secret
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"friendly_name\" : \"friendly_name\", \"date_updated\" : \"2000-01-23T04:56:07.000+00:00\", \"date_created\" : \"2000-01-23T04:56:07.000+00:00\", \"sandbox\" : \"sandbox\", \"account_sid\" : \"account_sid\", \"type\" : \"type\", \"url\" : \"https://openapi-generator.tech\", \"sid\" : \"sid\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /v1/Services/{Sid}
     * 
     *
     * @param sid The Twilio-provided string that uniquely identifies the Service resource to update. (required)
     * @param alexaSkillId Deprecated. (optional)
     * @param apnCredentialSid The SID of the [Credential](https://www.twilio.com/docs/notify/api/credential-resource) to use for APN Bindings. (optional)
     * @param defaultAlexaNotificationProtocolVersion Deprecated. (optional)
     * @param defaultApnNotificationProtocolVersion The protocol version to use for sending APNS notifications. Can be overridden on a Binding by Binding basis when creating a [Binding](https://www.twilio.com/docs/notify/api/binding-resource) resource. (optional)
     * @param defaultFcmNotificationProtocolVersion The protocol version to use for sending FCM notifications. Can be overridden on a Binding by Binding basis when creating a [Binding](https://www.twilio.com/docs/notify/api/binding-resource) resource. (optional)
     * @param defaultGcmNotificationProtocolVersion The protocol version to use for sending GCM notifications. Can be overridden on a Binding by Binding basis when creating a [Binding](https://www.twilio.com/docs/notify/api/binding-resource) resource. (optional)
     * @param deliveryCallbackEnabled Callback configuration that enables delivery callbacks, default false (optional)
     * @param deliveryCallbackUrl URL to send delivery status callback. (optional)
     * @param facebookMessengerPageId Deprecated. (optional)
     * @param fcmCredentialSid The SID of the [Credential](https://www.twilio.com/docs/notify/api/credential-resource) to use for FCM Bindings. (optional)
     * @param friendlyName A descriptive string that you create to describe the resource. It can be up to 64 characters long. (optional)
     * @param gcmCredentialSid The SID of the [Credential](https://www.twilio.com/docs/notify/api/credential-resource) to use for GCM Bindings. (optional)
     * @param logEnabled Whether to log notifications. Can be: &#x60;true&#x60; or &#x60;false&#x60; and the default is &#x60;true&#x60;. (optional)
     * @param messagingServiceSid The SID of the [Messaging Service](https://www.twilio.com/docs/sms/quickstart#messaging-services) to use for SMS Bindings. This parameter must be set in order to send SMS notifications. (optional)
     * @return OK (status code 200)
     */
    @Operation(
        operationId = "updateService",
        description = "",
        tags = { "NotifyV1Service" },
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = NotifyV1Service.class))
            })
        },
        security = {
            @SecurityRequirement(name = "accountSid_authToken")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/v1/Services/{Sid}",
        produces = { "application/json" },
        consumes = { "application/x-www-form-urlencoded" }
    )
    
    default ResponseEntity<NotifyV1Service> updateService(
        @Pattern(regexp = "^IS[0-9a-fA-F]{32}$") @Size(min = 34, max = 34) @Parameter(name = "Sid", description = "The Twilio-provided string that uniquely identifies the Service resource to update.", required = true, in = ParameterIn.PATH) @PathVariable("Sid") String sid,
        @Parameter(name = "AlexaSkillId", description = "Deprecated.") @Valid @RequestParam(value = "AlexaSkillId", required = false) String alexaSkillId,
        @Parameter(name = "ApnCredentialSid", description = "The SID of the [Credential](https://www.twilio.com/docs/notify/api/credential-resource) to use for APN Bindings.") @Valid @RequestParam(value = "ApnCredentialSid", required = false) String apnCredentialSid,
        @Parameter(name = "DefaultAlexaNotificationProtocolVersion", description = "Deprecated.") @Valid @RequestParam(value = "DefaultAlexaNotificationProtocolVersion", required = false) String defaultAlexaNotificationProtocolVersion,
        @Parameter(name = "DefaultApnNotificationProtocolVersion", description = "The protocol version to use for sending APNS notifications. Can be overridden on a Binding by Binding basis when creating a [Binding](https://www.twilio.com/docs/notify/api/binding-resource) resource.") @Valid @RequestParam(value = "DefaultApnNotificationProtocolVersion", required = false) String defaultApnNotificationProtocolVersion,
        @Parameter(name = "DefaultFcmNotificationProtocolVersion", description = "The protocol version to use for sending FCM notifications. Can be overridden on a Binding by Binding basis when creating a [Binding](https://www.twilio.com/docs/notify/api/binding-resource) resource.") @Valid @RequestParam(value = "DefaultFcmNotificationProtocolVersion", required = false) String defaultFcmNotificationProtocolVersion,
        @Parameter(name = "DefaultGcmNotificationProtocolVersion", description = "The protocol version to use for sending GCM notifications. Can be overridden on a Binding by Binding basis when creating a [Binding](https://www.twilio.com/docs/notify/api/binding-resource) resource.") @Valid @RequestParam(value = "DefaultGcmNotificationProtocolVersion", required = false) String defaultGcmNotificationProtocolVersion,
        @Parameter(name = "DeliveryCallbackEnabled", description = "Callback configuration that enables delivery callbacks, default false") @Valid @RequestParam(value = "DeliveryCallbackEnabled", required = false) Boolean deliveryCallbackEnabled,
        @Parameter(name = "DeliveryCallbackUrl", description = "URL to send delivery status callback.") @Valid @RequestParam(value = "DeliveryCallbackUrl", required = false) String deliveryCallbackUrl,
        @Parameter(name = "FacebookMessengerPageId", description = "Deprecated.") @Valid @RequestParam(value = "FacebookMessengerPageId", required = false) String facebookMessengerPageId,
        @Parameter(name = "FcmCredentialSid", description = "The SID of the [Credential](https://www.twilio.com/docs/notify/api/credential-resource) to use for FCM Bindings.") @Valid @RequestParam(value = "FcmCredentialSid", required = false) String fcmCredentialSid,
        @Parameter(name = "FriendlyName", description = "A descriptive string that you create to describe the resource. It can be up to 64 characters long.") @Valid @RequestParam(value = "FriendlyName", required = false) String friendlyName,
        @Parameter(name = "GcmCredentialSid", description = "The SID of the [Credential](https://www.twilio.com/docs/notify/api/credential-resource) to use for GCM Bindings.") @Valid @RequestParam(value = "GcmCredentialSid", required = false) String gcmCredentialSid,
        @Parameter(name = "LogEnabled", description = "Whether to log notifications. Can be: `true` or `false` and the default is `true`.") @Valid @RequestParam(value = "LogEnabled", required = false) Boolean logEnabled,
        @Parameter(name = "MessagingServiceSid", description = "The SID of the [Messaging Service](https://www.twilio.com/docs/sms/quickstart#messaging-services) to use for SMS Bindings. This parameter must be set in order to send SMS notifications.") @Valid @RequestParam(value = "MessagingServiceSid", required = false) String messagingServiceSid
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"friendly_name\" : \"friendly_name\", \"alexa_skill_id\" : \"alexa_skill_id\", \"date_updated\" : \"2000-01-23T04:56:07.000+00:00\", \"default_apn_notification_protocol_version\" : \"default_apn_notification_protocol_version\", \"default_fcm_notification_protocol_version\" : \"default_fcm_notification_protocol_version\", \"gcm_credential_sid\" : \"gcm_credential_sid\", \"date_created\" : \"2000-01-23T04:56:07.000+00:00\", \"fcm_credential_sid\" : \"fcm_credential_sid\", \"default_gcm_notification_protocol_version\" : \"default_gcm_notification_protocol_version\", \"url\" : \"https://openapi-generator.tech\", \"sid\" : \"sid\", \"default_alexa_notification_protocol_version\" : \"default_alexa_notification_protocol_version\", \"facebook_messenger_page_id\" : \"facebook_messenger_page_id\", \"delivery_callback_enabled\" : true, \"messaging_service_sid\" : \"messaging_service_sid\", \"delivery_callback_url\" : \"delivery_callback_url\", \"account_sid\" : \"account_sid\", \"links\" : \"{}\", \"log_enabled\" : true, \"apn_credential_sid\" : \"apn_credential_sid\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
