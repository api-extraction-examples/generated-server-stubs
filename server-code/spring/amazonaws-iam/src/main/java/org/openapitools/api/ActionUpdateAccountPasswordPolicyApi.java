/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.2.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.UpdateAccountPasswordPolicyRequest;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-01-06T13:42:43.476388-04:00[America/Lower_Princes]")
@Validated
@Tag(name = "#Action=UpdateAccountPasswordPolicy", description = "the #Action=UpdateAccountPasswordPolicy API")
public interface ActionUpdateAccountPasswordPolicyApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /#Action=UpdateAccountPasswordPolicy
     * &lt;p&gt;Updates the password policy settings for the Amazon Web Services account.&lt;/p&gt; &lt;note&gt; &lt;p&gt;This operation does not support partial updates. No parameters are required, but if you do not specify a parameter, that parameter&#39;s value reverts to its default value. See the &lt;b&gt;Request Parameters&lt;/b&gt; section for each parameter&#39;s default value. Also note that some parameters do not allow the default parameter to be explicitly set. Instead, to invoke the default value, do not include that parameter when you invoke the operation.&lt;/p&gt; &lt;/note&gt; &lt;p&gt; For more information about using a password policy, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html\&quot;&gt;Managing an IAM password policy&lt;/a&gt; in the &lt;i&gt;IAM User Guide&lt;/i&gt;.&lt;/p&gt;
     *
     * @param action  (required)
     * @param version  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param minimumPasswordLength &lt;p&gt;The minimum number of characters allowed in an IAM user password.&lt;/p&gt; &lt;p&gt;If you do not specify a value for this parameter, then the operation uses the default value of &lt;code&gt;6&lt;/code&gt;.&lt;/p&gt; (optional)
     * @param requireSymbols &lt;p&gt;Specifies whether IAM user passwords must contain at least one of the following non-alphanumeric characters:&lt;/p&gt; &lt;p&gt;! @ # $ % ^ &amp;amp; * ( ) _ + - &#x3D; [ ] { } | &#39;&lt;/p&gt; &lt;p&gt;If you do not specify a value for this parameter, then the operation uses the default value of &lt;code&gt;false&lt;/code&gt;. The result is that passwords do not require at least one symbol character.&lt;/p&gt; (optional)
     * @param requireNumbers &lt;p&gt;Specifies whether IAM user passwords must contain at least one numeric character (0 to 9).&lt;/p&gt; &lt;p&gt;If you do not specify a value for this parameter, then the operation uses the default value of &lt;code&gt;false&lt;/code&gt;. The result is that passwords do not require at least one numeric character.&lt;/p&gt; (optional)
     * @param requireUppercaseCharacters &lt;p&gt;Specifies whether IAM user passwords must contain at least one uppercase character from the ISO basic Latin alphabet (A to Z).&lt;/p&gt; &lt;p&gt;If you do not specify a value for this parameter, then the operation uses the default value of &lt;code&gt;false&lt;/code&gt;. The result is that passwords do not require at least one uppercase character.&lt;/p&gt; (optional)
     * @param requireLowercaseCharacters &lt;p&gt;Specifies whether IAM user passwords must contain at least one lowercase character from the ISO basic Latin alphabet (a to z).&lt;/p&gt; &lt;p&gt;If you do not specify a value for this parameter, then the operation uses the default value of &lt;code&gt;false&lt;/code&gt;. The result is that passwords do not require at least one lowercase character.&lt;/p&gt; (optional)
     * @param allowUsersToChangePassword &lt;p&gt; Allows all IAM users in your account to use the Amazon Web Services Management Console to change their own passwords. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_enable-user-change.html\&quot;&gt;Permitting IAM users to change their own passwords&lt;/a&gt; in the &lt;i&gt;IAM User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;If you do not specify a value for this parameter, then the operation uses the default value of &lt;code&gt;false&lt;/code&gt;. The result is that IAM users in the account do not automatically have permissions to change their own password.&lt;/p&gt; (optional)
     * @param maxPasswordAge &lt;p&gt;The number of days that an IAM user password is valid.&lt;/p&gt; &lt;p&gt;If you do not specify a value for this parameter, then the operation uses the default value of &lt;code&gt;0&lt;/code&gt;. The result is that IAM user passwords never expire.&lt;/p&gt; (optional)
     * @param passwordReusePrevention &lt;p&gt;Specifies the number of previous passwords that IAM users are prevented from reusing.&lt;/p&gt; &lt;p&gt;If you do not specify a value for this parameter, then the operation uses the default value of &lt;code&gt;0&lt;/code&gt;. The result is that IAM users are not prevented from reusing previous passwords.&lt;/p&gt; (optional)
     * @param hardExpiry &lt;p&gt; Prevents IAM users who are accessing the account via the Amazon Web Services Management Console from setting a new console password after their password has expired. The IAM user cannot access the console until an administrator resets the password.&lt;/p&gt; &lt;p&gt;If you do not specify a value for this parameter, then the operation uses the default value of &lt;code&gt;false&lt;/code&gt;. The result is that IAM users can change their passwords after they expire and continue to sign in as the user.&lt;/p&gt; &lt;note&gt; &lt;p&gt; In the Amazon Web Services Management Console, the custom password policy option &lt;b&gt;Allow users to change their own password&lt;/b&gt; gives IAM users permissions to &lt;code&gt;iam:ChangePassword&lt;/code&gt; for only their user and to the &lt;code&gt;iam:GetAccountPasswordPolicy&lt;/code&gt; action. This option does not attach a permissions policy to each user, rather the permissions are applied at the account-level for all users by IAM. IAM users with &lt;code&gt;iam:ChangePassword&lt;/code&gt; permission and active access keys can reset their own expired console password using the CLI or API.&lt;/p&gt; &lt;/note&gt; (optional)
     * @return Success (status code 200)
     *         or NoSuchEntityException (status code 480)
     *         or MalformedPolicyDocumentException (status code 481)
     *         or LimitExceededException (status code 482)
     *         or ServiceFailureException (status code 483)
     */
    @Operation(
        operationId = "gETUpdateAccountPasswordPolicy",
        description = "<p>Updates the password policy settings for the Amazon Web Services account.</p> <note> <p>This operation does not support partial updates. No parameters are required, but if you do not specify a parameter, that parameter's value reverts to its default value. See the <b>Request Parameters</b> section for each parameter's default value. Also note that some parameters do not allow the default parameter to be explicitly set. Instead, to invoke the default value, do not include that parameter when you invoke the operation.</p> </note> <p> For more information about using a password policy, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html\">Managing an IAM password policy</a> in the <i>IAM User Guide</i>.</p>",
        responses = {
            @ApiResponse(responseCode = "200", description = "Success"),
            @ApiResponse(responseCode = "480", description = "NoSuchEntityException", content = {
                @Content(mediaType = "text/xml", schema = @Schema(implementation = Object.class))
            }),
            @ApiResponse(responseCode = "481", description = "MalformedPolicyDocumentException", content = {
                @Content(mediaType = "text/xml", schema = @Schema(implementation = Object.class))
            }),
            @ApiResponse(responseCode = "482", description = "LimitExceededException", content = {
                @Content(mediaType = "text/xml", schema = @Schema(implementation = Object.class))
            }),
            @ApiResponse(responseCode = "483", description = "ServiceFailureException", content = {
                @Content(mediaType = "text/xml", schema = @Schema(implementation = Object.class))
            })
        },
        security = {
            @SecurityRequirement(name = "hmac")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/#Action=UpdateAccountPasswordPolicy",
        produces = { "text/xml" }
    )
    
    default ResponseEntity<Void> gETUpdateAccountPasswordPolicy(
        @NotNull @Parameter(name = "Action", description = "", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "Action", required = true) String action,
        @NotNull @Parameter(name = "Version", description = "", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "Version", required = true) String version,
        @Parameter(name = "X-Amz-Content-Sha256", description = "", in = ParameterIn.HEADER) @RequestHeader(value = "X-Amz-Content-Sha256", required = false) String xAmzContentSha256,
        @Parameter(name = "X-Amz-Date", description = "", in = ParameterIn.HEADER) @RequestHeader(value = "X-Amz-Date", required = false) String xAmzDate,
        @Parameter(name = "X-Amz-Algorithm", description = "", in = ParameterIn.HEADER) @RequestHeader(value = "X-Amz-Algorithm", required = false) String xAmzAlgorithm,
        @Parameter(name = "X-Amz-Credential", description = "", in = ParameterIn.HEADER) @RequestHeader(value = "X-Amz-Credential", required = false) String xAmzCredential,
        @Parameter(name = "X-Amz-Security-Token", description = "", in = ParameterIn.HEADER) @RequestHeader(value = "X-Amz-Security-Token", required = false) String xAmzSecurityToken,
        @Parameter(name = "X-Amz-Signature", description = "", in = ParameterIn.HEADER) @RequestHeader(value = "X-Amz-Signature", required = false) String xAmzSignature,
        @Parameter(name = "X-Amz-SignedHeaders", description = "", in = ParameterIn.HEADER) @RequestHeader(value = "X-Amz-SignedHeaders", required = false) String xAmzSignedHeaders,
        @Min(6) @Max(128) @Parameter(name = "MinimumPasswordLength", description = "<p>The minimum number of characters allowed in an IAM user password.</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>6</code>.</p>", in = ParameterIn.QUERY) @Valid @RequestParam(value = "MinimumPasswordLength", required = false) Integer minimumPasswordLength,
        @Parameter(name = "RequireSymbols", description = "<p>Specifies whether IAM user passwords must contain at least one of the following non-alphanumeric characters:</p> <p>! @ # $ % ^ &amp; * ( ) _ + - = [ ] { } | '</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that passwords do not require at least one symbol character.</p>", in = ParameterIn.QUERY) @Valid @RequestParam(value = "RequireSymbols", required = false) Boolean requireSymbols,
        @Parameter(name = "RequireNumbers", description = "<p>Specifies whether IAM user passwords must contain at least one numeric character (0 to 9).</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that passwords do not require at least one numeric character.</p>", in = ParameterIn.QUERY) @Valid @RequestParam(value = "RequireNumbers", required = false) Boolean requireNumbers,
        @Parameter(name = "RequireUppercaseCharacters", description = "<p>Specifies whether IAM user passwords must contain at least one uppercase character from the ISO basic Latin alphabet (A to Z).</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that passwords do not require at least one uppercase character.</p>", in = ParameterIn.QUERY) @Valid @RequestParam(value = "RequireUppercaseCharacters", required = false) Boolean requireUppercaseCharacters,
        @Parameter(name = "RequireLowercaseCharacters", description = "<p>Specifies whether IAM user passwords must contain at least one lowercase character from the ISO basic Latin alphabet (a to z).</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that passwords do not require at least one lowercase character.</p>", in = ParameterIn.QUERY) @Valid @RequestParam(value = "RequireLowercaseCharacters", required = false) Boolean requireLowercaseCharacters,
        @Parameter(name = "AllowUsersToChangePassword", description = "<p> Allows all IAM users in your account to use the Amazon Web Services Management Console to change their own passwords. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_enable-user-change.html\">Permitting IAM users to change their own passwords</a> in the <i>IAM User Guide</i>.</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that IAM users in the account do not automatically have permissions to change their own password.</p>", in = ParameterIn.QUERY) @Valid @RequestParam(value = "AllowUsersToChangePassword", required = false) Boolean allowUsersToChangePassword,
        @Min(1) @Max(1095) @Parameter(name = "MaxPasswordAge", description = "<p>The number of days that an IAM user password is valid.</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>0</code>. The result is that IAM user passwords never expire.</p>", in = ParameterIn.QUERY) @Valid @RequestParam(value = "MaxPasswordAge", required = false) Integer maxPasswordAge,
        @Min(1) @Max(24) @Parameter(name = "PasswordReusePrevention", description = "<p>Specifies the number of previous passwords that IAM users are prevented from reusing.</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>0</code>. The result is that IAM users are not prevented from reusing previous passwords.</p>", in = ParameterIn.QUERY) @Valid @RequestParam(value = "PasswordReusePrevention", required = false) Integer passwordReusePrevention,
        @Parameter(name = "HardExpiry", description = "<p> Prevents IAM users who are accessing the account via the Amazon Web Services Management Console from setting a new console password after their password has expired. The IAM user cannot access the console until an administrator resets the password.</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that IAM users can change their passwords after they expire and continue to sign in as the user.</p> <note> <p> In the Amazon Web Services Management Console, the custom password policy option <b>Allow users to change their own password</b> gives IAM users permissions to <code>iam:ChangePassword</code> for only their user and to the <code>iam:GetAccountPasswordPolicy</code> action. This option does not attach a permissions policy to each user, rather the permissions are applied at the account-level for all users by IAM. IAM users with <code>iam:ChangePassword</code> permission and active access keys can reset their own expired console password using the CLI or API.</p> </note>", in = ParameterIn.QUERY) @Valid @RequestParam(value = "HardExpiry", required = false) Boolean hardExpiry
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /#Action=UpdateAccountPasswordPolicy
     * &lt;p&gt;Updates the password policy settings for the Amazon Web Services account.&lt;/p&gt; &lt;note&gt; &lt;p&gt;This operation does not support partial updates. No parameters are required, but if you do not specify a parameter, that parameter&#39;s value reverts to its default value. See the &lt;b&gt;Request Parameters&lt;/b&gt; section for each parameter&#39;s default value. Also note that some parameters do not allow the default parameter to be explicitly set. Instead, to invoke the default value, do not include that parameter when you invoke the operation.&lt;/p&gt; &lt;/note&gt; &lt;p&gt; For more information about using a password policy, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html\&quot;&gt;Managing an IAM password policy&lt;/a&gt; in the &lt;i&gt;IAM User Guide&lt;/i&gt;.&lt;/p&gt;
     *
     * @param action  (required)
     * @param version  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param updateAccountPasswordPolicyRequest  (optional)
     * @return Success (status code 200)
     *         or NoSuchEntityException (status code 480)
     *         or MalformedPolicyDocumentException (status code 481)
     *         or LimitExceededException (status code 482)
     *         or ServiceFailureException (status code 483)
     */
    @Operation(
        operationId = "pOSTUpdateAccountPasswordPolicy",
        description = "<p>Updates the password policy settings for the Amazon Web Services account.</p> <note> <p>This operation does not support partial updates. No parameters are required, but if you do not specify a parameter, that parameter's value reverts to its default value. See the <b>Request Parameters</b> section for each parameter's default value. Also note that some parameters do not allow the default parameter to be explicitly set. Instead, to invoke the default value, do not include that parameter when you invoke the operation.</p> </note> <p> For more information about using a password policy, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html\">Managing an IAM password policy</a> in the <i>IAM User Guide</i>.</p>",
        responses = {
            @ApiResponse(responseCode = "200", description = "Success"),
            @ApiResponse(responseCode = "480", description = "NoSuchEntityException", content = {
                @Content(mediaType = "text/xml", schema = @Schema(implementation = Object.class))
            }),
            @ApiResponse(responseCode = "481", description = "MalformedPolicyDocumentException", content = {
                @Content(mediaType = "text/xml", schema = @Schema(implementation = Object.class))
            }),
            @ApiResponse(responseCode = "482", description = "LimitExceededException", content = {
                @Content(mediaType = "text/xml", schema = @Schema(implementation = Object.class))
            }),
            @ApiResponse(responseCode = "483", description = "ServiceFailureException", content = {
                @Content(mediaType = "text/xml", schema = @Schema(implementation = Object.class))
            })
        },
        security = {
            @SecurityRequirement(name = "hmac")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/#Action=UpdateAccountPasswordPolicy",
        produces = { "text/xml" },
        consumes = { "text/xml" }
    )
    
    default ResponseEntity<Void> pOSTUpdateAccountPasswordPolicy(
        @NotNull @Parameter(name = "Action", description = "", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "Action", required = true) String action,
        @NotNull @Parameter(name = "Version", description = "", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "Version", required = true) String version,
        @Parameter(name = "X-Amz-Content-Sha256", description = "", in = ParameterIn.HEADER) @RequestHeader(value = "X-Amz-Content-Sha256", required = false) String xAmzContentSha256,
        @Parameter(name = "X-Amz-Date", description = "", in = ParameterIn.HEADER) @RequestHeader(value = "X-Amz-Date", required = false) String xAmzDate,
        @Parameter(name = "X-Amz-Algorithm", description = "", in = ParameterIn.HEADER) @RequestHeader(value = "X-Amz-Algorithm", required = false) String xAmzAlgorithm,
        @Parameter(name = "X-Amz-Credential", description = "", in = ParameterIn.HEADER) @RequestHeader(value = "X-Amz-Credential", required = false) String xAmzCredential,
        @Parameter(name = "X-Amz-Security-Token", description = "", in = ParameterIn.HEADER) @RequestHeader(value = "X-Amz-Security-Token", required = false) String xAmzSecurityToken,
        @Parameter(name = "X-Amz-Signature", description = "", in = ParameterIn.HEADER) @RequestHeader(value = "X-Amz-Signature", required = false) String xAmzSignature,
        @Parameter(name = "X-Amz-SignedHeaders", description = "", in = ParameterIn.HEADER) @RequestHeader(value = "X-Amz-SignedHeaders", required = false) String xAmzSignedHeaders,
        @Parameter(name = "UpdateAccountPasswordPolicyRequest", description = "") @Valid @RequestBody(required = false) UpdateAccountPasswordPolicyRequest updateAccountPasswordPolicyRequest
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
