/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.2.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.Users;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-01-06T13:51:38.380306-04:00[America/Lower_Princes]")
@Validated
@Tag(name = "Users", description = "the Users API")
public interface UserSearchApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /user-search/{projectKey}/{environmentKey} : Search users in LaunchDarkly based on their last active date, or a search query. It should not be used to enumerate all users in LaunchDarkly-- use the List users API resource.
     *
     * @param projectKey The project key, used to tie the flags together under one project so they can be managed together. (required)
     * @param environmentKey The environment key, used to tie together flag configuration and users under one environment so they can be managed together. (required)
     * @param q Search query. (optional)
     * @param limit Pagination limit. (optional)
     * @param offset Specifies the first item to return in the collection. (optional)
     * @param after A timestamp filter, expressed as a Unix epoch time in milliseconds. All entries returned will have occurred after this timestamp. (optional)
     * @return Users response. (status code 200)
     *         or Invalid access token. (status code 401)
     */
    @Operation(
        operationId = "getSearchUsers",
        summary = "Search users in LaunchDarkly based on their last active date, or a search query. It should not be used to enumerate all users in LaunchDarkly-- use the List users API resource.",
        tags = { "Users" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Users response.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Users.class))
            }),
            @ApiResponse(responseCode = "401", description = "Invalid access token.")
        },
        security = {
            @SecurityRequirement(name = "Token")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/user-search/{projectKey}/{environmentKey}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<Users> getSearchUsers(
        @Parameter(name = "projectKey", description = "The project key, used to tie the flags together under one project so they can be managed together.", required = true, in = ParameterIn.PATH) @PathVariable("projectKey") String projectKey,
        @Parameter(name = "environmentKey", description = "The environment key, used to tie together flag configuration and users under one environment so they can be managed together.", required = true, in = ParameterIn.PATH) @PathVariable("environmentKey") String environmentKey,
        @Parameter(name = "q", description = "Search query.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "q", required = false) String q,
        @Parameter(name = "limit", description = "Pagination limit.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "limit", required = false) Integer limit,
        @Parameter(name = "offset", description = "Specifies the first item to return in the collection.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "offset", required = false) Integer offset,
        @Parameter(name = "after", description = "A timestamp filter, expressed as a Unix epoch time in milliseconds. All entries returned will have occurred after this timestamp.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "after", required = false) Long after
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"_links\" : { \"next\" : { \"href\" : \"/api/v2/endpoint\", \"type\" : \"application/json\" }, \"self\" : { \"href\" : \"/api/v2/endpoint\", \"type\" : \"application/json\" } }, \"totalCount\" : 3.0, \"items\" : [ { \"environmentId\" : \"54ac2d97de674204ddd61096\", \"lastPing\" : \"2015-03-03T02:37:22.492Z\", \"avatar\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/shylockjoy/73.jpg\", \"ownerId\" : \"5a580a01b4ff89217bdf9dc1\", \"user\" : { \"secondary\" : \"secondary\", \"country\" : \"country\", \"firstName\" : \"firstName\", \"lastName\" : \"lastName\", \"custom\" : { \"company\" : \"example.com\" }, \"ip\" : \"ip\", \"name\" : \"Bob Loblaw\", \"anonymous\" : true, \"avatar\" : \"avatar\", \"email\" : \"email\", \"key\" : \"a00bea\" } }, { \"environmentId\" : \"54ac2d97de674204ddd61096\", \"lastPing\" : \"2015-03-03T02:37:22.492Z\", \"avatar\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/shylockjoy/73.jpg\", \"ownerId\" : \"5a580a01b4ff89217bdf9dc1\", \"user\" : { \"secondary\" : \"secondary\", \"country\" : \"country\", \"firstName\" : \"firstName\", \"lastName\" : \"lastName\", \"custom\" : { \"company\" : \"example.com\" }, \"ip\" : \"ip\", \"name\" : \"Bob Loblaw\", \"anonymous\" : true, \"avatar\" : \"avatar\", \"email\" : \"email\", \"key\" : \"a00bea\" } } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
