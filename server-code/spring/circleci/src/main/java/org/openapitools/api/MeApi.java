/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.2.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.User;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-01-06T13:44:13.970205-04:00[America/Lower_Princes]")
@Validated
@Tag(name = "me", description = "the me API")
public interface MeApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /me
     * Provides information about the signed in user. 
     *
     * @return signed in user (status code 200)
     */
    @Operation(
        operationId = "meGet",
        description = "Provides information about the signed in user. ",
        responses = {
            @ApiResponse(responseCode = "200", description = "signed in user", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = User.class))
            })
        },
        security = {
            @SecurityRequirement(name = "apikey")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/me",
        produces = { "application/json" }
    )
    
    default ResponseEntity<User> meGet(
        
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"days_left_in_trial\" : 1, \"projects\" : \"{}\", \"parallelism\" : 2, \"admin\" : true, \"created_at\" : \"2000-01-23T04:56:07.000+00:00\", \"sign_in_count\" : 7, \"bitbucket\" : 0, \"login\" : \"login\", \"pusher_id\" : \"pusher_id\", \"all_emails\" : [ \"all_emails\", \"all_emails\" ], \"gravatar_id\" : 5, \"organization_prefs\" : \"{}\", \"plan\" : \"plan\", \"github_oauth_scopes\" : [ \"github_oauth_scopes\", \"github_oauth_scopes\" ], \"bitbucket_authorized\" : true, \"analytics_id\" : \"analytics_id\", \"trial_end\" : \"2000-01-23T04:56:07.000+00:00\", \"enrolled_betas\" : [ \"enrolled_betas\", \"enrolled_betas\" ], \"basic_email_prefs\" : \"basic_email_prefs\", \"avatar_url\" : \"https://openapi-generator.tech\", \"in_beta_program\" : true, \"selected_email\" : \"selected_email\", \"dev_admin\" : true, \"heroku_api_key\" : \"heroku_api_key\", \"name\" : \"name\", \"containers\" : 6, \"github_id\" : 5 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
