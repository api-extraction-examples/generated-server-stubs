/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.2.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.BaseItemDtoQueryResult;
import org.openapitools.model.EncodingContext;
import org.openapitools.model.ProblemDetails;
import org.openapitools.model.SubtitleDeliveryMethod;
import java.util.UUID;
import org.openapitools.model.UploadSubtitleDto;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-01-06T13:51:28.311925-04:00[America/Lower_Princes]")
@Validated
@Tag(name = "Videos", description = "the Videos API")
public interface VideosApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * DELETE /Videos/{itemId}/AlternateSources : Removes alternate video sources.
     *
     * @param itemId The item id. (required)
     * @return Alternate sources deleted. (status code 204)
     *         or Unauthorized (status code 401)
     *         or Forbidden (status code 403)
     *         or Video not found. (status code 404)
     */
    @Operation(
        operationId = "deleteAlternateSources",
        summary = "Removes alternate video sources.",
        tags = { "Videos" },
        responses = {
            @ApiResponse(responseCode = "204", description = "Alternate sources deleted."),
            @ApiResponse(responseCode = "401", description = "Unauthorized"),
            @ApiResponse(responseCode = "403", description = "Forbidden"),
            @ApiResponse(responseCode = "404", description = "Video not found.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class)),
                @Content(mediaType = "application/json; profile=CamelCase", schema = @Schema(implementation = ProblemDetails.class)),
                @Content(mediaType = "application/json; profile=PascalCase", schema = @Schema(implementation = ProblemDetails.class))
            })
        },
        security = {
            @SecurityRequirement(name = "CustomAuthentication")
        }
    )
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/Videos/{itemId}/AlternateSources",
        produces = { "application/json", "application/json; profile=CamelCase", "application/json; profile=PascalCase" }
    )
    
    default ResponseEntity<Void> deleteAlternateSources(
        @Parameter(name = "itemId", description = "The item id.", required = true, in = ParameterIn.PATH) @PathVariable("itemId") UUID itemId
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /Videos/{itemId}/Subtitles/{index} : Deletes an external subtitle file.
     *
     * @param itemId The item id. (required)
     * @param index The index of the subtitle file. (required)
     * @return Subtitle deleted. (status code 204)
     *         or Unauthorized (status code 401)
     *         or Forbidden (status code 403)
     *         or Item not found. (status code 404)
     */
    @Operation(
        operationId = "deleteSubtitle",
        summary = "Deletes an external subtitle file.",
        tags = { "Subtitle" },
        responses = {
            @ApiResponse(responseCode = "204", description = "Subtitle deleted."),
            @ApiResponse(responseCode = "401", description = "Unauthorized"),
            @ApiResponse(responseCode = "403", description = "Forbidden"),
            @ApiResponse(responseCode = "404", description = "Item not found.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class)),
                @Content(mediaType = "application/json; profile=CamelCase", schema = @Schema(implementation = ProblemDetails.class)),
                @Content(mediaType = "application/json; profile=PascalCase", schema = @Schema(implementation = ProblemDetails.class))
            })
        },
        security = {
            @SecurityRequirement(name = "CustomAuthentication")
        }
    )
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/Videos/{itemId}/Subtitles/{index}",
        produces = { "application/json", "application/json; profile=CamelCase", "application/json; profile=PascalCase" }
    )
    
    default ResponseEntity<Void> deleteSubtitle(
        @Parameter(name = "itemId", description = "The item id.", required = true, in = ParameterIn.PATH) @PathVariable("itemId") UUID itemId,
        @Parameter(name = "index", description = "The index of the subtitle file.", required = true, in = ParameterIn.PATH) @PathVariable("index") Integer index
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /Videos/{itemId}/AdditionalParts : Gets additional parts for a video.
     *
     * @param itemId The item id. (required)
     * @param userId Optional. Filter by user id, and attach user data. (optional)
     * @return Additional parts returned. (status code 200)
     *         or Unauthorized (status code 401)
     *         or Forbidden (status code 403)
     */
    @Operation(
        operationId = "getAdditionalPart",
        summary = "Gets additional parts for a video.",
        tags = { "Videos" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Additional parts returned.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = BaseItemDtoQueryResult.class)),
                @Content(mediaType = "application/json; profile=CamelCase", schema = @Schema(implementation = BaseItemDtoQueryResult.class)),
                @Content(mediaType = "application/json; profile=PascalCase", schema = @Schema(implementation = BaseItemDtoQueryResult.class))
            }),
            @ApiResponse(responseCode = "401", description = "Unauthorized"),
            @ApiResponse(responseCode = "403", description = "Forbidden")
        },
        security = {
            @SecurityRequirement(name = "CustomAuthentication")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/Videos/{itemId}/AdditionalParts",
        produces = { "application/json", "application/json; profile=CamelCase", "application/json; profile=PascalCase" }
    )
    
    default ResponseEntity<BaseItemDtoQueryResult> getAdditionalPart(
        @Parameter(name = "itemId", description = "The item id.", required = true, in = ParameterIn.PATH) @PathVariable("itemId") UUID itemId,
        @Parameter(name = "userId", description = "Optional. Filter by user id, and attach user data.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "userId", required = false) UUID userId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"TotalRecordCount\" : 3, \"StartIndex\" : 4, \"Items\" : [ { \"SeasonName\" : \"SeasonName\", \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\", \"AirTime\" : \"AirTime\", \"CriticRating\" : 7.386282, \"Studios\" : [ { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" }, { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" } ], \"Aperture\" : 2.3021358869347655, \"CameraMake\" : \"CameraMake\", \"ChannelPrimaryImageTag\" : \"ChannelPrimaryImageTag\", \"ExtraType\" : \"ExtraType\", \"ParentBackdropItemId\" : \"ParentBackdropItemId\", \"Etag\" : \"Etag\", \"ExposureTime\" : 1.4894159098541704, \"ParentLogoImageTag\" : \"ParentLogoImageTag\", \"MediaType\" : \"MediaType\", \"Tags\" : [ \"Tags\", \"Tags\" ], \"ImageBlurHashes\" : { \"Art\" : { \"key\" : \"Art\" }, \"Banner\" : { \"key\" : \"Banner\" }, \"Thumb\" : { \"key\" : \"Thumb\" }, \"BoxRear\" : { \"key\" : \"BoxRear\" }, \"Chapter\" : { \"key\" : \"Chapter\" }, \"Box\" : { \"key\" : \"Box\" }, \"Profile\" : { \"key\" : \"Profile\" }, \"Logo\" : { \"key\" : \"Logo\" }, \"Disc\" : { \"key\" : \"Disc\" }, \"Primary\" : { \"key\" : \"Primary\" }, \"Screenshot\" : { \"key\" : \"Screenshot\" }, \"Backdrop\" : { \"key\" : \"Backdrop\" }, \"Menu\" : { \"key\" : \"Menu\" } }, \"Status\" : \"Status\", \"IndexNumberEnd\" : 4, \"ArtistItems\" : [ { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" }, { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" } ], \"MediaSources\" : [ { \"EncoderPath\" : \"EncoderPath\", \"RequiredHttpHeaders\" : { \"key\" : \"RequiredHttpHeaders\" }, \"RunTimeTicks\" : 7, \"MediaStreams\" : [ { \"VideoRange\" : \"VideoRange\", \"CodecTimeBase\" : \"CodecTimeBase\", \"ColorSpace\" : \"ColorSpace\", \"Index\" : 3, \"ColorRange\" : \"ColorRange\", \"localizedForced\" : \"localizedForced\", \"BitDepth\" : 6, \"Channels\" : 6, \"Profile\" : \"Profile\", \"SupportsExternalStream\" : true, \"DeliveryUrl\" : \"DeliveryUrl\", \"localizedDefault\" : \"localizedDefault\", \"Codec\" : \"Codec\", \"ColorPrimaries\" : \"ColorPrimaries\", \"SampleRate\" : 0, \"IsTextSubtitleStream\" : true, \"Language\" : \"Language\", \"IsAnamorphic\" : true, \"Height\" : 3, \"NalLengthSize\" : \"NalLengthSize\", \"PixelFormat\" : \"PixelFormat\", \"RefFrames\" : 6, \"IsAVC\" : true, \"Width\" : 8, \"TimeBase\" : \"TimeBase\", \"ColorTransfer\" : \"ColorTransfer\", \"CodecTag\" : \"CodecTag\", \"IsDefault\" : true, \"Path\" : \"Path\", \"Comment\" : \"Comment\", \"IsExternalUrl\" : true, \"DisplayTitle\" : \"DisplayTitle\", \"IsForced\" : true, \"ChannelLayout\" : \"ChannelLayout\", \"PacketLength\" : 0, \"localizedUndefined\" : \"localizedUndefined\", \"Title\" : \"Title\", \"RealFrameRate\" : 7.05877, \"AspectRatio\" : \"AspectRatio\", \"AverageFrameRate\" : 6.778325, \"Score\" : 4, \"IsExternal\" : true, \"IsInterlaced\" : true, \"Level\" : 7.143538047012306, \"BitRate\" : 5 }, { \"VideoRange\" : \"VideoRange\", \"CodecTimeBase\" : \"CodecTimeBase\", \"ColorSpace\" : \"ColorSpace\", \"Index\" : 3, \"ColorRange\" : \"ColorRange\", \"localizedForced\" : \"localizedForced\", \"BitDepth\" : 6, \"Channels\" : 6, \"Profile\" : \"Profile\", \"SupportsExternalStream\" : true, \"DeliveryUrl\" : \"DeliveryUrl\", \"localizedDefault\" : \"localizedDefault\", \"Codec\" : \"Codec\", \"ColorPrimaries\" : \"ColorPrimaries\", \"SampleRate\" : 0, \"IsTextSubtitleStream\" : true, \"Language\" : \"Language\", \"IsAnamorphic\" : true, \"Height\" : 3, \"NalLengthSize\" : \"NalLengthSize\", \"PixelFormat\" : \"PixelFormat\", \"RefFrames\" : 6, \"IsAVC\" : true, \"Width\" : 8, \"TimeBase\" : \"TimeBase\", \"ColorTransfer\" : \"ColorTransfer\", \"CodecTag\" : \"CodecTag\", \"IsDefault\" : true, \"Path\" : \"Path\", \"Comment\" : \"Comment\", \"IsExternalUrl\" : true, \"DisplayTitle\" : \"DisplayTitle\", \"IsForced\" : true, \"ChannelLayout\" : \"ChannelLayout\", \"PacketLength\" : 0, \"localizedUndefined\" : \"localizedUndefined\", \"Title\" : \"Title\", \"RealFrameRate\" : 7.05877, \"AspectRatio\" : \"AspectRatio\", \"AverageFrameRate\" : 6.778325, \"Score\" : 4, \"IsExternal\" : true, \"IsInterlaced\" : true, \"Level\" : 7.143538047012306, \"BitRate\" : 5 } ], \"Size\" : 3, \"BufferMs\" : 3, \"Name\" : \"Name\", \"RequiresOpening\" : true, \"SupportsDirectStream\" : true, \"RequiresClosing\" : true, \"Container\" : \"Container\", \"LiveStreamId\" : \"LiveStreamId\", \"RequiresLooping\" : true, \"DefaultSubtitleStreamIndex\" : 1, \"GenPtsInput\" : true, \"IsInfiniteStream\" : true, \"Path\" : \"Path\", \"IsRemote\" : true, \"IgnoreIndex\" : true, \"SupportsDirectPlay\" : true, \"TranscodingSubProtocol\" : \"TranscodingSubProtocol\", \"AnalyzeDurationMs\" : 9, \"Formats\" : [ \"Formats\", \"Formats\" ], \"Bitrate\" : 6, \"OpenToken\" : \"OpenToken\", \"SupportsProbing\" : true, \"MediaAttachments\" : [ { \"CodecTag\" : \"CodecTag\", \"Comment\" : \"Comment\", \"DeliveryUrl\" : \"DeliveryUrl\", \"Codec\" : \"Codec\", \"FileName\" : \"FileName\", \"Index\" : 2, \"MimeType\" : \"MimeType\" }, { \"CodecTag\" : \"CodecTag\", \"Comment\" : \"Comment\", \"DeliveryUrl\" : \"DeliveryUrl\", \"Codec\" : \"Codec\", \"FileName\" : \"FileName\", \"Index\" : 2, \"MimeType\" : \"MimeType\" } ], \"ReadAtNativeFramerate\" : true, \"ETag\" : \"ETag\", \"TranscodingContainer\" : \"TranscodingContainer\", \"IgnoreDts\" : true, \"TranscodingUrl\" : \"TranscodingUrl\", \"Id\" : \"Id\", \"SupportsTranscoding\" : true, \"DefaultAudioStreamIndex\" : 6 }, { \"EncoderPath\" : \"EncoderPath\", \"RequiredHttpHeaders\" : { \"key\" : \"RequiredHttpHeaders\" }, \"RunTimeTicks\" : 7, \"MediaStreams\" : [ { \"VideoRange\" : \"VideoRange\", \"CodecTimeBase\" : \"CodecTimeBase\", \"ColorSpace\" : \"ColorSpace\", \"Index\" : 3, \"ColorRange\" : \"ColorRange\", \"localizedForced\" : \"localizedForced\", \"BitDepth\" : 6, \"Channels\" : 6, \"Profile\" : \"Profile\", \"SupportsExternalStream\" : true, \"DeliveryUrl\" : \"DeliveryUrl\", \"localizedDefault\" : \"localizedDefault\", \"Codec\" : \"Codec\", \"ColorPrimaries\" : \"ColorPrimaries\", \"SampleRate\" : 0, \"IsTextSubtitleStream\" : true, \"Language\" : \"Language\", \"IsAnamorphic\" : true, \"Height\" : 3, \"NalLengthSize\" : \"NalLengthSize\", \"PixelFormat\" : \"PixelFormat\", \"RefFrames\" : 6, \"IsAVC\" : true, \"Width\" : 8, \"TimeBase\" : \"TimeBase\", \"ColorTransfer\" : \"ColorTransfer\", \"CodecTag\" : \"CodecTag\", \"IsDefault\" : true, \"Path\" : \"Path\", \"Comment\" : \"Comment\", \"IsExternalUrl\" : true, \"DisplayTitle\" : \"DisplayTitle\", \"IsForced\" : true, \"ChannelLayout\" : \"ChannelLayout\", \"PacketLength\" : 0, \"localizedUndefined\" : \"localizedUndefined\", \"Title\" : \"Title\", \"RealFrameRate\" : 7.05877, \"AspectRatio\" : \"AspectRatio\", \"AverageFrameRate\" : 6.778325, \"Score\" : 4, \"IsExternal\" : true, \"IsInterlaced\" : true, \"Level\" : 7.143538047012306, \"BitRate\" : 5 }, { \"VideoRange\" : \"VideoRange\", \"CodecTimeBase\" : \"CodecTimeBase\", \"ColorSpace\" : \"ColorSpace\", \"Index\" : 3, \"ColorRange\" : \"ColorRange\", \"localizedForced\" : \"localizedForced\", \"BitDepth\" : 6, \"Channels\" : 6, \"Profile\" : \"Profile\", \"SupportsExternalStream\" : true, \"DeliveryUrl\" : \"DeliveryUrl\", \"localizedDefault\" : \"localizedDefault\", \"Codec\" : \"Codec\", \"ColorPrimaries\" : \"ColorPrimaries\", \"SampleRate\" : 0, \"IsTextSubtitleStream\" : true, \"Language\" : \"Language\", \"IsAnamorphic\" : true, \"Height\" : 3, \"NalLengthSize\" : \"NalLengthSize\", \"PixelFormat\" : \"PixelFormat\", \"RefFrames\" : 6, \"IsAVC\" : true, \"Width\" : 8, \"TimeBase\" : \"TimeBase\", \"ColorTransfer\" : \"ColorTransfer\", \"CodecTag\" : \"CodecTag\", \"IsDefault\" : true, \"Path\" : \"Path\", \"Comment\" : \"Comment\", \"IsExternalUrl\" : true, \"DisplayTitle\" : \"DisplayTitle\", \"IsForced\" : true, \"ChannelLayout\" : \"ChannelLayout\", \"PacketLength\" : 0, \"localizedUndefined\" : \"localizedUndefined\", \"Title\" : \"Title\", \"RealFrameRate\" : 7.05877, \"AspectRatio\" : \"AspectRatio\", \"AverageFrameRate\" : 6.778325, \"Score\" : 4, \"IsExternal\" : true, \"IsInterlaced\" : true, \"Level\" : 7.143538047012306, \"BitRate\" : 5 } ], \"Size\" : 3, \"BufferMs\" : 3, \"Name\" : \"Name\", \"RequiresOpening\" : true, \"SupportsDirectStream\" : true, \"RequiresClosing\" : true, \"Container\" : \"Container\", \"LiveStreamId\" : \"LiveStreamId\", \"RequiresLooping\" : true, \"DefaultSubtitleStreamIndex\" : 1, \"GenPtsInput\" : true, \"IsInfiniteStream\" : true, \"Path\" : \"Path\", \"IsRemote\" : true, \"IgnoreIndex\" : true, \"SupportsDirectPlay\" : true, \"TranscodingSubProtocol\" : \"TranscodingSubProtocol\", \"AnalyzeDurationMs\" : 9, \"Formats\" : [ \"Formats\", \"Formats\" ], \"Bitrate\" : 6, \"OpenToken\" : \"OpenToken\", \"SupportsProbing\" : true, \"MediaAttachments\" : [ { \"CodecTag\" : \"CodecTag\", \"Comment\" : \"Comment\", \"DeliveryUrl\" : \"DeliveryUrl\", \"Codec\" : \"Codec\", \"FileName\" : \"FileName\", \"Index\" : 2, \"MimeType\" : \"MimeType\" }, { \"CodecTag\" : \"CodecTag\", \"Comment\" : \"Comment\", \"DeliveryUrl\" : \"DeliveryUrl\", \"Codec\" : \"Codec\", \"FileName\" : \"FileName\", \"Index\" : 2, \"MimeType\" : \"MimeType\" } ], \"ReadAtNativeFramerate\" : true, \"ETag\" : \"ETag\", \"TranscodingContainer\" : \"TranscodingContainer\", \"IgnoreDts\" : true, \"TranscodingUrl\" : \"TranscodingUrl\", \"Id\" : \"Id\", \"SupportsTranscoding\" : true, \"DefaultAudioStreamIndex\" : 6 } ], \"GenreItems\" : [ { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" }, { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" } ], \"OfficialRating\" : \"OfficialRating\", \"ProgramCount\" : 6, \"ProgramId\" : \"ProgramId\", \"Longitude\" : 6.683562403749608, \"FocalLength\" : 6.84685269835264, \"LockData\" : true, \"IsNews\" : true, \"ShutterSpeed\" : 7.260521264802104, \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"IsFolder\" : true, \"SeriesTimerId\" : \"SeriesTimerId\", \"SeriesId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"MediaStreams\" : [ { \"VideoRange\" : \"VideoRange\", \"CodecTimeBase\" : \"CodecTimeBase\", \"ColorSpace\" : \"ColorSpace\", \"Index\" : 3, \"ColorRange\" : \"ColorRange\", \"localizedForced\" : \"localizedForced\", \"BitDepth\" : 6, \"Channels\" : 6, \"Profile\" : \"Profile\", \"SupportsExternalStream\" : true, \"DeliveryUrl\" : \"DeliveryUrl\", \"localizedDefault\" : \"localizedDefault\", \"Codec\" : \"Codec\", \"ColorPrimaries\" : \"ColorPrimaries\", \"SampleRate\" : 0, \"IsTextSubtitleStream\" : true, \"Language\" : \"Language\", \"IsAnamorphic\" : true, \"Height\" : 3, \"NalLengthSize\" : \"NalLengthSize\", \"PixelFormat\" : \"PixelFormat\", \"RefFrames\" : 6, \"IsAVC\" : true, \"Width\" : 8, \"TimeBase\" : \"TimeBase\", \"ColorTransfer\" : \"ColorTransfer\", \"CodecTag\" : \"CodecTag\", \"IsDefault\" : true, \"Path\" : \"Path\", \"Comment\" : \"Comment\", \"IsExternalUrl\" : true, \"DisplayTitle\" : \"DisplayTitle\", \"IsForced\" : true, \"ChannelLayout\" : \"ChannelLayout\", \"PacketLength\" : 0, \"localizedUndefined\" : \"localizedUndefined\", \"Title\" : \"Title\", \"RealFrameRate\" : 7.05877, \"AspectRatio\" : \"AspectRatio\", \"AverageFrameRate\" : 6.778325, \"Score\" : 4, \"IsExternal\" : true, \"IsInterlaced\" : true, \"Level\" : 7.143538047012306, \"BitRate\" : 5 }, { \"VideoRange\" : \"VideoRange\", \"CodecTimeBase\" : \"CodecTimeBase\", \"ColorSpace\" : \"ColorSpace\", \"Index\" : 3, \"ColorRange\" : \"ColorRange\", \"localizedForced\" : \"localizedForced\", \"BitDepth\" : 6, \"Channels\" : 6, \"Profile\" : \"Profile\", \"SupportsExternalStream\" : true, \"DeliveryUrl\" : \"DeliveryUrl\", \"localizedDefault\" : \"localizedDefault\", \"Codec\" : \"Codec\", \"ColorPrimaries\" : \"ColorPrimaries\", \"SampleRate\" : 0, \"IsTextSubtitleStream\" : true, \"Language\" : \"Language\", \"IsAnamorphic\" : true, \"Height\" : 3, \"NalLengthSize\" : \"NalLengthSize\", \"PixelFormat\" : \"PixelFormat\", \"RefFrames\" : 6, \"IsAVC\" : true, \"Width\" : 8, \"TimeBase\" : \"TimeBase\", \"ColorTransfer\" : \"ColorTransfer\", \"CodecTag\" : \"CodecTag\", \"IsDefault\" : true, \"Path\" : \"Path\", \"Comment\" : \"Comment\", \"IsExternalUrl\" : true, \"DisplayTitle\" : \"DisplayTitle\", \"IsForced\" : true, \"ChannelLayout\" : \"ChannelLayout\", \"PacketLength\" : 0, \"localizedUndefined\" : \"localizedUndefined\", \"Title\" : \"Title\", \"RealFrameRate\" : 7.05877, \"AspectRatio\" : \"AspectRatio\", \"AverageFrameRate\" : 6.778325, \"Score\" : 4, \"IsExternal\" : true, \"IsInterlaced\" : true, \"Level\" : 7.143538047012306, \"BitRate\" : 5 } ], \"IsPlaceHolder\" : true, \"CanDownload\" : true, \"IsMovie\" : true, \"SeriesCount\" : 4, \"DateLastMediaAdded\" : \"2000-01-23T04:56:07.000+00:00\", \"ParentArtImageTag\" : \"ParentArtImageTag\", \"SeriesStudio\" : \"SeriesStudio\", \"IsLive\" : true, \"Width\" : 8, \"ExternalUrls\" : [ { \"Url\" : \"Url\", \"Name\" : \"Name\" }, { \"Url\" : \"Url\", \"Name\" : \"Name\" } ], \"RecursiveItemCount\" : 4, \"ParentId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Path\" : \"Path\", \"MusicVideoCount\" : 7, \"ScreenshotImageTags\" : [ \"ScreenshotImageTags\", \"ScreenshotImageTags\" ], \"EpisodeCount\" : 1, \"IsSeries\" : true, \"ProductionLocations\" : [ \"ProductionLocations\", \"ProductionLocations\" ], \"ParentPrimaryImageItemId\" : \"ParentPrimaryImageItemId\", \"EndDate\" : \"2000-01-23T04:56:07.000+00:00\", \"ParentThumbItemId\" : \"ParentThumbItemId\", \"SeriesPrimaryImageTag\" : \"SeriesPrimaryImageTag\", \"PreferredMetadataLanguage\" : \"PreferredMetadataLanguage\", \"Type\" : \"Type\", \"BackdropImageTags\" : [ \"BackdropImageTags\", \"BackdropImageTags\" ], \"ParentBackdropImageTags\" : [ \"ParentBackdropImageTags\", \"ParentBackdropImageTags\" ], \"AirsBeforeEpisodeNumber\" : 6, \"ChildCount\" : 3, \"Artists\" : [ \"Artists\", \"Artists\" ], \"RunTimeTicks\" : 1, \"AlbumPrimaryImageTag\" : \"AlbumPrimaryImageTag\", \"CumulativeRunTimeTicks\" : 1, \"SourceType\" : \"SourceType\", \"CanDelete\" : true, \"Album\" : \"Album\", \"DisplayPreferencesId\" : \"DisplayPreferencesId\", \"PlaylistItemId\" : \"PlaylistItemId\", \"Latitude\" : 9.965781217890562, \"SortName\" : \"SortName\", \"ArtistCount\" : 7, \"Name\" : \"Name\", \"StartDate\" : \"2000-01-23T04:56:07.000+00:00\", \"Container\" : \"Container\", \"ProductionYear\" : 0, \"SeriesName\" : \"SeriesName\", \"ParentArtItemId\" : \"ParentArtItemId\", \"AlbumId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"LocalTrailerCount\" : 9, \"SupportsSync\" : true, \"CompletionPercentage\" : 4.145608029883936, \"IndexNumber\" : 1, \"Genres\" : [ \"Genres\", \"Genres\" ], \"LockedFields\" : [ null, null ], \"SeasonId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"ParentPrimaryImageTag\" : \"ParentPrimaryImageTag\", \"ProviderIds\" : { \"key\" : \"ProviderIds\" }, \"RemoteTrailers\" : [ { \"Url\" : \"Url\", \"Name\" : \"Name\" }, { \"Url\" : \"Url\", \"Name\" : \"Name\" } ], \"MediaSourceCount\" : 8, \"CustomRating\" : \"CustomRating\", \"AirsAfterSeasonNumber\" : 0, \"AirDays\" : [ null, null ], \"ParentLogoItemId\" : \"ParentLogoItemId\", \"PartCount\" : 3, \"ChannelName\" : \"ChannelName\", \"EpisodeTitle\" : \"EpisodeTitle\", \"IsoSpeedRating\" : 5, \"CommunityRating\" : 2.027123, \"Software\" : \"Software\", \"Chapters\" : [ { \"StartPositionTicks\" : 9, \"ImageTag\" : \"ImageTag\", \"ImageDateModified\" : \"2000-01-23T04:56:07.000+00:00\", \"ImagePath\" : \"ImagePath\", \"Name\" : \"Name\" }, { \"StartPositionTicks\" : 9, \"ImageTag\" : \"ImageTag\", \"ImageDateModified\" : \"2000-01-23T04:56:07.000+00:00\", \"ImagePath\" : \"ImagePath\", \"Name\" : \"Name\" } ], \"SongCount\" : 9, \"Taglines\" : [ \"Taglines\", \"Taglines\" ], \"AirsBeforeSeasonNumber\" : 1, \"CameraModel\" : \"CameraModel\", \"PreferredMetadataCountryCode\" : \"PreferredMetadataCountryCode\", \"ChannelNumber\" : \"ChannelNumber\", \"UserData\" : { \"Played\" : true, \"UnplayedItemCount\" : 6, \"PlayedPercentage\" : 5.507386964179881, \"PlayCount\" : 0, \"Rating\" : 4.86315908102884, \"PlaybackPositionTicks\" : 7, \"LastPlayedDate\" : \"2000-01-23T04:56:07.000+00:00\", \"Likes\" : true, \"IsFavorite\" : true, \"ItemId\" : \"ItemId\", \"Key\" : \"Key\" }, \"TimerId\" : \"TimerId\", \"DateCreated\" : \"2000-01-23T04:56:07.000+00:00\", \"HasSubtitles\" : true, \"ParentThumbImageTag\" : \"ParentThumbImageTag\", \"IsSports\" : true, \"ChannelId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"ParentIndexNumber\" : 5, \"AlbumArtists\" : [ { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" }, { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" } ], \"ServerId\" : \"ServerId\", \"Number\" : \"Number\", \"AlbumCount\" : 5, \"IsRepeat\" : true, \"CollectionType\" : \"CollectionType\", \"Height\" : 7, \"PrimaryImageAspectRatio\" : 4.078845849666752, \"IsKids\" : true, \"DisplayOrder\" : \"DisplayOrder\", \"IsHD\" : true, \"EnableMediaSourceDisplay\" : true, \"SeriesThumbImageTag\" : \"SeriesThumbImageTag\", \"MovieCount\" : 3, \"People\" : [ { \"Role\" : \"Role\", \"Type\" : \"Type\", \"PrimaryImageTag\" : \"PrimaryImageTag\", \"Id\" : \"Id\", \"ImageBlurHashes\" : { \"Art\" : { \"key\" : \"Art\" }, \"Banner\" : { \"key\" : \"Banner\" }, \"Thumb\" : { \"key\" : \"Thumb\" }, \"BoxRear\" : { \"key\" : \"BoxRear\" }, \"Chapter\" : { \"key\" : \"Chapter\" }, \"Box\" : { \"key\" : \"Box\" }, \"Profile\" : { \"key\" : \"Profile\" }, \"Logo\" : { \"key\" : \"Logo\" }, \"Disc\" : { \"key\" : \"Disc\" }, \"Primary\" : { \"key\" : \"Primary\" }, \"Screenshot\" : { \"key\" : \"Screenshot\" }, \"Backdrop\" : { \"key\" : \"Backdrop\" }, \"Menu\" : { \"key\" : \"Menu\" } }, \"Name\" : \"Name\" }, { \"Role\" : \"Role\", \"Type\" : \"Type\", \"PrimaryImageTag\" : \"PrimaryImageTag\", \"Id\" : \"Id\", \"ImageBlurHashes\" : { \"Art\" : { \"key\" : \"Art\" }, \"Banner\" : { \"key\" : \"Banner\" }, \"Thumb\" : { \"key\" : \"Thumb\" }, \"BoxRear\" : { \"key\" : \"BoxRear\" }, \"Chapter\" : { \"key\" : \"Chapter\" }, \"Box\" : { \"key\" : \"Box\" }, \"Profile\" : { \"key\" : \"Profile\" }, \"Logo\" : { \"key\" : \"Logo\" }, \"Disc\" : { \"key\" : \"Disc\" }, \"Primary\" : { \"key\" : \"Primary\" }, \"Screenshot\" : { \"key\" : \"Screenshot\" }, \"Backdrop\" : { \"key\" : \"Backdrop\" }, \"Menu\" : { \"key\" : \"Menu\" } }, \"Name\" : \"Name\" } ], \"Overview\" : \"Overview\", \"SpecialFeatureCount\" : 0, \"AlbumArtist\" : \"AlbumArtist\", \"ImageTags\" : { \"key\" : \"ImageTags\" }, \"AspectRatio\" : \"AspectRatio\", \"TrailerCount\" : 9, \"OriginalTitle\" : \"OriginalTitle\", \"ForcedSortName\" : \"ForcedSortName\", \"IsPremiere\" : true, \"Altitude\" : 5.637376656633329 }, { \"SeasonName\" : \"SeasonName\", \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\", \"AirTime\" : \"AirTime\", \"CriticRating\" : 7.386282, \"Studios\" : [ { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" }, { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" } ], \"Aperture\" : 2.3021358869347655, \"CameraMake\" : \"CameraMake\", \"ChannelPrimaryImageTag\" : \"ChannelPrimaryImageTag\", \"ExtraType\" : \"ExtraType\", \"ParentBackdropItemId\" : \"ParentBackdropItemId\", \"Etag\" : \"Etag\", \"ExposureTime\" : 1.4894159098541704, \"ParentLogoImageTag\" : \"ParentLogoImageTag\", \"MediaType\" : \"MediaType\", \"Tags\" : [ \"Tags\", \"Tags\" ], \"ImageBlurHashes\" : { \"Art\" : { \"key\" : \"Art\" }, \"Banner\" : { \"key\" : \"Banner\" }, \"Thumb\" : { \"key\" : \"Thumb\" }, \"BoxRear\" : { \"key\" : \"BoxRear\" }, \"Chapter\" : { \"key\" : \"Chapter\" }, \"Box\" : { \"key\" : \"Box\" }, \"Profile\" : { \"key\" : \"Profile\" }, \"Logo\" : { \"key\" : \"Logo\" }, \"Disc\" : { \"key\" : \"Disc\" }, \"Primary\" : { \"key\" : \"Primary\" }, \"Screenshot\" : { \"key\" : \"Screenshot\" }, \"Backdrop\" : { \"key\" : \"Backdrop\" }, \"Menu\" : { \"key\" : \"Menu\" } }, \"Status\" : \"Status\", \"IndexNumberEnd\" : 4, \"ArtistItems\" : [ { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" }, { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" } ], \"MediaSources\" : [ { \"EncoderPath\" : \"EncoderPath\", \"RequiredHttpHeaders\" : { \"key\" : \"RequiredHttpHeaders\" }, \"RunTimeTicks\" : 7, \"MediaStreams\" : [ { \"VideoRange\" : \"VideoRange\", \"CodecTimeBase\" : \"CodecTimeBase\", \"ColorSpace\" : \"ColorSpace\", \"Index\" : 3, \"ColorRange\" : \"ColorRange\", \"localizedForced\" : \"localizedForced\", \"BitDepth\" : 6, \"Channels\" : 6, \"Profile\" : \"Profile\", \"SupportsExternalStream\" : true, \"DeliveryUrl\" : \"DeliveryUrl\", \"localizedDefault\" : \"localizedDefault\", \"Codec\" : \"Codec\", \"ColorPrimaries\" : \"ColorPrimaries\", \"SampleRate\" : 0, \"IsTextSubtitleStream\" : true, \"Language\" : \"Language\", \"IsAnamorphic\" : true, \"Height\" : 3, \"NalLengthSize\" : \"NalLengthSize\", \"PixelFormat\" : \"PixelFormat\", \"RefFrames\" : 6, \"IsAVC\" : true, \"Width\" : 8, \"TimeBase\" : \"TimeBase\", \"ColorTransfer\" : \"ColorTransfer\", \"CodecTag\" : \"CodecTag\", \"IsDefault\" : true, \"Path\" : \"Path\", \"Comment\" : \"Comment\", \"IsExternalUrl\" : true, \"DisplayTitle\" : \"DisplayTitle\", \"IsForced\" : true, \"ChannelLayout\" : \"ChannelLayout\", \"PacketLength\" : 0, \"localizedUndefined\" : \"localizedUndefined\", \"Title\" : \"Title\", \"RealFrameRate\" : 7.05877, \"AspectRatio\" : \"AspectRatio\", \"AverageFrameRate\" : 6.778325, \"Score\" : 4, \"IsExternal\" : true, \"IsInterlaced\" : true, \"Level\" : 7.143538047012306, \"BitRate\" : 5 }, { \"VideoRange\" : \"VideoRange\", \"CodecTimeBase\" : \"CodecTimeBase\", \"ColorSpace\" : \"ColorSpace\", \"Index\" : 3, \"ColorRange\" : \"ColorRange\", \"localizedForced\" : \"localizedForced\", \"BitDepth\" : 6, \"Channels\" : 6, \"Profile\" : \"Profile\", \"SupportsExternalStream\" : true, \"DeliveryUrl\" : \"DeliveryUrl\", \"localizedDefault\" : \"localizedDefault\", \"Codec\" : \"Codec\", \"ColorPrimaries\" : \"ColorPrimaries\", \"SampleRate\" : 0, \"IsTextSubtitleStream\" : true, \"Language\" : \"Language\", \"IsAnamorphic\" : true, \"Height\" : 3, \"NalLengthSize\" : \"NalLengthSize\", \"PixelFormat\" : \"PixelFormat\", \"RefFrames\" : 6, \"IsAVC\" : true, \"Width\" : 8, \"TimeBase\" : \"TimeBase\", \"ColorTransfer\" : \"ColorTransfer\", \"CodecTag\" : \"CodecTag\", \"IsDefault\" : true, \"Path\" : \"Path\", \"Comment\" : \"Comment\", \"IsExternalUrl\" : true, \"DisplayTitle\" : \"DisplayTitle\", \"IsForced\" : true, \"ChannelLayout\" : \"ChannelLayout\", \"PacketLength\" : 0, \"localizedUndefined\" : \"localizedUndefined\", \"Title\" : \"Title\", \"RealFrameRate\" : 7.05877, \"AspectRatio\" : \"AspectRatio\", \"AverageFrameRate\" : 6.778325, \"Score\" : 4, \"IsExternal\" : true, \"IsInterlaced\" : true, \"Level\" : 7.143538047012306, \"BitRate\" : 5 } ], \"Size\" : 3, \"BufferMs\" : 3, \"Name\" : \"Name\", \"RequiresOpening\" : true, \"SupportsDirectStream\" : true, \"RequiresClosing\" : true, \"Container\" : \"Container\", \"LiveStreamId\" : \"LiveStreamId\", \"RequiresLooping\" : true, \"DefaultSubtitleStreamIndex\" : 1, \"GenPtsInput\" : true, \"IsInfiniteStream\" : true, \"Path\" : \"Path\", \"IsRemote\" : true, \"IgnoreIndex\" : true, \"SupportsDirectPlay\" : true, \"TranscodingSubProtocol\" : \"TranscodingSubProtocol\", \"AnalyzeDurationMs\" : 9, \"Formats\" : [ \"Formats\", \"Formats\" ], \"Bitrate\" : 6, \"OpenToken\" : \"OpenToken\", \"SupportsProbing\" : true, \"MediaAttachments\" : [ { \"CodecTag\" : \"CodecTag\", \"Comment\" : \"Comment\", \"DeliveryUrl\" : \"DeliveryUrl\", \"Codec\" : \"Codec\", \"FileName\" : \"FileName\", \"Index\" : 2, \"MimeType\" : \"MimeType\" }, { \"CodecTag\" : \"CodecTag\", \"Comment\" : \"Comment\", \"DeliveryUrl\" : \"DeliveryUrl\", \"Codec\" : \"Codec\", \"FileName\" : \"FileName\", \"Index\" : 2, \"MimeType\" : \"MimeType\" } ], \"ReadAtNativeFramerate\" : true, \"ETag\" : \"ETag\", \"TranscodingContainer\" : \"TranscodingContainer\", \"IgnoreDts\" : true, \"TranscodingUrl\" : \"TranscodingUrl\", \"Id\" : \"Id\", \"SupportsTranscoding\" : true, \"DefaultAudioStreamIndex\" : 6 }, { \"EncoderPath\" : \"EncoderPath\", \"RequiredHttpHeaders\" : { \"key\" : \"RequiredHttpHeaders\" }, \"RunTimeTicks\" : 7, \"MediaStreams\" : [ { \"VideoRange\" : \"VideoRange\", \"CodecTimeBase\" : \"CodecTimeBase\", \"ColorSpace\" : \"ColorSpace\", \"Index\" : 3, \"ColorRange\" : \"ColorRange\", \"localizedForced\" : \"localizedForced\", \"BitDepth\" : 6, \"Channels\" : 6, \"Profile\" : \"Profile\", \"SupportsExternalStream\" : true, \"DeliveryUrl\" : \"DeliveryUrl\", \"localizedDefault\" : \"localizedDefault\", \"Codec\" : \"Codec\", \"ColorPrimaries\" : \"ColorPrimaries\", \"SampleRate\" : 0, \"IsTextSubtitleStream\" : true, \"Language\" : \"Language\", \"IsAnamorphic\" : true, \"Height\" : 3, \"NalLengthSize\" : \"NalLengthSize\", \"PixelFormat\" : \"PixelFormat\", \"RefFrames\" : 6, \"IsAVC\" : true, \"Width\" : 8, \"TimeBase\" : \"TimeBase\", \"ColorTransfer\" : \"ColorTransfer\", \"CodecTag\" : \"CodecTag\", \"IsDefault\" : true, \"Path\" : \"Path\", \"Comment\" : \"Comment\", \"IsExternalUrl\" : true, \"DisplayTitle\" : \"DisplayTitle\", \"IsForced\" : true, \"ChannelLayout\" : \"ChannelLayout\", \"PacketLength\" : 0, \"localizedUndefined\" : \"localizedUndefined\", \"Title\" : \"Title\", \"RealFrameRate\" : 7.05877, \"AspectRatio\" : \"AspectRatio\", \"AverageFrameRate\" : 6.778325, \"Score\" : 4, \"IsExternal\" : true, \"IsInterlaced\" : true, \"Level\" : 7.143538047012306, \"BitRate\" : 5 }, { \"VideoRange\" : \"VideoRange\", \"CodecTimeBase\" : \"CodecTimeBase\", \"ColorSpace\" : \"ColorSpace\", \"Index\" : 3, \"ColorRange\" : \"ColorRange\", \"localizedForced\" : \"localizedForced\", \"BitDepth\" : 6, \"Channels\" : 6, \"Profile\" : \"Profile\", \"SupportsExternalStream\" : true, \"DeliveryUrl\" : \"DeliveryUrl\", \"localizedDefault\" : \"localizedDefault\", \"Codec\" : \"Codec\", \"ColorPrimaries\" : \"ColorPrimaries\", \"SampleRate\" : 0, \"IsTextSubtitleStream\" : true, \"Language\" : \"Language\", \"IsAnamorphic\" : true, \"Height\" : 3, \"NalLengthSize\" : \"NalLengthSize\", \"PixelFormat\" : \"PixelFormat\", \"RefFrames\" : 6, \"IsAVC\" : true, \"Width\" : 8, \"TimeBase\" : \"TimeBase\", \"ColorTransfer\" : \"ColorTransfer\", \"CodecTag\" : \"CodecTag\", \"IsDefault\" : true, \"Path\" : \"Path\", \"Comment\" : \"Comment\", \"IsExternalUrl\" : true, \"DisplayTitle\" : \"DisplayTitle\", \"IsForced\" : true, \"ChannelLayout\" : \"ChannelLayout\", \"PacketLength\" : 0, \"localizedUndefined\" : \"localizedUndefined\", \"Title\" : \"Title\", \"RealFrameRate\" : 7.05877, \"AspectRatio\" : \"AspectRatio\", \"AverageFrameRate\" : 6.778325, \"Score\" : 4, \"IsExternal\" : true, \"IsInterlaced\" : true, \"Level\" : 7.143538047012306, \"BitRate\" : 5 } ], \"Size\" : 3, \"BufferMs\" : 3, \"Name\" : \"Name\", \"RequiresOpening\" : true, \"SupportsDirectStream\" : true, \"RequiresClosing\" : true, \"Container\" : \"Container\", \"LiveStreamId\" : \"LiveStreamId\", \"RequiresLooping\" : true, \"DefaultSubtitleStreamIndex\" : 1, \"GenPtsInput\" : true, \"IsInfiniteStream\" : true, \"Path\" : \"Path\", \"IsRemote\" : true, \"IgnoreIndex\" : true, \"SupportsDirectPlay\" : true, \"TranscodingSubProtocol\" : \"TranscodingSubProtocol\", \"AnalyzeDurationMs\" : 9, \"Formats\" : [ \"Formats\", \"Formats\" ], \"Bitrate\" : 6, \"OpenToken\" : \"OpenToken\", \"SupportsProbing\" : true, \"MediaAttachments\" : [ { \"CodecTag\" : \"CodecTag\", \"Comment\" : \"Comment\", \"DeliveryUrl\" : \"DeliveryUrl\", \"Codec\" : \"Codec\", \"FileName\" : \"FileName\", \"Index\" : 2, \"MimeType\" : \"MimeType\" }, { \"CodecTag\" : \"CodecTag\", \"Comment\" : \"Comment\", \"DeliveryUrl\" : \"DeliveryUrl\", \"Codec\" : \"Codec\", \"FileName\" : \"FileName\", \"Index\" : 2, \"MimeType\" : \"MimeType\" } ], \"ReadAtNativeFramerate\" : true, \"ETag\" : \"ETag\", \"TranscodingContainer\" : \"TranscodingContainer\", \"IgnoreDts\" : true, \"TranscodingUrl\" : \"TranscodingUrl\", \"Id\" : \"Id\", \"SupportsTranscoding\" : true, \"DefaultAudioStreamIndex\" : 6 } ], \"GenreItems\" : [ { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" }, { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" } ], \"OfficialRating\" : \"OfficialRating\", \"ProgramCount\" : 6, \"ProgramId\" : \"ProgramId\", \"Longitude\" : 6.683562403749608, \"FocalLength\" : 6.84685269835264, \"LockData\" : true, \"IsNews\" : true, \"ShutterSpeed\" : 7.260521264802104, \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"IsFolder\" : true, \"SeriesTimerId\" : \"SeriesTimerId\", \"SeriesId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"MediaStreams\" : [ { \"VideoRange\" : \"VideoRange\", \"CodecTimeBase\" : \"CodecTimeBase\", \"ColorSpace\" : \"ColorSpace\", \"Index\" : 3, \"ColorRange\" : \"ColorRange\", \"localizedForced\" : \"localizedForced\", \"BitDepth\" : 6, \"Channels\" : 6, \"Profile\" : \"Profile\", \"SupportsExternalStream\" : true, \"DeliveryUrl\" : \"DeliveryUrl\", \"localizedDefault\" : \"localizedDefault\", \"Codec\" : \"Codec\", \"ColorPrimaries\" : \"ColorPrimaries\", \"SampleRate\" : 0, \"IsTextSubtitleStream\" : true, \"Language\" : \"Language\", \"IsAnamorphic\" : true, \"Height\" : 3, \"NalLengthSize\" : \"NalLengthSize\", \"PixelFormat\" : \"PixelFormat\", \"RefFrames\" : 6, \"IsAVC\" : true, \"Width\" : 8, \"TimeBase\" : \"TimeBase\", \"ColorTransfer\" : \"ColorTransfer\", \"CodecTag\" : \"CodecTag\", \"IsDefault\" : true, \"Path\" : \"Path\", \"Comment\" : \"Comment\", \"IsExternalUrl\" : true, \"DisplayTitle\" : \"DisplayTitle\", \"IsForced\" : true, \"ChannelLayout\" : \"ChannelLayout\", \"PacketLength\" : 0, \"localizedUndefined\" : \"localizedUndefined\", \"Title\" : \"Title\", \"RealFrameRate\" : 7.05877, \"AspectRatio\" : \"AspectRatio\", \"AverageFrameRate\" : 6.778325, \"Score\" : 4, \"IsExternal\" : true, \"IsInterlaced\" : true, \"Level\" : 7.143538047012306, \"BitRate\" : 5 }, { \"VideoRange\" : \"VideoRange\", \"CodecTimeBase\" : \"CodecTimeBase\", \"ColorSpace\" : \"ColorSpace\", \"Index\" : 3, \"ColorRange\" : \"ColorRange\", \"localizedForced\" : \"localizedForced\", \"BitDepth\" : 6, \"Channels\" : 6, \"Profile\" : \"Profile\", \"SupportsExternalStream\" : true, \"DeliveryUrl\" : \"DeliveryUrl\", \"localizedDefault\" : \"localizedDefault\", \"Codec\" : \"Codec\", \"ColorPrimaries\" : \"ColorPrimaries\", \"SampleRate\" : 0, \"IsTextSubtitleStream\" : true, \"Language\" : \"Language\", \"IsAnamorphic\" : true, \"Height\" : 3, \"NalLengthSize\" : \"NalLengthSize\", \"PixelFormat\" : \"PixelFormat\", \"RefFrames\" : 6, \"IsAVC\" : true, \"Width\" : 8, \"TimeBase\" : \"TimeBase\", \"ColorTransfer\" : \"ColorTransfer\", \"CodecTag\" : \"CodecTag\", \"IsDefault\" : true, \"Path\" : \"Path\", \"Comment\" : \"Comment\", \"IsExternalUrl\" : true, \"DisplayTitle\" : \"DisplayTitle\", \"IsForced\" : true, \"ChannelLayout\" : \"ChannelLayout\", \"PacketLength\" : 0, \"localizedUndefined\" : \"localizedUndefined\", \"Title\" : \"Title\", \"RealFrameRate\" : 7.05877, \"AspectRatio\" : \"AspectRatio\", \"AverageFrameRate\" : 6.778325, \"Score\" : 4, \"IsExternal\" : true, \"IsInterlaced\" : true, \"Level\" : 7.143538047012306, \"BitRate\" : 5 } ], \"IsPlaceHolder\" : true, \"CanDownload\" : true, \"IsMovie\" : true, \"SeriesCount\" : 4, \"DateLastMediaAdded\" : \"2000-01-23T04:56:07.000+00:00\", \"ParentArtImageTag\" : \"ParentArtImageTag\", \"SeriesStudio\" : \"SeriesStudio\", \"IsLive\" : true, \"Width\" : 8, \"ExternalUrls\" : [ { \"Url\" : \"Url\", \"Name\" : \"Name\" }, { \"Url\" : \"Url\", \"Name\" : \"Name\" } ], \"RecursiveItemCount\" : 4, \"ParentId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Path\" : \"Path\", \"MusicVideoCount\" : 7, \"ScreenshotImageTags\" : [ \"ScreenshotImageTags\", \"ScreenshotImageTags\" ], \"EpisodeCount\" : 1, \"IsSeries\" : true, \"ProductionLocations\" : [ \"ProductionLocations\", \"ProductionLocations\" ], \"ParentPrimaryImageItemId\" : \"ParentPrimaryImageItemId\", \"EndDate\" : \"2000-01-23T04:56:07.000+00:00\", \"ParentThumbItemId\" : \"ParentThumbItemId\", \"SeriesPrimaryImageTag\" : \"SeriesPrimaryImageTag\", \"PreferredMetadataLanguage\" : \"PreferredMetadataLanguage\", \"Type\" : \"Type\", \"BackdropImageTags\" : [ \"BackdropImageTags\", \"BackdropImageTags\" ], \"ParentBackdropImageTags\" : [ \"ParentBackdropImageTags\", \"ParentBackdropImageTags\" ], \"AirsBeforeEpisodeNumber\" : 6, \"ChildCount\" : 3, \"Artists\" : [ \"Artists\", \"Artists\" ], \"RunTimeTicks\" : 1, \"AlbumPrimaryImageTag\" : \"AlbumPrimaryImageTag\", \"CumulativeRunTimeTicks\" : 1, \"SourceType\" : \"SourceType\", \"CanDelete\" : true, \"Album\" : \"Album\", \"DisplayPreferencesId\" : \"DisplayPreferencesId\", \"PlaylistItemId\" : \"PlaylistItemId\", \"Latitude\" : 9.965781217890562, \"SortName\" : \"SortName\", \"ArtistCount\" : 7, \"Name\" : \"Name\", \"StartDate\" : \"2000-01-23T04:56:07.000+00:00\", \"Container\" : \"Container\", \"ProductionYear\" : 0, \"SeriesName\" : \"SeriesName\", \"ParentArtItemId\" : \"ParentArtItemId\", \"AlbumId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"LocalTrailerCount\" : 9, \"SupportsSync\" : true, \"CompletionPercentage\" : 4.145608029883936, \"IndexNumber\" : 1, \"Genres\" : [ \"Genres\", \"Genres\" ], \"LockedFields\" : [ null, null ], \"SeasonId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"ParentPrimaryImageTag\" : \"ParentPrimaryImageTag\", \"ProviderIds\" : { \"key\" : \"ProviderIds\" }, \"RemoteTrailers\" : [ { \"Url\" : \"Url\", \"Name\" : \"Name\" }, { \"Url\" : \"Url\", \"Name\" : \"Name\" } ], \"MediaSourceCount\" : 8, \"CustomRating\" : \"CustomRating\", \"AirsAfterSeasonNumber\" : 0, \"AirDays\" : [ null, null ], \"ParentLogoItemId\" : \"ParentLogoItemId\", \"PartCount\" : 3, \"ChannelName\" : \"ChannelName\", \"EpisodeTitle\" : \"EpisodeTitle\", \"IsoSpeedRating\" : 5, \"CommunityRating\" : 2.027123, \"Software\" : \"Software\", \"Chapters\" : [ { \"StartPositionTicks\" : 9, \"ImageTag\" : \"ImageTag\", \"ImageDateModified\" : \"2000-01-23T04:56:07.000+00:00\", \"ImagePath\" : \"ImagePath\", \"Name\" : \"Name\" }, { \"StartPositionTicks\" : 9, \"ImageTag\" : \"ImageTag\", \"ImageDateModified\" : \"2000-01-23T04:56:07.000+00:00\", \"ImagePath\" : \"ImagePath\", \"Name\" : \"Name\" } ], \"SongCount\" : 9, \"Taglines\" : [ \"Taglines\", \"Taglines\" ], \"AirsBeforeSeasonNumber\" : 1, \"CameraModel\" : \"CameraModel\", \"PreferredMetadataCountryCode\" : \"PreferredMetadataCountryCode\", \"ChannelNumber\" : \"ChannelNumber\", \"UserData\" : { \"Played\" : true, \"UnplayedItemCount\" : 6, \"PlayedPercentage\" : 5.507386964179881, \"PlayCount\" : 0, \"Rating\" : 4.86315908102884, \"PlaybackPositionTicks\" : 7, \"LastPlayedDate\" : \"2000-01-23T04:56:07.000+00:00\", \"Likes\" : true, \"IsFavorite\" : true, \"ItemId\" : \"ItemId\", \"Key\" : \"Key\" }, \"TimerId\" : \"TimerId\", \"DateCreated\" : \"2000-01-23T04:56:07.000+00:00\", \"HasSubtitles\" : true, \"ParentThumbImageTag\" : \"ParentThumbImageTag\", \"IsSports\" : true, \"ChannelId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"ParentIndexNumber\" : 5, \"AlbumArtists\" : [ { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" }, { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" } ], \"ServerId\" : \"ServerId\", \"Number\" : \"Number\", \"AlbumCount\" : 5, \"IsRepeat\" : true, \"CollectionType\" : \"CollectionType\", \"Height\" : 7, \"PrimaryImageAspectRatio\" : 4.078845849666752, \"IsKids\" : true, \"DisplayOrder\" : \"DisplayOrder\", \"IsHD\" : true, \"EnableMediaSourceDisplay\" : true, \"SeriesThumbImageTag\" : \"SeriesThumbImageTag\", \"MovieCount\" : 3, \"People\" : [ { \"Role\" : \"Role\", \"Type\" : \"Type\", \"PrimaryImageTag\" : \"PrimaryImageTag\", \"Id\" : \"Id\", \"ImageBlurHashes\" : { \"Art\" : { \"key\" : \"Art\" }, \"Banner\" : { \"key\" : \"Banner\" }, \"Thumb\" : { \"key\" : \"Thumb\" }, \"BoxRear\" : { \"key\" : \"BoxRear\" }, \"Chapter\" : { \"key\" : \"Chapter\" }, \"Box\" : { \"key\" : \"Box\" }, \"Profile\" : { \"key\" : \"Profile\" }, \"Logo\" : { \"key\" : \"Logo\" }, \"Disc\" : { \"key\" : \"Disc\" }, \"Primary\" : { \"key\" : \"Primary\" }, \"Screenshot\" : { \"key\" : \"Screenshot\" }, \"Backdrop\" : { \"key\" : \"Backdrop\" }, \"Menu\" : { \"key\" : \"Menu\" } }, \"Name\" : \"Name\" }, { \"Role\" : \"Role\", \"Type\" : \"Type\", \"PrimaryImageTag\" : \"PrimaryImageTag\", \"Id\" : \"Id\", \"ImageBlurHashes\" : { \"Art\" : { \"key\" : \"Art\" }, \"Banner\" : { \"key\" : \"Banner\" }, \"Thumb\" : { \"key\" : \"Thumb\" }, \"BoxRear\" : { \"key\" : \"BoxRear\" }, \"Chapter\" : { \"key\" : \"Chapter\" }, \"Box\" : { \"key\" : \"Box\" }, \"Profile\" : { \"key\" : \"Profile\" }, \"Logo\" : { \"key\" : \"Logo\" }, \"Disc\" : { \"key\" : \"Disc\" }, \"Primary\" : { \"key\" : \"Primary\" }, \"Screenshot\" : { \"key\" : \"Screenshot\" }, \"Backdrop\" : { \"key\" : \"Backdrop\" }, \"Menu\" : { \"key\" : \"Menu\" } }, \"Name\" : \"Name\" } ], \"Overview\" : \"Overview\", \"SpecialFeatureCount\" : 0, \"AlbumArtist\" : \"AlbumArtist\", \"ImageTags\" : { \"key\" : \"ImageTags\" }, \"AspectRatio\" : \"AspectRatio\", \"TrailerCount\" : 9, \"OriginalTitle\" : \"OriginalTitle\", \"ForcedSortName\" : \"ForcedSortName\", \"IsPremiere\" : true, \"Altitude\" : 5.637376656633329 } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json; profile="CamelCase""))) {
                    String exampleString = "{ \"TotalRecordCount\" : 3, \"StartIndex\" : 4, \"Items\" : [ { \"SeasonName\" : \"SeasonName\", \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\", \"AirTime\" : \"AirTime\", \"CriticRating\" : 7.386282, \"Studios\" : [ { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" }, { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" } ], \"Aperture\" : 2.3021358869347655, \"CameraMake\" : \"CameraMake\", \"ChannelPrimaryImageTag\" : \"ChannelPrimaryImageTag\", \"ExtraType\" : \"ExtraType\", \"ParentBackdropItemId\" : \"ParentBackdropItemId\", \"Etag\" : \"Etag\", \"ExposureTime\" : 1.4894159098541704, \"ParentLogoImageTag\" : \"ParentLogoImageTag\", \"MediaType\" : \"MediaType\", \"Tags\" : [ \"Tags\", \"Tags\" ], \"ImageBlurHashes\" : { \"Art\" : { \"key\" : \"Art\" }, \"Banner\" : { \"key\" : \"Banner\" }, \"Thumb\" : { \"key\" : \"Thumb\" }, \"BoxRear\" : { \"key\" : \"BoxRear\" }, \"Chapter\" : { \"key\" : \"Chapter\" }, \"Box\" : { \"key\" : \"Box\" }, \"Profile\" : { \"key\" : \"Profile\" }, \"Logo\" : { \"key\" : \"Logo\" }, \"Disc\" : { \"key\" : \"Disc\" }, \"Primary\" : { \"key\" : \"Primary\" }, \"Screenshot\" : { \"key\" : \"Screenshot\" }, \"Backdrop\" : { \"key\" : \"Backdrop\" }, \"Menu\" : { \"key\" : \"Menu\" } }, \"Status\" : \"Status\", \"IndexNumberEnd\" : 4, \"ArtistItems\" : [ { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" }, { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" } ], \"MediaSources\" : [ { \"EncoderPath\" : \"EncoderPath\", \"RequiredHttpHeaders\" : { \"key\" : \"RequiredHttpHeaders\" }, \"RunTimeTicks\" : 7, \"MediaStreams\" : [ { \"VideoRange\" : \"VideoRange\", \"CodecTimeBase\" : \"CodecTimeBase\", \"ColorSpace\" : \"ColorSpace\", \"Index\" : 3, \"ColorRange\" : \"ColorRange\", \"localizedForced\" : \"localizedForced\", \"BitDepth\" : 6, \"Channels\" : 6, \"Profile\" : \"Profile\", \"SupportsExternalStream\" : true, \"DeliveryUrl\" : \"DeliveryUrl\", \"localizedDefault\" : \"localizedDefault\", \"Codec\" : \"Codec\", \"ColorPrimaries\" : \"ColorPrimaries\", \"SampleRate\" : 0, \"IsTextSubtitleStream\" : true, \"Language\" : \"Language\", \"IsAnamorphic\" : true, \"Height\" : 3, \"NalLengthSize\" : \"NalLengthSize\", \"PixelFormat\" : \"PixelFormat\", \"RefFrames\" : 6, \"IsAVC\" : true, \"Width\" : 8, \"TimeBase\" : \"TimeBase\", \"ColorTransfer\" : \"ColorTransfer\", \"CodecTag\" : \"CodecTag\", \"IsDefault\" : true, \"Path\" : \"Path\", \"Comment\" : \"Comment\", \"IsExternalUrl\" : true, \"DisplayTitle\" : \"DisplayTitle\", \"IsForced\" : true, \"ChannelLayout\" : \"ChannelLayout\", \"PacketLength\" : 0, \"localizedUndefined\" : \"localizedUndefined\", \"Title\" : \"Title\", \"RealFrameRate\" : 7.05877, \"AspectRatio\" : \"AspectRatio\", \"AverageFrameRate\" : 6.778325, \"Score\" : 4, \"IsExternal\" : true, \"IsInterlaced\" : true, \"Level\" : 7.143538047012306, \"BitRate\" : 5 }, { \"VideoRange\" : \"VideoRange\", \"CodecTimeBase\" : \"CodecTimeBase\", \"ColorSpace\" : \"ColorSpace\", \"Index\" : 3, \"ColorRange\" : \"ColorRange\", \"localizedForced\" : \"localizedForced\", \"BitDepth\" : 6, \"Channels\" : 6, \"Profile\" : \"Profile\", \"SupportsExternalStream\" : true, \"DeliveryUrl\" : \"DeliveryUrl\", \"localizedDefault\" : \"localizedDefault\", \"Codec\" : \"Codec\", \"ColorPrimaries\" : \"ColorPrimaries\", \"SampleRate\" : 0, \"IsTextSubtitleStream\" : true, \"Language\" : \"Language\", \"IsAnamorphic\" : true, \"Height\" : 3, \"NalLengthSize\" : \"NalLengthSize\", \"PixelFormat\" : \"PixelFormat\", \"RefFrames\" : 6, \"IsAVC\" : true, \"Width\" : 8, \"TimeBase\" : \"TimeBase\", \"ColorTransfer\" : \"ColorTransfer\", \"CodecTag\" : \"CodecTag\", \"IsDefault\" : true, \"Path\" : \"Path\", \"Comment\" : \"Comment\", \"IsExternalUrl\" : true, \"DisplayTitle\" : \"DisplayTitle\", \"IsForced\" : true, \"ChannelLayout\" : \"ChannelLayout\", \"PacketLength\" : 0, \"localizedUndefined\" : \"localizedUndefined\", \"Title\" : \"Title\", \"RealFrameRate\" : 7.05877, \"AspectRatio\" : \"AspectRatio\", \"AverageFrameRate\" : 6.778325, \"Score\" : 4, \"IsExternal\" : true, \"IsInterlaced\" : true, \"Level\" : 7.143538047012306, \"BitRate\" : 5 } ], \"Size\" : 3, \"BufferMs\" : 3, \"Name\" : \"Name\", \"RequiresOpening\" : true, \"SupportsDirectStream\" : true, \"RequiresClosing\" : true, \"Container\" : \"Container\", \"LiveStreamId\" : \"LiveStreamId\", \"RequiresLooping\" : true, \"DefaultSubtitleStreamIndex\" : 1, \"GenPtsInput\" : true, \"IsInfiniteStream\" : true, \"Path\" : \"Path\", \"IsRemote\" : true, \"IgnoreIndex\" : true, \"SupportsDirectPlay\" : true, \"TranscodingSubProtocol\" : \"TranscodingSubProtocol\", \"AnalyzeDurationMs\" : 9, \"Formats\" : [ \"Formats\", \"Formats\" ], \"Bitrate\" : 6, \"OpenToken\" : \"OpenToken\", \"SupportsProbing\" : true, \"MediaAttachments\" : [ { \"CodecTag\" : \"CodecTag\", \"Comment\" : \"Comment\", \"DeliveryUrl\" : \"DeliveryUrl\", \"Codec\" : \"Codec\", \"FileName\" : \"FileName\", \"Index\" : 2, \"MimeType\" : \"MimeType\" }, { \"CodecTag\" : \"CodecTag\", \"Comment\" : \"Comment\", \"DeliveryUrl\" : \"DeliveryUrl\", \"Codec\" : \"Codec\", \"FileName\" : \"FileName\", \"Index\" : 2, \"MimeType\" : \"MimeType\" } ], \"ReadAtNativeFramerate\" : true, \"ETag\" : \"ETag\", \"TranscodingContainer\" : \"TranscodingContainer\", \"IgnoreDts\" : true, \"TranscodingUrl\" : \"TranscodingUrl\", \"Id\" : \"Id\", \"SupportsTranscoding\" : true, \"DefaultAudioStreamIndex\" : 6 }, { \"EncoderPath\" : \"EncoderPath\", \"RequiredHttpHeaders\" : { \"key\" : \"RequiredHttpHeaders\" }, \"RunTimeTicks\" : 7, \"MediaStreams\" : [ { \"VideoRange\" : \"VideoRange\", \"CodecTimeBase\" : \"CodecTimeBase\", \"ColorSpace\" : \"ColorSpace\", \"Index\" : 3, \"ColorRange\" : \"ColorRange\", \"localizedForced\" : \"localizedForced\", \"BitDepth\" : 6, \"Channels\" : 6, \"Profile\" : \"Profile\", \"SupportsExternalStream\" : true, \"DeliveryUrl\" : \"DeliveryUrl\", \"localizedDefault\" : \"localizedDefault\", \"Codec\" : \"Codec\", \"ColorPrimaries\" : \"ColorPrimaries\", \"SampleRate\" : 0, \"IsTextSubtitleStream\" : true, \"Language\" : \"Language\", \"IsAnamorphic\" : true, \"Height\" : 3, \"NalLengthSize\" : \"NalLengthSize\", \"PixelFormat\" : \"PixelFormat\", \"RefFrames\" : 6, \"IsAVC\" : true, \"Width\" : 8, \"TimeBase\" : \"TimeBase\", \"ColorTransfer\" : \"ColorTransfer\", \"CodecTag\" : \"CodecTag\", \"IsDefault\" : true, \"Path\" : \"Path\", \"Comment\" : \"Comment\", \"IsExternalUrl\" : true, \"DisplayTitle\" : \"DisplayTitle\", \"IsForced\" : true, \"ChannelLayout\" : \"ChannelLayout\", \"PacketLength\" : 0, \"localizedUndefined\" : \"localizedUndefined\", \"Title\" : \"Title\", \"RealFrameRate\" : 7.05877, \"AspectRatio\" : \"AspectRatio\", \"AverageFrameRate\" : 6.778325, \"Score\" : 4, \"IsExternal\" : true, \"IsInterlaced\" : true, \"Level\" : 7.143538047012306, \"BitRate\" : 5 }, { \"VideoRange\" : \"VideoRange\", \"CodecTimeBase\" : \"CodecTimeBase\", \"ColorSpace\" : \"ColorSpace\", \"Index\" : 3, \"ColorRange\" : \"ColorRange\", \"localizedForced\" : \"localizedForced\", \"BitDepth\" : 6, \"Channels\" : 6, \"Profile\" : \"Profile\", \"SupportsExternalStream\" : true, \"DeliveryUrl\" : \"DeliveryUrl\", \"localizedDefault\" : \"localizedDefault\", \"Codec\" : \"Codec\", \"ColorPrimaries\" : \"ColorPrimaries\", \"SampleRate\" : 0, \"IsTextSubtitleStream\" : true, \"Language\" : \"Language\", \"IsAnamorphic\" : true, \"Height\" : 3, \"NalLengthSize\" : \"NalLengthSize\", \"PixelFormat\" : \"PixelFormat\", \"RefFrames\" : 6, \"IsAVC\" : true, \"Width\" : 8, \"TimeBase\" : \"TimeBase\", \"ColorTransfer\" : \"ColorTransfer\", \"CodecTag\" : \"CodecTag\", \"IsDefault\" : true, \"Path\" : \"Path\", \"Comment\" : \"Comment\", \"IsExternalUrl\" : true, \"DisplayTitle\" : \"DisplayTitle\", \"IsForced\" : true, \"ChannelLayout\" : \"ChannelLayout\", \"PacketLength\" : 0, \"localizedUndefined\" : \"localizedUndefined\", \"Title\" : \"Title\", \"RealFrameRate\" : 7.05877, \"AspectRatio\" : \"AspectRatio\", \"AverageFrameRate\" : 6.778325, \"Score\" : 4, \"IsExternal\" : true, \"IsInterlaced\" : true, \"Level\" : 7.143538047012306, \"BitRate\" : 5 } ], \"Size\" : 3, \"BufferMs\" : 3, \"Name\" : \"Name\", \"RequiresOpening\" : true, \"SupportsDirectStream\" : true, \"RequiresClosing\" : true, \"Container\" : \"Container\", \"LiveStreamId\" : \"LiveStreamId\", \"RequiresLooping\" : true, \"DefaultSubtitleStreamIndex\" : 1, \"GenPtsInput\" : true, \"IsInfiniteStream\" : true, \"Path\" : \"Path\", \"IsRemote\" : true, \"IgnoreIndex\" : true, \"SupportsDirectPlay\" : true, \"TranscodingSubProtocol\" : \"TranscodingSubProtocol\", \"AnalyzeDurationMs\" : 9, \"Formats\" : [ \"Formats\", \"Formats\" ], \"Bitrate\" : 6, \"OpenToken\" : \"OpenToken\", \"SupportsProbing\" : true, \"MediaAttachments\" : [ { \"CodecTag\" : \"CodecTag\", \"Comment\" : \"Comment\", \"DeliveryUrl\" : \"DeliveryUrl\", \"Codec\" : \"Codec\", \"FileName\" : \"FileName\", \"Index\" : 2, \"MimeType\" : \"MimeType\" }, { \"CodecTag\" : \"CodecTag\", \"Comment\" : \"Comment\", \"DeliveryUrl\" : \"DeliveryUrl\", \"Codec\" : \"Codec\", \"FileName\" : \"FileName\", \"Index\" : 2, \"MimeType\" : \"MimeType\" } ], \"ReadAtNativeFramerate\" : true, \"ETag\" : \"ETag\", \"TranscodingContainer\" : \"TranscodingContainer\", \"IgnoreDts\" : true, \"TranscodingUrl\" : \"TranscodingUrl\", \"Id\" : \"Id\", \"SupportsTranscoding\" : true, \"DefaultAudioStreamIndex\" : 6 } ], \"GenreItems\" : [ { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" }, { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" } ], \"OfficialRating\" : \"OfficialRating\", \"ProgramCount\" : 6, \"ProgramId\" : \"ProgramId\", \"Longitude\" : 6.683562403749608, \"FocalLength\" : 6.84685269835264, \"LockData\" : true, \"IsNews\" : true, \"ShutterSpeed\" : 7.260521264802104, \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"IsFolder\" : true, \"SeriesTimerId\" : \"SeriesTimerId\", \"SeriesId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"MediaStreams\" : [ { \"VideoRange\" : \"VideoRange\", \"CodecTimeBase\" : \"CodecTimeBase\", \"ColorSpace\" : \"ColorSpace\", \"Index\" : 3, \"ColorRange\" : \"ColorRange\", \"localizedForced\" : \"localizedForced\", \"BitDepth\" : 6, \"Channels\" : 6, \"Profile\" : \"Profile\", \"SupportsExternalStream\" : true, \"DeliveryUrl\" : \"DeliveryUrl\", \"localizedDefault\" : \"localizedDefault\", \"Codec\" : \"Codec\", \"ColorPrimaries\" : \"ColorPrimaries\", \"SampleRate\" : 0, \"IsTextSubtitleStream\" : true, \"Language\" : \"Language\", \"IsAnamorphic\" : true, \"Height\" : 3, \"NalLengthSize\" : \"NalLengthSize\", \"PixelFormat\" : \"PixelFormat\", \"RefFrames\" : 6, \"IsAVC\" : true, \"Width\" : 8, \"TimeBase\" : \"TimeBase\", \"ColorTransfer\" : \"ColorTransfer\", \"CodecTag\" : \"CodecTag\", \"IsDefault\" : true, \"Path\" : \"Path\", \"Comment\" : \"Comment\", \"IsExternalUrl\" : true, \"DisplayTitle\" : \"DisplayTitle\", \"IsForced\" : true, \"ChannelLayout\" : \"ChannelLayout\", \"PacketLength\" : 0, \"localizedUndefined\" : \"localizedUndefined\", \"Title\" : \"Title\", \"RealFrameRate\" : 7.05877, \"AspectRatio\" : \"AspectRatio\", \"AverageFrameRate\" : 6.778325, \"Score\" : 4, \"IsExternal\" : true, \"IsInterlaced\" : true, \"Level\" : 7.143538047012306, \"BitRate\" : 5 }, { \"VideoRange\" : \"VideoRange\", \"CodecTimeBase\" : \"CodecTimeBase\", \"ColorSpace\" : \"ColorSpace\", \"Index\" : 3, \"ColorRange\" : \"ColorRange\", \"localizedForced\" : \"localizedForced\", \"BitDepth\" : 6, \"Channels\" : 6, \"Profile\" : \"Profile\", \"SupportsExternalStream\" : true, \"DeliveryUrl\" : \"DeliveryUrl\", \"localizedDefault\" : \"localizedDefault\", \"Codec\" : \"Codec\", \"ColorPrimaries\" : \"ColorPrimaries\", \"SampleRate\" : 0, \"IsTextSubtitleStream\" : true, \"Language\" : \"Language\", \"IsAnamorphic\" : true, \"Height\" : 3, \"NalLengthSize\" : \"NalLengthSize\", \"PixelFormat\" : \"PixelFormat\", \"RefFrames\" : 6, \"IsAVC\" : true, \"Width\" : 8, \"TimeBase\" : \"TimeBase\", \"ColorTransfer\" : \"ColorTransfer\", \"CodecTag\" : \"CodecTag\", \"IsDefault\" : true, \"Path\" : \"Path\", \"Comment\" : \"Comment\", \"IsExternalUrl\" : true, \"DisplayTitle\" : \"DisplayTitle\", \"IsForced\" : true, \"ChannelLayout\" : \"ChannelLayout\", \"PacketLength\" : 0, \"localizedUndefined\" : \"localizedUndefined\", \"Title\" : \"Title\", \"RealFrameRate\" : 7.05877, \"AspectRatio\" : \"AspectRatio\", \"AverageFrameRate\" : 6.778325, \"Score\" : 4, \"IsExternal\" : true, \"IsInterlaced\" : true, \"Level\" : 7.143538047012306, \"BitRate\" : 5 } ], \"IsPlaceHolder\" : true, \"CanDownload\" : true, \"IsMovie\" : true, \"SeriesCount\" : 4, \"DateLastMediaAdded\" : \"2000-01-23T04:56:07.000+00:00\", \"ParentArtImageTag\" : \"ParentArtImageTag\", \"SeriesStudio\" : \"SeriesStudio\", \"IsLive\" : true, \"Width\" : 8, \"ExternalUrls\" : [ { \"Url\" : \"Url\", \"Name\" : \"Name\" }, { \"Url\" : \"Url\", \"Name\" : \"Name\" } ], \"RecursiveItemCount\" : 4, \"ParentId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Path\" : \"Path\", \"MusicVideoCount\" : 7, \"ScreenshotImageTags\" : [ \"ScreenshotImageTags\", \"ScreenshotImageTags\" ], \"EpisodeCount\" : 1, \"IsSeries\" : true, \"ProductionLocations\" : [ \"ProductionLocations\", \"ProductionLocations\" ], \"ParentPrimaryImageItemId\" : \"ParentPrimaryImageItemId\", \"EndDate\" : \"2000-01-23T04:56:07.000+00:00\", \"ParentThumbItemId\" : \"ParentThumbItemId\", \"SeriesPrimaryImageTag\" : \"SeriesPrimaryImageTag\", \"PreferredMetadataLanguage\" : \"PreferredMetadataLanguage\", \"Type\" : \"Type\", \"BackdropImageTags\" : [ \"BackdropImageTags\", \"BackdropImageTags\" ], \"ParentBackdropImageTags\" : [ \"ParentBackdropImageTags\", \"ParentBackdropImageTags\" ], \"AirsBeforeEpisodeNumber\" : 6, \"ChildCount\" : 3, \"Artists\" : [ \"Artists\", \"Artists\" ], \"RunTimeTicks\" : 1, \"AlbumPrimaryImageTag\" : \"AlbumPrimaryImageTag\", \"CumulativeRunTimeTicks\" : 1, \"SourceType\" : \"SourceType\", \"CanDelete\" : true, \"Album\" : \"Album\", \"DisplayPreferencesId\" : \"DisplayPreferencesId\", \"PlaylistItemId\" : \"PlaylistItemId\", \"Latitude\" : 9.965781217890562, \"SortName\" : \"SortName\", \"ArtistCount\" : 7, \"Name\" : \"Name\", \"StartDate\" : \"2000-01-23T04:56:07.000+00:00\", \"Container\" : \"Container\", \"ProductionYear\" : 0, \"SeriesName\" : \"SeriesName\", \"ParentArtItemId\" : \"ParentArtItemId\", \"AlbumId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"LocalTrailerCount\" : 9, \"SupportsSync\" : true, \"CompletionPercentage\" : 4.145608029883936, \"IndexNumber\" : 1, \"Genres\" : [ \"Genres\", \"Genres\" ], \"LockedFields\" : [ null, null ], \"SeasonId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"ParentPrimaryImageTag\" : \"ParentPrimaryImageTag\", \"ProviderIds\" : { \"key\" : \"ProviderIds\" }, \"RemoteTrailers\" : [ { \"Url\" : \"Url\", \"Name\" : \"Name\" }, { \"Url\" : \"Url\", \"Name\" : \"Name\" } ], \"MediaSourceCount\" : 8, \"CustomRating\" : \"CustomRating\", \"AirsAfterSeasonNumber\" : 0, \"AirDays\" : [ null, null ], \"ParentLogoItemId\" : \"ParentLogoItemId\", \"PartCount\" : 3, \"ChannelName\" : \"ChannelName\", \"EpisodeTitle\" : \"EpisodeTitle\", \"IsoSpeedRating\" : 5, \"CommunityRating\" : 2.027123, \"Software\" : \"Software\", \"Chapters\" : [ { \"StartPositionTicks\" : 9, \"ImageTag\" : \"ImageTag\", \"ImageDateModified\" : \"2000-01-23T04:56:07.000+00:00\", \"ImagePath\" : \"ImagePath\", \"Name\" : \"Name\" }, { \"StartPositionTicks\" : 9, \"ImageTag\" : \"ImageTag\", \"ImageDateModified\" : \"2000-01-23T04:56:07.000+00:00\", \"ImagePath\" : \"ImagePath\", \"Name\" : \"Name\" } ], \"SongCount\" : 9, \"Taglines\" : [ \"Taglines\", \"Taglines\" ], \"AirsBeforeSeasonNumber\" : 1, \"CameraModel\" : \"CameraModel\", \"PreferredMetadataCountryCode\" : \"PreferredMetadataCountryCode\", \"ChannelNumber\" : \"ChannelNumber\", \"UserData\" : { \"Played\" : true, \"UnplayedItemCount\" : 6, \"PlayedPercentage\" : 5.507386964179881, \"PlayCount\" : 0, \"Rating\" : 4.86315908102884, \"PlaybackPositionTicks\" : 7, \"LastPlayedDate\" : \"2000-01-23T04:56:07.000+00:00\", \"Likes\" : true, \"IsFavorite\" : true, \"ItemId\" : \"ItemId\", \"Key\" : \"Key\" }, \"TimerId\" : \"TimerId\", \"DateCreated\" : \"2000-01-23T04:56:07.000+00:00\", \"HasSubtitles\" : true, \"ParentThumbImageTag\" : \"ParentThumbImageTag\", \"IsSports\" : true, \"ChannelId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"ParentIndexNumber\" : 5, \"AlbumArtists\" : [ { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" }, { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" } ], \"ServerId\" : \"ServerId\", \"Number\" : \"Number\", \"AlbumCount\" : 5, \"IsRepeat\" : true, \"CollectionType\" : \"CollectionType\", \"Height\" : 7, \"PrimaryImageAspectRatio\" : 4.078845849666752, \"IsKids\" : true, \"DisplayOrder\" : \"DisplayOrder\", \"IsHD\" : true, \"EnableMediaSourceDisplay\" : true, \"SeriesThumbImageTag\" : \"SeriesThumbImageTag\", \"MovieCount\" : 3, \"People\" : [ { \"Role\" : \"Role\", \"Type\" : \"Type\", \"PrimaryImageTag\" : \"PrimaryImageTag\", \"Id\" : \"Id\", \"ImageBlurHashes\" : { \"Art\" : { \"key\" : \"Art\" }, \"Banner\" : { \"key\" : \"Banner\" }, \"Thumb\" : { \"key\" : \"Thumb\" }, \"BoxRear\" : { \"key\" : \"BoxRear\" }, \"Chapter\" : { \"key\" : \"Chapter\" }, \"Box\" : { \"key\" : \"Box\" }, \"Profile\" : { \"key\" : \"Profile\" }, \"Logo\" : { \"key\" : \"Logo\" }, \"Disc\" : { \"key\" : \"Disc\" }, \"Primary\" : { \"key\" : \"Primary\" }, \"Screenshot\" : { \"key\" : \"Screenshot\" }, \"Backdrop\" : { \"key\" : \"Backdrop\" }, \"Menu\" : { \"key\" : \"Menu\" } }, \"Name\" : \"Name\" }, { \"Role\" : \"Role\", \"Type\" : \"Type\", \"PrimaryImageTag\" : \"PrimaryImageTag\", \"Id\" : \"Id\", \"ImageBlurHashes\" : { \"Art\" : { \"key\" : \"Art\" }, \"Banner\" : { \"key\" : \"Banner\" }, \"Thumb\" : { \"key\" : \"Thumb\" }, \"BoxRear\" : { \"key\" : \"BoxRear\" }, \"Chapter\" : { \"key\" : \"Chapter\" }, \"Box\" : { \"key\" : \"Box\" }, \"Profile\" : { \"key\" : \"Profile\" }, \"Logo\" : { \"key\" : \"Logo\" }, \"Disc\" : { \"key\" : \"Disc\" }, \"Primary\" : { \"key\" : \"Primary\" }, \"Screenshot\" : { \"key\" : \"Screenshot\" }, \"Backdrop\" : { \"key\" : \"Backdrop\" }, \"Menu\" : { \"key\" : \"Menu\" } }, \"Name\" : \"Name\" } ], \"Overview\" : \"Overview\", \"SpecialFeatureCount\" : 0, \"AlbumArtist\" : \"AlbumArtist\", \"ImageTags\" : { \"key\" : \"ImageTags\" }, \"AspectRatio\" : \"AspectRatio\", \"TrailerCount\" : 9, \"OriginalTitle\" : \"OriginalTitle\", \"ForcedSortName\" : \"ForcedSortName\", \"IsPremiere\" : true, \"Altitude\" : 5.637376656633329 }, { \"SeasonName\" : \"SeasonName\", \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\", \"AirTime\" : \"AirTime\", \"CriticRating\" : 7.386282, \"Studios\" : [ { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" }, { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" } ], \"Aperture\" : 2.3021358869347655, \"CameraMake\" : \"CameraMake\", \"ChannelPrimaryImageTag\" : \"ChannelPrimaryImageTag\", \"ExtraType\" : \"ExtraType\", \"ParentBackdropItemId\" : \"ParentBackdropItemId\", \"Etag\" : \"Etag\", \"ExposureTime\" : 1.4894159098541704, \"ParentLogoImageTag\" : \"ParentLogoImageTag\", \"MediaType\" : \"MediaType\", \"Tags\" : [ \"Tags\", \"Tags\" ], \"ImageBlurHashes\" : { \"Art\" : { \"key\" : \"Art\" }, \"Banner\" : { \"key\" : \"Banner\" }, \"Thumb\" : { \"key\" : \"Thumb\" }, \"BoxRear\" : { \"key\" : \"BoxRear\" }, \"Chapter\" : { \"key\" : \"Chapter\" }, \"Box\" : { \"key\" : \"Box\" }, \"Profile\" : { \"key\" : \"Profile\" }, \"Logo\" : { \"key\" : \"Logo\" }, \"Disc\" : { \"key\" : \"Disc\" }, \"Primary\" : { \"key\" : \"Primary\" }, \"Screenshot\" : { \"key\" : \"Screenshot\" }, \"Backdrop\" : { \"key\" : \"Backdrop\" }, \"Menu\" : { \"key\" : \"Menu\" } }, \"Status\" : \"Status\", \"IndexNumberEnd\" : 4, \"ArtistItems\" : [ { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" }, { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" } ], \"MediaSources\" : [ { \"EncoderPath\" : \"EncoderPath\", \"RequiredHttpHeaders\" : { \"key\" : \"RequiredHttpHeaders\" }, \"RunTimeTicks\" : 7, \"MediaStreams\" : [ { \"VideoRange\" : \"VideoRange\", \"CodecTimeBase\" : \"CodecTimeBase\", \"ColorSpace\" : \"ColorSpace\", \"Index\" : 3, \"ColorRange\" : \"ColorRange\", \"localizedForced\" : \"localizedForced\", \"BitDepth\" : 6, \"Channels\" : 6, \"Profile\" : \"Profile\", \"SupportsExternalStream\" : true, \"DeliveryUrl\" : \"DeliveryUrl\", \"localizedDefault\" : \"localizedDefault\", \"Codec\" : \"Codec\", \"ColorPrimaries\" : \"ColorPrimaries\", \"SampleRate\" : 0, \"IsTextSubtitleStream\" : true, \"Language\" : \"Language\", \"IsAnamorphic\" : true, \"Height\" : 3, \"NalLengthSize\" : \"NalLengthSize\", \"PixelFormat\" : \"PixelFormat\", \"RefFrames\" : 6, \"IsAVC\" : true, \"Width\" : 8, \"TimeBase\" : \"TimeBase\", \"ColorTransfer\" : \"ColorTransfer\", \"CodecTag\" : \"CodecTag\", \"IsDefault\" : true, \"Path\" : \"Path\", \"Comment\" : \"Comment\", \"IsExternalUrl\" : true, \"DisplayTitle\" : \"DisplayTitle\", \"IsForced\" : true, \"ChannelLayout\" : \"ChannelLayout\", \"PacketLength\" : 0, \"localizedUndefined\" : \"localizedUndefined\", \"Title\" : \"Title\", \"RealFrameRate\" : 7.05877, \"AspectRatio\" : \"AspectRatio\", \"AverageFrameRate\" : 6.778325, \"Score\" : 4, \"IsExternal\" : true, \"IsInterlaced\" : true, \"Level\" : 7.143538047012306, \"BitRate\" : 5 }, { \"VideoRange\" : \"VideoRange\", \"CodecTimeBase\" : \"CodecTimeBase\", \"ColorSpace\" : \"ColorSpace\", \"Index\" : 3, \"ColorRange\" : \"ColorRange\", \"localizedForced\" : \"localizedForced\", \"BitDepth\" : 6, \"Channels\" : 6, \"Profile\" : \"Profile\", \"SupportsExternalStream\" : true, \"DeliveryUrl\" : \"DeliveryUrl\", \"localizedDefault\" : \"localizedDefault\", \"Codec\" : \"Codec\", \"ColorPrimaries\" : \"ColorPrimaries\", \"SampleRate\" : 0, \"IsTextSubtitleStream\" : true, \"Language\" : \"Language\", \"IsAnamorphic\" : true, \"Height\" : 3, \"NalLengthSize\" : \"NalLengthSize\", \"PixelFormat\" : \"PixelFormat\", \"RefFrames\" : 6, \"IsAVC\" : true, \"Width\" : 8, \"TimeBase\" : \"TimeBase\", \"ColorTransfer\" : \"ColorTransfer\", \"CodecTag\" : \"CodecTag\", \"IsDefault\" : true, \"Path\" : \"Path\", \"Comment\" : \"Comment\", \"IsExternalUrl\" : true, \"DisplayTitle\" : \"DisplayTitle\", \"IsForced\" : true, \"ChannelLayout\" : \"ChannelLayout\", \"PacketLength\" : 0, \"localizedUndefined\" : \"localizedUndefined\", \"Title\" : \"Title\", \"RealFrameRate\" : 7.05877, \"AspectRatio\" : \"AspectRatio\", \"AverageFrameRate\" : 6.778325, \"Score\" : 4, \"IsExternal\" : true, \"IsInterlaced\" : true, \"Level\" : 7.143538047012306, \"BitRate\" : 5 } ], \"Size\" : 3, \"BufferMs\" : 3, \"Name\" : \"Name\", \"RequiresOpening\" : true, \"SupportsDirectStream\" : true, \"RequiresClosing\" : true, \"Container\" : \"Container\", \"LiveStreamId\" : \"LiveStreamId\", \"RequiresLooping\" : true, \"DefaultSubtitleStreamIndex\" : 1, \"GenPtsInput\" : true, \"IsInfiniteStream\" : true, \"Path\" : \"Path\", \"IsRemote\" : true, \"IgnoreIndex\" : true, \"SupportsDirectPlay\" : true, \"TranscodingSubProtocol\" : \"TranscodingSubProtocol\", \"AnalyzeDurationMs\" : 9, \"Formats\" : [ \"Formats\", \"Formats\" ], \"Bitrate\" : 6, \"OpenToken\" : \"OpenToken\", \"SupportsProbing\" : true, \"MediaAttachments\" : [ { \"CodecTag\" : \"CodecTag\", \"Comment\" : \"Comment\", \"DeliveryUrl\" : \"DeliveryUrl\", \"Codec\" : \"Codec\", \"FileName\" : \"FileName\", \"Index\" : 2, \"MimeType\" : \"MimeType\" }, { \"CodecTag\" : \"CodecTag\", \"Comment\" : \"Comment\", \"DeliveryUrl\" : \"DeliveryUrl\", \"Codec\" : \"Codec\", \"FileName\" : \"FileName\", \"Index\" : 2, \"MimeType\" : \"MimeType\" } ], \"ReadAtNativeFramerate\" : true, \"ETag\" : \"ETag\", \"TranscodingContainer\" : \"TranscodingContainer\", \"IgnoreDts\" : true, \"TranscodingUrl\" : \"TranscodingUrl\", \"Id\" : \"Id\", \"SupportsTranscoding\" : true, \"DefaultAudioStreamIndex\" : 6 }, { \"EncoderPath\" : \"EncoderPath\", \"RequiredHttpHeaders\" : { \"key\" : \"RequiredHttpHeaders\" }, \"RunTimeTicks\" : 7, \"MediaStreams\" : [ { \"VideoRange\" : \"VideoRange\", \"CodecTimeBase\" : \"CodecTimeBase\", \"ColorSpace\" : \"ColorSpace\", \"Index\" : 3, \"ColorRange\" : \"ColorRange\", \"localizedForced\" : \"localizedForced\", \"BitDepth\" : 6, \"Channels\" : 6, \"Profile\" : \"Profile\", \"SupportsExternalStream\" : true, \"DeliveryUrl\" : \"DeliveryUrl\", \"localizedDefault\" : \"localizedDefault\", \"Codec\" : \"Codec\", \"ColorPrimaries\" : \"ColorPrimaries\", \"SampleRate\" : 0, \"IsTextSubtitleStream\" : true, \"Language\" : \"Language\", \"IsAnamorphic\" : true, \"Height\" : 3, \"NalLengthSize\" : \"NalLengthSize\", \"PixelFormat\" : \"PixelFormat\", \"RefFrames\" : 6, \"IsAVC\" : true, \"Width\" : 8, \"TimeBase\" : \"TimeBase\", \"ColorTransfer\" : \"ColorTransfer\", \"CodecTag\" : \"CodecTag\", \"IsDefault\" : true, \"Path\" : \"Path\", \"Comment\" : \"Comment\", \"IsExternalUrl\" : true, \"DisplayTitle\" : \"DisplayTitle\", \"IsForced\" : true, \"ChannelLayout\" : \"ChannelLayout\", \"PacketLength\" : 0, \"localizedUndefined\" : \"localizedUndefined\", \"Title\" : \"Title\", \"RealFrameRate\" : 7.05877, \"AspectRatio\" : \"AspectRatio\", \"AverageFrameRate\" : 6.778325, \"Score\" : 4, \"IsExternal\" : true, \"IsInterlaced\" : true, \"Level\" : 7.143538047012306, \"BitRate\" : 5 }, { \"VideoRange\" : \"VideoRange\", \"CodecTimeBase\" : \"CodecTimeBase\", \"ColorSpace\" : \"ColorSpace\", \"Index\" : 3, \"ColorRange\" : \"ColorRange\", \"localizedForced\" : \"localizedForced\", \"BitDepth\" : 6, \"Channels\" : 6, \"Profile\" : \"Profile\", \"SupportsExternalStream\" : true, \"DeliveryUrl\" : \"DeliveryUrl\", \"localizedDefault\" : \"localizedDefault\", \"Codec\" : \"Codec\", \"ColorPrimaries\" : \"ColorPrimaries\", \"SampleRate\" : 0, \"IsTextSubtitleStream\" : true, \"Language\" : \"Language\", \"IsAnamorphic\" : true, \"Height\" : 3, \"NalLengthSize\" : \"NalLengthSize\", \"PixelFormat\" : \"PixelFormat\", \"RefFrames\" : 6, \"IsAVC\" : true, \"Width\" : 8, \"TimeBase\" : \"TimeBase\", \"ColorTransfer\" : \"ColorTransfer\", \"CodecTag\" : \"CodecTag\", \"IsDefault\" : true, \"Path\" : \"Path\", \"Comment\" : \"Comment\", \"IsExternalUrl\" : true, \"DisplayTitle\" : \"DisplayTitle\", \"IsForced\" : true, \"ChannelLayout\" : \"ChannelLayout\", \"PacketLength\" : 0, \"localizedUndefined\" : \"localizedUndefined\", \"Title\" : \"Title\", \"RealFrameRate\" : 7.05877, \"AspectRatio\" : \"AspectRatio\", \"AverageFrameRate\" : 6.778325, \"Score\" : 4, \"IsExternal\" : true, \"IsInterlaced\" : true, \"Level\" : 7.143538047012306, \"BitRate\" : 5 } ], \"Size\" : 3, \"BufferMs\" : 3, \"Name\" : \"Name\", \"RequiresOpening\" : true, \"SupportsDirectStream\" : true, \"RequiresClosing\" : true, \"Container\" : \"Container\", \"LiveStreamId\" : \"LiveStreamId\", \"RequiresLooping\" : true, \"DefaultSubtitleStreamIndex\" : 1, \"GenPtsInput\" : true, \"IsInfiniteStream\" : true, \"Path\" : \"Path\", \"IsRemote\" : true, \"IgnoreIndex\" : true, \"SupportsDirectPlay\" : true, \"TranscodingSubProtocol\" : \"TranscodingSubProtocol\", \"AnalyzeDurationMs\" : 9, \"Formats\" : [ \"Formats\", \"Formats\" ], \"Bitrate\" : 6, \"OpenToken\" : \"OpenToken\", \"SupportsProbing\" : true, \"MediaAttachments\" : [ { \"CodecTag\" : \"CodecTag\", \"Comment\" : \"Comment\", \"DeliveryUrl\" : \"DeliveryUrl\", \"Codec\" : \"Codec\", \"FileName\" : \"FileName\", \"Index\" : 2, \"MimeType\" : \"MimeType\" }, { \"CodecTag\" : \"CodecTag\", \"Comment\" : \"Comment\", \"DeliveryUrl\" : \"DeliveryUrl\", \"Codec\" : \"Codec\", \"FileName\" : \"FileName\", \"Index\" : 2, \"MimeType\" : \"MimeType\" } ], \"ReadAtNativeFramerate\" : true, \"ETag\" : \"ETag\", \"TranscodingContainer\" : \"TranscodingContainer\", \"IgnoreDts\" : true, \"TranscodingUrl\" : \"TranscodingUrl\", \"Id\" : \"Id\", \"SupportsTranscoding\" : true, \"DefaultAudioStreamIndex\" : 6 } ], \"GenreItems\" : [ { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" }, { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" } ], \"OfficialRating\" : \"OfficialRating\", \"ProgramCount\" : 6, \"ProgramId\" : \"ProgramId\", \"Longitude\" : 6.683562403749608, \"FocalLength\" : 6.84685269835264, \"LockData\" : true, \"IsNews\" : true, \"ShutterSpeed\" : 7.260521264802104, \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"IsFolder\" : true, \"SeriesTimerId\" : \"SeriesTimerId\", \"SeriesId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"MediaStreams\" : [ { \"VideoRange\" : \"VideoRange\", \"CodecTimeBase\" : \"CodecTimeBase\", \"ColorSpace\" : \"ColorSpace\", \"Index\" : 3, \"ColorRange\" : \"ColorRange\", \"localizedForced\" : \"localizedForced\", \"BitDepth\" : 6, \"Channels\" : 6, \"Profile\" : \"Profile\", \"SupportsExternalStream\" : true, \"DeliveryUrl\" : \"DeliveryUrl\", \"localizedDefault\" : \"localizedDefault\", \"Codec\" : \"Codec\", \"ColorPrimaries\" : \"ColorPrimaries\", \"SampleRate\" : 0, \"IsTextSubtitleStream\" : true, \"Language\" : \"Language\", \"IsAnamorphic\" : true, \"Height\" : 3, \"NalLengthSize\" : \"NalLengthSize\", \"PixelFormat\" : \"PixelFormat\", \"RefFrames\" : 6, \"IsAVC\" : true, \"Width\" : 8, \"TimeBase\" : \"TimeBase\", \"ColorTransfer\" : \"ColorTransfer\", \"CodecTag\" : \"CodecTag\", \"IsDefault\" : true, \"Path\" : \"Path\", \"Comment\" : \"Comment\", \"IsExternalUrl\" : true, \"DisplayTitle\" : \"DisplayTitle\", \"IsForced\" : true, \"ChannelLayout\" : \"ChannelLayout\", \"PacketLength\" : 0, \"localizedUndefined\" : \"localizedUndefined\", \"Title\" : \"Title\", \"RealFrameRate\" : 7.05877, \"AspectRatio\" : \"AspectRatio\", \"AverageFrameRate\" : 6.778325, \"Score\" : 4, \"IsExternal\" : true, \"IsInterlaced\" : true, \"Level\" : 7.143538047012306, \"BitRate\" : 5 }, { \"VideoRange\" : \"VideoRange\", \"CodecTimeBase\" : \"CodecTimeBase\", \"ColorSpace\" : \"ColorSpace\", \"Index\" : 3, \"ColorRange\" : \"ColorRange\", \"localizedForced\" : \"localizedForced\", \"BitDepth\" : 6, \"Channels\" : 6, \"Profile\" : \"Profile\", \"SupportsExternalStream\" : true, \"DeliveryUrl\" : \"DeliveryUrl\", \"localizedDefault\" : \"localizedDefault\", \"Codec\" : \"Codec\", \"ColorPrimaries\" : \"ColorPrimaries\", \"SampleRate\" : 0, \"IsTextSubtitleStream\" : true, \"Language\" : \"Language\", \"IsAnamorphic\" : true, \"Height\" : 3, \"NalLengthSize\" : \"NalLengthSize\", \"PixelFormat\" : \"PixelFormat\", \"RefFrames\" : 6, \"IsAVC\" : true, \"Width\" : 8, \"TimeBase\" : \"TimeBase\", \"ColorTransfer\" : \"ColorTransfer\", \"CodecTag\" : \"CodecTag\", \"IsDefault\" : true, \"Path\" : \"Path\", \"Comment\" : \"Comment\", \"IsExternalUrl\" : true, \"DisplayTitle\" : \"DisplayTitle\", \"IsForced\" : true, \"ChannelLayout\" : \"ChannelLayout\", \"PacketLength\" : 0, \"localizedUndefined\" : \"localizedUndefined\", \"Title\" : \"Title\", \"RealFrameRate\" : 7.05877, \"AspectRatio\" : \"AspectRatio\", \"AverageFrameRate\" : 6.778325, \"Score\" : 4, \"IsExternal\" : true, \"IsInterlaced\" : true, \"Level\" : 7.143538047012306, \"BitRate\" : 5 } ], \"IsPlaceHolder\" : true, \"CanDownload\" : true, \"IsMovie\" : true, \"SeriesCount\" : 4, \"DateLastMediaAdded\" : \"2000-01-23T04:56:07.000+00:00\", \"ParentArtImageTag\" : \"ParentArtImageTag\", \"SeriesStudio\" : \"SeriesStudio\", \"IsLive\" : true, \"Width\" : 8, \"ExternalUrls\" : [ { \"Url\" : \"Url\", \"Name\" : \"Name\" }, { \"Url\" : \"Url\", \"Name\" : \"Name\" } ], \"RecursiveItemCount\" : 4, \"ParentId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Path\" : \"Path\", \"MusicVideoCount\" : 7, \"ScreenshotImageTags\" : [ \"ScreenshotImageTags\", \"ScreenshotImageTags\" ], \"EpisodeCount\" : 1, \"IsSeries\" : true, \"ProductionLocations\" : [ \"ProductionLocations\", \"ProductionLocations\" ], \"ParentPrimaryImageItemId\" : \"ParentPrimaryImageItemId\", \"EndDate\" : \"2000-01-23T04:56:07.000+00:00\", \"ParentThumbItemId\" : \"ParentThumbItemId\", \"SeriesPrimaryImageTag\" : \"SeriesPrimaryImageTag\", \"PreferredMetadataLanguage\" : \"PreferredMetadataLanguage\", \"Type\" : \"Type\", \"BackdropImageTags\" : [ \"BackdropImageTags\", \"BackdropImageTags\" ], \"ParentBackdropImageTags\" : [ \"ParentBackdropImageTags\", \"ParentBackdropImageTags\" ], \"AirsBeforeEpisodeNumber\" : 6, \"ChildCount\" : 3, \"Artists\" : [ \"Artists\", \"Artists\" ], \"RunTimeTicks\" : 1, \"AlbumPrimaryImageTag\" : \"AlbumPrimaryImageTag\", \"CumulativeRunTimeTicks\" : 1, \"SourceType\" : \"SourceType\", \"CanDelete\" : true, \"Album\" : \"Album\", \"DisplayPreferencesId\" : \"DisplayPreferencesId\", \"PlaylistItemId\" : \"PlaylistItemId\", \"Latitude\" : 9.965781217890562, \"SortName\" : \"SortName\", \"ArtistCount\" : 7, \"Name\" : \"Name\", \"StartDate\" : \"2000-01-23T04:56:07.000+00:00\", \"Container\" : \"Container\", \"ProductionYear\" : 0, \"SeriesName\" : \"SeriesName\", \"ParentArtItemId\" : \"ParentArtItemId\", \"AlbumId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"LocalTrailerCount\" : 9, \"SupportsSync\" : true, \"CompletionPercentage\" : 4.145608029883936, \"IndexNumber\" : 1, \"Genres\" : [ \"Genres\", \"Genres\" ], \"LockedFields\" : [ null, null ], \"SeasonId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"ParentPrimaryImageTag\" : \"ParentPrimaryImageTag\", \"ProviderIds\" : { \"key\" : \"ProviderIds\" }, \"RemoteTrailers\" : [ { \"Url\" : \"Url\", \"Name\" : \"Name\" }, { \"Url\" : \"Url\", \"Name\" : \"Name\" } ], \"MediaSourceCount\" : 8, \"CustomRating\" : \"CustomRating\", \"AirsAfterSeasonNumber\" : 0, \"AirDays\" : [ null, null ], \"ParentLogoItemId\" : \"ParentLogoItemId\", \"PartCount\" : 3, \"ChannelName\" : \"ChannelName\", \"EpisodeTitle\" : \"EpisodeTitle\", \"IsoSpeedRating\" : 5, \"CommunityRating\" : 2.027123, \"Software\" : \"Software\", \"Chapters\" : [ { \"StartPositionTicks\" : 9, \"ImageTag\" : \"ImageTag\", \"ImageDateModified\" : \"2000-01-23T04:56:07.000+00:00\", \"ImagePath\" : \"ImagePath\", \"Name\" : \"Name\" }, { \"StartPositionTicks\" : 9, \"ImageTag\" : \"ImageTag\", \"ImageDateModified\" : \"2000-01-23T04:56:07.000+00:00\", \"ImagePath\" : \"ImagePath\", \"Name\" : \"Name\" } ], \"SongCount\" : 9, \"Taglines\" : [ \"Taglines\", \"Taglines\" ], \"AirsBeforeSeasonNumber\" : 1, \"CameraModel\" : \"CameraModel\", \"PreferredMetadataCountryCode\" : \"PreferredMetadataCountryCode\", \"ChannelNumber\" : \"ChannelNumber\", \"UserData\" : { \"Played\" : true, \"UnplayedItemCount\" : 6, \"PlayedPercentage\" : 5.507386964179881, \"PlayCount\" : 0, \"Rating\" : 4.86315908102884, \"PlaybackPositionTicks\" : 7, \"LastPlayedDate\" : \"2000-01-23T04:56:07.000+00:00\", \"Likes\" : true, \"IsFavorite\" : true, \"ItemId\" : \"ItemId\", \"Key\" : \"Key\" }, \"TimerId\" : \"TimerId\", \"DateCreated\" : \"2000-01-23T04:56:07.000+00:00\", \"HasSubtitles\" : true, \"ParentThumbImageTag\" : \"ParentThumbImageTag\", \"IsSports\" : true, \"ChannelId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"ParentIndexNumber\" : 5, \"AlbumArtists\" : [ { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" }, { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" } ], \"ServerId\" : \"ServerId\", \"Number\" : \"Number\", \"AlbumCount\" : 5, \"IsRepeat\" : true, \"CollectionType\" : \"CollectionType\", \"Height\" : 7, \"PrimaryImageAspectRatio\" : 4.078845849666752, \"IsKids\" : true, \"DisplayOrder\" : \"DisplayOrder\", \"IsHD\" : true, \"EnableMediaSourceDisplay\" : true, \"SeriesThumbImageTag\" : \"SeriesThumbImageTag\", \"MovieCount\" : 3, \"People\" : [ { \"Role\" : \"Role\", \"Type\" : \"Type\", \"PrimaryImageTag\" : \"PrimaryImageTag\", \"Id\" : \"Id\", \"ImageBlurHashes\" : { \"Art\" : { \"key\" : \"Art\" }, \"Banner\" : { \"key\" : \"Banner\" }, \"Thumb\" : { \"key\" : \"Thumb\" }, \"BoxRear\" : { \"key\" : \"BoxRear\" }, \"Chapter\" : { \"key\" : \"Chapter\" }, \"Box\" : { \"key\" : \"Box\" }, \"Profile\" : { \"key\" : \"Profile\" }, \"Logo\" : { \"key\" : \"Logo\" }, \"Disc\" : { \"key\" : \"Disc\" }, \"Primary\" : { \"key\" : \"Primary\" }, \"Screenshot\" : { \"key\" : \"Screenshot\" }, \"Backdrop\" : { \"key\" : \"Backdrop\" }, \"Menu\" : { \"key\" : \"Menu\" } }, \"Name\" : \"Name\" }, { \"Role\" : \"Role\", \"Type\" : \"Type\", \"PrimaryImageTag\" : \"PrimaryImageTag\", \"Id\" : \"Id\", \"ImageBlurHashes\" : { \"Art\" : { \"key\" : \"Art\" }, \"Banner\" : { \"key\" : \"Banner\" }, \"Thumb\" : { \"key\" : \"Thumb\" }, \"BoxRear\" : { \"key\" : \"BoxRear\" }, \"Chapter\" : { \"key\" : \"Chapter\" }, \"Box\" : { \"key\" : \"Box\" }, \"Profile\" : { \"key\" : \"Profile\" }, \"Logo\" : { \"key\" : \"Logo\" }, \"Disc\" : { \"key\" : \"Disc\" }, \"Primary\" : { \"key\" : \"Primary\" }, \"Screenshot\" : { \"key\" : \"Screenshot\" }, \"Backdrop\" : { \"key\" : \"Backdrop\" }, \"Menu\" : { \"key\" : \"Menu\" } }, \"Name\" : \"Name\" } ], \"Overview\" : \"Overview\", \"SpecialFeatureCount\" : 0, \"AlbumArtist\" : \"AlbumArtist\", \"ImageTags\" : { \"key\" : \"ImageTags\" }, \"AspectRatio\" : \"AspectRatio\", \"TrailerCount\" : 9, \"OriginalTitle\" : \"OriginalTitle\", \"ForcedSortName\" : \"ForcedSortName\", \"IsPremiere\" : true, \"Altitude\" : 5.637376656633329 } ] }";
                    ApiUtil.setExampleResponse(request, "application/json; profile="CamelCase"", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json; profile="PascalCase""))) {
                    String exampleString = "{ \"TotalRecordCount\" : 3, \"StartIndex\" : 4, \"Items\" : [ { \"SeasonName\" : \"SeasonName\", \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\", \"AirTime\" : \"AirTime\", \"CriticRating\" : 7.386282, \"Studios\" : [ { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" }, { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" } ], \"Aperture\" : 2.3021358869347655, \"CameraMake\" : \"CameraMake\", \"ChannelPrimaryImageTag\" : \"ChannelPrimaryImageTag\", \"ExtraType\" : \"ExtraType\", \"ParentBackdropItemId\" : \"ParentBackdropItemId\", \"Etag\" : \"Etag\", \"ExposureTime\" : 1.4894159098541704, \"ParentLogoImageTag\" : \"ParentLogoImageTag\", \"MediaType\" : \"MediaType\", \"Tags\" : [ \"Tags\", \"Tags\" ], \"ImageBlurHashes\" : { \"Art\" : { \"key\" : \"Art\" }, \"Banner\" : { \"key\" : \"Banner\" }, \"Thumb\" : { \"key\" : \"Thumb\" }, \"BoxRear\" : { \"key\" : \"BoxRear\" }, \"Chapter\" : { \"key\" : \"Chapter\" }, \"Box\" : { \"key\" : \"Box\" }, \"Profile\" : { \"key\" : \"Profile\" }, \"Logo\" : { \"key\" : \"Logo\" }, \"Disc\" : { \"key\" : \"Disc\" }, \"Primary\" : { \"key\" : \"Primary\" }, \"Screenshot\" : { \"key\" : \"Screenshot\" }, \"Backdrop\" : { \"key\" : \"Backdrop\" }, \"Menu\" : { \"key\" : \"Menu\" } }, \"Status\" : \"Status\", \"IndexNumberEnd\" : 4, \"ArtistItems\" : [ { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" }, { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" } ], \"MediaSources\" : [ { \"EncoderPath\" : \"EncoderPath\", \"RequiredHttpHeaders\" : { \"key\" : \"RequiredHttpHeaders\" }, \"RunTimeTicks\" : 7, \"MediaStreams\" : [ { \"VideoRange\" : \"VideoRange\", \"CodecTimeBase\" : \"CodecTimeBase\", \"ColorSpace\" : \"ColorSpace\", \"Index\" : 3, \"ColorRange\" : \"ColorRange\", \"localizedForced\" : \"localizedForced\", \"BitDepth\" : 6, \"Channels\" : 6, \"Profile\" : \"Profile\", \"SupportsExternalStream\" : true, \"DeliveryUrl\" : \"DeliveryUrl\", \"localizedDefault\" : \"localizedDefault\", \"Codec\" : \"Codec\", \"ColorPrimaries\" : \"ColorPrimaries\", \"SampleRate\" : 0, \"IsTextSubtitleStream\" : true, \"Language\" : \"Language\", \"IsAnamorphic\" : true, \"Height\" : 3, \"NalLengthSize\" : \"NalLengthSize\", \"PixelFormat\" : \"PixelFormat\", \"RefFrames\" : 6, \"IsAVC\" : true, \"Width\" : 8, \"TimeBase\" : \"TimeBase\", \"ColorTransfer\" : \"ColorTransfer\", \"CodecTag\" : \"CodecTag\", \"IsDefault\" : true, \"Path\" : \"Path\", \"Comment\" : \"Comment\", \"IsExternalUrl\" : true, \"DisplayTitle\" : \"DisplayTitle\", \"IsForced\" : true, \"ChannelLayout\" : \"ChannelLayout\", \"PacketLength\" : 0, \"localizedUndefined\" : \"localizedUndefined\", \"Title\" : \"Title\", \"RealFrameRate\" : 7.05877, \"AspectRatio\" : \"AspectRatio\", \"AverageFrameRate\" : 6.778325, \"Score\" : 4, \"IsExternal\" : true, \"IsInterlaced\" : true, \"Level\" : 7.143538047012306, \"BitRate\" : 5 }, { \"VideoRange\" : \"VideoRange\", \"CodecTimeBase\" : \"CodecTimeBase\", \"ColorSpace\" : \"ColorSpace\", \"Index\" : 3, \"ColorRange\" : \"ColorRange\", \"localizedForced\" : \"localizedForced\", \"BitDepth\" : 6, \"Channels\" : 6, \"Profile\" : \"Profile\", \"SupportsExternalStream\" : true, \"DeliveryUrl\" : \"DeliveryUrl\", \"localizedDefault\" : \"localizedDefault\", \"Codec\" : \"Codec\", \"ColorPrimaries\" : \"ColorPrimaries\", \"SampleRate\" : 0, \"IsTextSubtitleStream\" : true, \"Language\" : \"Language\", \"IsAnamorphic\" : true, \"Height\" : 3, \"NalLengthSize\" : \"NalLengthSize\", \"PixelFormat\" : \"PixelFormat\", \"RefFrames\" : 6, \"IsAVC\" : true, \"Width\" : 8, \"TimeBase\" : \"TimeBase\", \"ColorTransfer\" : \"ColorTransfer\", \"CodecTag\" : \"CodecTag\", \"IsDefault\" : true, \"Path\" : \"Path\", \"Comment\" : \"Comment\", \"IsExternalUrl\" : true, \"DisplayTitle\" : \"DisplayTitle\", \"IsForced\" : true, \"ChannelLayout\" : \"ChannelLayout\", \"PacketLength\" : 0, \"localizedUndefined\" : \"localizedUndefined\", \"Title\" : \"Title\", \"RealFrameRate\" : 7.05877, \"AspectRatio\" : \"AspectRatio\", \"AverageFrameRate\" : 6.778325, \"Score\" : 4, \"IsExternal\" : true, \"IsInterlaced\" : true, \"Level\" : 7.143538047012306, \"BitRate\" : 5 } ], \"Size\" : 3, \"BufferMs\" : 3, \"Name\" : \"Name\", \"RequiresOpening\" : true, \"SupportsDirectStream\" : true, \"RequiresClosing\" : true, \"Container\" : \"Container\", \"LiveStreamId\" : \"LiveStreamId\", \"RequiresLooping\" : true, \"DefaultSubtitleStreamIndex\" : 1, \"GenPtsInput\" : true, \"IsInfiniteStream\" : true, \"Path\" : \"Path\", \"IsRemote\" : true, \"IgnoreIndex\" : true, \"SupportsDirectPlay\" : true, \"TranscodingSubProtocol\" : \"TranscodingSubProtocol\", \"AnalyzeDurationMs\" : 9, \"Formats\" : [ \"Formats\", \"Formats\" ], \"Bitrate\" : 6, \"OpenToken\" : \"OpenToken\", \"SupportsProbing\" : true, \"MediaAttachments\" : [ { \"CodecTag\" : \"CodecTag\", \"Comment\" : \"Comment\", \"DeliveryUrl\" : \"DeliveryUrl\", \"Codec\" : \"Codec\", \"FileName\" : \"FileName\", \"Index\" : 2, \"MimeType\" : \"MimeType\" }, { \"CodecTag\" : \"CodecTag\", \"Comment\" : \"Comment\", \"DeliveryUrl\" : \"DeliveryUrl\", \"Codec\" : \"Codec\", \"FileName\" : \"FileName\", \"Index\" : 2, \"MimeType\" : \"MimeType\" } ], \"ReadAtNativeFramerate\" : true, \"ETag\" : \"ETag\", \"TranscodingContainer\" : \"TranscodingContainer\", \"IgnoreDts\" : true, \"TranscodingUrl\" : \"TranscodingUrl\", \"Id\" : \"Id\", \"SupportsTranscoding\" : true, \"DefaultAudioStreamIndex\" : 6 }, { \"EncoderPath\" : \"EncoderPath\", \"RequiredHttpHeaders\" : { \"key\" : \"RequiredHttpHeaders\" }, \"RunTimeTicks\" : 7, \"MediaStreams\" : [ { \"VideoRange\" : \"VideoRange\", \"CodecTimeBase\" : \"CodecTimeBase\", \"ColorSpace\" : \"ColorSpace\", \"Index\" : 3, \"ColorRange\" : \"ColorRange\", \"localizedForced\" : \"localizedForced\", \"BitDepth\" : 6, \"Channels\" : 6, \"Profile\" : \"Profile\", \"SupportsExternalStream\" : true, \"DeliveryUrl\" : \"DeliveryUrl\", \"localizedDefault\" : \"localizedDefault\", \"Codec\" : \"Codec\", \"ColorPrimaries\" : \"ColorPrimaries\", \"SampleRate\" : 0, \"IsTextSubtitleStream\" : true, \"Language\" : \"Language\", \"IsAnamorphic\" : true, \"Height\" : 3, \"NalLengthSize\" : \"NalLengthSize\", \"PixelFormat\" : \"PixelFormat\", \"RefFrames\" : 6, \"IsAVC\" : true, \"Width\" : 8, \"TimeBase\" : \"TimeBase\", \"ColorTransfer\" : \"ColorTransfer\", \"CodecTag\" : \"CodecTag\", \"IsDefault\" : true, \"Path\" : \"Path\", \"Comment\" : \"Comment\", \"IsExternalUrl\" : true, \"DisplayTitle\" : \"DisplayTitle\", \"IsForced\" : true, \"ChannelLayout\" : \"ChannelLayout\", \"PacketLength\" : 0, \"localizedUndefined\" : \"localizedUndefined\", \"Title\" : \"Title\", \"RealFrameRate\" : 7.05877, \"AspectRatio\" : \"AspectRatio\", \"AverageFrameRate\" : 6.778325, \"Score\" : 4, \"IsExternal\" : true, \"IsInterlaced\" : true, \"Level\" : 7.143538047012306, \"BitRate\" : 5 }, { \"VideoRange\" : \"VideoRange\", \"CodecTimeBase\" : \"CodecTimeBase\", \"ColorSpace\" : \"ColorSpace\", \"Index\" : 3, \"ColorRange\" : \"ColorRange\", \"localizedForced\" : \"localizedForced\", \"BitDepth\" : 6, \"Channels\" : 6, \"Profile\" : \"Profile\", \"SupportsExternalStream\" : true, \"DeliveryUrl\" : \"DeliveryUrl\", \"localizedDefault\" : \"localizedDefault\", \"Codec\" : \"Codec\", \"ColorPrimaries\" : \"ColorPrimaries\", \"SampleRate\" : 0, \"IsTextSubtitleStream\" : true, \"Language\" : \"Language\", \"IsAnamorphic\" : true, \"Height\" : 3, \"NalLengthSize\" : \"NalLengthSize\", \"PixelFormat\" : \"PixelFormat\", \"RefFrames\" : 6, \"IsAVC\" : true, \"Width\" : 8, \"TimeBase\" : \"TimeBase\", \"ColorTransfer\" : \"ColorTransfer\", \"CodecTag\" : \"CodecTag\", \"IsDefault\" : true, \"Path\" : \"Path\", \"Comment\" : \"Comment\", \"IsExternalUrl\" : true, \"DisplayTitle\" : \"DisplayTitle\", \"IsForced\" : true, \"ChannelLayout\" : \"ChannelLayout\", \"PacketLength\" : 0, \"localizedUndefined\" : \"localizedUndefined\", \"Title\" : \"Title\", \"RealFrameRate\" : 7.05877, \"AspectRatio\" : \"AspectRatio\", \"AverageFrameRate\" : 6.778325, \"Score\" : 4, \"IsExternal\" : true, \"IsInterlaced\" : true, \"Level\" : 7.143538047012306, \"BitRate\" : 5 } ], \"Size\" : 3, \"BufferMs\" : 3, \"Name\" : \"Name\", \"RequiresOpening\" : true, \"SupportsDirectStream\" : true, \"RequiresClosing\" : true, \"Container\" : \"Container\", \"LiveStreamId\" : \"LiveStreamId\", \"RequiresLooping\" : true, \"DefaultSubtitleStreamIndex\" : 1, \"GenPtsInput\" : true, \"IsInfiniteStream\" : true, \"Path\" : \"Path\", \"IsRemote\" : true, \"IgnoreIndex\" : true, \"SupportsDirectPlay\" : true, \"TranscodingSubProtocol\" : \"TranscodingSubProtocol\", \"AnalyzeDurationMs\" : 9, \"Formats\" : [ \"Formats\", \"Formats\" ], \"Bitrate\" : 6, \"OpenToken\" : \"OpenToken\", \"SupportsProbing\" : true, \"MediaAttachments\" : [ { \"CodecTag\" : \"CodecTag\", \"Comment\" : \"Comment\", \"DeliveryUrl\" : \"DeliveryUrl\", \"Codec\" : \"Codec\", \"FileName\" : \"FileName\", \"Index\" : 2, \"MimeType\" : \"MimeType\" }, { \"CodecTag\" : \"CodecTag\", \"Comment\" : \"Comment\", \"DeliveryUrl\" : \"DeliveryUrl\", \"Codec\" : \"Codec\", \"FileName\" : \"FileName\", \"Index\" : 2, \"MimeType\" : \"MimeType\" } ], \"ReadAtNativeFramerate\" : true, \"ETag\" : \"ETag\", \"TranscodingContainer\" : \"TranscodingContainer\", \"IgnoreDts\" : true, \"TranscodingUrl\" : \"TranscodingUrl\", \"Id\" : \"Id\", \"SupportsTranscoding\" : true, \"DefaultAudioStreamIndex\" : 6 } ], \"GenreItems\" : [ { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" }, { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" } ], \"OfficialRating\" : \"OfficialRating\", \"ProgramCount\" : 6, \"ProgramId\" : \"ProgramId\", \"Longitude\" : 6.683562403749608, \"FocalLength\" : 6.84685269835264, \"LockData\" : true, \"IsNews\" : true, \"ShutterSpeed\" : 7.260521264802104, \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"IsFolder\" : true, \"SeriesTimerId\" : \"SeriesTimerId\", \"SeriesId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"MediaStreams\" : [ { \"VideoRange\" : \"VideoRange\", \"CodecTimeBase\" : \"CodecTimeBase\", \"ColorSpace\" : \"ColorSpace\", \"Index\" : 3, \"ColorRange\" : \"ColorRange\", \"localizedForced\" : \"localizedForced\", \"BitDepth\" : 6, \"Channels\" : 6, \"Profile\" : \"Profile\", \"SupportsExternalStream\" : true, \"DeliveryUrl\" : \"DeliveryUrl\", \"localizedDefault\" : \"localizedDefault\", \"Codec\" : \"Codec\", \"ColorPrimaries\" : \"ColorPrimaries\", \"SampleRate\" : 0, \"IsTextSubtitleStream\" : true, \"Language\" : \"Language\", \"IsAnamorphic\" : true, \"Height\" : 3, \"NalLengthSize\" : \"NalLengthSize\", \"PixelFormat\" : \"PixelFormat\", \"RefFrames\" : 6, \"IsAVC\" : true, \"Width\" : 8, \"TimeBase\" : \"TimeBase\", \"ColorTransfer\" : \"ColorTransfer\", \"CodecTag\" : \"CodecTag\", \"IsDefault\" : true, \"Path\" : \"Path\", \"Comment\" : \"Comment\", \"IsExternalUrl\" : true, \"DisplayTitle\" : \"DisplayTitle\", \"IsForced\" : true, \"ChannelLayout\" : \"ChannelLayout\", \"PacketLength\" : 0, \"localizedUndefined\" : \"localizedUndefined\", \"Title\" : \"Title\", \"RealFrameRate\" : 7.05877, \"AspectRatio\" : \"AspectRatio\", \"AverageFrameRate\" : 6.778325, \"Score\" : 4, \"IsExternal\" : true, \"IsInterlaced\" : true, \"Level\" : 7.143538047012306, \"BitRate\" : 5 }, { \"VideoRange\" : \"VideoRange\", \"CodecTimeBase\" : \"CodecTimeBase\", \"ColorSpace\" : \"ColorSpace\", \"Index\" : 3, \"ColorRange\" : \"ColorRange\", \"localizedForced\" : \"localizedForced\", \"BitDepth\" : 6, \"Channels\" : 6, \"Profile\" : \"Profile\", \"SupportsExternalStream\" : true, \"DeliveryUrl\" : \"DeliveryUrl\", \"localizedDefault\" : \"localizedDefault\", \"Codec\" : \"Codec\", \"ColorPrimaries\" : \"ColorPrimaries\", \"SampleRate\" : 0, \"IsTextSubtitleStream\" : true, \"Language\" : \"Language\", \"IsAnamorphic\" : true, \"Height\" : 3, \"NalLengthSize\" : \"NalLengthSize\", \"PixelFormat\" : \"PixelFormat\", \"RefFrames\" : 6, \"IsAVC\" : true, \"Width\" : 8, \"TimeBase\" : \"TimeBase\", \"ColorTransfer\" : \"ColorTransfer\", \"CodecTag\" : \"CodecTag\", \"IsDefault\" : true, \"Path\" : \"Path\", \"Comment\" : \"Comment\", \"IsExternalUrl\" : true, \"DisplayTitle\" : \"DisplayTitle\", \"IsForced\" : true, \"ChannelLayout\" : \"ChannelLayout\", \"PacketLength\" : 0, \"localizedUndefined\" : \"localizedUndefined\", \"Title\" : \"Title\", \"RealFrameRate\" : 7.05877, \"AspectRatio\" : \"AspectRatio\", \"AverageFrameRate\" : 6.778325, \"Score\" : 4, \"IsExternal\" : true, \"IsInterlaced\" : true, \"Level\" : 7.143538047012306, \"BitRate\" : 5 } ], \"IsPlaceHolder\" : true, \"CanDownload\" : true, \"IsMovie\" : true, \"SeriesCount\" : 4, \"DateLastMediaAdded\" : \"2000-01-23T04:56:07.000+00:00\", \"ParentArtImageTag\" : \"ParentArtImageTag\", \"SeriesStudio\" : \"SeriesStudio\", \"IsLive\" : true, \"Width\" : 8, \"ExternalUrls\" : [ { \"Url\" : \"Url\", \"Name\" : \"Name\" }, { \"Url\" : \"Url\", \"Name\" : \"Name\" } ], \"RecursiveItemCount\" : 4, \"ParentId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Path\" : \"Path\", \"MusicVideoCount\" : 7, \"ScreenshotImageTags\" : [ \"ScreenshotImageTags\", \"ScreenshotImageTags\" ], \"EpisodeCount\" : 1, \"IsSeries\" : true, \"ProductionLocations\" : [ \"ProductionLocations\", \"ProductionLocations\" ], \"ParentPrimaryImageItemId\" : \"ParentPrimaryImageItemId\", \"EndDate\" : \"2000-01-23T04:56:07.000+00:00\", \"ParentThumbItemId\" : \"ParentThumbItemId\", \"SeriesPrimaryImageTag\" : \"SeriesPrimaryImageTag\", \"PreferredMetadataLanguage\" : \"PreferredMetadataLanguage\", \"Type\" : \"Type\", \"BackdropImageTags\" : [ \"BackdropImageTags\", \"BackdropImageTags\" ], \"ParentBackdropImageTags\" : [ \"ParentBackdropImageTags\", \"ParentBackdropImageTags\" ], \"AirsBeforeEpisodeNumber\" : 6, \"ChildCount\" : 3, \"Artists\" : [ \"Artists\", \"Artists\" ], \"RunTimeTicks\" : 1, \"AlbumPrimaryImageTag\" : \"AlbumPrimaryImageTag\", \"CumulativeRunTimeTicks\" : 1, \"SourceType\" : \"SourceType\", \"CanDelete\" : true, \"Album\" : \"Album\", \"DisplayPreferencesId\" : \"DisplayPreferencesId\", \"PlaylistItemId\" : \"PlaylistItemId\", \"Latitude\" : 9.965781217890562, \"SortName\" : \"SortName\", \"ArtistCount\" : 7, \"Name\" : \"Name\", \"StartDate\" : \"2000-01-23T04:56:07.000+00:00\", \"Container\" : \"Container\", \"ProductionYear\" : 0, \"SeriesName\" : \"SeriesName\", \"ParentArtItemId\" : \"ParentArtItemId\", \"AlbumId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"LocalTrailerCount\" : 9, \"SupportsSync\" : true, \"CompletionPercentage\" : 4.145608029883936, \"IndexNumber\" : 1, \"Genres\" : [ \"Genres\", \"Genres\" ], \"LockedFields\" : [ null, null ], \"SeasonId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"ParentPrimaryImageTag\" : \"ParentPrimaryImageTag\", \"ProviderIds\" : { \"key\" : \"ProviderIds\" }, \"RemoteTrailers\" : [ { \"Url\" : \"Url\", \"Name\" : \"Name\" }, { \"Url\" : \"Url\", \"Name\" : \"Name\" } ], \"MediaSourceCount\" : 8, \"CustomRating\" : \"CustomRating\", \"AirsAfterSeasonNumber\" : 0, \"AirDays\" : [ null, null ], \"ParentLogoItemId\" : \"ParentLogoItemId\", \"PartCount\" : 3, \"ChannelName\" : \"ChannelName\", \"EpisodeTitle\" : \"EpisodeTitle\", \"IsoSpeedRating\" : 5, \"CommunityRating\" : 2.027123, \"Software\" : \"Software\", \"Chapters\" : [ { \"StartPositionTicks\" : 9, \"ImageTag\" : \"ImageTag\", \"ImageDateModified\" : \"2000-01-23T04:56:07.000+00:00\", \"ImagePath\" : \"ImagePath\", \"Name\" : \"Name\" }, { \"StartPositionTicks\" : 9, \"ImageTag\" : \"ImageTag\", \"ImageDateModified\" : \"2000-01-23T04:56:07.000+00:00\", \"ImagePath\" : \"ImagePath\", \"Name\" : \"Name\" } ], \"SongCount\" : 9, \"Taglines\" : [ \"Taglines\", \"Taglines\" ], \"AirsBeforeSeasonNumber\" : 1, \"CameraModel\" : \"CameraModel\", \"PreferredMetadataCountryCode\" : \"PreferredMetadataCountryCode\", \"ChannelNumber\" : \"ChannelNumber\", \"UserData\" : { \"Played\" : true, \"UnplayedItemCount\" : 6, \"PlayedPercentage\" : 5.507386964179881, \"PlayCount\" : 0, \"Rating\" : 4.86315908102884, \"PlaybackPositionTicks\" : 7, \"LastPlayedDate\" : \"2000-01-23T04:56:07.000+00:00\", \"Likes\" : true, \"IsFavorite\" : true, \"ItemId\" : \"ItemId\", \"Key\" : \"Key\" }, \"TimerId\" : \"TimerId\", \"DateCreated\" : \"2000-01-23T04:56:07.000+00:00\", \"HasSubtitles\" : true, \"ParentThumbImageTag\" : \"ParentThumbImageTag\", \"IsSports\" : true, \"ChannelId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"ParentIndexNumber\" : 5, \"AlbumArtists\" : [ { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" }, { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" } ], \"ServerId\" : \"ServerId\", \"Number\" : \"Number\", \"AlbumCount\" : 5, \"IsRepeat\" : true, \"CollectionType\" : \"CollectionType\", \"Height\" : 7, \"PrimaryImageAspectRatio\" : 4.078845849666752, \"IsKids\" : true, \"DisplayOrder\" : \"DisplayOrder\", \"IsHD\" : true, \"EnableMediaSourceDisplay\" : true, \"SeriesThumbImageTag\" : \"SeriesThumbImageTag\", \"MovieCount\" : 3, \"People\" : [ { \"Role\" : \"Role\", \"Type\" : \"Type\", \"PrimaryImageTag\" : \"PrimaryImageTag\", \"Id\" : \"Id\", \"ImageBlurHashes\" : { \"Art\" : { \"key\" : \"Art\" }, \"Banner\" : { \"key\" : \"Banner\" }, \"Thumb\" : { \"key\" : \"Thumb\" }, \"BoxRear\" : { \"key\" : \"BoxRear\" }, \"Chapter\" : { \"key\" : \"Chapter\" }, \"Box\" : { \"key\" : \"Box\" }, \"Profile\" : { \"key\" : \"Profile\" }, \"Logo\" : { \"key\" : \"Logo\" }, \"Disc\" : { \"key\" : \"Disc\" }, \"Primary\" : { \"key\" : \"Primary\" }, \"Screenshot\" : { \"key\" : \"Screenshot\" }, \"Backdrop\" : { \"key\" : \"Backdrop\" }, \"Menu\" : { \"key\" : \"Menu\" } }, \"Name\" : \"Name\" }, { \"Role\" : \"Role\", \"Type\" : \"Type\", \"PrimaryImageTag\" : \"PrimaryImageTag\", \"Id\" : \"Id\", \"ImageBlurHashes\" : { \"Art\" : { \"key\" : \"Art\" }, \"Banner\" : { \"key\" : \"Banner\" }, \"Thumb\" : { \"key\" : \"Thumb\" }, \"BoxRear\" : { \"key\" : \"BoxRear\" }, \"Chapter\" : { \"key\" : \"Chapter\" }, \"Box\" : { \"key\" : \"Box\" }, \"Profile\" : { \"key\" : \"Profile\" }, \"Logo\" : { \"key\" : \"Logo\" }, \"Disc\" : { \"key\" : \"Disc\" }, \"Primary\" : { \"key\" : \"Primary\" }, \"Screenshot\" : { \"key\" : \"Screenshot\" }, \"Backdrop\" : { \"key\" : \"Backdrop\" }, \"Menu\" : { \"key\" : \"Menu\" } }, \"Name\" : \"Name\" } ], \"Overview\" : \"Overview\", \"SpecialFeatureCount\" : 0, \"AlbumArtist\" : \"AlbumArtist\", \"ImageTags\" : { \"key\" : \"ImageTags\" }, \"AspectRatio\" : \"AspectRatio\", \"TrailerCount\" : 9, \"OriginalTitle\" : \"OriginalTitle\", \"ForcedSortName\" : \"ForcedSortName\", \"IsPremiere\" : true, \"Altitude\" : 5.637376656633329 }, { \"SeasonName\" : \"SeasonName\", \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\", \"AirTime\" : \"AirTime\", \"CriticRating\" : 7.386282, \"Studios\" : [ { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" }, { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" } ], \"Aperture\" : 2.3021358869347655, \"CameraMake\" : \"CameraMake\", \"ChannelPrimaryImageTag\" : \"ChannelPrimaryImageTag\", \"ExtraType\" : \"ExtraType\", \"ParentBackdropItemId\" : \"ParentBackdropItemId\", \"Etag\" : \"Etag\", \"ExposureTime\" : 1.4894159098541704, \"ParentLogoImageTag\" : \"ParentLogoImageTag\", \"MediaType\" : \"MediaType\", \"Tags\" : [ \"Tags\", \"Tags\" ], \"ImageBlurHashes\" : { \"Art\" : { \"key\" : \"Art\" }, \"Banner\" : { \"key\" : \"Banner\" }, \"Thumb\" : { \"key\" : \"Thumb\" }, \"BoxRear\" : { \"key\" : \"BoxRear\" }, \"Chapter\" : { \"key\" : \"Chapter\" }, \"Box\" : { \"key\" : \"Box\" }, \"Profile\" : { \"key\" : \"Profile\" }, \"Logo\" : { \"key\" : \"Logo\" }, \"Disc\" : { \"key\" : \"Disc\" }, \"Primary\" : { \"key\" : \"Primary\" }, \"Screenshot\" : { \"key\" : \"Screenshot\" }, \"Backdrop\" : { \"key\" : \"Backdrop\" }, \"Menu\" : { \"key\" : \"Menu\" } }, \"Status\" : \"Status\", \"IndexNumberEnd\" : 4, \"ArtistItems\" : [ { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" }, { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" } ], \"MediaSources\" : [ { \"EncoderPath\" : \"EncoderPath\", \"RequiredHttpHeaders\" : { \"key\" : \"RequiredHttpHeaders\" }, \"RunTimeTicks\" : 7, \"MediaStreams\" : [ { \"VideoRange\" : \"VideoRange\", \"CodecTimeBase\" : \"CodecTimeBase\", \"ColorSpace\" : \"ColorSpace\", \"Index\" : 3, \"ColorRange\" : \"ColorRange\", \"localizedForced\" : \"localizedForced\", \"BitDepth\" : 6, \"Channels\" : 6, \"Profile\" : \"Profile\", \"SupportsExternalStream\" : true, \"DeliveryUrl\" : \"DeliveryUrl\", \"localizedDefault\" : \"localizedDefault\", \"Codec\" : \"Codec\", \"ColorPrimaries\" : \"ColorPrimaries\", \"SampleRate\" : 0, \"IsTextSubtitleStream\" : true, \"Language\" : \"Language\", \"IsAnamorphic\" : true, \"Height\" : 3, \"NalLengthSize\" : \"NalLengthSize\", \"PixelFormat\" : \"PixelFormat\", \"RefFrames\" : 6, \"IsAVC\" : true, \"Width\" : 8, \"TimeBase\" : \"TimeBase\", \"ColorTransfer\" : \"ColorTransfer\", \"CodecTag\" : \"CodecTag\", \"IsDefault\" : true, \"Path\" : \"Path\", \"Comment\" : \"Comment\", \"IsExternalUrl\" : true, \"DisplayTitle\" : \"DisplayTitle\", \"IsForced\" : true, \"ChannelLayout\" : \"ChannelLayout\", \"PacketLength\" : 0, \"localizedUndefined\" : \"localizedUndefined\", \"Title\" : \"Title\", \"RealFrameRate\" : 7.05877, \"AspectRatio\" : \"AspectRatio\", \"AverageFrameRate\" : 6.778325, \"Score\" : 4, \"IsExternal\" : true, \"IsInterlaced\" : true, \"Level\" : 7.143538047012306, \"BitRate\" : 5 }, { \"VideoRange\" : \"VideoRange\", \"CodecTimeBase\" : \"CodecTimeBase\", \"ColorSpace\" : \"ColorSpace\", \"Index\" : 3, \"ColorRange\" : \"ColorRange\", \"localizedForced\" : \"localizedForced\", \"BitDepth\" : 6, \"Channels\" : 6, \"Profile\" : \"Profile\", \"SupportsExternalStream\" : true, \"DeliveryUrl\" : \"DeliveryUrl\", \"localizedDefault\" : \"localizedDefault\", \"Codec\" : \"Codec\", \"ColorPrimaries\" : \"ColorPrimaries\", \"SampleRate\" : 0, \"IsTextSubtitleStream\" : true, \"Language\" : \"Language\", \"IsAnamorphic\" : true, \"Height\" : 3, \"NalLengthSize\" : \"NalLengthSize\", \"PixelFormat\" : \"PixelFormat\", \"RefFrames\" : 6, \"IsAVC\" : true, \"Width\" : 8, \"TimeBase\" : \"TimeBase\", \"ColorTransfer\" : \"ColorTransfer\", \"CodecTag\" : \"CodecTag\", \"IsDefault\" : true, \"Path\" : \"Path\", \"Comment\" : \"Comment\", \"IsExternalUrl\" : true, \"DisplayTitle\" : \"DisplayTitle\", \"IsForced\" : true, \"ChannelLayout\" : \"ChannelLayout\", \"PacketLength\" : 0, \"localizedUndefined\" : \"localizedUndefined\", \"Title\" : \"Title\", \"RealFrameRate\" : 7.05877, \"AspectRatio\" : \"AspectRatio\", \"AverageFrameRate\" : 6.778325, \"Score\" : 4, \"IsExternal\" : true, \"IsInterlaced\" : true, \"Level\" : 7.143538047012306, \"BitRate\" : 5 } ], \"Size\" : 3, \"BufferMs\" : 3, \"Name\" : \"Name\", \"RequiresOpening\" : true, \"SupportsDirectStream\" : true, \"RequiresClosing\" : true, \"Container\" : \"Container\", \"LiveStreamId\" : \"LiveStreamId\", \"RequiresLooping\" : true, \"DefaultSubtitleStreamIndex\" : 1, \"GenPtsInput\" : true, \"IsInfiniteStream\" : true, \"Path\" : \"Path\", \"IsRemote\" : true, \"IgnoreIndex\" : true, \"SupportsDirectPlay\" : true, \"TranscodingSubProtocol\" : \"TranscodingSubProtocol\", \"AnalyzeDurationMs\" : 9, \"Formats\" : [ \"Formats\", \"Formats\" ], \"Bitrate\" : 6, \"OpenToken\" : \"OpenToken\", \"SupportsProbing\" : true, \"MediaAttachments\" : [ { \"CodecTag\" : \"CodecTag\", \"Comment\" : \"Comment\", \"DeliveryUrl\" : \"DeliveryUrl\", \"Codec\" : \"Codec\", \"FileName\" : \"FileName\", \"Index\" : 2, \"MimeType\" : \"MimeType\" }, { \"CodecTag\" : \"CodecTag\", \"Comment\" : \"Comment\", \"DeliveryUrl\" : \"DeliveryUrl\", \"Codec\" : \"Codec\", \"FileName\" : \"FileName\", \"Index\" : 2, \"MimeType\" : \"MimeType\" } ], \"ReadAtNativeFramerate\" : true, \"ETag\" : \"ETag\", \"TranscodingContainer\" : \"TranscodingContainer\", \"IgnoreDts\" : true, \"TranscodingUrl\" : \"TranscodingUrl\", \"Id\" : \"Id\", \"SupportsTranscoding\" : true, \"DefaultAudioStreamIndex\" : 6 }, { \"EncoderPath\" : \"EncoderPath\", \"RequiredHttpHeaders\" : { \"key\" : \"RequiredHttpHeaders\" }, \"RunTimeTicks\" : 7, \"MediaStreams\" : [ { \"VideoRange\" : \"VideoRange\", \"CodecTimeBase\" : \"CodecTimeBase\", \"ColorSpace\" : \"ColorSpace\", \"Index\" : 3, \"ColorRange\" : \"ColorRange\", \"localizedForced\" : \"localizedForced\", \"BitDepth\" : 6, \"Channels\" : 6, \"Profile\" : \"Profile\", \"SupportsExternalStream\" : true, \"DeliveryUrl\" : \"DeliveryUrl\", \"localizedDefault\" : \"localizedDefault\", \"Codec\" : \"Codec\", \"ColorPrimaries\" : \"ColorPrimaries\", \"SampleRate\" : 0, \"IsTextSubtitleStream\" : true, \"Language\" : \"Language\", \"IsAnamorphic\" : true, \"Height\" : 3, \"NalLengthSize\" : \"NalLengthSize\", \"PixelFormat\" : \"PixelFormat\", \"RefFrames\" : 6, \"IsAVC\" : true, \"Width\" : 8, \"TimeBase\" : \"TimeBase\", \"ColorTransfer\" : \"ColorTransfer\", \"CodecTag\" : \"CodecTag\", \"IsDefault\" : true, \"Path\" : \"Path\", \"Comment\" : \"Comment\", \"IsExternalUrl\" : true, \"DisplayTitle\" : \"DisplayTitle\", \"IsForced\" : true, \"ChannelLayout\" : \"ChannelLayout\", \"PacketLength\" : 0, \"localizedUndefined\" : \"localizedUndefined\", \"Title\" : \"Title\", \"RealFrameRate\" : 7.05877, \"AspectRatio\" : \"AspectRatio\", \"AverageFrameRate\" : 6.778325, \"Score\" : 4, \"IsExternal\" : true, \"IsInterlaced\" : true, \"Level\" : 7.143538047012306, \"BitRate\" : 5 }, { \"VideoRange\" : \"VideoRange\", \"CodecTimeBase\" : \"CodecTimeBase\", \"ColorSpace\" : \"ColorSpace\", \"Index\" : 3, \"ColorRange\" : \"ColorRange\", \"localizedForced\" : \"localizedForced\", \"BitDepth\" : 6, \"Channels\" : 6, \"Profile\" : \"Profile\", \"SupportsExternalStream\" : true, \"DeliveryUrl\" : \"DeliveryUrl\", \"localizedDefault\" : \"localizedDefault\", \"Codec\" : \"Codec\", \"ColorPrimaries\" : \"ColorPrimaries\", \"SampleRate\" : 0, \"IsTextSubtitleStream\" : true, \"Language\" : \"Language\", \"IsAnamorphic\" : true, \"Height\" : 3, \"NalLengthSize\" : \"NalLengthSize\", \"PixelFormat\" : \"PixelFormat\", \"RefFrames\" : 6, \"IsAVC\" : true, \"Width\" : 8, \"TimeBase\" : \"TimeBase\", \"ColorTransfer\" : \"ColorTransfer\", \"CodecTag\" : \"CodecTag\", \"IsDefault\" : true, \"Path\" : \"Path\", \"Comment\" : \"Comment\", \"IsExternalUrl\" : true, \"DisplayTitle\" : \"DisplayTitle\", \"IsForced\" : true, \"ChannelLayout\" : \"ChannelLayout\", \"PacketLength\" : 0, \"localizedUndefined\" : \"localizedUndefined\", \"Title\" : \"Title\", \"RealFrameRate\" : 7.05877, \"AspectRatio\" : \"AspectRatio\", \"AverageFrameRate\" : 6.778325, \"Score\" : 4, \"IsExternal\" : true, \"IsInterlaced\" : true, \"Level\" : 7.143538047012306, \"BitRate\" : 5 } ], \"Size\" : 3, \"BufferMs\" : 3, \"Name\" : \"Name\", \"RequiresOpening\" : true, \"SupportsDirectStream\" : true, \"RequiresClosing\" : true, \"Container\" : \"Container\", \"LiveStreamId\" : \"LiveStreamId\", \"RequiresLooping\" : true, \"DefaultSubtitleStreamIndex\" : 1, \"GenPtsInput\" : true, \"IsInfiniteStream\" : true, \"Path\" : \"Path\", \"IsRemote\" : true, \"IgnoreIndex\" : true, \"SupportsDirectPlay\" : true, \"TranscodingSubProtocol\" : \"TranscodingSubProtocol\", \"AnalyzeDurationMs\" : 9, \"Formats\" : [ \"Formats\", \"Formats\" ], \"Bitrate\" : 6, \"OpenToken\" : \"OpenToken\", \"SupportsProbing\" : true, \"MediaAttachments\" : [ { \"CodecTag\" : \"CodecTag\", \"Comment\" : \"Comment\", \"DeliveryUrl\" : \"DeliveryUrl\", \"Codec\" : \"Codec\", \"FileName\" : \"FileName\", \"Index\" : 2, \"MimeType\" : \"MimeType\" }, { \"CodecTag\" : \"CodecTag\", \"Comment\" : \"Comment\", \"DeliveryUrl\" : \"DeliveryUrl\", \"Codec\" : \"Codec\", \"FileName\" : \"FileName\", \"Index\" : 2, \"MimeType\" : \"MimeType\" } ], \"ReadAtNativeFramerate\" : true, \"ETag\" : \"ETag\", \"TranscodingContainer\" : \"TranscodingContainer\", \"IgnoreDts\" : true, \"TranscodingUrl\" : \"TranscodingUrl\", \"Id\" : \"Id\", \"SupportsTranscoding\" : true, \"DefaultAudioStreamIndex\" : 6 } ], \"GenreItems\" : [ { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" }, { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" } ], \"OfficialRating\" : \"OfficialRating\", \"ProgramCount\" : 6, \"ProgramId\" : \"ProgramId\", \"Longitude\" : 6.683562403749608, \"FocalLength\" : 6.84685269835264, \"LockData\" : true, \"IsNews\" : true, \"ShutterSpeed\" : 7.260521264802104, \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"IsFolder\" : true, \"SeriesTimerId\" : \"SeriesTimerId\", \"SeriesId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"MediaStreams\" : [ { \"VideoRange\" : \"VideoRange\", \"CodecTimeBase\" : \"CodecTimeBase\", \"ColorSpace\" : \"ColorSpace\", \"Index\" : 3, \"ColorRange\" : \"ColorRange\", \"localizedForced\" : \"localizedForced\", \"BitDepth\" : 6, \"Channels\" : 6, \"Profile\" : \"Profile\", \"SupportsExternalStream\" : true, \"DeliveryUrl\" : \"DeliveryUrl\", \"localizedDefault\" : \"localizedDefault\", \"Codec\" : \"Codec\", \"ColorPrimaries\" : \"ColorPrimaries\", \"SampleRate\" : 0, \"IsTextSubtitleStream\" : true, \"Language\" : \"Language\", \"IsAnamorphic\" : true, \"Height\" : 3, \"NalLengthSize\" : \"NalLengthSize\", \"PixelFormat\" : \"PixelFormat\", \"RefFrames\" : 6, \"IsAVC\" : true, \"Width\" : 8, \"TimeBase\" : \"TimeBase\", \"ColorTransfer\" : \"ColorTransfer\", \"CodecTag\" : \"CodecTag\", \"IsDefault\" : true, \"Path\" : \"Path\", \"Comment\" : \"Comment\", \"IsExternalUrl\" : true, \"DisplayTitle\" : \"DisplayTitle\", \"IsForced\" : true, \"ChannelLayout\" : \"ChannelLayout\", \"PacketLength\" : 0, \"localizedUndefined\" : \"localizedUndefined\", \"Title\" : \"Title\", \"RealFrameRate\" : 7.05877, \"AspectRatio\" : \"AspectRatio\", \"AverageFrameRate\" : 6.778325, \"Score\" : 4, \"IsExternal\" : true, \"IsInterlaced\" : true, \"Level\" : 7.143538047012306, \"BitRate\" : 5 }, { \"VideoRange\" : \"VideoRange\", \"CodecTimeBase\" : \"CodecTimeBase\", \"ColorSpace\" : \"ColorSpace\", \"Index\" : 3, \"ColorRange\" : \"ColorRange\", \"localizedForced\" : \"localizedForced\", \"BitDepth\" : 6, \"Channels\" : 6, \"Profile\" : \"Profile\", \"SupportsExternalStream\" : true, \"DeliveryUrl\" : \"DeliveryUrl\", \"localizedDefault\" : \"localizedDefault\", \"Codec\" : \"Codec\", \"ColorPrimaries\" : \"ColorPrimaries\", \"SampleRate\" : 0, \"IsTextSubtitleStream\" : true, \"Language\" : \"Language\", \"IsAnamorphic\" : true, \"Height\" : 3, \"NalLengthSize\" : \"NalLengthSize\", \"PixelFormat\" : \"PixelFormat\", \"RefFrames\" : 6, \"IsAVC\" : true, \"Width\" : 8, \"TimeBase\" : \"TimeBase\", \"ColorTransfer\" : \"ColorTransfer\", \"CodecTag\" : \"CodecTag\", \"IsDefault\" : true, \"Path\" : \"Path\", \"Comment\" : \"Comment\", \"IsExternalUrl\" : true, \"DisplayTitle\" : \"DisplayTitle\", \"IsForced\" : true, \"ChannelLayout\" : \"ChannelLayout\", \"PacketLength\" : 0, \"localizedUndefined\" : \"localizedUndefined\", \"Title\" : \"Title\", \"RealFrameRate\" : 7.05877, \"AspectRatio\" : \"AspectRatio\", \"AverageFrameRate\" : 6.778325, \"Score\" : 4, \"IsExternal\" : true, \"IsInterlaced\" : true, \"Level\" : 7.143538047012306, \"BitRate\" : 5 } ], \"IsPlaceHolder\" : true, \"CanDownload\" : true, \"IsMovie\" : true, \"SeriesCount\" : 4, \"DateLastMediaAdded\" : \"2000-01-23T04:56:07.000+00:00\", \"ParentArtImageTag\" : \"ParentArtImageTag\", \"SeriesStudio\" : \"SeriesStudio\", \"IsLive\" : true, \"Width\" : 8, \"ExternalUrls\" : [ { \"Url\" : \"Url\", \"Name\" : \"Name\" }, { \"Url\" : \"Url\", \"Name\" : \"Name\" } ], \"RecursiveItemCount\" : 4, \"ParentId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Path\" : \"Path\", \"MusicVideoCount\" : 7, \"ScreenshotImageTags\" : [ \"ScreenshotImageTags\", \"ScreenshotImageTags\" ], \"EpisodeCount\" : 1, \"IsSeries\" : true, \"ProductionLocations\" : [ \"ProductionLocations\", \"ProductionLocations\" ], \"ParentPrimaryImageItemId\" : \"ParentPrimaryImageItemId\", \"EndDate\" : \"2000-01-23T04:56:07.000+00:00\", \"ParentThumbItemId\" : \"ParentThumbItemId\", \"SeriesPrimaryImageTag\" : \"SeriesPrimaryImageTag\", \"PreferredMetadataLanguage\" : \"PreferredMetadataLanguage\", \"Type\" : \"Type\", \"BackdropImageTags\" : [ \"BackdropImageTags\", \"BackdropImageTags\" ], \"ParentBackdropImageTags\" : [ \"ParentBackdropImageTags\", \"ParentBackdropImageTags\" ], \"AirsBeforeEpisodeNumber\" : 6, \"ChildCount\" : 3, \"Artists\" : [ \"Artists\", \"Artists\" ], \"RunTimeTicks\" : 1, \"AlbumPrimaryImageTag\" : \"AlbumPrimaryImageTag\", \"CumulativeRunTimeTicks\" : 1, \"SourceType\" : \"SourceType\", \"CanDelete\" : true, \"Album\" : \"Album\", \"DisplayPreferencesId\" : \"DisplayPreferencesId\", \"PlaylistItemId\" : \"PlaylistItemId\", \"Latitude\" : 9.965781217890562, \"SortName\" : \"SortName\", \"ArtistCount\" : 7, \"Name\" : \"Name\", \"StartDate\" : \"2000-01-23T04:56:07.000+00:00\", \"Container\" : \"Container\", \"ProductionYear\" : 0, \"SeriesName\" : \"SeriesName\", \"ParentArtItemId\" : \"ParentArtItemId\", \"AlbumId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"LocalTrailerCount\" : 9, \"SupportsSync\" : true, \"CompletionPercentage\" : 4.145608029883936, \"IndexNumber\" : 1, \"Genres\" : [ \"Genres\", \"Genres\" ], \"LockedFields\" : [ null, null ], \"SeasonId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"ParentPrimaryImageTag\" : \"ParentPrimaryImageTag\", \"ProviderIds\" : { \"key\" : \"ProviderIds\" }, \"RemoteTrailers\" : [ { \"Url\" : \"Url\", \"Name\" : \"Name\" }, { \"Url\" : \"Url\", \"Name\" : \"Name\" } ], \"MediaSourceCount\" : 8, \"CustomRating\" : \"CustomRating\", \"AirsAfterSeasonNumber\" : 0, \"AirDays\" : [ null, null ], \"ParentLogoItemId\" : \"ParentLogoItemId\", \"PartCount\" : 3, \"ChannelName\" : \"ChannelName\", \"EpisodeTitle\" : \"EpisodeTitle\", \"IsoSpeedRating\" : 5, \"CommunityRating\" : 2.027123, \"Software\" : \"Software\", \"Chapters\" : [ { \"StartPositionTicks\" : 9, \"ImageTag\" : \"ImageTag\", \"ImageDateModified\" : \"2000-01-23T04:56:07.000+00:00\", \"ImagePath\" : \"ImagePath\", \"Name\" : \"Name\" }, { \"StartPositionTicks\" : 9, \"ImageTag\" : \"ImageTag\", \"ImageDateModified\" : \"2000-01-23T04:56:07.000+00:00\", \"ImagePath\" : \"ImagePath\", \"Name\" : \"Name\" } ], \"SongCount\" : 9, \"Taglines\" : [ \"Taglines\", \"Taglines\" ], \"AirsBeforeSeasonNumber\" : 1, \"CameraModel\" : \"CameraModel\", \"PreferredMetadataCountryCode\" : \"PreferredMetadataCountryCode\", \"ChannelNumber\" : \"ChannelNumber\", \"UserData\" : { \"Played\" : true, \"UnplayedItemCount\" : 6, \"PlayedPercentage\" : 5.507386964179881, \"PlayCount\" : 0, \"Rating\" : 4.86315908102884, \"PlaybackPositionTicks\" : 7, \"LastPlayedDate\" : \"2000-01-23T04:56:07.000+00:00\", \"Likes\" : true, \"IsFavorite\" : true, \"ItemId\" : \"ItemId\", \"Key\" : \"Key\" }, \"TimerId\" : \"TimerId\", \"DateCreated\" : \"2000-01-23T04:56:07.000+00:00\", \"HasSubtitles\" : true, \"ParentThumbImageTag\" : \"ParentThumbImageTag\", \"IsSports\" : true, \"ChannelId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"ParentIndexNumber\" : 5, \"AlbumArtists\" : [ { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" }, { \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\" } ], \"ServerId\" : \"ServerId\", \"Number\" : \"Number\", \"AlbumCount\" : 5, \"IsRepeat\" : true, \"CollectionType\" : \"CollectionType\", \"Height\" : 7, \"PrimaryImageAspectRatio\" : 4.078845849666752, \"IsKids\" : true, \"DisplayOrder\" : \"DisplayOrder\", \"IsHD\" : true, \"EnableMediaSourceDisplay\" : true, \"SeriesThumbImageTag\" : \"SeriesThumbImageTag\", \"MovieCount\" : 3, \"People\" : [ { \"Role\" : \"Role\", \"Type\" : \"Type\", \"PrimaryImageTag\" : \"PrimaryImageTag\", \"Id\" : \"Id\", \"ImageBlurHashes\" : { \"Art\" : { \"key\" : \"Art\" }, \"Banner\" : { \"key\" : \"Banner\" }, \"Thumb\" : { \"key\" : \"Thumb\" }, \"BoxRear\" : { \"key\" : \"BoxRear\" }, \"Chapter\" : { \"key\" : \"Chapter\" }, \"Box\" : { \"key\" : \"Box\" }, \"Profile\" : { \"key\" : \"Profile\" }, \"Logo\" : { \"key\" : \"Logo\" }, \"Disc\" : { \"key\" : \"Disc\" }, \"Primary\" : { \"key\" : \"Primary\" }, \"Screenshot\" : { \"key\" : \"Screenshot\" }, \"Backdrop\" : { \"key\" : \"Backdrop\" }, \"Menu\" : { \"key\" : \"Menu\" } }, \"Name\" : \"Name\" }, { \"Role\" : \"Role\", \"Type\" : \"Type\", \"PrimaryImageTag\" : \"PrimaryImageTag\", \"Id\" : \"Id\", \"ImageBlurHashes\" : { \"Art\" : { \"key\" : \"Art\" }, \"Banner\" : { \"key\" : \"Banner\" }, \"Thumb\" : { \"key\" : \"Thumb\" }, \"BoxRear\" : { \"key\" : \"BoxRear\" }, \"Chapter\" : { \"key\" : \"Chapter\" }, \"Box\" : { \"key\" : \"Box\" }, \"Profile\" : { \"key\" : \"Profile\" }, \"Logo\" : { \"key\" : \"Logo\" }, \"Disc\" : { \"key\" : \"Disc\" }, \"Primary\" : { \"key\" : \"Primary\" }, \"Screenshot\" : { \"key\" : \"Screenshot\" }, \"Backdrop\" : { \"key\" : \"Backdrop\" }, \"Menu\" : { \"key\" : \"Menu\" } }, \"Name\" : \"Name\" } ], \"Overview\" : \"Overview\", \"SpecialFeatureCount\" : 0, \"AlbumArtist\" : \"AlbumArtist\", \"ImageTags\" : { \"key\" : \"ImageTags\" }, \"AspectRatio\" : \"AspectRatio\", \"TrailerCount\" : 9, \"OriginalTitle\" : \"OriginalTitle\", \"ForcedSortName\" : \"ForcedSortName\", \"IsPremiere\" : true, \"Altitude\" : 5.637376656633329 } ] }";
                    ApiUtil.setExampleResponse(request, "application/json; profile="PascalCase"", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /Videos/{videoId}/{mediaSourceId}/Attachments/{index} : Get video attachment.
     *
     * @param videoId Video ID. (required)
     * @param mediaSourceId Media Source ID. (required)
     * @param index Attachment Index. (required)
     * @return Attachment retrieved. (status code 200)
     *         or Video or attachment not found. (status code 404)
     */
    @Operation(
        operationId = "getAttachment",
        summary = "Get video attachment.",
        tags = { "VideoAttachments" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Attachment retrieved.", content = {
                @Content(mediaType = "application/octet-stream", schema = @Schema(implementation = org.springframework.core.io.Resource.class)),
                @Content(mediaType = "application/json", schema = @Schema(implementation = org.springframework.core.io.Resource.class)),
                @Content(mediaType = "application/json; profile=CamelCase", schema = @Schema(implementation = org.springframework.core.io.Resource.class)),
                @Content(mediaType = "application/json; profile=PascalCase", schema = @Schema(implementation = org.springframework.core.io.Resource.class))
            }),
            @ApiResponse(responseCode = "404", description = "Video or attachment not found.", content = {
                @Content(mediaType = "application/octet-stream", schema = @Schema(implementation = ProblemDetails.class)),
                @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class)),
                @Content(mediaType = "application/json; profile=CamelCase", schema = @Schema(implementation = ProblemDetails.class)),
                @Content(mediaType = "application/json; profile=PascalCase", schema = @Schema(implementation = ProblemDetails.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/Videos/{videoId}/{mediaSourceId}/Attachments/{index}",
        produces = { "application/octet-stream", "application/json", "application/json; profile=CamelCase", "application/json; profile=PascalCase" }
    )
    
    default ResponseEntity<org.springframework.core.io.Resource> getAttachment(
        @Parameter(name = "videoId", description = "Video ID.", required = true, in = ParameterIn.PATH) @PathVariable("videoId") UUID videoId,
        @Parameter(name = "mediaSourceId", description = "Media Source ID.", required = true, in = ParameterIn.PATH) @PathVariable("mediaSourceId") String mediaSourceId,
        @Parameter(name = "index", description = "Attachment Index.", required = true, in = ParameterIn.PATH) @PathVariable("index") Integer index
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /Videos/{itemId}/hls/{playlistId}/stream.m3u8 : Gets a hls video playlist.
     *
     * @param itemId The video id. (required)
     * @param playlistId The playlist id. (required)
     * @return Hls video playlist returned. (status code 200)
     *         or Unauthorized (status code 401)
     *         or Forbidden (status code 403)
     */
    @Operation(
        operationId = "getHlsPlaylistLegacy",
        summary = "Gets a hls video playlist.",
        tags = { "HlsSegment" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Hls video playlist returned.", content = {
                @Content(mediaType = "application/x-mpegURL", schema = @Schema(implementation = org.springframework.core.io.Resource.class))
            }),
            @ApiResponse(responseCode = "401", description = "Unauthorized"),
            @ApiResponse(responseCode = "403", description = "Forbidden")
        },
        security = {
            @SecurityRequirement(name = "CustomAuthentication")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/Videos/{itemId}/hls/{playlistId}/stream.m3u8",
        produces = { "application/x-mpegURL" }
    )
    
    default ResponseEntity<org.springframework.core.io.Resource> getHlsPlaylistLegacy(
        @Parameter(name = "itemId", description = "The video id.", required = true, in = ParameterIn.PATH) @PathVariable("itemId") String itemId,
        @Parameter(name = "playlistId", description = "The playlist id.", required = true, in = ParameterIn.PATH) @PathVariable("playlistId") String playlistId
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /Videos/{itemId}/hls1/{playlistId}/{segmentId}.{container} : Gets a video stream using HTTP live streaming.
     *
     * @param itemId The item id. (required)
     * @param playlistId The playlist id. (required)
     * @param segmentId The segment id. (required)
     * @param container The video container. Possible values are: ts, webm, asf, wmv, ogv, mp4, m4v, mkv, mpeg, mpg, avi, 3gp, wmv, wtv, m2ts, mov, iso, flv. (required)
     * @param _static Optional. If true, the original file will be streamed statically without any encoding. Use either no url extension or the original file extension. true/false. (optional)
     * @param params The streaming parameters. (optional)
     * @param tag The tag. (optional)
     * @param deviceProfileId Optional. The dlna device profile id to utilize. (optional)
     * @param playSessionId The play session id. (optional)
     * @param segmentContainer The segment container. (optional)
     * @param segmentLength The segment lenght. (optional)
     * @param minSegments The minimum number of segments. (optional)
     * @param mediaSourceId The media version id, if playing an alternate version. (optional)
     * @param deviceId The device id of the client requesting. Used to stop encoding processes when needed. (optional)
     * @param audioCodec Optional. Specify a audio codec to encode to, e.g. mp3. If omitted the server will auto-select using the url&#39;s extension. Options: aac, mp3, vorbis, wma. (optional)
     * @param enableAutoStreamCopy Whether or not to allow automatic stream copy if requested values match the original source. Defaults to true. (optional)
     * @param allowVideoStreamCopy Whether or not to allow copying of the video stream url. (optional)
     * @param allowAudioStreamCopy Whether or not to allow copying of the audio stream url. (optional)
     * @param breakOnNonKeyFrames Optional. Whether to break on non key frames. (optional)
     * @param audioSampleRate Optional. Specify a specific audio sample rate, e.g. 44100. (optional)
     * @param maxAudioBitDepth Optional. The maximum audio bit depth. (optional)
     * @param audioBitRate Optional. Specify an audio bitrate to encode to, e.g. 128000. If omitted this will be left to encoder defaults. (optional)
     * @param audioChannels Optional. Specify a specific number of audio channels to encode to, e.g. 2. (optional)
     * @param maxAudioChannels Optional. Specify a maximum number of audio channels to encode to, e.g. 2. (optional)
     * @param profile Optional. Specify a specific an encoder profile (varies by encoder), e.g. main, baseline, high. (optional)
     * @param level Optional. Specify a level for the encoder profile (varies by encoder), e.g. 3, 3.1. (optional)
     * @param framerate Optional. A specific video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. (optional)
     * @param maxFramerate Optional. A specific maximum video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. (optional)
     * @param copyTimestamps Whether or not to copy timestamps when transcoding with an offset. Defaults to false. (optional)
     * @param startTimeTicks Optional. Specify a starting offset, in ticks. 1 tick &#x3D; 10000 ms. (optional)
     * @param width Optional. The fixed horizontal resolution of the encoded video. (optional)
     * @param height Optional. The fixed vertical resolution of the encoded video. (optional)
     * @param videoBitRate Optional. Specify a video bitrate to encode to, e.g. 500000. If omitted this will be left to encoder defaults. (optional)
     * @param subtitleStreamIndex Optional. The index of the subtitle stream to use. If omitted no subtitles will be used. (optional)
     * @param subtitleMethod Optional. Specify the subtitle delivery method. (optional)
     * @param maxRefFrames Optional. (optional)
     * @param maxVideoBitDepth Optional. The maximum video bit depth. (optional)
     * @param requireAvc Optional. Whether to require avc. (optional)
     * @param deInterlace Optional. Whether to deinterlace the video. (optional)
     * @param requireNonAnamorphic Optional. Whether to require a non anamorphic stream. (optional)
     * @param transcodingMaxAudioChannels Optional. The maximum number of audio channels to transcode. (optional)
     * @param cpuCoreLimit Optional. The limit of how many cpu cores to use. (optional)
     * @param liveStreamId The live stream id. (optional)
     * @param enableMpegtsM2TsMode Optional. Whether to enable the MpegtsM2Ts mode. (optional)
     * @param videoCodec Optional. Specify a video codec to encode to, e.g. h264. If omitted the server will auto-select using the url&#39;s extension. Options: h265, h264, mpeg4, theora, vpx, wmv. (optional)
     * @param subtitleCodec Optional. Specify a subtitle codec to encode to. (optional)
     * @param transcodeReasons Optional. The transcoding reason. (optional)
     * @param audioStreamIndex Optional. The index of the audio stream to use. If omitted the first audio stream will be used. (optional)
     * @param videoStreamIndex Optional. The index of the video stream to use. If omitted the first video stream will be used. (optional)
     * @param context Optional. The MediaBrowser.Model.Dlna.EncodingContext. (optional)
     * @param streamOptions Optional. The streaming options. (optional)
     * @return Video stream returned. (status code 200)
     *         or Unauthorized (status code 401)
     *         or Forbidden (status code 403)
     */
    @Operation(
        operationId = "getHlsVideoSegment",
        summary = "Gets a video stream using HTTP live streaming.",
        tags = { "DynamicHls" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Video stream returned.", content = {
                @Content(mediaType = "video/*", schema = @Schema(implementation = org.springframework.core.io.Resource.class))
            }),
            @ApiResponse(responseCode = "401", description = "Unauthorized"),
            @ApiResponse(responseCode = "403", description = "Forbidden")
        },
        security = {
            @SecurityRequirement(name = "CustomAuthentication")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/Videos/{itemId}/hls1/{playlistId}/{segmentId}.{container}",
        produces = { "video/*" }
    )
    
    default ResponseEntity<org.springframework.core.io.Resource> getHlsVideoSegment(
        @Parameter(name = "itemId", description = "The item id.", required = true, in = ParameterIn.PATH) @PathVariable("itemId") UUID itemId,
        @Parameter(name = "playlistId", description = "The playlist id.", required = true, in = ParameterIn.PATH) @PathVariable("playlistId") String playlistId,
        @Parameter(name = "segmentId", description = "The segment id.", required = true, in = ParameterIn.PATH) @PathVariable("segmentId") Integer segmentId,
        @Parameter(name = "container", description = "The video container. Possible values are: ts, webm, asf, wmv, ogv, mp4, m4v, mkv, mpeg, mpg, avi, 3gp, wmv, wtv, m2ts, mov, iso, flv.", required = true, in = ParameterIn.PATH) @PathVariable("container") String container,
        @Parameter(name = "static", description = "Optional. If true, the original file will be streamed statically without any encoding. Use either no url extension or the original file extension. true/false.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "static", required = false) Boolean _static,
        @Parameter(name = "params", description = "The streaming parameters.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "params", required = false) String params,
        @Parameter(name = "tag", description = "The tag.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "tag", required = false) String tag,
        @Parameter(name = "deviceProfileId", description = "Optional. The dlna device profile id to utilize.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "deviceProfileId", required = false) String deviceProfileId,
        @Parameter(name = "playSessionId", description = "The play session id.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "playSessionId", required = false) String playSessionId,
        @Parameter(name = "segmentContainer", description = "The segment container.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "segmentContainer", required = false) String segmentContainer,
        @Parameter(name = "segmentLength", description = "The segment lenght.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "segmentLength", required = false) Integer segmentLength,
        @Parameter(name = "minSegments", description = "The minimum number of segments.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "minSegments", required = false) Integer minSegments,
        @Parameter(name = "mediaSourceId", description = "The media version id, if playing an alternate version.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "mediaSourceId", required = false) String mediaSourceId,
        @Parameter(name = "deviceId", description = "The device id of the client requesting. Used to stop encoding processes when needed.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "deviceId", required = false) String deviceId,
        @Parameter(name = "audioCodec", description = "Optional. Specify a audio codec to encode to, e.g. mp3. If omitted the server will auto-select using the url's extension. Options: aac, mp3, vorbis, wma.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioCodec", required = false) String audioCodec,
        @Parameter(name = "enableAutoStreamCopy", description = "Whether or not to allow automatic stream copy if requested values match the original source. Defaults to true.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "enableAutoStreamCopy", required = false) Boolean enableAutoStreamCopy,
        @Parameter(name = "allowVideoStreamCopy", description = "Whether or not to allow copying of the video stream url.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "allowVideoStreamCopy", required = false) Boolean allowVideoStreamCopy,
        @Parameter(name = "allowAudioStreamCopy", description = "Whether or not to allow copying of the audio stream url.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "allowAudioStreamCopy", required = false) Boolean allowAudioStreamCopy,
        @Parameter(name = "breakOnNonKeyFrames", description = "Optional. Whether to break on non key frames.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "breakOnNonKeyFrames", required = false) Boolean breakOnNonKeyFrames,
        @Parameter(name = "audioSampleRate", description = "Optional. Specify a specific audio sample rate, e.g. 44100.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioSampleRate", required = false) Integer audioSampleRate,
        @Parameter(name = "maxAudioBitDepth", description = "Optional. The maximum audio bit depth.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxAudioBitDepth", required = false) Integer maxAudioBitDepth,
        @Parameter(name = "audioBitRate", description = "Optional. Specify an audio bitrate to encode to, e.g. 128000. If omitted this will be left to encoder defaults.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioBitRate", required = false) Integer audioBitRate,
        @Parameter(name = "audioChannels", description = "Optional. Specify a specific number of audio channels to encode to, e.g. 2.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioChannels", required = false) Integer audioChannels,
        @Parameter(name = "maxAudioChannels", description = "Optional. Specify a maximum number of audio channels to encode to, e.g. 2.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxAudioChannels", required = false) Integer maxAudioChannels,
        @Parameter(name = "profile", description = "Optional. Specify a specific an encoder profile (varies by encoder), e.g. main, baseline, high.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "profile", required = false) String profile,
        @Parameter(name = "level", description = "Optional. Specify a level for the encoder profile (varies by encoder), e.g. 3, 3.1.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "level", required = false) String level,
        @Parameter(name = "framerate", description = "Optional. A specific video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "framerate", required = false) Float framerate,
        @Parameter(name = "maxFramerate", description = "Optional. A specific maximum video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxFramerate", required = false) Float maxFramerate,
        @Parameter(name = "copyTimestamps", description = "Whether or not to copy timestamps when transcoding with an offset. Defaults to false.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "copyTimestamps", required = false) Boolean copyTimestamps,
        @Parameter(name = "startTimeTicks", description = "Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "startTimeTicks", required = false) Long startTimeTicks,
        @Parameter(name = "width", description = "Optional. The fixed horizontal resolution of the encoded video.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "width", required = false) Integer width,
        @Parameter(name = "height", description = "Optional. The fixed vertical resolution of the encoded video.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "height", required = false) Integer height,
        @Parameter(name = "videoBitRate", description = "Optional. Specify a video bitrate to encode to, e.g. 500000. If omitted this will be left to encoder defaults.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "videoBitRate", required = false) Integer videoBitRate,
        @Parameter(name = "subtitleStreamIndex", description = "Optional. The index of the subtitle stream to use. If omitted no subtitles will be used.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "subtitleStreamIndex", required = false) Integer subtitleStreamIndex,
        @Parameter(name = "subtitleMethod", description = "Optional. Specify the subtitle delivery method.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "subtitleMethod", required = false) SubtitleDeliveryMethod subtitleMethod,
        @Parameter(name = "maxRefFrames", description = "Optional.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxRefFrames", required = false) Integer maxRefFrames,
        @Parameter(name = "maxVideoBitDepth", description = "Optional. The maximum video bit depth.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxVideoBitDepth", required = false) Integer maxVideoBitDepth,
        @Parameter(name = "requireAvc", description = "Optional. Whether to require avc.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "requireAvc", required = false) Boolean requireAvc,
        @Parameter(name = "deInterlace", description = "Optional. Whether to deinterlace the video.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "deInterlace", required = false) Boolean deInterlace,
        @Parameter(name = "requireNonAnamorphic", description = "Optional. Whether to require a non anamorphic stream.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "requireNonAnamorphic", required = false) Boolean requireNonAnamorphic,
        @Parameter(name = "transcodingMaxAudioChannels", description = "Optional. The maximum number of audio channels to transcode.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "transcodingMaxAudioChannels", required = false) Integer transcodingMaxAudioChannels,
        @Parameter(name = "cpuCoreLimit", description = "Optional. The limit of how many cpu cores to use.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "cpuCoreLimit", required = false) Integer cpuCoreLimit,
        @Parameter(name = "liveStreamId", description = "The live stream id.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "liveStreamId", required = false) String liveStreamId,
        @Parameter(name = "enableMpegtsM2TsMode", description = "Optional. Whether to enable the MpegtsM2Ts mode.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "enableMpegtsM2TsMode", required = false) Boolean enableMpegtsM2TsMode,
        @Parameter(name = "videoCodec", description = "Optional. Specify a video codec to encode to, e.g. h264. If omitted the server will auto-select using the url's extension. Options: h265, h264, mpeg4, theora, vpx, wmv.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "videoCodec", required = false) String videoCodec,
        @Parameter(name = "subtitleCodec", description = "Optional. Specify a subtitle codec to encode to.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "subtitleCodec", required = false) String subtitleCodec,
        @Parameter(name = "transcodeReasons", description = "Optional. The transcoding reason.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "transcodeReasons", required = false) String transcodeReasons,
        @Parameter(name = "audioStreamIndex", description = "Optional. The index of the audio stream to use. If omitted the first audio stream will be used.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioStreamIndex", required = false) Integer audioStreamIndex,
        @Parameter(name = "videoStreamIndex", description = "Optional. The index of the video stream to use. If omitted the first video stream will be used.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "videoStreamIndex", required = false) Integer videoStreamIndex,
        @Parameter(name = "context", description = "Optional. The MediaBrowser.Model.Dlna.EncodingContext.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "context", required = false) EncodingContext context,
        @Parameter(name = "streamOptions", description = "Optional. The streaming options.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "", required = false) Map<String, String> streamOptions
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /Videos/{itemId}/hls/{playlistId}/{segmentId}.{segmentContainer} : Gets a hls video segment.
     *
     * @param itemId The item id. (required)
     * @param playlistId The playlist id. (required)
     * @param segmentId The segment id. (required)
     * @param segmentContainer The segment container. (required)
     * @return Hls video segment returned. (status code 200)
     *         or Hls segment not found. (status code 404)
     */
    @Operation(
        operationId = "getHlsVideoSegmentLegacy",
        summary = "Gets a hls video segment.",
        tags = { "HlsSegment" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Hls video segment returned.", content = {
                @Content(mediaType = "video/*", schema = @Schema(implementation = org.springframework.core.io.Resource.class)),
                @Content(mediaType = "application/json", schema = @Schema(implementation = org.springframework.core.io.Resource.class)),
                @Content(mediaType = "application/json; profile=CamelCase", schema = @Schema(implementation = org.springframework.core.io.Resource.class)),
                @Content(mediaType = "application/json; profile=PascalCase", schema = @Schema(implementation = org.springframework.core.io.Resource.class))
            }),
            @ApiResponse(responseCode = "404", description = "Hls segment not found.", content = {
                @Content(mediaType = "video/*", schema = @Schema(implementation = ProblemDetails.class)),
                @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class)),
                @Content(mediaType = "application/json; profile=CamelCase", schema = @Schema(implementation = ProblemDetails.class)),
                @Content(mediaType = "application/json; profile=PascalCase", schema = @Schema(implementation = ProblemDetails.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/Videos/{itemId}/hls/{playlistId}/{segmentId}.{segmentContainer}",
        produces = { "video/*", "application/json", "application/json; profile=CamelCase", "application/json; profile=PascalCase" }
    )
    
    default ResponseEntity<org.springframework.core.io.Resource> getHlsVideoSegmentLegacy(
        @Parameter(name = "itemId", description = "The item id.", required = true, in = ParameterIn.PATH) @PathVariable("itemId") String itemId,
        @Parameter(name = "playlistId", description = "The playlist id.", required = true, in = ParameterIn.PATH) @PathVariable("playlistId") String playlistId,
        @Parameter(name = "segmentId", description = "The segment id.", required = true, in = ParameterIn.PATH) @PathVariable("segmentId") String segmentId,
        @Parameter(name = "segmentContainer", description = "The segment container.", required = true, in = ParameterIn.PATH) @PathVariable("segmentContainer") String segmentContainer
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /Videos/{itemId}/live.m3u8 : Gets a hls live stream.
     *
     * @param itemId The item id. (required)
     * @param container The audio container. (optional)
     * @param _static Optional. If true, the original file will be streamed statically without any encoding. Use either no url extension or the original file extension. true/false. (optional)
     * @param params The streaming parameters. (optional)
     * @param tag The tag. (optional)
     * @param deviceProfileId Optional. The dlna device profile id to utilize. (optional)
     * @param playSessionId The play session id. (optional)
     * @param segmentContainer The segment container. (optional)
     * @param segmentLength The segment lenght. (optional)
     * @param minSegments The minimum number of segments. (optional)
     * @param mediaSourceId The media version id, if playing an alternate version. (optional)
     * @param deviceId The device id of the client requesting. Used to stop encoding processes when needed. (optional)
     * @param audioCodec Optional. Specify a audio codec to encode to, e.g. mp3. If omitted the server will auto-select using the url&#39;s extension. Options: aac, mp3, vorbis, wma. (optional)
     * @param enableAutoStreamCopy Whether or not to allow automatic stream copy if requested values match the original source. Defaults to true. (optional)
     * @param allowVideoStreamCopy Whether or not to allow copying of the video stream url. (optional)
     * @param allowAudioStreamCopy Whether or not to allow copying of the audio stream url. (optional)
     * @param breakOnNonKeyFrames Optional. Whether to break on non key frames. (optional)
     * @param audioSampleRate Optional. Specify a specific audio sample rate, e.g. 44100. (optional)
     * @param maxAudioBitDepth Optional. The maximum audio bit depth. (optional)
     * @param audioBitRate Optional. Specify an audio bitrate to encode to, e.g. 128000. If omitted this will be left to encoder defaults. (optional)
     * @param audioChannels Optional. Specify a specific number of audio channels to encode to, e.g. 2. (optional)
     * @param maxAudioChannels Optional. Specify a maximum number of audio channels to encode to, e.g. 2. (optional)
     * @param profile Optional. Specify a specific an encoder profile (varies by encoder), e.g. main, baseline, high. (optional)
     * @param level Optional. Specify a level for the encoder profile (varies by encoder), e.g. 3, 3.1. (optional)
     * @param framerate Optional. A specific video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. (optional)
     * @param maxFramerate Optional. A specific maximum video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. (optional)
     * @param copyTimestamps Whether or not to copy timestamps when transcoding with an offset. Defaults to false. (optional)
     * @param startTimeTicks Optional. Specify a starting offset, in ticks. 1 tick &#x3D; 10000 ms. (optional)
     * @param width Optional. The fixed horizontal resolution of the encoded video. (optional)
     * @param height Optional. The fixed vertical resolution of the encoded video. (optional)
     * @param videoBitRate Optional. Specify a video bitrate to encode to, e.g. 500000. If omitted this will be left to encoder defaults. (optional)
     * @param subtitleStreamIndex Optional. The index of the subtitle stream to use. If omitted no subtitles will be used. (optional)
     * @param subtitleMethod Optional. Specify the subtitle delivery method. (optional)
     * @param maxRefFrames Optional. (optional)
     * @param maxVideoBitDepth Optional. The maximum video bit depth. (optional)
     * @param requireAvc Optional. Whether to require avc. (optional)
     * @param deInterlace Optional. Whether to deinterlace the video. (optional)
     * @param requireNonAnamorphic Optional. Whether to require a non anamorphic stream. (optional)
     * @param transcodingMaxAudioChannels Optional. The maximum number of audio channels to transcode. (optional)
     * @param cpuCoreLimit Optional. The limit of how many cpu cores to use. (optional)
     * @param liveStreamId The live stream id. (optional)
     * @param enableMpegtsM2TsMode Optional. Whether to enable the MpegtsM2Ts mode. (optional)
     * @param videoCodec Optional. Specify a video codec to encode to, e.g. h264. If omitted the server will auto-select using the url&#39;s extension. Options: h265, h264, mpeg4, theora, vpx, wmv. (optional)
     * @param subtitleCodec Optional. Specify a subtitle codec to encode to. (optional)
     * @param transcodeReasons Optional. The transcoding reason. (optional)
     * @param audioStreamIndex Optional. The index of the audio stream to use. If omitted the first audio stream will be used. (optional)
     * @param videoStreamIndex Optional. The index of the video stream to use. If omitted the first video stream will be used. (optional)
     * @param context Optional. The MediaBrowser.Model.Dlna.EncodingContext. (optional)
     * @param streamOptions Optional. The streaming options. (optional)
     * @param maxWidth Optional. The max width. (optional)
     * @param maxHeight Optional. The max height. (optional)
     * @param enableSubtitlesInManifest Optional. Whether to enable subtitles in the manifest. (optional)
     * @return Hls live stream retrieved. (status code 200)
     *         or Unauthorized (status code 401)
     *         or Forbidden (status code 403)
     */
    @Operation(
        operationId = "getLiveHlsStream",
        summary = "Gets a hls live stream.",
        tags = { "VideoHls" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Hls live stream retrieved.", content = {
                @Content(mediaType = "application/x-mpegURL", schema = @Schema(implementation = org.springframework.core.io.Resource.class))
            }),
            @ApiResponse(responseCode = "401", description = "Unauthorized"),
            @ApiResponse(responseCode = "403", description = "Forbidden")
        },
        security = {
            @SecurityRequirement(name = "CustomAuthentication")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/Videos/{itemId}/live.m3u8",
        produces = { "application/x-mpegURL" }
    )
    
    default ResponseEntity<org.springframework.core.io.Resource> getLiveHlsStream(
        @Parameter(name = "itemId", description = "The item id.", required = true, in = ParameterIn.PATH) @PathVariable("itemId") UUID itemId,
        @Parameter(name = "container", description = "The audio container.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "container", required = false) String container,
        @Parameter(name = "static", description = "Optional. If true, the original file will be streamed statically without any encoding. Use either no url extension or the original file extension. true/false.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "static", required = false) Boolean _static,
        @Parameter(name = "params", description = "The streaming parameters.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "params", required = false) String params,
        @Parameter(name = "tag", description = "The tag.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "tag", required = false) String tag,
        @Parameter(name = "deviceProfileId", description = "Optional. The dlna device profile id to utilize.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "deviceProfileId", required = false) String deviceProfileId,
        @Parameter(name = "playSessionId", description = "The play session id.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "playSessionId", required = false) String playSessionId,
        @Parameter(name = "segmentContainer", description = "The segment container.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "segmentContainer", required = false) String segmentContainer,
        @Parameter(name = "segmentLength", description = "The segment lenght.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "segmentLength", required = false) Integer segmentLength,
        @Parameter(name = "minSegments", description = "The minimum number of segments.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "minSegments", required = false) Integer minSegments,
        @Parameter(name = "mediaSourceId", description = "The media version id, if playing an alternate version.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "mediaSourceId", required = false) String mediaSourceId,
        @Parameter(name = "deviceId", description = "The device id of the client requesting. Used to stop encoding processes when needed.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "deviceId", required = false) String deviceId,
        @Parameter(name = "audioCodec", description = "Optional. Specify a audio codec to encode to, e.g. mp3. If omitted the server will auto-select using the url's extension. Options: aac, mp3, vorbis, wma.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioCodec", required = false) String audioCodec,
        @Parameter(name = "enableAutoStreamCopy", description = "Whether or not to allow automatic stream copy if requested values match the original source. Defaults to true.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "enableAutoStreamCopy", required = false) Boolean enableAutoStreamCopy,
        @Parameter(name = "allowVideoStreamCopy", description = "Whether or not to allow copying of the video stream url.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "allowVideoStreamCopy", required = false) Boolean allowVideoStreamCopy,
        @Parameter(name = "allowAudioStreamCopy", description = "Whether or not to allow copying of the audio stream url.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "allowAudioStreamCopy", required = false) Boolean allowAudioStreamCopy,
        @Parameter(name = "breakOnNonKeyFrames", description = "Optional. Whether to break on non key frames.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "breakOnNonKeyFrames", required = false) Boolean breakOnNonKeyFrames,
        @Parameter(name = "audioSampleRate", description = "Optional. Specify a specific audio sample rate, e.g. 44100.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioSampleRate", required = false) Integer audioSampleRate,
        @Parameter(name = "maxAudioBitDepth", description = "Optional. The maximum audio bit depth.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxAudioBitDepth", required = false) Integer maxAudioBitDepth,
        @Parameter(name = "audioBitRate", description = "Optional. Specify an audio bitrate to encode to, e.g. 128000. If omitted this will be left to encoder defaults.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioBitRate", required = false) Integer audioBitRate,
        @Parameter(name = "audioChannels", description = "Optional. Specify a specific number of audio channels to encode to, e.g. 2.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioChannels", required = false) Integer audioChannels,
        @Parameter(name = "maxAudioChannels", description = "Optional. Specify a maximum number of audio channels to encode to, e.g. 2.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxAudioChannels", required = false) Integer maxAudioChannels,
        @Parameter(name = "profile", description = "Optional. Specify a specific an encoder profile (varies by encoder), e.g. main, baseline, high.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "profile", required = false) String profile,
        @Parameter(name = "level", description = "Optional. Specify a level for the encoder profile (varies by encoder), e.g. 3, 3.1.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "level", required = false) String level,
        @Parameter(name = "framerate", description = "Optional. A specific video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "framerate", required = false) Float framerate,
        @Parameter(name = "maxFramerate", description = "Optional. A specific maximum video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxFramerate", required = false) Float maxFramerate,
        @Parameter(name = "copyTimestamps", description = "Whether or not to copy timestamps when transcoding with an offset. Defaults to false.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "copyTimestamps", required = false) Boolean copyTimestamps,
        @Parameter(name = "startTimeTicks", description = "Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "startTimeTicks", required = false) Long startTimeTicks,
        @Parameter(name = "width", description = "Optional. The fixed horizontal resolution of the encoded video.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "width", required = false) Integer width,
        @Parameter(name = "height", description = "Optional. The fixed vertical resolution of the encoded video.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "height", required = false) Integer height,
        @Parameter(name = "videoBitRate", description = "Optional. Specify a video bitrate to encode to, e.g. 500000. If omitted this will be left to encoder defaults.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "videoBitRate", required = false) Integer videoBitRate,
        @Parameter(name = "subtitleStreamIndex", description = "Optional. The index of the subtitle stream to use. If omitted no subtitles will be used.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "subtitleStreamIndex", required = false) Integer subtitleStreamIndex,
        @Parameter(name = "subtitleMethod", description = "Optional. Specify the subtitle delivery method.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "subtitleMethod", required = false) SubtitleDeliveryMethod subtitleMethod,
        @Parameter(name = "maxRefFrames", description = "Optional.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxRefFrames", required = false) Integer maxRefFrames,
        @Parameter(name = "maxVideoBitDepth", description = "Optional. The maximum video bit depth.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxVideoBitDepth", required = false) Integer maxVideoBitDepth,
        @Parameter(name = "requireAvc", description = "Optional. Whether to require avc.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "requireAvc", required = false) Boolean requireAvc,
        @Parameter(name = "deInterlace", description = "Optional. Whether to deinterlace the video.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "deInterlace", required = false) Boolean deInterlace,
        @Parameter(name = "requireNonAnamorphic", description = "Optional. Whether to require a non anamorphic stream.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "requireNonAnamorphic", required = false) Boolean requireNonAnamorphic,
        @Parameter(name = "transcodingMaxAudioChannels", description = "Optional. The maximum number of audio channels to transcode.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "transcodingMaxAudioChannels", required = false) Integer transcodingMaxAudioChannels,
        @Parameter(name = "cpuCoreLimit", description = "Optional. The limit of how many cpu cores to use.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "cpuCoreLimit", required = false) Integer cpuCoreLimit,
        @Parameter(name = "liveStreamId", description = "The live stream id.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "liveStreamId", required = false) String liveStreamId,
        @Parameter(name = "enableMpegtsM2TsMode", description = "Optional. Whether to enable the MpegtsM2Ts mode.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "enableMpegtsM2TsMode", required = false) Boolean enableMpegtsM2TsMode,
        @Parameter(name = "videoCodec", description = "Optional. Specify a video codec to encode to, e.g. h264. If omitted the server will auto-select using the url's extension. Options: h265, h264, mpeg4, theora, vpx, wmv.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "videoCodec", required = false) String videoCodec,
        @Parameter(name = "subtitleCodec", description = "Optional. Specify a subtitle codec to encode to.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "subtitleCodec", required = false) String subtitleCodec,
        @Parameter(name = "transcodeReasons", description = "Optional. The transcoding reason.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "transcodeReasons", required = false) String transcodeReasons,
        @Parameter(name = "audioStreamIndex", description = "Optional. The index of the audio stream to use. If omitted the first audio stream will be used.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioStreamIndex", required = false) Integer audioStreamIndex,
        @Parameter(name = "videoStreamIndex", description = "Optional. The index of the video stream to use. If omitted the first video stream will be used.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "videoStreamIndex", required = false) Integer videoStreamIndex,
        @Parameter(name = "context", description = "Optional. The MediaBrowser.Model.Dlna.EncodingContext.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "context", required = false) EncodingContext context,
        @Parameter(name = "streamOptions", description = "Optional. The streaming options.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "", required = false) Map<String, String> streamOptions,
        @Parameter(name = "maxWidth", description = "Optional. The max width.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxWidth", required = false) Integer maxWidth,
        @Parameter(name = "maxHeight", description = "Optional. The max height.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxHeight", required = false) Integer maxHeight,
        @Parameter(name = "enableSubtitlesInManifest", description = "Optional. Whether to enable subtitles in the manifest.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "enableSubtitlesInManifest", required = false) Boolean enableSubtitlesInManifest
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /Videos/{itemId}/master.m3u8 : Gets a video hls playlist stream.
     *
     * @param itemId The item id. (required)
     * @param mediaSourceId The media version id, if playing an alternate version. (required)
     * @param _static Optional. If true, the original file will be streamed statically without any encoding. Use either no url extension or the original file extension. true/false. (optional)
     * @param params The streaming parameters. (optional)
     * @param tag The tag. (optional)
     * @param deviceProfileId Optional. The dlna device profile id to utilize. (optional)
     * @param playSessionId The play session id. (optional)
     * @param segmentContainer The segment container. (optional)
     * @param segmentLength The segment length. (optional)
     * @param minSegments The minimum number of segments. (optional)
     * @param deviceId The device id of the client requesting. Used to stop encoding processes when needed. (optional)
     * @param audioCodec Optional. Specify a audio codec to encode to, e.g. mp3. If omitted the server will auto-select using the url&#39;s extension. Options: aac, mp3, vorbis, wma. (optional)
     * @param enableAutoStreamCopy Whether or not to allow automatic stream copy if requested values match the original source. Defaults to true. (optional)
     * @param allowVideoStreamCopy Whether or not to allow copying of the video stream url. (optional)
     * @param allowAudioStreamCopy Whether or not to allow copying of the audio stream url. (optional)
     * @param breakOnNonKeyFrames Optional. Whether to break on non key frames. (optional)
     * @param audioSampleRate Optional. Specify a specific audio sample rate, e.g. 44100. (optional)
     * @param maxAudioBitDepth Optional. The maximum audio bit depth. (optional)
     * @param audioBitRate Optional. Specify an audio bitrate to encode to, e.g. 128000. If omitted this will be left to encoder defaults. (optional)
     * @param audioChannels Optional. Specify a specific number of audio channels to encode to, e.g. 2. (optional)
     * @param maxAudioChannels Optional. Specify a maximum number of audio channels to encode to, e.g. 2. (optional)
     * @param profile Optional. Specify a specific an encoder profile (varies by encoder), e.g. main, baseline, high. (optional)
     * @param level Optional. Specify a level for the encoder profile (varies by encoder), e.g. 3, 3.1. (optional)
     * @param framerate Optional. A specific video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. (optional)
     * @param maxFramerate Optional. A specific maximum video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. (optional)
     * @param copyTimestamps Whether or not to copy timestamps when transcoding with an offset. Defaults to false. (optional)
     * @param startTimeTicks Optional. Specify a starting offset, in ticks. 1 tick &#x3D; 10000 ms. (optional)
     * @param width Optional. The fixed horizontal resolution of the encoded video. (optional)
     * @param height Optional. The fixed vertical resolution of the encoded video. (optional)
     * @param videoBitRate Optional. Specify a video bitrate to encode to, e.g. 500000. If omitted this will be left to encoder defaults. (optional)
     * @param subtitleStreamIndex Optional. The index of the subtitle stream to use. If omitted no subtitles will be used. (optional)
     * @param subtitleMethod Optional. Specify the subtitle delivery method. (optional)
     * @param maxRefFrames Optional. (optional)
     * @param maxVideoBitDepth Optional. The maximum video bit depth. (optional)
     * @param requireAvc Optional. Whether to require avc. (optional)
     * @param deInterlace Optional. Whether to deinterlace the video. (optional)
     * @param requireNonAnamorphic Optional. Whether to require a non anamorphic stream. (optional)
     * @param transcodingMaxAudioChannels Optional. The maximum number of audio channels to transcode. (optional)
     * @param cpuCoreLimit Optional. The limit of how many cpu cores to use. (optional)
     * @param liveStreamId The live stream id. (optional)
     * @param enableMpegtsM2TsMode Optional. Whether to enable the MpegtsM2Ts mode. (optional)
     * @param videoCodec Optional. Specify a video codec to encode to, e.g. h264. If omitted the server will auto-select using the url&#39;s extension. Options: h265, h264, mpeg4, theora, vpx, wmv. (optional)
     * @param subtitleCodec Optional. Specify a subtitle codec to encode to. (optional)
     * @param transcodeReasons Optional. The transcoding reason. (optional)
     * @param audioStreamIndex Optional. The index of the audio stream to use. If omitted the first audio stream will be used. (optional)
     * @param videoStreamIndex Optional. The index of the video stream to use. If omitted the first video stream will be used. (optional)
     * @param context Optional. The MediaBrowser.Model.Dlna.EncodingContext. (optional)
     * @param streamOptions Optional. The streaming options. (optional)
     * @param enableAdaptiveBitrateStreaming Enable adaptive bitrate streaming. (optional, default to true)
     * @return Video stream returned. (status code 200)
     *         or Unauthorized (status code 401)
     *         or Forbidden (status code 403)
     */
    @Operation(
        operationId = "getMasterHlsVideoPlaylist",
        summary = "Gets a video hls playlist stream.",
        tags = { "DynamicHls" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Video stream returned.", content = {
                @Content(mediaType = "application/x-mpegURL", schema = @Schema(implementation = org.springframework.core.io.Resource.class))
            }),
            @ApiResponse(responseCode = "401", description = "Unauthorized"),
            @ApiResponse(responseCode = "403", description = "Forbidden")
        },
        security = {
            @SecurityRequirement(name = "CustomAuthentication")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/Videos/{itemId}/master.m3u8",
        produces = { "application/x-mpegURL" }
    )
    
    default ResponseEntity<org.springframework.core.io.Resource> getMasterHlsVideoPlaylist(
        @Parameter(name = "itemId", description = "The item id.", required = true, in = ParameterIn.PATH) @PathVariable("itemId") UUID itemId,
        @NotNull @Parameter(name = "mediaSourceId", description = "The media version id, if playing an alternate version.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "mediaSourceId", required = true) String mediaSourceId,
        @Parameter(name = "static", description = "Optional. If true, the original file will be streamed statically without any encoding. Use either no url extension or the original file extension. true/false.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "static", required = false) Boolean _static,
        @Parameter(name = "params", description = "The streaming parameters.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "params", required = false) String params,
        @Parameter(name = "tag", description = "The tag.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "tag", required = false) String tag,
        @Parameter(name = "deviceProfileId", description = "Optional. The dlna device profile id to utilize.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "deviceProfileId", required = false) String deviceProfileId,
        @Parameter(name = "playSessionId", description = "The play session id.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "playSessionId", required = false) String playSessionId,
        @Parameter(name = "segmentContainer", description = "The segment container.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "segmentContainer", required = false) String segmentContainer,
        @Parameter(name = "segmentLength", description = "The segment length.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "segmentLength", required = false) Integer segmentLength,
        @Parameter(name = "minSegments", description = "The minimum number of segments.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "minSegments", required = false) Integer minSegments,
        @Parameter(name = "deviceId", description = "The device id of the client requesting. Used to stop encoding processes when needed.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "deviceId", required = false) String deviceId,
        @Parameter(name = "audioCodec", description = "Optional. Specify a audio codec to encode to, e.g. mp3. If omitted the server will auto-select using the url's extension. Options: aac, mp3, vorbis, wma.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioCodec", required = false) String audioCodec,
        @Parameter(name = "enableAutoStreamCopy", description = "Whether or not to allow automatic stream copy if requested values match the original source. Defaults to true.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "enableAutoStreamCopy", required = false) Boolean enableAutoStreamCopy,
        @Parameter(name = "allowVideoStreamCopy", description = "Whether or not to allow copying of the video stream url.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "allowVideoStreamCopy", required = false) Boolean allowVideoStreamCopy,
        @Parameter(name = "allowAudioStreamCopy", description = "Whether or not to allow copying of the audio stream url.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "allowAudioStreamCopy", required = false) Boolean allowAudioStreamCopy,
        @Parameter(name = "breakOnNonKeyFrames", description = "Optional. Whether to break on non key frames.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "breakOnNonKeyFrames", required = false) Boolean breakOnNonKeyFrames,
        @Parameter(name = "audioSampleRate", description = "Optional. Specify a specific audio sample rate, e.g. 44100.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioSampleRate", required = false) Integer audioSampleRate,
        @Parameter(name = "maxAudioBitDepth", description = "Optional. The maximum audio bit depth.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxAudioBitDepth", required = false) Integer maxAudioBitDepth,
        @Parameter(name = "audioBitRate", description = "Optional. Specify an audio bitrate to encode to, e.g. 128000. If omitted this will be left to encoder defaults.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioBitRate", required = false) Integer audioBitRate,
        @Parameter(name = "audioChannels", description = "Optional. Specify a specific number of audio channels to encode to, e.g. 2.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioChannels", required = false) Integer audioChannels,
        @Parameter(name = "maxAudioChannels", description = "Optional. Specify a maximum number of audio channels to encode to, e.g. 2.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxAudioChannels", required = false) Integer maxAudioChannels,
        @Parameter(name = "profile", description = "Optional. Specify a specific an encoder profile (varies by encoder), e.g. main, baseline, high.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "profile", required = false) String profile,
        @Parameter(name = "level", description = "Optional. Specify a level for the encoder profile (varies by encoder), e.g. 3, 3.1.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "level", required = false) String level,
        @Parameter(name = "framerate", description = "Optional. A specific video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "framerate", required = false) Float framerate,
        @Parameter(name = "maxFramerate", description = "Optional. A specific maximum video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxFramerate", required = false) Float maxFramerate,
        @Parameter(name = "copyTimestamps", description = "Whether or not to copy timestamps when transcoding with an offset. Defaults to false.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "copyTimestamps", required = false) Boolean copyTimestamps,
        @Parameter(name = "startTimeTicks", description = "Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "startTimeTicks", required = false) Long startTimeTicks,
        @Parameter(name = "width", description = "Optional. The fixed horizontal resolution of the encoded video.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "width", required = false) Integer width,
        @Parameter(name = "height", description = "Optional. The fixed vertical resolution of the encoded video.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "height", required = false) Integer height,
        @Parameter(name = "videoBitRate", description = "Optional. Specify a video bitrate to encode to, e.g. 500000. If omitted this will be left to encoder defaults.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "videoBitRate", required = false) Integer videoBitRate,
        @Parameter(name = "subtitleStreamIndex", description = "Optional. The index of the subtitle stream to use. If omitted no subtitles will be used.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "subtitleStreamIndex", required = false) Integer subtitleStreamIndex,
        @Parameter(name = "subtitleMethod", description = "Optional. Specify the subtitle delivery method.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "subtitleMethod", required = false) SubtitleDeliveryMethod subtitleMethod,
        @Parameter(name = "maxRefFrames", description = "Optional.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxRefFrames", required = false) Integer maxRefFrames,
        @Parameter(name = "maxVideoBitDepth", description = "Optional. The maximum video bit depth.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxVideoBitDepth", required = false) Integer maxVideoBitDepth,
        @Parameter(name = "requireAvc", description = "Optional. Whether to require avc.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "requireAvc", required = false) Boolean requireAvc,
        @Parameter(name = "deInterlace", description = "Optional. Whether to deinterlace the video.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "deInterlace", required = false) Boolean deInterlace,
        @Parameter(name = "requireNonAnamorphic", description = "Optional. Whether to require a non anamorphic stream.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "requireNonAnamorphic", required = false) Boolean requireNonAnamorphic,
        @Parameter(name = "transcodingMaxAudioChannels", description = "Optional. The maximum number of audio channels to transcode.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "transcodingMaxAudioChannels", required = false) Integer transcodingMaxAudioChannels,
        @Parameter(name = "cpuCoreLimit", description = "Optional. The limit of how many cpu cores to use.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "cpuCoreLimit", required = false) Integer cpuCoreLimit,
        @Parameter(name = "liveStreamId", description = "The live stream id.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "liveStreamId", required = false) String liveStreamId,
        @Parameter(name = "enableMpegtsM2TsMode", description = "Optional. Whether to enable the MpegtsM2Ts mode.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "enableMpegtsM2TsMode", required = false) Boolean enableMpegtsM2TsMode,
        @Parameter(name = "videoCodec", description = "Optional. Specify a video codec to encode to, e.g. h264. If omitted the server will auto-select using the url's extension. Options: h265, h264, mpeg4, theora, vpx, wmv.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "videoCodec", required = false) String videoCodec,
        @Parameter(name = "subtitleCodec", description = "Optional. Specify a subtitle codec to encode to.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "subtitleCodec", required = false) String subtitleCodec,
        @Parameter(name = "transcodeReasons", description = "Optional. The transcoding reason.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "transcodeReasons", required = false) String transcodeReasons,
        @Parameter(name = "audioStreamIndex", description = "Optional. The index of the audio stream to use. If omitted the first audio stream will be used.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioStreamIndex", required = false) Integer audioStreamIndex,
        @Parameter(name = "videoStreamIndex", description = "Optional. The index of the video stream to use. If omitted the first video stream will be used.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "videoStreamIndex", required = false) Integer videoStreamIndex,
        @Parameter(name = "context", description = "Optional. The MediaBrowser.Model.Dlna.EncodingContext.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "context", required = false) EncodingContext context,
        @Parameter(name = "streamOptions", description = "Optional. The streaming options.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "", required = false) Map<String, String> streamOptions,
        @Parameter(name = "enableAdaptiveBitrateStreaming", description = "Enable adaptive bitrate streaming.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "enableAdaptiveBitrateStreaming", required = false, defaultValue = "true") Boolean enableAdaptiveBitrateStreaming
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /Videos/{itemId}/{mediaSourceId}/Subtitles/{index}/Stream.{format} : Gets subtitles in a specified format.
     *
     * @param itemId The item id. (required)
     * @param mediaSourceId The media source id. (required)
     * @param index The subtitle stream index. (required)
     * @param format The format of the returned subtitle. (required)
     * @param endPositionTicks Optional. The end position of the subtitle in ticks. (optional)
     * @param copyTimestamps Optional. Whether to copy the timestamps. (optional, default to false)
     * @param addVttTimeMap Optional. Whether to add a VTT time map. (optional, default to false)
     * @param startPositionTicks Optional. The start position of the subtitle in ticks. (optional, default to 0)
     * @return File returned. (status code 200)
     */
    @Operation(
        operationId = "getSubtitle",
        summary = "Gets subtitles in a specified format.",
        tags = { "Subtitle" },
        responses = {
            @ApiResponse(responseCode = "200", description = "File returned.", content = {
                @Content(mediaType = "text/*", schema = @Schema(implementation = org.springframework.core.io.Resource.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/Videos/{itemId}/{mediaSourceId}/Subtitles/{index}/Stream.{format}",
        produces = { "text/*" }
    )
    
    default ResponseEntity<org.springframework.core.io.Resource> getSubtitle(
        @Parameter(name = "itemId", description = "The item id.", required = true, in = ParameterIn.PATH) @PathVariable("itemId") UUID itemId,
        @Parameter(name = "mediaSourceId", description = "The media source id.", required = true, in = ParameterIn.PATH) @PathVariable("mediaSourceId") String mediaSourceId,
        @Parameter(name = "index", description = "The subtitle stream index.", required = true, in = ParameterIn.PATH) @PathVariable("index") Integer index,
        @Parameter(name = "format", description = "The format of the returned subtitle.", required = true, in = ParameterIn.PATH) @PathVariable("format") String format,
        @Parameter(name = "endPositionTicks", description = "Optional. The end position of the subtitle in ticks.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "endPositionTicks", required = false) Long endPositionTicks,
        @Parameter(name = "copyTimestamps", description = "Optional. Whether to copy the timestamps.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "copyTimestamps", required = false, defaultValue = "false") Boolean copyTimestamps,
        @Parameter(name = "addVttTimeMap", description = "Optional. Whether to add a VTT time map.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "addVttTimeMap", required = false, defaultValue = "false") Boolean addVttTimeMap,
        @Parameter(name = "startPositionTicks", description = "Optional. The start position of the subtitle in ticks.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "startPositionTicks", required = false, defaultValue = "0") Long startPositionTicks
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /Videos/{itemId}/{mediaSourceId}/Subtitles/{index}/subtitles.m3u8 : Gets an HLS subtitle playlist.
     *
     * @param itemId The item id. (required)
     * @param index The subtitle stream index. (required)
     * @param mediaSourceId The media source id. (required)
     * @param segmentLength The subtitle segment length. (required)
     * @return Subtitle playlist retrieved. (status code 200)
     *         or Unauthorized (status code 401)
     *         or Forbidden (status code 403)
     */
    @Operation(
        operationId = "getSubtitlePlaylist",
        summary = "Gets an HLS subtitle playlist.",
        tags = { "Subtitle" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Subtitle playlist retrieved.", content = {
                @Content(mediaType = "application/x-mpegURL", schema = @Schema(implementation = org.springframework.core.io.Resource.class))
            }),
            @ApiResponse(responseCode = "401", description = "Unauthorized"),
            @ApiResponse(responseCode = "403", description = "Forbidden")
        },
        security = {
            @SecurityRequirement(name = "CustomAuthentication")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/Videos/{itemId}/{mediaSourceId}/Subtitles/{index}/subtitles.m3u8",
        produces = { "application/x-mpegURL" }
    )
    
    default ResponseEntity<org.springframework.core.io.Resource> getSubtitlePlaylist(
        @Parameter(name = "itemId", description = "The item id.", required = true, in = ParameterIn.PATH) @PathVariable("itemId") UUID itemId,
        @Parameter(name = "index", description = "The subtitle stream index.", required = true, in = ParameterIn.PATH) @PathVariable("index") Integer index,
        @Parameter(name = "mediaSourceId", description = "The media source id.", required = true, in = ParameterIn.PATH) @PathVariable("mediaSourceId") String mediaSourceId,
        @NotNull @Parameter(name = "segmentLength", description = "The subtitle segment length.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "segmentLength", required = true) Integer segmentLength
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /Videos/{itemId}/{mediaSourceId}/Subtitles/{index}/{startPositionTicks}/Stream.{format} : Gets subtitles in a specified format.
     *
     * @param itemId The item id. (required)
     * @param mediaSourceId The media source id. (required)
     * @param index The subtitle stream index. (required)
     * @param startPositionTicks Optional. The start position of the subtitle in ticks. (required)
     * @param format The format of the returned subtitle. (required)
     * @param endPositionTicks Optional. The end position of the subtitle in ticks. (optional)
     * @param copyTimestamps Optional. Whether to copy the timestamps. (optional, default to false)
     * @param addVttTimeMap Optional. Whether to add a VTT time map. (optional, default to false)
     * @return File returned. (status code 200)
     */
    @Operation(
        operationId = "getSubtitleWithTicks",
        summary = "Gets subtitles in a specified format.",
        tags = { "Subtitle" },
        responses = {
            @ApiResponse(responseCode = "200", description = "File returned.", content = {
                @Content(mediaType = "text/*", schema = @Schema(implementation = org.springframework.core.io.Resource.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/Videos/{itemId}/{mediaSourceId}/Subtitles/{index}/{startPositionTicks}/Stream.{format}",
        produces = { "text/*" }
    )
    
    default ResponseEntity<org.springframework.core.io.Resource> getSubtitleWithTicks(
        @Parameter(name = "itemId", description = "The item id.", required = true, in = ParameterIn.PATH) @PathVariable("itemId") UUID itemId,
        @Parameter(name = "mediaSourceId", description = "The media source id.", required = true, in = ParameterIn.PATH) @PathVariable("mediaSourceId") String mediaSourceId,
        @Parameter(name = "index", description = "The subtitle stream index.", required = true, in = ParameterIn.PATH) @PathVariable("index") Integer index,
        @Parameter(name = "startPositionTicks", description = "Optional. The start position of the subtitle in ticks.", required = true, in = ParameterIn.PATH) @PathVariable("startPositionTicks") Long startPositionTicks,
        @Parameter(name = "format", description = "The format of the returned subtitle.", required = true, in = ParameterIn.PATH) @PathVariable("format") String format,
        @Parameter(name = "endPositionTicks", description = "Optional. The end position of the subtitle in ticks.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "endPositionTicks", required = false) Long endPositionTicks,
        @Parameter(name = "copyTimestamps", description = "Optional. Whether to copy the timestamps.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "copyTimestamps", required = false, defaultValue = "false") Boolean copyTimestamps,
        @Parameter(name = "addVttTimeMap", description = "Optional. Whether to add a VTT time map.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "addVttTimeMap", required = false, defaultValue = "false") Boolean addVttTimeMap
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /Videos/{itemId}/main.m3u8 : Gets a video stream using HTTP live streaming.
     *
     * @param itemId The item id. (required)
     * @param _static Optional. If true, the original file will be streamed statically without any encoding. Use either no url extension or the original file extension. true/false. (optional)
     * @param params The streaming parameters. (optional)
     * @param tag The tag. (optional)
     * @param deviceProfileId Optional. The dlna device profile id to utilize. (optional)
     * @param playSessionId The play session id. (optional)
     * @param segmentContainer The segment container. (optional)
     * @param segmentLength The segment length. (optional)
     * @param minSegments The minimum number of segments. (optional)
     * @param mediaSourceId The media version id, if playing an alternate version. (optional)
     * @param deviceId The device id of the client requesting. Used to stop encoding processes when needed. (optional)
     * @param audioCodec Optional. Specify a audio codec to encode to, e.g. mp3. If omitted the server will auto-select using the url&#39;s extension. Options: aac, mp3, vorbis, wma. (optional)
     * @param enableAutoStreamCopy Whether or not to allow automatic stream copy if requested values match the original source. Defaults to true. (optional)
     * @param allowVideoStreamCopy Whether or not to allow copying of the video stream url. (optional)
     * @param allowAudioStreamCopy Whether or not to allow copying of the audio stream url. (optional)
     * @param breakOnNonKeyFrames Optional. Whether to break on non key frames. (optional)
     * @param audioSampleRate Optional. Specify a specific audio sample rate, e.g. 44100. (optional)
     * @param maxAudioBitDepth Optional. The maximum audio bit depth. (optional)
     * @param audioBitRate Optional. Specify an audio bitrate to encode to, e.g. 128000. If omitted this will be left to encoder defaults. (optional)
     * @param audioChannels Optional. Specify a specific number of audio channels to encode to, e.g. 2. (optional)
     * @param maxAudioChannels Optional. Specify a maximum number of audio channels to encode to, e.g. 2. (optional)
     * @param profile Optional. Specify a specific an encoder profile (varies by encoder), e.g. main, baseline, high. (optional)
     * @param level Optional. Specify a level for the encoder profile (varies by encoder), e.g. 3, 3.1. (optional)
     * @param framerate Optional. A specific video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. (optional)
     * @param maxFramerate Optional. A specific maximum video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. (optional)
     * @param copyTimestamps Whether or not to copy timestamps when transcoding with an offset. Defaults to false. (optional)
     * @param startTimeTicks Optional. Specify a starting offset, in ticks. 1 tick &#x3D; 10000 ms. (optional)
     * @param width Optional. The fixed horizontal resolution of the encoded video. (optional)
     * @param height Optional. The fixed vertical resolution of the encoded video. (optional)
     * @param videoBitRate Optional. Specify a video bitrate to encode to, e.g. 500000. If omitted this will be left to encoder defaults. (optional)
     * @param subtitleStreamIndex Optional. The index of the subtitle stream to use. If omitted no subtitles will be used. (optional)
     * @param subtitleMethod Optional. Specify the subtitle delivery method. (optional)
     * @param maxRefFrames Optional. (optional)
     * @param maxVideoBitDepth Optional. The maximum video bit depth. (optional)
     * @param requireAvc Optional. Whether to require avc. (optional)
     * @param deInterlace Optional. Whether to deinterlace the video. (optional)
     * @param requireNonAnamorphic Optional. Whether to require a non anamorphic stream. (optional)
     * @param transcodingMaxAudioChannels Optional. The maximum number of audio channels to transcode. (optional)
     * @param cpuCoreLimit Optional. The limit of how many cpu cores to use. (optional)
     * @param liveStreamId The live stream id. (optional)
     * @param enableMpegtsM2TsMode Optional. Whether to enable the MpegtsM2Ts mode. (optional)
     * @param videoCodec Optional. Specify a video codec to encode to, e.g. h264. If omitted the server will auto-select using the url&#39;s extension. Options: h265, h264, mpeg4, theora, vpx, wmv. (optional)
     * @param subtitleCodec Optional. Specify a subtitle codec to encode to. (optional)
     * @param transcodeReasons Optional. The transcoding reason. (optional)
     * @param audioStreamIndex Optional. The index of the audio stream to use. If omitted the first audio stream will be used. (optional)
     * @param videoStreamIndex Optional. The index of the video stream to use. If omitted the first video stream will be used. (optional)
     * @param context Optional. The MediaBrowser.Model.Dlna.EncodingContext. (optional)
     * @param streamOptions Optional. The streaming options. (optional)
     * @return Video stream returned. (status code 200)
     *         or Unauthorized (status code 401)
     *         or Forbidden (status code 403)
     */
    @Operation(
        operationId = "getVariantHlsVideoPlaylist",
        summary = "Gets a video stream using HTTP live streaming.",
        tags = { "DynamicHls" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Video stream returned.", content = {
                @Content(mediaType = "application/x-mpegURL", schema = @Schema(implementation = org.springframework.core.io.Resource.class))
            }),
            @ApiResponse(responseCode = "401", description = "Unauthorized"),
            @ApiResponse(responseCode = "403", description = "Forbidden")
        },
        security = {
            @SecurityRequirement(name = "CustomAuthentication")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/Videos/{itemId}/main.m3u8",
        produces = { "application/x-mpegURL" }
    )
    
    default ResponseEntity<org.springframework.core.io.Resource> getVariantHlsVideoPlaylist(
        @Parameter(name = "itemId", description = "The item id.", required = true, in = ParameterIn.PATH) @PathVariable("itemId") UUID itemId,
        @Parameter(name = "static", description = "Optional. If true, the original file will be streamed statically without any encoding. Use either no url extension or the original file extension. true/false.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "static", required = false) Boolean _static,
        @Parameter(name = "params", description = "The streaming parameters.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "params", required = false) String params,
        @Parameter(name = "tag", description = "The tag.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "tag", required = false) String tag,
        @Parameter(name = "deviceProfileId", description = "Optional. The dlna device profile id to utilize.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "deviceProfileId", required = false) String deviceProfileId,
        @Parameter(name = "playSessionId", description = "The play session id.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "playSessionId", required = false) String playSessionId,
        @Parameter(name = "segmentContainer", description = "The segment container.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "segmentContainer", required = false) String segmentContainer,
        @Parameter(name = "segmentLength", description = "The segment length.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "segmentLength", required = false) Integer segmentLength,
        @Parameter(name = "minSegments", description = "The minimum number of segments.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "minSegments", required = false) Integer minSegments,
        @Parameter(name = "mediaSourceId", description = "The media version id, if playing an alternate version.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "mediaSourceId", required = false) String mediaSourceId,
        @Parameter(name = "deviceId", description = "The device id of the client requesting. Used to stop encoding processes when needed.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "deviceId", required = false) String deviceId,
        @Parameter(name = "audioCodec", description = "Optional. Specify a audio codec to encode to, e.g. mp3. If omitted the server will auto-select using the url's extension. Options: aac, mp3, vorbis, wma.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioCodec", required = false) String audioCodec,
        @Parameter(name = "enableAutoStreamCopy", description = "Whether or not to allow automatic stream copy if requested values match the original source. Defaults to true.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "enableAutoStreamCopy", required = false) Boolean enableAutoStreamCopy,
        @Parameter(name = "allowVideoStreamCopy", description = "Whether or not to allow copying of the video stream url.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "allowVideoStreamCopy", required = false) Boolean allowVideoStreamCopy,
        @Parameter(name = "allowAudioStreamCopy", description = "Whether or not to allow copying of the audio stream url.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "allowAudioStreamCopy", required = false) Boolean allowAudioStreamCopy,
        @Parameter(name = "breakOnNonKeyFrames", description = "Optional. Whether to break on non key frames.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "breakOnNonKeyFrames", required = false) Boolean breakOnNonKeyFrames,
        @Parameter(name = "audioSampleRate", description = "Optional. Specify a specific audio sample rate, e.g. 44100.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioSampleRate", required = false) Integer audioSampleRate,
        @Parameter(name = "maxAudioBitDepth", description = "Optional. The maximum audio bit depth.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxAudioBitDepth", required = false) Integer maxAudioBitDepth,
        @Parameter(name = "audioBitRate", description = "Optional. Specify an audio bitrate to encode to, e.g. 128000. If omitted this will be left to encoder defaults.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioBitRate", required = false) Integer audioBitRate,
        @Parameter(name = "audioChannels", description = "Optional. Specify a specific number of audio channels to encode to, e.g. 2.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioChannels", required = false) Integer audioChannels,
        @Parameter(name = "maxAudioChannels", description = "Optional. Specify a maximum number of audio channels to encode to, e.g. 2.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxAudioChannels", required = false) Integer maxAudioChannels,
        @Parameter(name = "profile", description = "Optional. Specify a specific an encoder profile (varies by encoder), e.g. main, baseline, high.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "profile", required = false) String profile,
        @Parameter(name = "level", description = "Optional. Specify a level for the encoder profile (varies by encoder), e.g. 3, 3.1.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "level", required = false) String level,
        @Parameter(name = "framerate", description = "Optional. A specific video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "framerate", required = false) Float framerate,
        @Parameter(name = "maxFramerate", description = "Optional. A specific maximum video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxFramerate", required = false) Float maxFramerate,
        @Parameter(name = "copyTimestamps", description = "Whether or not to copy timestamps when transcoding with an offset. Defaults to false.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "copyTimestamps", required = false) Boolean copyTimestamps,
        @Parameter(name = "startTimeTicks", description = "Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "startTimeTicks", required = false) Long startTimeTicks,
        @Parameter(name = "width", description = "Optional. The fixed horizontal resolution of the encoded video.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "width", required = false) Integer width,
        @Parameter(name = "height", description = "Optional. The fixed vertical resolution of the encoded video.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "height", required = false) Integer height,
        @Parameter(name = "videoBitRate", description = "Optional. Specify a video bitrate to encode to, e.g. 500000. If omitted this will be left to encoder defaults.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "videoBitRate", required = false) Integer videoBitRate,
        @Parameter(name = "subtitleStreamIndex", description = "Optional. The index of the subtitle stream to use. If omitted no subtitles will be used.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "subtitleStreamIndex", required = false) Integer subtitleStreamIndex,
        @Parameter(name = "subtitleMethod", description = "Optional. Specify the subtitle delivery method.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "subtitleMethod", required = false) SubtitleDeliveryMethod subtitleMethod,
        @Parameter(name = "maxRefFrames", description = "Optional.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxRefFrames", required = false) Integer maxRefFrames,
        @Parameter(name = "maxVideoBitDepth", description = "Optional. The maximum video bit depth.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxVideoBitDepth", required = false) Integer maxVideoBitDepth,
        @Parameter(name = "requireAvc", description = "Optional. Whether to require avc.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "requireAvc", required = false) Boolean requireAvc,
        @Parameter(name = "deInterlace", description = "Optional. Whether to deinterlace the video.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "deInterlace", required = false) Boolean deInterlace,
        @Parameter(name = "requireNonAnamorphic", description = "Optional. Whether to require a non anamorphic stream.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "requireNonAnamorphic", required = false) Boolean requireNonAnamorphic,
        @Parameter(name = "transcodingMaxAudioChannels", description = "Optional. The maximum number of audio channels to transcode.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "transcodingMaxAudioChannels", required = false) Integer transcodingMaxAudioChannels,
        @Parameter(name = "cpuCoreLimit", description = "Optional. The limit of how many cpu cores to use.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "cpuCoreLimit", required = false) Integer cpuCoreLimit,
        @Parameter(name = "liveStreamId", description = "The live stream id.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "liveStreamId", required = false) String liveStreamId,
        @Parameter(name = "enableMpegtsM2TsMode", description = "Optional. Whether to enable the MpegtsM2Ts mode.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "enableMpegtsM2TsMode", required = false) Boolean enableMpegtsM2TsMode,
        @Parameter(name = "videoCodec", description = "Optional. Specify a video codec to encode to, e.g. h264. If omitted the server will auto-select using the url's extension. Options: h265, h264, mpeg4, theora, vpx, wmv.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "videoCodec", required = false) String videoCodec,
        @Parameter(name = "subtitleCodec", description = "Optional. Specify a subtitle codec to encode to.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "subtitleCodec", required = false) String subtitleCodec,
        @Parameter(name = "transcodeReasons", description = "Optional. The transcoding reason.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "transcodeReasons", required = false) String transcodeReasons,
        @Parameter(name = "audioStreamIndex", description = "Optional. The index of the audio stream to use. If omitted the first audio stream will be used.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioStreamIndex", required = false) Integer audioStreamIndex,
        @Parameter(name = "videoStreamIndex", description = "Optional. The index of the video stream to use. If omitted the first video stream will be used.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "videoStreamIndex", required = false) Integer videoStreamIndex,
        @Parameter(name = "context", description = "Optional. The MediaBrowser.Model.Dlna.EncodingContext.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "context", required = false) EncodingContext context,
        @Parameter(name = "streamOptions", description = "Optional. The streaming options.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "", required = false) Map<String, String> streamOptions
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /Videos/{itemId}/stream : Gets a video stream.
     *
     * @param itemId The item id. (required)
     * @param container The video container. Possible values are: ts, webm, asf, wmv, ogv, mp4, m4v, mkv, mpeg, mpg, avi, 3gp, wmv, wtv, m2ts, mov, iso, flv. (optional)
     * @param _static Optional. If true, the original file will be streamed statically without any encoding. Use either no url extension or the original file extension. true/false. (optional)
     * @param params The streaming parameters. (optional)
     * @param tag The tag. (optional)
     * @param deviceProfileId Optional. The dlna device profile id to utilize. (optional)
     * @param playSessionId The play session id. (optional)
     * @param segmentContainer The segment container. (optional)
     * @param segmentLength The segment length. (optional)
     * @param minSegments The minimum number of segments. (optional)
     * @param mediaSourceId The media version id, if playing an alternate version. (optional)
     * @param deviceId The device id of the client requesting. Used to stop encoding processes when needed. (optional)
     * @param audioCodec Optional. Specify a audio codec to encode to, e.g. mp3. If omitted the server will auto-select using the url&#39;s extension. Options: aac, mp3, vorbis, wma. (optional)
     * @param enableAutoStreamCopy Whether or not to allow automatic stream copy if requested values match the original source. Defaults to true. (optional)
     * @param allowVideoStreamCopy Whether or not to allow copying of the video stream url. (optional)
     * @param allowAudioStreamCopy Whether or not to allow copying of the audio stream url. (optional)
     * @param breakOnNonKeyFrames Optional. Whether to break on non key frames. (optional)
     * @param audioSampleRate Optional. Specify a specific audio sample rate, e.g. 44100. (optional)
     * @param maxAudioBitDepth Optional. The maximum audio bit depth. (optional)
     * @param audioBitRate Optional. Specify an audio bitrate to encode to, e.g. 128000. If omitted this will be left to encoder defaults. (optional)
     * @param audioChannels Optional. Specify a specific number of audio channels to encode to, e.g. 2. (optional)
     * @param maxAudioChannels Optional. Specify a maximum number of audio channels to encode to, e.g. 2. (optional)
     * @param profile Optional. Specify a specific an encoder profile (varies by encoder), e.g. main, baseline, high. (optional)
     * @param level Optional. Specify a level for the encoder profile (varies by encoder), e.g. 3, 3.1. (optional)
     * @param framerate Optional. A specific video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. (optional)
     * @param maxFramerate Optional. A specific maximum video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. (optional)
     * @param copyTimestamps Whether or not to copy timestamps when transcoding with an offset. Defaults to false. (optional)
     * @param startTimeTicks Optional. Specify a starting offset, in ticks. 1 tick &#x3D; 10000 ms. (optional)
     * @param width Optional. The fixed horizontal resolution of the encoded video. (optional)
     * @param height Optional. The fixed vertical resolution of the encoded video. (optional)
     * @param videoBitRate Optional. Specify a video bitrate to encode to, e.g. 500000. If omitted this will be left to encoder defaults. (optional)
     * @param subtitleStreamIndex Optional. The index of the subtitle stream to use. If omitted no subtitles will be used. (optional)
     * @param subtitleMethod Optional. Specify the subtitle delivery method. (optional)
     * @param maxRefFrames Optional. (optional)
     * @param maxVideoBitDepth Optional. The maximum video bit depth. (optional)
     * @param requireAvc Optional. Whether to require avc. (optional)
     * @param deInterlace Optional. Whether to deinterlace the video. (optional)
     * @param requireNonAnamorphic Optional. Whether to require a non anamorphic stream. (optional)
     * @param transcodingMaxAudioChannels Optional. The maximum number of audio channels to transcode. (optional)
     * @param cpuCoreLimit Optional. The limit of how many cpu cores to use. (optional)
     * @param liveStreamId The live stream id. (optional)
     * @param enableMpegtsM2TsMode Optional. Whether to enable the MpegtsM2Ts mode. (optional)
     * @param videoCodec Optional. Specify a video codec to encode to, e.g. h264. If omitted the server will auto-select using the url&#39;s extension. Options: h265, h264, mpeg4, theora, vpx, wmv. (optional)
     * @param subtitleCodec Optional. Specify a subtitle codec to encode to. (optional)
     * @param transcodeReasons Optional. The transcoding reason. (optional)
     * @param audioStreamIndex Optional. The index of the audio stream to use. If omitted the first audio stream will be used. (optional)
     * @param videoStreamIndex Optional. The index of the video stream to use. If omitted the first video stream will be used. (optional)
     * @param context Optional. The MediaBrowser.Model.Dlna.EncodingContext. (optional)
     * @param streamOptions Optional. The streaming options. (optional)
     * @return Video stream returned. (status code 200)
     */
    @Operation(
        operationId = "getVideoStream",
        summary = "Gets a video stream.",
        tags = { "Videos" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Video stream returned.", content = {
                @Content(mediaType = "video/*", schema = @Schema(implementation = org.springframework.core.io.Resource.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/Videos/{itemId}/stream",
        produces = { "video/*" }
    )
    
    default ResponseEntity<org.springframework.core.io.Resource> getVideoStream(
        @Parameter(name = "itemId", description = "The item id.", required = true, in = ParameterIn.PATH) @PathVariable("itemId") UUID itemId,
        @Parameter(name = "container", description = "The video container. Possible values are: ts, webm, asf, wmv, ogv, mp4, m4v, mkv, mpeg, mpg, avi, 3gp, wmv, wtv, m2ts, mov, iso, flv.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "container", required = false) String container,
        @Parameter(name = "static", description = "Optional. If true, the original file will be streamed statically without any encoding. Use either no url extension or the original file extension. true/false.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "static", required = false) Boolean _static,
        @Parameter(name = "params", description = "The streaming parameters.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "params", required = false) String params,
        @Parameter(name = "tag", description = "The tag.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "tag", required = false) String tag,
        @Parameter(name = "deviceProfileId", description = "Optional. The dlna device profile id to utilize.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "deviceProfileId", required = false) String deviceProfileId,
        @Parameter(name = "playSessionId", description = "The play session id.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "playSessionId", required = false) String playSessionId,
        @Parameter(name = "segmentContainer", description = "The segment container.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "segmentContainer", required = false) String segmentContainer,
        @Parameter(name = "segmentLength", description = "The segment length.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "segmentLength", required = false) Integer segmentLength,
        @Parameter(name = "minSegments", description = "The minimum number of segments.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "minSegments", required = false) Integer minSegments,
        @Parameter(name = "mediaSourceId", description = "The media version id, if playing an alternate version.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "mediaSourceId", required = false) String mediaSourceId,
        @Parameter(name = "deviceId", description = "The device id of the client requesting. Used to stop encoding processes when needed.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "deviceId", required = false) String deviceId,
        @Parameter(name = "audioCodec", description = "Optional. Specify a audio codec to encode to, e.g. mp3. If omitted the server will auto-select using the url's extension. Options: aac, mp3, vorbis, wma.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioCodec", required = false) String audioCodec,
        @Parameter(name = "enableAutoStreamCopy", description = "Whether or not to allow automatic stream copy if requested values match the original source. Defaults to true.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "enableAutoStreamCopy", required = false) Boolean enableAutoStreamCopy,
        @Parameter(name = "allowVideoStreamCopy", description = "Whether or not to allow copying of the video stream url.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "allowVideoStreamCopy", required = false) Boolean allowVideoStreamCopy,
        @Parameter(name = "allowAudioStreamCopy", description = "Whether or not to allow copying of the audio stream url.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "allowAudioStreamCopy", required = false) Boolean allowAudioStreamCopy,
        @Parameter(name = "breakOnNonKeyFrames", description = "Optional. Whether to break on non key frames.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "breakOnNonKeyFrames", required = false) Boolean breakOnNonKeyFrames,
        @Parameter(name = "audioSampleRate", description = "Optional. Specify a specific audio sample rate, e.g. 44100.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioSampleRate", required = false) Integer audioSampleRate,
        @Parameter(name = "maxAudioBitDepth", description = "Optional. The maximum audio bit depth.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxAudioBitDepth", required = false) Integer maxAudioBitDepth,
        @Parameter(name = "audioBitRate", description = "Optional. Specify an audio bitrate to encode to, e.g. 128000. If omitted this will be left to encoder defaults.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioBitRate", required = false) Integer audioBitRate,
        @Parameter(name = "audioChannels", description = "Optional. Specify a specific number of audio channels to encode to, e.g. 2.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioChannels", required = false) Integer audioChannels,
        @Parameter(name = "maxAudioChannels", description = "Optional. Specify a maximum number of audio channels to encode to, e.g. 2.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxAudioChannels", required = false) Integer maxAudioChannels,
        @Parameter(name = "profile", description = "Optional. Specify a specific an encoder profile (varies by encoder), e.g. main, baseline, high.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "profile", required = false) String profile,
        @Parameter(name = "level", description = "Optional. Specify a level for the encoder profile (varies by encoder), e.g. 3, 3.1.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "level", required = false) String level,
        @Parameter(name = "framerate", description = "Optional. A specific video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "framerate", required = false) Float framerate,
        @Parameter(name = "maxFramerate", description = "Optional. A specific maximum video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxFramerate", required = false) Float maxFramerate,
        @Parameter(name = "copyTimestamps", description = "Whether or not to copy timestamps when transcoding with an offset. Defaults to false.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "copyTimestamps", required = false) Boolean copyTimestamps,
        @Parameter(name = "startTimeTicks", description = "Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "startTimeTicks", required = false) Long startTimeTicks,
        @Parameter(name = "width", description = "Optional. The fixed horizontal resolution of the encoded video.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "width", required = false) Integer width,
        @Parameter(name = "height", description = "Optional. The fixed vertical resolution of the encoded video.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "height", required = false) Integer height,
        @Parameter(name = "videoBitRate", description = "Optional. Specify a video bitrate to encode to, e.g. 500000. If omitted this will be left to encoder defaults.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "videoBitRate", required = false) Integer videoBitRate,
        @Parameter(name = "subtitleStreamIndex", description = "Optional. The index of the subtitle stream to use. If omitted no subtitles will be used.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "subtitleStreamIndex", required = false) Integer subtitleStreamIndex,
        @Parameter(name = "subtitleMethod", description = "Optional. Specify the subtitle delivery method.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "subtitleMethod", required = false) SubtitleDeliveryMethod subtitleMethod,
        @Parameter(name = "maxRefFrames", description = "Optional.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxRefFrames", required = false) Integer maxRefFrames,
        @Parameter(name = "maxVideoBitDepth", description = "Optional. The maximum video bit depth.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxVideoBitDepth", required = false) Integer maxVideoBitDepth,
        @Parameter(name = "requireAvc", description = "Optional. Whether to require avc.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "requireAvc", required = false) Boolean requireAvc,
        @Parameter(name = "deInterlace", description = "Optional. Whether to deinterlace the video.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "deInterlace", required = false) Boolean deInterlace,
        @Parameter(name = "requireNonAnamorphic", description = "Optional. Whether to require a non anamorphic stream.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "requireNonAnamorphic", required = false) Boolean requireNonAnamorphic,
        @Parameter(name = "transcodingMaxAudioChannels", description = "Optional. The maximum number of audio channels to transcode.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "transcodingMaxAudioChannels", required = false) Integer transcodingMaxAudioChannels,
        @Parameter(name = "cpuCoreLimit", description = "Optional. The limit of how many cpu cores to use.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "cpuCoreLimit", required = false) Integer cpuCoreLimit,
        @Parameter(name = "liveStreamId", description = "The live stream id.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "liveStreamId", required = false) String liveStreamId,
        @Parameter(name = "enableMpegtsM2TsMode", description = "Optional. Whether to enable the MpegtsM2Ts mode.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "enableMpegtsM2TsMode", required = false) Boolean enableMpegtsM2TsMode,
        @Parameter(name = "videoCodec", description = "Optional. Specify a video codec to encode to, e.g. h264. If omitted the server will auto-select using the url's extension. Options: h265, h264, mpeg4, theora, vpx, wmv.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "videoCodec", required = false) String videoCodec,
        @Parameter(name = "subtitleCodec", description = "Optional. Specify a subtitle codec to encode to.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "subtitleCodec", required = false) String subtitleCodec,
        @Parameter(name = "transcodeReasons", description = "Optional. The transcoding reason.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "transcodeReasons", required = false) String transcodeReasons,
        @Parameter(name = "audioStreamIndex", description = "Optional. The index of the audio stream to use. If omitted the first audio stream will be used.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioStreamIndex", required = false) Integer audioStreamIndex,
        @Parameter(name = "videoStreamIndex", description = "Optional. The index of the video stream to use. If omitted the first video stream will be used.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "videoStreamIndex", required = false) Integer videoStreamIndex,
        @Parameter(name = "context", description = "Optional. The MediaBrowser.Model.Dlna.EncodingContext.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "context", required = false) EncodingContext context,
        @Parameter(name = "streamOptions", description = "Optional. The streaming options.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "", required = false) Map<String, String> streamOptions
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /Videos/{itemId}/{stream}.{container} : Gets a video stream.
     *
     * @param itemId The item id. (required)
     * @param container The video container. Possible values are: ts, webm, asf, wmv, ogv, mp4, m4v, mkv, mpeg, mpg, avi, 3gp, wmv, wtv, m2ts, mov, iso, flv. (required)
     * @param stream  (required)
     * @param _static Optional. If true, the original file will be streamed statically without any encoding. Use either no url extension or the original file extension. true/false. (optional)
     * @param params The streaming parameters. (optional)
     * @param tag The tag. (optional)
     * @param deviceProfileId Optional. The dlna device profile id to utilize. (optional)
     * @param playSessionId The play session id. (optional)
     * @param segmentContainer The segment container. (optional)
     * @param segmentLength The segment lenght. (optional)
     * @param minSegments The minimum number of segments. (optional)
     * @param mediaSourceId The media version id, if playing an alternate version. (optional)
     * @param deviceId The device id of the client requesting. Used to stop encoding processes when needed. (optional)
     * @param audioCodec Optional. Specify a audio codec to encode to, e.g. mp3. If omitted the server will auto-select using the url&#39;s extension. Options: aac, mp3, vorbis, wma. (optional)
     * @param enableAutoStreamCopy Whether or not to allow automatic stream copy if requested values match the original source. Defaults to true. (optional)
     * @param allowVideoStreamCopy Whether or not to allow copying of the video stream url. (optional)
     * @param allowAudioStreamCopy Whether or not to allow copying of the audio stream url. (optional)
     * @param breakOnNonKeyFrames Optional. Whether to break on non key frames. (optional)
     * @param audioSampleRate Optional. Specify a specific audio sample rate, e.g. 44100. (optional)
     * @param maxAudioBitDepth Optional. The maximum audio bit depth. (optional)
     * @param audioBitRate Optional. Specify an audio bitrate to encode to, e.g. 128000. If omitted this will be left to encoder defaults. (optional)
     * @param audioChannels Optional. Specify a specific number of audio channels to encode to, e.g. 2. (optional)
     * @param maxAudioChannels Optional. Specify a maximum number of audio channels to encode to, e.g. 2. (optional)
     * @param profile Optional. Specify a specific an encoder profile (varies by encoder), e.g. main, baseline, high. (optional)
     * @param level Optional. Specify a level for the encoder profile (varies by encoder), e.g. 3, 3.1. (optional)
     * @param framerate Optional. A specific video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. (optional)
     * @param maxFramerate Optional. A specific maximum video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. (optional)
     * @param copyTimestamps Whether or not to copy timestamps when transcoding with an offset. Defaults to false. (optional)
     * @param startTimeTicks Optional. Specify a starting offset, in ticks. 1 tick &#x3D; 10000 ms. (optional)
     * @param width Optional. The fixed horizontal resolution of the encoded video. (optional)
     * @param height Optional. The fixed vertical resolution of the encoded video. (optional)
     * @param videoBitRate Optional. Specify a video bitrate to encode to, e.g. 500000. If omitted this will be left to encoder defaults. (optional)
     * @param subtitleStreamIndex Optional. The index of the subtitle stream to use. If omitted no subtitles will be used. (optional)
     * @param subtitleMethod Optional. Specify the subtitle delivery method. (optional)
     * @param maxRefFrames Optional. (optional)
     * @param maxVideoBitDepth Optional. The maximum video bit depth. (optional)
     * @param requireAvc Optional. Whether to require avc. (optional)
     * @param deInterlace Optional. Whether to deinterlace the video. (optional)
     * @param requireNonAnamorphic Optional. Whether to require a non anamporphic stream. (optional)
     * @param transcodingMaxAudioChannels Optional. The maximum number of audio channels to transcode. (optional)
     * @param cpuCoreLimit Optional. The limit of how many cpu cores to use. (optional)
     * @param liveStreamId The live stream id. (optional)
     * @param enableMpegtsM2TsMode Optional. Whether to enable the MpegtsM2Ts mode. (optional)
     * @param videoCodec Optional. Specify a video codec to encode to, e.g. h264. If omitted the server will auto-select using the url&#39;s extension. Options: h265, h264, mpeg4, theora, vpx, wmv. (optional)
     * @param subtitleCodec Optional. Specify a subtitle codec to encode to. (optional)
     * @param transcodeReasons Optional. The transcoding reason. (optional)
     * @param audioStreamIndex Optional. The index of the audio stream to use. If omitted the first audio stream will be used. (optional)
     * @param videoStreamIndex Optional. The index of the video stream to use. If omitted the first video stream will be used. (optional)
     * @param context Optional. The MediaBrowser.Model.Dlna.EncodingContext. (optional)
     * @param streamOptions Optional. The streaming options. (optional)
     * @return Video stream returned. (status code 200)
     */
    @Operation(
        operationId = "getVideoStreamByContainer",
        summary = "Gets a video stream.",
        tags = { "Videos" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Video stream returned.", content = {
                @Content(mediaType = "video/*", schema = @Schema(implementation = org.springframework.core.io.Resource.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/Videos/{itemId}/{stream}.{container}",
        produces = { "video/*" }
    )
    
    default ResponseEntity<org.springframework.core.io.Resource> getVideoStreamByContainer(
        @Parameter(name = "itemId", description = "The item id.", required = true, in = ParameterIn.PATH) @PathVariable("itemId") UUID itemId,
        @Parameter(name = "container", description = "The video container. Possible values are: ts, webm, asf, wmv, ogv, mp4, m4v, mkv, mpeg, mpg, avi, 3gp, wmv, wtv, m2ts, mov, iso, flv.", required = true, in = ParameterIn.PATH) @PathVariable("container") String container,
        @Parameter(name = "stream", description = "", required = true, in = ParameterIn.PATH) @PathVariable("stream") String stream,
        @Parameter(name = "static", description = "Optional. If true, the original file will be streamed statically without any encoding. Use either no url extension or the original file extension. true/false.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "static", required = false) Boolean _static,
        @Parameter(name = "params", description = "The streaming parameters.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "params", required = false) String params,
        @Parameter(name = "tag", description = "The tag.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "tag", required = false) String tag,
        @Parameter(name = "deviceProfileId", description = "Optional. The dlna device profile id to utilize.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "deviceProfileId", required = false) String deviceProfileId,
        @Parameter(name = "playSessionId", description = "The play session id.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "playSessionId", required = false) String playSessionId,
        @Parameter(name = "segmentContainer", description = "The segment container.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "segmentContainer", required = false) String segmentContainer,
        @Parameter(name = "segmentLength", description = "The segment lenght.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "segmentLength", required = false) Integer segmentLength,
        @Parameter(name = "minSegments", description = "The minimum number of segments.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "minSegments", required = false) Integer minSegments,
        @Parameter(name = "mediaSourceId", description = "The media version id, if playing an alternate version.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "mediaSourceId", required = false) String mediaSourceId,
        @Parameter(name = "deviceId", description = "The device id of the client requesting. Used to stop encoding processes when needed.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "deviceId", required = false) String deviceId,
        @Parameter(name = "audioCodec", description = "Optional. Specify a audio codec to encode to, e.g. mp3. If omitted the server will auto-select using the url's extension. Options: aac, mp3, vorbis, wma.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioCodec", required = false) String audioCodec,
        @Parameter(name = "enableAutoStreamCopy", description = "Whether or not to allow automatic stream copy if requested values match the original source. Defaults to true.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "enableAutoStreamCopy", required = false) Boolean enableAutoStreamCopy,
        @Parameter(name = "allowVideoStreamCopy", description = "Whether or not to allow copying of the video stream url.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "allowVideoStreamCopy", required = false) Boolean allowVideoStreamCopy,
        @Parameter(name = "allowAudioStreamCopy", description = "Whether or not to allow copying of the audio stream url.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "allowAudioStreamCopy", required = false) Boolean allowAudioStreamCopy,
        @Parameter(name = "breakOnNonKeyFrames", description = "Optional. Whether to break on non key frames.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "breakOnNonKeyFrames", required = false) Boolean breakOnNonKeyFrames,
        @Parameter(name = "audioSampleRate", description = "Optional. Specify a specific audio sample rate, e.g. 44100.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioSampleRate", required = false) Integer audioSampleRate,
        @Parameter(name = "maxAudioBitDepth", description = "Optional. The maximum audio bit depth.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxAudioBitDepth", required = false) Integer maxAudioBitDepth,
        @Parameter(name = "audioBitRate", description = "Optional. Specify an audio bitrate to encode to, e.g. 128000. If omitted this will be left to encoder defaults.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioBitRate", required = false) Integer audioBitRate,
        @Parameter(name = "audioChannels", description = "Optional. Specify a specific number of audio channels to encode to, e.g. 2.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioChannels", required = false) Integer audioChannels,
        @Parameter(name = "maxAudioChannels", description = "Optional. Specify a maximum number of audio channels to encode to, e.g. 2.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxAudioChannels", required = false) Integer maxAudioChannels,
        @Parameter(name = "profile", description = "Optional. Specify a specific an encoder profile (varies by encoder), e.g. main, baseline, high.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "profile", required = false) String profile,
        @Parameter(name = "level", description = "Optional. Specify a level for the encoder profile (varies by encoder), e.g. 3, 3.1.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "level", required = false) String level,
        @Parameter(name = "framerate", description = "Optional. A specific video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "framerate", required = false) Float framerate,
        @Parameter(name = "maxFramerate", description = "Optional. A specific maximum video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxFramerate", required = false) Float maxFramerate,
        @Parameter(name = "copyTimestamps", description = "Whether or not to copy timestamps when transcoding with an offset. Defaults to false.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "copyTimestamps", required = false) Boolean copyTimestamps,
        @Parameter(name = "startTimeTicks", description = "Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "startTimeTicks", required = false) Long startTimeTicks,
        @Parameter(name = "width", description = "Optional. The fixed horizontal resolution of the encoded video.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "width", required = false) Integer width,
        @Parameter(name = "height", description = "Optional. The fixed vertical resolution of the encoded video.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "height", required = false) Integer height,
        @Parameter(name = "videoBitRate", description = "Optional. Specify a video bitrate to encode to, e.g. 500000. If omitted this will be left to encoder defaults.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "videoBitRate", required = false) Integer videoBitRate,
        @Parameter(name = "subtitleStreamIndex", description = "Optional. The index of the subtitle stream to use. If omitted no subtitles will be used.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "subtitleStreamIndex", required = false) Integer subtitleStreamIndex,
        @Parameter(name = "subtitleMethod", description = "Optional. Specify the subtitle delivery method.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "subtitleMethod", required = false) SubtitleDeliveryMethod subtitleMethod,
        @Parameter(name = "maxRefFrames", description = "Optional.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxRefFrames", required = false) Integer maxRefFrames,
        @Parameter(name = "maxVideoBitDepth", description = "Optional. The maximum video bit depth.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxVideoBitDepth", required = false) Integer maxVideoBitDepth,
        @Parameter(name = "requireAvc", description = "Optional. Whether to require avc.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "requireAvc", required = false) Boolean requireAvc,
        @Parameter(name = "deInterlace", description = "Optional. Whether to deinterlace the video.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "deInterlace", required = false) Boolean deInterlace,
        @Parameter(name = "requireNonAnamorphic", description = "Optional. Whether to require a non anamporphic stream.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "requireNonAnamorphic", required = false) Boolean requireNonAnamorphic,
        @Parameter(name = "transcodingMaxAudioChannels", description = "Optional. The maximum number of audio channels to transcode.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "transcodingMaxAudioChannels", required = false) Integer transcodingMaxAudioChannels,
        @Parameter(name = "cpuCoreLimit", description = "Optional. The limit of how many cpu cores to use.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "cpuCoreLimit", required = false) Integer cpuCoreLimit,
        @Parameter(name = "liveStreamId", description = "The live stream id.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "liveStreamId", required = false) String liveStreamId,
        @Parameter(name = "enableMpegtsM2TsMode", description = "Optional. Whether to enable the MpegtsM2Ts mode.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "enableMpegtsM2TsMode", required = false) Boolean enableMpegtsM2TsMode,
        @Parameter(name = "videoCodec", description = "Optional. Specify a video codec to encode to, e.g. h264. If omitted the server will auto-select using the url's extension. Options: h265, h264, mpeg4, theora, vpx, wmv.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "videoCodec", required = false) String videoCodec,
        @Parameter(name = "subtitleCodec", description = "Optional. Specify a subtitle codec to encode to.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "subtitleCodec", required = false) String subtitleCodec,
        @Parameter(name = "transcodeReasons", description = "Optional. The transcoding reason.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "transcodeReasons", required = false) String transcodeReasons,
        @Parameter(name = "audioStreamIndex", description = "Optional. The index of the audio stream to use. If omitted the first audio stream will be used.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioStreamIndex", required = false) Integer audioStreamIndex,
        @Parameter(name = "videoStreamIndex", description = "Optional. The index of the video stream to use. If omitted the first video stream will be used.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "videoStreamIndex", required = false) Integer videoStreamIndex,
        @Parameter(name = "context", description = "Optional. The MediaBrowser.Model.Dlna.EncodingContext.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "context", required = false) EncodingContext context,
        @Parameter(name = "streamOptions", description = "Optional. The streaming options.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "", required = false) Map<String, String> streamOptions
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * HEAD /Videos/{itemId}/master.m3u8 : Gets a video hls playlist stream.
     *
     * @param itemId The item id. (required)
     * @param mediaSourceId The media version id, if playing an alternate version. (required)
     * @param _static Optional. If true, the original file will be streamed statically without any encoding. Use either no url extension or the original file extension. true/false. (optional)
     * @param params The streaming parameters. (optional)
     * @param tag The tag. (optional)
     * @param deviceProfileId Optional. The dlna device profile id to utilize. (optional)
     * @param playSessionId The play session id. (optional)
     * @param segmentContainer The segment container. (optional)
     * @param segmentLength The segment length. (optional)
     * @param minSegments The minimum number of segments. (optional)
     * @param deviceId The device id of the client requesting. Used to stop encoding processes when needed. (optional)
     * @param audioCodec Optional. Specify a audio codec to encode to, e.g. mp3. If omitted the server will auto-select using the url&#39;s extension. Options: aac, mp3, vorbis, wma. (optional)
     * @param enableAutoStreamCopy Whether or not to allow automatic stream copy if requested values match the original source. Defaults to true. (optional)
     * @param allowVideoStreamCopy Whether or not to allow copying of the video stream url. (optional)
     * @param allowAudioStreamCopy Whether or not to allow copying of the audio stream url. (optional)
     * @param breakOnNonKeyFrames Optional. Whether to break on non key frames. (optional)
     * @param audioSampleRate Optional. Specify a specific audio sample rate, e.g. 44100. (optional)
     * @param maxAudioBitDepth Optional. The maximum audio bit depth. (optional)
     * @param audioBitRate Optional. Specify an audio bitrate to encode to, e.g. 128000. If omitted this will be left to encoder defaults. (optional)
     * @param audioChannels Optional. Specify a specific number of audio channels to encode to, e.g. 2. (optional)
     * @param maxAudioChannels Optional. Specify a maximum number of audio channels to encode to, e.g. 2. (optional)
     * @param profile Optional. Specify a specific an encoder profile (varies by encoder), e.g. main, baseline, high. (optional)
     * @param level Optional. Specify a level for the encoder profile (varies by encoder), e.g. 3, 3.1. (optional)
     * @param framerate Optional. A specific video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. (optional)
     * @param maxFramerate Optional. A specific maximum video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. (optional)
     * @param copyTimestamps Whether or not to copy timestamps when transcoding with an offset. Defaults to false. (optional)
     * @param startTimeTicks Optional. Specify a starting offset, in ticks. 1 tick &#x3D; 10000 ms. (optional)
     * @param width Optional. The fixed horizontal resolution of the encoded video. (optional)
     * @param height Optional. The fixed vertical resolution of the encoded video. (optional)
     * @param videoBitRate Optional. Specify a video bitrate to encode to, e.g. 500000. If omitted this will be left to encoder defaults. (optional)
     * @param subtitleStreamIndex Optional. The index of the subtitle stream to use. If omitted no subtitles will be used. (optional)
     * @param subtitleMethod Optional. Specify the subtitle delivery method. (optional)
     * @param maxRefFrames Optional. (optional)
     * @param maxVideoBitDepth Optional. The maximum video bit depth. (optional)
     * @param requireAvc Optional. Whether to require avc. (optional)
     * @param deInterlace Optional. Whether to deinterlace the video. (optional)
     * @param requireNonAnamorphic Optional. Whether to require a non anamorphic stream. (optional)
     * @param transcodingMaxAudioChannels Optional. The maximum number of audio channels to transcode. (optional)
     * @param cpuCoreLimit Optional. The limit of how many cpu cores to use. (optional)
     * @param liveStreamId The live stream id. (optional)
     * @param enableMpegtsM2TsMode Optional. Whether to enable the MpegtsM2Ts mode. (optional)
     * @param videoCodec Optional. Specify a video codec to encode to, e.g. h264. If omitted the server will auto-select using the url&#39;s extension. Options: h265, h264, mpeg4, theora, vpx, wmv. (optional)
     * @param subtitleCodec Optional. Specify a subtitle codec to encode to. (optional)
     * @param transcodeReasons Optional. The transcoding reason. (optional)
     * @param audioStreamIndex Optional. The index of the audio stream to use. If omitted the first audio stream will be used. (optional)
     * @param videoStreamIndex Optional. The index of the video stream to use. If omitted the first video stream will be used. (optional)
     * @param context Optional. The MediaBrowser.Model.Dlna.EncodingContext. (optional)
     * @param streamOptions Optional. The streaming options. (optional)
     * @param enableAdaptiveBitrateStreaming Enable adaptive bitrate streaming. (optional, default to true)
     * @return Video stream returned. (status code 200)
     *         or Unauthorized (status code 401)
     *         or Forbidden (status code 403)
     */
    @Operation(
        operationId = "headMasterHlsVideoPlaylist",
        summary = "Gets a video hls playlist stream.",
        tags = { "DynamicHls" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Video stream returned.", content = {
                @Content(mediaType = "application/x-mpegURL", schema = @Schema(implementation = org.springframework.core.io.Resource.class))
            }),
            @ApiResponse(responseCode = "401", description = "Unauthorized"),
            @ApiResponse(responseCode = "403", description = "Forbidden")
        },
        security = {
            @SecurityRequirement(name = "CustomAuthentication")
        }
    )
    @RequestMapping(
        method = RequestMethod.HEAD,
        value = "/Videos/{itemId}/master.m3u8",
        produces = { "application/x-mpegURL" }
    )
    
    default ResponseEntity<org.springframework.core.io.Resource> headMasterHlsVideoPlaylist(
        @Parameter(name = "itemId", description = "The item id.", required = true, in = ParameterIn.PATH) @PathVariable("itemId") UUID itemId,
        @NotNull @Parameter(name = "mediaSourceId", description = "The media version id, if playing an alternate version.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "mediaSourceId", required = true) String mediaSourceId,
        @Parameter(name = "static", description = "Optional. If true, the original file will be streamed statically without any encoding. Use either no url extension or the original file extension. true/false.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "static", required = false) Boolean _static,
        @Parameter(name = "params", description = "The streaming parameters.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "params", required = false) String params,
        @Parameter(name = "tag", description = "The tag.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "tag", required = false) String tag,
        @Parameter(name = "deviceProfileId", description = "Optional. The dlna device profile id to utilize.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "deviceProfileId", required = false) String deviceProfileId,
        @Parameter(name = "playSessionId", description = "The play session id.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "playSessionId", required = false) String playSessionId,
        @Parameter(name = "segmentContainer", description = "The segment container.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "segmentContainer", required = false) String segmentContainer,
        @Parameter(name = "segmentLength", description = "The segment length.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "segmentLength", required = false) Integer segmentLength,
        @Parameter(name = "minSegments", description = "The minimum number of segments.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "minSegments", required = false) Integer minSegments,
        @Parameter(name = "deviceId", description = "The device id of the client requesting. Used to stop encoding processes when needed.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "deviceId", required = false) String deviceId,
        @Parameter(name = "audioCodec", description = "Optional. Specify a audio codec to encode to, e.g. mp3. If omitted the server will auto-select using the url's extension. Options: aac, mp3, vorbis, wma.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioCodec", required = false) String audioCodec,
        @Parameter(name = "enableAutoStreamCopy", description = "Whether or not to allow automatic stream copy if requested values match the original source. Defaults to true.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "enableAutoStreamCopy", required = false) Boolean enableAutoStreamCopy,
        @Parameter(name = "allowVideoStreamCopy", description = "Whether or not to allow copying of the video stream url.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "allowVideoStreamCopy", required = false) Boolean allowVideoStreamCopy,
        @Parameter(name = "allowAudioStreamCopy", description = "Whether or not to allow copying of the audio stream url.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "allowAudioStreamCopy", required = false) Boolean allowAudioStreamCopy,
        @Parameter(name = "breakOnNonKeyFrames", description = "Optional. Whether to break on non key frames.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "breakOnNonKeyFrames", required = false) Boolean breakOnNonKeyFrames,
        @Parameter(name = "audioSampleRate", description = "Optional. Specify a specific audio sample rate, e.g. 44100.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioSampleRate", required = false) Integer audioSampleRate,
        @Parameter(name = "maxAudioBitDepth", description = "Optional. The maximum audio bit depth.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxAudioBitDepth", required = false) Integer maxAudioBitDepth,
        @Parameter(name = "audioBitRate", description = "Optional. Specify an audio bitrate to encode to, e.g. 128000. If omitted this will be left to encoder defaults.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioBitRate", required = false) Integer audioBitRate,
        @Parameter(name = "audioChannels", description = "Optional. Specify a specific number of audio channels to encode to, e.g. 2.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioChannels", required = false) Integer audioChannels,
        @Parameter(name = "maxAudioChannels", description = "Optional. Specify a maximum number of audio channels to encode to, e.g. 2.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxAudioChannels", required = false) Integer maxAudioChannels,
        @Parameter(name = "profile", description = "Optional. Specify a specific an encoder profile (varies by encoder), e.g. main, baseline, high.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "profile", required = false) String profile,
        @Parameter(name = "level", description = "Optional. Specify a level for the encoder profile (varies by encoder), e.g. 3, 3.1.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "level", required = false) String level,
        @Parameter(name = "framerate", description = "Optional. A specific video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "framerate", required = false) Float framerate,
        @Parameter(name = "maxFramerate", description = "Optional. A specific maximum video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxFramerate", required = false) Float maxFramerate,
        @Parameter(name = "copyTimestamps", description = "Whether or not to copy timestamps when transcoding with an offset. Defaults to false.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "copyTimestamps", required = false) Boolean copyTimestamps,
        @Parameter(name = "startTimeTicks", description = "Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "startTimeTicks", required = false) Long startTimeTicks,
        @Parameter(name = "width", description = "Optional. The fixed horizontal resolution of the encoded video.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "width", required = false) Integer width,
        @Parameter(name = "height", description = "Optional. The fixed vertical resolution of the encoded video.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "height", required = false) Integer height,
        @Parameter(name = "videoBitRate", description = "Optional. Specify a video bitrate to encode to, e.g. 500000. If omitted this will be left to encoder defaults.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "videoBitRate", required = false) Integer videoBitRate,
        @Parameter(name = "subtitleStreamIndex", description = "Optional. The index of the subtitle stream to use. If omitted no subtitles will be used.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "subtitleStreamIndex", required = false) Integer subtitleStreamIndex,
        @Parameter(name = "subtitleMethod", description = "Optional. Specify the subtitle delivery method.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "subtitleMethod", required = false) SubtitleDeliveryMethod subtitleMethod,
        @Parameter(name = "maxRefFrames", description = "Optional.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxRefFrames", required = false) Integer maxRefFrames,
        @Parameter(name = "maxVideoBitDepth", description = "Optional. The maximum video bit depth.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxVideoBitDepth", required = false) Integer maxVideoBitDepth,
        @Parameter(name = "requireAvc", description = "Optional. Whether to require avc.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "requireAvc", required = false) Boolean requireAvc,
        @Parameter(name = "deInterlace", description = "Optional. Whether to deinterlace the video.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "deInterlace", required = false) Boolean deInterlace,
        @Parameter(name = "requireNonAnamorphic", description = "Optional. Whether to require a non anamorphic stream.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "requireNonAnamorphic", required = false) Boolean requireNonAnamorphic,
        @Parameter(name = "transcodingMaxAudioChannels", description = "Optional. The maximum number of audio channels to transcode.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "transcodingMaxAudioChannels", required = false) Integer transcodingMaxAudioChannels,
        @Parameter(name = "cpuCoreLimit", description = "Optional. The limit of how many cpu cores to use.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "cpuCoreLimit", required = false) Integer cpuCoreLimit,
        @Parameter(name = "liveStreamId", description = "The live stream id.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "liveStreamId", required = false) String liveStreamId,
        @Parameter(name = "enableMpegtsM2TsMode", description = "Optional. Whether to enable the MpegtsM2Ts mode.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "enableMpegtsM2TsMode", required = false) Boolean enableMpegtsM2TsMode,
        @Parameter(name = "videoCodec", description = "Optional. Specify a video codec to encode to, e.g. h264. If omitted the server will auto-select using the url's extension. Options: h265, h264, mpeg4, theora, vpx, wmv.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "videoCodec", required = false) String videoCodec,
        @Parameter(name = "subtitleCodec", description = "Optional. Specify a subtitle codec to encode to.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "subtitleCodec", required = false) String subtitleCodec,
        @Parameter(name = "transcodeReasons", description = "Optional. The transcoding reason.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "transcodeReasons", required = false) String transcodeReasons,
        @Parameter(name = "audioStreamIndex", description = "Optional. The index of the audio stream to use. If omitted the first audio stream will be used.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioStreamIndex", required = false) Integer audioStreamIndex,
        @Parameter(name = "videoStreamIndex", description = "Optional. The index of the video stream to use. If omitted the first video stream will be used.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "videoStreamIndex", required = false) Integer videoStreamIndex,
        @Parameter(name = "context", description = "Optional. The MediaBrowser.Model.Dlna.EncodingContext.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "context", required = false) EncodingContext context,
        @Parameter(name = "streamOptions", description = "Optional. The streaming options.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "", required = false) Map<String, String> streamOptions,
        @Parameter(name = "enableAdaptiveBitrateStreaming", description = "Enable adaptive bitrate streaming.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "enableAdaptiveBitrateStreaming", required = false, defaultValue = "true") Boolean enableAdaptiveBitrateStreaming
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * HEAD /Videos/{itemId}/stream : Gets a video stream.
     *
     * @param itemId The item id. (required)
     * @param container The video container. Possible values are: ts, webm, asf, wmv, ogv, mp4, m4v, mkv, mpeg, mpg, avi, 3gp, wmv, wtv, m2ts, mov, iso, flv. (optional)
     * @param _static Optional. If true, the original file will be streamed statically without any encoding. Use either no url extension or the original file extension. true/false. (optional)
     * @param params The streaming parameters. (optional)
     * @param tag The tag. (optional)
     * @param deviceProfileId Optional. The dlna device profile id to utilize. (optional)
     * @param playSessionId The play session id. (optional)
     * @param segmentContainer The segment container. (optional)
     * @param segmentLength The segment length. (optional)
     * @param minSegments The minimum number of segments. (optional)
     * @param mediaSourceId The media version id, if playing an alternate version. (optional)
     * @param deviceId The device id of the client requesting. Used to stop encoding processes when needed. (optional)
     * @param audioCodec Optional. Specify a audio codec to encode to, e.g. mp3. If omitted the server will auto-select using the url&#39;s extension. Options: aac, mp3, vorbis, wma. (optional)
     * @param enableAutoStreamCopy Whether or not to allow automatic stream copy if requested values match the original source. Defaults to true. (optional)
     * @param allowVideoStreamCopy Whether or not to allow copying of the video stream url. (optional)
     * @param allowAudioStreamCopy Whether or not to allow copying of the audio stream url. (optional)
     * @param breakOnNonKeyFrames Optional. Whether to break on non key frames. (optional)
     * @param audioSampleRate Optional. Specify a specific audio sample rate, e.g. 44100. (optional)
     * @param maxAudioBitDepth Optional. The maximum audio bit depth. (optional)
     * @param audioBitRate Optional. Specify an audio bitrate to encode to, e.g. 128000. If omitted this will be left to encoder defaults. (optional)
     * @param audioChannels Optional. Specify a specific number of audio channels to encode to, e.g. 2. (optional)
     * @param maxAudioChannels Optional. Specify a maximum number of audio channels to encode to, e.g. 2. (optional)
     * @param profile Optional. Specify a specific an encoder profile (varies by encoder), e.g. main, baseline, high. (optional)
     * @param level Optional. Specify a level for the encoder profile (varies by encoder), e.g. 3, 3.1. (optional)
     * @param framerate Optional. A specific video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. (optional)
     * @param maxFramerate Optional. A specific maximum video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. (optional)
     * @param copyTimestamps Whether or not to copy timestamps when transcoding with an offset. Defaults to false. (optional)
     * @param startTimeTicks Optional. Specify a starting offset, in ticks. 1 tick &#x3D; 10000 ms. (optional)
     * @param width Optional. The fixed horizontal resolution of the encoded video. (optional)
     * @param height Optional. The fixed vertical resolution of the encoded video. (optional)
     * @param videoBitRate Optional. Specify a video bitrate to encode to, e.g. 500000. If omitted this will be left to encoder defaults. (optional)
     * @param subtitleStreamIndex Optional. The index of the subtitle stream to use. If omitted no subtitles will be used. (optional)
     * @param subtitleMethod Optional. Specify the subtitle delivery method. (optional)
     * @param maxRefFrames Optional. (optional)
     * @param maxVideoBitDepth Optional. The maximum video bit depth. (optional)
     * @param requireAvc Optional. Whether to require avc. (optional)
     * @param deInterlace Optional. Whether to deinterlace the video. (optional)
     * @param requireNonAnamorphic Optional. Whether to require a non anamorphic stream. (optional)
     * @param transcodingMaxAudioChannels Optional. The maximum number of audio channels to transcode. (optional)
     * @param cpuCoreLimit Optional. The limit of how many cpu cores to use. (optional)
     * @param liveStreamId The live stream id. (optional)
     * @param enableMpegtsM2TsMode Optional. Whether to enable the MpegtsM2Ts mode. (optional)
     * @param videoCodec Optional. Specify a video codec to encode to, e.g. h264. If omitted the server will auto-select using the url&#39;s extension. Options: h265, h264, mpeg4, theora, vpx, wmv. (optional)
     * @param subtitleCodec Optional. Specify a subtitle codec to encode to. (optional)
     * @param transcodeReasons Optional. The transcoding reason. (optional)
     * @param audioStreamIndex Optional. The index of the audio stream to use. If omitted the first audio stream will be used. (optional)
     * @param videoStreamIndex Optional. The index of the video stream to use. If omitted the first video stream will be used. (optional)
     * @param context Optional. The MediaBrowser.Model.Dlna.EncodingContext. (optional)
     * @param streamOptions Optional. The streaming options. (optional)
     * @return Video stream returned. (status code 200)
     */
    @Operation(
        operationId = "headVideoStream",
        summary = "Gets a video stream.",
        tags = { "Videos" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Video stream returned.", content = {
                @Content(mediaType = "video/*", schema = @Schema(implementation = org.springframework.core.io.Resource.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.HEAD,
        value = "/Videos/{itemId}/stream",
        produces = { "video/*" }
    )
    
    default ResponseEntity<org.springframework.core.io.Resource> headVideoStream(
        @Parameter(name = "itemId", description = "The item id.", required = true, in = ParameterIn.PATH) @PathVariable("itemId") UUID itemId,
        @Parameter(name = "container", description = "The video container. Possible values are: ts, webm, asf, wmv, ogv, mp4, m4v, mkv, mpeg, mpg, avi, 3gp, wmv, wtv, m2ts, mov, iso, flv.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "container", required = false) String container,
        @Parameter(name = "static", description = "Optional. If true, the original file will be streamed statically without any encoding. Use either no url extension or the original file extension. true/false.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "static", required = false) Boolean _static,
        @Parameter(name = "params", description = "The streaming parameters.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "params", required = false) String params,
        @Parameter(name = "tag", description = "The tag.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "tag", required = false) String tag,
        @Parameter(name = "deviceProfileId", description = "Optional. The dlna device profile id to utilize.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "deviceProfileId", required = false) String deviceProfileId,
        @Parameter(name = "playSessionId", description = "The play session id.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "playSessionId", required = false) String playSessionId,
        @Parameter(name = "segmentContainer", description = "The segment container.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "segmentContainer", required = false) String segmentContainer,
        @Parameter(name = "segmentLength", description = "The segment length.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "segmentLength", required = false) Integer segmentLength,
        @Parameter(name = "minSegments", description = "The minimum number of segments.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "minSegments", required = false) Integer minSegments,
        @Parameter(name = "mediaSourceId", description = "The media version id, if playing an alternate version.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "mediaSourceId", required = false) String mediaSourceId,
        @Parameter(name = "deviceId", description = "The device id of the client requesting. Used to stop encoding processes when needed.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "deviceId", required = false) String deviceId,
        @Parameter(name = "audioCodec", description = "Optional. Specify a audio codec to encode to, e.g. mp3. If omitted the server will auto-select using the url's extension. Options: aac, mp3, vorbis, wma.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioCodec", required = false) String audioCodec,
        @Parameter(name = "enableAutoStreamCopy", description = "Whether or not to allow automatic stream copy if requested values match the original source. Defaults to true.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "enableAutoStreamCopy", required = false) Boolean enableAutoStreamCopy,
        @Parameter(name = "allowVideoStreamCopy", description = "Whether or not to allow copying of the video stream url.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "allowVideoStreamCopy", required = false) Boolean allowVideoStreamCopy,
        @Parameter(name = "allowAudioStreamCopy", description = "Whether or not to allow copying of the audio stream url.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "allowAudioStreamCopy", required = false) Boolean allowAudioStreamCopy,
        @Parameter(name = "breakOnNonKeyFrames", description = "Optional. Whether to break on non key frames.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "breakOnNonKeyFrames", required = false) Boolean breakOnNonKeyFrames,
        @Parameter(name = "audioSampleRate", description = "Optional. Specify a specific audio sample rate, e.g. 44100.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioSampleRate", required = false) Integer audioSampleRate,
        @Parameter(name = "maxAudioBitDepth", description = "Optional. The maximum audio bit depth.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxAudioBitDepth", required = false) Integer maxAudioBitDepth,
        @Parameter(name = "audioBitRate", description = "Optional. Specify an audio bitrate to encode to, e.g. 128000. If omitted this will be left to encoder defaults.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioBitRate", required = false) Integer audioBitRate,
        @Parameter(name = "audioChannels", description = "Optional. Specify a specific number of audio channels to encode to, e.g. 2.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioChannels", required = false) Integer audioChannels,
        @Parameter(name = "maxAudioChannels", description = "Optional. Specify a maximum number of audio channels to encode to, e.g. 2.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxAudioChannels", required = false) Integer maxAudioChannels,
        @Parameter(name = "profile", description = "Optional. Specify a specific an encoder profile (varies by encoder), e.g. main, baseline, high.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "profile", required = false) String profile,
        @Parameter(name = "level", description = "Optional. Specify a level for the encoder profile (varies by encoder), e.g. 3, 3.1.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "level", required = false) String level,
        @Parameter(name = "framerate", description = "Optional. A specific video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "framerate", required = false) Float framerate,
        @Parameter(name = "maxFramerate", description = "Optional. A specific maximum video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxFramerate", required = false) Float maxFramerate,
        @Parameter(name = "copyTimestamps", description = "Whether or not to copy timestamps when transcoding with an offset. Defaults to false.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "copyTimestamps", required = false) Boolean copyTimestamps,
        @Parameter(name = "startTimeTicks", description = "Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "startTimeTicks", required = false) Long startTimeTicks,
        @Parameter(name = "width", description = "Optional. The fixed horizontal resolution of the encoded video.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "width", required = false) Integer width,
        @Parameter(name = "height", description = "Optional. The fixed vertical resolution of the encoded video.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "height", required = false) Integer height,
        @Parameter(name = "videoBitRate", description = "Optional. Specify a video bitrate to encode to, e.g. 500000. If omitted this will be left to encoder defaults.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "videoBitRate", required = false) Integer videoBitRate,
        @Parameter(name = "subtitleStreamIndex", description = "Optional. The index of the subtitle stream to use. If omitted no subtitles will be used.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "subtitleStreamIndex", required = false) Integer subtitleStreamIndex,
        @Parameter(name = "subtitleMethod", description = "Optional. Specify the subtitle delivery method.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "subtitleMethod", required = false) SubtitleDeliveryMethod subtitleMethod,
        @Parameter(name = "maxRefFrames", description = "Optional.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxRefFrames", required = false) Integer maxRefFrames,
        @Parameter(name = "maxVideoBitDepth", description = "Optional. The maximum video bit depth.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxVideoBitDepth", required = false) Integer maxVideoBitDepth,
        @Parameter(name = "requireAvc", description = "Optional. Whether to require avc.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "requireAvc", required = false) Boolean requireAvc,
        @Parameter(name = "deInterlace", description = "Optional. Whether to deinterlace the video.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "deInterlace", required = false) Boolean deInterlace,
        @Parameter(name = "requireNonAnamorphic", description = "Optional. Whether to require a non anamorphic stream.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "requireNonAnamorphic", required = false) Boolean requireNonAnamorphic,
        @Parameter(name = "transcodingMaxAudioChannels", description = "Optional. The maximum number of audio channels to transcode.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "transcodingMaxAudioChannels", required = false) Integer transcodingMaxAudioChannels,
        @Parameter(name = "cpuCoreLimit", description = "Optional. The limit of how many cpu cores to use.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "cpuCoreLimit", required = false) Integer cpuCoreLimit,
        @Parameter(name = "liveStreamId", description = "The live stream id.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "liveStreamId", required = false) String liveStreamId,
        @Parameter(name = "enableMpegtsM2TsMode", description = "Optional. Whether to enable the MpegtsM2Ts mode.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "enableMpegtsM2TsMode", required = false) Boolean enableMpegtsM2TsMode,
        @Parameter(name = "videoCodec", description = "Optional. Specify a video codec to encode to, e.g. h264. If omitted the server will auto-select using the url's extension. Options: h265, h264, mpeg4, theora, vpx, wmv.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "videoCodec", required = false) String videoCodec,
        @Parameter(name = "subtitleCodec", description = "Optional. Specify a subtitle codec to encode to.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "subtitleCodec", required = false) String subtitleCodec,
        @Parameter(name = "transcodeReasons", description = "Optional. The transcoding reason.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "transcodeReasons", required = false) String transcodeReasons,
        @Parameter(name = "audioStreamIndex", description = "Optional. The index of the audio stream to use. If omitted the first audio stream will be used.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioStreamIndex", required = false) Integer audioStreamIndex,
        @Parameter(name = "videoStreamIndex", description = "Optional. The index of the video stream to use. If omitted the first video stream will be used.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "videoStreamIndex", required = false) Integer videoStreamIndex,
        @Parameter(name = "context", description = "Optional. The MediaBrowser.Model.Dlna.EncodingContext.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "context", required = false) EncodingContext context,
        @Parameter(name = "streamOptions", description = "Optional. The streaming options.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "", required = false) Map<String, String> streamOptions
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * HEAD /Videos/{itemId}/{stream}.{container} : Gets a video stream.
     *
     * @param itemId The item id. (required)
     * @param container The video container. Possible values are: ts, webm, asf, wmv, ogv, mp4, m4v, mkv, mpeg, mpg, avi, 3gp, wmv, wtv, m2ts, mov, iso, flv. (required)
     * @param stream  (required)
     * @param _static Optional. If true, the original file will be streamed statically without any encoding. Use either no url extension or the original file extension. true/false. (optional)
     * @param params The streaming parameters. (optional)
     * @param tag The tag. (optional)
     * @param deviceProfileId Optional. The dlna device profile id to utilize. (optional)
     * @param playSessionId The play session id. (optional)
     * @param segmentContainer The segment container. (optional)
     * @param segmentLength The segment lenght. (optional)
     * @param minSegments The minimum number of segments. (optional)
     * @param mediaSourceId The media version id, if playing an alternate version. (optional)
     * @param deviceId The device id of the client requesting. Used to stop encoding processes when needed. (optional)
     * @param audioCodec Optional. Specify a audio codec to encode to, e.g. mp3. If omitted the server will auto-select using the url&#39;s extension. Options: aac, mp3, vorbis, wma. (optional)
     * @param enableAutoStreamCopy Whether or not to allow automatic stream copy if requested values match the original source. Defaults to true. (optional)
     * @param allowVideoStreamCopy Whether or not to allow copying of the video stream url. (optional)
     * @param allowAudioStreamCopy Whether or not to allow copying of the audio stream url. (optional)
     * @param breakOnNonKeyFrames Optional. Whether to break on non key frames. (optional)
     * @param audioSampleRate Optional. Specify a specific audio sample rate, e.g. 44100. (optional)
     * @param maxAudioBitDepth Optional. The maximum audio bit depth. (optional)
     * @param audioBitRate Optional. Specify an audio bitrate to encode to, e.g. 128000. If omitted this will be left to encoder defaults. (optional)
     * @param audioChannels Optional. Specify a specific number of audio channels to encode to, e.g. 2. (optional)
     * @param maxAudioChannels Optional. Specify a maximum number of audio channels to encode to, e.g. 2. (optional)
     * @param profile Optional. Specify a specific an encoder profile (varies by encoder), e.g. main, baseline, high. (optional)
     * @param level Optional. Specify a level for the encoder profile (varies by encoder), e.g. 3, 3.1. (optional)
     * @param framerate Optional. A specific video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. (optional)
     * @param maxFramerate Optional. A specific maximum video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. (optional)
     * @param copyTimestamps Whether or not to copy timestamps when transcoding with an offset. Defaults to false. (optional)
     * @param startTimeTicks Optional. Specify a starting offset, in ticks. 1 tick &#x3D; 10000 ms. (optional)
     * @param width Optional. The fixed horizontal resolution of the encoded video. (optional)
     * @param height Optional. The fixed vertical resolution of the encoded video. (optional)
     * @param videoBitRate Optional. Specify a video bitrate to encode to, e.g. 500000. If omitted this will be left to encoder defaults. (optional)
     * @param subtitleStreamIndex Optional. The index of the subtitle stream to use. If omitted no subtitles will be used. (optional)
     * @param subtitleMethod Optional. Specify the subtitle delivery method. (optional)
     * @param maxRefFrames Optional. (optional)
     * @param maxVideoBitDepth Optional. The maximum video bit depth. (optional)
     * @param requireAvc Optional. Whether to require avc. (optional)
     * @param deInterlace Optional. Whether to deinterlace the video. (optional)
     * @param requireNonAnamorphic Optional. Whether to require a non anamporphic stream. (optional)
     * @param transcodingMaxAudioChannels Optional. The maximum number of audio channels to transcode. (optional)
     * @param cpuCoreLimit Optional. The limit of how many cpu cores to use. (optional)
     * @param liveStreamId The live stream id. (optional)
     * @param enableMpegtsM2TsMode Optional. Whether to enable the MpegtsM2Ts mode. (optional)
     * @param videoCodec Optional. Specify a video codec to encode to, e.g. h264. If omitted the server will auto-select using the url&#39;s extension. Options: h265, h264, mpeg4, theora, vpx, wmv. (optional)
     * @param subtitleCodec Optional. Specify a subtitle codec to encode to. (optional)
     * @param transcodeReasons Optional. The transcoding reason. (optional)
     * @param audioStreamIndex Optional. The index of the audio stream to use. If omitted the first audio stream will be used. (optional)
     * @param videoStreamIndex Optional. The index of the video stream to use. If omitted the first video stream will be used. (optional)
     * @param context Optional. The MediaBrowser.Model.Dlna.EncodingContext. (optional)
     * @param streamOptions Optional. The streaming options. (optional)
     * @return Video stream returned. (status code 200)
     */
    @Operation(
        operationId = "headVideoStreamByContainer",
        summary = "Gets a video stream.",
        tags = { "Videos" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Video stream returned.", content = {
                @Content(mediaType = "video/*", schema = @Schema(implementation = org.springframework.core.io.Resource.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.HEAD,
        value = "/Videos/{itemId}/{stream}.{container}",
        produces = { "video/*" }
    )
    
    default ResponseEntity<org.springframework.core.io.Resource> headVideoStreamByContainer(
        @Parameter(name = "itemId", description = "The item id.", required = true, in = ParameterIn.PATH) @PathVariable("itemId") UUID itemId,
        @Parameter(name = "container", description = "The video container. Possible values are: ts, webm, asf, wmv, ogv, mp4, m4v, mkv, mpeg, mpg, avi, 3gp, wmv, wtv, m2ts, mov, iso, flv.", required = true, in = ParameterIn.PATH) @PathVariable("container") String container,
        @Parameter(name = "stream", description = "", required = true, in = ParameterIn.PATH) @PathVariable("stream") String stream,
        @Parameter(name = "static", description = "Optional. If true, the original file will be streamed statically without any encoding. Use either no url extension or the original file extension. true/false.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "static", required = false) Boolean _static,
        @Parameter(name = "params", description = "The streaming parameters.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "params", required = false) String params,
        @Parameter(name = "tag", description = "The tag.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "tag", required = false) String tag,
        @Parameter(name = "deviceProfileId", description = "Optional. The dlna device profile id to utilize.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "deviceProfileId", required = false) String deviceProfileId,
        @Parameter(name = "playSessionId", description = "The play session id.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "playSessionId", required = false) String playSessionId,
        @Parameter(name = "segmentContainer", description = "The segment container.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "segmentContainer", required = false) String segmentContainer,
        @Parameter(name = "segmentLength", description = "The segment lenght.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "segmentLength", required = false) Integer segmentLength,
        @Parameter(name = "minSegments", description = "The minimum number of segments.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "minSegments", required = false) Integer minSegments,
        @Parameter(name = "mediaSourceId", description = "The media version id, if playing an alternate version.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "mediaSourceId", required = false) String mediaSourceId,
        @Parameter(name = "deviceId", description = "The device id of the client requesting. Used to stop encoding processes when needed.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "deviceId", required = false) String deviceId,
        @Parameter(name = "audioCodec", description = "Optional. Specify a audio codec to encode to, e.g. mp3. If omitted the server will auto-select using the url's extension. Options: aac, mp3, vorbis, wma.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioCodec", required = false) String audioCodec,
        @Parameter(name = "enableAutoStreamCopy", description = "Whether or not to allow automatic stream copy if requested values match the original source. Defaults to true.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "enableAutoStreamCopy", required = false) Boolean enableAutoStreamCopy,
        @Parameter(name = "allowVideoStreamCopy", description = "Whether or not to allow copying of the video stream url.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "allowVideoStreamCopy", required = false) Boolean allowVideoStreamCopy,
        @Parameter(name = "allowAudioStreamCopy", description = "Whether or not to allow copying of the audio stream url.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "allowAudioStreamCopy", required = false) Boolean allowAudioStreamCopy,
        @Parameter(name = "breakOnNonKeyFrames", description = "Optional. Whether to break on non key frames.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "breakOnNonKeyFrames", required = false) Boolean breakOnNonKeyFrames,
        @Parameter(name = "audioSampleRate", description = "Optional. Specify a specific audio sample rate, e.g. 44100.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioSampleRate", required = false) Integer audioSampleRate,
        @Parameter(name = "maxAudioBitDepth", description = "Optional. The maximum audio bit depth.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxAudioBitDepth", required = false) Integer maxAudioBitDepth,
        @Parameter(name = "audioBitRate", description = "Optional. Specify an audio bitrate to encode to, e.g. 128000. If omitted this will be left to encoder defaults.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioBitRate", required = false) Integer audioBitRate,
        @Parameter(name = "audioChannels", description = "Optional. Specify a specific number of audio channels to encode to, e.g. 2.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioChannels", required = false) Integer audioChannels,
        @Parameter(name = "maxAudioChannels", description = "Optional. Specify a maximum number of audio channels to encode to, e.g. 2.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxAudioChannels", required = false) Integer maxAudioChannels,
        @Parameter(name = "profile", description = "Optional. Specify a specific an encoder profile (varies by encoder), e.g. main, baseline, high.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "profile", required = false) String profile,
        @Parameter(name = "level", description = "Optional. Specify a level for the encoder profile (varies by encoder), e.g. 3, 3.1.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "level", required = false) String level,
        @Parameter(name = "framerate", description = "Optional. A specific video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "framerate", required = false) Float framerate,
        @Parameter(name = "maxFramerate", description = "Optional. A specific maximum video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxFramerate", required = false) Float maxFramerate,
        @Parameter(name = "copyTimestamps", description = "Whether or not to copy timestamps when transcoding with an offset. Defaults to false.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "copyTimestamps", required = false) Boolean copyTimestamps,
        @Parameter(name = "startTimeTicks", description = "Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "startTimeTicks", required = false) Long startTimeTicks,
        @Parameter(name = "width", description = "Optional. The fixed horizontal resolution of the encoded video.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "width", required = false) Integer width,
        @Parameter(name = "height", description = "Optional. The fixed vertical resolution of the encoded video.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "height", required = false) Integer height,
        @Parameter(name = "videoBitRate", description = "Optional. Specify a video bitrate to encode to, e.g. 500000. If omitted this will be left to encoder defaults.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "videoBitRate", required = false) Integer videoBitRate,
        @Parameter(name = "subtitleStreamIndex", description = "Optional. The index of the subtitle stream to use. If omitted no subtitles will be used.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "subtitleStreamIndex", required = false) Integer subtitleStreamIndex,
        @Parameter(name = "subtitleMethod", description = "Optional. Specify the subtitle delivery method.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "subtitleMethod", required = false) SubtitleDeliveryMethod subtitleMethod,
        @Parameter(name = "maxRefFrames", description = "Optional.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxRefFrames", required = false) Integer maxRefFrames,
        @Parameter(name = "maxVideoBitDepth", description = "Optional. The maximum video bit depth.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maxVideoBitDepth", required = false) Integer maxVideoBitDepth,
        @Parameter(name = "requireAvc", description = "Optional. Whether to require avc.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "requireAvc", required = false) Boolean requireAvc,
        @Parameter(name = "deInterlace", description = "Optional. Whether to deinterlace the video.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "deInterlace", required = false) Boolean deInterlace,
        @Parameter(name = "requireNonAnamorphic", description = "Optional. Whether to require a non anamporphic stream.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "requireNonAnamorphic", required = false) Boolean requireNonAnamorphic,
        @Parameter(name = "transcodingMaxAudioChannels", description = "Optional. The maximum number of audio channels to transcode.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "transcodingMaxAudioChannels", required = false) Integer transcodingMaxAudioChannels,
        @Parameter(name = "cpuCoreLimit", description = "Optional. The limit of how many cpu cores to use.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "cpuCoreLimit", required = false) Integer cpuCoreLimit,
        @Parameter(name = "liveStreamId", description = "The live stream id.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "liveStreamId", required = false) String liveStreamId,
        @Parameter(name = "enableMpegtsM2TsMode", description = "Optional. Whether to enable the MpegtsM2Ts mode.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "enableMpegtsM2TsMode", required = false) Boolean enableMpegtsM2TsMode,
        @Parameter(name = "videoCodec", description = "Optional. Specify a video codec to encode to, e.g. h264. If omitted the server will auto-select using the url's extension. Options: h265, h264, mpeg4, theora, vpx, wmv.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "videoCodec", required = false) String videoCodec,
        @Parameter(name = "subtitleCodec", description = "Optional. Specify a subtitle codec to encode to.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "subtitleCodec", required = false) String subtitleCodec,
        @Parameter(name = "transcodeReasons", description = "Optional. The transcoding reason.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "transcodeReasons", required = false) String transcodeReasons,
        @Parameter(name = "audioStreamIndex", description = "Optional. The index of the audio stream to use. If omitted the first audio stream will be used.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "audioStreamIndex", required = false) Integer audioStreamIndex,
        @Parameter(name = "videoStreamIndex", description = "Optional. The index of the video stream to use. If omitted the first video stream will be used.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "videoStreamIndex", required = false) Integer videoStreamIndex,
        @Parameter(name = "context", description = "Optional. The MediaBrowser.Model.Dlna.EncodingContext.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "context", required = false) EncodingContext context,
        @Parameter(name = "streamOptions", description = "Optional. The streaming options.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "", required = false) Map<String, String> streamOptions
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /Videos/MergeVersions : Merges videos into a single record.
     *
     * @param ids Item id list. This allows multiple, comma delimited. (required)
     * @return Videos merged. (status code 204)
     *         or Supply at least 2 video ids. (status code 400)
     *         or Unauthorized (status code 401)
     *         or Forbidden (status code 403)
     */
    @Operation(
        operationId = "mergeVersions",
        summary = "Merges videos into a single record.",
        tags = { "Videos" },
        responses = {
            @ApiResponse(responseCode = "204", description = "Videos merged."),
            @ApiResponse(responseCode = "400", description = "Supply at least 2 video ids.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class)),
                @Content(mediaType = "application/json; profile=CamelCase", schema = @Schema(implementation = ProblemDetails.class)),
                @Content(mediaType = "application/json; profile=PascalCase", schema = @Schema(implementation = ProblemDetails.class))
            }),
            @ApiResponse(responseCode = "401", description = "Unauthorized"),
            @ApiResponse(responseCode = "403", description = "Forbidden")
        },
        security = {
            @SecurityRequirement(name = "CustomAuthentication")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/Videos/MergeVersions",
        produces = { "application/json", "application/json; profile=CamelCase", "application/json; profile=PascalCase" }
    )
    
    default ResponseEntity<Void> mergeVersions(
        @NotNull @Parameter(name = "ids", description = "Item id list. This allows multiple, comma delimited.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "ids", required = true) List<UUID> ids
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /Videos/ActiveEncodings : Stops an active encoding.
     *
     * @param deviceId The device id of the client requesting. Used to stop encoding processes when needed. (optional)
     * @param playSessionId The play session id. (optional)
     * @return Encoding stopped successfully. (status code 204)
     *         or Unauthorized (status code 401)
     *         or Forbidden (status code 403)
     */
    @Operation(
        operationId = "stopEncodingProcess",
        summary = "Stops an active encoding.",
        tags = { "HlsSegment" },
        responses = {
            @ApiResponse(responseCode = "204", description = "Encoding stopped successfully."),
            @ApiResponse(responseCode = "401", description = "Unauthorized"),
            @ApiResponse(responseCode = "403", description = "Forbidden")
        },
        security = {
            @SecurityRequirement(name = "CustomAuthentication")
        }
    )
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/Videos/ActiveEncodings"
    )
    
    default ResponseEntity<Void> stopEncodingProcess(
        @Parameter(name = "deviceId", description = "The device id of the client requesting. Used to stop encoding processes when needed.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "deviceId", required = false) String deviceId,
        @Parameter(name = "playSessionId", description = "The play session id.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "playSessionId", required = false) String playSessionId
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /Videos/{itemId}/Subtitles : Upload an external subtitle file.
     *
     * @param itemId The item the subtitle belongs to. (required)
     * @param uploadSubtitleDto The request body. (required)
     * @return Subtitle uploaded. (status code 204)
     */
    @Operation(
        operationId = "uploadSubtitle",
        summary = "Upload an external subtitle file.",
        tags = { "Subtitle" },
        responses = {
            @ApiResponse(responseCode = "204", description = "Subtitle uploaded.")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/Videos/{itemId}/Subtitles",
        consumes = { "application/*+json", "application/json", "text/json" }
    )
    
    default ResponseEntity<Void> uploadSubtitle(
        @Parameter(name = "itemId", description = "The item the subtitle belongs to.", required = true, in = ParameterIn.PATH) @PathVariable("itemId") UUID itemId,
        @Parameter(name = "UploadSubtitleDto", description = "The request body.", required = true) @Valid @RequestBody UploadSubtitleDto uploadSubtitleDto
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
