/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.2.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.LibraryOptionsResultDto;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-01-06T13:51:28.311925-04:00[America/Lower_Princes]")
@Validated
@Tag(name = "Library", description = "the Library API")
public interface LibrariesApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /Libraries/AvailableOptions : Gets the library options info.
     *
     * @param libraryContentType Library content type. (optional)
     * @param isNewLibrary Whether this is a new library. (optional)
     * @return Library options info returned. (status code 200)
     *         or Unauthorized (status code 401)
     *         or Forbidden (status code 403)
     */
    @Operation(
        operationId = "getLibraryOptionsInfo",
        summary = "Gets the library options info.",
        tags = { "Library" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Library options info returned.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = LibraryOptionsResultDto.class)),
                @Content(mediaType = "application/json; profile=CamelCase", schema = @Schema(implementation = LibraryOptionsResultDto.class)),
                @Content(mediaType = "application/json; profile=PascalCase", schema = @Schema(implementation = LibraryOptionsResultDto.class))
            }),
            @ApiResponse(responseCode = "401", description = "Unauthorized"),
            @ApiResponse(responseCode = "403", description = "Forbidden")
        },
        security = {
            @SecurityRequirement(name = "CustomAuthentication")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/Libraries/AvailableOptions",
        produces = { "application/json", "application/json; profile=CamelCase", "application/json; profile=PascalCase" }
    )
    
    default ResponseEntity<LibraryOptionsResultDto> getLibraryOptionsInfo(
        @Parameter(name = "libraryContentType", description = "Library content type.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "libraryContentType", required = false) String libraryContentType,
        @Parameter(name = "isNewLibrary", description = "Whether this is a new library.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "isNewLibrary", required = false) Boolean isNewLibrary
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"TypeOptions\" : [ { \"DefaultImageOptions\" : [ { \"Limit\" : 0, \"MinWidth\" : 6 }, { \"Limit\" : 0, \"MinWidth\" : 6 } ], \"Type\" : \"Type\", \"SupportedImageTypes\" : [ null, null ], \"ImageFetchers\" : [ { \"DefaultEnabled\" : true, \"Name\" : \"Name\" }, { \"DefaultEnabled\" : true, \"Name\" : \"Name\" } ], \"MetadataFetchers\" : [ { \"DefaultEnabled\" : true, \"Name\" : \"Name\" }, { \"DefaultEnabled\" : true, \"Name\" : \"Name\" } ] }, { \"DefaultImageOptions\" : [ { \"Limit\" : 0, \"MinWidth\" : 6 }, { \"Limit\" : 0, \"MinWidth\" : 6 } ], \"Type\" : \"Type\", \"SupportedImageTypes\" : [ null, null ], \"ImageFetchers\" : [ { \"DefaultEnabled\" : true, \"Name\" : \"Name\" }, { \"DefaultEnabled\" : true, \"Name\" : \"Name\" } ], \"MetadataFetchers\" : [ { \"DefaultEnabled\" : true, \"Name\" : \"Name\" }, { \"DefaultEnabled\" : true, \"Name\" : \"Name\" } ] } ], \"MetadataReaders\" : [ { \"DefaultEnabled\" : true, \"Name\" : \"Name\" }, { \"DefaultEnabled\" : true, \"Name\" : \"Name\" } ], \"SubtitleFetchers\" : [ { \"DefaultEnabled\" : true, \"Name\" : \"Name\" }, { \"DefaultEnabled\" : true, \"Name\" : \"Name\" } ], \"MetadataSavers\" : [ { \"DefaultEnabled\" : true, \"Name\" : \"Name\" }, { \"DefaultEnabled\" : true, \"Name\" : \"Name\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json; profile="CamelCase""))) {
                    String exampleString = "{ \"TypeOptions\" : [ { \"DefaultImageOptions\" : [ { \"Limit\" : 0, \"MinWidth\" : 6 }, { \"Limit\" : 0, \"MinWidth\" : 6 } ], \"Type\" : \"Type\", \"SupportedImageTypes\" : [ null, null ], \"ImageFetchers\" : [ { \"DefaultEnabled\" : true, \"Name\" : \"Name\" }, { \"DefaultEnabled\" : true, \"Name\" : \"Name\" } ], \"MetadataFetchers\" : [ { \"DefaultEnabled\" : true, \"Name\" : \"Name\" }, { \"DefaultEnabled\" : true, \"Name\" : \"Name\" } ] }, { \"DefaultImageOptions\" : [ { \"Limit\" : 0, \"MinWidth\" : 6 }, { \"Limit\" : 0, \"MinWidth\" : 6 } ], \"Type\" : \"Type\", \"SupportedImageTypes\" : [ null, null ], \"ImageFetchers\" : [ { \"DefaultEnabled\" : true, \"Name\" : \"Name\" }, { \"DefaultEnabled\" : true, \"Name\" : \"Name\" } ], \"MetadataFetchers\" : [ { \"DefaultEnabled\" : true, \"Name\" : \"Name\" }, { \"DefaultEnabled\" : true, \"Name\" : \"Name\" } ] } ], \"MetadataReaders\" : [ { \"DefaultEnabled\" : true, \"Name\" : \"Name\" }, { \"DefaultEnabled\" : true, \"Name\" : \"Name\" } ], \"SubtitleFetchers\" : [ { \"DefaultEnabled\" : true, \"Name\" : \"Name\" }, { \"DefaultEnabled\" : true, \"Name\" : \"Name\" } ], \"MetadataSavers\" : [ { \"DefaultEnabled\" : true, \"Name\" : \"Name\" }, { \"DefaultEnabled\" : true, \"Name\" : \"Name\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json; profile="CamelCase"", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json; profile="PascalCase""))) {
                    String exampleString = "{ \"TypeOptions\" : [ { \"DefaultImageOptions\" : [ { \"Limit\" : 0, \"MinWidth\" : 6 }, { \"Limit\" : 0, \"MinWidth\" : 6 } ], \"Type\" : \"Type\", \"SupportedImageTypes\" : [ null, null ], \"ImageFetchers\" : [ { \"DefaultEnabled\" : true, \"Name\" : \"Name\" }, { \"DefaultEnabled\" : true, \"Name\" : \"Name\" } ], \"MetadataFetchers\" : [ { \"DefaultEnabled\" : true, \"Name\" : \"Name\" }, { \"DefaultEnabled\" : true, \"Name\" : \"Name\" } ] }, { \"DefaultImageOptions\" : [ { \"Limit\" : 0, \"MinWidth\" : 6 }, { \"Limit\" : 0, \"MinWidth\" : 6 } ], \"Type\" : \"Type\", \"SupportedImageTypes\" : [ null, null ], \"ImageFetchers\" : [ { \"DefaultEnabled\" : true, \"Name\" : \"Name\" }, { \"DefaultEnabled\" : true, \"Name\" : \"Name\" } ], \"MetadataFetchers\" : [ { \"DefaultEnabled\" : true, \"Name\" : \"Name\" }, { \"DefaultEnabled\" : true, \"Name\" : \"Name\" } ] } ], \"MetadataReaders\" : [ { \"DefaultEnabled\" : true, \"Name\" : \"Name\" }, { \"DefaultEnabled\" : true, \"Name\" : \"Name\" } ], \"SubtitleFetchers\" : [ { \"DefaultEnabled\" : true, \"Name\" : \"Name\" }, { \"DefaultEnabled\" : true, \"Name\" : \"Name\" } ], \"MetadataSavers\" : [ { \"DefaultEnabled\" : true, \"Name\" : \"Name\" }, { \"DefaultEnabled\" : true, \"Name\" : \"Name\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json; profile="PascalCase"", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
