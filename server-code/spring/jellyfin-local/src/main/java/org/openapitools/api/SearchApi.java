/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.2.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.SearchHintResult;
import java.util.UUID;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-01-06T13:51:28.311925-04:00[America/Lower_Princes]")
@Validated
@Tag(name = "Search", description = "the Search API")
public interface SearchApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /Search/Hints : Gets the search hint result.
     *
     * @param searchTerm The search term to filter on. (required)
     * @param startIndex Optional. The record index to start at. All items with a lower index will be dropped from the results. (optional)
     * @param limit Optional. The maximum number of records to return. (optional)
     * @param userId Optional. Supply a user id to search within a user&#39;s library or omit to search all. (optional)
     * @param includeItemTypes If specified, only results with the specified item types are returned. This allows multiple, comma delimeted. (optional)
     * @param excludeItemTypes If specified, results with these item types are filtered out. This allows multiple, comma delimeted. (optional)
     * @param mediaTypes If specified, only results with the specified media types are returned. This allows multiple, comma delimeted. (optional)
     * @param parentId If specified, only children of the parent are returned. (optional)
     * @param isMovie Optional filter for movies. (optional)
     * @param isSeries Optional filter for series. (optional)
     * @param isNews Optional filter for news. (optional)
     * @param isKids Optional filter for kids. (optional)
     * @param isSports Optional filter for sports. (optional)
     * @param includePeople Optional filter whether to include people. (optional, default to true)
     * @param includeMedia Optional filter whether to include media. (optional, default to true)
     * @param includeGenres Optional filter whether to include genres. (optional, default to true)
     * @param includeStudios Optional filter whether to include studios. (optional, default to true)
     * @param includeArtists Optional filter whether to include artists. (optional, default to true)
     * @return Search hint returned. (status code 200)
     *         or Unauthorized (status code 401)
     *         or Forbidden (status code 403)
     */
    @Operation(
        operationId = "get",
        summary = "Gets the search hint result.",
        tags = { "Search" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Search hint returned.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = SearchHintResult.class)),
                @Content(mediaType = "application/json; profile=CamelCase", schema = @Schema(implementation = SearchHintResult.class)),
                @Content(mediaType = "application/json; profile=PascalCase", schema = @Schema(implementation = SearchHintResult.class))
            }),
            @ApiResponse(responseCode = "401", description = "Unauthorized"),
            @ApiResponse(responseCode = "403", description = "Forbidden")
        },
        security = {
            @SecurityRequirement(name = "CustomAuthentication")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/Search/Hints",
        produces = { "application/json", "application/json; profile=CamelCase", "application/json; profile=PascalCase" }
    )
    
    default ResponseEntity<SearchHintResult> get(
        @NotNull @Parameter(name = "searchTerm", description = "The search term to filter on.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "searchTerm", required = true) String searchTerm,
        @Parameter(name = "startIndex", description = "Optional. The record index to start at. All items with a lower index will be dropped from the results.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "startIndex", required = false) Integer startIndex,
        @Parameter(name = "limit", description = "Optional. The maximum number of records to return.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "limit", required = false) Integer limit,
        @Parameter(name = "userId", description = "Optional. Supply a user id to search within a user's library or omit to search all.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "userId", required = false) UUID userId,
        @Parameter(name = "includeItemTypes", description = "If specified, only results with the specified item types are returned. This allows multiple, comma delimeted.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "includeItemTypes", required = false) List<String> includeItemTypes,
        @Parameter(name = "excludeItemTypes", description = "If specified, results with these item types are filtered out. This allows multiple, comma delimeted.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "excludeItemTypes", required = false) List<String> excludeItemTypes,
        @Parameter(name = "mediaTypes", description = "If specified, only results with the specified media types are returned. This allows multiple, comma delimeted.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "mediaTypes", required = false) List<String> mediaTypes,
        @Parameter(name = "parentId", description = "If specified, only children of the parent are returned.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "parentId", required = false) UUID parentId,
        @Parameter(name = "isMovie", description = "Optional filter for movies.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "isMovie", required = false) Boolean isMovie,
        @Parameter(name = "isSeries", description = "Optional filter for series.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "isSeries", required = false) Boolean isSeries,
        @Parameter(name = "isNews", description = "Optional filter for news.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "isNews", required = false) Boolean isNews,
        @Parameter(name = "isKids", description = "Optional filter for kids.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "isKids", required = false) Boolean isKids,
        @Parameter(name = "isSports", description = "Optional filter for sports.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "isSports", required = false) Boolean isSports,
        @Parameter(name = "includePeople", description = "Optional filter whether to include people.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "includePeople", required = false, defaultValue = "true") Boolean includePeople,
        @Parameter(name = "includeMedia", description = "Optional filter whether to include media.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "includeMedia", required = false, defaultValue = "true") Boolean includeMedia,
        @Parameter(name = "includeGenres", description = "Optional filter whether to include genres.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "includeGenres", required = false, defaultValue = "true") Boolean includeGenres,
        @Parameter(name = "includeStudios", description = "Optional filter whether to include studios.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "includeStudios", required = false, defaultValue = "true") Boolean includeStudios,
        @Parameter(name = "includeArtists", description = "Optional filter whether to include artists.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "includeArtists", required = false, defaultValue = "true") Boolean includeArtists
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"TotalRecordCount\" : 9, \"SearchHints\" : [ { \"RunTimeTicks\" : 2, \"Album\" : \"Album\", \"PrimaryImageTag\" : \"PrimaryImageTag\", \"ChannelId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"ParentIndexNumber\" : 1, \"ItemId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\", \"StartDate\" : \"2000-01-23T04:56:07.000+00:00\", \"ThumbImageTag\" : \"ThumbImageTag\", \"ProductionYear\" : 5, \"AlbumId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"ThumbImageItemId\" : \"ThumbImageItemId\", \"MediaType\" : \"MediaType\", \"IndexNumber\" : 6, \"PrimaryImageAspectRatio\" : 5.962133916683182, \"Status\" : \"Status\", \"EpisodeCount\" : 0, \"BackdropImageItemId\" : \"BackdropImageItemId\", \"EndDate\" : \"2000-01-23T04:56:07.000+00:00\", \"AlbumArtist\" : \"AlbumArtist\", \"MatchedTerm\" : \"MatchedTerm\", \"Series\" : \"Series\", \"Type\" : \"Type\", \"ChannelName\" : \"ChannelName\", \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"BackdropImageTag\" : \"BackdropImageTag\", \"IsFolder\" : true, \"Artists\" : [ \"Artists\", \"Artists\" ], \"SongCount\" : 7 }, { \"RunTimeTicks\" : 2, \"Album\" : \"Album\", \"PrimaryImageTag\" : \"PrimaryImageTag\", \"ChannelId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"ParentIndexNumber\" : 1, \"ItemId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\", \"StartDate\" : \"2000-01-23T04:56:07.000+00:00\", \"ThumbImageTag\" : \"ThumbImageTag\", \"ProductionYear\" : 5, \"AlbumId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"ThumbImageItemId\" : \"ThumbImageItemId\", \"MediaType\" : \"MediaType\", \"IndexNumber\" : 6, \"PrimaryImageAspectRatio\" : 5.962133916683182, \"Status\" : \"Status\", \"EpisodeCount\" : 0, \"BackdropImageItemId\" : \"BackdropImageItemId\", \"EndDate\" : \"2000-01-23T04:56:07.000+00:00\", \"AlbumArtist\" : \"AlbumArtist\", \"MatchedTerm\" : \"MatchedTerm\", \"Series\" : \"Series\", \"Type\" : \"Type\", \"ChannelName\" : \"ChannelName\", \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"BackdropImageTag\" : \"BackdropImageTag\", \"IsFolder\" : true, \"Artists\" : [ \"Artists\", \"Artists\" ], \"SongCount\" : 7 } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json; profile="CamelCase""))) {
                    String exampleString = "{ \"TotalRecordCount\" : 9, \"SearchHints\" : [ { \"RunTimeTicks\" : 2, \"Album\" : \"Album\", \"PrimaryImageTag\" : \"PrimaryImageTag\", \"ChannelId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"ParentIndexNumber\" : 1, \"ItemId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\", \"StartDate\" : \"2000-01-23T04:56:07.000+00:00\", \"ThumbImageTag\" : \"ThumbImageTag\", \"ProductionYear\" : 5, \"AlbumId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"ThumbImageItemId\" : \"ThumbImageItemId\", \"MediaType\" : \"MediaType\", \"IndexNumber\" : 6, \"PrimaryImageAspectRatio\" : 5.962133916683182, \"Status\" : \"Status\", \"EpisodeCount\" : 0, \"BackdropImageItemId\" : \"BackdropImageItemId\", \"EndDate\" : \"2000-01-23T04:56:07.000+00:00\", \"AlbumArtist\" : \"AlbumArtist\", \"MatchedTerm\" : \"MatchedTerm\", \"Series\" : \"Series\", \"Type\" : \"Type\", \"ChannelName\" : \"ChannelName\", \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"BackdropImageTag\" : \"BackdropImageTag\", \"IsFolder\" : true, \"Artists\" : [ \"Artists\", \"Artists\" ], \"SongCount\" : 7 }, { \"RunTimeTicks\" : 2, \"Album\" : \"Album\", \"PrimaryImageTag\" : \"PrimaryImageTag\", \"ChannelId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"ParentIndexNumber\" : 1, \"ItemId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\", \"StartDate\" : \"2000-01-23T04:56:07.000+00:00\", \"ThumbImageTag\" : \"ThumbImageTag\", \"ProductionYear\" : 5, \"AlbumId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"ThumbImageItemId\" : \"ThumbImageItemId\", \"MediaType\" : \"MediaType\", \"IndexNumber\" : 6, \"PrimaryImageAspectRatio\" : 5.962133916683182, \"Status\" : \"Status\", \"EpisodeCount\" : 0, \"BackdropImageItemId\" : \"BackdropImageItemId\", \"EndDate\" : \"2000-01-23T04:56:07.000+00:00\", \"AlbumArtist\" : \"AlbumArtist\", \"MatchedTerm\" : \"MatchedTerm\", \"Series\" : \"Series\", \"Type\" : \"Type\", \"ChannelName\" : \"ChannelName\", \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"BackdropImageTag\" : \"BackdropImageTag\", \"IsFolder\" : true, \"Artists\" : [ \"Artists\", \"Artists\" ], \"SongCount\" : 7 } ] }";
                    ApiUtil.setExampleResponse(request, "application/json; profile="CamelCase"", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json; profile="PascalCase""))) {
                    String exampleString = "{ \"TotalRecordCount\" : 9, \"SearchHints\" : [ { \"RunTimeTicks\" : 2, \"Album\" : \"Album\", \"PrimaryImageTag\" : \"PrimaryImageTag\", \"ChannelId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"ParentIndexNumber\" : 1, \"ItemId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\", \"StartDate\" : \"2000-01-23T04:56:07.000+00:00\", \"ThumbImageTag\" : \"ThumbImageTag\", \"ProductionYear\" : 5, \"AlbumId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"ThumbImageItemId\" : \"ThumbImageItemId\", \"MediaType\" : \"MediaType\", \"IndexNumber\" : 6, \"PrimaryImageAspectRatio\" : 5.962133916683182, \"Status\" : \"Status\", \"EpisodeCount\" : 0, \"BackdropImageItemId\" : \"BackdropImageItemId\", \"EndDate\" : \"2000-01-23T04:56:07.000+00:00\", \"AlbumArtist\" : \"AlbumArtist\", \"MatchedTerm\" : \"MatchedTerm\", \"Series\" : \"Series\", \"Type\" : \"Type\", \"ChannelName\" : \"ChannelName\", \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"BackdropImageTag\" : \"BackdropImageTag\", \"IsFolder\" : true, \"Artists\" : [ \"Artists\", \"Artists\" ], \"SongCount\" : 7 }, { \"RunTimeTicks\" : 2, \"Album\" : \"Album\", \"PrimaryImageTag\" : \"PrimaryImageTag\", \"ChannelId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"ParentIndexNumber\" : 1, \"ItemId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"Name\" : \"Name\", \"StartDate\" : \"2000-01-23T04:56:07.000+00:00\", \"ThumbImageTag\" : \"ThumbImageTag\", \"ProductionYear\" : 5, \"AlbumId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"ThumbImageItemId\" : \"ThumbImageItemId\", \"MediaType\" : \"MediaType\", \"IndexNumber\" : 6, \"PrimaryImageAspectRatio\" : 5.962133916683182, \"Status\" : \"Status\", \"EpisodeCount\" : 0, \"BackdropImageItemId\" : \"BackdropImageItemId\", \"EndDate\" : \"2000-01-23T04:56:07.000+00:00\", \"AlbumArtist\" : \"AlbumArtist\", \"MatchedTerm\" : \"MatchedTerm\", \"Series\" : \"Series\", \"Type\" : \"Type\", \"ChannelName\" : \"ChannelName\", \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"BackdropImageTag\" : \"BackdropImageTag\", \"IsFolder\" : true, \"Artists\" : [ \"Artists\", \"Artists\" ], \"SongCount\" : 7 } ] }";
                    ApiUtil.setExampleResponse(request, "application/json; profile="PascalCase"", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
