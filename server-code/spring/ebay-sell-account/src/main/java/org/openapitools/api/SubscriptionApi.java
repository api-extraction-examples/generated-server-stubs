/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.2.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.SubscriptionResponse;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-01-06T13:50:38.845776-04:00[America/Lower_Princes]")
@Validated
@Tag(name = "subscription", description = "the subscription API")
public interface SubscriptionApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /subscription
     * This method retrieves a list of subscriptions associated with the seller account.
     *
     * @param limit This field is for future use. (optional)
     * @param continuationToken This field is for future use. (optional)
     * @return Success (status code 200)
     *         or Bad Request (status code 400)
     *         or Internal Server Error (status code 500)
     */
    @Operation(
        operationId = "getSubscription",
        description = "This method retrieves a list of subscriptions associated with the seller account.",
        tags = { "subscription" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = SubscriptionResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "Bad Request"),
            @ApiResponse(responseCode = "500", description = "Internal Server Error")
        },
        security = {
            @SecurityRequirement(name = "api_auth", scopes={ "https://api.ebay.com/oauth/api_scope/sell.account", "https://api.ebay.com/oauth/api_scope/sell.account.readonly" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/subscription",
        produces = { "application/json" }
    )
    
    default ResponseEntity<SubscriptionResponse> getSubscription(
        @Parameter(name = "limit", description = "This field is for future use.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "limit", required = false) String limit,
        @Parameter(name = "continuation_token", description = "This field is for future use.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "continuation_token", required = false) String continuationToken
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"next\" : \"next\", \"subscriptions\" : [ { \"marketplaceId\" : \"marketplaceId\", \"subscriptionLevel\" : \"subscriptionLevel\", \"subscriptionType\" : \"subscriptionType\", \"term\" : { \"unit\" : \"unit\", \"value\" : 0 }, \"subscriptionId\" : \"subscriptionId\" }, { \"marketplaceId\" : \"marketplaceId\", \"subscriptionLevel\" : \"subscriptionLevel\", \"subscriptionType\" : \"subscriptionType\", \"term\" : { \"unit\" : \"unit\", \"value\" : 0 }, \"subscriptionId\" : \"subscriptionId\" } ], \"total\" : 6, \"limit\" : 0, \"href\" : \"href\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
