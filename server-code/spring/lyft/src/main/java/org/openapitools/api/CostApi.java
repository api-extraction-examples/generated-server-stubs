/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.2.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.ApiError;
import org.openapitools.model.CostEstimateResponse;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-01-06T13:51:53.578762-04:00[America/Lower_Princes]")
@Validated
@Tag(name = "Public", description = "Endpoints that do not require a user")
public interface CostApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /cost : Cost estimates
     * Estimate the cost of taking a Lyft between two points. 
     *
     * @param startLat Latitude of the starting location (required)
     * @param startLng Longitude of the starting location (required)
     * @param rideType ID of a ride type (optional)
     * @param endLat Latitude of the ending location (optional)
     * @param endLng Longitude of the ending location (optional)
     * @return An object with an array of cost estimates by ride type (status code 200)
     *         or The &#39;error&#39; field will be one of the following:  * &#x60;bad_parameter&#x60;: A validation error occurred  * &#x60;no_service_in_area&#x60;: start location is not within a Lyft service area  * &#x60;ridetype_unavailable_in_region&#x60;: ridetype not supported at this start location  (status code 400)
     */
    @Operation(
        operationId = "getCost",
        summary = "Cost estimates",
        description = "Estimate the cost of taking a Lyft between two points. ",
        tags = { "Public" },
        responses = {
            @ApiResponse(responseCode = "200", description = "An object with an array of cost estimates by ride type", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CostEstimateResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "The 'error' field will be one of the following:  * `bad_parameter`: A validation error occurred  * `no_service_in_area`: start location is not within a Lyft service area  * `ridetype_unavailable_in_region`: ridetype not supported at this start location ", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ApiError.class))
            })
        },
        security = {
            @SecurityRequirement(name = "Client Authentication", scopes={ "public" }),
            @SecurityRequirement(name = "User Authentication", scopes={ "public" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/cost",
        produces = { "application/json" }
    )
    
    default ResponseEntity<CostEstimateResponse> getCost(
        @NotNull @Parameter(name = "start_lat", description = "Latitude of the starting location", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "start_lat", required = true) Double startLat,
        @NotNull @Parameter(name = "start_lng", description = "Longitude of the starting location", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "start_lng", required = true) Double startLng,
        @Parameter(name = "ride_type", description = "ID of a ride type", in = ParameterIn.QUERY) @Valid @RequestParam(value = "ride_type", required = false) String rideType,
        @Parameter(name = "end_lat", description = "Latitude of the ending location", in = ParameterIn.QUERY) @Valid @RequestParam(value = "end_lat", required = false) Double endLat,
        @Parameter(name = "end_lng", description = "Longitude of the ending location", in = ParameterIn.QUERY) @Valid @RequestParam(value = "end_lng", required = false) Double endLng
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"cost_estimates\" : [ { \"cost_token\" : \"EupdCgIzy17lJoRmiO5\", \"display_name\" : \"Lyft\", \"estimated_cost_cents_max\" : 1080, \"estimated_cost_cents_min\" : 1390, \"estimated_distance_miles\" : 12.4, \"estimated_duration_seconds\" : 540, \"is_valid_estimate\" : true, \"primetime_confirmation_token\" : \"EupdCgIzy17lJoRmiO5\", \"primetime_percentage\" : \"25%\", \"ride_type\" : \"lyft\" }, { \"cost_token\" : \"EupdCgIzy17lJoRmiO5\", \"display_name\" : \"Lyft\", \"estimated_cost_cents_max\" : 1080, \"estimated_cost_cents_min\" : 1390, \"estimated_distance_miles\" : 12.4, \"estimated_duration_seconds\" : 540, \"is_valid_estimate\" : true, \"primetime_confirmation_token\" : \"EupdCgIzy17lJoRmiO5\", \"primetime_percentage\" : \"25%\", \"ride_type\" : \"lyft\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
