/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.2.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.GetDailyReportAllCountries200ResponseInner;
import org.openapitools.model.GetDailyReportTotals200ResponseInner;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-01-06T13:44:30.536179-04:00[America/Lower_Princes]")
@Validated
@Tag(name = "Country", description = "the Country API")
public interface ReportApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /report/country/all : getDailyReportAllCountries
     * Get daily report for all countries. Date is mandatory parametar. Date format is by ISO 8601 standard, but you can provide different format with date-format parameter.
     *
     * @param date Date of the report. (required)
     * @param dateFormat Date format. If you dont want to use ISO 8601 standard (YYYY-MM-DD), you can provide different format. (optional, default to YYYY-MM-DD)
     * @param format Format of the response (optional, default to json)
     * @return Daily report for COVID-19 for selected country. (status code 200)
     */
    @Operation(
        operationId = "getDailyReportAllCountries",
        summary = "getDailyReportAllCountries",
        description = "Get daily report for all countries. Date is mandatory parametar. Date format is by ISO 8601 standard, but you can provide different format with date-format parameter.",
        tags = { "Country" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Daily report for COVID-19 for selected country.", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = GetDailyReportAllCountries200ResponseInner.class))),
                @Content(mediaType = "application/xml", array = @ArraySchema(schema = @Schema(implementation = GetDailyReportAllCountries200ResponseInner.class)))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/report/country/all",
        produces = { "application/json", "application/xml" }
    )
    
    default ResponseEntity<List<GetDailyReportAllCountries200ResponseInner>> getDailyReportAllCountries(
        @NotNull @Parameter(name = "date", description = "Date of the report.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "date", required = true) String date,
        @Parameter(name = "date-format", description = "Date format. If you dont want to use ISO 8601 standard (YYYY-MM-DD), you can provide different format.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "date-format", required = false, defaultValue = "YYYY-MM-DD") String dateFormat,
        @Parameter(name = "format", description = "Format of the response", in = ParameterIn.QUERY) @Valid @RequestParam(value = "format", required = false, defaultValue = "json") String format
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"date\" : \"date\", \"country\" : \"country\", \"province\" : [ { \"recovered\" : 2, \"active\" : 1, \"confirmed\" : 5, \"deaths\" : 5 }, { \"recovered\" : 2, \"active\" : 1, \"confirmed\" : 5, \"deaths\" : 5 } ], \"latitude\" : 0.8008282, \"longitude\" : 6.0274563 }, { \"date\" : \"date\", \"country\" : \"country\", \"province\" : [ { \"recovered\" : 2, \"active\" : 1, \"confirmed\" : 5, \"deaths\" : 5 }, { \"recovered\" : 2, \"active\" : 1, \"confirmed\" : 5, \"deaths\" : 5 } ], \"latitude\" : 0.8008282, \"longitude\" : 6.0274563 } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/xml"))) {
                    String exampleString = "<null> <country>aeiou</country> <date>aeiou</date> <latitude>1.3579</latitude> <longitude>1.3579</longitude> </null>";
                    ApiUtil.setExampleResponse(request, "application/xml", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /report/country/code : getDailyReportByCountryCode
     * Get daily report for specific country. Country code and date are mandatory in parametars. Country code is in ISO 3166-1 standard. It can be 2 chars (Alpha-2) or 3 chars (Alpha-3) type. Date format is by ISO 8601 standard, but you can provide different format with date-format parameter
     *
     * @param code Country code. Country code is by ISO 3166-1 standard. It can be 2 chars (Alpha-2) or 3 chars (Alpha-3) type. (required)
     * @param date Date of the report. (required)
     * @param dateFormat Date format. If you dont want to use ISO 8601 standard (YYYY-MM-DD), you can provide different format. (optional, default to YYYY-MM-DD)
     * @param format Format of the response (optional, default to json)
     * @return Daily report for COVID-19 for selected country. (status code 200)
     */
    @Operation(
        operationId = "getDailyReportByCountryCode",
        summary = "getDailyReportByCountryCode",
        description = "Get daily report for specific country. Country code and date are mandatory in parametars. Country code is in ISO 3166-1 standard. It can be 2 chars (Alpha-2) or 3 chars (Alpha-3) type. Date format is by ISO 8601 standard, but you can provide different format with date-format parameter",
        tags = { "Country" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Daily report for COVID-19 for selected country.", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = GetDailyReportAllCountries200ResponseInner.class))),
                @Content(mediaType = "application/xml", array = @ArraySchema(schema = @Schema(implementation = GetDailyReportAllCountries200ResponseInner.class)))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/report/country/code",
        produces = { "application/json", "application/xml" }
    )
    
    default ResponseEntity<List<GetDailyReportAllCountries200ResponseInner>> getDailyReportByCountryCode(
        @NotNull @Parameter(name = "code", description = "Country code. Country code is by ISO 3166-1 standard. It can be 2 chars (Alpha-2) or 3 chars (Alpha-3) type.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "code", required = true) String code,
        @NotNull @Parameter(name = "date", description = "Date of the report.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "date", required = true) String date,
        @Parameter(name = "date-format", description = "Date format. If you dont want to use ISO 8601 standard (YYYY-MM-DD), you can provide different format.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "date-format", required = false, defaultValue = "YYYY-MM-DD") String dateFormat,
        @Parameter(name = "format", description = "Format of the response", in = ParameterIn.QUERY) @Valid @RequestParam(value = "format", required = false, defaultValue = "json") String format
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"date\" : \"date\", \"country\" : \"country\", \"province\" : [ { \"recovered\" : 2, \"active\" : 1, \"confirmed\" : 5, \"deaths\" : 5 }, { \"recovered\" : 2, \"active\" : 1, \"confirmed\" : 5, \"deaths\" : 5 } ], \"latitude\" : 0.8008282, \"longitude\" : 6.0274563 }, { \"date\" : \"date\", \"country\" : \"country\", \"province\" : [ { \"recovered\" : 2, \"active\" : 1, \"confirmed\" : 5, \"deaths\" : 5 }, { \"recovered\" : 2, \"active\" : 1, \"confirmed\" : 5, \"deaths\" : 5 } ], \"latitude\" : 0.8008282, \"longitude\" : 6.0274563 } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/xml"))) {
                    String exampleString = "<null> <country>aeiou</country> <date>aeiou</date> <latitude>1.3579</latitude> <longitude>1.3579</longitude> </null>";
                    ApiUtil.setExampleResponse(request, "application/xml", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /report/country/name : getDailyReportByCountryName
     * Get daily report for specific country. Country name and date are mandatory in parametars. Date format is by ISO 8601 standard, but you can provide different format with date-format parameter
     *
     * @param name Country name. (required)
     * @param date Date of the report. (required)
     * @param dateFormat Date format. If you dont want to use ISO 8601 standard (YYYY-MM-DD), you can provide different format. (optional, default to YYYY-MM-DD)
     * @param format Format of the response (optional, default to json)
     * @return Daily report for COVID-19 for selected country. (status code 200)
     */
    @Operation(
        operationId = "getDailyReportByCountryName",
        summary = "getDailyReportByCountryName",
        description = "Get daily report for specific country. Country name and date are mandatory in parametars. Date format is by ISO 8601 standard, but you can provide different format with date-format parameter",
        tags = { "Country" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Daily report for COVID-19 for selected country.", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = GetDailyReportAllCountries200ResponseInner.class))),
                @Content(mediaType = "application/xml", array = @ArraySchema(schema = @Schema(implementation = GetDailyReportAllCountries200ResponseInner.class)))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/report/country/name",
        produces = { "application/json", "application/xml" }
    )
    
    default ResponseEntity<List<GetDailyReportAllCountries200ResponseInner>> getDailyReportByCountryName(
        @NotNull @Parameter(name = "name", description = "Country name.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "name", required = true) String name,
        @NotNull @Parameter(name = "date", description = "Date of the report.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "date", required = true) String date,
        @Parameter(name = "date-format", description = "Date format. If you dont want to use ISO 8601 standard (YYYY-MM-DD), you can provide different format.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "date-format", required = false, defaultValue = "YYYY-MM-DD") String dateFormat,
        @Parameter(name = "format", description = "Format of the response", in = ParameterIn.QUERY) @Valid @RequestParam(value = "format", required = false, defaultValue = "json") String format
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"date\" : \"date\", \"country\" : \"country\", \"province\" : [ { \"recovered\" : 2, \"active\" : 1, \"confirmed\" : 5, \"deaths\" : 5 }, { \"recovered\" : 2, \"active\" : 1, \"confirmed\" : 5, \"deaths\" : 5 } ], \"latitude\" : 0.8008282, \"longitude\" : 6.0274563 }, { \"date\" : \"date\", \"country\" : \"country\", \"province\" : [ { \"recovered\" : 2, \"active\" : 1, \"confirmed\" : 5, \"deaths\" : 5 }, { \"recovered\" : 2, \"active\" : 1, \"confirmed\" : 5, \"deaths\" : 5 } ], \"latitude\" : 0.8008282, \"longitude\" : 6.0274563 } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/xml"))) {
                    String exampleString = "<null> <country>aeiou</country> <date>aeiou</date> <latitude>1.3579</latitude> <longitude>1.3579</longitude> </null>";
                    ApiUtil.setExampleResponse(request, "application/xml", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /report/totals : getDailyReportTotals
     * Get daily report data for whole world.
     *
     * @param date Date of the report. If you don&#39;t put this field all dates will be returned. (optional)
     * @param dateFormat Date format. If you dont want to use ISO 8601 standard (YYYY-MM-DD), you can provide different format. (optional, default to YYYY-MM-DD)
     * @param format Format of the response. If you don&#39;t put this field JSON will be response format. (optional, default to json)
     * @return Data about COVID-19 for whole world (status code 200)
     */
    @Operation(
        operationId = "getDailyReportTotals",
        summary = "getDailyReportTotals",
        description = "Get daily report data for whole world.",
        tags = { "Totals" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Data about COVID-19 for whole world", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = GetDailyReportTotals200ResponseInner.class))),
                @Content(mediaType = "application/xml", array = @ArraySchema(schema = @Schema(implementation = GetDailyReportTotals200ResponseInner.class)))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/report/totals",
        produces = { "application/json", "application/xml" }
    )
    
    default ResponseEntity<List<GetDailyReportTotals200ResponseInner>> getDailyReportTotals(
        @Parameter(name = "date", description = "Date of the report. If you don't put this field all dates will be returned.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "date", required = false) String date,
        @Parameter(name = "date-format", description = "Date format. If you dont want to use ISO 8601 standard (YYYY-MM-DD), you can provide different format.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "date-format", required = false, defaultValue = "YYYY-MM-DD") String dateFormat,
        @Parameter(name = "format", description = "Format of the response. If you don't put this field JSON will be response format.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "format", required = false, defaultValue = "json") String format
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"date\" : \"date\", \"recovered\" : 5, \"critical\" : 1, \"active\" : 0, \"confirmed\" : 6, \"deaths\" : 5 }, { \"date\" : \"date\", \"recovered\" : 5, \"critical\" : 1, \"active\" : 0, \"confirmed\" : 6, \"deaths\" : 5 } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/xml"))) {
                    String exampleString = "<null> <active>123</active> <confirmed>123</confirmed> <critical>123</critical> <date>aeiou</date> <deaths>123</deaths> <recovered>123</recovered> </null>";
                    ApiUtil.setExampleResponse(request, "application/xml", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
