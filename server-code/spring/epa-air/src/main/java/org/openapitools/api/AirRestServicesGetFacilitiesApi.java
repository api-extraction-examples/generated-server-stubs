/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.2.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.AirRestServicesGetFacilitiesGet200Response;
import java.math.BigDecimal;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-01-06T13:50:47.778831-04:00[America/Lower_Princes]")
@Validated
@Tag(name = "Facilities", description = "the Facilities API")
public interface AirRestServicesGetFacilitiesApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /air_rest_services.get_facilities : Clean Air Act Facility Search
     * Validates query search parameters and returns query identifier.  Use the responseset parameter to set the page size
     *
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param pFn Facility Name Filter. Enter one or more case-insensitive facility names to filter results.  Provide multiple values as a comma-delimited list.  See p_fntype for additional modifiers. (optional)
     * @param pSa Facility street address. Enter a complete or partial street address. (optional)
     * @param pSa1 Facility street address. Enter a complete or partial street address.   Note that p_sa1 is culmulative with p_sa. (optional)
     * @param pCt Facility City Filter. Enter a single case-insensitive city name to filter results. (optional)
     * @param pCo Facility County Filter. Provide a single county name in combination with a state value provided via p_st. (optional)
     * @param pFips FIPS Code Filter.  Enter a single 5-character Federal Information Processing Standards (FIPS) state + county value to restrict results.  E.g. to limit results to Kenosha County, Wisconsin, use 55059. (optional)
     * @param pSt Facility State and State-Equivalent Filter.  Provide one or more USPS postal abbreviations for states and state-equivalents to filter results.  Provide multiple values as a comma-delimited list. (optional)
     * @param pZip 5-Digit ZIP Code Filter. Provide one or more 5-digit postal zip codes to filter results.  May contain multiple comma-separated values. (optional)
     * @param pLcon Air Program Local Control Region Code Filter.  Enter one or more local control region codes to filter results.  Provide multiple codes as a comma-delimited list.  Codes where they exist are specific by state. (optional)
     * @param pFrs Facility Registry Service ID Filter. Enter a single 12-digit FRS identifier to filter results. (optional)
     * @param pReg EPA Region Filter. Provide a single value of 01 thru 10 to restrict results to a single EPA region. (optional)
     * @param pSic Standard Industrial Classification (SIC) Code Filter.  Enter a single 4-digit SIC Code to filter results.  If more complex filtering is required, use p_sic2 and p_sic4. (optional)
     * @param pNcs North American Industry Classification System Filter. Enter two to six digits to filter results to facilities having matching NAICS codes.  Digits less than six will match to all codes beginning with the provided values. (optional)
     * @param pQnc Number of quarters in non-compliance limiter.  Enter an integer value between 1 and 4 to limit results. (optional)
     * @param pPen Last Penality Date Qualifier Filter.  Enter one of the following:    - NEVER &#x3D; No Penalties - ANY &#x3D; Any Penalty - LEXX &#x3D; Less than or equal to XX months.  Provide a number in place of XX, e.g. \&quot;LE5\&quot; for a facility with a penalty within previous 5 months. - GTXX &#x3D; Greater than XX months.  Provide a number in place of XX, eg. GT12, for a facility with the last penalty greater than 12 months ago. (optional)
     * @param pOpst Operating status filter.  Enter one or more operating status codes to limit results.   Provide multiple codes as a comma-delimited list. (optional)
     * @param pC1lat In decimal degrees.  Latitude of 1st corner of box that bounds the resulting facilities. The latitude and longitude of both corners of the bounding box must be provided. (optional)
     * @param pC1lon In decimal degrees.  Longitude of 1st corner of box that bounds the resulting facilities. The latitude and longitude of both corners of the bounding box must be provided. (optional)
     * @param pC2lat In decimal degrees.  Latitude of 2nd corner of box that bounds the resulting facilities. The latitude and longitude of both corners of the bounding box must be provided. (optional)
     * @param pC2lon In decimal degrees.  Longitude of 2nd corner of box that bounds the resulting facilities. The latitude and longitude of both corners of the bounding box must be provided. (optional)
     * @param pUsmex US-Mexico Border Flag.  Enter Y/N to restrict searches to facilities located within 100KM of the border. (optional)
     * @param pSic2 Standard Industrial Classification (SIC) Code Filter Alternate 2. Enter a wild-card search against SIC codes.  A final wild-card is always present allowing \&quot;22\&quot; to match all SIC codes beginning with 22.  Use the \&quot;%\&quot; character within strings to match any SIC values with the pattern.  For example, \&quot;2%21\&quot; matches 2021, 2121, 2221, etc. (optional)
     * @param pSic4 Standard Industrial Classification (SIC) Code Filter Alternate 3.  Enter the first 2, 3 or 4 SIC code digits to filter results to facilities having those code prefixes.  As this alternative does not utilize an index, p_sic2 will generally be quicker. (optional)
     * @param pFa Federal Agency. 1 character or 5-character values; may contain multiple comma-separated values. ALL will retrieve all facilities where the federal agency code is not null.  Use the Federal Agencies lookup service to obtain a list of values. (optional)
     * @param pAct Active Permits/Facilities Flag.  Provide Y or N to filter results to facilities with active permits. (optional)
     * @param pMaj Major Facility Flag.  Enter Y to restrict results to Major facilities only. (optional)
     * @param pMact CAA Maximum Achievable Control Technology (MACT) Subpart codes (alpha ID between 1 and 7 characters) applicable to the facility. (optional)
     * @param pNsps Air Programl New Source Performance Standards (NSPS)  Subpart Code Search.  One or more valid Air Program NSPS Program codes cand be passed.   (optional)
     * @param pNspsm Air Programl New Source Performance Standards Minors (NSPSM) Subpart Code Search.  One or more valid Air Program NSPSM Subpart codes can be passed.   (optional)
     * @param pProg Air Program Code Filter.  Enter one or more Air program codes to filter results.  Provide multiple values as a comma-delimited list. (optional)
     * @param pFea Formal Enforcement Actions [within / not within] specified date range indicator. The date range is determined by parameters p_fead1 and p_fead2 or by parameter p_feay. - W &#x3D; within date range - N &#x3D; not within date range (optional)
     * @param pFeay Years (1 to 5) Range.  This value is used to create a date range for Formal Enforcement Actions (FEA). Used along with p_fea (which indicates whether to look within or outside of the date range) to find FEAs within (or not within) the number of years specified. (optional)
     * @param pFeaa Agency associated with Formal Enforcement Actions: - E &#x3D; EPA - S &#x3D; State - A &#x3D; All (optional)
     * @param pIea Informal Enforcement Actions [within / not within] specified date range.  The date range is determined by parameters p_iead1 and p_iead2 or by parameter p_ieay. - W &#x3D; within date range - N &#x3D; not within date range (optional)
     * @param pIeay Years (1 to 5) Range.  This value is used to create a date range for Informal Enforcement Actions (IEA). Used along with p_iea (which indicates whether to look within or outside of the date range) to find IEAs within (or not within) the number of years specified. (optional)
     * @param pIeaa Agency associated with Informal Enforcement Actions. If left blank, both agencies are included. - E &#x3D; EPA - S &#x3D; State (optional)
     * @param pQiv Quarters in Noncompliance Limiter.  Enter a coded value to limit results to facilities with given quarter of noncompliance. - Z &#x3D; Zero quarters in noncompliance. - GEXX &#x3D; Replacing XX with a numeric value, that number of quarterd or more in noncompliance. - GTXX &#x3D; Replacing XX with a numeric value, more than that number of quarters in noncompliance. (optional)
     * @param pNaa Non-Attainment Area Flag.  Enter a Y or N to filter for or against facilities flagged as non-attainment areas. (optional)
     * @param pImpw Discharging into Impaired Waters Flag. Enter Y to limit results to facilities with discharge to waterbodies listed as impaired in the ATTAINS database. (optional)
     * @param pTrep Current Toxics Release Inventory (TRI) Reporter Limiter.  Enter one of the following codes to limit results. - CURR &#x3D; Current TRI reporter. - NONCURR &#x3D; Has reported to TRI in the past but not for the current reporting year. (optional)
     * @param pTriCat Toxic Release Inventory Released To Air Chemical Identifier Category Filter.  Enter the chemical identifier category code to limit results. Note when filtering by TRI chemical identifier categories one may not also filter by specific chemical identifiers via p_tri_pol.  You must also specify a release amount using p_tri_amt or p_tri_any_amt. - TOTAL &#x3D; Total Released to Air - CARC &#x3D; Total Carcinogens Released to Air - HAP &#x3D; Total Hazardous Air Pollutants Released to Air (optional)
     * @param pTriAmt Toxic Release Inventory Release Amount Filter.  Enter a value in pounds to limit results to facilities releasing this amount or greateer of TRI releases.  Valid values are 0, GT0, GT1000, GT5000, GT10000 and GT50000. Note when filtering by TRI release amounts one may only use either p_tri_amt or p_tri_any_amt. (optional)
     * @param pTriAnyAmt Toxic Release Inventory Release Of Any Kind Above Value Filter.  Enter a value to limit results to facilities releasing this amount or more of TRI releases.  Note when filtering by TRI releases one may only use p_tri_any_amt or p_tri_amt and not both. (optional)
     * @param pTriPol Toxic Release Inventory Chemical Identifier Filter.  Enter one or more chemical identifier codes to limit results. Note when filtering by specific TRI chemical identifiers one may not also filter by chemical identifier categories via p_tri_cat. (optional)
     * @param pGhgCat Green House Gas (GHG) Gas Code Category.  Must be used with either a formatted (p_ghg_amt) or custom (p_ghg_any_amt) release amount. (optional)
     * @param pGhgAmt Green House Gas (GHG) CO2 Equivalent Formatted Release Amount.  First 2 characters must contain GT (greater than) followed by a number. (optional)
     * @param pGhgAnyAmt Green House Gas (GHG) C02 Equivalent Custom Amount.  The C02E value reported for the provided category, will be greater or equal to the amount provided. (optional)
     * @param pGhgYr Green House Gas (GHG) Reporting Year. (2010 through 2015) (optional)
     * @param pNeiPol National Emissions Inventory (NEI) Pollutant Identifier.  When a pollutant identifer is entered a corresponding formatted amount or custom amount must be entered. (optional)
     * @param pNeiAmt National Emissions Inventory (NEI) Formatted Pollutant Amount.  A formatted value where the 1st two characters must start with GT or LT followed by a number.  Identifies facilities that have a NEI Pollutant Emission  where the supplied value is &gt; or &lt; the pollutant emission amount.   (optional)
     * @param pNeiAnyAmt National Emissions Inventory (NEI) Custom Pollutant Amount.  Only a number can be entered.  Identifies facilities with where the NEI Pollutant Emission Amount is greater than the number entered. (optional)
     * @param pNeiYr National Emissions Inventory (NEI) year:  2014 or 2011 (optional)
     * @param pNeiCat National Emissions Inventory (NEI) Pollutant Category.  When a pollutant category is entered, a corresponding formatted pollutant amount or custom amount must be entered. (optional)
     * @param pPm Percent Minority Population Limiter.  Enter a value to restrict results to facilities with a given percentage of minority population within 3-mile radius. - NONE &#x3D; 0% - GT5 &#x3D; greater than 5% - GT10 &#x3D; greater than 10% - GT25 &#x3D; greater than 25% - GT50 &#x3D; greater than 50% - GT75 &#x3D; greater than 75% (optional)
     * @param pPd Population Density Limiter (per sq mile). Enter a value to limit results to facilities located in area of a given population density. - NONE &#x3D; 0 population density per square mile - GT100 &#x3D; More than 100 population density per square mile - GT500 &#x3D; More than 500 population density per square mile - GT1000 &#x3D; More than 1000 population density per square mile - GT5000 &#x3D; More than 5000 population density per square mile - GT10000 &#x3D; More than 10000 population density per square mile - GT20000 &#x3D; More than 20000 population density per square mile (optional)
     * @param pIco Indian Country Flag.  Enter a \&quot;Y\&quot; or \&quot;N\&quot; to restrict searches to facilities inside or outside Indian Country. (optional)
     * @param pHuc 2-, 4-, 6-, or 8-character watershed code. May contain multiple comma-separated values. (optional)
     * @param pWbd 2-, 4-, 6-, 8-, 10-, or 12-character watershed (WBD from the USGS Watershed Boundary Dataset). May contain multiple comma-separated values.  Uses the FRS Best Pick Coordinate to obtain the WBD12 Huc value. (optional)
     * @param pPid Nine-digit permit IDs. May contain up to 2000 comma-separated values. (optional)
     * @param pMed Filter Results by Media. - M &#x3D; RMP (Risk Management Plan) - R &#x3D; RCRA (Hazardous Waste) - S &#x3D; SDWA (Public Drinking Water Systems) - W &#x3D; Water - ALL &#x3D; Water and RCRA and SDWA (optional)
     * @param pYsl Last Facility Inspection [within / not within] Specified Date Range Indicator. The date range is determined by parameters p_idt1 and p_idt2 or by parameter p_ysly. - W &#x3D; within date range - N &#x3D; not within date range (optional)
     * @param pYsly Number of years (1 to 5) since last facility inspection.  A value of 1 means that it has been inspected within the year. (optional)
     * @param pYsla Facility Last Inspection Code Filter.  If left blank, both agencies are included.  Enter a value to limit results: - E &#x3D; EPA - S &#x3D; State (optional)
     * @param pStsl Last Stack Test [within / not within] Specified Date Range Indicator. - W &#x3D; within date range - N &#x3D; not within date range (optional)
     * @param pStsly Number of years (1 to 5) since date of last stack test. A value of 1 means it has been inspected within the year. (optional)
     * @param pStsla Stack Last Test Code Filter.  Enter a value to limit results: - A &#x3D; All - E &#x3D; EPA - S &#x3D; State (optional)
     * @param pStres Air Stack Test Status Description Filter.  Enter one or more test status descriptions to filter results.  Enter multiple values as a comma-delimited list. (optional)
     * @param pSttyp Air Conductor Type Code Filter.  Enter one or more conductor type codes to filter results.  Provide multiple values as a comma-delimited list. (optional)
     * @param pQs Quick Search. Allows entry for city, state, and/or zip code. (optional)
     * @param pSfs Single Facility Search Filter.  Provide a facility name or program system identifier to limit results.  For the all data search, the FRS registry identifier is also searched. (optional)
     * @param pTribeid Numeric code for tribe (or list of tribes). (optional)
     * @param pTribename Tribe Name Filter.  Enter a single tribe name to filter results. (optional)
     * @param pTribedist Proximity to tribal land limiter. Enter an amount of mile between 0 and 25 to filter results.  This parameter is only evaluated if p_tribeid is populated. (optional)
     * @param pOwop Owner/Operator code filter.  Enter one or more codes to limit results. - CNG - COR - CTG - DIS - FDF - MWD - MXO - NON - POF - SDT - STF - TRB (optional)
     * @param pAgoo Indicates whether to AND or OR the Owner/Operator parameter (p_owop) and the federal agency code (p_fa) parameters. (optional)
     * @param pIdt1 Beginning of date range of most recent facility inspection. (optional)
     * @param pIdt2 End of date range of most recent facility inspection. (optional)
     * @param pStdt1 Beginning of date range of most recent stack test. (optional)
     * @param pStdt2 End of date range of most recent stack test. (optional)
     * @param pPityp Inspection Type: - CAC &#x3D; Corrective Action Inspection - CAV &#x3D; Compliance Assistance Visit - CDI &#x3D; Case Development Inspection - CEI &#x3D; Inspection Inspection - CSE &#x3D; Compliance Schedule Evaluation - FCI &#x3D; Focused Compliance - FRR &#x3D; Financial Record Review - FSD &#x3D; Facility Self Disclosure - FUI &#x3D; Follow-Up Inspection - GME &#x3D; Groundwater Monitoring Evaluation - NRR &#x3D; Non-Financial Record Review - OAM &#x3D; Operation and Maintenance Inspection May contain multiple comma-separated values. (optional)
     * @param pCifdi Compliance issuess found during inspection. (optional)
     * @param pPfead1 Formal Enforcement Action Date Range Start.  Enter a date in MM/DD/YYYY format to set the start of the range for filtering by recent Formal Enforcement Action (FEA) taken against the facility within the last five years. (optional)
     * @param pPfead2 Formal Enforcement Action Date Range End.  Enter a date in MM/DD/YYYY format to set the end of the date range for filtering by recent Formal Enforcement Action (FEA) taken against the facility within the last five years. (optional)
     * @param pPfeat Formal Enforcement Action (FEA) Code Filter.  Enter one or more three-letter FEA codes to restrict results to facilities with these attributes.  Use p_fead1 and p_fead2 parameters to further restrict this filter by entering a date range.  Provide multiple codes as a comma-delimited list. (optional)
     * @param pPsncq Quarters in Significant Noncompliance Limiter.  Enter a coded value to limit results to facilities with given quarter of significant noncompliance. - Z &#x3D; Zero quarters in significant noncompliance. - GEXX &#x3D; Replacing XX with a numeric value, that number of quarterd or more in significant noncompliance. - GTXX &#x3D; Replacing XX with a numeric value, more than that number of quarters in significant noncompliance. (optional)
     * @param pPctrack Compliance Tracking Limiter. Provide a keyword to indicate the extent to which data is being entered and effluent exceedances are being identified. - Off - Partial - On (optional)
     * @param pSwpa Source water protection area (optional)
     * @param pDes Universe Designation Limiter.  Enter one or more universe designation codes.  Provide multiple values as a comma-delimited list.  Use code \&quot;TSDF\&quot; to return the full enforcement TSDF universe and \&quot;Operating TSDF\&quot; to return the operating TSDF universe. (optional)
     * @param pFntype Controls type of text search performed on facility name with parameter p_fn. - EXACT &#x3D; Find facilities having the exact provided name(s). - BEGINS &#x3D; Find facilities with names starting with the provided term(s). - ALL &#x3D; Find facilities using Oracle text search terms. - CONTAINS &#x3D;  (optional)
     * @param pHpvmth Months in high priority violation status out of the previous three years limiter.  Provide a number of months in the past three years.  Results will limited to facilities in high priority violation status during that time.  (optional)
     * @param pRecvio Recent Violation Status Filter.  Enter one or more recent violation codes to limit results.  Provide multiple values as a comma-delimited list. - NO VIOL &#x3D; Selects facilities with no recent violations. - ANY HPV &#x3D; Selects facilities with either addressed or unaddressed high priority violations. - ADDRS-EPA - Select facilities with recent EPA addressed violations. - ADDRS-LOCAL - Select facilities with recent locally addressed violations. - ADDRS-STATE - Select facilities with recent state addressed violations. - UNADDR-EPA - Select facilities with recent EPA unaddressed violations. - UNADDR-LOCAL - Select facilities with recent locally unaddressed violations. - UNADDR-STATE - Select facilities with recent state unaddressed violations. - FRV VIOL &#x3D; Selects facilities with a recent federally reportable violation without a high priority violation. (optional)
     * @param pPollvio Air Pollutant Code For A Recent Violation Filter.  Provide one or more pollutant codes to select facilities with one or more of the entered pollutant codes for a recent air violation.  Provide multiple values as a comma-delimited list. (optional)
     * @param pAr Associated EPA Air Reports Program Filter.  Enter multiple values as a comma-delimited list.  Valid values are: - TRI &#x3D; Toxic Release Inventory. - GHG &#x3D; Green House Gas Reporter. - EIS &#x3D; Emission Inventory System. - CAMD &#x3D; Clean Air Markets Program Reporter. (optional)
     * @param pTriYr Toxic Release Inventory Reporting Year Filter.  Enter one or more year values to filter results by the TRI reporting year.  Provide multiple years as a comma-delimited list. (optional)
     * @param pPidall Controls whether search is restricted to existing system. Y means the search will match the p_pid parameter against all associated permits (AIR, RCRA, SDWIS, etc). (optional)
     * @param pFacIco FRS tribal land code flag.  Enter \&quot;Y\&quot; or \&quot;N\&quot; to include or exclude facilities based on FRS tribal land code. (optional)
     * @param pIcoo Indian country search and/or flag.  Enter \&quot;Y\&quot; to set indian country search conditions to return any results found using p_ico, p_fac_ico or p_fac_icoo.  Otherwise only results matching all provided p_ico, p_fac_ico or p_fac_icoo conditions will be returned. (optional)
     * @param pFacIcos FRS tribal land spatial flag.  Enter \&quot;Y\&quot; or \&quot;N\&quot; to include or exclude facilities based on FRS tribal land spatial flag. (optional)
     * @param pEjscreen Enter \&quot;Y\&quot; to limit facilities to Census block groups where one of more Environmental Justice indexes above 80th percentile. (optional)
     * @param pLimitAddr Limit Address Search Flag.  Enter Y to restrict facility searches to native data source only.   (optional)
     * @param pLat Latitude location in decimal degrees. (optional)
     * @param pLong Longitude location in decimal degrees. (optional)
     * @param pRadius Spatial Search Radius.  Enter a radius up to 100 miles in which to spatially search for facilities. (optional)
     * @param pDecouple Decouple Inspection Code Search Flag.  Enter \&quot;Y\&quot; to search for inspection code types with p_pityp without respect to the date range search provided with p_ysl* parameters. (optional)
     * @param pEjscreenOver80cnt The number of Environmenmt Justice Indicators above the 80th percentile.  Valid values are 1 through 11. (optional)
     * @param queryset Query Limiter.  Enter a value to limit the number of records returned for each query. Value cannot exceed 70,000. (optional)
     * @param responseset Response Set Limiter. Enter a value to limit the number of records per page. Value cannot exceed 1,000. (optional)
     * @param tablelist Table List Flag. Enter a Y to display the first page of facility results. (optional)
     * @param maplist Map List Flag.  Provide a Y to return mappable coordinates representing the full geographic extent of the queryset (all facilities that met the selection criteria). (optional)
     * @param summarylist Summary List Flag.  Enter a Y to return a list of summary statistics based on the parameters submitted to the query service. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param qcolumns Used to customize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions. (optional)
     * @return Results are summary statistics for the query and a query identifier (QID). (status code 200)
     */
    @Operation(
        operationId = "airRestServicesGetFacilitiesGet",
        summary = "Clean Air Act Facility Search",
        description = "Validates query search parameters and returns query identifier.  Use the responseset parameter to set the page size",
        tags = { "Facilities" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Results are summary statistics for the query and a query identifier (QID).", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = AirRestServicesGetFacilitiesGet200Response.class)),
                @Content(mediaType = "application/xml", schema = @Schema(implementation = AirRestServicesGetFacilitiesGet200Response.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/air_rest_services.get_facilities",
        produces = { "application/json", "application/xml" }
    )
    
    default ResponseEntity<AirRestServicesGetFacilitiesGet200Response> airRestServicesGetFacilitiesGet(
        @Parameter(name = "output", description = "Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "output", required = false) String output,
        @Parameter(name = "p_fn", description = "Facility Name Filter. Enter one or more case-insensitive facility names to filter results.  Provide multiple values as a comma-delimited list.  See p_fntype for additional modifiers.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_fn", required = false) String pFn,
        @Parameter(name = "p_sa", description = "Facility street address. Enter a complete or partial street address.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_sa", required = false) String pSa,
        @Parameter(name = "p_sa1", description = "Facility street address. Enter a complete or partial street address.   Note that p_sa1 is culmulative with p_sa.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_sa1", required = false) String pSa1,
        @Parameter(name = "p_ct", description = "Facility City Filter. Enter a single case-insensitive city name to filter results.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_ct", required = false) String pCt,
        @Parameter(name = "p_co", description = "Facility County Filter. Provide a single county name in combination with a state value provided via p_st.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_co", required = false) String pCo,
        @Parameter(name = "p_fips", description = "FIPS Code Filter.  Enter a single 5-character Federal Information Processing Standards (FIPS) state + county value to restrict results.  E.g. to limit results to Kenosha County, Wisconsin, use 55059.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_fips", required = false) String pFips,
        @Parameter(name = "p_st", description = "Facility State and State-Equivalent Filter.  Provide one or more USPS postal abbreviations for states and state-equivalents to filter results.  Provide multiple values as a comma-delimited list.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_st", required = false) String pSt,
        @Parameter(name = "p_zip", description = "5-Digit ZIP Code Filter. Provide one or more 5-digit postal zip codes to filter results.  May contain multiple comma-separated values.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_zip", required = false) String pZip,
        @Parameter(name = "p_lcon", description = "Air Program Local Control Region Code Filter.  Enter one or more local control region codes to filter results.  Provide multiple codes as a comma-delimited list.  Codes where they exist are specific by state.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_lcon", required = false) String pLcon,
        @Parameter(name = "p_frs", description = "Facility Registry Service ID Filter. Enter a single 12-digit FRS identifier to filter results.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_frs", required = false) String pFrs,
        @Parameter(name = "p_reg", description = "EPA Region Filter. Provide a single value of 01 thru 10 to restrict results to a single EPA region.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_reg", required = false) String pReg,
        @Parameter(name = "p_sic", description = "Standard Industrial Classification (SIC) Code Filter.  Enter a single 4-digit SIC Code to filter results.  If more complex filtering is required, use p_sic2 and p_sic4.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_sic", required = false) String pSic,
        @Parameter(name = "p_ncs", description = "North American Industry Classification System Filter. Enter two to six digits to filter results to facilities having matching NAICS codes.  Digits less than six will match to all codes beginning with the provided values.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_ncs", required = false) String pNcs,
        @Parameter(name = "p_qnc", description = "Number of quarters in non-compliance limiter.  Enter an integer value between 1 and 4 to limit results.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_qnc", required = false) BigDecimal pQnc,
        @Parameter(name = "p_pen", description = "Last Penality Date Qualifier Filter.  Enter one of the following:    - NEVER = No Penalties - ANY = Any Penalty - LEXX = Less than or equal to XX months.  Provide a number in place of XX, e.g. \"LE5\" for a facility with a penalty within previous 5 months. - GTXX = Greater than XX months.  Provide a number in place of XX, eg. GT12, for a facility with the last penalty greater than 12 months ago.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_pen", required = false) String pPen,
        @Parameter(name = "p_opst", description = "Operating status filter.  Enter one or more operating status codes to limit results.   Provide multiple codes as a comma-delimited list.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_opst", required = false) String pOpst,
        @Parameter(name = "p_c1lat", description = "In decimal degrees.  Latitude of 1st corner of box that bounds the resulting facilities. The latitude and longitude of both corners of the bounding box must be provided.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_c1lat", required = false) BigDecimal pC1lat,
        @Parameter(name = "p_c1lon", description = "In decimal degrees.  Longitude of 1st corner of box that bounds the resulting facilities. The latitude and longitude of both corners of the bounding box must be provided.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_c1lon", required = false) BigDecimal pC1lon,
        @Parameter(name = "p_c2lat", description = "In decimal degrees.  Latitude of 2nd corner of box that bounds the resulting facilities. The latitude and longitude of both corners of the bounding box must be provided.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_c2lat", required = false) BigDecimal pC2lat,
        @Parameter(name = "p_c2lon", description = "In decimal degrees.  Longitude of 2nd corner of box that bounds the resulting facilities. The latitude and longitude of both corners of the bounding box must be provided.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_c2lon", required = false) BigDecimal pC2lon,
        @Parameter(name = "p_usmex", description = "US-Mexico Border Flag.  Enter Y/N to restrict searches to facilities located within 100KM of the border.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_usmex", required = false) String pUsmex,
        @Parameter(name = "p_sic2", description = "Standard Industrial Classification (SIC) Code Filter Alternate 2. Enter a wild-card search against SIC codes.  A final wild-card is always present allowing \"22\" to match all SIC codes beginning with 22.  Use the \"%\" character within strings to match any SIC values with the pattern.  For example, \"2%21\" matches 2021, 2121, 2221, etc.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_sic2", required = false) String pSic2,
        @Parameter(name = "p_sic4", description = "Standard Industrial Classification (SIC) Code Filter Alternate 3.  Enter the first 2, 3 or 4 SIC code digits to filter results to facilities having those code prefixes.  As this alternative does not utilize an index, p_sic2 will generally be quicker.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_sic4", required = false) String pSic4,
        @Parameter(name = "p_fa", description = "Federal Agency. 1 character or 5-character values; may contain multiple comma-separated values. ALL will retrieve all facilities where the federal agency code is not null.  Use the Federal Agencies lookup service to obtain a list of values.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_fa", required = false) String pFa,
        @Parameter(name = "p_act", description = "Active Permits/Facilities Flag.  Provide Y or N to filter results to facilities with active permits.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_act", required = false) String pAct,
        @Parameter(name = "p_maj", description = "Major Facility Flag.  Enter Y to restrict results to Major facilities only.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_maj", required = false) String pMaj,
        @Parameter(name = "p_mact", description = "CAA Maximum Achievable Control Technology (MACT) Subpart codes (alpha ID between 1 and 7 characters) applicable to the facility.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_mact", required = false) String pMact,
        @Parameter(name = "p_nsps", description = "Air Programl New Source Performance Standards (NSPS)  Subpart Code Search.  One or more valid Air Program NSPS Program codes cand be passed.  ", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_nsps", required = false) String pNsps,
        @Parameter(name = "p_nspsm", description = "Air Programl New Source Performance Standards Minors (NSPSM) Subpart Code Search.  One or more valid Air Program NSPSM Subpart codes can be passed.  ", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_nspsm", required = false) String pNspsm,
        @Parameter(name = "p_prog", description = "Air Program Code Filter.  Enter one or more Air program codes to filter results.  Provide multiple values as a comma-delimited list.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_prog", required = false) String pProg,
        @Parameter(name = "p_fea", description = "Formal Enforcement Actions [within / not within] specified date range indicator. The date range is determined by parameters p_fead1 and p_fead2 or by parameter p_feay. - W = within date range - N = not within date range", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_fea", required = false) String pFea,
        @Parameter(name = "p_feay", description = "Years (1 to 5) Range.  This value is used to create a date range for Formal Enforcement Actions (FEA). Used along with p_fea (which indicates whether to look within or outside of the date range) to find FEAs within (or not within) the number of years specified.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_feay", required = false) BigDecimal pFeay,
        @Parameter(name = "p_feaa", description = "Agency associated with Formal Enforcement Actions: - E = EPA - S = State - A = All", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_feaa", required = false) String pFeaa,
        @Parameter(name = "p_iea", description = "Informal Enforcement Actions [within / not within] specified date range.  The date range is determined by parameters p_iead1 and p_iead2 or by parameter p_ieay. - W = within date range - N = not within date range", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_iea", required = false) String pIea,
        @Parameter(name = "p_ieay", description = "Years (1 to 5) Range.  This value is used to create a date range for Informal Enforcement Actions (IEA). Used along with p_iea (which indicates whether to look within or outside of the date range) to find IEAs within (or not within) the number of years specified.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_ieay", required = false) BigDecimal pIeay,
        @Parameter(name = "p_ieaa", description = "Agency associated with Informal Enforcement Actions. If left blank, both agencies are included. - E = EPA - S = State", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_ieaa", required = false) String pIeaa,
        @Parameter(name = "p_qiv", description = "Quarters in Noncompliance Limiter.  Enter a coded value to limit results to facilities with given quarter of noncompliance. - Z = Zero quarters in noncompliance. - GEXX = Replacing XX with a numeric value, that number of quarterd or more in noncompliance. - GTXX = Replacing XX with a numeric value, more than that number of quarters in noncompliance.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_qiv", required = false) String pQiv,
        @Parameter(name = "p_naa", description = "Non-Attainment Area Flag.  Enter a Y or N to filter for or against facilities flagged as non-attainment areas.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_naa", required = false) String pNaa,
        @Parameter(name = "p_impw", description = "Discharging into Impaired Waters Flag. Enter Y to limit results to facilities with discharge to waterbodies listed as impaired in the ATTAINS database.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_impw", required = false) String pImpw,
        @Parameter(name = "p_trep", description = "Current Toxics Release Inventory (TRI) Reporter Limiter.  Enter one of the following codes to limit results. - CURR = Current TRI reporter. - NONCURR = Has reported to TRI in the past but not for the current reporting year.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_trep", required = false) String pTrep,
        @Parameter(name = "p_tri_cat", description = "Toxic Release Inventory Released To Air Chemical Identifier Category Filter.  Enter the chemical identifier category code to limit results. Note when filtering by TRI chemical identifier categories one may not also filter by specific chemical identifiers via p_tri_pol.  You must also specify a release amount using p_tri_amt or p_tri_any_amt. - TOTAL = Total Released to Air - CARC = Total Carcinogens Released to Air - HAP = Total Hazardous Air Pollutants Released to Air", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_tri_cat", required = false) String pTriCat,
        @Parameter(name = "p_tri_amt", description = "Toxic Release Inventory Release Amount Filter.  Enter a value in pounds to limit results to facilities releasing this amount or greateer of TRI releases.  Valid values are 0, GT0, GT1000, GT5000, GT10000 and GT50000. Note when filtering by TRI release amounts one may only use either p_tri_amt or p_tri_any_amt.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_tri_amt", required = false) String pTriAmt,
        @Parameter(name = "p_tri_any_amt", description = "Toxic Release Inventory Release Of Any Kind Above Value Filter.  Enter a value to limit results to facilities releasing this amount or more of TRI releases.  Note when filtering by TRI releases one may only use p_tri_any_amt or p_tri_amt and not both.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_tri_any_amt", required = false) BigDecimal pTriAnyAmt,
        @Parameter(name = "p_tri_pol", description = "Toxic Release Inventory Chemical Identifier Filter.  Enter one or more chemical identifier codes to limit results. Note when filtering by specific TRI chemical identifiers one may not also filter by chemical identifier categories via p_tri_cat.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_tri_pol", required = false) String pTriPol,
        @Parameter(name = "p_ghg_cat", description = "Green House Gas (GHG) Gas Code Category.  Must be used with either a formatted (p_ghg_amt) or custom (p_ghg_any_amt) release amount.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_ghg_cat", required = false) String pGhgCat,
        @Parameter(name = "p_ghg_amt", description = "Green House Gas (GHG) CO2 Equivalent Formatted Release Amount.  First 2 characters must contain GT (greater than) followed by a number.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_ghg_amt", required = false) String pGhgAmt,
        @Parameter(name = "p_ghg_any_amt", description = "Green House Gas (GHG) C02 Equivalent Custom Amount.  The C02E value reported for the provided category, will be greater or equal to the amount provided.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_ghg_any_amt", required = false) BigDecimal pGhgAnyAmt,
        @Parameter(name = "p_ghg_yr", description = "Green House Gas (GHG) Reporting Year. (2010 through 2015)", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_ghg_yr", required = false) String pGhgYr,
        @Parameter(name = "p_nei_pol", description = "National Emissions Inventory (NEI) Pollutant Identifier.  When a pollutant identifer is entered a corresponding formatted amount or custom amount must be entered.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_nei_pol", required = false) String pNeiPol,
        @Parameter(name = "p_nei_amt", description = "National Emissions Inventory (NEI) Formatted Pollutant Amount.  A formatted value where the 1st two characters must start with GT or LT followed by a number.  Identifies facilities that have a NEI Pollutant Emission  where the supplied value is > or < the pollutant emission amount.  ", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_nei_amt", required = false) String pNeiAmt,
        @Parameter(name = "p_nei_any_amt", description = "National Emissions Inventory (NEI) Custom Pollutant Amount.  Only a number can be entered.  Identifies facilities with where the NEI Pollutant Emission Amount is greater than the number entered.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_nei_any_amt", required = false) BigDecimal pNeiAnyAmt,
        @Parameter(name = "p_nei_yr", description = "National Emissions Inventory (NEI) year:  2014 or 2011", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_nei_yr", required = false) String pNeiYr,
        @Parameter(name = "p_nei_cat", description = "National Emissions Inventory (NEI) Pollutant Category.  When a pollutant category is entered, a corresponding formatted pollutant amount or custom amount must be entered.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_nei_cat", required = false) String pNeiCat,
        @Parameter(name = "p_pm", description = "Percent Minority Population Limiter.  Enter a value to restrict results to facilities with a given percentage of minority population within 3-mile radius. - NONE = 0% - GT5 = greater than 5% - GT10 = greater than 10% - GT25 = greater than 25% - GT50 = greater than 50% - GT75 = greater than 75%", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_pm", required = false) String pPm,
        @Parameter(name = "p_pd", description = "Population Density Limiter (per sq mile). Enter a value to limit results to facilities located in area of a given population density. - NONE = 0 population density per square mile - GT100 = More than 100 population density per square mile - GT500 = More than 500 population density per square mile - GT1000 = More than 1000 population density per square mile - GT5000 = More than 5000 population density per square mile - GT10000 = More than 10000 population density per square mile - GT20000 = More than 20000 population density per square mile", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_pd", required = false) String pPd,
        @Parameter(name = "p_ico", description = "Indian Country Flag.  Enter a \"Y\" or \"N\" to restrict searches to facilities inside or outside Indian Country.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_ico", required = false) String pIco,
        @Parameter(name = "p_huc", description = "2-, 4-, 6-, or 8-character watershed code. May contain multiple comma-separated values.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_huc", required = false) String pHuc,
        @Parameter(name = "p_wbd", description = "2-, 4-, 6-, 8-, 10-, or 12-character watershed (WBD from the USGS Watershed Boundary Dataset). May contain multiple comma-separated values.  Uses the FRS Best Pick Coordinate to obtain the WBD12 Huc value.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_wbd", required = false) String pWbd,
        @Parameter(name = "p_pid", description = "Nine-digit permit IDs. May contain up to 2000 comma-separated values.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_pid", required = false) String pPid,
        @Parameter(name = "p_med", description = "Filter Results by Media. - M = RMP (Risk Management Plan) - R = RCRA (Hazardous Waste) - S = SDWA (Public Drinking Water Systems) - W = Water - ALL = Water and RCRA and SDWA", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_med", required = false) String pMed,
        @Parameter(name = "p_ysl", description = "Last Facility Inspection [within / not within] Specified Date Range Indicator. The date range is determined by parameters p_idt1 and p_idt2 or by parameter p_ysly. - W = within date range - N = not within date range", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_ysl", required = false) String pYsl,
        @Parameter(name = "p_ysly", description = "Number of years (1 to 5) since last facility inspection.  A value of 1 means that it has been inspected within the year.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_ysly", required = false) BigDecimal pYsly,
        @Parameter(name = "p_ysla", description = "Facility Last Inspection Code Filter.  If left blank, both agencies are included.  Enter a value to limit results: - E = EPA - S = State", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_ysla", required = false) String pYsla,
        @Parameter(name = "p_stsl", description = "Last Stack Test [within / not within] Specified Date Range Indicator. - W = within date range - N = not within date range", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_stsl", required = false) String pStsl,
        @Parameter(name = "p_stsly", description = "Number of years (1 to 5) since date of last stack test. A value of 1 means it has been inspected within the year.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_stsly", required = false) BigDecimal pStsly,
        @Parameter(name = "p_stsla", description = "Stack Last Test Code Filter.  Enter a value to limit results: - A = All - E = EPA - S = State", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_stsla", required = false) String pStsla,
        @Parameter(name = "p_stres", description = "Air Stack Test Status Description Filter.  Enter one or more test status descriptions to filter results.  Enter multiple values as a comma-delimited list.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_stres", required = false) String pStres,
        @Parameter(name = "p_sttyp", description = "Air Conductor Type Code Filter.  Enter one or more conductor type codes to filter results.  Provide multiple values as a comma-delimited list.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_sttyp", required = false) String pSttyp,
        @Parameter(name = "p_qs", description = "Quick Search. Allows entry for city, state, and/or zip code.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_qs", required = false) String pQs,
        @Parameter(name = "p_sfs", description = "Single Facility Search Filter.  Provide a facility name or program system identifier to limit results.  For the all data search, the FRS registry identifier is also searched.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_sfs", required = false) String pSfs,
        @Parameter(name = "p_tribeid", description = "Numeric code for tribe (or list of tribes).", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_tribeid", required = false) BigDecimal pTribeid,
        @Parameter(name = "p_tribename", description = "Tribe Name Filter.  Enter a single tribe name to filter results.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_tribename", required = false) String pTribename,
        @Parameter(name = "p_tribedist", description = "Proximity to tribal land limiter. Enter an amount of mile between 0 and 25 to filter results.  This parameter is only evaluated if p_tribeid is populated.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_tribedist", required = false) BigDecimal pTribedist,
        @Parameter(name = "p_owop", description = "Owner/Operator code filter.  Enter one or more codes to limit results. - CNG - COR - CTG - DIS - FDF - MWD - MXO - NON - POF - SDT - STF - TRB", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_owop", required = false) String pOwop,
        @Parameter(name = "p_agoo", description = "Indicates whether to AND or OR the Owner/Operator parameter (p_owop) and the federal agency code (p_fa) parameters.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_agoo", required = false) String pAgoo,
        @Parameter(name = "p_idt1", description = "Beginning of date range of most recent facility inspection.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_idt1", required = false) String pIdt1,
        @Parameter(name = "p_idt2", description = "End of date range of most recent facility inspection.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_idt2", required = false) String pIdt2,
        @Parameter(name = "p_stdt1", description = "Beginning of date range of most recent stack test.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_stdt1", required = false) String pStdt1,
        @Parameter(name = "p_stdt2", description = "End of date range of most recent stack test.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_stdt2", required = false) String pStdt2,
        @Parameter(name = "p_pityp", description = "Inspection Type: - CAC = Corrective Action Inspection - CAV = Compliance Assistance Visit - CDI = Case Development Inspection - CEI = Inspection Inspection - CSE = Compliance Schedule Evaluation - FCI = Focused Compliance - FRR = Financial Record Review - FSD = Facility Self Disclosure - FUI = Follow-Up Inspection - GME = Groundwater Monitoring Evaluation - NRR = Non-Financial Record Review - OAM = Operation and Maintenance Inspection May contain multiple comma-separated values.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_pityp", required = false) String pPityp,
        @Parameter(name = "p_cifdi", description = "Compliance issuess found during inspection.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_cifdi", required = false) String pCifdi,
        @Parameter(name = "p_pfead1", description = "Formal Enforcement Action Date Range Start.  Enter a date in MM/DD/YYYY format to set the start of the range for filtering by recent Formal Enforcement Action (FEA) taken against the facility within the last five years.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_pfead1", required = false) String pPfead1,
        @Parameter(name = "p_pfead2", description = "Formal Enforcement Action Date Range End.  Enter a date in MM/DD/YYYY format to set the end of the date range for filtering by recent Formal Enforcement Action (FEA) taken against the facility within the last five years.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_pfead2", required = false) String pPfead2,
        @Parameter(name = "p_pfeat", description = "Formal Enforcement Action (FEA) Code Filter.  Enter one or more three-letter FEA codes to restrict results to facilities with these attributes.  Use p_fead1 and p_fead2 parameters to further restrict this filter by entering a date range.  Provide multiple codes as a comma-delimited list.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_pfeat", required = false) String pPfeat,
        @Parameter(name = "p_psncq", description = "Quarters in Significant Noncompliance Limiter.  Enter a coded value to limit results to facilities with given quarter of significant noncompliance. - Z = Zero quarters in significant noncompliance. - GEXX = Replacing XX with a numeric value, that number of quarterd or more in significant noncompliance. - GTXX = Replacing XX with a numeric value, more than that number of quarters in significant noncompliance.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_psncq", required = false) String pPsncq,
        @Parameter(name = "p_pctrack", description = "Compliance Tracking Limiter. Provide a keyword to indicate the extent to which data is being entered and effluent exceedances are being identified. - Off - Partial - On", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_pctrack", required = false) String pPctrack,
        @Parameter(name = "p_swpa", description = "Source water protection area", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_swpa", required = false) String pSwpa,
        @Parameter(name = "p_des", description = "Universe Designation Limiter.  Enter one or more universe designation codes.  Provide multiple values as a comma-delimited list.  Use code \"TSDF\" to return the full enforcement TSDF universe and \"Operating TSDF\" to return the operating TSDF universe.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_des", required = false) String pDes,
        @Parameter(name = "p_fntype", description = "Controls type of text search performed on facility name with parameter p_fn. - EXACT = Find facilities having the exact provided name(s). - BEGINS = Find facilities with names starting with the provided term(s). - ALL = Find facilities using Oracle text search terms. - CONTAINS = ", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_fntype", required = false) String pFntype,
        @Parameter(name = "p_hpvmth", description = "Months in high priority violation status out of the previous three years limiter.  Provide a number of months in the past three years.  Results will limited to facilities in high priority violation status during that time. ", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_hpvmth", required = false) String pHpvmth,
        @Parameter(name = "p_recvio", description = "Recent Violation Status Filter.  Enter one or more recent violation codes to limit results.  Provide multiple values as a comma-delimited list. - NO VIOL = Selects facilities with no recent violations. - ANY HPV = Selects facilities with either addressed or unaddressed high priority violations. - ADDRS-EPA - Select facilities with recent EPA addressed violations. - ADDRS-LOCAL - Select facilities with recent locally addressed violations. - ADDRS-STATE - Select facilities with recent state addressed violations. - UNADDR-EPA - Select facilities with recent EPA unaddressed violations. - UNADDR-LOCAL - Select facilities with recent locally unaddressed violations. - UNADDR-STATE - Select facilities with recent state unaddressed violations. - FRV VIOL = Selects facilities with a recent federally reportable violation without a high priority violation.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_recvio", required = false) String pRecvio,
        @Parameter(name = "p_pollvio", description = "Air Pollutant Code For A Recent Violation Filter.  Provide one or more pollutant codes to select facilities with one or more of the entered pollutant codes for a recent air violation.  Provide multiple values as a comma-delimited list.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_pollvio", required = false) String pPollvio,
        @Parameter(name = "p_ar", description = "Associated EPA Air Reports Program Filter.  Enter multiple values as a comma-delimited list.  Valid values are: - TRI = Toxic Release Inventory. - GHG = Green House Gas Reporter. - EIS = Emission Inventory System. - CAMD = Clean Air Markets Program Reporter.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_ar", required = false) String pAr,
        @Parameter(name = "p_tri_yr", description = "Toxic Release Inventory Reporting Year Filter.  Enter one or more year values to filter results by the TRI reporting year.  Provide multiple years as a comma-delimited list.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_tri_yr", required = false) String pTriYr,
        @Parameter(name = "p_pidall", description = "Controls whether search is restricted to existing system. Y means the search will match the p_pid parameter against all associated permits (AIR, RCRA, SDWIS, etc).", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_pidall", required = false) String pPidall,
        @Parameter(name = "p_fac_ico", description = "FRS tribal land code flag.  Enter \"Y\" or \"N\" to include or exclude facilities based on FRS tribal land code.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_fac_ico", required = false) String pFacIco,
        @Parameter(name = "p_icoo", description = "Indian country search and/or flag.  Enter \"Y\" to set indian country search conditions to return any results found using p_ico, p_fac_ico or p_fac_icoo.  Otherwise only results matching all provided p_ico, p_fac_ico or p_fac_icoo conditions will be returned.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_icoo", required = false) String pIcoo,
        @Parameter(name = "p_fac_icos", description = "FRS tribal land spatial flag.  Enter \"Y\" or \"N\" to include or exclude facilities based on FRS tribal land spatial flag.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_fac_icos", required = false) String pFacIcos,
        @Parameter(name = "p_ejscreen", description = "Enter \"Y\" to limit facilities to Census block groups where one of more Environmental Justice indexes above 80th percentile.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_ejscreen", required = false) String pEjscreen,
        @Parameter(name = "p_limit_addr", description = "Limit Address Search Flag.  Enter Y to restrict facility searches to native data source only.  ", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_limit_addr", required = false) String pLimitAddr,
        @Parameter(name = "p_lat", description = "Latitude location in decimal degrees.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_lat", required = false) BigDecimal pLat,
        @Parameter(name = "p_long", description = "Longitude location in decimal degrees.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_long", required = false) BigDecimal pLong,
        @Parameter(name = "p_radius", description = "Spatial Search Radius.  Enter a radius up to 100 miles in which to spatially search for facilities.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_radius", required = false) BigDecimal pRadius,
        @Parameter(name = "p_decouple", description = "Decouple Inspection Code Search Flag.  Enter \"Y\" to search for inspection code types with p_pityp without respect to the date range search provided with p_ysl* parameters.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_decouple", required = false) String pDecouple,
        @Parameter(name = "p_ejscreen_over80cnt", description = "The number of Environmenmt Justice Indicators above the 80th percentile.  Valid values are 1 through 11.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "p_ejscreen_over80cnt", required = false) String pEjscreenOver80cnt,
        @Parameter(name = "queryset", description = "Query Limiter.  Enter a value to limit the number of records returned for each query. Value cannot exceed 70,000.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "queryset", required = false) BigDecimal queryset,
        @Parameter(name = "responseset", description = "Response Set Limiter. Enter a value to limit the number of records per page. Value cannot exceed 1,000.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "responseset", required = false) BigDecimal responseset,
        @Parameter(name = "tablelist", description = "Table List Flag. Enter a Y to display the first page of facility results.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "tablelist", required = false) String tablelist,
        @Parameter(name = "maplist", description = "Map List Flag.  Provide a Y to return mappable coordinates representing the full geographic extent of the queryset (all facilities that met the selection criteria).", in = ParameterIn.QUERY) @Valid @RequestParam(value = "maplist", required = false) String maplist,
        @Parameter(name = "summarylist", description = "Summary List Flag.  Enter a Y to return a list of summary statistics based on the parameters submitted to the query service.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "summarylist", required = false) String summarylist,
        @Parameter(name = "callback", description = "JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "callback", required = false) String paramCallback,
        @Parameter(name = "qcolumns", description = "Used to customize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "qcolumns", required = false) String qcolumns
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"Results\" : { \"V3Rows\" : \"2\", \"InfFEARows\" : \"0\", \"Message\" : \"Success\", \"BadSystemIDs\" : \"BadSystemIDs\", \"QueryID\" : \"245\", \"MapOutput\" : { \"PopUpBaseURL\" : \"https://echodata.epa.gov/echo/cwa_rest_services.pop_up?p_id=\", \"IconBaseURL\" : \"https://echo.epa.gov/app/map/icons/\", \"MapData\" : [ { \"LastInsp\" : \"901\", \"PUV\" : \"110001891506\", \"InformalCount\" : \"1\", \"FormalCount\" : \"1\", \"LON\" : \"-77.062981\", \"ICON\" : \"CAA-IC-MN-N.png\", \"CAAstatus\" : \"______UUUUUU\", \"TYPE\" : \"Facility\", \"LAT\" : \"38.798026\", \"NAME\" : \"VIRGINIA CONCRETE ALEXANDRIA PLANT\" }, { \"LastInsp\" : \"901\", \"PUV\" : \"110001891506\", \"InformalCount\" : \"1\", \"FormalCount\" : \"1\", \"LON\" : \"-77.062981\", \"ICON\" : \"CAA-IC-MN-N.png\", \"CAAstatus\" : \"______UUUUUU\", \"TYPE\" : \"Facility\", \"LAT\" : \"38.798026\", \"NAME\" : \"VIRGINIA CONCRETE ALEXANDRIA PLANT\" } ], \"QueryID\" : \"245\" }, \"TotalPenalties\" : \"$963,531\", \"Facilities\" : [ { \"LocalControlRegionCode\" : \"LocalControlRegionCode\", \"RmpIDs\" : \"110000\", \"EPASystem\" : \"ICP\", \"FacUsMexBorderFlg\" : \"Y\", \"MaxPctileUs\" : \"98\", \"OtherPermitIDs\" : \"OtherPermitIDs\", \"Ea5yrFlag\" : \"0\", \"AIRState\" : \"WI\", \"LastDatePce\" : \"04/25/2014\", \"AIRLastStckTestResults\" : \"04/25/2014\", \"AIRLastPenaltyDate\" : \"05/16/2014\", \"ReferencePoint\" : \"ENTRANCE POINT OF A FACILITY OR STATION\", \"AIRHpvStatus\" : \"true\", \"CurrVioFlag\" : \"0\", \"AIRDaysLastEval\" : \"2806\", \"AIRTRIbalEPAids\" : \"AIRTRIbalEPAids\", \"AIRCity\" : \"Washington\", \"AIRStackTest5YrAll\" : \"AIRStackTest5YrAll\", \"PctileProximityRmpUs\" : \"91\", \"AIRLastEvalDateEPA\" : \"05/16/2014\", \"AIRQtrsWithHpv\" : \"4\", \"AIRMnthsWithHpv\" : \"3\", \"RCRAIDs\" : \"VAD981111784\", \"AIRMacts\" : \"ZZZZZ\", \"GHGIDs\" : \"110000\", \"AIRLastFeaDateEPA\" : \"05/16/2014\", \"FacFederalAgencyCode\" : \"E\", \"AIRQtrsWithViol\" : \"2\", \"AIRStatus\" : \"Permanently Closed\", \"Map\" : \"Map\", \"FacCamdReporter\" : \"Y\", \"FacEisAIRReleases\" : \"2.35\", \"FacDerivedWBD\" : \"20700100204\", \"FacGHGCO2Releases\" : \"100\", \"Over80CountUs\" : \"3\", \"AIRStreet\" : \"2130 P STREET N.W.\", \"FacIndianSpatialFlg\" : \"Y\", \"NaaPollutants\" : \"OZONE\", \"AIRLastStckDateEPA\" : \"04/25/2014\", \"AIRComplStatus\" : \"No Viol\", \"FacDerivedHuc\" : \"552968\", \"AIRFacilityTypeDesc\" : \"AIRFacilityTypeDesc\", \"FacTRICarcAIRReleases\" : \"24\", \"NaStandardsNaa\" : \"NaStandardsNaa\", \"NaaCategories\" : \"8-HOUR OZONE(2015)\", \"AIRIDs\" : \"DC0000001100195254\", \"PctileCancerUs\" : \"99\", \"RegistryID\" : \"110020837601\", \"ChesapeakeBayFlag\" : \"Y\", \"AIRMajorFlag\" : \"N\", \"PctileProximityNPDESUs\" : \"23.7\", \"AIRLastIeaDateState\" : \"04/25/2014\", \"PctilePctpre1960Us\" : \"14.6\", \"AIRFIPSCode\" : \"11001\", \"AIRLastStckTestDate\" : \"04/25/2014\", \"SourceID\" : \"ALR040033\", \"AIRCaseIDs\" : \"05-1993-1585 05-2014-5021\", \"AIREPARegion\" : \"05\", \"SDWAIDs\" : \"DC0000001\", \"Insp5yrFlag\" : \"1\", \"AIRLastIeaDateEPA\" : \"04/25/2014\", \"FacMapFlg\" : \"Y\", \"AIRLastFeaDateState\" : \"05/16/2014\", \"FacLat\" : \"38.803076\", \"AIRPenalties\" : \"$435\", \"CWAIDs\" : \"DC0000001\", \"CensusBlockGroup\" : \"110010096022\", \"AIRName\" : \"WEST PARK CLEANERS\", \"PctileProximityTsdfUs\" : \"82\", \"AIRNsps\" : \"NSPS Part 60\", \"AIRLastViolDate\" : \"04/25/2014\", \"AIRTRIbalNames\" : \"AIRTRIbalNames\", \"AIRZip\" : \"20037\", \"PctileTrafficScoreUs\" : \"92\", \"AIRLastFeaDate\" : \"05/16/2014\", \"MaintPollutantsNaa\" : \"MaintPollutantsNaa\", \"AIRPollRecentViol\" : \"Sulfur\", \"AIRIeaCnt\" : \"2\", \"FacDerivedTRIbes\" : \"Cherokee Nation\", \"MaintStatusNaa\" : \"MaintStatusNaa\", \"AIRStackTest5YrFail\" : \"AIRStackTest5YrFail\", \"EisIDs\" : \"12620001\", \"WebDocs\" : \"C6\", \"AIRIndianCntryFlg\" : \"N\", \"FacLong\" : \"-77.085951\", \"Statute\" : \"CWA\", \"AIRLastIeaDate\" : \"04/25/2014\", \"AIRNspsm\" : \"NSPS Part 60\", \"AIREvalCnt\" : \"0\", \"FacPopulationDensity\" : \"9611.17\", \"AIRClassification\" : \"AIRClassification\", \"PctileO3Us\" : \"94\", \"AIRPrograms\" : \"MACT, SIP\", \"Lower48\" : \"Y\", \"AIR3yrComplQtrsHistory\" : \"VV__SS_U__V_\", \"ActiveLower48\" : \"ActiveLower48\", \"NaStatusNaa\" : \"NaStatusNaa\", \"FacNaaFlag\" : \"Y\", \"EjscreenFlagUs\" : \"EjscreenFlagUs\", \"FacEisReporter\" : \"Y\", \"PctileProximityNplUs\" : \"96\", \"TRIIDs\" : \"20011FRTTT5001F\", \"Score\" : \"1\", \"AIRLastEvalDateState\" : \"05/18/2009\", \"PctileDpmUs\" : \"99\", \"FacFIPSCode\" : \"55001\", \"NaPollutantsNaa\" : \"NaPollutantsNaa\", \"PctilePmUs\" : \"93\", \"AIRLastStckDateState\" : \"04/25/2014\", \"FacIndianCntryFlg\" : \"FacIndianCntryFlg\", \"FacMapIcon\" : \"CWA-NC-MJ-2.png\", \"LastDatePceSta\" : \"04/25/2014\", \"AIRLastEvalDate\" : \"05/18/2009\", \"EjscreenFlag\" : \"EjscreenFlag\", \"MaxScore\" : \"1\", \"Infea5yrFlag\" : \"0\", \"AIRFeaCnt\" : \"2\", \"FacSICCodes\" : \"811\", \"AIRNAICS\" : \"812320\", \"LastDatePceEPA\" : \"04/25/2014\", \"TRIbalFlag\" : \"1\", \"FacTRIReporter\" : \"B\", \"MaintStandardsNaa\" : \"MaintStandardsNaa\", \"FacTRIHapsReleases\" : \"35.5\", \"HasPollRpt\" : \"Y\", \"FacFederalAgencyName\" : \"EPA\", \"FacStdCountyName\" : \"Fairfax County\", \"CalculatedAccuracyMeters\" : \"50\", \"LocalControlRegionName\" : \"LocalControlRegionName\", \"AIRCounty\" : \"Racine\", \"FacDerivedWBDName\" : \"Fourmile Run-Potomac River\", \"FacGHGReporter\" : \"Y\", \"ViolFlag\" : \"1\", \"FacCountyName\" : \"Fairfax County\", \"CurrSvFlag\" : \"0\", \"FacPercentMinority\" : \"45.379\", \"AIRRecentViolCnt\" : \"1\", \"AIRUniverse\" : \"Minor Emissions\", \"CamdIDs\" : \"CamdIDs\", \"FacTRIAIRReleases\" : \"36\", \"AIRFacilityTypeCode\" : \"POF\", \"PctileRespUs\" : \"99\", \"CollectionMethod\" : \"ADDRESS MATCHING-HOUSE NUMBER\" }, { \"LocalControlRegionCode\" : \"LocalControlRegionCode\", \"RmpIDs\" : \"110000\", \"EPASystem\" : \"ICP\", \"FacUsMexBorderFlg\" : \"Y\", \"MaxPctileUs\" : \"98\", \"OtherPermitIDs\" : \"OtherPermitIDs\", \"Ea5yrFlag\" : \"0\", \"AIRState\" : \"WI\", \"LastDatePce\" : \"04/25/2014\", \"AIRLastStckTestResults\" : \"04/25/2014\", \"AIRLastPenaltyDate\" : \"05/16/2014\", \"ReferencePoint\" : \"ENTRANCE POINT OF A FACILITY OR STATION\", \"AIRHpvStatus\" : \"true\", \"CurrVioFlag\" : \"0\", \"AIRDaysLastEval\" : \"2806\", \"AIRTRIbalEPAids\" : \"AIRTRIbalEPAids\", \"AIRCity\" : \"Washington\", \"AIRStackTest5YrAll\" : \"AIRStackTest5YrAll\", \"PctileProximityRmpUs\" : \"91\", \"AIRLastEvalDateEPA\" : \"05/16/2014\", \"AIRQtrsWithHpv\" : \"4\", \"AIRMnthsWithHpv\" : \"3\", \"RCRAIDs\" : \"VAD981111784\", \"AIRMacts\" : \"ZZZZZ\", \"GHGIDs\" : \"110000\", \"AIRLastFeaDateEPA\" : \"05/16/2014\", \"FacFederalAgencyCode\" : \"E\", \"AIRQtrsWithViol\" : \"2\", \"AIRStatus\" : \"Permanently Closed\", \"Map\" : \"Map\", \"FacCamdReporter\" : \"Y\", \"FacEisAIRReleases\" : \"2.35\", \"FacDerivedWBD\" : \"20700100204\", \"FacGHGCO2Releases\" : \"100\", \"Over80CountUs\" : \"3\", \"AIRStreet\" : \"2130 P STREET N.W.\", \"FacIndianSpatialFlg\" : \"Y\", \"NaaPollutants\" : \"OZONE\", \"AIRLastStckDateEPA\" : \"04/25/2014\", \"AIRComplStatus\" : \"No Viol\", \"FacDerivedHuc\" : \"552968\", \"AIRFacilityTypeDesc\" : \"AIRFacilityTypeDesc\", \"FacTRICarcAIRReleases\" : \"24\", \"NaStandardsNaa\" : \"NaStandardsNaa\", \"NaaCategories\" : \"8-HOUR OZONE(2015)\", \"AIRIDs\" : \"DC0000001100195254\", \"PctileCancerUs\" : \"99\", \"RegistryID\" : \"110020837601\", \"ChesapeakeBayFlag\" : \"Y\", \"AIRMajorFlag\" : \"N\", \"PctileProximityNPDESUs\" : \"23.7\", \"AIRLastIeaDateState\" : \"04/25/2014\", \"PctilePctpre1960Us\" : \"14.6\", \"AIRFIPSCode\" : \"11001\", \"AIRLastStckTestDate\" : \"04/25/2014\", \"SourceID\" : \"ALR040033\", \"AIRCaseIDs\" : \"05-1993-1585 05-2014-5021\", \"AIREPARegion\" : \"05\", \"SDWAIDs\" : \"DC0000001\", \"Insp5yrFlag\" : \"1\", \"AIRLastIeaDateEPA\" : \"04/25/2014\", \"FacMapFlg\" : \"Y\", \"AIRLastFeaDateState\" : \"05/16/2014\", \"FacLat\" : \"38.803076\", \"AIRPenalties\" : \"$435\", \"CWAIDs\" : \"DC0000001\", \"CensusBlockGroup\" : \"110010096022\", \"AIRName\" : \"WEST PARK CLEANERS\", \"PctileProximityTsdfUs\" : \"82\", \"AIRNsps\" : \"NSPS Part 60\", \"AIRLastViolDate\" : \"04/25/2014\", \"AIRTRIbalNames\" : \"AIRTRIbalNames\", \"AIRZip\" : \"20037\", \"PctileTrafficScoreUs\" : \"92\", \"AIRLastFeaDate\" : \"05/16/2014\", \"MaintPollutantsNaa\" : \"MaintPollutantsNaa\", \"AIRPollRecentViol\" : \"Sulfur\", \"AIRIeaCnt\" : \"2\", \"FacDerivedTRIbes\" : \"Cherokee Nation\", \"MaintStatusNaa\" : \"MaintStatusNaa\", \"AIRStackTest5YrFail\" : \"AIRStackTest5YrFail\", \"EisIDs\" : \"12620001\", \"WebDocs\" : \"C6\", \"AIRIndianCntryFlg\" : \"N\", \"FacLong\" : \"-77.085951\", \"Statute\" : \"CWA\", \"AIRLastIeaDate\" : \"04/25/2014\", \"AIRNspsm\" : \"NSPS Part 60\", \"AIREvalCnt\" : \"0\", \"FacPopulationDensity\" : \"9611.17\", \"AIRClassification\" : \"AIRClassification\", \"PctileO3Us\" : \"94\", \"AIRPrograms\" : \"MACT, SIP\", \"Lower48\" : \"Y\", \"AIR3yrComplQtrsHistory\" : \"VV__SS_U__V_\", \"ActiveLower48\" : \"ActiveLower48\", \"NaStatusNaa\" : \"NaStatusNaa\", \"FacNaaFlag\" : \"Y\", \"EjscreenFlagUs\" : \"EjscreenFlagUs\", \"FacEisReporter\" : \"Y\", \"PctileProximityNplUs\" : \"96\", \"TRIIDs\" : \"20011FRTTT5001F\", \"Score\" : \"1\", \"AIRLastEvalDateState\" : \"05/18/2009\", \"PctileDpmUs\" : \"99\", \"FacFIPSCode\" : \"55001\", \"NaPollutantsNaa\" : \"NaPollutantsNaa\", \"PctilePmUs\" : \"93\", \"AIRLastStckDateState\" : \"04/25/2014\", \"FacIndianCntryFlg\" : \"FacIndianCntryFlg\", \"FacMapIcon\" : \"CWA-NC-MJ-2.png\", \"LastDatePceSta\" : \"04/25/2014\", \"AIRLastEvalDate\" : \"05/18/2009\", \"EjscreenFlag\" : \"EjscreenFlag\", \"MaxScore\" : \"1\", \"Infea5yrFlag\" : \"0\", \"AIRFeaCnt\" : \"2\", \"FacSICCodes\" : \"811\", \"AIRNAICS\" : \"812320\", \"LastDatePceEPA\" : \"04/25/2014\", \"TRIbalFlag\" : \"1\", \"FacTRIReporter\" : \"B\", \"MaintStandardsNaa\" : \"MaintStandardsNaa\", \"FacTRIHapsReleases\" : \"35.5\", \"HasPollRpt\" : \"Y\", \"FacFederalAgencyName\" : \"EPA\", \"FacStdCountyName\" : \"Fairfax County\", \"CalculatedAccuracyMeters\" : \"50\", \"LocalControlRegionName\" : \"LocalControlRegionName\", \"AIRCounty\" : \"Racine\", \"FacDerivedWBDName\" : \"Fourmile Run-Potomac River\", \"FacGHGReporter\" : \"Y\", \"ViolFlag\" : \"1\", \"FacCountyName\" : \"Fairfax County\", \"CurrSvFlag\" : \"0\", \"FacPercentMinority\" : \"45.379\", \"AIRRecentViolCnt\" : \"1\", \"AIRUniverse\" : \"Minor Emissions\", \"CamdIDs\" : \"CamdIDs\", \"FacTRIAIRReleases\" : \"36\", \"AIRFacilityTypeCode\" : \"POF\", \"PctileRespUs\" : \"99\", \"CollectionMethod\" : \"ADDRESS MATCHING-HOUSE NUMBER\" } ], \"IndianCountryRows\" : \"0\", \"FEARows\" : \"1\", \"INSPRows\" : \"1\", \"SVRows\" : \"0\", \"PageNo\" : \"1\", \"CVRows\" : \"0\", \"QueryRows\" : \"5\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/xml"))) {
                    String exampleString = "<Root> </Root>";
                    ApiUtil.setExampleResponse(request, "application/xml", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /air_rest_services.get_facilities : Clean Air Act Facility Search
     * Validates query search parameters and returns query identifier.  Use the responseset parameter to set the page size
     *
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param pFn Facility Name Filter. Enter one or more case-insensitive facility names to filter results.  Provide multiple values as a comma-delimited list.  See p_fntype for additional modifiers. (optional)
     * @param pSa Facility street address. Enter a complete or partial street address. (optional)
     * @param pSa1 Facility street address. Enter a complete or partial street address.   Note that p_sa1 is culmulative with p_sa. (optional)
     * @param pCt Facility City Filter. Enter a single case-insensitive city name to filter results. (optional)
     * @param pCo Facility County Filter. Provide a single county name in combination with a state value provided via p_st. (optional)
     * @param pFips FIPS Code Filter.  Enter a single 5-character Federal Information Processing Standards (FIPS) state + county value to restrict results.  E.g. to limit results to Kenosha County, Wisconsin, use 55059. (optional)
     * @param pSt Facility State and State-Equivalent Filter.  Provide one or more USPS postal abbreviations for states and state-equivalents to filter results.  Provide multiple values as a comma-delimited list. (optional)
     * @param pZip 5-Digit ZIP Code Filter. Provide one or more 5-digit postal zip codes to filter results.  May contain multiple comma-separated values. (optional)
     * @param pLcon Air Program Local Control Region Code Filter.  Enter one or more local control region codes to filter results.  Provide multiple codes as a comma-delimited list.  Codes where they exist are specific by state. (optional)
     * @param pFrs Facility Registry Service ID Filter. Enter a single 12-digit FRS identifier to filter results. (optional)
     * @param pReg EPA Region Filter. Provide a single value of 01 thru 10 to restrict results to a single EPA region. (optional)
     * @param pSic Standard Industrial Classification (SIC) Code Filter.  Enter a single 4-digit SIC Code to filter results.  If more complex filtering is required, use p_sic2 and p_sic4. (optional)
     * @param pNcs North American Industry Classification System Filter. Enter two to six digits to filter results to facilities having matching NAICS codes.  Digits less than six will match to all codes beginning with the provided values. (optional)
     * @param pQnc Number of quarters in non-compliance limiter.  Enter an integer value between 1 and 4 to limit results. (optional)
     * @param pPen Last Penality Date Qualifier Filter.  Enter one of the following:    - NEVER &#x3D; No Penalties - ANY &#x3D; Any Penalty - LEXX &#x3D; Less than or equal to XX months.  Provide a number in place of XX, e.g. \\\&quot;LE5\\\&quot; for a facility with a penalty within previous 5 months. - GTXX &#x3D; Greater than XX months.  Provide a number in place of XX, eg. GT12, for a facility with the last penalty greater than 12 months ago. (optional)
     * @param pOpst Operating status filter.  Enter one or more operating status codes to limit results.   Provide multiple codes as a comma-delimited list. (optional)
     * @param pC1lat In decimal degrees.  Latitude of 1st corner of box that bounds the resulting facilities. The latitude and longitude of both corners of the bounding box must be provided. (optional)
     * @param pC1lon In decimal degrees.  Longitude of 1st corner of box that bounds the resulting facilities. The latitude and longitude of both corners of the bounding box must be provided. (optional)
     * @param pC2lat In decimal degrees.  Latitude of 2nd corner of box that bounds the resulting facilities. The latitude and longitude of both corners of the bounding box must be provided. (optional)
     * @param pC2lon In decimal degrees.  Longitude of 2nd corner of box that bounds the resulting facilities. The latitude and longitude of both corners of the bounding box must be provided. (optional)
     * @param pUsmex US-Mexico Border Flag.  Enter Y/N to restrict searches to facilities located within 100KM of the border. (optional)
     * @param pSic2 Standard Industrial Classification (SIC) Code Filter Alternate 2. Enter a wild-card search against SIC codes.  A final wild-card is always present allowing \\\&quot;22\\\&quot; to match all SIC codes beginning with 22.  Use the \\\&quot;%\\\&quot; character within strings to match any SIC values with the pattern.  For example, \\\&quot;2%21\\\&quot; matches 2021, 2121, 2221, etc. (optional)
     * @param pSic4 Standard Industrial Classification (SIC) Code Filter Alternate 3.  Enter the first 2, 3 or 4 SIC code digits to filter results to facilities having those code prefixes.  As this alternative does not utilize an index, p_sic2 will generally be quicker. (optional)
     * @param pFa Federal Agency. 1 character or 5-character values; may contain multiple comma-separated values. ALL will retrieve all facilities where the federal agency code is not null.  Use the Federal Agencies lookup service to obtain a list of values. (optional)
     * @param pAct Active Permits/Facilities Flag.  Provide Y or N to filter results to facilities with active permits. (optional)
     * @param pMaj Major Facility Flag.  Enter Y to restrict results to Major facilities only. (optional)
     * @param pMact CAA Maximum Achievable Control Technology (MACT) Subpart codes (alpha ID between 1 and 7 characters) applicable to the facility. (optional)
     * @param pNsps Air Programl New Source Performance Standards (NSPS)  Subpart Code Search.  One or more valid Air Program NSPS Program codes cand be passed.   (optional)
     * @param pNspsm Air Programl New Source Performance Standards Minors (NSPSM) Subpart Code Search.  One or more valid Air Program NSPSM Subpart codes can be passed.   (optional)
     * @param pProg Air Program Code Filter.  Enter one or more Air program codes to filter results.  Provide multiple values as a comma-delimited list. (optional)
     * @param pFea Formal Enforcement Actions [within / not within] specified date range indicator. The date range is determined by parameters p_fead1 and p_fead2 or by parameter p_feay. - W &#x3D; within date range - N &#x3D; not within date range (optional)
     * @param pFeay Years (1 to 5) Range.  This value is used to create a date range for Formal Enforcement Actions (FEA). Used along with p_fea (which indicates whether to look within or outside of the date range) to find FEAs within (or not within) the number of years specified. (optional)
     * @param pFeaa Agency associated with Formal Enforcement Actions: - E &#x3D; EPA - S &#x3D; State - A &#x3D; All (optional)
     * @param pIea Informal Enforcement Actions [within / not within] specified date range.  The date range is determined by parameters p_iead1 and p_iead2 or by parameter p_ieay. - W &#x3D; within date range - N &#x3D; not within date range (optional)
     * @param pIeay Years (1 to 5) Range.  This value is used to create a date range for Informal Enforcement Actions (IEA). Used along with p_iea (which indicates whether to look within or outside of the date range) to find IEAs within (or not within) the number of years specified. (optional)
     * @param pIeaa Agency associated with Informal Enforcement Actions. If left blank, both agencies are included. - E &#x3D; EPA - S &#x3D; State (optional)
     * @param pQiv Quarters in Noncompliance Limiter.  Enter a coded value to limit results to facilities with given quarter of noncompliance. - Z &#x3D; Zero quarters in noncompliance. - GEXX &#x3D; Replacing XX with a numeric value, that number of quarterd or more in noncompliance. - GTXX &#x3D; Replacing XX with a numeric value, more than that number of quarters in noncompliance. (optional)
     * @param pNaa Non-Attainment Area Flag.  Enter a Y or N to filter for or against facilities flagged as non-attainment areas. (optional)
     * @param pImpw Discharging into Impaired Waters Flag. Enter Y to limit results to facilities with discharge to waterbodies listed as impaired in the ATTAINS database. (optional)
     * @param pTrep Current Toxics Release Inventory (TRI) Reporter Limiter.  Enter one of the following codes to limit results. - CURR &#x3D; Current TRI reporter. - NONCURR &#x3D; Has reported to TRI in the past but not for the current reporting year. (optional)
     * @param pTriCat Toxic Release Inventory Released To Air Chemical Identifier Category Filter.  Enter the chemical identifier category code to limit results. Note when filtering by TRI chemical identifier categories one may not also filter by specific chemical identifiers via p_tri_pol.  You must also specify a release amount using p_tri_amt or p_tri_any_amt. - TOTAL &#x3D; Total Released to Air - CARC &#x3D; Total Carcinogens Released to Air - HAP &#x3D; Total Hazardous Air Pollutants Released to Air (optional)
     * @param pTriAmt Toxic Release Inventory Release Amount Filter.  Enter a value in pounds to limit results to facilities releasing this amount or greateer of TRI releases.  Valid values are 0, GT0, GT1000, GT5000, GT10000 and GT50000. Note when filtering by TRI release amounts one may only use either p_tri_amt or p_tri_any_amt. (optional)
     * @param pTriAnyAmt Toxic Release Inventory Release Of Any Kind Above Value Filter.  Enter a value to limit results to facilities releasing this amount or more of TRI releases.  Note when filtering by TRI releases one may only use p_tri_any_amt or p_tri_amt and not both. (optional)
     * @param pTriPol Toxic Release Inventory Chemical Identifier Filter.  Enter one or more chemical identifier codes to limit results. Note when filtering by specific TRI chemical identifiers one may not also filter by chemical identifier categories via p_tri_cat. (optional)
     * @param pGhgCat Green House Gas (GHG) Gas Code Category.  Must be used with either a formatted (p_ghg_amt) or custom (p_ghg_any_amt) release amount. (optional)
     * @param pGhgAmt Green House Gas (GHG) CO2 Equivalent Formatted Release Amount.  First 2 characters must contain GT (greater than) followed by a number. (optional)
     * @param pGhgAnyAmt Green House Gas (GHG) C02 Equivalent Custom Amount.  The C02E value reported for the provided category, will be greater or equal to the amount provided. (optional)
     * @param pGhgYr Green House Gas (GHG) Reporting Year. (2010 through 2015) (optional)
     * @param pNeiPol National Emissions Inventory (NEI) Pollutant Identifier.  When a pollutant identifer is entered a corresponding formatted amount or custom amount must be entered. (optional)
     * @param pNeiAmt National Emissions Inventory (NEI) Formatted Pollutant Amount.  A formatted value where the 1st two characters must start with GT or LT followed by a number.  Identifies facilities that have a NEI Pollutant Emission  where the supplied value is &gt; or &lt; the pollutant emission amount.   (optional)
     * @param pNeiAnyAmt National Emissions Inventory (NEI) Custom Pollutant Amount.  Only a number can be entered.  Identifies facilities with where the NEI Pollutant Emission Amount is greater than the number entered. (optional)
     * @param pNeiYr National Emissions Inventory (NEI) year:  2014 or 2011 (optional)
     * @param pNeiCat National Emissions Inventory (NEI) Pollutant Category.  When a pollutant category is entered, a corresponding formatted pollutant amount or custom amount must be entered. (optional)
     * @param pPm Percent Minority Population Limiter.  Enter a value to restrict results to facilities with a given percentage of minority population within 3-mile radius. - NONE &#x3D; 0% - GT5 &#x3D; greater than 5% - GT10 &#x3D; greater than 10% - GT25 &#x3D; greater than 25% - GT50 &#x3D; greater than 50% - GT75 &#x3D; greater than 75% (optional)
     * @param pPd Population Density Limiter (per sq mile). Enter a value to limit results to facilities located in area of a given population density. - NONE &#x3D; 0 population density per square mile - GT100 &#x3D; More than 100 population density per square mile - GT500 &#x3D; More than 500 population density per square mile - GT1000 &#x3D; More than 1000 population density per square mile - GT5000 &#x3D; More than 5000 population density per square mile - GT10000 &#x3D; More than 10000 population density per square mile - GT20000 &#x3D; More than 20000 population density per square mile (optional)
     * @param pIco Indian Country Flag.  Enter a \\\&quot;Y\\\&quot; or \\\&quot;N\\\&quot; to restrict searches to facilities inside or outside Indian Country. (optional)
     * @param pHuc 2-, 4-, 6-, or 8-character watershed code. May contain multiple comma-separated values. (optional)
     * @param pWbd 2-, 4-, 6-, 8-, 10-, or 12-character watershed (WBD from the USGS Watershed Boundary Dataset). May contain multiple comma-separated values.  Uses the FRS Best Pick Coordinate to obtain the WBD12 Huc value. (optional)
     * @param pPid Nine-digit permit IDs. May contain up to 2000 comma-separated values. (optional)
     * @param pMed Filter Results by Media. - M &#x3D; RMP (Risk Management Plan) - R &#x3D; RCRA (Hazardous Waste) - S &#x3D; SDWA (Public Drinking Water Systems) - W &#x3D; Water - ALL &#x3D; Water and RCRA and SDWA (optional)
     * @param pYsl Last Facility Inspection [within / not within] Specified Date Range Indicator. The date range is determined by parameters p_idt1 and p_idt2 or by parameter p_ysly. - W &#x3D; within date range - N &#x3D; not within date range (optional)
     * @param pYsly Number of years (1 to 5) since last facility inspection.  A value of 1 means that it has been inspected within the year. (optional)
     * @param pYsla Facility Last Inspection Code Filter.  If left blank, both agencies are included.  Enter a value to limit results: - E &#x3D; EPA - S &#x3D; State (optional)
     * @param pStsl Last Stack Test [within / not within] Specified Date Range Indicator. - W &#x3D; within date range - N &#x3D; not within date range (optional)
     * @param pStsly Number of years (1 to 5) since date of last stack test. A value of 1 means it has been inspected within the year. (optional)
     * @param pStsla Stack Last Test Code Filter.  Enter a value to limit results: - A &#x3D; All - E &#x3D; EPA - S &#x3D; State (optional)
     * @param pStres Air Stack Test Status Description Filter.  Enter one or more test status descriptions to filter results.  Enter multiple values as a comma-delimited list. (optional)
     * @param pSttyp Air Conductor Type Code Filter.  Enter one or more conductor type codes to filter results.  Provide multiple values as a comma-delimited list. (optional)
     * @param pQs Quick Search. Allows entry for city, state, and/or zip code. (optional)
     * @param pSfs Single Facility Search Filter.  Provide a facility name or program system identifier to limit results.  For the all data search, the FRS registry identifier is also searched. (optional)
     * @param pTribeid Numeric code for tribe (or list of tribes). (optional)
     * @param pTribename Tribe Name Filter.  Enter a single tribe name to filter results. (optional)
     * @param pTribedist Proximity to tribal land limiter. Enter an amount of mile between 0 and 25 to filter results.  This parameter is only evaluated if p_tribeid is populated. (optional)
     * @param pOwop Owner/Operator code filter.  Enter one or more codes to limit results. - CNG - COR - CTG - DIS - FDF - MWD - MXO - NON - POF - SDT - STF - TRB (optional)
     * @param pAgoo Indicates whether to AND or OR the Owner/Operator parameter (p_owop) and the federal agency code (p_fa) parameters. (optional)
     * @param pIdt1 Beginning of date range of most recent facility inspection. (optional)
     * @param pIdt2 End of date range of most recent facility inspection. (optional)
     * @param pStdt1 Beginning of date range of most recent stack test. (optional)
     * @param pStdt2 End of date range of most recent stack test. (optional)
     * @param pPityp Inspection Type: - CAC &#x3D; Corrective Action Inspection - CAV &#x3D; Compliance Assistance Visit - CDI &#x3D; Case Development Inspection - CEI &#x3D; Inspection Inspection - CSE &#x3D; Compliance Schedule Evaluation - FCI &#x3D; Focused Compliance - FRR &#x3D; Financial Record Review - FSD &#x3D; Facility Self Disclosure - FUI &#x3D; Follow-Up Inspection - GME &#x3D; Groundwater Monitoring Evaluation - NRR &#x3D; Non-Financial Record Review - OAM &#x3D; Operation and Maintenance Inspection May contain multiple comma-separated values. (optional)
     * @param pCifdi Compliance issuess found during inspection. (optional)
     * @param pPfead1 Formal Enforcement Action Date Range Start.  Enter a date in MM/DD/YYYY format to set the start of the range for filtering by recent Formal Enforcement Action (FEA) taken against the facility within the last five years. (optional)
     * @param pPfead2 Formal Enforcement Action Date Range End.  Enter a date in MM/DD/YYYY format to set the end of the date range for filtering by recent Formal Enforcement Action (FEA) taken against the facility within the last five years. (optional)
     * @param pPfeat Formal Enforcement Action (FEA) Code Filter.  Enter one or more three-letter FEA codes to restrict results to facilities with these attributes.  Use p_fead1 and p_fead2 parameters to further restrict this filter by entering a date range.  Provide multiple codes as a comma-delimited list. (optional)
     * @param pPsncq Quarters in Significant Noncompliance Limiter.  Enter a coded value to limit results to facilities with given quarter of significant noncompliance. - Z &#x3D; Zero quarters in significant noncompliance. - GEXX &#x3D; Replacing XX with a numeric value, that number of quarterd or more in significant noncompliance. - GTXX &#x3D; Replacing XX with a numeric value, more than that number of quarters in significant noncompliance. (optional)
     * @param pPctrack Compliance Tracking Limiter. Provide a keyword to indicate the extent to which data is being entered and effluent exceedances are being identified. - Off - Partial - On (optional)
     * @param pSwpa Source water protection area (optional)
     * @param pDes Universe Designation Limiter.  Enter one or more universe designation codes.  Provide multiple values as a comma-delimited list.  Use code \\\&quot;TSDF\\\&quot; to return the full enforcement TSDF universe and \\\&quot;Operating TSDF\\\&quot; to return the operating TSDF universe. (optional)
     * @param pFntype Controls type of text search performed on facility name with parameter p_fn. - EXACT &#x3D; Find facilities having the exact provided name(s). - BEGINS &#x3D; Find facilities with names starting with the provided term(s). - ALL &#x3D; Find facilities using Oracle text search terms. - CONTAINS &#x3D;  (optional)
     * @param pHpvmth Months in high priority violation status out of the previous three years limiter.  Provide a number of months in the past three years.  Results will limited to facilities in high priority violation status during that time.  (optional)
     * @param pRecvio Recent Violation Status Filter.  Enter one or more recent violation codes to limit results.  Provide multiple values as a comma-delimited list. - NO VIOL &#x3D; Selects facilities with no recent violations. - ANY HPV &#x3D; Selects facilities with either addressed or unaddressed high priority violations. - ADDRS-EPA - Select facilities with recent EPA addressed violations. - ADDRS-LOCAL - Select facilities with recent locally addressed violations. - ADDRS-STATE - Select facilities with recent state addressed violations. - UNADDR-EPA - Select facilities with recent EPA unaddressed violations. - UNADDR-LOCAL - Select facilities with recent locally unaddressed violations. - UNADDR-STATE - Select facilities with recent state unaddressed violations. - FRV VIOL &#x3D; Selects facilities with a recent federally reportable violation without a high priority violation. (optional)
     * @param pPollvio Air Pollutant Code For A Recent Violation Filter.  Provide one or more pollutant codes to select facilities with one or more of the entered pollutant codes for a recent air violation.  Provide multiple values as a comma-delimited list. (optional)
     * @param pAr Associated EPA Air Reports Program Filter.  Enter multiple values as a comma-delimited list.  Valid values are: - TRI &#x3D; Toxic Release Inventory. - GHG &#x3D; Green House Gas Reporter. - EIS &#x3D; Emission Inventory System. - CAMD &#x3D; Clean Air Markets Program Reporter. (optional)
     * @param pTriYr Toxic Release Inventory Reporting Year Filter.  Enter one or more year values to filter results by the TRI reporting year.  Provide multiple years as a comma-delimited list. (optional)
     * @param pPidall Controls whether search is restricted to existing system. Y means the search will match the p_pid parameter against all associated permits (AIR, RCRA, SDWIS, etc). (optional)
     * @param pFacIco FRS tribal land code flag.  Enter \\\&quot;Y\\\&quot; or \\\&quot;N\\\&quot; to include or exclude facilities based on FRS tribal land code. (optional)
     * @param pIcoo Indian country search and/or flag.  Enter \\\&quot;Y\\\&quot; to set indian country search conditions to return any results found using p_ico, p_fac_ico or p_fac_icoo.  Otherwise only results matching all provided p_ico, p_fac_ico or p_fac_icoo conditions will be returned. (optional)
     * @param pFacIcos FRS tribal land spatial flag.  Enter \\\&quot;Y\\\&quot; or \\\&quot;N\\\&quot; to include or exclude facilities based on FRS tribal land spatial flag. (optional)
     * @param pEjscreen Enter \\\&quot;Y\\\&quot; to limit facilities to Census block groups where one of more Environmental Justice indexes above 80th percentile. (optional)
     * @param pLimitAddr Limit Address Search Flag.  Enter Y to restrict facility searches to native data source only.   (optional)
     * @param pLat Latitude location in decimal degrees. (optional)
     * @param pLong Longitude location in decimal degrees. (optional)
     * @param pRadius Spatial Search Radius.  Enter a radius up to 100 miles in which to spatially search for facilities. (optional)
     * @param pDecouple Decouple Inspection Code Search Flag.  Enter \\\&quot;Y\\\&quot; to search for inspection code types with p_pityp without respect to the date range search provided with p_ysl* parameters. (optional)
     * @param pEjscreenOver80cnt The number of Environmenmt Justice Indicators above the 80th percentile.  Valid values are 1 through 11. (optional)
     * @param queryset Query Limiter.  Enter a value to limit the number of records returned for each query. Value cannot exceed 70,000. (optional)
     * @param responseset Response Set Limiter. Enter a value to limit the number of records per page. Value cannot exceed 1,000. (optional)
     * @param tablelist Table List Flag. Enter a Y to display the first page of facility results. (optional)
     * @param maplist Map List Flag.  Provide a Y to return mappable coordinates representing the full geographic extent of the queryset (all facilities that met the selection criteria). (optional)
     * @param summarylist Summary List Flag.  Enter a Y to return a list of summary statistics based on the parameters submitted to the query service. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param qcolumns Used to customize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions. (optional)
     * @return Results are summary statistics for the query and a query identifier (QID). (status code 200)
     */
    @Operation(
        operationId = "airRestServicesGetFacilitiesPost",
        summary = "Clean Air Act Facility Search",
        description = "Validates query search parameters and returns query identifier.  Use the responseset parameter to set the page size",
        tags = { "Facilities" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Results are summary statistics for the query and a query identifier (QID).", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = AirRestServicesGetFacilitiesGet200Response.class)),
                @Content(mediaType = "application/xml", schema = @Schema(implementation = AirRestServicesGetFacilitiesGet200Response.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/air_rest_services.get_facilities",
        produces = { "application/json", "application/xml" },
        consumes = { "application/x-www-form-urlencoded" }
    )
    
    default ResponseEntity<AirRestServicesGetFacilitiesGet200Response> airRestServicesGetFacilitiesPost(
        @Parameter(name = "output", description = "Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.") @Valid @RequestParam(value = "output", required = false) String output,
        @Parameter(name = "p_fn", description = "Facility Name Filter. Enter one or more case-insensitive facility names to filter results.  Provide multiple values as a comma-delimited list.  See p_fntype for additional modifiers.") @Valid @RequestParam(value = "p_fn", required = false) String pFn,
        @Parameter(name = "p_sa", description = "Facility street address. Enter a complete or partial street address.") @Valid @RequestParam(value = "p_sa", required = false) String pSa,
        @Parameter(name = "p_sa1", description = "Facility street address. Enter a complete or partial street address.   Note that p_sa1 is culmulative with p_sa.") @Valid @RequestParam(value = "p_sa1", required = false) String pSa1,
        @Parameter(name = "p_ct", description = "Facility City Filter. Enter a single case-insensitive city name to filter results.") @Valid @RequestParam(value = "p_ct", required = false) String pCt,
        @Parameter(name = "p_co", description = "Facility County Filter. Provide a single county name in combination with a state value provided via p_st.") @Valid @RequestParam(value = "p_co", required = false) String pCo,
        @Parameter(name = "p_fips", description = "FIPS Code Filter.  Enter a single 5-character Federal Information Processing Standards (FIPS) state + county value to restrict results.  E.g. to limit results to Kenosha County, Wisconsin, use 55059.") @Valid @RequestParam(value = "p_fips", required = false) String pFips,
        @Parameter(name = "p_st", description = "Facility State and State-Equivalent Filter.  Provide one or more USPS postal abbreviations for states and state-equivalents to filter results.  Provide multiple values as a comma-delimited list.") @Valid @RequestParam(value = "p_st", required = false) String pSt,
        @Parameter(name = "p_zip", description = "5-Digit ZIP Code Filter. Provide one or more 5-digit postal zip codes to filter results.  May contain multiple comma-separated values.") @Valid @RequestParam(value = "p_zip", required = false) String pZip,
        @Parameter(name = "p_lcon", description = "Air Program Local Control Region Code Filter.  Enter one or more local control region codes to filter results.  Provide multiple codes as a comma-delimited list.  Codes where they exist are specific by state.") @Valid @RequestParam(value = "p_lcon", required = false) String pLcon,
        @Parameter(name = "p_frs", description = "Facility Registry Service ID Filter. Enter a single 12-digit FRS identifier to filter results.") @Valid @RequestParam(value = "p_frs", required = false) String pFrs,
        @Parameter(name = "p_reg", description = "EPA Region Filter. Provide a single value of 01 thru 10 to restrict results to a single EPA region.") @Valid @RequestParam(value = "p_reg", required = false) String pReg,
        @Parameter(name = "p_sic", description = "Standard Industrial Classification (SIC) Code Filter.  Enter a single 4-digit SIC Code to filter results.  If more complex filtering is required, use p_sic2 and p_sic4.") @Valid @RequestParam(value = "p_sic", required = false) String pSic,
        @Parameter(name = "p_ncs", description = "North American Industry Classification System Filter. Enter two to six digits to filter results to facilities having matching NAICS codes.  Digits less than six will match to all codes beginning with the provided values.") @Valid @RequestParam(value = "p_ncs", required = false) String pNcs,
        @Parameter(name = "p_qnc", description = "Number of quarters in non-compliance limiter.  Enter an integer value between 1 and 4 to limit results.") @Valid @RequestParam(value = "p_qnc", required = false) BigDecimal pQnc,
        @Parameter(name = "p_pen", description = "Last Penality Date Qualifier Filter.  Enter one of the following:    - NEVER = No Penalties - ANY = Any Penalty - LEXX = Less than or equal to XX months.  Provide a number in place of XX, e.g. \\\"LE5\\\" for a facility with a penalty within previous 5 months. - GTXX = Greater than XX months.  Provide a number in place of XX, eg. GT12, for a facility with the last penalty greater than 12 months ago.") @Valid @RequestParam(value = "p_pen", required = false) String pPen,
        @Parameter(name = "p_opst", description = "Operating status filter.  Enter one or more operating status codes to limit results.   Provide multiple codes as a comma-delimited list.") @Valid @RequestParam(value = "p_opst", required = false) String pOpst,
        @Parameter(name = "p_c1lat", description = "In decimal degrees.  Latitude of 1st corner of box that bounds the resulting facilities. The latitude and longitude of both corners of the bounding box must be provided.") @Valid @RequestParam(value = "p_c1lat", required = false) BigDecimal pC1lat,
        @Parameter(name = "p_c1lon", description = "In decimal degrees.  Longitude of 1st corner of box that bounds the resulting facilities. The latitude and longitude of both corners of the bounding box must be provided.") @Valid @RequestParam(value = "p_c1lon", required = false) BigDecimal pC1lon,
        @Parameter(name = "p_c2lat", description = "In decimal degrees.  Latitude of 2nd corner of box that bounds the resulting facilities. The latitude and longitude of both corners of the bounding box must be provided.") @Valid @RequestParam(value = "p_c2lat", required = false) BigDecimal pC2lat,
        @Parameter(name = "p_c2lon", description = "In decimal degrees.  Longitude of 2nd corner of box that bounds the resulting facilities. The latitude and longitude of both corners of the bounding box must be provided.") @Valid @RequestParam(value = "p_c2lon", required = false) BigDecimal pC2lon,
        @Parameter(name = "p_usmex", description = "US-Mexico Border Flag.  Enter Y/N to restrict searches to facilities located within 100KM of the border.") @Valid @RequestParam(value = "p_usmex", required = false) String pUsmex,
        @Parameter(name = "p_sic2", description = "Standard Industrial Classification (SIC) Code Filter Alternate 2. Enter a wild-card search against SIC codes.  A final wild-card is always present allowing \\\"22\\\" to match all SIC codes beginning with 22.  Use the \\\"%\\\" character within strings to match any SIC values with the pattern.  For example, \\\"2%21\\\" matches 2021, 2121, 2221, etc.") @Valid @RequestParam(value = "p_sic2", required = false) String pSic2,
        @Parameter(name = "p_sic4", description = "Standard Industrial Classification (SIC) Code Filter Alternate 3.  Enter the first 2, 3 or 4 SIC code digits to filter results to facilities having those code prefixes.  As this alternative does not utilize an index, p_sic2 will generally be quicker.") @Valid @RequestParam(value = "p_sic4", required = false) String pSic4,
        @Parameter(name = "p_fa", description = "Federal Agency. 1 character or 5-character values; may contain multiple comma-separated values. ALL will retrieve all facilities where the federal agency code is not null.  Use the Federal Agencies lookup service to obtain a list of values.") @Valid @RequestParam(value = "p_fa", required = false) String pFa,
        @Parameter(name = "p_act", description = "Active Permits/Facilities Flag.  Provide Y or N to filter results to facilities with active permits.") @Valid @RequestParam(value = "p_act", required = false) String pAct,
        @Parameter(name = "p_maj", description = "Major Facility Flag.  Enter Y to restrict results to Major facilities only.") @Valid @RequestParam(value = "p_maj", required = false) String pMaj,
        @Parameter(name = "p_mact", description = "CAA Maximum Achievable Control Technology (MACT) Subpart codes (alpha ID between 1 and 7 characters) applicable to the facility.") @Valid @RequestParam(value = "p_mact", required = false) String pMact,
        @Parameter(name = "p_nsps", description = "Air Programl New Source Performance Standards (NSPS)  Subpart Code Search.  One or more valid Air Program NSPS Program codes cand be passed.  ") @Valid @RequestParam(value = "p_nsps", required = false) String pNsps,
        @Parameter(name = "p_nspsm", description = "Air Programl New Source Performance Standards Minors (NSPSM) Subpart Code Search.  One or more valid Air Program NSPSM Subpart codes can be passed.  ") @Valid @RequestParam(value = "p_nspsm", required = false) String pNspsm,
        @Parameter(name = "p_prog", description = "Air Program Code Filter.  Enter one or more Air program codes to filter results.  Provide multiple values as a comma-delimited list.") @Valid @RequestParam(value = "p_prog", required = false) String pProg,
        @Parameter(name = "p_fea", description = "Formal Enforcement Actions [within / not within] specified date range indicator. The date range is determined by parameters p_fead1 and p_fead2 or by parameter p_feay. - W = within date range - N = not within date range") @Valid @RequestParam(value = "p_fea", required = false) String pFea,
        @Parameter(name = "p_feay", description = "Years (1 to 5) Range.  This value is used to create a date range for Formal Enforcement Actions (FEA). Used along with p_fea (which indicates whether to look within or outside of the date range) to find FEAs within (or not within) the number of years specified.") @Valid @RequestParam(value = "p_feay", required = false) BigDecimal pFeay,
        @Parameter(name = "p_feaa", description = "Agency associated with Formal Enforcement Actions: - E = EPA - S = State - A = All") @Valid @RequestParam(value = "p_feaa", required = false) String pFeaa,
        @Parameter(name = "p_iea", description = "Informal Enforcement Actions [within / not within] specified date range.  The date range is determined by parameters p_iead1 and p_iead2 or by parameter p_ieay. - W = within date range - N = not within date range") @Valid @RequestParam(value = "p_iea", required = false) String pIea,
        @Parameter(name = "p_ieay", description = "Years (1 to 5) Range.  This value is used to create a date range for Informal Enforcement Actions (IEA). Used along with p_iea (which indicates whether to look within or outside of the date range) to find IEAs within (or not within) the number of years specified.") @Valid @RequestParam(value = "p_ieay", required = false) BigDecimal pIeay,
        @Parameter(name = "p_ieaa", description = "Agency associated with Informal Enforcement Actions. If left blank, both agencies are included. - E = EPA - S = State") @Valid @RequestParam(value = "p_ieaa", required = false) String pIeaa,
        @Parameter(name = "p_qiv", description = "Quarters in Noncompliance Limiter.  Enter a coded value to limit results to facilities with given quarter of noncompliance. - Z = Zero quarters in noncompliance. - GEXX = Replacing XX with a numeric value, that number of quarterd or more in noncompliance. - GTXX = Replacing XX with a numeric value, more than that number of quarters in noncompliance.") @Valid @RequestParam(value = "p_qiv", required = false) String pQiv,
        @Parameter(name = "p_naa", description = "Non-Attainment Area Flag.  Enter a Y or N to filter for or against facilities flagged as non-attainment areas.") @Valid @RequestParam(value = "p_naa", required = false) String pNaa,
        @Parameter(name = "p_impw", description = "Discharging into Impaired Waters Flag. Enter Y to limit results to facilities with discharge to waterbodies listed as impaired in the ATTAINS database.") @Valid @RequestParam(value = "p_impw", required = false) String pImpw,
        @Parameter(name = "p_trep", description = "Current Toxics Release Inventory (TRI) Reporter Limiter.  Enter one of the following codes to limit results. - CURR = Current TRI reporter. - NONCURR = Has reported to TRI in the past but not for the current reporting year.") @Valid @RequestParam(value = "p_trep", required = false) String pTrep,
        @Parameter(name = "p_tri_cat", description = "Toxic Release Inventory Released To Air Chemical Identifier Category Filter.  Enter the chemical identifier category code to limit results. Note when filtering by TRI chemical identifier categories one may not also filter by specific chemical identifiers via p_tri_pol.  You must also specify a release amount using p_tri_amt or p_tri_any_amt. - TOTAL = Total Released to Air - CARC = Total Carcinogens Released to Air - HAP = Total Hazardous Air Pollutants Released to Air") @Valid @RequestParam(value = "p_tri_cat", required = false) String pTriCat,
        @Parameter(name = "p_tri_amt", description = "Toxic Release Inventory Release Amount Filter.  Enter a value in pounds to limit results to facilities releasing this amount or greateer of TRI releases.  Valid values are 0, GT0, GT1000, GT5000, GT10000 and GT50000. Note when filtering by TRI release amounts one may only use either p_tri_amt or p_tri_any_amt.") @Valid @RequestParam(value = "p_tri_amt", required = false) String pTriAmt,
        @Parameter(name = "p_tri_any_amt", description = "Toxic Release Inventory Release Of Any Kind Above Value Filter.  Enter a value to limit results to facilities releasing this amount or more of TRI releases.  Note when filtering by TRI releases one may only use p_tri_any_amt or p_tri_amt and not both.") @Valid @RequestParam(value = "p_tri_any_amt", required = false) BigDecimal pTriAnyAmt,
        @Parameter(name = "p_tri_pol", description = "Toxic Release Inventory Chemical Identifier Filter.  Enter one or more chemical identifier codes to limit results. Note when filtering by specific TRI chemical identifiers one may not also filter by chemical identifier categories via p_tri_cat.") @Valid @RequestParam(value = "p_tri_pol", required = false) String pTriPol,
        @Parameter(name = "p_ghg_cat", description = "Green House Gas (GHG) Gas Code Category.  Must be used with either a formatted (p_ghg_amt) or custom (p_ghg_any_amt) release amount.") @Valid @RequestParam(value = "p_ghg_cat", required = false) String pGhgCat,
        @Parameter(name = "p_ghg_amt", description = "Green House Gas (GHG) CO2 Equivalent Formatted Release Amount.  First 2 characters must contain GT (greater than) followed by a number.") @Valid @RequestParam(value = "p_ghg_amt", required = false) String pGhgAmt,
        @Parameter(name = "p_ghg_any_amt", description = "Green House Gas (GHG) C02 Equivalent Custom Amount.  The C02E value reported for the provided category, will be greater or equal to the amount provided.") @Valid @RequestParam(value = "p_ghg_any_amt", required = false) BigDecimal pGhgAnyAmt,
        @Parameter(name = "p_ghg_yr", description = "Green House Gas (GHG) Reporting Year. (2010 through 2015)") @Valid @RequestParam(value = "p_ghg_yr", required = false) String pGhgYr,
        @Parameter(name = "p_nei_pol", description = "National Emissions Inventory (NEI) Pollutant Identifier.  When a pollutant identifer is entered a corresponding formatted amount or custom amount must be entered.") @Valid @RequestParam(value = "p_nei_pol", required = false) String pNeiPol,
        @Parameter(name = "p_nei_amt", description = "National Emissions Inventory (NEI) Formatted Pollutant Amount.  A formatted value where the 1st two characters must start with GT or LT followed by a number.  Identifies facilities that have a NEI Pollutant Emission  where the supplied value is > or < the pollutant emission amount.  ") @Valid @RequestParam(value = "p_nei_amt", required = false) String pNeiAmt,
        @Parameter(name = "p_nei_any_amt", description = "National Emissions Inventory (NEI) Custom Pollutant Amount.  Only a number can be entered.  Identifies facilities with where the NEI Pollutant Emission Amount is greater than the number entered.") @Valid @RequestParam(value = "p_nei_any_amt", required = false) BigDecimal pNeiAnyAmt,
        @Parameter(name = "p_nei_yr", description = "National Emissions Inventory (NEI) year:  2014 or 2011") @Valid @RequestParam(value = "p_nei_yr", required = false) String pNeiYr,
        @Parameter(name = "p_nei_cat", description = "National Emissions Inventory (NEI) Pollutant Category.  When a pollutant category is entered, a corresponding formatted pollutant amount or custom amount must be entered.") @Valid @RequestParam(value = "p_nei_cat", required = false) String pNeiCat,
        @Parameter(name = "p_pm", description = "Percent Minority Population Limiter.  Enter a value to restrict results to facilities with a given percentage of minority population within 3-mile radius. - NONE = 0% - GT5 = greater than 5% - GT10 = greater than 10% - GT25 = greater than 25% - GT50 = greater than 50% - GT75 = greater than 75%") @Valid @RequestParam(value = "p_pm", required = false) String pPm,
        @Parameter(name = "p_pd", description = "Population Density Limiter (per sq mile). Enter a value to limit results to facilities located in area of a given population density. - NONE = 0 population density per square mile - GT100 = More than 100 population density per square mile - GT500 = More than 500 population density per square mile - GT1000 = More than 1000 population density per square mile - GT5000 = More than 5000 population density per square mile - GT10000 = More than 10000 population density per square mile - GT20000 = More than 20000 population density per square mile") @Valid @RequestParam(value = "p_pd", required = false) String pPd,
        @Parameter(name = "p_ico", description = "Indian Country Flag.  Enter a \\\"Y\\\" or \\\"N\\\" to restrict searches to facilities inside or outside Indian Country.") @Valid @RequestParam(value = "p_ico", required = false) String pIco,
        @Parameter(name = "p_huc", description = "2-, 4-, 6-, or 8-character watershed code. May contain multiple comma-separated values.") @Valid @RequestParam(value = "p_huc", required = false) String pHuc,
        @Parameter(name = "p_wbd", description = "2-, 4-, 6-, 8-, 10-, or 12-character watershed (WBD from the USGS Watershed Boundary Dataset). May contain multiple comma-separated values.  Uses the FRS Best Pick Coordinate to obtain the WBD12 Huc value.") @Valid @RequestParam(value = "p_wbd", required = false) String pWbd,
        @Parameter(name = "p_pid", description = "Nine-digit permit IDs. May contain up to 2000 comma-separated values.") @Valid @RequestParam(value = "p_pid", required = false) String pPid,
        @Parameter(name = "p_med", description = "Filter Results by Media. - M = RMP (Risk Management Plan) - R = RCRA (Hazardous Waste) - S = SDWA (Public Drinking Water Systems) - W = Water - ALL = Water and RCRA and SDWA") @Valid @RequestParam(value = "p_med", required = false) String pMed,
        @Parameter(name = "p_ysl", description = "Last Facility Inspection [within / not within] Specified Date Range Indicator. The date range is determined by parameters p_idt1 and p_idt2 or by parameter p_ysly. - W = within date range - N = not within date range") @Valid @RequestParam(value = "p_ysl", required = false) String pYsl,
        @Parameter(name = "p_ysly", description = "Number of years (1 to 5) since last facility inspection.  A value of 1 means that it has been inspected within the year.") @Valid @RequestParam(value = "p_ysly", required = false) BigDecimal pYsly,
        @Parameter(name = "p_ysla", description = "Facility Last Inspection Code Filter.  If left blank, both agencies are included.  Enter a value to limit results: - E = EPA - S = State") @Valid @RequestParam(value = "p_ysla", required = false) String pYsla,
        @Parameter(name = "p_stsl", description = "Last Stack Test [within / not within] Specified Date Range Indicator. - W = within date range - N = not within date range") @Valid @RequestParam(value = "p_stsl", required = false) String pStsl,
        @Parameter(name = "p_stsly", description = "Number of years (1 to 5) since date of last stack test. A value of 1 means it has been inspected within the year.") @Valid @RequestParam(value = "p_stsly", required = false) BigDecimal pStsly,
        @Parameter(name = "p_stsla", description = "Stack Last Test Code Filter.  Enter a value to limit results: - A = All - E = EPA - S = State") @Valid @RequestParam(value = "p_stsla", required = false) String pStsla,
        @Parameter(name = "p_stres", description = "Air Stack Test Status Description Filter.  Enter one or more test status descriptions to filter results.  Enter multiple values as a comma-delimited list.") @Valid @RequestParam(value = "p_stres", required = false) String pStres,
        @Parameter(name = "p_sttyp", description = "Air Conductor Type Code Filter.  Enter one or more conductor type codes to filter results.  Provide multiple values as a comma-delimited list.") @Valid @RequestParam(value = "p_sttyp", required = false) String pSttyp,
        @Parameter(name = "p_qs", description = "Quick Search. Allows entry for city, state, and/or zip code.") @Valid @RequestParam(value = "p_qs", required = false) String pQs,
        @Parameter(name = "p_sfs", description = "Single Facility Search Filter.  Provide a facility name or program system identifier to limit results.  For the all data search, the FRS registry identifier is also searched.") @Valid @RequestParam(value = "p_sfs", required = false) String pSfs,
        @Parameter(name = "p_tribeid", description = "Numeric code for tribe (or list of tribes).") @Valid @RequestParam(value = "p_tribeid", required = false) BigDecimal pTribeid,
        @Parameter(name = "p_tribename", description = "Tribe Name Filter.  Enter a single tribe name to filter results.") @Valid @RequestParam(value = "p_tribename", required = false) String pTribename,
        @Parameter(name = "p_tribedist", description = "Proximity to tribal land limiter. Enter an amount of mile between 0 and 25 to filter results.  This parameter is only evaluated if p_tribeid is populated.") @Valid @RequestParam(value = "p_tribedist", required = false) BigDecimal pTribedist,
        @Parameter(name = "p_owop", description = "Owner/Operator code filter.  Enter one or more codes to limit results. - CNG - COR - CTG - DIS - FDF - MWD - MXO - NON - POF - SDT - STF - TRB") @Valid @RequestParam(value = "p_owop", required = false) String pOwop,
        @Parameter(name = "p_agoo", description = "Indicates whether to AND or OR the Owner/Operator parameter (p_owop) and the federal agency code (p_fa) parameters.") @Valid @RequestParam(value = "p_agoo", required = false) String pAgoo,
        @Parameter(name = "p_idt1", description = "Beginning of date range of most recent facility inspection.") @Valid @RequestParam(value = "p_idt1", required = false) String pIdt1,
        @Parameter(name = "p_idt2", description = "End of date range of most recent facility inspection.") @Valid @RequestParam(value = "p_idt2", required = false) String pIdt2,
        @Parameter(name = "p_stdt1", description = "Beginning of date range of most recent stack test.") @Valid @RequestParam(value = "p_stdt1", required = false) String pStdt1,
        @Parameter(name = "p_stdt2", description = "End of date range of most recent stack test.") @Valid @RequestParam(value = "p_stdt2", required = false) String pStdt2,
        @Parameter(name = "p_pityp", description = "Inspection Type: - CAC = Corrective Action Inspection - CAV = Compliance Assistance Visit - CDI = Case Development Inspection - CEI = Inspection Inspection - CSE = Compliance Schedule Evaluation - FCI = Focused Compliance - FRR = Financial Record Review - FSD = Facility Self Disclosure - FUI = Follow-Up Inspection - GME = Groundwater Monitoring Evaluation - NRR = Non-Financial Record Review - OAM = Operation and Maintenance Inspection May contain multiple comma-separated values.") @Valid @RequestParam(value = "p_pityp", required = false) String pPityp,
        @Parameter(name = "p_cifdi", description = "Compliance issuess found during inspection.") @Valid @RequestParam(value = "p_cifdi", required = false) String pCifdi,
        @Parameter(name = "p_pfead1", description = "Formal Enforcement Action Date Range Start.  Enter a date in MM/DD/YYYY format to set the start of the range for filtering by recent Formal Enforcement Action (FEA) taken against the facility within the last five years.") @Valid @RequestParam(value = "p_pfead1", required = false) String pPfead1,
        @Parameter(name = "p_pfead2", description = "Formal Enforcement Action Date Range End.  Enter a date in MM/DD/YYYY format to set the end of the date range for filtering by recent Formal Enforcement Action (FEA) taken against the facility within the last five years.") @Valid @RequestParam(value = "p_pfead2", required = false) String pPfead2,
        @Parameter(name = "p_pfeat", description = "Formal Enforcement Action (FEA) Code Filter.  Enter one or more three-letter FEA codes to restrict results to facilities with these attributes.  Use p_fead1 and p_fead2 parameters to further restrict this filter by entering a date range.  Provide multiple codes as a comma-delimited list.") @Valid @RequestParam(value = "p_pfeat", required = false) String pPfeat,
        @Parameter(name = "p_psncq", description = "Quarters in Significant Noncompliance Limiter.  Enter a coded value to limit results to facilities with given quarter of significant noncompliance. - Z = Zero quarters in significant noncompliance. - GEXX = Replacing XX with a numeric value, that number of quarterd or more in significant noncompliance. - GTXX = Replacing XX with a numeric value, more than that number of quarters in significant noncompliance.") @Valid @RequestParam(value = "p_psncq", required = false) String pPsncq,
        @Parameter(name = "p_pctrack", description = "Compliance Tracking Limiter. Provide a keyword to indicate the extent to which data is being entered and effluent exceedances are being identified. - Off - Partial - On") @Valid @RequestParam(value = "p_pctrack", required = false) String pPctrack,
        @Parameter(name = "p_swpa", description = "Source water protection area") @Valid @RequestParam(value = "p_swpa", required = false) String pSwpa,
        @Parameter(name = "p_des", description = "Universe Designation Limiter.  Enter one or more universe designation codes.  Provide multiple values as a comma-delimited list.  Use code \\\"TSDF\\\" to return the full enforcement TSDF universe and \\\"Operating TSDF\\\" to return the operating TSDF universe.") @Valid @RequestParam(value = "p_des", required = false) String pDes,
        @Parameter(name = "p_fntype", description = "Controls type of text search performed on facility name with parameter p_fn. - EXACT = Find facilities having the exact provided name(s). - BEGINS = Find facilities with names starting with the provided term(s). - ALL = Find facilities using Oracle text search terms. - CONTAINS = ") @Valid @RequestParam(value = "p_fntype", required = false) String pFntype,
        @Parameter(name = "p_hpvmth", description = "Months in high priority violation status out of the previous three years limiter.  Provide a number of months in the past three years.  Results will limited to facilities in high priority violation status during that time. ") @Valid @RequestParam(value = "p_hpvmth", required = false) String pHpvmth,
        @Parameter(name = "p_recvio", description = "Recent Violation Status Filter.  Enter one or more recent violation codes to limit results.  Provide multiple values as a comma-delimited list. - NO VIOL = Selects facilities with no recent violations. - ANY HPV = Selects facilities with either addressed or unaddressed high priority violations. - ADDRS-EPA - Select facilities with recent EPA addressed violations. - ADDRS-LOCAL - Select facilities with recent locally addressed violations. - ADDRS-STATE - Select facilities with recent state addressed violations. - UNADDR-EPA - Select facilities with recent EPA unaddressed violations. - UNADDR-LOCAL - Select facilities with recent locally unaddressed violations. - UNADDR-STATE - Select facilities with recent state unaddressed violations. - FRV VIOL = Selects facilities with a recent federally reportable violation without a high priority violation.") @Valid @RequestParam(value = "p_recvio", required = false) String pRecvio,
        @Parameter(name = "p_pollvio", description = "Air Pollutant Code For A Recent Violation Filter.  Provide one or more pollutant codes to select facilities with one or more of the entered pollutant codes for a recent air violation.  Provide multiple values as a comma-delimited list.") @Valid @RequestParam(value = "p_pollvio", required = false) String pPollvio,
        @Parameter(name = "p_ar", description = "Associated EPA Air Reports Program Filter.  Enter multiple values as a comma-delimited list.  Valid values are: - TRI = Toxic Release Inventory. - GHG = Green House Gas Reporter. - EIS = Emission Inventory System. - CAMD = Clean Air Markets Program Reporter.") @Valid @RequestParam(value = "p_ar", required = false) String pAr,
        @Parameter(name = "p_tri_yr", description = "Toxic Release Inventory Reporting Year Filter.  Enter one or more year values to filter results by the TRI reporting year.  Provide multiple years as a comma-delimited list.") @Valid @RequestParam(value = "p_tri_yr", required = false) String pTriYr,
        @Parameter(name = "p_pidall", description = "Controls whether search is restricted to existing system. Y means the search will match the p_pid parameter against all associated permits (AIR, RCRA, SDWIS, etc).") @Valid @RequestParam(value = "p_pidall", required = false) String pPidall,
        @Parameter(name = "p_fac_ico", description = "FRS tribal land code flag.  Enter \\\"Y\\\" or \\\"N\\\" to include or exclude facilities based on FRS tribal land code.") @Valid @RequestParam(value = "p_fac_ico", required = false) String pFacIco,
        @Parameter(name = "p_icoo", description = "Indian country search and/or flag.  Enter \\\"Y\\\" to set indian country search conditions to return any results found using p_ico, p_fac_ico or p_fac_icoo.  Otherwise only results matching all provided p_ico, p_fac_ico or p_fac_icoo conditions will be returned.") @Valid @RequestParam(value = "p_icoo", required = false) String pIcoo,
        @Parameter(name = "p_fac_icos", description = "FRS tribal land spatial flag.  Enter \\\"Y\\\" or \\\"N\\\" to include or exclude facilities based on FRS tribal land spatial flag.") @Valid @RequestParam(value = "p_fac_icos", required = false) String pFacIcos,
        @Parameter(name = "p_ejscreen", description = "Enter \\\"Y\\\" to limit facilities to Census block groups where one of more Environmental Justice indexes above 80th percentile.") @Valid @RequestParam(value = "p_ejscreen", required = false) String pEjscreen,
        @Parameter(name = "p_limit_addr", description = "Limit Address Search Flag.  Enter Y to restrict facility searches to native data source only.  ") @Valid @RequestParam(value = "p_limit_addr", required = false) String pLimitAddr,
        @Parameter(name = "p_lat", description = "Latitude location in decimal degrees.") @Valid @RequestParam(value = "p_lat", required = false) BigDecimal pLat,
        @Parameter(name = "p_long", description = "Longitude location in decimal degrees.") @Valid @RequestParam(value = "p_long", required = false) BigDecimal pLong,
        @Parameter(name = "p_radius", description = "Spatial Search Radius.  Enter a radius up to 100 miles in which to spatially search for facilities.") @Valid @RequestParam(value = "p_radius", required = false) BigDecimal pRadius,
        @Parameter(name = "p_decouple", description = "Decouple Inspection Code Search Flag.  Enter \\\"Y\\\" to search for inspection code types with p_pityp without respect to the date range search provided with p_ysl* parameters.") @Valid @RequestParam(value = "p_decouple", required = false) String pDecouple,
        @Parameter(name = "p_ejscreen_over80cnt", description = "The number of Environmenmt Justice Indicators above the 80th percentile.  Valid values are 1 through 11.") @Valid @RequestParam(value = "p_ejscreen_over80cnt", required = false) String pEjscreenOver80cnt,
        @Parameter(name = "queryset", description = "Query Limiter.  Enter a value to limit the number of records returned for each query. Value cannot exceed 70,000.") @Valid @RequestParam(value = "queryset", required = false) BigDecimal queryset,
        @Parameter(name = "responseset", description = "Response Set Limiter. Enter a value to limit the number of records per page. Value cannot exceed 1,000.") @Valid @RequestParam(value = "responseset", required = false) BigDecimal responseset,
        @Parameter(name = "tablelist", description = "Table List Flag. Enter a Y to display the first page of facility results.") @Valid @RequestParam(value = "tablelist", required = false) String tablelist,
        @Parameter(name = "maplist", description = "Map List Flag.  Provide a Y to return mappable coordinates representing the full geographic extent of the queryset (all facilities that met the selection criteria).") @Valid @RequestParam(value = "maplist", required = false) String maplist,
        @Parameter(name = "summarylist", description = "Summary List Flag.  Enter a Y to return a list of summary statistics based on the parameters submitted to the query service.") @Valid @RequestParam(value = "summarylist", required = false) String summarylist,
        @Parameter(name = "callback", description = "JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.") @Valid @RequestParam(value = "callback", required = false) String paramCallback,
        @Parameter(name = "qcolumns", description = "Used to customize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions.") @Valid @RequestParam(value = "qcolumns", required = false) String qcolumns
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"Results\" : { \"V3Rows\" : \"2\", \"InfFEARows\" : \"0\", \"Message\" : \"Success\", \"BadSystemIDs\" : \"BadSystemIDs\", \"QueryID\" : \"245\", \"MapOutput\" : { \"PopUpBaseURL\" : \"https://echodata.epa.gov/echo/cwa_rest_services.pop_up?p_id=\", \"IconBaseURL\" : \"https://echo.epa.gov/app/map/icons/\", \"MapData\" : [ { \"LastInsp\" : \"901\", \"PUV\" : \"110001891506\", \"InformalCount\" : \"1\", \"FormalCount\" : \"1\", \"LON\" : \"-77.062981\", \"ICON\" : \"CAA-IC-MN-N.png\", \"CAAstatus\" : \"______UUUUUU\", \"TYPE\" : \"Facility\", \"LAT\" : \"38.798026\", \"NAME\" : \"VIRGINIA CONCRETE ALEXANDRIA PLANT\" }, { \"LastInsp\" : \"901\", \"PUV\" : \"110001891506\", \"InformalCount\" : \"1\", \"FormalCount\" : \"1\", \"LON\" : \"-77.062981\", \"ICON\" : \"CAA-IC-MN-N.png\", \"CAAstatus\" : \"______UUUUUU\", \"TYPE\" : \"Facility\", \"LAT\" : \"38.798026\", \"NAME\" : \"VIRGINIA CONCRETE ALEXANDRIA PLANT\" } ], \"QueryID\" : \"245\" }, \"TotalPenalties\" : \"$963,531\", \"Facilities\" : [ { \"LocalControlRegionCode\" : \"LocalControlRegionCode\", \"RmpIDs\" : \"110000\", \"EPASystem\" : \"ICP\", \"FacUsMexBorderFlg\" : \"Y\", \"MaxPctileUs\" : \"98\", \"OtherPermitIDs\" : \"OtherPermitIDs\", \"Ea5yrFlag\" : \"0\", \"AIRState\" : \"WI\", \"LastDatePce\" : \"04/25/2014\", \"AIRLastStckTestResults\" : \"04/25/2014\", \"AIRLastPenaltyDate\" : \"05/16/2014\", \"ReferencePoint\" : \"ENTRANCE POINT OF A FACILITY OR STATION\", \"AIRHpvStatus\" : \"true\", \"CurrVioFlag\" : \"0\", \"AIRDaysLastEval\" : \"2806\", \"AIRTRIbalEPAids\" : \"AIRTRIbalEPAids\", \"AIRCity\" : \"Washington\", \"AIRStackTest5YrAll\" : \"AIRStackTest5YrAll\", \"PctileProximityRmpUs\" : \"91\", \"AIRLastEvalDateEPA\" : \"05/16/2014\", \"AIRQtrsWithHpv\" : \"4\", \"AIRMnthsWithHpv\" : \"3\", \"RCRAIDs\" : \"VAD981111784\", \"AIRMacts\" : \"ZZZZZ\", \"GHGIDs\" : \"110000\", \"AIRLastFeaDateEPA\" : \"05/16/2014\", \"FacFederalAgencyCode\" : \"E\", \"AIRQtrsWithViol\" : \"2\", \"AIRStatus\" : \"Permanently Closed\", \"Map\" : \"Map\", \"FacCamdReporter\" : \"Y\", \"FacEisAIRReleases\" : \"2.35\", \"FacDerivedWBD\" : \"20700100204\", \"FacGHGCO2Releases\" : \"100\", \"Over80CountUs\" : \"3\", \"AIRStreet\" : \"2130 P STREET N.W.\", \"FacIndianSpatialFlg\" : \"Y\", \"NaaPollutants\" : \"OZONE\", \"AIRLastStckDateEPA\" : \"04/25/2014\", \"AIRComplStatus\" : \"No Viol\", \"FacDerivedHuc\" : \"552968\", \"AIRFacilityTypeDesc\" : \"AIRFacilityTypeDesc\", \"FacTRICarcAIRReleases\" : \"24\", \"NaStandardsNaa\" : \"NaStandardsNaa\", \"NaaCategories\" : \"8-HOUR OZONE(2015)\", \"AIRIDs\" : \"DC0000001100195254\", \"PctileCancerUs\" : \"99\", \"RegistryID\" : \"110020837601\", \"ChesapeakeBayFlag\" : \"Y\", \"AIRMajorFlag\" : \"N\", \"PctileProximityNPDESUs\" : \"23.7\", \"AIRLastIeaDateState\" : \"04/25/2014\", \"PctilePctpre1960Us\" : \"14.6\", \"AIRFIPSCode\" : \"11001\", \"AIRLastStckTestDate\" : \"04/25/2014\", \"SourceID\" : \"ALR040033\", \"AIRCaseIDs\" : \"05-1993-1585 05-2014-5021\", \"AIREPARegion\" : \"05\", \"SDWAIDs\" : \"DC0000001\", \"Insp5yrFlag\" : \"1\", \"AIRLastIeaDateEPA\" : \"04/25/2014\", \"FacMapFlg\" : \"Y\", \"AIRLastFeaDateState\" : \"05/16/2014\", \"FacLat\" : \"38.803076\", \"AIRPenalties\" : \"$435\", \"CWAIDs\" : \"DC0000001\", \"CensusBlockGroup\" : \"110010096022\", \"AIRName\" : \"WEST PARK CLEANERS\", \"PctileProximityTsdfUs\" : \"82\", \"AIRNsps\" : \"NSPS Part 60\", \"AIRLastViolDate\" : \"04/25/2014\", \"AIRTRIbalNames\" : \"AIRTRIbalNames\", \"AIRZip\" : \"20037\", \"PctileTrafficScoreUs\" : \"92\", \"AIRLastFeaDate\" : \"05/16/2014\", \"MaintPollutantsNaa\" : \"MaintPollutantsNaa\", \"AIRPollRecentViol\" : \"Sulfur\", \"AIRIeaCnt\" : \"2\", \"FacDerivedTRIbes\" : \"Cherokee Nation\", \"MaintStatusNaa\" : \"MaintStatusNaa\", \"AIRStackTest5YrFail\" : \"AIRStackTest5YrFail\", \"EisIDs\" : \"12620001\", \"WebDocs\" : \"C6\", \"AIRIndianCntryFlg\" : \"N\", \"FacLong\" : \"-77.085951\", \"Statute\" : \"CWA\", \"AIRLastIeaDate\" : \"04/25/2014\", \"AIRNspsm\" : \"NSPS Part 60\", \"AIREvalCnt\" : \"0\", \"FacPopulationDensity\" : \"9611.17\", \"AIRClassification\" : \"AIRClassification\", \"PctileO3Us\" : \"94\", \"AIRPrograms\" : \"MACT, SIP\", \"Lower48\" : \"Y\", \"AIR3yrComplQtrsHistory\" : \"VV__SS_U__V_\", \"ActiveLower48\" : \"ActiveLower48\", \"NaStatusNaa\" : \"NaStatusNaa\", \"FacNaaFlag\" : \"Y\", \"EjscreenFlagUs\" : \"EjscreenFlagUs\", \"FacEisReporter\" : \"Y\", \"PctileProximityNplUs\" : \"96\", \"TRIIDs\" : \"20011FRTTT5001F\", \"Score\" : \"1\", \"AIRLastEvalDateState\" : \"05/18/2009\", \"PctileDpmUs\" : \"99\", \"FacFIPSCode\" : \"55001\", \"NaPollutantsNaa\" : \"NaPollutantsNaa\", \"PctilePmUs\" : \"93\", \"AIRLastStckDateState\" : \"04/25/2014\", \"FacIndianCntryFlg\" : \"FacIndianCntryFlg\", \"FacMapIcon\" : \"CWA-NC-MJ-2.png\", \"LastDatePceSta\" : \"04/25/2014\", \"AIRLastEvalDate\" : \"05/18/2009\", \"EjscreenFlag\" : \"EjscreenFlag\", \"MaxScore\" : \"1\", \"Infea5yrFlag\" : \"0\", \"AIRFeaCnt\" : \"2\", \"FacSICCodes\" : \"811\", \"AIRNAICS\" : \"812320\", \"LastDatePceEPA\" : \"04/25/2014\", \"TRIbalFlag\" : \"1\", \"FacTRIReporter\" : \"B\", \"MaintStandardsNaa\" : \"MaintStandardsNaa\", \"FacTRIHapsReleases\" : \"35.5\", \"HasPollRpt\" : \"Y\", \"FacFederalAgencyName\" : \"EPA\", \"FacStdCountyName\" : \"Fairfax County\", \"CalculatedAccuracyMeters\" : \"50\", \"LocalControlRegionName\" : \"LocalControlRegionName\", \"AIRCounty\" : \"Racine\", \"FacDerivedWBDName\" : \"Fourmile Run-Potomac River\", \"FacGHGReporter\" : \"Y\", \"ViolFlag\" : \"1\", \"FacCountyName\" : \"Fairfax County\", \"CurrSvFlag\" : \"0\", \"FacPercentMinority\" : \"45.379\", \"AIRRecentViolCnt\" : \"1\", \"AIRUniverse\" : \"Minor Emissions\", \"CamdIDs\" : \"CamdIDs\", \"FacTRIAIRReleases\" : \"36\", \"AIRFacilityTypeCode\" : \"POF\", \"PctileRespUs\" : \"99\", \"CollectionMethod\" : \"ADDRESS MATCHING-HOUSE NUMBER\" }, { \"LocalControlRegionCode\" : \"LocalControlRegionCode\", \"RmpIDs\" : \"110000\", \"EPASystem\" : \"ICP\", \"FacUsMexBorderFlg\" : \"Y\", \"MaxPctileUs\" : \"98\", \"OtherPermitIDs\" : \"OtherPermitIDs\", \"Ea5yrFlag\" : \"0\", \"AIRState\" : \"WI\", \"LastDatePce\" : \"04/25/2014\", \"AIRLastStckTestResults\" : \"04/25/2014\", \"AIRLastPenaltyDate\" : \"05/16/2014\", \"ReferencePoint\" : \"ENTRANCE POINT OF A FACILITY OR STATION\", \"AIRHpvStatus\" : \"true\", \"CurrVioFlag\" : \"0\", \"AIRDaysLastEval\" : \"2806\", \"AIRTRIbalEPAids\" : \"AIRTRIbalEPAids\", \"AIRCity\" : \"Washington\", \"AIRStackTest5YrAll\" : \"AIRStackTest5YrAll\", \"PctileProximityRmpUs\" : \"91\", \"AIRLastEvalDateEPA\" : \"05/16/2014\", \"AIRQtrsWithHpv\" : \"4\", \"AIRMnthsWithHpv\" : \"3\", \"RCRAIDs\" : \"VAD981111784\", \"AIRMacts\" : \"ZZZZZ\", \"GHGIDs\" : \"110000\", \"AIRLastFeaDateEPA\" : \"05/16/2014\", \"FacFederalAgencyCode\" : \"E\", \"AIRQtrsWithViol\" : \"2\", \"AIRStatus\" : \"Permanently Closed\", \"Map\" : \"Map\", \"FacCamdReporter\" : \"Y\", \"FacEisAIRReleases\" : \"2.35\", \"FacDerivedWBD\" : \"20700100204\", \"FacGHGCO2Releases\" : \"100\", \"Over80CountUs\" : \"3\", \"AIRStreet\" : \"2130 P STREET N.W.\", \"FacIndianSpatialFlg\" : \"Y\", \"NaaPollutants\" : \"OZONE\", \"AIRLastStckDateEPA\" : \"04/25/2014\", \"AIRComplStatus\" : \"No Viol\", \"FacDerivedHuc\" : \"552968\", \"AIRFacilityTypeDesc\" : \"AIRFacilityTypeDesc\", \"FacTRICarcAIRReleases\" : \"24\", \"NaStandardsNaa\" : \"NaStandardsNaa\", \"NaaCategories\" : \"8-HOUR OZONE(2015)\", \"AIRIDs\" : \"DC0000001100195254\", \"PctileCancerUs\" : \"99\", \"RegistryID\" : \"110020837601\", \"ChesapeakeBayFlag\" : \"Y\", \"AIRMajorFlag\" : \"N\", \"PctileProximityNPDESUs\" : \"23.7\", \"AIRLastIeaDateState\" : \"04/25/2014\", \"PctilePctpre1960Us\" : \"14.6\", \"AIRFIPSCode\" : \"11001\", \"AIRLastStckTestDate\" : \"04/25/2014\", \"SourceID\" : \"ALR040033\", \"AIRCaseIDs\" : \"05-1993-1585 05-2014-5021\", \"AIREPARegion\" : \"05\", \"SDWAIDs\" : \"DC0000001\", \"Insp5yrFlag\" : \"1\", \"AIRLastIeaDateEPA\" : \"04/25/2014\", \"FacMapFlg\" : \"Y\", \"AIRLastFeaDateState\" : \"05/16/2014\", \"FacLat\" : \"38.803076\", \"AIRPenalties\" : \"$435\", \"CWAIDs\" : \"DC0000001\", \"CensusBlockGroup\" : \"110010096022\", \"AIRName\" : \"WEST PARK CLEANERS\", \"PctileProximityTsdfUs\" : \"82\", \"AIRNsps\" : \"NSPS Part 60\", \"AIRLastViolDate\" : \"04/25/2014\", \"AIRTRIbalNames\" : \"AIRTRIbalNames\", \"AIRZip\" : \"20037\", \"PctileTrafficScoreUs\" : \"92\", \"AIRLastFeaDate\" : \"05/16/2014\", \"MaintPollutantsNaa\" : \"MaintPollutantsNaa\", \"AIRPollRecentViol\" : \"Sulfur\", \"AIRIeaCnt\" : \"2\", \"FacDerivedTRIbes\" : \"Cherokee Nation\", \"MaintStatusNaa\" : \"MaintStatusNaa\", \"AIRStackTest5YrFail\" : \"AIRStackTest5YrFail\", \"EisIDs\" : \"12620001\", \"WebDocs\" : \"C6\", \"AIRIndianCntryFlg\" : \"N\", \"FacLong\" : \"-77.085951\", \"Statute\" : \"CWA\", \"AIRLastIeaDate\" : \"04/25/2014\", \"AIRNspsm\" : \"NSPS Part 60\", \"AIREvalCnt\" : \"0\", \"FacPopulationDensity\" : \"9611.17\", \"AIRClassification\" : \"AIRClassification\", \"PctileO3Us\" : \"94\", \"AIRPrograms\" : \"MACT, SIP\", \"Lower48\" : \"Y\", \"AIR3yrComplQtrsHistory\" : \"VV__SS_U__V_\", \"ActiveLower48\" : \"ActiveLower48\", \"NaStatusNaa\" : \"NaStatusNaa\", \"FacNaaFlag\" : \"Y\", \"EjscreenFlagUs\" : \"EjscreenFlagUs\", \"FacEisReporter\" : \"Y\", \"PctileProximityNplUs\" : \"96\", \"TRIIDs\" : \"20011FRTTT5001F\", \"Score\" : \"1\", \"AIRLastEvalDateState\" : \"05/18/2009\", \"PctileDpmUs\" : \"99\", \"FacFIPSCode\" : \"55001\", \"NaPollutantsNaa\" : \"NaPollutantsNaa\", \"PctilePmUs\" : \"93\", \"AIRLastStckDateState\" : \"04/25/2014\", \"FacIndianCntryFlg\" : \"FacIndianCntryFlg\", \"FacMapIcon\" : \"CWA-NC-MJ-2.png\", \"LastDatePceSta\" : \"04/25/2014\", \"AIRLastEvalDate\" : \"05/18/2009\", \"EjscreenFlag\" : \"EjscreenFlag\", \"MaxScore\" : \"1\", \"Infea5yrFlag\" : \"0\", \"AIRFeaCnt\" : \"2\", \"FacSICCodes\" : \"811\", \"AIRNAICS\" : \"812320\", \"LastDatePceEPA\" : \"04/25/2014\", \"TRIbalFlag\" : \"1\", \"FacTRIReporter\" : \"B\", \"MaintStandardsNaa\" : \"MaintStandardsNaa\", \"FacTRIHapsReleases\" : \"35.5\", \"HasPollRpt\" : \"Y\", \"FacFederalAgencyName\" : \"EPA\", \"FacStdCountyName\" : \"Fairfax County\", \"CalculatedAccuracyMeters\" : \"50\", \"LocalControlRegionName\" : \"LocalControlRegionName\", \"AIRCounty\" : \"Racine\", \"FacDerivedWBDName\" : \"Fourmile Run-Potomac River\", \"FacGHGReporter\" : \"Y\", \"ViolFlag\" : \"1\", \"FacCountyName\" : \"Fairfax County\", \"CurrSvFlag\" : \"0\", \"FacPercentMinority\" : \"45.379\", \"AIRRecentViolCnt\" : \"1\", \"AIRUniverse\" : \"Minor Emissions\", \"CamdIDs\" : \"CamdIDs\", \"FacTRIAIRReleases\" : \"36\", \"AIRFacilityTypeCode\" : \"POF\", \"PctileRespUs\" : \"99\", \"CollectionMethod\" : \"ADDRESS MATCHING-HOUSE NUMBER\" } ], \"IndianCountryRows\" : \"0\", \"FEARows\" : \"1\", \"INSPRows\" : \"1\", \"SVRows\" : \"0\", \"PageNo\" : \"1\", \"CVRows\" : \"0\", \"QueryRows\" : \"5\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/xml"))) {
                    String exampleString = "<Root> </Root>";
                    ApiUtil.setExampleResponse(request, "application/xml", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
