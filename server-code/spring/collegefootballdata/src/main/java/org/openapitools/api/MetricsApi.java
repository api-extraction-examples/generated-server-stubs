/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.2.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.PlayWP;
import org.openapitools.model.PregameWP;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-01-06T13:44:23.773477-04:00[America/Lower_Princes]")
@Validated
@Tag(name = "metrics", description = "Data relating to Predicted Points and other metrics")
public interface MetricsApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /metrics/wp/pregame : Pregame win probability data
     * Pregame win probabilities
     *
     * @param year Year filter (optional)
     * @param week Week filter (optional)
     * @param team Team filter (optional)
     * @param seasonType regular or postseason (optional)
     * @return successful operation (status code 200)
     *         or error (status code 400)
     */
    @Operation(
        operationId = "getPregameWinProbabilities",
        summary = "Pregame win probability data",
        description = "Pregame win probabilities",
        tags = { "metrics" },
        responses = {
            @ApiResponse(responseCode = "200", description = "successful operation", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = PregameWP.class)))
            }),
            @ApiResponse(responseCode = "400", description = "error")
        },
        security = {
            @SecurityRequirement(name = "ApiKeyAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/metrics/wp/pregame",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<PregameWP>> getPregameWinProbabilities(
        @Min(2001) @Parameter(name = "year", description = "Year filter", in = ParameterIn.QUERY) @Valid @RequestParam(value = "year", required = false) Integer year,
        @Min(1) @Max(16) @Parameter(name = "week", description = "Week filter", in = ParameterIn.QUERY) @Valid @RequestParam(value = "week", required = false) Integer week,
        @Parameter(name = "team", description = "Team filter", in = ParameterIn.QUERY) @Valid @RequestParam(value = "team", required = false) String team,
        @Parameter(name = "seasonType", description = "regular or postseason", in = ParameterIn.QUERY) @Valid @RequestParam(value = "seasonType", required = false) String seasonType
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"gameId\" : 0, \"seasonType\" : \"seasonType\", \"week\" : 5, \"awayTeam\" : \"awayTeam\", \"homeTeam\" : \"homeTeam\", \"season\" : 1, \"homeWinProb\" : 6.027456183070403, \"spread\" : 5.962133916683182 }, { \"gameId\" : 0, \"seasonType\" : \"seasonType\", \"week\" : 5, \"awayTeam\" : \"awayTeam\", \"homeTeam\" : \"homeTeam\", \"season\" : 1, \"homeWinProb\" : 6.027456183070403, \"spread\" : 5.962133916683182 } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /metrics/wp : Win probability chart data
     * Win probability data
     *
     * @param gameId Game id filter (required)
     * @return successful operation (status code 200)
     *         or error (status code 400)
     */
    @Operation(
        operationId = "getWinProbabilityData",
        summary = "Win probability chart data",
        description = "Win probability data",
        tags = { "metrics" },
        responses = {
            @ApiResponse(responseCode = "200", description = "successful operation", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = PlayWP.class)))
            }),
            @ApiResponse(responseCode = "400", description = "error")
        },
        security = {
            @SecurityRequirement(name = "ApiKeyAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/metrics/wp",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<PlayWP>> getWinProbabilityData(
        @NotNull @Parameter(name = "gameId", description = "Game id filter", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "gameId", required = true) Integer gameId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"homeBall\" : true, \"away\" : \"away\", \"homeScore\" : 7, \"distance\" : 1, \"awayId\" : 0, \"timeRemaining\" : 7, \"gamesId\" : 5, \"homeWinProb\" : 9.301444243932576, \"down\" : 5, \"home\" : \"home\", \"spread\" : 4.145608029883936, \"playId\" : 3, \"awayScore\" : 6, \"yardLine\" : 1, \"playText\" : \"playText\", \"homeId\" : 2, \"playNumber\" : 2 }, { \"homeBall\" : true, \"away\" : \"away\", \"homeScore\" : 7, \"distance\" : 1, \"awayId\" : 0, \"timeRemaining\" : 7, \"gamesId\" : 5, \"homeWinProb\" : 9.301444243932576, \"down\" : 5, \"home\" : \"home\", \"spread\" : 4.145608029883936, \"playId\" : 3, \"awayScore\" : 6, \"yardLine\" : 1, \"playText\" : \"playText\", \"homeId\" : 2, \"playNumber\" : 2 } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
