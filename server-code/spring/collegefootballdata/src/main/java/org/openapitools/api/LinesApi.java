/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.2.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.GameLines;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-01-06T13:44:23.773477-04:00[America/Lower_Princes]")
@Validated
@Tag(name = "betting", description = "Betting lines and data")
public interface LinesApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /lines : Betting lines
     * Closing betting lines
     *
     * @param gameId Game id filter (optional)
     * @param year Year/season filter for games (optional)
     * @param week Week filter (optional)
     * @param seasonType Season type filter (regular or postseason) (optional, default to regular)
     * @param team Team (optional)
     * @param home Home team filter (optional)
     * @param away Away team filter (optional)
     * @param conference Conference abbreviation filter (optional)
     * @return successful operation (status code 200)
     *         or error (status code 400)
     */
    @Operation(
        operationId = "getLines",
        summary = "Betting lines",
        description = "Closing betting lines",
        tags = { "betting" },
        responses = {
            @ApiResponse(responseCode = "200", description = "successful operation", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = GameLines.class)))
            }),
            @ApiResponse(responseCode = "400", description = "error")
        },
        security = {
            @SecurityRequirement(name = "ApiKeyAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/lines",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<GameLines>> getLines(
        @Parameter(name = "gameId", description = "Game id filter", in = ParameterIn.QUERY) @Valid @RequestParam(value = "gameId", required = false) Integer gameId,
        @Min(2013) @Parameter(name = "year", description = "Year/season filter for games", in = ParameterIn.QUERY) @Valid @RequestParam(value = "year", required = false) Integer year,
        @Min(1) @Max(16) @Parameter(name = "week", description = "Week filter", in = ParameterIn.QUERY) @Valid @RequestParam(value = "week", required = false) Integer week,
        @Parameter(name = "seasonType", description = "Season type filter (regular or postseason)", in = ParameterIn.QUERY) @Valid @RequestParam(value = "seasonType", required = false, defaultValue = "regular") String seasonType,
        @Parameter(name = "team", description = "Team", in = ParameterIn.QUERY) @Valid @RequestParam(value = "team", required = false) String team,
        @Parameter(name = "home", description = "Home team filter", in = ParameterIn.QUERY) @Valid @RequestParam(value = "home", required = false) String home,
        @Parameter(name = "away", description = "Away team filter", in = ParameterIn.QUERY) @Valid @RequestParam(value = "away", required = false) String away,
        @Parameter(name = "conference", description = "Conference abbreviation filter", in = ParameterIn.QUERY) @Valid @RequestParam(value = "conference", required = false) String conference
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"awayConference\" : \"awayConference\", \"seasonType\" : \"seasonType\", \"homeConference\" : \"homeConference\", \"homeScore\" : 6, \"week\" : 4, \"awayScore\" : 0, \"awayTeam\" : \"awayTeam\", \"homeTeam\" : \"homeTeam\", \"season\" : 2, \"id\" : 1, \"lines\" : [ { \"homeMoneyline\" : 5.637376656633329, \"overUnder\" : 2.3021358869347655, \"overUnderOpen\" : 7.061401241503109, \"formattedSpread\" : \"formattedSpread\", \"awayMoneyline\" : 5.962133916683182, \"provider\" : \"provider\", \"spreadOpen\" : 3.616076749251911, \"spread\" : 9.301444243932576 }, { \"homeMoneyline\" : 5.637376656633329, \"overUnder\" : 2.3021358869347655, \"overUnderOpen\" : 7.061401241503109, \"formattedSpread\" : \"formattedSpread\", \"awayMoneyline\" : 5.962133916683182, \"provider\" : \"provider\", \"spreadOpen\" : 3.616076749251911, \"spread\" : 9.301444243932576 } ], \"startDate\" : \"startDate\" }, { \"awayConference\" : \"awayConference\", \"seasonType\" : \"seasonType\", \"homeConference\" : \"homeConference\", \"homeScore\" : 6, \"week\" : 4, \"awayScore\" : 0, \"awayTeam\" : \"awayTeam\", \"homeTeam\" : \"homeTeam\", \"season\" : 2, \"id\" : 1, \"lines\" : [ { \"homeMoneyline\" : 5.637376656633329, \"overUnder\" : 2.3021358869347655, \"overUnderOpen\" : 7.061401241503109, \"formattedSpread\" : \"formattedSpread\", \"awayMoneyline\" : 5.962133916683182, \"provider\" : \"provider\", \"spreadOpen\" : 3.616076749251911, \"spread\" : 9.301444243932576 }, { \"homeMoneyline\" : 5.637376656633329, \"overUnder\" : 2.3021358869347655, \"overUnderOpen\" : 7.061401241503109, \"formattedSpread\" : \"formattedSpread\", \"awayMoneyline\" : 5.962133916683182, \"provider\" : \"provider\", \"spreadOpen\" : 3.616076749251911, \"spread\" : 9.301444243932576 } ], \"startDate\" : \"startDate\" } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
