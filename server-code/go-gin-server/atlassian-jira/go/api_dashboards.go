/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * API version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"github.com/gin-gonic/gin"
)

type DashboardsAPI struct {
}

// Post /rest/api/3/dashboard/:dashboardId/gadget
// Add gadget to dashboard 
func (api *DashboardsAPI) AddGadget(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /rest/api/3/dashboard/:id/copy
// Copy dashboard 
func (api *DashboardsAPI) CopyDashboard(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /rest/api/3/dashboard
// Create dashboard 
func (api *DashboardsAPI) CreateDashboard(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Delete /rest/api/3/dashboard/:id
// Delete dashboard 
func (api *DashboardsAPI) DeleteDashboard(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Delete /rest/api/3/dashboard/:dashboardId/items/:itemId/properties/:propertyKey
// Delete dashboard item property 
func (api *DashboardsAPI) DeleteDashboardItemProperty(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/dashboard/gadgets
// Get available gadgets 
func (api *DashboardsAPI) GetAllAvailableDashboardGadgets(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/dashboard
// Get all dashboards 
func (api *DashboardsAPI) GetAllDashboards(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/dashboard/:dashboardId/gadget
// Get gadgets 
func (api *DashboardsAPI) GetAllGadgets(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/dashboard/:id
// Get dashboard 
func (api *DashboardsAPI) GetDashboard(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/dashboard/:dashboardId/items/:itemId/properties/:propertyKey
// Get dashboard item property 
func (api *DashboardsAPI) GetDashboardItemProperty(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/dashboard/:dashboardId/items/:itemId/properties
// Get dashboard item property keys 
func (api *DashboardsAPI) GetDashboardItemPropertyKeys(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/dashboard/search
// Search for dashboards 
func (api *DashboardsAPI) GetDashboardsPaginated(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Delete /rest/api/3/dashboard/:dashboardId/gadget/:gadgetId
// Remove gadget from dashboard 
func (api *DashboardsAPI) RemoveGadget(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Put /rest/api/3/dashboard/:dashboardId/items/:itemId/properties/:propertyKey
// Set dashboard item property 
func (api *DashboardsAPI) SetDashboardItemProperty(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Put /rest/api/3/dashboard/:id
// Update dashboard 
func (api *DashboardsAPI) UpdateDashboard(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Put /rest/api/3/dashboard/:dashboardId/gadget/:gadgetId
// Update gadget on dashboard 
func (api *DashboardsAPI) UpdateGadget(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

