/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * API version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"github.com/gin-gonic/gin"
)

type IssueTypesAPI struct {
}

// Post /rest/api/3/issuetype
// Create issue type 
func (api *IssueTypesAPI) CreateIssueType(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /rest/api/3/issuetype/:id/avatar2
// Load issue type avatar 
func (api *IssueTypesAPI) CreateIssueTypeAvatar(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Delete /rest/api/3/issuetype/:id
// Delete issue type 
func (api *IssueTypesAPI) DeleteIssueType(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/issuetype/:id/alternatives
// Get alternative issue types 
func (api *IssueTypesAPI) GetAlternativeIssueTypes(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/issuetype
// Get all issue types for user 
func (api *IssueTypesAPI) GetIssueAllTypes(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/issuetype/:id
// Get issue type 
func (api *IssueTypesAPI) GetIssueType(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/issuetype/project
// Get issue types for project 
func (api *IssueTypesAPI) GetIssueTypesForProject(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Put /rest/api/3/issuetype/:id
// Update issue type 
func (api *IssueTypesAPI) UpdateIssueType(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

