/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * API version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"github.com/gin-gonic/gin"
)

type IssueTypeScreenSchemesAPI struct {
}

// Put /rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId/mapping
// Append mappings to issue type screen scheme 
func (api *IssueTypeScreenSchemesAPI) AppendMappingsForIssueTypeScreenScheme(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Put /rest/api/3/issuetypescreenscheme/project
// Assign issue type screen scheme to project 
func (api *IssueTypeScreenSchemesAPI) AssignIssueTypeScreenSchemeToProject(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /rest/api/3/issuetypescreenscheme
// Create issue type screen scheme 
func (api *IssueTypeScreenSchemesAPI) CreateIssueTypeScreenScheme(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Delete /rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId
// Delete issue type screen scheme 
func (api *IssueTypeScreenSchemesAPI) DeleteIssueTypeScreenScheme(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/issuetypescreenscheme/mapping
// Get issue type screen scheme items 
func (api *IssueTypeScreenSchemesAPI) GetIssueTypeScreenSchemeMappings(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/issuetypescreenscheme/project
// Get issue type screen schemes for projects 
func (api *IssueTypeScreenSchemesAPI) GetIssueTypeScreenSchemeProjectAssociations(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/issuetypescreenscheme
// Get issue type screen schemes 
func (api *IssueTypeScreenSchemesAPI) GetIssueTypeScreenSchemes(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId/project
// Get issue type screen scheme projects 
func (api *IssueTypeScreenSchemesAPI) GetProjectsForIssueTypeScreenScheme(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId/mapping/remove
// Remove mappings from issue type screen scheme 
func (api *IssueTypeScreenSchemesAPI) RemoveMappingsFromIssueTypeScreenScheme(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Put /rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId/mapping/default
// Update issue type screen scheme default screen scheme 
func (api *IssueTypeScreenSchemesAPI) UpdateDefaultScreenScheme(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Put /rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId
// Update issue type screen scheme 
func (api *IssueTypeScreenSchemesAPI) UpdateIssueTypeScreenScheme(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

