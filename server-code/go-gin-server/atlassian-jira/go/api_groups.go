/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * API version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"github.com/gin-gonic/gin"
)

type GroupsAPI struct {
}

// Post /rest/api/3/group/user
// Add user to group 
func (api *GroupsAPI) AddUserToGroup(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/group/bulk
// Bulk get groups 
func (api *GroupsAPI) BulkGetGroups(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /rest/api/3/group
// Create group 
func (api *GroupsAPI) CreateGroup(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/groups/picker
// Find groups 
func (api *GroupsAPI) FindGroups(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/group
// Get group 
// Deprecated
func (api *GroupsAPI) GetGroup(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/group/member
// Get users from group 
func (api *GroupsAPI) GetUsersFromGroup(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Delete /rest/api/3/group
// Remove group 
func (api *GroupsAPI) RemoveGroup(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Delete /rest/api/3/group/user
// Remove user from group 
func (api *GroupsAPI) RemoveUserFromGroup(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

