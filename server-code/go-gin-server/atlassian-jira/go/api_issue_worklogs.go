/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * API version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"github.com/gin-gonic/gin"
)

type IssueWorklogsAPI struct {
}

// Post /rest/api/3/issue/:issueIdOrKey/worklog
// Add worklog 
func (api *IssueWorklogsAPI) AddWorklog(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Delete /rest/api/3/issue/:issueIdOrKey/worklog/:id
// Delete worklog 
func (api *IssueWorklogsAPI) DeleteWorklog(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/worklog/deleted
// Get IDs of deleted worklogs 
func (api *IssueWorklogsAPI) GetIdsOfWorklogsDeletedSince(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/worklog/updated
// Get IDs of updated worklogs 
func (api *IssueWorklogsAPI) GetIdsOfWorklogsModifiedSince(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/issue/:issueIdOrKey/worklog
// Get issue worklogs 
func (api *IssueWorklogsAPI) GetIssueWorklog(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/issue/:issueIdOrKey/worklog/:id
// Get worklog 
func (api *IssueWorklogsAPI) GetWorklog(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /rest/api/3/worklog/list
// Get worklogs 
func (api *IssueWorklogsAPI) GetWorklogsForIds(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Put /rest/api/3/issue/:issueIdOrKey/worklog/:id
// Update worklog 
func (api *IssueWorklogsAPI) UpdateWorklog(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

