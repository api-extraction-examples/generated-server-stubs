/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * API version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"github.com/gin-gonic/gin"
)

type IssueFieldsAPI struct {
}

// Post /rest/api/3/field
// Create custom field 
func (api *IssueFieldsAPI) CreateCustomField(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Delete /rest/api/3/field/:id
// Delete custom field 
func (api *IssueFieldsAPI) DeleteCustomField(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/field/:fieldId/contexts
// Get contexts for a field 
// Deprecated
func (api *IssueFieldsAPI) GetContextsForFieldDeprecated(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/field
// Get fields 
func (api *IssueFieldsAPI) GetFields(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/field/search
// Get fields paginated 
func (api *IssueFieldsAPI) GetFieldsPaginated(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/field/search/trashed
// Get fields in trash paginated 
func (api *IssueFieldsAPI) GetTrashedFieldsPaginated(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /rest/api/3/field/:id/restore
// Restore custom field from trash 
func (api *IssueFieldsAPI) RestoreCustomField(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /rest/api/3/field/:id/trash
// Move custom field to trash 
func (api *IssueFieldsAPI) TrashCustomField(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Put /rest/api/3/field/:fieldId
// Update custom field 
func (api *IssueFieldsAPI) UpdateCustomField(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

