/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * API version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"github.com/gin-gonic/gin"
)

type IssueRemoteLinksAPI struct {
}

// Post /rest/api/3/issue/:issueIdOrKey/remotelink
// Create or update remote issue link 
func (api *IssueRemoteLinksAPI) CreateOrUpdateRemoteIssueLink(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Delete /rest/api/3/issue/:issueIdOrKey/remotelink
// Delete remote issue link by global ID 
func (api *IssueRemoteLinksAPI) DeleteRemoteIssueLinkByGlobalId(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Delete /rest/api/3/issue/:issueIdOrKey/remotelink/:linkId
// Delete remote issue link by ID 
func (api *IssueRemoteLinksAPI) DeleteRemoteIssueLinkById(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/issue/:issueIdOrKey/remotelink/:linkId
// Get remote issue link by ID 
func (api *IssueRemoteLinksAPI) GetRemoteIssueLinkById(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/issue/:issueIdOrKey/remotelink
// Get remote issue links 
func (api *IssueRemoteLinksAPI) GetRemoteIssueLinks(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Put /rest/api/3/issue/:issueIdOrKey/remotelink/:linkId
// Update remote issue link by ID 
func (api *IssueRemoteLinksAPI) UpdateRemoteIssueLink(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

