/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * API version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"github.com/gin-gonic/gin"
)

type IssuesAPI struct {
}

// Put /rest/api/3/issue/:issueIdOrKey/assignee
// Assign issue 
func (api *IssuesAPI) AssignIssue(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /rest/api/3/issue
// Create issue 
func (api *IssuesAPI) CreateIssue(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /rest/api/3/issue/bulk
// Bulk create issue 
func (api *IssuesAPI) CreateIssues(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Delete /rest/api/3/issue/:issueIdOrKey
// Delete issue 
func (api *IssuesAPI) DeleteIssue(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /rest/api/3/issue/:issueIdOrKey/transitions
// Transition issue 
func (api *IssuesAPI) DoTransition(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Put /rest/api/3/issue/:issueIdOrKey
// Edit issue 
func (api *IssuesAPI) EditIssue(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/issue/:issueIdOrKey/changelog
// Get changelogs 
func (api *IssuesAPI) GetChangeLogs(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /rest/api/3/issue/:issueIdOrKey/changelog/list
// Get changelogs by IDs 
func (api *IssuesAPI) GetChangeLogsByIds(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/issue/createmeta
// Get create issue metadata 
func (api *IssuesAPI) GetCreateIssueMeta(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/issue/:issueIdOrKey/editmeta
// Get edit issue metadata 
func (api *IssuesAPI) GetEditIssueMeta(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/events
// Get events 
func (api *IssuesAPI) GetEvents(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/issue/:issueIdOrKey
// Get issue 
func (api *IssuesAPI) GetIssue(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/issue/:issueIdOrKey/transitions
// Get transitions 
func (api *IssuesAPI) GetTransitions(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /rest/api/3/issue/:issueIdOrKey/notify
// Send notification for issue 
func (api *IssuesAPI) Notify(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

