/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * API version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"github.com/gin-gonic/gin"
)

type IssueAttachmentsAPI struct {
}

// Post /rest/api/3/issue/:issueIdOrKey/attachments
// Add attachment 
func (api *IssueAttachmentsAPI) AddAttachment(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/attachment/:id/expand/human
// Get all metadata for an expanded attachment 
func (api *IssueAttachmentsAPI) ExpandAttachmentForHumans(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/attachment/:id/expand/raw
// Get contents metadata for an expanded attachment 
func (api *IssueAttachmentsAPI) ExpandAttachmentForMachines(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/attachment/:id
// Get attachment metadata 
func (api *IssueAttachmentsAPI) GetAttachment(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/attachment/content/:id
// Get attachment content 
func (api *IssueAttachmentsAPI) GetAttachmentContent(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/attachment/meta
// Get Jira attachment settings 
func (api *IssueAttachmentsAPI) GetAttachmentMeta(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/attachment/thumbnail/:id
// Get attachment thumbnail 
func (api *IssueAttachmentsAPI) GetAttachmentThumbnail(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Delete /rest/api/3/attachment/:id
// Delete attachment 
func (api *IssueAttachmentsAPI) RemoveAttachment(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

