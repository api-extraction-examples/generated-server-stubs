/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * API version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// Version - Details about a project version.
type Version struct {

	// Indicates that the version is archived. Optional when creating or updating a version.
	Archived bool `json:"archived,omitempty"`

	// The description of the version. Optional when creating or updating a version.
	Description string `json:"description,omitempty"`

	// Use [expand](em>#expansion) to include additional information about version in the response. This parameter accepts a comma-separated list. Expand options include:   *  `operations` Returns the list of operations available for this version.  *  `issuesstatus` Returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property contains a count of issues with a status other than *to do*, *in progress*, and *done*.  Optional for create and update.
	Expand string `json:"expand,omitempty"`

	// The ID of the version.
	Id string `json:"id,omitempty"`

	IssuesStatusForFixVersion VersionIssuesStatusForFixVersion `json:"issuesStatusForFixVersion,omitempty"`

	// The URL of the self link to the version to which all unfixed issues are moved when a version is released. Not applicable when creating a version. Optional when updating a version.
	MoveUnfixedIssuesTo string `json:"moveUnfixedIssuesTo,omitempty"`

	// The unique name of the version. Required when creating a version. Optional when updating a version. The maximum length is 255 characters.
	Name string `json:"name,omitempty"`

	// If the expand option `operations` is used, returns the list of operations available for this version.
	Operations []SimpleLink `json:"operations,omitempty"`

	// Indicates that the version is overdue.
	Overdue bool `json:"overdue,omitempty"`

	// Deprecated. Use `projectId`.
	Project string `json:"project,omitempty"`

	// The ID of the project to which this version is attached. Required when creating a version. Not applicable when updating a version.
	ProjectId int64 `json:"projectId,omitempty"`

	// The release date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.
	ReleaseDate string `json:"releaseDate,omitempty"`

	// Indicates that the version is released. If the version is released a request to release again is ignored. Not applicable when creating a version. Optional when updating a version.
	Released bool `json:"released,omitempty"`

	// The URL of the version.
	Self string `json:"self,omitempty"`

	// The start date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.
	StartDate string `json:"startDate,omitempty"`

	// The date on which work on this version is expected to finish, expressed in the instance's *Day/Month/Year Format* date format.
	UserReleaseDate string `json:"userReleaseDate,omitempty"`

	// The date on which work on this version is expected to start, expressed in the instance's *Day/Month/Year Format* date format.
	UserStartDate string `json:"userStartDate,omitempty"`
}
