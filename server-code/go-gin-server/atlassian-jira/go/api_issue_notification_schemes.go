/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * API version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"github.com/gin-gonic/gin"
)

type IssueNotificationSchemesAPI struct {
}

// Put /rest/api/3/notificationscheme/:id/notification
// Add notifications to notification scheme 
func (api *IssueNotificationSchemesAPI) AddNotifications(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /rest/api/3/notificationscheme
// Create notification scheme 
func (api *IssueNotificationSchemesAPI) CreateNotificationScheme(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Delete /rest/api/3/notificationscheme/:notificationSchemeId
// Delete notification scheme 
func (api *IssueNotificationSchemesAPI) DeleteNotificationScheme(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/notificationscheme/:id
// Get notification scheme 
func (api *IssueNotificationSchemesAPI) GetNotificationScheme(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/notificationscheme/project
// Get projects using notification schemes paginated 
func (api *IssueNotificationSchemesAPI) GetNotificationSchemeToProjectMappings(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/notificationscheme
// Get notification schemes paginated 
func (api *IssueNotificationSchemesAPI) GetNotificationSchemes(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Delete /rest/api/3/notificationscheme/:notificationSchemeId/notification/:notificationId
// Remove notification from notification scheme 
func (api *IssueNotificationSchemesAPI) RemoveNotificationFromNotificationScheme(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Put /rest/api/3/notificationscheme/:id
// Update notification scheme 
func (api *IssueNotificationSchemesAPI) UpdateNotificationScheme(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

