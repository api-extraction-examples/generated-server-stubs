/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * API version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"github.com/gin-gonic/gin"
)

type UsersAPI struct {
}

// Get /rest/api/3/user/bulk
// Bulk get users 
func (api *UsersAPI) BulkGetUsers(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/user/bulk/migration
// Get account IDs for users 
func (api *UsersAPI) BulkGetUsersMigration(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /rest/api/3/user
// Create user 
func (api *UsersAPI) CreateUser(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/users/search
// Get all users 
func (api *UsersAPI) GetAllUsers(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/users
// Get all users default 
func (api *UsersAPI) GetAllUsersDefault(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/user
// Get user 
func (api *UsersAPI) GetUser(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/user/columns
// Get user default columns 
func (api *UsersAPI) GetUserDefaultColumns(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/user/email
// Get user email 
func (api *UsersAPI) GetUserEmail(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/user/email/bulk
// Get user email bulk 
func (api *UsersAPI) GetUserEmailBulk(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /rest/api/3/user/groups
// Get user groups 
func (api *UsersAPI) GetUserGroups(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Delete /rest/api/3/user
// Delete user 
func (api *UsersAPI) RemoveUser(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Delete /rest/api/3/user/columns
// Reset user default columns 
func (api *UsersAPI) ResetUserColumns(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Put /rest/api/3/user/columns
// Set user default columns 
func (api *UsersAPI) SetUserColumns(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

