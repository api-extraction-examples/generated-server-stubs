/*
 * Open Build Service API
 *
 * The _Open Build Service API_ is a XML API.  To authenticate, use [HTTP basic authentication](https://en.wikipedia.org/wiki/Basic_access_authentication) by passing the _Authorization_ header in the form of `Authorization: Basic <credentials>`.  There is no API versioning as there is no need for it right now.  Only rudimentary rate limiting is implemented, so please be gentle when using the API concurrently, especially with potentially expensive operations. In case of abuse, we will limit/remove your access.  For command-line users, we recommend using [osc](https://github.com/openSUSE/osc) with its _api_ command to interact with the API. It's as simple as this example: `osc api /about` (_about_ is one of the endpoints documented below) 
 *
 * API version: 2.10.50
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"github.com/gin-gonic/gin"
)

type AttributeNamespacesAPI struct {
}

// Get /attribute
// List all attribute namespaces. 
func (api *AttributeNamespacesAPI) AttributeGet(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Delete /attribute/:namespace
// Delete an attribute namespace and all attributes below. 
func (api *AttributeNamespacesAPI) AttributeNamespaceDelete(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /attribute/:namespace
// List all attributes below a namespace. 
func (api *AttributeNamespacesAPI) AttributeNamespaceGet(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Delete /attribute/:namespace/_meta
// Delete an attribute namespace and all attributes below. 
func (api *AttributeNamespacesAPI) AttributeNamespaceMetaDelete(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /attribute/:namespace/_meta
// Show attribute namespace. 
func (api *AttributeNamespacesAPI) AttributeNamespaceMetaGet(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /attribute/:namespace/_meta
// Change attribute namespace. Create an attribute namespace if it doesn't exist. 
func (api *AttributeNamespacesAPI) AttributeNamespaceMetaPost(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Put /attribute/:namespace/_meta
// Change attribute namespace. Create an attribute namespace if it doesn't exist. 
func (api *AttributeNamespacesAPI) AttributeNamespaceMetaPut(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

