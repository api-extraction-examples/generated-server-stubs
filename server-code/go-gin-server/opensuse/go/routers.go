/*
 * Open Build Service API
 *
 * The _Open Build Service API_ is a XML API.  To authenticate, use [HTTP basic authentication](https://en.wikipedia.org/wiki/Basic_access_authentication) by passing the _Authorization_ header in the form of `Authorization: Basic <credentials>`.  There is no API versioning as there is no need for it right now.  Only rudimentary rate limiting is implemented, so please be gentle when using the API concurrently, especially with potentially expensive operations. In case of abuse, we will limit/remove your access.  For command-line users, we recommend using [osc](https://github.com/openSUSE/osc) with its _api_ command to interact with the API. It's as simple as this example: `osc api /about` (_about_ is one of the endpoints documented below) 
 *
 * API version: 2.10.50
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

// Route is the information for every URI.
type Route struct {
	// Name is the name of this Route.
	Name		string
	// Method is the string for the HTTP method. ex) GET, POST etc..
	Method		string
	// Pattern is the pattern of the URI.
	Pattern	 	string
	// HandlerFunc is the handler function of this route.
	HandlerFunc	gin.HandlerFunc
}

// NewRouter returns a new router.
func NewRouter(handleFunctions ApiHandleFunctions) *gin.Engine {
	router := gin.Default()
	for _, route := range getRoutes(handleFunctions) {
		if route.HandlerFunc == nil {
			route.HandlerFunc = DefaultHandleFunc
		}
		switch route.Method {
		case http.MethodGet:
			router.GET(route.Pattern, route.HandlerFunc)
		case http.MethodPost:
			router.POST(route.Pattern, route.HandlerFunc)
		case http.MethodPut:
			router.PUT(route.Pattern, route.HandlerFunc)
		case http.MethodPatch:
			router.PATCH(route.Pattern, route.HandlerFunc)
		case http.MethodDelete:
			router.DELETE(route.Pattern, route.HandlerFunc)
		}
	}

	return router
}

// Default handler for not yet implemented routes
func DefaultHandleFunc(c *gin.Context) {
	c.String(http.StatusNotImplemented, "501 not implemented")
}

type ApiHandleFunctions struct {

	// Routes for the AttributeNamespacesAPI part of the API
	AttributeNamespacesAPI AttributeNamespacesAPI
	// Routes for the AttributesAPI part of the API
	AttributesAPI AttributesAPI
	// Routes for the BuildAPI part of the API
	BuildAPI BuildAPI
	// Routes for the ConfigurationAPI part of the API
	ConfigurationAPI ConfigurationAPI
	// Routes for the DistributionsAPI part of the API
	DistributionsAPI DistributionsAPI
	// Routes for the GeneralInformationAPI part of the API
	GeneralInformationAPI GeneralInformationAPI
	// Routes for the GroupsAPI part of the API
	GroupsAPI GroupsAPI
	// Routes for the IssueTrackersAPI part of the API
	IssueTrackersAPI IssueTrackersAPI
	// Routes for the PersonAPI part of the API
	PersonAPI PersonAPI
	// Routes for the PublishedBinariesAPI part of the API
	PublishedBinariesAPI PublishedBinariesAPI
	// Routes for the RequestAPI part of the API
	RequestAPI RequestAPI
	// Routes for the WorkersAPI part of the API
	WorkersAPI WorkersAPI
}

func getRoutes(handleFunctions ApiHandleFunctions) []Route {
	return []Route{ 
		{
			"AttributeGet",
			http.MethodGet,
			"/attribute",
			handleFunctions.AttributeNamespacesAPI.AttributeGet,
		},
		{
			"AttributeNamespaceDelete",
			http.MethodDelete,
			"/attribute/:namespace",
			handleFunctions.AttributeNamespacesAPI.AttributeNamespaceDelete,
		},
		{
			"AttributeNamespaceGet",
			http.MethodGet,
			"/attribute/:namespace",
			handleFunctions.AttributeNamespacesAPI.AttributeNamespaceGet,
		},
		{
			"AttributeNamespaceMetaDelete",
			http.MethodDelete,
			"/attribute/:namespace/_meta",
			handleFunctions.AttributeNamespacesAPI.AttributeNamespaceMetaDelete,
		},
		{
			"AttributeNamespaceMetaGet",
			http.MethodGet,
			"/attribute/:namespace/_meta",
			handleFunctions.AttributeNamespacesAPI.AttributeNamespaceMetaGet,
		},
		{
			"AttributeNamespaceMetaPost",
			http.MethodPost,
			"/attribute/:namespace/_meta",
			handleFunctions.AttributeNamespacesAPI.AttributeNamespaceMetaPost,
		},
		{
			"AttributeNamespaceMetaPut",
			http.MethodPut,
			"/attribute/:namespace/_meta",
			handleFunctions.AttributeNamespacesAPI.AttributeNamespaceMetaPut,
		},
		{
			"AttributeNamespaceAttributeNameDelete",
			http.MethodDelete,
			"/attribute/:namespace/:attribute_name",
			handleFunctions.AttributesAPI.AttributeNamespaceAttributeNameDelete,
		},
		{
			"AttributeNamespaceAttributeNameMetaDelete",
			http.MethodDelete,
			"/attribute/:namespace/:attribute_name/_meta",
			handleFunctions.AttributesAPI.AttributeNamespaceAttributeNameMetaDelete,
		},
		{
			"AttributeNamespaceAttributeNameMetaGet",
			http.MethodGet,
			"/attribute/:namespace/:attribute_name/_meta",
			handleFunctions.AttributesAPI.AttributeNamespaceAttributeNameMetaGet,
		},
		{
			"AttributeNamespaceAttributeNameMetaPost",
			http.MethodPost,
			"/attribute/:namespace/:attribute_name/_meta",
			handleFunctions.AttributesAPI.AttributeNamespaceAttributeNameMetaPost,
		},
		{
			"AttributeNamespaceAttributeNameMetaPut",
			http.MethodPut,
			"/attribute/:namespace/:attribute_name/_meta",
			handleFunctions.AttributesAPI.AttributeNamespaceAttributeNameMetaPut,
		},
		{
			"BuildGet",
			http.MethodGet,
			"/build",
			handleFunctions.BuildAPI.BuildGet,
		},
		{
			"BuildProjectNameGet",
			http.MethodGet,
			"/build/:project_name",
			handleFunctions.BuildAPI.BuildProjectNameGet,
		},
		{
			"BuildProjectNamePost",
			http.MethodPost,
			"/build/:project_name",
			handleFunctions.BuildAPI.BuildProjectNamePost,
		},
		{
			"BuildProjectNameRepositoryNameArchitectureNameBuilddepinfoGet",
			http.MethodGet,
			"/build/:project_name/:repository_name/:architecture_name/_builddepinfo",
			handleFunctions.BuildAPI.BuildProjectNameRepositoryNameArchitectureNameBuilddepinfoGet,
		},
		{
			"BuildProjectNameRepositoryNameArchitectureNamePackageNameGet",
			http.MethodGet,
			"/build/:project_name/:repository_name/:architecture_name/:package_name",
			handleFunctions.BuildAPI.BuildProjectNameRepositoryNameArchitectureNamePackageNameGet,
		},
		{
			"BuildProjectNameRepositoryNameArchitectureNamePackageNameJobstatusGet",
			http.MethodGet,
			"/build/:project_name/:repository_name/:architecture_name/:package_name/_jobstatus",
			handleFunctions.BuildAPI.BuildProjectNameRepositoryNameArchitectureNamePackageNameJobstatusGet,
		},
		{
			"BuildProjectNameRepositoryNameArchitectureNamePackageNameReasonGet",
			http.MethodGet,
			"/build/:project_name/:repository_name/:architecture_name/:package_name/_reason",
			handleFunctions.BuildAPI.BuildProjectNameRepositoryNameArchitectureNamePackageNameReasonGet,
		},
		{
			"BuildProjectNameRepositoryNameArchitectureNameRepositoryGet",
			http.MethodGet,
			"/build/:project_name/:repository_name/:architecture_name/_repository",
			handleFunctions.BuildAPI.BuildProjectNameRepositoryNameArchitectureNameRepositoryGet,
		},
		{
			"BuildProjectNameRepositoryNameBuildconfigGet",
			http.MethodGet,
			"/build/:project_name/:repository_name/_buildconfig",
			handleFunctions.BuildAPI.BuildProjectNameRepositoryNameBuildconfigGet,
		},
		{
			"BuildProjectNameRepositoryNameGet",
			http.MethodGet,
			"/build/:project_name/:repository_name",
			handleFunctions.BuildAPI.BuildProjectNameRepositoryNameGet,
		},
		{
			"BuildProjectNameResultGet",
			http.MethodGet,
			"/build/:project_name/_result",
			handleFunctions.BuildAPI.BuildProjectNameResultGet,
		},
		{
			"GetBuildProjectRepositoryArchPackageBuildinfo",
			http.MethodGet,
			"/build/:project_name/:repository_name/:architecture_name/:package_name/_buildinfo",
			handleFunctions.BuildAPI.GetBuildProjectRepositoryArchPackageBuildinfo,
		},
		{
			"GetBuildProjectRepositoryArchPackageHistory",
			http.MethodGet,
			"/build/:project_name/:repository_name/:architecture_name/:package_name/_history",
			handleFunctions.BuildAPI.GetBuildProjectRepositoryArchPackageHistory,
		},
		{
			"GetBuildProjectRepositoryArchPackageLog",
			http.MethodGet,
			"/build/:project_name/:repository_name/:architecture_name/:package_name/_log",
			handleFunctions.BuildAPI.GetBuildProjectRepositoryArchPackageLog,
		},
		{
			"GetBuildProjectRepositoryArchPackageStatus",
			http.MethodGet,
			"/build/:project_name/:repository_name/:architecture_name/:package_name/_status",
			handleFunctions.BuildAPI.GetBuildProjectRepositoryArchPackageStatus,
		},
		{
			"GetBuildProjectRepositoryArchitecturePackageFile",
			http.MethodGet,
			"/build/:project_name/:repository_name/:architecture_name/:package_name/:file_name",
			handleFunctions.BuildAPI.GetBuildProjectRepositoryArchitecturePackageFile,
		},
		{
			"GetBuildProjectRepositoryArchitecturePackageFileViewFileinfo",
			http.MethodGet,
			"/build/:project_name/:repository_name/:architecture_name/:package_name/:file_name?view=fileinfo",
			handleFunctions.BuildAPI.GetBuildProjectRepositoryArchitecturePackageFileViewFileinfo,
		},
		{
			"PutBuildProjectRepositoryArchitecturePackageFile",
			http.MethodPut,
			"/build/:project_name/:repository_name/:architecture_name/:package_name/:file_name",
			handleFunctions.BuildAPI.PutBuildProjectRepositoryArchitecturePackageFile,
		},
		{
			"ConfigurationGet",
			http.MethodGet,
			"/configuration",
			handleFunctions.ConfigurationAPI.ConfigurationGet,
		},
		{
			"ConfigurationPut",
			http.MethodPut,
			"/configuration",
			handleFunctions.ConfigurationAPI.ConfigurationPut,
		},
		{
			"DistributionsBulkReplacePut",
			http.MethodPut,
			"/distributions/bulk_replace",
			handleFunctions.DistributionsAPI.DistributionsBulkReplacePut,
		},
		{
			"DistributionsDistributionIdDelete",
			http.MethodDelete,
			"/distributions/:distribution_id",
			handleFunctions.DistributionsAPI.DistributionsDistributionIdDelete,
		},
		{
			"DistributionsDistributionIdGet",
			http.MethodGet,
			"/distributions/:distribution_id",
			handleFunctions.DistributionsAPI.DistributionsDistributionIdGet,
		},
		{
			"DistributionsDistributionIdPut",
			http.MethodPut,
			"/distributions/:distribution_id",
			handleFunctions.DistributionsAPI.DistributionsDistributionIdPut,
		},
		{
			"DistributionsGet",
			http.MethodGet,
			"/distributions",
			handleFunctions.DistributionsAPI.DistributionsGet,
		},
		{
			"DistributionsIncludeRemotesGet",
			http.MethodGet,
			"/distributions/include_remotes",
			handleFunctions.DistributionsAPI.DistributionsIncludeRemotesGet,
		},
		{
			"DistributionsPost",
			http.MethodPost,
			"/distributions",
			handleFunctions.DistributionsAPI.DistributionsPost,
		},
		{
			"AboutGet",
			http.MethodGet,
			"/about",
			handleFunctions.GeneralInformationAPI.AboutGet,
		},
		{
			"ArchitecturesArchitectureNameGet",
			http.MethodGet,
			"/architectures/:architecture_name",
			handleFunctions.GeneralInformationAPI.ArchitecturesArchitectureNameGet,
		},
		{
			"ArchitecturesGet",
			http.MethodGet,
			"/architectures",
			handleFunctions.GeneralInformationAPI.ArchitecturesGet,
		},
		{
			"GroupGet",
			http.MethodGet,
			"/group",
			handleFunctions.GroupsAPI.GroupGet,
		},
		{
			"GroupGroupTitleDelete",
			http.MethodDelete,
			"/group/:group_title",
			handleFunctions.GroupsAPI.GroupGroupTitleDelete,
		},
		{
			"GroupGroupTitleGet",
			http.MethodGet,
			"/group/:group_title",
			handleFunctions.GroupsAPI.GroupGroupTitleGet,
		},
		{
			"GroupGroupTitlePost",
			http.MethodPost,
			"/group/:group_title",
			handleFunctions.GroupsAPI.GroupGroupTitlePost,
		},
		{
			"GroupGroupTitlePut",
			http.MethodPut,
			"/group/:group_title",
			handleFunctions.GroupsAPI.GroupGroupTitlePut,
		},
		{
			"IssueTrackersGet",
			http.MethodGet,
			"/issue_trackers",
			handleFunctions.IssueTrackersAPI.IssueTrackersGet,
		},
		{
			"IssueTrackersIssueTrackerNameDelete",
			http.MethodDelete,
			"/issue_trackers/:issue_tracker_name",
			handleFunctions.IssueTrackersAPI.IssueTrackersIssueTrackerNameDelete,
		},
		{
			"IssueTrackersIssueTrackerNameGet",
			http.MethodGet,
			"/issue_trackers/:issue_tracker_name",
			handleFunctions.IssueTrackersAPI.IssueTrackersIssueTrackerNameGet,
		},
		{
			"IssueTrackersIssueTrackerNameIssuesIssueNameGet",
			http.MethodGet,
			"/issue_trackers/:issue_tracker_name/issues/:issue_name",
			handleFunctions.IssueTrackersAPI.IssueTrackersIssueTrackerNameIssuesIssueNameGet,
		},
		{
			"IssueTrackersIssueTrackerNamePut",
			http.MethodPut,
			"/issue_trackers/:issue_tracker_name",
			handleFunctions.IssueTrackersAPI.IssueTrackersIssueTrackerNamePut,
		},
		{
			"IssueTrackersPost",
			http.MethodPost,
			"/issue_trackers",
			handleFunctions.IssueTrackersAPI.IssueTrackersPost,
		},
		{
			"PersonGet",
			http.MethodGet,
			"/person",
			handleFunctions.PersonAPI.PersonGet,
		},
		{
			"PersonLoginGet",
			http.MethodGet,
			"/person/:login",
			handleFunctions.PersonAPI.PersonLoginGet,
		},
		{
			"PersonLoginGroupGet",
			http.MethodGet,
			"/person/:login/group",
			handleFunctions.PersonAPI.PersonLoginGroupGet,
		},
		{
			"PersonLoginPost",
			http.MethodPost,
			"/person/:login",
			handleFunctions.PersonAPI.PersonLoginPost,
		},
		{
			"PersonLoginPut",
			http.MethodPut,
			"/person/:login",
			handleFunctions.PersonAPI.PersonLoginPut,
		},
		{
			"PersonLoginTokenGet",
			http.MethodGet,
			"/person/:login/token",
			handleFunctions.PersonAPI.PersonLoginTokenGet,
		},
		{
			"PersonLoginTokenIdDelete",
			http.MethodDelete,
			"/person/:login/token/:id",
			handleFunctions.PersonAPI.PersonLoginTokenIdDelete,
		},
		{
			"PersonLoginTokenPost",
			http.MethodPost,
			"/person/:login/token",
			handleFunctions.PersonAPI.PersonLoginTokenPost,
		},
		{
			"PersonPost",
			http.MethodPost,
			"/person",
			handleFunctions.PersonAPI.PersonPost,
		},
		{
			"PersonRegisterPost",
			http.MethodPost,
			"/person/register",
			handleFunctions.PersonAPI.PersonRegisterPost,
		},
		{
			"PublishedGet",
			http.MethodGet,
			"/published",
			handleFunctions.PublishedBinariesAPI.PublishedGet,
		},
		{
			"PublishedProjectNameGet",
			http.MethodGet,
			"/published/:project_name",
			handleFunctions.PublishedBinariesAPI.PublishedProjectNameGet,
		},
		{
			"PublishedProjectNameRepositoryNameArchitectureNameBinaryFilenameGet",
			http.MethodGet,
			"/published/:project_name/:repository_name/:architecture_name/:binary_filename",
			handleFunctions.PublishedBinariesAPI.PublishedProjectNameRepositoryNameArchitectureNameBinaryFilenameGet,
		},
		{
			"PublishedProjectNameRepositoryNameArchitectureNameBinaryFilenameviewympGet",
			http.MethodGet,
			"/published/:project_name/:repository_name/:architecture_name/:binary_filename?view=ymp",
			handleFunctions.PublishedBinariesAPI.PublishedProjectNameRepositoryNameArchitectureNameBinaryFilenameviewympGet,
		},
		{
			"PublishedProjectNameRepositoryNameArchitectureNameGet",
			http.MethodGet,
			"/published/:project_name/:repository_name/:architecture_name",
			handleFunctions.PublishedBinariesAPI.PublishedProjectNameRepositoryNameArchitectureNameGet,
		},
		{
			"PublishedProjectNameRepositoryNameGet",
			http.MethodGet,
			"/published/:project_name/:repository_name",
			handleFunctions.PublishedBinariesAPI.PublishedProjectNameRepositoryNameGet,
		},
		{
			"PublishedProjectNameRepositoryNameviewstatusGet",
			http.MethodGet,
			"/published/:project_name/:repository_name?view=status",
			handleFunctions.PublishedBinariesAPI.PublishedProjectNameRepositoryNameviewstatusGet,
		},
		{
			"RequestGet",
			http.MethodGet,
			"/request",
			handleFunctions.RequestAPI.RequestGet,
		},
		{
			"RequestIdDelete",
			http.MethodDelete,
			"/request/:id",
			handleFunctions.RequestAPI.RequestIdDelete,
		},
		{
			"RequestIdGet",
			http.MethodGet,
			"/request/:id",
			handleFunctions.RequestAPI.RequestIdGet,
		},
		{
			"RequestIdPost",
			http.MethodPost,
			"/request/:id",
			handleFunctions.RequestAPI.RequestIdPost,
		},
		{
			"RequestIdPut",
			http.MethodPut,
			"/request/:id",
			handleFunctions.RequestAPI.RequestIdPut,
		},
		{
			"RequestIdcmddiffPost",
			http.MethodPost,
			"/request/:id?cmd=diff",
			handleFunctions.RequestAPI.RequestIdcmddiffPost,
		},
		{
			"RequestPost",
			http.MethodPost,
			"/request",
			handleFunctions.RequestAPI.RequestPost,
		},
		{
			"RequestviewcollectionGet",
			http.MethodGet,
			"/request?view=collection",
			handleFunctions.RequestAPI.RequestviewcollectionGet,
		},
		{
			"WorkerArchitectureNameworkerIdGet",
			http.MethodGet,
			"/worker/:architecture_name::worker_id",
			handleFunctions.WorkersAPI.WorkerArchitectureNameworkerIdGet,
		},
		{
			"WorkerStatusGet",
			http.MethodGet,
			"/worker/status",
			handleFunctions.WorkersAPI.WorkerStatusGet,
		},
		{
			"WorkercmdcheckconstraintsPost",
			http.MethodPost,
			"/worker?cmd=checkconstraints",
			handleFunctions.WorkersAPI.WorkercmdcheckconstraintsPost,
		},
	}
}
