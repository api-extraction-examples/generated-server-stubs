/*
 * LaunchDarkly REST API
 *
 * Build custom integrations with the LaunchDarkly REST API
 *
 * API version: 5.3.0
 * Contact: support@launchdarkly.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"github.com/gin-gonic/gin"
)

type CustomerMetricsAPI struct {
}

// Get /api/v2/usage/evaluations/:envId/:flagKey
// Get events usage by event id and the feature flag key. 
func (api *CustomerMetricsAPI) GetEvaluations(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /api/v2/usage/events/:type
// Get events usage by event type. 
func (api *CustomerMetricsAPI) GetEvent(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /api/v2/usage/events
// Get events usage endpoints. 
func (api *CustomerMetricsAPI) GetEvents(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /api/v2/usage/mau
// Get monthly active user data. 
func (api *CustomerMetricsAPI) GetMAU(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /api/v2/usage/mau/bycategory
// Get monthly active user data by category. 
func (api *CustomerMetricsAPI) GetMAUByCategory(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /api/v2/usage/streams/:source
// Get a stream endpoint and return timeseries data. 
func (api *CustomerMetricsAPI) GetStream(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /api/v2/usage/streams/:source/bysdkversion
// Get a stream timeseries data by source show sdk version metadata. 
func (api *CustomerMetricsAPI) GetStreamBySDK(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /api/v2/usage/streams/:source/sdkversions
// Get a stream timeseries data by source and show all sdk version associated. 
func (api *CustomerMetricsAPI) GetStreamSDKVersion(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /api/v2/usage/streams
// Returns a list of all streams. 
func (api *CustomerMetricsAPI) GetStreams(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /api/v2/usage
// Returns of the usage endpoints available. 
func (api *CustomerMetricsAPI) GetUsage(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

