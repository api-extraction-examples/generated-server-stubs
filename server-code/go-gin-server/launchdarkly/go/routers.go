/*
 * LaunchDarkly REST API
 *
 * Build custom integrations with the LaunchDarkly REST API
 *
 * API version: 5.3.0
 * Contact: support@launchdarkly.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

// Route is the information for every URI.
type Route struct {
	// Name is the name of this Route.
	Name		string
	// Method is the string for the HTTP method. ex) GET, POST etc..
	Method		string
	// Pattern is the pattern of the URI.
	Pattern	 	string
	// HandlerFunc is the handler function of this route.
	HandlerFunc	gin.HandlerFunc
}

// NewRouter returns a new router.
func NewRouter(handleFunctions ApiHandleFunctions) *gin.Engine {
	router := gin.Default()
	for _, route := range getRoutes(handleFunctions) {
		if route.HandlerFunc == nil {
			route.HandlerFunc = DefaultHandleFunc
		}
		switch route.Method {
		case http.MethodGet:
			router.GET(route.Pattern, route.HandlerFunc)
		case http.MethodPost:
			router.POST(route.Pattern, route.HandlerFunc)
		case http.MethodPut:
			router.PUT(route.Pattern, route.HandlerFunc)
		case http.MethodPatch:
			router.PATCH(route.Pattern, route.HandlerFunc)
		case http.MethodDelete:
			router.DELETE(route.Pattern, route.HandlerFunc)
		}
	}

	return router
}

// Default handler for not yet implemented routes
func DefaultHandleFunc(c *gin.Context) {
	c.String(http.StatusNotImplemented, "501 not implemented")
}

type ApiHandleFunctions struct {

	// Routes for the AccessTokensAPI part of the API
	AccessTokensAPI AccessTokensAPI
	// Routes for the AuditLogAPI part of the API
	AuditLogAPI AuditLogAPI
	// Routes for the CustomRolesAPI part of the API
	CustomRolesAPI CustomRolesAPI
	// Routes for the CustomerMetricsAPI part of the API
	CustomerMetricsAPI CustomerMetricsAPI
	// Routes for the DataExportDestinationsAPI part of the API
	DataExportDestinationsAPI DataExportDestinationsAPI
	// Routes for the EnvironmentsAPI part of the API
	EnvironmentsAPI EnvironmentsAPI
	// Routes for the FeatureFlagsAPI part of the API
	FeatureFlagsAPI FeatureFlagsAPI
	// Routes for the IntegrationsAPI part of the API
	IntegrationsAPI IntegrationsAPI
	// Routes for the ProjectsAPI part of the API
	ProjectsAPI ProjectsAPI
	// Routes for the RelayProxyConfigurationsAPI part of the API
	RelayProxyConfigurationsAPI RelayProxyConfigurationsAPI
	// Routes for the RootAPI part of the API
	RootAPI RootAPI
	// Routes for the TeamMembersAPI part of the API
	TeamMembersAPI TeamMembersAPI
	// Routes for the UserSegmentsAPI part of the API
	UserSegmentsAPI UserSegmentsAPI
	// Routes for the UserSettingsAPI part of the API
	UserSettingsAPI UserSettingsAPI
	// Routes for the UsersAPI part of the API
	UsersAPI UsersAPI
	// Routes for the WebhooksAPI part of the API
	WebhooksAPI WebhooksAPI
}

func getRoutes(handleFunctions ApiHandleFunctions) []Route {
	return []Route{ 
		{
			"DeleteToken",
			http.MethodDelete,
			"/api/v2/tokens/:tokenId",
			handleFunctions.AccessTokensAPI.DeleteToken,
		},
		{
			"GetToken",
			http.MethodGet,
			"/api/v2/tokens/:tokenId",
			handleFunctions.AccessTokensAPI.GetToken,
		},
		{
			"GetTokens",
			http.MethodGet,
			"/api/v2/tokens",
			handleFunctions.AccessTokensAPI.GetTokens,
		},
		{
			"PatchToken",
			http.MethodPatch,
			"/api/v2/tokens/:tokenId",
			handleFunctions.AccessTokensAPI.PatchToken,
		},
		{
			"PostToken",
			http.MethodPost,
			"/api/v2/tokens",
			handleFunctions.AccessTokensAPI.PostToken,
		},
		{
			"ResetToken",
			http.MethodPost,
			"/api/v2/tokens/:tokenId/reset",
			handleFunctions.AccessTokensAPI.ResetToken,
		},
		{
			"GetAuditLogEntries",
			http.MethodGet,
			"/api/v2/auditlog",
			handleFunctions.AuditLogAPI.GetAuditLogEntries,
		},
		{
			"GetAuditLogEntry",
			http.MethodGet,
			"/api/v2/auditlog/:resourceId",
			handleFunctions.AuditLogAPI.GetAuditLogEntry,
		},
		{
			"DeleteCustomRole",
			http.MethodDelete,
			"/api/v2/roles/:customRoleKey",
			handleFunctions.CustomRolesAPI.DeleteCustomRole,
		},
		{
			"GetCustomRole",
			http.MethodGet,
			"/api/v2/roles/:customRoleKey",
			handleFunctions.CustomRolesAPI.GetCustomRole,
		},
		{
			"GetCustomRoles",
			http.MethodGet,
			"/api/v2/roles",
			handleFunctions.CustomRolesAPI.GetCustomRoles,
		},
		{
			"PatchCustomRole",
			http.MethodPatch,
			"/api/v2/roles/:customRoleKey",
			handleFunctions.CustomRolesAPI.PatchCustomRole,
		},
		{
			"PostCustomRole",
			http.MethodPost,
			"/api/v2/roles",
			handleFunctions.CustomRolesAPI.PostCustomRole,
		},
		{
			"GetEvaluations",
			http.MethodGet,
			"/api/v2/usage/evaluations/:envId/:flagKey",
			handleFunctions.CustomerMetricsAPI.GetEvaluations,
		},
		{
			"GetEvent",
			http.MethodGet,
			"/api/v2/usage/events/:type",
			handleFunctions.CustomerMetricsAPI.GetEvent,
		},
		{
			"GetEvents",
			http.MethodGet,
			"/api/v2/usage/events",
			handleFunctions.CustomerMetricsAPI.GetEvents,
		},
		{
			"GetMAU",
			http.MethodGet,
			"/api/v2/usage/mau",
			handleFunctions.CustomerMetricsAPI.GetMAU,
		},
		{
			"GetMAUByCategory",
			http.MethodGet,
			"/api/v2/usage/mau/bycategory",
			handleFunctions.CustomerMetricsAPI.GetMAUByCategory,
		},
		{
			"GetStream",
			http.MethodGet,
			"/api/v2/usage/streams/:source",
			handleFunctions.CustomerMetricsAPI.GetStream,
		},
		{
			"GetStreamBySDK",
			http.MethodGet,
			"/api/v2/usage/streams/:source/bysdkversion",
			handleFunctions.CustomerMetricsAPI.GetStreamBySDK,
		},
		{
			"GetStreamSDKVersion",
			http.MethodGet,
			"/api/v2/usage/streams/:source/sdkversions",
			handleFunctions.CustomerMetricsAPI.GetStreamSDKVersion,
		},
		{
			"GetStreams",
			http.MethodGet,
			"/api/v2/usage/streams",
			handleFunctions.CustomerMetricsAPI.GetStreams,
		},
		{
			"GetUsage",
			http.MethodGet,
			"/api/v2/usage",
			handleFunctions.CustomerMetricsAPI.GetUsage,
		},
		{
			"DeleteDestination",
			http.MethodDelete,
			"/api/v2/destinations/:projectKey/:environmentKey/:destinationId",
			handleFunctions.DataExportDestinationsAPI.DeleteDestination,
		},
		{
			"GetDestination",
			http.MethodGet,
			"/api/v2/destinations/:projectKey/:environmentKey/:destinationId",
			handleFunctions.DataExportDestinationsAPI.GetDestination,
		},
		{
			"GetDestinations",
			http.MethodGet,
			"/api/v2/destinations",
			handleFunctions.DataExportDestinationsAPI.GetDestinations,
		},
		{
			"PatchDestination",
			http.MethodPatch,
			"/api/v2/destinations/:projectKey/:environmentKey/:destinationId",
			handleFunctions.DataExportDestinationsAPI.PatchDestination,
		},
		{
			"PostDestination",
			http.MethodPost,
			"/api/v2/destinations/:projectKey/:environmentKey",
			handleFunctions.DataExportDestinationsAPI.PostDestination,
		},
		{
			"DeleteEnvironment",
			http.MethodDelete,
			"/api/v2/projects/:projectKey/environments/:environmentKey",
			handleFunctions.EnvironmentsAPI.DeleteEnvironment,
		},
		{
			"GetEnvironment",
			http.MethodGet,
			"/api/v2/projects/:projectKey/environments/:environmentKey",
			handleFunctions.EnvironmentsAPI.GetEnvironment,
		},
		{
			"PatchEnvironment",
			http.MethodPatch,
			"/api/v2/projects/:projectKey/environments/:environmentKey",
			handleFunctions.EnvironmentsAPI.PatchEnvironment,
		},
		{
			"PostEnvironment",
			http.MethodPost,
			"/api/v2/projects/:projectKey/environments",
			handleFunctions.EnvironmentsAPI.PostEnvironment,
		},
		{
			"ResetEnvironmentMobileKey",
			http.MethodPost,
			"/api/v2/projects/:projectKey/environments/:environmentKey/mobileKey",
			handleFunctions.EnvironmentsAPI.ResetEnvironmentMobileKey,
		},
		{
			"ResetEnvironmentSDKKey",
			http.MethodPost,
			"/api/v2/projects/:projectKey/environments/:environmentKey/apiKey",
			handleFunctions.EnvironmentsAPI.ResetEnvironmentSDKKey,
		},
		{
			"CopyFeatureFlag",
			http.MethodPost,
			"/api/v2/flags/:projectKey/:featureFlagKey/copy",
			handleFunctions.FeatureFlagsAPI.CopyFeatureFlag,
		},
		{
			"DeleteApprovalRequest",
			http.MethodDelete,
			"/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests/:approvalRequestId",
			handleFunctions.FeatureFlagsAPI.DeleteApprovalRequest,
		},
		{
			"DeleteFeatureFlag",
			http.MethodDelete,
			"/api/v2/flags/:projectKey/:featureFlagKey",
			handleFunctions.FeatureFlagsAPI.DeleteFeatureFlag,
		},
		{
			"DeleteFlagConfigScheduledChanges",
			http.MethodDelete,
			"/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes/:scheduledChangeId",
			handleFunctions.FeatureFlagsAPI.DeleteFlagConfigScheduledChanges,
		},
		{
			"FlagsProjectKeyEnvironmentKeyFeatureFlagKeyDependentFlagsGet",
			http.MethodGet,
			"/api/v2/flags/:projectKey/:environmentKey/:featureFlagKey/dependent-flags",
			handleFunctions.FeatureFlagsAPI.FlagsProjectKeyEnvironmentKeyFeatureFlagKeyDependentFlagsGet,
		},
		{
			"FlagsProjectKeyFeatureFlagKeyDependentFlagsGet",
			http.MethodGet,
			"/api/v2/flags/:projectKey/:featureFlagKey/dependent-flags",
			handleFunctions.FeatureFlagsAPI.FlagsProjectKeyFeatureFlagKeyDependentFlagsGet,
		},
		{
			"GetApprovalRequest",
			http.MethodGet,
			"/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests/:approvalRequestId",
			handleFunctions.FeatureFlagsAPI.GetApprovalRequest,
		},
		{
			"GetApprovalRequests",
			http.MethodGet,
			"/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests",
			handleFunctions.FeatureFlagsAPI.GetApprovalRequests,
		},
		{
			"GetExpiringUserTargets",
			http.MethodGet,
			"/api/v2/flags/:projectKey/:featureFlagKey/expiring-user-targets/:environmentKey",
			handleFunctions.FeatureFlagsAPI.GetExpiringUserTargets,
		},
		{
			"GetFeatureFlag",
			http.MethodGet,
			"/api/v2/flags/:projectKey/:featureFlagKey",
			handleFunctions.FeatureFlagsAPI.GetFeatureFlag,
		},
		{
			"GetFeatureFlagStatus",
			http.MethodGet,
			"/api/v2/flag-statuses/:projectKey/:environmentKey/:featureFlagKey",
			handleFunctions.FeatureFlagsAPI.GetFeatureFlagStatus,
		},
		{
			"GetFeatureFlagStatusAcrossEnvironments",
			http.MethodGet,
			"/api/v2/flag-status/:projectKey/:featureFlagKey",
			handleFunctions.FeatureFlagsAPI.GetFeatureFlagStatusAcrossEnvironments,
		},
		{
			"GetFeatureFlagStatuses",
			http.MethodGet,
			"/api/v2/flag-statuses/:projectKey/:environmentKey",
			handleFunctions.FeatureFlagsAPI.GetFeatureFlagStatuses,
		},
		{
			"GetFeatureFlags",
			http.MethodGet,
			"/api/v2/flags/:projectKey",
			handleFunctions.FeatureFlagsAPI.GetFeatureFlags,
		},
		{
			"GetFlagConfigScheduledChange",
			http.MethodGet,
			"/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes/:scheduledChangeId",
			handleFunctions.FeatureFlagsAPI.GetFlagConfigScheduledChange,
		},
		{
			"GetFlagConfigScheduledChanges",
			http.MethodGet,
			"/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes",
			handleFunctions.FeatureFlagsAPI.GetFlagConfigScheduledChanges,
		},
		{
			"GetFlagConfigScheduledChangesConflicts",
			http.MethodPost,
			"/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes-conflicts",
			handleFunctions.FeatureFlagsAPI.GetFlagConfigScheduledChangesConflicts,
		},
		{
			"PatchExpiringUserTargets",
			http.MethodPatch,
			"/api/v2/flags/:projectKey/:featureFlagKey/expiring-user-targets/:environmentKey",
			handleFunctions.FeatureFlagsAPI.PatchExpiringUserTargets,
		},
		{
			"PatchFeatureFlag",
			http.MethodPatch,
			"/api/v2/flags/:projectKey/:featureFlagKey",
			handleFunctions.FeatureFlagsAPI.PatchFeatureFlag,
		},
		{
			"PatchFlagConfigScheduledChange",
			http.MethodPatch,
			"/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes/:scheduledChangeId",
			handleFunctions.FeatureFlagsAPI.PatchFlagConfigScheduledChange,
		},
		{
			"PostApplyApprovalRequest",
			http.MethodPost,
			"/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests/:approvalRequestId/apply",
			handleFunctions.FeatureFlagsAPI.PostApplyApprovalRequest,
		},
		{
			"PostApprovalRequest",
			http.MethodPost,
			"/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests/:approvalRequestId",
			handleFunctions.FeatureFlagsAPI.PostApprovalRequest,
		},
		{
			"PostFeatureFlag",
			http.MethodPost,
			"/api/v2/flags/:projectKey",
			handleFunctions.FeatureFlagsAPI.PostFeatureFlag,
		},
		{
			"PostFlagConfigScheduledChanges",
			http.MethodPost,
			"/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes",
			handleFunctions.FeatureFlagsAPI.PostFlagConfigScheduledChanges,
		},
		{
			"PostReviewApprovalRequest",
			http.MethodPost,
			"/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests/:approvalRequestId/review",
			handleFunctions.FeatureFlagsAPI.PostReviewApprovalRequest,
		},
		{
			"DeleteIntegrationSubscription",
			http.MethodDelete,
			"/api/v2/integrations/:integrationKey/:integrationId",
			handleFunctions.IntegrationsAPI.DeleteIntegrationSubscription,
		},
		{
			"GetIntegrationSubscription",
			http.MethodGet,
			"/api/v2/integrations/:integrationKey/:integrationId",
			handleFunctions.IntegrationsAPI.GetIntegrationSubscription,
		},
		{
			"GetIntegrationSubscriptions",
			http.MethodGet,
			"/api/v2/integrations/:integrationKey",
			handleFunctions.IntegrationsAPI.GetIntegrationSubscriptions,
		},
		{
			"GetIntegrations",
			http.MethodGet,
			"/api/v2/integrations",
			handleFunctions.IntegrationsAPI.GetIntegrations,
		},
		{
			"PatchIntegrationSubscription",
			http.MethodPatch,
			"/api/v2/integrations/:integrationKey/:integrationId",
			handleFunctions.IntegrationsAPI.PatchIntegrationSubscription,
		},
		{
			"PostIntegrationSubscription",
			http.MethodPost,
			"/api/v2/integrations/:integrationKey",
			handleFunctions.IntegrationsAPI.PostIntegrationSubscription,
		},
		{
			"DeleteProject",
			http.MethodDelete,
			"/api/v2/projects/:projectKey",
			handleFunctions.ProjectsAPI.DeleteProject,
		},
		{
			"GetProject",
			http.MethodGet,
			"/api/v2/projects/:projectKey",
			handleFunctions.ProjectsAPI.GetProject,
		},
		{
			"GetProjects",
			http.MethodGet,
			"/api/v2/projects",
			handleFunctions.ProjectsAPI.GetProjects,
		},
		{
			"PatchProject",
			http.MethodPatch,
			"/api/v2/projects/:projectKey",
			handleFunctions.ProjectsAPI.PatchProject,
		},
		{
			"PostProject",
			http.MethodPost,
			"/api/v2/projects",
			handleFunctions.ProjectsAPI.PostProject,
		},
		{
			"DeleteRelayProxyConfig",
			http.MethodDelete,
			"/api/v2/account/relay-auto-configs/:id",
			handleFunctions.RelayProxyConfigurationsAPI.DeleteRelayProxyConfig,
		},
		{
			"GetRelayProxyConfig",
			http.MethodGet,
			"/api/v2/account/relay-auto-configs/:id",
			handleFunctions.RelayProxyConfigurationsAPI.GetRelayProxyConfig,
		},
		{
			"GetRelayProxyConfigs",
			http.MethodGet,
			"/api/v2/account/relay-auto-configs",
			handleFunctions.RelayProxyConfigurationsAPI.GetRelayProxyConfigs,
		},
		{
			"PatchRelayProxyConfig",
			http.MethodPatch,
			"/api/v2/account/relay-auto-configs/:id",
			handleFunctions.RelayProxyConfigurationsAPI.PatchRelayProxyConfig,
		},
		{
			"PostRelayAutoConfig",
			http.MethodPost,
			"/api/v2/account/relay-auto-configs",
			handleFunctions.RelayProxyConfigurationsAPI.PostRelayAutoConfig,
		},
		{
			"ResetRelayProxyConfig",
			http.MethodPost,
			"/api/v2/account/relay-auto-configs/:id/reset",
			handleFunctions.RelayProxyConfigurationsAPI.ResetRelayProxyConfig,
		},
		{
			"GetRoot",
			http.MethodGet,
			"/api/v2/",
			handleFunctions.RootAPI.GetRoot,
		},
		{
			"DeleteMember",
			http.MethodDelete,
			"/api/v2/members/:memberId",
			handleFunctions.TeamMembersAPI.DeleteMember,
		},
		{
			"GetMe",
			http.MethodGet,
			"/api/v2/members/me",
			handleFunctions.TeamMembersAPI.GetMe,
		},
		{
			"GetMember",
			http.MethodGet,
			"/api/v2/members/:memberId",
			handleFunctions.TeamMembersAPI.GetMember,
		},
		{
			"GetMembers",
			http.MethodGet,
			"/api/v2/members",
			handleFunctions.TeamMembersAPI.GetMembers,
		},
		{
			"PatchMember",
			http.MethodPatch,
			"/api/v2/members/:memberId",
			handleFunctions.TeamMembersAPI.PatchMember,
		},
		{
			"PostMembers",
			http.MethodPost,
			"/api/v2/members",
			handleFunctions.TeamMembersAPI.PostMembers,
		},
		{
			"DeleteUserSegment",
			http.MethodDelete,
			"/api/v2/segments/:projectKey/:environmentKey/:userSegmentKey",
			handleFunctions.UserSegmentsAPI.DeleteUserSegment,
		},
		{
			"GetExpiringUserTargetsOnSegment",
			http.MethodGet,
			"/api/v2/segments/:projectKey/:userSegmentKey/expiring-user-targets/:environmentKey",
			handleFunctions.UserSegmentsAPI.GetExpiringUserTargetsOnSegment,
		},
		{
			"GetUserSegment",
			http.MethodGet,
			"/api/v2/segments/:projectKey/:environmentKey/:userSegmentKey",
			handleFunctions.UserSegmentsAPI.GetUserSegment,
		},
		{
			"GetUserSegments",
			http.MethodGet,
			"/api/v2/segments/:projectKey/:environmentKey",
			handleFunctions.UserSegmentsAPI.GetUserSegments,
		},
		{
			"PatchExpiringUserTargetsOnSegment",
			http.MethodPatch,
			"/api/v2/segments/:projectKey/:userSegmentKey/expiring-user-targets/:environmentKey",
			handleFunctions.UserSegmentsAPI.PatchExpiringUserTargetsOnSegment,
		},
		{
			"PatchUserSegment",
			http.MethodPatch,
			"/api/v2/segments/:projectKey/:environmentKey/:userSegmentKey",
			handleFunctions.UserSegmentsAPI.PatchUserSegment,
		},
		{
			"PostUserSegment",
			http.MethodPost,
			"/api/v2/segments/:projectKey/:environmentKey",
			handleFunctions.UserSegmentsAPI.PostUserSegment,
		},
		{
			"UpdateBigSegmentTargets",
			http.MethodPost,
			"/api/v2/segments/:projectKey/:environmentKey/:userSegmentKey/users",
			handleFunctions.UserSegmentsAPI.UpdateBigSegmentTargets,
		},
		{
			"GetExpiringUserTargetsForUser",
			http.MethodGet,
			"/api/v2/users/:projectKey/:userKey/expiring-user-targets/:environmentKey",
			handleFunctions.UserSettingsAPI.GetExpiringUserTargetsForUser,
		},
		{
			"GetUserFlagSetting",
			http.MethodGet,
			"/api/v2/users/:projectKey/:environmentKey/:userKey/flags/:featureFlagKey",
			handleFunctions.UserSettingsAPI.GetUserFlagSetting,
		},
		{
			"GetUserFlagSettings",
			http.MethodGet,
			"/api/v2/users/:projectKey/:environmentKey/:userKey/flags",
			handleFunctions.UserSettingsAPI.GetUserFlagSettings,
		},
		{
			"PatchExpiringUserTargetsForFlags",
			http.MethodPatch,
			"/api/v2/users/:projectKey/:userKey/expiring-user-targets/:environmentKey",
			handleFunctions.UserSettingsAPI.PatchExpiringUserTargetsForFlags,
		},
		{
			"PutFlagSetting",
			http.MethodPut,
			"/api/v2/users/:projectKey/:environmentKey/:userKey/flags/:featureFlagKey",
			handleFunctions.UserSettingsAPI.PutFlagSetting,
		},
		{
			"DeleteUser",
			http.MethodDelete,
			"/api/v2/users/:projectKey/:environmentKey/:userKey",
			handleFunctions.UsersAPI.DeleteUser,
		},
		{
			"GetSearchUsers",
			http.MethodGet,
			"/api/v2/user-search/:projectKey/:environmentKey",
			handleFunctions.UsersAPI.GetSearchUsers,
		},
		{
			"GetUser",
			http.MethodGet,
			"/api/v2/users/:projectKey/:environmentKey/:userKey",
			handleFunctions.UsersAPI.GetUser,
		},
		{
			"GetUsers",
			http.MethodGet,
			"/api/v2/users/:projectKey/:environmentKey",
			handleFunctions.UsersAPI.GetUsers,
		},
		{
			"DeleteWebhook",
			http.MethodDelete,
			"/api/v2/webhooks/:resourceId",
			handleFunctions.WebhooksAPI.DeleteWebhook,
		},
		{
			"GetWebhook",
			http.MethodGet,
			"/api/v2/webhooks/:resourceId",
			handleFunctions.WebhooksAPI.GetWebhook,
		},
		{
			"GetWebhooks",
			http.MethodGet,
			"/api/v2/webhooks",
			handleFunctions.WebhooksAPI.GetWebhooks,
		},
		{
			"PatchWebhook",
			http.MethodPatch,
			"/api/v2/webhooks/:resourceId",
			handleFunctions.WebhooksAPI.PatchWebhook,
		},
		{
			"PostWebhook",
			http.MethodPost,
			"/api/v2/webhooks",
			handleFunctions.WebhooksAPI.PostWebhook,
		},
	}
}
