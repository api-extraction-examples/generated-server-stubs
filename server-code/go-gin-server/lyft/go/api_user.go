/*
 * Lyft
 *
 * Drive your app to success with Lyft's API
 *
 * API version: 1.0.0
 * Contact: api-support@lyft.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"github.com/gin-gonic/gin"
)

type UserAPI struct {
}

// Post /v1/rides/:id/cancel
// Cancel a ongoing requested ride 
func (api *UserAPI) CancelRide(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /v1/profile
// The user's general info 
func (api *UserAPI) GetProfile(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /v1/rides/:id
// Get the ride detail of a given ride ID 
func (api *UserAPI) GetRide(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /v1/rides/:id/receipt
// Get the receipt of the rides. 
func (api *UserAPI) GetRideReceipt(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /v1/rides
// List rides 
func (api *UserAPI) GetRides(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /v1/rides
// Request a Lyft 
func (api *UserAPI) NewRide(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Put /v1/rides/:id/destination
// Update the destination of the ride 
func (api *UserAPI) SetRideDestination(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Put /v1/rides/:id/rating
// Add the passenger's rating, feedback, and tip 
func (api *UserAPI) SetRideRating(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

