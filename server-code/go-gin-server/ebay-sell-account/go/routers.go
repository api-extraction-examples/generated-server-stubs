/*
 * Account API
 *
 * The <b>Account API</b> gives sellers the ability to configure their eBay seller accounts, including the seller's policies (eBay business policies and seller-defined custom policies), opt in and out of eBay seller programs, configure sales tax tables, and get account information.  <br/><br/>For details on the availability of the methods in this API, see <a href=\"/api-docs/sell/account/overview.html#requirements\">Account API requirements and restrictions</a>.
 *
 * API version: v1.9.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

// Route is the information for every URI.
type Route struct {
	// Name is the name of this Route.
	Name		string
	// Method is the string for the HTTP method. ex) GET, POST etc..
	Method		string
	// Pattern is the pattern of the URI.
	Pattern	 	string
	// HandlerFunc is the handler function of this route.
	HandlerFunc	gin.HandlerFunc
}

// NewRouter returns a new router.
func NewRouter(handleFunctions ApiHandleFunctions) *gin.Engine {
	router := gin.Default()
	for _, route := range getRoutes(handleFunctions) {
		if route.HandlerFunc == nil {
			route.HandlerFunc = DefaultHandleFunc
		}
		switch route.Method {
		case http.MethodGet:
			router.GET(route.Pattern, route.HandlerFunc)
		case http.MethodPost:
			router.POST(route.Pattern, route.HandlerFunc)
		case http.MethodPut:
			router.PUT(route.Pattern, route.HandlerFunc)
		case http.MethodPatch:
			router.PATCH(route.Pattern, route.HandlerFunc)
		case http.MethodDelete:
			router.DELETE(route.Pattern, route.HandlerFunc)
		}
	}

	return router
}

// Default handler for not yet implemented routes
func DefaultHandleFunc(c *gin.Context) {
	c.String(http.StatusNotImplemented, "501 not implemented")
}

type ApiHandleFunctions struct {

	// Routes for the AdvertisingEligibilityAPI part of the API
	AdvertisingEligibilityAPI AdvertisingEligibilityAPI
	// Routes for the CustomPolicyAPI part of the API
	CustomPolicyAPI CustomPolicyAPI
	// Routes for the FulfillmentPolicyAPI part of the API
	FulfillmentPolicyAPI FulfillmentPolicyAPI
	// Routes for the KycAPI part of the API
	KycAPI KycAPI
	// Routes for the OnboardingAPI part of the API
	OnboardingAPI OnboardingAPI
	// Routes for the PaymentPolicyAPI part of the API
	PaymentPolicyAPI PaymentPolicyAPI
	// Routes for the PaymentsProgramAPI part of the API
	PaymentsProgramAPI PaymentsProgramAPI
	// Routes for the PrivilegeAPI part of the API
	PrivilegeAPI PrivilegeAPI
	// Routes for the ProgramAPI part of the API
	ProgramAPI ProgramAPI
	// Routes for the RateTableAPI part of the API
	RateTableAPI RateTableAPI
	// Routes for the ReturnPolicyAPI part of the API
	ReturnPolicyAPI ReturnPolicyAPI
	// Routes for the SalesTaxAPI part of the API
	SalesTaxAPI SalesTaxAPI
	// Routes for the SubscriptionAPI part of the API
	SubscriptionAPI SubscriptionAPI
}

func getRoutes(handleFunctions ApiHandleFunctions) []Route {
	return []Route{ 
		{
			"GetAdvertisingEligibility",
			http.MethodGet,
			"/sell/account/v1/advertising_eligibility",
			handleFunctions.AdvertisingEligibilityAPI.GetAdvertisingEligibility,
		},
		{
			"CreateCustomPolicy",
			http.MethodPost,
			"/sell/account/v1/custom_policy/",
			handleFunctions.CustomPolicyAPI.CreateCustomPolicy,
		},
		{
			"GetCustomPolicies",
			http.MethodGet,
			"/sell/account/v1/custom_policy/",
			handleFunctions.CustomPolicyAPI.GetCustomPolicies,
		},
		{
			"GetCustomPolicy",
			http.MethodGet,
			"/sell/account/v1/custom_policy/:custom_policy_id",
			handleFunctions.CustomPolicyAPI.GetCustomPolicy,
		},
		{
			"UpdateCustomPolicy",
			http.MethodPut,
			"/sell/account/v1/custom_policy/:custom_policy_id",
			handleFunctions.CustomPolicyAPI.UpdateCustomPolicy,
		},
		{
			"CreateFulfillmentPolicy",
			http.MethodPost,
			"/sell/account/v1/fulfillment_policy/",
			handleFunctions.FulfillmentPolicyAPI.CreateFulfillmentPolicy,
		},
		{
			"DeleteFulfillmentPolicy",
			http.MethodDelete,
			"/sell/account/v1/fulfillment_policy/:fulfillmentPolicyId",
			handleFunctions.FulfillmentPolicyAPI.DeleteFulfillmentPolicy,
		},
		{
			"GetFulfillmentPolicies",
			http.MethodGet,
			"/sell/account/v1/fulfillment_policy",
			handleFunctions.FulfillmentPolicyAPI.GetFulfillmentPolicies,
		},
		{
			"GetFulfillmentPolicy",
			http.MethodGet,
			"/sell/account/v1/fulfillment_policy/:fulfillmentPolicyId",
			handleFunctions.FulfillmentPolicyAPI.GetFulfillmentPolicy,
		},
		{
			"GetFulfillmentPolicyByName",
			http.MethodGet,
			"/sell/account/v1/fulfillment_policy/get_by_policy_name",
			handleFunctions.FulfillmentPolicyAPI.GetFulfillmentPolicyByName,
		},
		{
			"UpdateFulfillmentPolicy",
			http.MethodPut,
			"/sell/account/v1/fulfillment_policy/:fulfillmentPolicyId",
			handleFunctions.FulfillmentPolicyAPI.UpdateFulfillmentPolicy,
		},
		{
			"GetKYC",
			http.MethodGet,
			"/sell/account/v1/kyc",
			handleFunctions.KycAPI.GetKYC,
		},
		{
			"GetPaymentsProgramOnboarding",
			http.MethodGet,
			"/sell/account/v1/payments_program/:marketplace_id/:payments_program_type/onboarding",
			handleFunctions.OnboardingAPI.GetPaymentsProgramOnboarding,
		},
		{
			"CreatePaymentPolicy",
			http.MethodPost,
			"/sell/account/v1/payment_policy",
			handleFunctions.PaymentPolicyAPI.CreatePaymentPolicy,
		},
		{
			"DeletePaymentPolicy",
			http.MethodDelete,
			"/sell/account/v1/payment_policy/:payment_policy_id",
			handleFunctions.PaymentPolicyAPI.DeletePaymentPolicy,
		},
		{
			"GetPaymentPolicies",
			http.MethodGet,
			"/sell/account/v1/payment_policy",
			handleFunctions.PaymentPolicyAPI.GetPaymentPolicies,
		},
		{
			"GetPaymentPolicy",
			http.MethodGet,
			"/sell/account/v1/payment_policy/:payment_policy_id",
			handleFunctions.PaymentPolicyAPI.GetPaymentPolicy,
		},
		{
			"GetPaymentPolicyByName",
			http.MethodGet,
			"/sell/account/v1/payment_policy/get_by_policy_name",
			handleFunctions.PaymentPolicyAPI.GetPaymentPolicyByName,
		},
		{
			"UpdatePaymentPolicy",
			http.MethodPut,
			"/sell/account/v1/payment_policy/:payment_policy_id",
			handleFunctions.PaymentPolicyAPI.UpdatePaymentPolicy,
		},
		{
			"GetPaymentsProgram",
			http.MethodGet,
			"/sell/account/v1/payments_program/:marketplace_id/:payments_program_type",
			handleFunctions.PaymentsProgramAPI.GetPaymentsProgram,
		},
		{
			"GetPrivileges",
			http.MethodGet,
			"/sell/account/v1/privilege",
			handleFunctions.PrivilegeAPI.GetPrivileges,
		},
		{
			"GetOptedInPrograms",
			http.MethodGet,
			"/sell/account/v1/program/get_opted_in_programs",
			handleFunctions.ProgramAPI.GetOptedInPrograms,
		},
		{
			"OptInToProgram",
			http.MethodPost,
			"/sell/account/v1/program/opt_in",
			handleFunctions.ProgramAPI.OptInToProgram,
		},
		{
			"OptOutOfProgram",
			http.MethodPost,
			"/sell/account/v1/program/opt_out",
			handleFunctions.ProgramAPI.OptOutOfProgram,
		},
		{
			"GetRateTables",
			http.MethodGet,
			"/sell/account/v1/rate_table",
			handleFunctions.RateTableAPI.GetRateTables,
		},
		{
			"CreateReturnPolicy",
			http.MethodPost,
			"/sell/account/v1/return_policy",
			handleFunctions.ReturnPolicyAPI.CreateReturnPolicy,
		},
		{
			"DeleteReturnPolicy",
			http.MethodDelete,
			"/sell/account/v1/return_policy/:return_policy_id",
			handleFunctions.ReturnPolicyAPI.DeleteReturnPolicy,
		},
		{
			"GetReturnPolicies",
			http.MethodGet,
			"/sell/account/v1/return_policy",
			handleFunctions.ReturnPolicyAPI.GetReturnPolicies,
		},
		{
			"GetReturnPolicy",
			http.MethodGet,
			"/sell/account/v1/return_policy/:return_policy_id",
			handleFunctions.ReturnPolicyAPI.GetReturnPolicy,
		},
		{
			"GetReturnPolicyByName",
			http.MethodGet,
			"/sell/account/v1/return_policy/get_by_policy_name",
			handleFunctions.ReturnPolicyAPI.GetReturnPolicyByName,
		},
		{
			"UpdateReturnPolicy",
			http.MethodPut,
			"/sell/account/v1/return_policy/:return_policy_id",
			handleFunctions.ReturnPolicyAPI.UpdateReturnPolicy,
		},
		{
			"CreateOrReplaceSalesTax",
			http.MethodPut,
			"/sell/account/v1/sales_tax/:countryCode/:jurisdictionId",
			handleFunctions.SalesTaxAPI.CreateOrReplaceSalesTax,
		},
		{
			"DeleteSalesTax",
			http.MethodDelete,
			"/sell/account/v1/sales_tax/:countryCode/:jurisdictionId",
			handleFunctions.SalesTaxAPI.DeleteSalesTax,
		},
		{
			"GetSalesTax",
			http.MethodGet,
			"/sell/account/v1/sales_tax/:countryCode/:jurisdictionId",
			handleFunctions.SalesTaxAPI.GetSalesTax,
		},
		{
			"GetSalesTaxes",
			http.MethodGet,
			"/sell/account/v1/sales_tax",
			handleFunctions.SalesTaxAPI.GetSalesTaxes,
		},
		{
			"GetSubscription",
			http.MethodGet,
			"/sell/account/v1/subscription",
			handleFunctions.SubscriptionAPI.GetSubscription,
		},
	}
}
