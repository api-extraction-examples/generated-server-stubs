/*
 * COVID-19 data API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2.6
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

// Route is the information for every URI.
type Route struct {
	// Name is the name of this Route.
	Name		string
	// Method is the string for the HTTP method. ex) GET, POST etc..
	Method		string
	// Pattern is the pattern of the URI.
	Pattern	 	string
	// HandlerFunc is the handler function of this route.
	HandlerFunc	gin.HandlerFunc
}

// NewRouter returns a new router.
func NewRouter(handleFunctions ApiHandleFunctions) *gin.Engine {
	router := gin.Default()
	for _, route := range getRoutes(handleFunctions) {
		if route.HandlerFunc == nil {
			route.HandlerFunc = DefaultHandleFunc
		}
		switch route.Method {
		case http.MethodGet:
			router.GET(route.Pattern, route.HandlerFunc)
		case http.MethodPost:
			router.POST(route.Pattern, route.HandlerFunc)
		case http.MethodPut:
			router.PUT(route.Pattern, route.HandlerFunc)
		case http.MethodPatch:
			router.PATCH(route.Pattern, route.HandlerFunc)
		case http.MethodDelete:
			router.DELETE(route.Pattern, route.HandlerFunc)
		}
	}

	return router
}

// Default handler for not yet implemented routes
func DefaultHandleFunc(c *gin.Context) {
	c.String(http.StatusNotImplemented, "501 not implemented")
}

type ApiHandleFunctions struct {

	// Routes for the CountryAPI part of the API
	CountryAPI CountryAPI
	// Routes for the HelpAPI part of the API
	HelpAPI HelpAPI
	// Routes for the TotalsAPI part of the API
	TotalsAPI TotalsAPI
}

func getRoutes(handleFunctions ApiHandleFunctions) []Route {
	return []Route{ 
		{
			"GetDailyReportAllCountries",
			http.MethodGet,
			"/report/country/all",
			handleFunctions.CountryAPI.GetDailyReportAllCountries,
		},
		{
			"GetDailyReportByCountryCode",
			http.MethodGet,
			"/report/country/code",
			handleFunctions.CountryAPI.GetDailyReportByCountryCode,
		},
		{
			"GetDailyReportByCountryName",
			http.MethodGet,
			"/report/country/name",
			handleFunctions.CountryAPI.GetDailyReportByCountryName,
		},
		{
			"GetLatestAllCountries",
			http.MethodGet,
			"/country/all",
			handleFunctions.CountryAPI.GetLatestAllCountries,
		},
		{
			"GetLatestCountryDataByCode",
			http.MethodGet,
			"/country/code",
			handleFunctions.CountryAPI.GetLatestCountryDataByCode,
		},
		{
			"GetLatestCountryDataByName",
			http.MethodGet,
			"/country",
			handleFunctions.CountryAPI.GetLatestCountryDataByName,
		},
		{
			"GetListOfCountries",
			http.MethodGet,
			"/help/countries",
			handleFunctions.HelpAPI.GetListOfCountries,
		},
		{
			"GetDailyReportTotals",
			http.MethodGet,
			"/report/totals",
			handleFunctions.TotalsAPI.GetDailyReportTotals,
		},
		{
			"GetLatestTotals",
			http.MethodGet,
			"/totals",
			handleFunctions.TotalsAPI.GetLatestTotals,
		},
	}
}
