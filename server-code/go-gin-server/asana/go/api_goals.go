/*
 * Asana
 *
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"github.com/gin-gonic/gin"
)

type GoalsAPI struct {
}

// Post /api/1.0/goals/:goal_gid/addFollowers
// Add a collaborator to a goal 
func (api *GoalsAPI) AddFollowers(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /api/1.0/goals
// Create a goal 
func (api *GoalsAPI) CreateGoal(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /api/1.0/goals/:goal_gid/setMetric
// Create a goal metric 
func (api *GoalsAPI) CreateGoalMetric(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Delete /api/1.0/goals/:goal_gid
// Delete a goal 
func (api *GoalsAPI) DeleteGoal(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /api/1.0/goals/:goal_gid
// Get a goal 
func (api *GoalsAPI) GetGoal(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /api/1.0/goals
// Get goals 
func (api *GoalsAPI) GetGoals(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /api/1.0/goals/:goal_gid/parentGoals
// Get parent goals from a goal 
func (api *GoalsAPI) GetParentGoalsForGoal(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /api/1.0/goals/:goal_gid/removeFollowers
// Remove a collaborator from a goal 
func (api *GoalsAPI) RemoveFollowers(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Put /api/1.0/goals/:goal_gid
// Update a goal 
func (api *GoalsAPI) UpdateGoal(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /api/1.0/goals/:goal_gid/setMetricCurrentValue
// Update a goal metric 
func (api *GoalsAPI) UpdateGoalMetric(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

