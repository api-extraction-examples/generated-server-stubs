/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.4.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"github.com/gin-gonic/gin"
)

type BuildsAPI struct {
}

// Get /v1/builds/:id/appEncryptionDeclaration
func (api *BuildsAPI) BuildsAppEncryptionDeclarationGetToOneRelated(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /v1/builds/:id/relationships/appEncryptionDeclaration
func (api *BuildsAPI) BuildsAppEncryptionDeclarationGetToOneRelationship(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Patch /v1/builds/:id/relationships/appEncryptionDeclaration
func (api *BuildsAPI) BuildsAppEncryptionDeclarationUpdateToOneRelationship(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /v1/builds/:id/app
func (api *BuildsAPI) BuildsAppGetToOneRelated(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /v1/builds/:id/appStoreVersion
func (api *BuildsAPI) BuildsAppStoreVersionGetToOneRelated(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /v1/builds/:id/betaAppReviewSubmission
func (api *BuildsAPI) BuildsBetaAppReviewSubmissionGetToOneRelated(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /v1/builds/:id/betaBuildLocalizations
func (api *BuildsAPI) BuildsBetaBuildLocalizationsGetToManyRelated(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /v1/builds/:id/relationships/betaGroups
func (api *BuildsAPI) BuildsBetaGroupsCreateToManyRelationship(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Delete /v1/builds/:id/relationships/betaGroups
func (api *BuildsAPI) BuildsBetaGroupsDeleteToManyRelationship(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /v1/builds/:id/buildBetaDetail
func (api *BuildsAPI) BuildsBuildBetaDetailGetToOneRelated(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /v1/builds/:id/diagnosticSignatures
func (api *BuildsAPI) BuildsDiagnosticSignaturesGetToManyRelated(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /v1/builds
func (api *BuildsAPI) BuildsGetCollection(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /v1/builds/:id
func (api *BuildsAPI) BuildsGetInstance(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /v1/builds/:id/icons
func (api *BuildsAPI) BuildsIconsGetToManyRelated(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /v1/builds/:id/relationships/individualTesters
func (api *BuildsAPI) BuildsIndividualTestersCreateToManyRelationship(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Delete /v1/builds/:id/relationships/individualTesters
func (api *BuildsAPI) BuildsIndividualTestersDeleteToManyRelationship(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /v1/builds/:id/individualTesters
func (api *BuildsAPI) BuildsIndividualTestersGetToManyRelated(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /v1/builds/:id/relationships/individualTesters
func (api *BuildsAPI) BuildsIndividualTestersGetToManyRelationship(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /v1/builds/:id/perfPowerMetrics
func (api *BuildsAPI) BuildsPerfPowerMetricsGetToManyRelated(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /v1/builds/:id/preReleaseVersion
func (api *BuildsAPI) BuildsPreReleaseVersionGetToOneRelated(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Patch /v1/builds/:id
func (api *BuildsAPI) BuildsUpdateInstance(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

