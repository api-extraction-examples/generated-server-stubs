/*
 * Medium API
 *
 * Medium API helps you to quickly extract data from Medium's Website (https://medium.com).   You can gather data related to users, publications, articles (including its textual content), latest posts &amp; top writers within a topic/niche, etcâ€¦ 
 *
 * API version: 1.0
 * Contact: nishu@mediumapi.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"github.com/gin-gonic/gin"
)

type UserAPI struct {
}

// Get /user/id_for/:username
// Get User ID 
func (api *UserAPI) UserIdForUsernameGet(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /user/:user_id/articles
// Get User's Articles 
func (api *UserAPI) UserUserIdArticlesGet(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /user/:user_id/followers
// Get User Followers 
func (api *UserAPI) UserUserIdFollowersGet(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /user/:user_id/following
// Get User Following 
func (api *UserAPI) UserUserIdFollowingGet(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /user/:user_id
// Get User Info 
func (api *UserAPI) UserUserIdGet(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /user/:user_id/interests
// Get User's Interests 
func (api *UserAPI) UserUserIdInterestsGet(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /user/:user_id/lists
// Get User's Lists 
func (api *UserAPI) UserUserIdListsGet(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /user/:user_id/publications
// Get User's Publications 
func (api *UserAPI) UserUserIdPublicationsGet(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /user/:user_id/top_articles
// Get User's Top Articles 
func (api *UserAPI) UserUserIdTopArticlesGet(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

