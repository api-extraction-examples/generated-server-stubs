/*
 * Medium API
 *
 * Medium API helps you to quickly extract data from Medium's Website (https://medium.com).   You can gather data related to users, publications, articles (including its textual content), latest posts &amp; top writers within a topic/niche, etcâ€¦ 
 *
 * API version: 1.0
 * Contact: nishu@mediumapi.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

// Route is the information for every URI.
type Route struct {
	// Name is the name of this Route.
	Name		string
	// Method is the string for the HTTP method. ex) GET, POST etc..
	Method		string
	// Pattern is the pattern of the URI.
	Pattern	 	string
	// HandlerFunc is the handler function of this route.
	HandlerFunc	gin.HandlerFunc
}

// NewRouter returns a new router.
func NewRouter(handleFunctions ApiHandleFunctions) *gin.Engine {
	router := gin.Default()
	for _, route := range getRoutes(handleFunctions) {
		if route.HandlerFunc == nil {
			route.HandlerFunc = DefaultHandleFunc
		}
		switch route.Method {
		case http.MethodGet:
			router.GET(route.Pattern, route.HandlerFunc)
		case http.MethodPost:
			router.POST(route.Pattern, route.HandlerFunc)
		case http.MethodPut:
			router.PUT(route.Pattern, route.HandlerFunc)
		case http.MethodPatch:
			router.PATCH(route.Pattern, route.HandlerFunc)
		case http.MethodDelete:
			router.DELETE(route.Pattern, route.HandlerFunc)
		}
	}

	return router
}

// Default handler for not yet implemented routes
func DefaultHandleFunc(c *gin.Context) {
	c.String(http.StatusNotImplemented, "501 not implemented")
}

type ApiHandleFunctions struct {

	// Routes for the ArticleAPI part of the API
	ArticleAPI ArticleAPI
	// Routes for the ListAPI part of the API
	ListAPI ListAPI
	// Routes for the MiscAPI part of the API
	MiscAPI MiscAPI
	// Routes for the PublicationAPI part of the API
	PublicationAPI PublicationAPI
	// Routes for the SearchAPI part of the API
	SearchAPI SearchAPI
	// Routes for the UserAPI part of the API
	UserAPI UserAPI
	// Routes for the WelcomeAPI part of the API
	WelcomeAPI WelcomeAPI
}

func getRoutes(handleFunctions ApiHandleFunctions) []Route {
	return []Route{ 
		{
			"ArticleArticleIdContentGet",
			http.MethodGet,
			"/article/:article_id/content",
			handleFunctions.ArticleAPI.ArticleArticleIdContentGet,
		},
		{
			"ArticleArticleIdFansGet",
			http.MethodGet,
			"/article/:article_id/fans",
			handleFunctions.ArticleAPI.ArticleArticleIdFansGet,
		},
		{
			"ArticleArticleIdGet",
			http.MethodGet,
			"/article/:article_id",
			handleFunctions.ArticleAPI.ArticleArticleIdGet,
		},
		{
			"ArticleArticleIdMarkdownGet",
			http.MethodGet,
			"/article/:article_id/markdown",
			handleFunctions.ArticleAPI.ArticleArticleIdMarkdownGet,
		},
		{
			"ArticleArticleIdRelatedGet",
			http.MethodGet,
			"/article/:article_id/related",
			handleFunctions.ArticleAPI.ArticleArticleIdRelatedGet,
		},
		{
			"ArticleArticleIdResponsesGet",
			http.MethodGet,
			"/article/:article_id/responses",
			handleFunctions.ArticleAPI.ArticleArticleIdResponsesGet,
		},
		{
			"ListListIdArticlesGet",
			http.MethodGet,
			"/list/:list_id/articles",
			handleFunctions.ListAPI.ListListIdArticlesGet,
		},
		{
			"ListListIdGet",
			http.MethodGet,
			"/list/:list_id",
			handleFunctions.ListAPI.ListListIdGet,
		},
		{
			"ListListIdResponsesGet",
			http.MethodGet,
			"/list/:list_id/responses",
			handleFunctions.ListAPI.ListListIdResponsesGet,
		},
		{
			"LatestpostsTopicSlugGet",
			http.MethodGet,
			"/latestposts/:topic_slug",
			handleFunctions.MiscAPI.LatestpostsTopicSlugGet,
		},
		{
			"RelatedTagsTagGet",
			http.MethodGet,
			"/related_tags/:tag",
			handleFunctions.MiscAPI.RelatedTagsTagGet,
		},
		{
			"TopWriterTopicSlugGet",
			http.MethodGet,
			"/top_writer/:topic_slug",
			handleFunctions.MiscAPI.TopWriterTopicSlugGet,
		},
		{
			"TopfeedsTagModeGet",
			http.MethodGet,
			"/topfeeds/:tag/:mode",
			handleFunctions.MiscAPI.TopfeedsTagModeGet,
		},
		{
			"PublicationIdForPublicationSlugGet",
			http.MethodGet,
			"/publication/id_for/:publication_slug",
			handleFunctions.PublicationAPI.PublicationIdForPublicationSlugGet,
		},
		{
			"PublicationPublicationIdArticlesGet",
			http.MethodGet,
			"/publication/:publication_id/articles",
			handleFunctions.PublicationAPI.PublicationPublicationIdArticlesGet,
		},
		{
			"PublicationPublicationIdGet",
			http.MethodGet,
			"/publication/:publication_id",
			handleFunctions.PublicationAPI.PublicationPublicationIdGet,
		},
		{
			"PublicationPublicationIdNewsletterGet",
			http.MethodGet,
			"/publication/:publication_id/newsletter",
			handleFunctions.PublicationAPI.PublicationPublicationIdNewsletterGet,
		},
		{
			"SearchArticlesqueryqueryGet",
			http.MethodGet,
			"/search/articles?query=:query",
			handleFunctions.SearchAPI.SearchArticlesqueryqueryGet,
		},
		{
			"SearchListsqueryqueryGet",
			http.MethodGet,
			"/search/lists?query=:query",
			handleFunctions.SearchAPI.SearchListsqueryqueryGet,
		},
		{
			"SearchPublicationsqueryqueryGet",
			http.MethodGet,
			"/search/publications?query=:query",
			handleFunctions.SearchAPI.SearchPublicationsqueryqueryGet,
		},
		{
			"SearchTagsqueryqueryGet",
			http.MethodGet,
			"/search/tags?query=:query",
			handleFunctions.SearchAPI.SearchTagsqueryqueryGet,
		},
		{
			"SearchUsersqueryqueryGet",
			http.MethodGet,
			"/search/users?query=:query",
			handleFunctions.SearchAPI.SearchUsersqueryqueryGet,
		},
		{
			"UserIdForUsernameGet",
			http.MethodGet,
			"/user/id_for/:username",
			handleFunctions.UserAPI.UserIdForUsernameGet,
		},
		{
			"UserUserIdArticlesGet",
			http.MethodGet,
			"/user/:user_id/articles",
			handleFunctions.UserAPI.UserUserIdArticlesGet,
		},
		{
			"UserUserIdFollowersGet",
			http.MethodGet,
			"/user/:user_id/followers",
			handleFunctions.UserAPI.UserUserIdFollowersGet,
		},
		{
			"UserUserIdFollowingGet",
			http.MethodGet,
			"/user/:user_id/following",
			handleFunctions.UserAPI.UserUserIdFollowingGet,
		},
		{
			"UserUserIdGet",
			http.MethodGet,
			"/user/:user_id",
			handleFunctions.UserAPI.UserUserIdGet,
		},
		{
			"UserUserIdInterestsGet",
			http.MethodGet,
			"/user/:user_id/interests",
			handleFunctions.UserAPI.UserUserIdInterestsGet,
		},
		{
			"UserUserIdListsGet",
			http.MethodGet,
			"/user/:user_id/lists",
			handleFunctions.UserAPI.UserUserIdListsGet,
		},
		{
			"UserUserIdPublicationsGet",
			http.MethodGet,
			"/user/:user_id/publications",
			handleFunctions.UserAPI.UserUserIdPublicationsGet,
		},
		{
			"UserUserIdTopArticlesGet",
			http.MethodGet,
			"/user/:user_id/top_articles",
			handleFunctions.UserAPI.UserUserIdTopArticlesGet,
		},
		{
			"RootGet",
			http.MethodGet,
			"/",
			handleFunctions.WelcomeAPI.RootGet,
		},
	}
}
