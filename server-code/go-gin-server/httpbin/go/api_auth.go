/*
 * httpbin.org
 *
 * A simple HTTP Request & Response Service.<br/> <br/> <b>Run locally: </b> <code>$ docker run -p 80:80 kennethreitz/httpbin</code>
 *
 * API version: 0.9.2
 * Contact: me@kennethreitz.org
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"github.com/gin-gonic/gin"
)

type AuthAPI struct {
}

// Get /basic-auth/:user/:passwd
// Prompts the user for authorization using HTTP Basic Auth. 
func (api *AuthAPI) BasicAuthUserPasswdGet(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /bearer
// Prompts the user for authorization using bearer authentication. 
func (api *AuthAPI) BearerGet(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /digest-auth/:qop/:user/:passwd/:algorithm
// Prompts the user for authorization using Digest Auth + Algorithm. 
func (api *AuthAPI) DigestAuthQopUserPasswdAlgorithmGet(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /digest-auth/:qop/:user/:passwd/:algorithm/:stale_after
// Prompts the user for authorization using Digest Auth + Algorithm. 
func (api *AuthAPI) DigestAuthQopUserPasswdAlgorithmStaleAfterGet(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /digest-auth/:qop/:user/:passwd
// Prompts the user for authorization using Digest Auth. 
func (api *AuthAPI) DigestAuthQopUserPasswdGet(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /hidden-basic-auth/:user/:passwd
// Prompts the user for authorization using HTTP Basic Auth. 
func (api *AuthAPI) HiddenBasicAuthUserPasswdGet(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

