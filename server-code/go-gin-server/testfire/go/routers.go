/*
 * AltoroJ REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.2
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

// Route is the information for every URI.
type Route struct {
	// Name is the name of this Route.
	Name		string
	// Method is the string for the HTTP method. ex) GET, POST etc..
	Method		string
	// Pattern is the pattern of the URI.
	Pattern	 	string
	// HandlerFunc is the handler function of this route.
	HandlerFunc	gin.HandlerFunc
}

// NewRouter returns a new router.
func NewRouter(handleFunctions ApiHandleFunctions) *gin.Engine {
	router := gin.Default()
	for _, route := range getRoutes(handleFunctions) {
		if route.HandlerFunc == nil {
			route.HandlerFunc = DefaultHandleFunc
		}
		switch route.Method {
		case http.MethodGet:
			router.GET(route.Pattern, route.HandlerFunc)
		case http.MethodPost:
			router.POST(route.Pattern, route.HandlerFunc)
		case http.MethodPut:
			router.PUT(route.Pattern, route.HandlerFunc)
		case http.MethodPatch:
			router.PATCH(route.Pattern, route.HandlerFunc)
		case http.MethodDelete:
			router.DELETE(route.Pattern, route.HandlerFunc)
		}
	}

	return router
}

// Default handler for not yet implemented routes
func DefaultHandleFunc(c *gin.Context) {
	c.String(http.StatusNotImplemented, "501 not implemented")
}

type ApiHandleFunctions struct {

	// Routes for the Class1LoginAPI part of the API
	Class1LoginAPI Class1LoginAPI
	// Routes for the Class2AccountAPI part of the API
	Class2AccountAPI Class2AccountAPI
	// Routes for the Class3TransferAPI part of the API
	Class3TransferAPI Class3TransferAPI
	// Routes for the Class4FeedbackAPI part of the API
	Class4FeedbackAPI Class4FeedbackAPI
	// Routes for the Class5AdminAPI part of the API
	Class5AdminAPI Class5AdminAPI
	// Routes for the Class6LogoutAPI part of the API
	Class6LogoutAPI Class6LogoutAPI
}

func getRoutes(handleFunctions ApiHandleFunctions) []Route {
	return []Route{ 
		{
			"CheckLogin",
			http.MethodGet,
			"/api/login",
			handleFunctions.Class1LoginAPI.CheckLogin,
		},
		{
			"Login",
			http.MethodPost,
			"/api/login",
			handleFunctions.Class1LoginAPI.Login,
		},
		{
			"GetAccount",
			http.MethodGet,
			"/api/account",
			handleFunctions.Class2AccountAPI.GetAccount,
		},
		{
			"GetAccountBalance",
			http.MethodGet,
			"/api/account/:accountNo",
			handleFunctions.Class2AccountAPI.GetAccountBalance,
		},
		{
			"GetTransactions",
			http.MethodPost,
			"/api/account/:accountNo/transactions",
			handleFunctions.Class2AccountAPI.GetTransactions,
		},
		{
			"ShowLastTenTransactions",
			http.MethodGet,
			"/api/account/:accountNo/transactions",
			handleFunctions.Class2AccountAPI.ShowLastTenTransactions,
		},
		{
			"Trasnfer",
			http.MethodPost,
			"/api/transfer",
			handleFunctions.Class3TransferAPI.Trasnfer,
		},
		{
			"GetFeedback",
			http.MethodGet,
			"/api/feedback/:feedbackId",
			handleFunctions.Class4FeedbackAPI.GetFeedback,
		},
		{
			"SendFeedback",
			http.MethodPost,
			"/api/feedback/submit",
			handleFunctions.Class4FeedbackAPI.SendFeedback,
		},
		{
			"AddUser",
			http.MethodPost,
			"/api/admin/addUser",
			handleFunctions.Class5AdminAPI.AddUser,
		},
		{
			"ChangePassword",
			http.MethodPost,
			"/api/admin/changePassword",
			handleFunctions.Class5AdminAPI.ChangePassword,
		},
		{
			"DoLogOut",
			http.MethodGet,
			"/api/logout",
			handleFunctions.Class6LogoutAPI.DoLogOut,
		},
	}
}
