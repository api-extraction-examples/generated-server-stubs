/*
 * College Football Data API
 *
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * API version: 4.4.12
 * Contact: admin@collegefootballdata.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

// Route is the information for every URI.
type Route struct {
	// Name is the name of this Route.
	Name		string
	// Method is the string for the HTTP method. ex) GET, POST etc..
	Method		string
	// Pattern is the pattern of the URI.
	Pattern	 	string
	// HandlerFunc is the handler function of this route.
	HandlerFunc	gin.HandlerFunc
}

// NewRouter returns a new router.
func NewRouter(handleFunctions ApiHandleFunctions) *gin.Engine {
	router := gin.Default()
	for _, route := range getRoutes(handleFunctions) {
		if route.HandlerFunc == nil {
			route.HandlerFunc = DefaultHandleFunc
		}
		switch route.Method {
		case http.MethodGet:
			router.GET(route.Pattern, route.HandlerFunc)
		case http.MethodPost:
			router.POST(route.Pattern, route.HandlerFunc)
		case http.MethodPut:
			router.PUT(route.Pattern, route.HandlerFunc)
		case http.MethodPatch:
			router.PATCH(route.Pattern, route.HandlerFunc)
		case http.MethodDelete:
			router.DELETE(route.Pattern, route.HandlerFunc)
		}
	}

	return router
}

// Default handler for not yet implemented routes
func DefaultHandleFunc(c *gin.Context) {
	c.String(http.StatusNotImplemented, "501 not implemented")
}

type ApiHandleFunctions struct {

	// Routes for the BettingAPI part of the API
	BettingAPI BettingAPI
	// Routes for the CoachesAPI part of the API
	CoachesAPI CoachesAPI
	// Routes for the ConferencesAPI part of the API
	ConferencesAPI ConferencesAPI
	// Routes for the DraftAPI part of the API
	DraftAPI DraftAPI
	// Routes for the DrivesAPI part of the API
	DrivesAPI DrivesAPI
	// Routes for the GamesAPI part of the API
	GamesAPI GamesAPI
	// Routes for the MetricsAPI part of the API
	MetricsAPI MetricsAPI
	// Routes for the PlayersAPI part of the API
	PlayersAPI PlayersAPI
	// Routes for the PlaysAPI part of the API
	PlaysAPI PlaysAPI
	// Routes for the RankingsAPI part of the API
	RankingsAPI RankingsAPI
	// Routes for the RatingsAPI part of the API
	RatingsAPI RatingsAPI
	// Routes for the RecruitingAPI part of the API
	RecruitingAPI RecruitingAPI
	// Routes for the StatsAPI part of the API
	StatsAPI StatsAPI
	// Routes for the TeamsAPI part of the API
	TeamsAPI TeamsAPI
	// Routes for the VenuesAPI part of the API
	VenuesAPI VenuesAPI
}

func getRoutes(handleFunctions ApiHandleFunctions) []Route {
	return []Route{ 
		{
			"GetLines",
			http.MethodGet,
			"/lines",
			handleFunctions.BettingAPI.GetLines,
		},
		{
			"GetCoaches",
			http.MethodGet,
			"/coaches",
			handleFunctions.CoachesAPI.GetCoaches,
		},
		{
			"GetConferences",
			http.MethodGet,
			"/conferences",
			handleFunctions.ConferencesAPI.GetConferences,
		},
		{
			"GetDraftPicks",
			http.MethodGet,
			"/draft/picks",
			handleFunctions.DraftAPI.GetDraftPicks,
		},
		{
			"GetNFLPositions",
			http.MethodGet,
			"/draft/positions",
			handleFunctions.DraftAPI.GetNFLPositions,
		},
		{
			"GetNFLTeams",
			http.MethodGet,
			"/draft/teams",
			handleFunctions.DraftAPI.GetNFLTeams,
		},
		{
			"GetDrives",
			http.MethodGet,
			"/drives",
			handleFunctions.DrivesAPI.GetDrives,
		},
		{
			"GetAdvancedBoxScore",
			http.MethodGet,
			"/game/box/advanced",
			handleFunctions.GamesAPI.GetAdvancedBoxScore,
		},
		{
			"GetCalendar",
			http.MethodGet,
			"/calendar",
			handleFunctions.GamesAPI.GetCalendar,
		},
		{
			"GetGameMedia",
			http.MethodGet,
			"/games/media",
			handleFunctions.GamesAPI.GetGameMedia,
		},
		{
			"GetGameWeather",
			http.MethodGet,
			"/games/weather",
			handleFunctions.GamesAPI.GetGameWeather,
		},
		{
			"GetGames",
			http.MethodGet,
			"/games",
			handleFunctions.GamesAPI.GetGames,
		},
		{
			"GetPlayerGameStats",
			http.MethodGet,
			"/games/players",
			handleFunctions.GamesAPI.GetPlayerGameStats,
		},
		{
			"GetScoreboard",
			http.MethodGet,
			"/scoreboard",
			handleFunctions.GamesAPI.GetScoreboard,
		},
		{
			"GetTeamGameStats",
			http.MethodGet,
			"/games/teams",
			handleFunctions.GamesAPI.GetTeamGameStats,
		},
		{
			"GetTeamRecords",
			http.MethodGet,
			"/records",
			handleFunctions.GamesAPI.GetTeamRecords,
		},
		{
			"GetGamePPA",
			http.MethodGet,
			"/ppa/games",
			handleFunctions.MetricsAPI.GetGamePPA,
		},
		{
			"GetPlayerGamePPA",
			http.MethodGet,
			"/ppa/players/games",
			handleFunctions.MetricsAPI.GetPlayerGamePPA,
		},
		{
			"GetPlayerSeasonPPA",
			http.MethodGet,
			"/ppa/players/season",
			handleFunctions.MetricsAPI.GetPlayerSeasonPPA,
		},
		{
			"GetPredictedPoints",
			http.MethodGet,
			"/ppa/predicted",
			handleFunctions.MetricsAPI.GetPredictedPoints,
		},
		{
			"GetPregameWinProbabilities",
			http.MethodGet,
			"/metrics/wp/pregame",
			handleFunctions.MetricsAPI.GetPregameWinProbabilities,
		},
		{
			"GetTeamPPA",
			http.MethodGet,
			"/ppa/teams",
			handleFunctions.MetricsAPI.GetTeamPPA,
		},
		{
			"GetWinProbabilityData",
			http.MethodGet,
			"/metrics/wp",
			handleFunctions.MetricsAPI.GetWinProbabilityData,
		},
		{
			"GetPlayerSeasonStats",
			http.MethodGet,
			"/stats/player/season",
			handleFunctions.PlayersAPI.GetPlayerSeasonStats,
		},
		{
			"GetPlayerUsage",
			http.MethodGet,
			"/player/usage",
			handleFunctions.PlayersAPI.GetPlayerUsage,
		},
		{
			"GetReturningProduction",
			http.MethodGet,
			"/player/returning",
			handleFunctions.PlayersAPI.GetReturningProduction,
		},
		{
			"GetTransferPortal",
			http.MethodGet,
			"/player/portal",
			handleFunctions.PlayersAPI.GetTransferPortal,
		},
		{
			"PlayerSearch",
			http.MethodGet,
			"/player/search",
			handleFunctions.PlayersAPI.PlayerSearch,
		},
		{
			"GetLivePlays",
			http.MethodGet,
			"/live/plays",
			handleFunctions.PlaysAPI.GetLivePlays,
		},
		{
			"GetPlayStatTypes",
			http.MethodGet,
			"/play/stat/types",
			handleFunctions.PlaysAPI.GetPlayStatTypes,
		},
		{
			"GetPlayStats",
			http.MethodGet,
			"/play/stats",
			handleFunctions.PlaysAPI.GetPlayStats,
		},
		{
			"GetPlayTypes",
			http.MethodGet,
			"/play/types",
			handleFunctions.PlaysAPI.GetPlayTypes,
		},
		{
			"GetPlays",
			http.MethodGet,
			"/plays",
			handleFunctions.PlaysAPI.GetPlays,
		},
		{
			"GetRankings",
			http.MethodGet,
			"/rankings",
			handleFunctions.RankingsAPI.GetRankings,
		},
		{
			"GetConferenceSPRatings",
			http.MethodGet,
			"/ratings/sp/conferences",
			handleFunctions.RatingsAPI.GetConferenceSPRatings,
		},
		{
			"GetEloRatings",
			http.MethodGet,
			"/ratings/elo",
			handleFunctions.RatingsAPI.GetEloRatings,
		},
		{
			"GetSPRatings",
			http.MethodGet,
			"/ratings/sp",
			handleFunctions.RatingsAPI.GetSPRatings,
		},
		{
			"GetSRSRatings",
			http.MethodGet,
			"/ratings/srs",
			handleFunctions.RatingsAPI.GetSRSRatings,
		},
		{
			"GetRecruitingGroups",
			http.MethodGet,
			"/recruiting/groups",
			handleFunctions.RecruitingAPI.GetRecruitingGroups,
		},
		{
			"GetRecruitingPlayers",
			http.MethodGet,
			"/recruiting/players",
			handleFunctions.RecruitingAPI.GetRecruitingPlayers,
		},
		{
			"GetRecruitingTeams",
			http.MethodGet,
			"/recruiting/teams",
			handleFunctions.RecruitingAPI.GetRecruitingTeams,
		},
		{
			"GetAdvancedTeamGameStats",
			http.MethodGet,
			"/stats/game/advanced",
			handleFunctions.StatsAPI.GetAdvancedTeamGameStats,
		},
		{
			"GetAdvancedTeamSeasonStats",
			http.MethodGet,
			"/stats/season/advanced",
			handleFunctions.StatsAPI.GetAdvancedTeamSeasonStats,
		},
		{
			"GetStatCategories",
			http.MethodGet,
			"/stats/categories",
			handleFunctions.StatsAPI.GetStatCategories,
		},
		{
			"GetTeamSeasonStats",
			http.MethodGet,
			"/stats/season",
			handleFunctions.StatsAPI.GetTeamSeasonStats,
		},
		{
			"GetFbsTeams",
			http.MethodGet,
			"/teams/fbs",
			handleFunctions.TeamsAPI.GetFbsTeams,
		},
		{
			"GetRoster",
			http.MethodGet,
			"/roster",
			handleFunctions.TeamsAPI.GetRoster,
		},
		{
			"GetTalent",
			http.MethodGet,
			"/talent",
			handleFunctions.TeamsAPI.GetTalent,
		},
		{
			"GetTeamMatchup",
			http.MethodGet,
			"/teams/matchup",
			handleFunctions.TeamsAPI.GetTeamMatchup,
		},
		{
			"GetTeams",
			http.MethodGet,
			"/teams",
			handleFunctions.TeamsAPI.GetTeams,
		},
		{
			"GetVenues",
			http.MethodGet,
			"/venues",
			handleFunctions.VenuesAPI.GetVenues,
		},
	}
}
