/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"github.com/gin-gonic/gin"
)

type PlaystateAPI struct {
}

// Post /Users/:userId/PlayedItems/:itemId
// Marks an item as played for user. 
func (api *PlaystateAPI) MarkPlayedItem(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Delete /Users/:userId/PlayedItems/:itemId
// Marks an item as unplayed for user. 
func (api *PlaystateAPI) MarkUnplayedItem(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /Users/:userId/PlayingItems/:itemId/Progress
// Reports a user's playback progress. 
func (api *PlaystateAPI) OnPlaybackProgress(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /Users/:userId/PlayingItems/:itemId
// Reports that a user has begun playing an item. 
func (api *PlaystateAPI) OnPlaybackStart(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Delete /Users/:userId/PlayingItems/:itemId
// Reports that a user has stopped playing an item. 
func (api *PlaystateAPI) OnPlaybackStopped(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /Sessions/Playing/Ping
// Pings a playback session. 
func (api *PlaystateAPI) PingPlaybackSession(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /Sessions/Playing/Progress
// Reports playback progress within a session. 
func (api *PlaystateAPI) ReportPlaybackProgress(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /Sessions/Playing
// Reports playback has started within a session. 
func (api *PlaystateAPI) ReportPlaybackStart(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /Sessions/Playing/Stopped
// Reports playback has stopped within a session. 
func (api *PlaystateAPI) ReportPlaybackStopped(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

