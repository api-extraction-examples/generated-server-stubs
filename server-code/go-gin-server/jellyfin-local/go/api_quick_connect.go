/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"github.com/gin-gonic/gin"
)

type QuickConnectAPI struct {
}

// Post /QuickConnect/Activate
// Temporarily activates quick connect for five minutes. 
func (api *QuickConnectAPI) Activate(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /QuickConnect/Authorize
// Authorizes a pending quick connect request. 
func (api *QuickConnectAPI) Authorize(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /QuickConnect/Available
// Enables or disables quick connect. 
func (api *QuickConnectAPI) Available(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /QuickConnect/Connect
// Attempts to retrieve authentication information. 
func (api *QuickConnectAPI) Connect(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /QuickConnect/Deauthorize
// Deauthorize all quick connect devices for the current user. 
func (api *QuickConnectAPI) Deauthorize(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /QuickConnect/Status
// Gets the current quick connect state. 
func (api *QuickConnectAPI) GetStatus(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /QuickConnect/Initiate
// Initiate a new quick connect request. 
func (api *QuickConnectAPI) Initiate(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

