/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

// Route is the information for every URI.
type Route struct {
	// Name is the name of this Route.
	Name		string
	// Method is the string for the HTTP method. ex) GET, POST etc..
	Method		string
	// Pattern is the pattern of the URI.
	Pattern	 	string
	// HandlerFunc is the handler function of this route.
	HandlerFunc	gin.HandlerFunc
}

// NewRouter returns a new router.
func NewRouter(handleFunctions ApiHandleFunctions) *gin.Engine {
	router := gin.Default()
	for _, route := range getRoutes(handleFunctions) {
		if route.HandlerFunc == nil {
			route.HandlerFunc = DefaultHandleFunc
		}
		switch route.Method {
		case http.MethodGet:
			router.GET(route.Pattern, route.HandlerFunc)
		case http.MethodPost:
			router.POST(route.Pattern, route.HandlerFunc)
		case http.MethodPut:
			router.PUT(route.Pattern, route.HandlerFunc)
		case http.MethodPatch:
			router.PATCH(route.Pattern, route.HandlerFunc)
		case http.MethodDelete:
			router.DELETE(route.Pattern, route.HandlerFunc)
		}
	}

	return router
}

// Default handler for not yet implemented routes
func DefaultHandleFunc(c *gin.Context) {
	c.String(http.StatusNotImplemented, "501 not implemented")
}

type ApiHandleFunctions struct {

	// Routes for the ActivityLogAPI part of the API
	ActivityLogAPI ActivityLogAPI
	// Routes for the ApiKeyAPI part of the API
	ApiKeyAPI ApiKeyAPI
	// Routes for the ArtistsAPI part of the API
	ArtistsAPI ArtistsAPI
	// Routes for the AudioAPI part of the API
	AudioAPI AudioAPI
	// Routes for the BrandingAPI part of the API
	BrandingAPI BrandingAPI
	// Routes for the ChannelsAPI part of the API
	ChannelsAPI ChannelsAPI
	// Routes for the CollectionAPI part of the API
	CollectionAPI CollectionAPI
	// Routes for the ConfigurationAPI part of the API
	ConfigurationAPI ConfigurationAPI
	// Routes for the DashboardAPI part of the API
	DashboardAPI DashboardAPI
	// Routes for the DevicesAPI part of the API
	DevicesAPI DevicesAPI
	// Routes for the DisplayPreferencesAPI part of the API
	DisplayPreferencesAPI DisplayPreferencesAPI
	// Routes for the DlnaAPI part of the API
	DlnaAPI DlnaAPI
	// Routes for the DlnaServerAPI part of the API
	DlnaServerAPI DlnaServerAPI
	// Routes for the DynamicHlsAPI part of the API
	DynamicHlsAPI DynamicHlsAPI
	// Routes for the EnvironmentAPI part of the API
	EnvironmentAPI EnvironmentAPI
	// Routes for the FilterAPI part of the API
	FilterAPI FilterAPI
	// Routes for the GenresAPI part of the API
	GenresAPI GenresAPI
	// Routes for the HlsSegmentAPI part of the API
	HlsSegmentAPI HlsSegmentAPI
	// Routes for the ImageAPI part of the API
	ImageAPI ImageAPI
	// Routes for the ImageByNameAPI part of the API
	ImageByNameAPI ImageByNameAPI
	// Routes for the InstantMixAPI part of the API
	InstantMixAPI InstantMixAPI
	// Routes for the ItemLookupAPI part of the API
	ItemLookupAPI ItemLookupAPI
	// Routes for the ItemRefreshAPI part of the API
	ItemRefreshAPI ItemRefreshAPI
	// Routes for the ItemUpdateAPI part of the API
	ItemUpdateAPI ItemUpdateAPI
	// Routes for the ItemsAPI part of the API
	ItemsAPI ItemsAPI
	// Routes for the LibraryAPI part of the API
	LibraryAPI LibraryAPI
	// Routes for the LibraryStructureAPI part of the API
	LibraryStructureAPI LibraryStructureAPI
	// Routes for the LiveTvAPI part of the API
	LiveTvAPI LiveTvAPI
	// Routes for the LocalizationAPI part of the API
	LocalizationAPI LocalizationAPI
	// Routes for the MediaInfoAPI part of the API
	MediaInfoAPI MediaInfoAPI
	// Routes for the MoviesAPI part of the API
	MoviesAPI MoviesAPI
	// Routes for the MusicGenresAPI part of the API
	MusicGenresAPI MusicGenresAPI
	// Routes for the NotificationsAPI part of the API
	NotificationsAPI NotificationsAPI
	// Routes for the PackageAPI part of the API
	PackageAPI PackageAPI
	// Routes for the PersonsAPI part of the API
	PersonsAPI PersonsAPI
	// Routes for the PlaylistsAPI part of the API
	PlaylistsAPI PlaylistsAPI
	// Routes for the PlaystateAPI part of the API
	PlaystateAPI PlaystateAPI
	// Routes for the PluginsAPI part of the API
	PluginsAPI PluginsAPI
	// Routes for the QuickConnectAPI part of the API
	QuickConnectAPI QuickConnectAPI
	// Routes for the RemoteImageAPI part of the API
	RemoteImageAPI RemoteImageAPI
	// Routes for the ScheduledTasksAPI part of the API
	ScheduledTasksAPI ScheduledTasksAPI
	// Routes for the SearchAPI part of the API
	SearchAPI SearchAPI
	// Routes for the SessionAPI part of the API
	SessionAPI SessionAPI
	// Routes for the StartupAPI part of the API
	StartupAPI StartupAPI
	// Routes for the StudiosAPI part of the API
	StudiosAPI StudiosAPI
	// Routes for the SubtitleAPI part of the API
	SubtitleAPI SubtitleAPI
	// Routes for the SuggestionsAPI part of the API
	SuggestionsAPI SuggestionsAPI
	// Routes for the SyncPlayAPI part of the API
	SyncPlayAPI SyncPlayAPI
	// Routes for the SystemAPI part of the API
	SystemAPI SystemAPI
	// Routes for the TimeSyncAPI part of the API
	TimeSyncAPI TimeSyncAPI
	// Routes for the TrailersAPI part of the API
	TrailersAPI TrailersAPI
	// Routes for the TvShowsAPI part of the API
	TvShowsAPI TvShowsAPI
	// Routes for the UniversalAudioAPI part of the API
	UniversalAudioAPI UniversalAudioAPI
	// Routes for the UserAPI part of the API
	UserAPI UserAPI
	// Routes for the UserLibraryAPI part of the API
	UserLibraryAPI UserLibraryAPI
	// Routes for the UserViewsAPI part of the API
	UserViewsAPI UserViewsAPI
	// Routes for the VideoAttachmentsAPI part of the API
	VideoAttachmentsAPI VideoAttachmentsAPI
	// Routes for the VideoHlsAPI part of the API
	VideoHlsAPI VideoHlsAPI
	// Routes for the VideosAPI part of the API
	VideosAPI VideosAPI
	// Routes for the YearsAPI part of the API
	YearsAPI YearsAPI
}

func getRoutes(handleFunctions ApiHandleFunctions) []Route {
	return []Route{ 
		{
			"GetLogEntries",
			http.MethodGet,
			"/System/ActivityLog/Entries",
			handleFunctions.ActivityLogAPI.GetLogEntries,
		},
		{
			"CreateKey",
			http.MethodPost,
			"/Auth/Keys",
			handleFunctions.ApiKeyAPI.CreateKey,
		},
		{
			"GetKeys",
			http.MethodGet,
			"/Auth/Keys",
			handleFunctions.ApiKeyAPI.GetKeys,
		},
		{
			"RevokeKey",
			http.MethodDelete,
			"/Auth/Keys/:key",
			handleFunctions.ApiKeyAPI.RevokeKey,
		},
		{
			"GetAlbumArtists",
			http.MethodGet,
			"/Artists/AlbumArtists",
			handleFunctions.ArtistsAPI.GetAlbumArtists,
		},
		{
			"GetArtistByName",
			http.MethodGet,
			"/Artists/:name",
			handleFunctions.ArtistsAPI.GetArtistByName,
		},
		{
			"GetArtists",
			http.MethodGet,
			"/Artists",
			handleFunctions.ArtistsAPI.GetArtists,
		},
		{
			"GetAudioStream",
			http.MethodGet,
			"/Audio/:itemId/stream",
			handleFunctions.AudioAPI.GetAudioStream,
		},
		{
			"GetAudioStreamByContainer",
			http.MethodGet,
			"/Audio/:itemId/stream.:container",
			handleFunctions.AudioAPI.GetAudioStreamByContainer,
		},
		{
			"HeadAudioStream",
			http.MethodHead,
			"/Audio/:itemId/stream",
			handleFunctions.AudioAPI.HeadAudioStream,
		},
		{
			"HeadAudioStreamByContainer",
			http.MethodHead,
			"/Audio/:itemId/stream.:container",
			handleFunctions.AudioAPI.HeadAudioStreamByContainer,
		},
		{
			"GetBrandingCss",
			http.MethodGet,
			"/Branding/Css",
			handleFunctions.BrandingAPI.GetBrandingCss,
		},
		{
			"GetBrandingCss2",
			http.MethodGet,
			"/Branding/Css.css",
			handleFunctions.BrandingAPI.GetBrandingCss2,
		},
		{
			"GetBrandingOptions",
			http.MethodGet,
			"/Branding/Configuration",
			handleFunctions.BrandingAPI.GetBrandingOptions,
		},
		{
			"GetAllChannelFeatures",
			http.MethodGet,
			"/Channels/Features",
			handleFunctions.ChannelsAPI.GetAllChannelFeatures,
		},
		{
			"GetChannelFeatures",
			http.MethodGet,
			"/Channels/:channelId/Features",
			handleFunctions.ChannelsAPI.GetChannelFeatures,
		},
		{
			"GetChannelItems",
			http.MethodGet,
			"/Channels/:channelId/Items",
			handleFunctions.ChannelsAPI.GetChannelItems,
		},
		{
			"GetChannels",
			http.MethodGet,
			"/Channels",
			handleFunctions.ChannelsAPI.GetChannels,
		},
		{
			"GetLatestChannelItems",
			http.MethodGet,
			"/Channels/Items/Latest",
			handleFunctions.ChannelsAPI.GetLatestChannelItems,
		},
		{
			"AddToCollection",
			http.MethodPost,
			"/Collections/:collectionId/Items",
			handleFunctions.CollectionAPI.AddToCollection,
		},
		{
			"CreateCollection",
			http.MethodPost,
			"/Collections",
			handleFunctions.CollectionAPI.CreateCollection,
		},
		{
			"RemoveFromCollection",
			http.MethodDelete,
			"/Collections/:collectionId/Items",
			handleFunctions.CollectionAPI.RemoveFromCollection,
		},
		{
			"GetConfiguration",
			http.MethodGet,
			"/System/Configuration",
			handleFunctions.ConfigurationAPI.GetConfiguration,
		},
		{
			"GetDefaultMetadataOptions",
			http.MethodGet,
			"/System/Configuration/MetadataOptions/Default",
			handleFunctions.ConfigurationAPI.GetDefaultMetadataOptions,
		},
		{
			"GetNamedConfiguration",
			http.MethodGet,
			"/System/Configuration/:key",
			handleFunctions.ConfigurationAPI.GetNamedConfiguration,
		},
		{
			"UpdateConfiguration",
			http.MethodPost,
			"/System/Configuration",
			handleFunctions.ConfigurationAPI.UpdateConfiguration,
		},
		{
			"UpdateMediaEncoderPath",
			http.MethodPost,
			"/System/MediaEncoder/Path",
			handleFunctions.ConfigurationAPI.UpdateMediaEncoderPath,
		},
		{
			"UpdateNamedConfiguration",
			http.MethodPost,
			"/System/Configuration/:key",
			handleFunctions.ConfigurationAPI.UpdateNamedConfiguration,
		},
		{
			"GetConfigurationPages",
			http.MethodGet,
			"/web/ConfigurationPages",
			handleFunctions.DashboardAPI.GetConfigurationPages,
		},
		{
			"GetDashboardConfigurationPage",
			http.MethodGet,
			"/web/ConfigurationPage",
			handleFunctions.DashboardAPI.GetDashboardConfigurationPage,
		},
		{
			"DeleteDevice",
			http.MethodDelete,
			"/Devices",
			handleFunctions.DevicesAPI.DeleteDevice,
		},
		{
			"GetDeviceInfo",
			http.MethodGet,
			"/Devices/Info",
			handleFunctions.DevicesAPI.GetDeviceInfo,
		},
		{
			"GetDeviceOptions",
			http.MethodGet,
			"/Devices/Options",
			handleFunctions.DevicesAPI.GetDeviceOptions,
		},
		{
			"GetDevices",
			http.MethodGet,
			"/Devices",
			handleFunctions.DevicesAPI.GetDevices,
		},
		{
			"UpdateDeviceOptions",
			http.MethodPost,
			"/Devices/Options",
			handleFunctions.DevicesAPI.UpdateDeviceOptions,
		},
		{
			"GetDisplayPreferences",
			http.MethodGet,
			"/DisplayPreferences/:displayPreferencesId",
			handleFunctions.DisplayPreferencesAPI.GetDisplayPreferences,
		},
		{
			"UpdateDisplayPreferences",
			http.MethodPost,
			"/DisplayPreferences/:displayPreferencesId",
			handleFunctions.DisplayPreferencesAPI.UpdateDisplayPreferences,
		},
		{
			"CreateProfile",
			http.MethodPost,
			"/Dlna/Profiles",
			handleFunctions.DlnaAPI.CreateProfile,
		},
		{
			"DeleteProfile",
			http.MethodDelete,
			"/Dlna/Profiles/:profileId",
			handleFunctions.DlnaAPI.DeleteProfile,
		},
		{
			"GetDefaultProfile",
			http.MethodGet,
			"/Dlna/Profiles/Default",
			handleFunctions.DlnaAPI.GetDefaultProfile,
		},
		{
			"GetProfile",
			http.MethodGet,
			"/Dlna/Profiles/:profileId",
			handleFunctions.DlnaAPI.GetProfile,
		},
		{
			"GetProfileInfos",
			http.MethodGet,
			"/Dlna/ProfileInfos",
			handleFunctions.DlnaAPI.GetProfileInfos,
		},
		{
			"UpdateProfile",
			http.MethodPost,
			"/Dlna/Profiles/:profileId",
			handleFunctions.DlnaAPI.UpdateProfile,
		},
		{
			"GetConnectionManager",
			http.MethodGet,
			"/Dlna/:serverId/ConnectionManager",
			handleFunctions.DlnaServerAPI.GetConnectionManager,
		},
		{
			"GetConnectionManager2",
			http.MethodGet,
			"/Dlna/:serverId/ConnectionManager/ConnectionManager",
			handleFunctions.DlnaServerAPI.GetConnectionManager2,
		},
		{
			"GetConnectionManager3",
			http.MethodGet,
			"/Dlna/:serverId/ConnectionManager/ConnectionManager.xml",
			handleFunctions.DlnaServerAPI.GetConnectionManager3,
		},
		{
			"GetContentDirectory",
			http.MethodGet,
			"/Dlna/:serverId/ContentDirectory",
			handleFunctions.DlnaServerAPI.GetContentDirectory,
		},
		{
			"GetContentDirectory2",
			http.MethodGet,
			"/Dlna/:serverId/ContentDirectory/ContentDirectory",
			handleFunctions.DlnaServerAPI.GetContentDirectory2,
		},
		{
			"GetContentDirectory3",
			http.MethodGet,
			"/Dlna/:serverId/ContentDirectory/ContentDirectory.xml",
			handleFunctions.DlnaServerAPI.GetContentDirectory3,
		},
		{
			"GetDescriptionXml",
			http.MethodGet,
			"/Dlna/:serverId/description",
			handleFunctions.DlnaServerAPI.GetDescriptionXml,
		},
		{
			"GetDescriptionXml2",
			http.MethodGet,
			"/Dlna/:serverId/description.xml",
			handleFunctions.DlnaServerAPI.GetDescriptionXml2,
		},
		{
			"GetIcon",
			http.MethodGet,
			"/Dlna/icons/:fileName",
			handleFunctions.DlnaServerAPI.GetIcon,
		},
		{
			"GetIconId",
			http.MethodGet,
			"/Dlna/:serverId/icons/:fileName",
			handleFunctions.DlnaServerAPI.GetIconId,
		},
		{
			"GetMediaReceiverRegistrar",
			http.MethodGet,
			"/Dlna/:serverId/MediaReceiverRegistrar",
			handleFunctions.DlnaServerAPI.GetMediaReceiverRegistrar,
		},
		{
			"GetMediaReceiverRegistrar2",
			http.MethodGet,
			"/Dlna/:serverId/MediaReceiverRegistrar/MediaReceiverRegistrar",
			handleFunctions.DlnaServerAPI.GetMediaReceiverRegistrar2,
		},
		{
			"GetMediaReceiverRegistrar3",
			http.MethodGet,
			"/Dlna/:serverId/MediaReceiverRegistrar/MediaReceiverRegistrar.xml",
			handleFunctions.DlnaServerAPI.GetMediaReceiverRegistrar3,
		},
		{
			"ProcessConnectionManagerControlRequest",
			http.MethodPost,
			"/Dlna/:serverId/ConnectionManager/Control",
			handleFunctions.DlnaServerAPI.ProcessConnectionManagerControlRequest,
		},
		{
			"ProcessContentDirectoryControlRequest",
			http.MethodPost,
			"/Dlna/:serverId/ContentDirectory/Control",
			handleFunctions.DlnaServerAPI.ProcessContentDirectoryControlRequest,
		},
		{
			"ProcessMediaReceiverRegistrarControlRequest",
			http.MethodPost,
			"/Dlna/:serverId/MediaReceiverRegistrar/Control",
			handleFunctions.DlnaServerAPI.ProcessMediaReceiverRegistrarControlRequest,
		},
		{
			"GetHlsAudioSegment",
			http.MethodGet,
			"/Audio/:itemId/hls1/:playlistId/:segmentId.:container",
			handleFunctions.DynamicHlsAPI.GetHlsAudioSegment,
		},
		{
			"GetHlsVideoSegment",
			http.MethodGet,
			"/Videos/:itemId/hls1/:playlistId/:segmentId.:container",
			handleFunctions.DynamicHlsAPI.GetHlsVideoSegment,
		},
		{
			"GetMasterHlsAudioPlaylist",
			http.MethodGet,
			"/Audio/:itemId/master.m3u8",
			handleFunctions.DynamicHlsAPI.GetMasterHlsAudioPlaylist,
		},
		{
			"GetMasterHlsVideoPlaylist",
			http.MethodGet,
			"/Videos/:itemId/master.m3u8",
			handleFunctions.DynamicHlsAPI.GetMasterHlsVideoPlaylist,
		},
		{
			"GetVariantHlsAudioPlaylist",
			http.MethodGet,
			"/Audio/:itemId/main.m3u8",
			handleFunctions.DynamicHlsAPI.GetVariantHlsAudioPlaylist,
		},
		{
			"GetVariantHlsVideoPlaylist",
			http.MethodGet,
			"/Videos/:itemId/main.m3u8",
			handleFunctions.DynamicHlsAPI.GetVariantHlsVideoPlaylist,
		},
		{
			"HeadMasterHlsAudioPlaylist",
			http.MethodHead,
			"/Audio/:itemId/master.m3u8",
			handleFunctions.DynamicHlsAPI.HeadMasterHlsAudioPlaylist,
		},
		{
			"HeadMasterHlsVideoPlaylist",
			http.MethodHead,
			"/Videos/:itemId/master.m3u8",
			handleFunctions.DynamicHlsAPI.HeadMasterHlsVideoPlaylist,
		},
		{
			"GetDefaultDirectoryBrowser",
			http.MethodGet,
			"/Environment/DefaultDirectoryBrowser",
			handleFunctions.EnvironmentAPI.GetDefaultDirectoryBrowser,
		},
		{
			"GetDirectoryContents",
			http.MethodGet,
			"/Environment/DirectoryContents",
			handleFunctions.EnvironmentAPI.GetDirectoryContents,
		},
		{
			"GetDrives",
			http.MethodGet,
			"/Environment/Drives",
			handleFunctions.EnvironmentAPI.GetDrives,
		},
		{
			"GetNetworkShares",
			http.MethodGet,
			"/Environment/NetworkShares",
			handleFunctions.EnvironmentAPI.GetNetworkShares,
		},
		{
			"GetParentPath",
			http.MethodGet,
			"/Environment/ParentPath",
			handleFunctions.EnvironmentAPI.GetParentPath,
		},
		{
			"ValidatePath",
			http.MethodPost,
			"/Environment/ValidatePath",
			handleFunctions.EnvironmentAPI.ValidatePath,
		},
		{
			"GetQueryFilters",
			http.MethodGet,
			"/Items/Filters2",
			handleFunctions.FilterAPI.GetQueryFilters,
		},
		{
			"GetQueryFiltersLegacy",
			http.MethodGet,
			"/Items/Filters",
			handleFunctions.FilterAPI.GetQueryFiltersLegacy,
		},
		{
			"GetGenre",
			http.MethodGet,
			"/Genres/:genreName",
			handleFunctions.GenresAPI.GetGenre,
		},
		{
			"GetGenres",
			http.MethodGet,
			"/Genres",
			handleFunctions.GenresAPI.GetGenres,
		},
		{
			"GetHlsAudioSegmentLegacyAac",
			http.MethodGet,
			"/Audio/:itemId/hls/:segmentId/stream.aac",
			handleFunctions.HlsSegmentAPI.GetHlsAudioSegmentLegacyAac,
		},
		{
			"GetHlsAudioSegmentLegacyMp3",
			http.MethodGet,
			"/Audio/:itemId/hls/:segmentId/stream.mp3",
			handleFunctions.HlsSegmentAPI.GetHlsAudioSegmentLegacyMp3,
		},
		{
			"GetHlsPlaylistLegacy",
			http.MethodGet,
			"/Videos/:itemId/hls/:playlistId/stream.m3u8",
			handleFunctions.HlsSegmentAPI.GetHlsPlaylistLegacy,
		},
		{
			"GetHlsVideoSegmentLegacy",
			http.MethodGet,
			"/Videos/:itemId/hls/:playlistId/:segmentId.:segmentContainer",
			handleFunctions.HlsSegmentAPI.GetHlsVideoSegmentLegacy,
		},
		{
			"StopEncodingProcess",
			http.MethodDelete,
			"/Videos/ActiveEncodings",
			handleFunctions.HlsSegmentAPI.StopEncodingProcess,
		},
		{
			"DeleteItemImage",
			http.MethodDelete,
			"/Items/:itemId/Images/:imageType",
			handleFunctions.ImageAPI.DeleteItemImage,
		},
		{
			"DeleteItemImageByIndex",
			http.MethodDelete,
			"/Items/:itemId/Images/:imageType/:imageIndex",
			handleFunctions.ImageAPI.DeleteItemImageByIndex,
		},
		{
			"DeleteUserImage",
			http.MethodDelete,
			"/Users/:userId/Images/:imageType",
			handleFunctions.ImageAPI.DeleteUserImage,
		},
		{
			"DeleteUserImageByIndex",
			http.MethodDelete,
			"/Users/:userId/Images/:imageType/:index",
			handleFunctions.ImageAPI.DeleteUserImageByIndex,
		},
		{
			"GetArtistImage",
			http.MethodGet,
			"/Artists/:name/Images/:imageType/:imageIndex",
			handleFunctions.ImageAPI.GetArtistImage,
		},
		{
			"GetGenreImage",
			http.MethodGet,
			"/Genres/:name/Images/:imageType",
			handleFunctions.ImageAPI.GetGenreImage,
		},
		{
			"GetGenreImageByIndex",
			http.MethodGet,
			"/Genres/:name/Images/:imageType/:imageIndex",
			handleFunctions.ImageAPI.GetGenreImageByIndex,
		},
		{
			"GetItemImage",
			http.MethodGet,
			"/Items/:itemId/Images/:imageType",
			handleFunctions.ImageAPI.GetItemImage,
		},
		{
			"GetItemImage2",
			http.MethodGet,
			"/Items/:itemId/Images/:imageType/:imageIndex/:tag/:format/:maxWidth/:maxHeight/:percentPlayed/:unplayedCount",
			handleFunctions.ImageAPI.GetItemImage2,
		},
		{
			"GetItemImageByIndex",
			http.MethodGet,
			"/Items/:itemId/Images/:imageType/:imageIndex",
			handleFunctions.ImageAPI.GetItemImageByIndex,
		},
		{
			"GetItemImageInfos",
			http.MethodGet,
			"/Items/:itemId/Images",
			handleFunctions.ImageAPI.GetItemImageInfos,
		},
		{
			"GetMusicGenreImage",
			http.MethodGet,
			"/MusicGenres/:name/Images/:imageType",
			handleFunctions.ImageAPI.GetMusicGenreImage,
		},
		{
			"GetMusicGenreImageByIndex",
			http.MethodGet,
			"/MusicGenres/:name/Images/:imageType/:imageIndex",
			handleFunctions.ImageAPI.GetMusicGenreImageByIndex,
		},
		{
			"GetPersonImage",
			http.MethodGet,
			"/Persons/:name/Images/:imageType",
			handleFunctions.ImageAPI.GetPersonImage,
		},
		{
			"GetPersonImageByIndex",
			http.MethodGet,
			"/Persons/:name/Images/:imageType/:imageIndex",
			handleFunctions.ImageAPI.GetPersonImageByIndex,
		},
		{
			"GetStudioImage",
			http.MethodGet,
			"/Studios/:name/Images/:imageType",
			handleFunctions.ImageAPI.GetStudioImage,
		},
		{
			"GetStudioImageByIndex",
			http.MethodGet,
			"/Studios/:name/Images/:imageType/:imageIndex",
			handleFunctions.ImageAPI.GetStudioImageByIndex,
		},
		{
			"GetUserImage",
			http.MethodGet,
			"/Users/:userId/Images/:imageType",
			handleFunctions.ImageAPI.GetUserImage,
		},
		{
			"GetUserImageByIndex",
			http.MethodGet,
			"/Users/:userId/Images/:imageType/:imageIndex",
			handleFunctions.ImageAPI.GetUserImageByIndex,
		},
		{
			"HeadArtistImage",
			http.MethodHead,
			"/Artists/:name/Images/:imageType/:imageIndex",
			handleFunctions.ImageAPI.HeadArtistImage,
		},
		{
			"HeadGenreImage",
			http.MethodHead,
			"/Genres/:name/Images/:imageType",
			handleFunctions.ImageAPI.HeadGenreImage,
		},
		{
			"HeadGenreImageByIndex",
			http.MethodHead,
			"/Genres/:name/Images/:imageType/:imageIndex",
			handleFunctions.ImageAPI.HeadGenreImageByIndex,
		},
		{
			"HeadItemImage",
			http.MethodHead,
			"/Items/:itemId/Images/:imageType",
			handleFunctions.ImageAPI.HeadItemImage,
		},
		{
			"HeadItemImage2",
			http.MethodHead,
			"/Items/:itemId/Images/:imageType/:imageIndex/:tag/:format/:maxWidth/:maxHeight/:percentPlayed/:unplayedCount",
			handleFunctions.ImageAPI.HeadItemImage2,
		},
		{
			"HeadItemImageByIndex",
			http.MethodHead,
			"/Items/:itemId/Images/:imageType/:imageIndex",
			handleFunctions.ImageAPI.HeadItemImageByIndex,
		},
		{
			"HeadMusicGenreImage",
			http.MethodHead,
			"/MusicGenres/:name/Images/:imageType",
			handleFunctions.ImageAPI.HeadMusicGenreImage,
		},
		{
			"HeadMusicGenreImageByIndex",
			http.MethodHead,
			"/MusicGenres/:name/Images/:imageType/:imageIndex",
			handleFunctions.ImageAPI.HeadMusicGenreImageByIndex,
		},
		{
			"HeadPersonImage",
			http.MethodHead,
			"/Persons/:name/Images/:imageType",
			handleFunctions.ImageAPI.HeadPersonImage,
		},
		{
			"HeadPersonImageByIndex",
			http.MethodHead,
			"/Persons/:name/Images/:imageType/:imageIndex",
			handleFunctions.ImageAPI.HeadPersonImageByIndex,
		},
		{
			"HeadStudioImage",
			http.MethodHead,
			"/Studios/:name/Images/:imageType",
			handleFunctions.ImageAPI.HeadStudioImage,
		},
		{
			"HeadStudioImageByIndex",
			http.MethodHead,
			"/Studios/:name/Images/:imageType/:imageIndex",
			handleFunctions.ImageAPI.HeadStudioImageByIndex,
		},
		{
			"HeadUserImage",
			http.MethodHead,
			"/Users/:userId/Images/:imageType",
			handleFunctions.ImageAPI.HeadUserImage,
		},
		{
			"HeadUserImageByIndex",
			http.MethodHead,
			"/Users/:userId/Images/:imageType/:imageIndex",
			handleFunctions.ImageAPI.HeadUserImageByIndex,
		},
		{
			"PostUserImage",
			http.MethodPost,
			"/Users/:userId/Images/:imageType",
			handleFunctions.ImageAPI.PostUserImage,
		},
		{
			"PostUserImageByIndex",
			http.MethodPost,
			"/Users/:userId/Images/:imageType/:index",
			handleFunctions.ImageAPI.PostUserImageByIndex,
		},
		{
			"SetItemImage",
			http.MethodPost,
			"/Items/:itemId/Images/:imageType",
			handleFunctions.ImageAPI.SetItemImage,
		},
		{
			"SetItemImageByIndex",
			http.MethodPost,
			"/Items/:itemId/Images/:imageType/:imageIndex",
			handleFunctions.ImageAPI.SetItemImageByIndex,
		},
		{
			"UpdateItemImageIndex",
			http.MethodPost,
			"/Items/:itemId/Images/:imageType/:imageIndex/Index",
			handleFunctions.ImageAPI.UpdateItemImageIndex,
		},
		{
			"GetGeneralImage",
			http.MethodGet,
			"/Images/General/:name/:type",
			handleFunctions.ImageByNameAPI.GetGeneralImage,
		},
		{
			"GetGeneralImages",
			http.MethodGet,
			"/Images/General",
			handleFunctions.ImageByNameAPI.GetGeneralImages,
		},
		{
			"GetMediaInfoImage",
			http.MethodGet,
			"/Images/MediaInfo/:theme/:name",
			handleFunctions.ImageByNameAPI.GetMediaInfoImage,
		},
		{
			"GetMediaInfoImages",
			http.MethodGet,
			"/Images/MediaInfo",
			handleFunctions.ImageByNameAPI.GetMediaInfoImages,
		},
		{
			"GetRatingImage",
			http.MethodGet,
			"/Images/Ratings/:theme/:name",
			handleFunctions.ImageByNameAPI.GetRatingImage,
		},
		{
			"GetRatingImages",
			http.MethodGet,
			"/Images/Ratings",
			handleFunctions.ImageByNameAPI.GetRatingImages,
		},
		{
			"GetInstantMixFromAlbum",
			http.MethodGet,
			"/Albums/:id/InstantMix",
			handleFunctions.InstantMixAPI.GetInstantMixFromAlbum,
		},
		{
			"GetInstantMixFromArtists",
			http.MethodGet,
			"/Artists/:id/InstantMix",
			handleFunctions.InstantMixAPI.GetInstantMixFromArtists,
		},
		{
			"GetInstantMixFromItem",
			http.MethodGet,
			"/Items/:id/InstantMix",
			handleFunctions.InstantMixAPI.GetInstantMixFromItem,
		},
		{
			"GetInstantMixFromMusicGenre",
			http.MethodGet,
			"/MusicGenres/:name/InstantMix",
			handleFunctions.InstantMixAPI.GetInstantMixFromMusicGenre,
		},
		{
			"GetInstantMixFromMusicGenres",
			http.MethodGet,
			"/MusicGenres/:id/InstantMix",
			handleFunctions.InstantMixAPI.GetInstantMixFromMusicGenres,
		},
		{
			"GetInstantMixFromPlaylist",
			http.MethodGet,
			"/Playlists/:id/InstantMix",
			handleFunctions.InstantMixAPI.GetInstantMixFromPlaylist,
		},
		{
			"GetInstantMixFromSong",
			http.MethodGet,
			"/Songs/:id/InstantMix",
			handleFunctions.InstantMixAPI.GetInstantMixFromSong,
		},
		{
			"ApplySearchCriteria",
			http.MethodPost,
			"/Items/RemoteSearch/Apply/:itemId",
			handleFunctions.ItemLookupAPI.ApplySearchCriteria,
		},
		{
			"GetBookRemoteSearchResults",
			http.MethodPost,
			"/Items/RemoteSearch/Book",
			handleFunctions.ItemLookupAPI.GetBookRemoteSearchResults,
		},
		{
			"GetBoxSetRemoteSearchResults",
			http.MethodPost,
			"/Items/RemoteSearch/BoxSet",
			handleFunctions.ItemLookupAPI.GetBoxSetRemoteSearchResults,
		},
		{
			"GetExternalIdInfos",
			http.MethodGet,
			"/Items/:itemId/ExternalIdInfos",
			handleFunctions.ItemLookupAPI.GetExternalIdInfos,
		},
		{
			"GetMovieRemoteSearchResults",
			http.MethodPost,
			"/Items/RemoteSearch/Movie",
			handleFunctions.ItemLookupAPI.GetMovieRemoteSearchResults,
		},
		{
			"GetMusicAlbumRemoteSearchResults",
			http.MethodPost,
			"/Items/RemoteSearch/MusicAlbum",
			handleFunctions.ItemLookupAPI.GetMusicAlbumRemoteSearchResults,
		},
		{
			"GetMusicArtistRemoteSearchResults",
			http.MethodPost,
			"/Items/RemoteSearch/MusicArtist",
			handleFunctions.ItemLookupAPI.GetMusicArtistRemoteSearchResults,
		},
		{
			"GetMusicVideoRemoteSearchResults",
			http.MethodPost,
			"/Items/RemoteSearch/MusicVideo",
			handleFunctions.ItemLookupAPI.GetMusicVideoRemoteSearchResults,
		},
		{
			"GetPersonRemoteSearchResults",
			http.MethodPost,
			"/Items/RemoteSearch/Person",
			handleFunctions.ItemLookupAPI.GetPersonRemoteSearchResults,
		},
		{
			"GetRemoteSearchImage",
			http.MethodGet,
			"/Items/RemoteSearch/Image",
			handleFunctions.ItemLookupAPI.GetRemoteSearchImage,
		},
		{
			"GetSeriesRemoteSearchResults",
			http.MethodPost,
			"/Items/RemoteSearch/Series",
			handleFunctions.ItemLookupAPI.GetSeriesRemoteSearchResults,
		},
		{
			"GetTrailerRemoteSearchResults",
			http.MethodPost,
			"/Items/RemoteSearch/Trailer",
			handleFunctions.ItemLookupAPI.GetTrailerRemoteSearchResults,
		},
		{
			"Post",
			http.MethodPost,
			"/Items/:itemId/Refresh",
			handleFunctions.ItemRefreshAPI.Post,
		},
		{
			"GetMetadataEditorInfo",
			http.MethodGet,
			"/Items/:itemId/MetadataEditor",
			handleFunctions.ItemUpdateAPI.GetMetadataEditorInfo,
		},
		{
			"UpdateItem",
			http.MethodPost,
			"/Items/:itemId",
			handleFunctions.ItemUpdateAPI.UpdateItem,
		},
		{
			"UpdateItemContentType",
			http.MethodPost,
			"/Items/:itemId/ContentType",
			handleFunctions.ItemUpdateAPI.UpdateItemContentType,
		},
		{
			"GetItems",
			http.MethodGet,
			"/Items",
			handleFunctions.ItemsAPI.GetItems,
		},
		{
			"GetItemsByUserId",
			http.MethodGet,
			"/Users/:userId/Items",
			handleFunctions.ItemsAPI.GetItemsByUserId,
		},
		{
			"GetResumeItems",
			http.MethodGet,
			"/Users/:userId/Items/Resume",
			handleFunctions.ItemsAPI.GetResumeItems,
		},
		{
			"DeleteItem",
			http.MethodDelete,
			"/Items/:itemId",
			handleFunctions.LibraryAPI.DeleteItem,
		},
		{
			"DeleteItems",
			http.MethodDelete,
			"/Items",
			handleFunctions.LibraryAPI.DeleteItems,
		},
		{
			"GetAncestors",
			http.MethodGet,
			"/Items/:itemId/Ancestors",
			handleFunctions.LibraryAPI.GetAncestors,
		},
		{
			"GetCriticReviews",
			http.MethodGet,
			"/Items/:itemId/CriticReviews",
			handleFunctions.LibraryAPI.GetCriticReviews,
		},
		{
			"GetDownload",
			http.MethodGet,
			"/Items/:itemId/Download",
			handleFunctions.LibraryAPI.GetDownload,
		},
		{
			"GetFile",
			http.MethodGet,
			"/Items/:itemId/File",
			handleFunctions.LibraryAPI.GetFile,
		},
		{
			"GetItemCounts",
			http.MethodGet,
			"/Items/Counts",
			handleFunctions.LibraryAPI.GetItemCounts,
		},
		{
			"GetLibraryOptionsInfo",
			http.MethodGet,
			"/Libraries/AvailableOptions",
			handleFunctions.LibraryAPI.GetLibraryOptionsInfo,
		},
		{
			"GetMediaFolders",
			http.MethodGet,
			"/Library/MediaFolders",
			handleFunctions.LibraryAPI.GetMediaFolders,
		},
		{
			"GetPhysicalPaths",
			http.MethodGet,
			"/Library/PhysicalPaths",
			handleFunctions.LibraryAPI.GetPhysicalPaths,
		},
		{
			"GetSimilarAlbums",
			http.MethodGet,
			"/Albums/:itemId/Similar",
			handleFunctions.LibraryAPI.GetSimilarAlbums,
		},
		{
			"GetSimilarArtists",
			http.MethodGet,
			"/Artists/:itemId/Similar",
			handleFunctions.LibraryAPI.GetSimilarArtists,
		},
		{
			"GetSimilarItems",
			http.MethodGet,
			"/Items/:itemId/Similar",
			handleFunctions.LibraryAPI.GetSimilarItems,
		},
		{
			"GetSimilarMovies",
			http.MethodGet,
			"/Movies/:itemId/Similar",
			handleFunctions.LibraryAPI.GetSimilarMovies,
		},
		{
			"GetSimilarShows",
			http.MethodGet,
			"/Shows/:itemId/Similar",
			handleFunctions.LibraryAPI.GetSimilarShows,
		},
		{
			"GetSimilarTrailers",
			http.MethodGet,
			"/Trailers/:itemId/Similar",
			handleFunctions.LibraryAPI.GetSimilarTrailers,
		},
		{
			"GetThemeMedia",
			http.MethodGet,
			"/Items/:itemId/ThemeMedia",
			handleFunctions.LibraryAPI.GetThemeMedia,
		},
		{
			"GetThemeSongs",
			http.MethodGet,
			"/Items/:itemId/ThemeSongs",
			handleFunctions.LibraryAPI.GetThemeSongs,
		},
		{
			"GetThemeVideos",
			http.MethodGet,
			"/Items/:itemId/ThemeVideos",
			handleFunctions.LibraryAPI.GetThemeVideos,
		},
		{
			"PostAddedMovies",
			http.MethodPost,
			"/Library/Movies/Added",
			handleFunctions.LibraryAPI.PostAddedMovies,
		},
		{
			"PostAddedSeries",
			http.MethodPost,
			"/Library/Series/Added",
			handleFunctions.LibraryAPI.PostAddedSeries,
		},
		{
			"PostUpdatedMedia",
			http.MethodPost,
			"/Library/Media/Updated",
			handleFunctions.LibraryAPI.PostUpdatedMedia,
		},
		{
			"PostUpdatedMovies",
			http.MethodPost,
			"/Library/Movies/Updated",
			handleFunctions.LibraryAPI.PostUpdatedMovies,
		},
		{
			"PostUpdatedSeries",
			http.MethodPost,
			"/Library/Series/Updated",
			handleFunctions.LibraryAPI.PostUpdatedSeries,
		},
		{
			"RefreshLibrary",
			http.MethodGet,
			"/Library/Refresh",
			handleFunctions.LibraryAPI.RefreshLibrary,
		},
		{
			"AddMediaPath",
			http.MethodPost,
			"/Library/VirtualFolders/Paths",
			handleFunctions.LibraryStructureAPI.AddMediaPath,
		},
		{
			"AddVirtualFolder",
			http.MethodPost,
			"/Library/VirtualFolders",
			handleFunctions.LibraryStructureAPI.AddVirtualFolder,
		},
		{
			"GetVirtualFolders",
			http.MethodGet,
			"/Library/VirtualFolders",
			handleFunctions.LibraryStructureAPI.GetVirtualFolders,
		},
		{
			"RemoveMediaPath",
			http.MethodDelete,
			"/Library/VirtualFolders/Paths",
			handleFunctions.LibraryStructureAPI.RemoveMediaPath,
		},
		{
			"RemoveVirtualFolder",
			http.MethodDelete,
			"/Library/VirtualFolders",
			handleFunctions.LibraryStructureAPI.RemoveVirtualFolder,
		},
		{
			"RenameVirtualFolder",
			http.MethodPost,
			"/Library/VirtualFolders/Name",
			handleFunctions.LibraryStructureAPI.RenameVirtualFolder,
		},
		{
			"UpdateLibraryOptions",
			http.MethodPost,
			"/Library/VirtualFolders/LibraryOptions",
			handleFunctions.LibraryStructureAPI.UpdateLibraryOptions,
		},
		{
			"UpdateMediaPath",
			http.MethodPost,
			"/Library/VirtualFolders/Paths/Update",
			handleFunctions.LibraryStructureAPI.UpdateMediaPath,
		},
		{
			"AddListingProvider",
			http.MethodPost,
			"/LiveTv/ListingProviders",
			handleFunctions.LiveTvAPI.AddListingProvider,
		},
		{
			"AddTunerHost",
			http.MethodPost,
			"/LiveTv/TunerHosts",
			handleFunctions.LiveTvAPI.AddTunerHost,
		},
		{
			"CancelSeriesTimer",
			http.MethodDelete,
			"/LiveTv/SeriesTimers/:timerId",
			handleFunctions.LiveTvAPI.CancelSeriesTimer,
		},
		{
			"CancelTimer",
			http.MethodDelete,
			"/LiveTv/Timers/:timerId",
			handleFunctions.LiveTvAPI.CancelTimer,
		},
		{
			"CreateSeriesTimer",
			http.MethodPost,
			"/LiveTv/SeriesTimers",
			handleFunctions.LiveTvAPI.CreateSeriesTimer,
		},
		{
			"CreateTimer",
			http.MethodPost,
			"/LiveTv/Timers",
			handleFunctions.LiveTvAPI.CreateTimer,
		},
		{
			"DeleteListingProvider",
			http.MethodDelete,
			"/LiveTv/ListingProviders",
			handleFunctions.LiveTvAPI.DeleteListingProvider,
		},
		{
			"DeleteRecording",
			http.MethodDelete,
			"/LiveTv/Recordings/:recordingId",
			handleFunctions.LiveTvAPI.DeleteRecording,
		},
		{
			"DeleteTunerHost",
			http.MethodDelete,
			"/LiveTv/TunerHosts",
			handleFunctions.LiveTvAPI.DeleteTunerHost,
		},
		{
			"DiscoverTuners",
			http.MethodGet,
			"/LiveTv/Tuners/Discover",
			handleFunctions.LiveTvAPI.DiscoverTuners,
		},
		{
			"DiscvoverTuners",
			http.MethodGet,
			"/LiveTv/Tuners/Discvover",
			handleFunctions.LiveTvAPI.DiscvoverTuners,
		},
		{
			"GetChannel",
			http.MethodGet,
			"/LiveTv/Channels/:channelId",
			handleFunctions.LiveTvAPI.GetChannel,
		},
		{
			"GetChannelMappingOptions",
			http.MethodGet,
			"/LiveTv/ChannelMappingOptions",
			handleFunctions.LiveTvAPI.GetChannelMappingOptions,
		},
		{
			"GetDefaultListingProvider",
			http.MethodGet,
			"/LiveTv/ListingProviders/Default",
			handleFunctions.LiveTvAPI.GetDefaultListingProvider,
		},
		{
			"GetDefaultTimer",
			http.MethodGet,
			"/LiveTv/Timers/Defaults",
			handleFunctions.LiveTvAPI.GetDefaultTimer,
		},
		{
			"GetGuideInfo",
			http.MethodGet,
			"/LiveTv/GuideInfo",
			handleFunctions.LiveTvAPI.GetGuideInfo,
		},
		{
			"GetLineups",
			http.MethodGet,
			"/LiveTv/ListingProviders/Lineups",
			handleFunctions.LiveTvAPI.GetLineups,
		},
		{
			"GetLiveRecordingFile",
			http.MethodGet,
			"/LiveTv/LiveRecordings/:recordingId/stream",
			handleFunctions.LiveTvAPI.GetLiveRecordingFile,
		},
		{
			"GetLiveStreamFile",
			http.MethodGet,
			"/LiveTv/LiveStreamFiles/:streamId/stream.:container",
			handleFunctions.LiveTvAPI.GetLiveStreamFile,
		},
		{
			"GetLiveTvChannels",
			http.MethodGet,
			"/LiveTv/Channels",
			handleFunctions.LiveTvAPI.GetLiveTvChannels,
		},
		{
			"GetLiveTvInfo",
			http.MethodGet,
			"/LiveTv/Info",
			handleFunctions.LiveTvAPI.GetLiveTvInfo,
		},
		{
			"GetLiveTvPrograms",
			http.MethodGet,
			"/LiveTv/Programs",
			handleFunctions.LiveTvAPI.GetLiveTvPrograms,
		},
		{
			"GetProgram",
			http.MethodGet,
			"/LiveTv/Programs/:programId",
			handleFunctions.LiveTvAPI.GetProgram,
		},
		{
			"GetPrograms",
			http.MethodPost,
			"/LiveTv/Programs",
			handleFunctions.LiveTvAPI.GetPrograms,
		},
		{
			"GetRecommendedPrograms",
			http.MethodGet,
			"/LiveTv/Programs/Recommended",
			handleFunctions.LiveTvAPI.GetRecommendedPrograms,
		},
		{
			"GetRecording",
			http.MethodGet,
			"/LiveTv/Recordings/:recordingId",
			handleFunctions.LiveTvAPI.GetRecording,
		},
		{
			"GetRecordingFolders",
			http.MethodGet,
			"/LiveTv/Recordings/Folders",
			handleFunctions.LiveTvAPI.GetRecordingFolders,
		},
		{
			"GetRecordingGroup",
			http.MethodGet,
			"/LiveTv/Recordings/Groups/:groupId",
			handleFunctions.LiveTvAPI.GetRecordingGroup,
		},
		{
			"GetRecordingGroups",
			http.MethodGet,
			"/LiveTv/Recordings/Groups",
			handleFunctions.LiveTvAPI.GetRecordingGroups,
		},
		{
			"GetRecordings",
			http.MethodGet,
			"/LiveTv/Recordings",
			handleFunctions.LiveTvAPI.GetRecordings,
		},
		{
			"GetRecordingsSeries",
			http.MethodGet,
			"/LiveTv/Recordings/Series",
			handleFunctions.LiveTvAPI.GetRecordingsSeries,
		},
		{
			"GetSchedulesDirectCountries",
			http.MethodGet,
			"/LiveTv/ListingProviders/SchedulesDirect/Countries",
			handleFunctions.LiveTvAPI.GetSchedulesDirectCountries,
		},
		{
			"GetSeriesTimer",
			http.MethodGet,
			"/LiveTv/SeriesTimers/:timerId",
			handleFunctions.LiveTvAPI.GetSeriesTimer,
		},
		{
			"GetSeriesTimers",
			http.MethodGet,
			"/LiveTv/SeriesTimers",
			handleFunctions.LiveTvAPI.GetSeriesTimers,
		},
		{
			"GetTimer",
			http.MethodGet,
			"/LiveTv/Timers/:timerId",
			handleFunctions.LiveTvAPI.GetTimer,
		},
		{
			"GetTimers",
			http.MethodGet,
			"/LiveTv/Timers",
			handleFunctions.LiveTvAPI.GetTimers,
		},
		{
			"GetTunerHostTypes",
			http.MethodGet,
			"/LiveTv/TunerHosts/Types",
			handleFunctions.LiveTvAPI.GetTunerHostTypes,
		},
		{
			"ResetTuner",
			http.MethodPost,
			"/LiveTv/Tuners/:tunerId/Reset",
			handleFunctions.LiveTvAPI.ResetTuner,
		},
		{
			"SetChannelMapping",
			http.MethodPost,
			"/LiveTv/ChannelMappings",
			handleFunctions.LiveTvAPI.SetChannelMapping,
		},
		{
			"UpdateSeriesTimer",
			http.MethodPost,
			"/LiveTv/SeriesTimers/:timerId",
			handleFunctions.LiveTvAPI.UpdateSeriesTimer,
		},
		{
			"UpdateTimer",
			http.MethodPost,
			"/LiveTv/Timers/:timerId",
			handleFunctions.LiveTvAPI.UpdateTimer,
		},
		{
			"GetCountries",
			http.MethodGet,
			"/Localization/Countries",
			handleFunctions.LocalizationAPI.GetCountries,
		},
		{
			"GetCultures",
			http.MethodGet,
			"/Localization/Cultures",
			handleFunctions.LocalizationAPI.GetCultures,
		},
		{
			"GetLocalizationOptions",
			http.MethodGet,
			"/Localization/Options",
			handleFunctions.LocalizationAPI.GetLocalizationOptions,
		},
		{
			"GetParentalRatings",
			http.MethodGet,
			"/Localization/ParentalRatings",
			handleFunctions.LocalizationAPI.GetParentalRatings,
		},
		{
			"CloseLiveStream",
			http.MethodPost,
			"/LiveStreams/Close",
			handleFunctions.MediaInfoAPI.CloseLiveStream,
		},
		{
			"GetBitrateTestBytes",
			http.MethodGet,
			"/Playback/BitrateTest",
			handleFunctions.MediaInfoAPI.GetBitrateTestBytes,
		},
		{
			"GetPlaybackInfo",
			http.MethodGet,
			"/Items/:itemId/PlaybackInfo",
			handleFunctions.MediaInfoAPI.GetPlaybackInfo,
		},
		{
			"GetPostedPlaybackInfo",
			http.MethodPost,
			"/Items/:itemId/PlaybackInfo",
			handleFunctions.MediaInfoAPI.GetPostedPlaybackInfo,
		},
		{
			"OpenLiveStream",
			http.MethodPost,
			"/LiveStreams/Open",
			handleFunctions.MediaInfoAPI.OpenLiveStream,
		},
		{
			"GetMovieRecommendations",
			http.MethodGet,
			"/Movies/Recommendations",
			handleFunctions.MoviesAPI.GetMovieRecommendations,
		},
		{
			"GetMusicGenre",
			http.MethodGet,
			"/MusicGenres/:genreName",
			handleFunctions.MusicGenresAPI.GetMusicGenre,
		},
		{
			"GetMusicGenres",
			http.MethodGet,
			"/MusicGenres",
			handleFunctions.MusicGenresAPI.GetMusicGenres,
		},
		{
			"CreateAdminNotification",
			http.MethodPost,
			"/Notifications/Admin",
			handleFunctions.NotificationsAPI.CreateAdminNotification,
		},
		{
			"GetNotificationServices",
			http.MethodGet,
			"/Notifications/Services",
			handleFunctions.NotificationsAPI.GetNotificationServices,
		},
		{
			"GetNotificationTypes",
			http.MethodGet,
			"/Notifications/Types",
			handleFunctions.NotificationsAPI.GetNotificationTypes,
		},
		{
			"GetNotifications",
			http.MethodGet,
			"/Notifications/:userId",
			handleFunctions.NotificationsAPI.GetNotifications,
		},
		{
			"GetNotificationsSummary",
			http.MethodGet,
			"/Notifications/:userId/Summary",
			handleFunctions.NotificationsAPI.GetNotificationsSummary,
		},
		{
			"SetRead",
			http.MethodPost,
			"/Notifications/:userId/Read",
			handleFunctions.NotificationsAPI.SetRead,
		},
		{
			"SetUnread",
			http.MethodPost,
			"/Notifications/:userId/Unread",
			handleFunctions.NotificationsAPI.SetUnread,
		},
		{
			"CancelPackageInstallation",
			http.MethodDelete,
			"/Packages/Installing/:packageId",
			handleFunctions.PackageAPI.CancelPackageInstallation,
		},
		{
			"GetPackageInfo",
			http.MethodGet,
			"/Packages/:name",
			handleFunctions.PackageAPI.GetPackageInfo,
		},
		{
			"GetPackages",
			http.MethodGet,
			"/Packages",
			handleFunctions.PackageAPI.GetPackages,
		},
		{
			"GetRepositories",
			http.MethodGet,
			"/Repositories",
			handleFunctions.PackageAPI.GetRepositories,
		},
		{
			"InstallPackage",
			http.MethodPost,
			"/Packages/Installed/:name",
			handleFunctions.PackageAPI.InstallPackage,
		},
		{
			"SetRepositories",
			http.MethodPost,
			"/Repositories",
			handleFunctions.PackageAPI.SetRepositories,
		},
		{
			"GetPerson",
			http.MethodGet,
			"/Persons/:name",
			handleFunctions.PersonsAPI.GetPerson,
		},
		{
			"GetPersons",
			http.MethodGet,
			"/Persons",
			handleFunctions.PersonsAPI.GetPersons,
		},
		{
			"AddToPlaylist",
			http.MethodPost,
			"/Playlists/:playlistId/Items",
			handleFunctions.PlaylistsAPI.AddToPlaylist,
		},
		{
			"CreatePlaylist",
			http.MethodPost,
			"/Playlists",
			handleFunctions.PlaylistsAPI.CreatePlaylist,
		},
		{
			"GetPlaylistItems",
			http.MethodGet,
			"/Playlists/:playlistId/Items",
			handleFunctions.PlaylistsAPI.GetPlaylistItems,
		},
		{
			"MoveItem",
			http.MethodPost,
			"/Playlists/:playlistId/Items/:itemId/Move/:newIndex",
			handleFunctions.PlaylistsAPI.MoveItem,
		},
		{
			"RemoveFromPlaylist",
			http.MethodDelete,
			"/Playlists/:playlistId/Items",
			handleFunctions.PlaylistsAPI.RemoveFromPlaylist,
		},
		{
			"MarkPlayedItem",
			http.MethodPost,
			"/Users/:userId/PlayedItems/:itemId",
			handleFunctions.PlaystateAPI.MarkPlayedItem,
		},
		{
			"MarkUnplayedItem",
			http.MethodDelete,
			"/Users/:userId/PlayedItems/:itemId",
			handleFunctions.PlaystateAPI.MarkUnplayedItem,
		},
		{
			"OnPlaybackProgress",
			http.MethodPost,
			"/Users/:userId/PlayingItems/:itemId/Progress",
			handleFunctions.PlaystateAPI.OnPlaybackProgress,
		},
		{
			"OnPlaybackStart",
			http.MethodPost,
			"/Users/:userId/PlayingItems/:itemId",
			handleFunctions.PlaystateAPI.OnPlaybackStart,
		},
		{
			"OnPlaybackStopped",
			http.MethodDelete,
			"/Users/:userId/PlayingItems/:itemId",
			handleFunctions.PlaystateAPI.OnPlaybackStopped,
		},
		{
			"PingPlaybackSession",
			http.MethodPost,
			"/Sessions/Playing/Ping",
			handleFunctions.PlaystateAPI.PingPlaybackSession,
		},
		{
			"ReportPlaybackProgress",
			http.MethodPost,
			"/Sessions/Playing/Progress",
			handleFunctions.PlaystateAPI.ReportPlaybackProgress,
		},
		{
			"ReportPlaybackStart",
			http.MethodPost,
			"/Sessions/Playing",
			handleFunctions.PlaystateAPI.ReportPlaybackStart,
		},
		{
			"ReportPlaybackStopped",
			http.MethodPost,
			"/Sessions/Playing/Stopped",
			handleFunctions.PlaystateAPI.ReportPlaybackStopped,
		},
		{
			"DisablePlugin",
			http.MethodPost,
			"/Plugins/:pluginId/:version/Disable",
			handleFunctions.PluginsAPI.DisablePlugin,
		},
		{
			"EnablePlugin",
			http.MethodPost,
			"/Plugins/:pluginId/:version/Enable",
			handleFunctions.PluginsAPI.EnablePlugin,
		},
		{
			"GetPluginConfiguration",
			http.MethodGet,
			"/Plugins/:pluginId/Configuration",
			handleFunctions.PluginsAPI.GetPluginConfiguration,
		},
		{
			"GetPluginImage",
			http.MethodGet,
			"/Plugins/:pluginId/:version/Image",
			handleFunctions.PluginsAPI.GetPluginImage,
		},
		{
			"GetPluginManifest",
			http.MethodPost,
			"/Plugins/:pluginId/Manifest",
			handleFunctions.PluginsAPI.GetPluginManifest,
		},
		{
			"GetPlugins",
			http.MethodGet,
			"/Plugins",
			handleFunctions.PluginsAPI.GetPlugins,
		},
		{
			"UninstallPlugin",
			http.MethodDelete,
			"/Plugins/:pluginId",
			handleFunctions.PluginsAPI.UninstallPlugin,
		},
		{
			"UninstallPluginByVersion",
			http.MethodDelete,
			"/Plugins/:pluginId/:version",
			handleFunctions.PluginsAPI.UninstallPluginByVersion,
		},
		{
			"UpdatePluginConfiguration",
			http.MethodPost,
			"/Plugins/:pluginId/Configuration",
			handleFunctions.PluginsAPI.UpdatePluginConfiguration,
		},
		{
			"UpdatePluginSecurityInfo",
			http.MethodPost,
			"/Plugins/SecurityInfo",
			handleFunctions.PluginsAPI.UpdatePluginSecurityInfo,
		},
		{
			"Activate",
			http.MethodPost,
			"/QuickConnect/Activate",
			handleFunctions.QuickConnectAPI.Activate,
		},
		{
			"Authorize",
			http.MethodPost,
			"/QuickConnect/Authorize",
			handleFunctions.QuickConnectAPI.Authorize,
		},
		{
			"Available",
			http.MethodPost,
			"/QuickConnect/Available",
			handleFunctions.QuickConnectAPI.Available,
		},
		{
			"Connect",
			http.MethodGet,
			"/QuickConnect/Connect",
			handleFunctions.QuickConnectAPI.Connect,
		},
		{
			"Deauthorize",
			http.MethodPost,
			"/QuickConnect/Deauthorize",
			handleFunctions.QuickConnectAPI.Deauthorize,
		},
		{
			"GetStatus",
			http.MethodGet,
			"/QuickConnect/Status",
			handleFunctions.QuickConnectAPI.GetStatus,
		},
		{
			"Initiate",
			http.MethodGet,
			"/QuickConnect/Initiate",
			handleFunctions.QuickConnectAPI.Initiate,
		},
		{
			"DownloadRemoteImage",
			http.MethodPost,
			"/Items/:itemId/RemoteImages/Download",
			handleFunctions.RemoteImageAPI.DownloadRemoteImage,
		},
		{
			"GetRemoteImage",
			http.MethodGet,
			"/Images/Remote",
			handleFunctions.RemoteImageAPI.GetRemoteImage,
		},
		{
			"GetRemoteImageProviders",
			http.MethodGet,
			"/Items/:itemId/RemoteImages/Providers",
			handleFunctions.RemoteImageAPI.GetRemoteImageProviders,
		},
		{
			"GetRemoteImages",
			http.MethodGet,
			"/Items/:itemId/RemoteImages",
			handleFunctions.RemoteImageAPI.GetRemoteImages,
		},
		{
			"GetTask",
			http.MethodGet,
			"/ScheduledTasks/:taskId",
			handleFunctions.ScheduledTasksAPI.GetTask,
		},
		{
			"GetTasks",
			http.MethodGet,
			"/ScheduledTasks",
			handleFunctions.ScheduledTasksAPI.GetTasks,
		},
		{
			"StartTask",
			http.MethodPost,
			"/ScheduledTasks/Running/:taskId",
			handleFunctions.ScheduledTasksAPI.StartTask,
		},
		{
			"StopTask",
			http.MethodDelete,
			"/ScheduledTasks/Running/:taskId",
			handleFunctions.ScheduledTasksAPI.StopTask,
		},
		{
			"UpdateTask",
			http.MethodPost,
			"/ScheduledTasks/:taskId/Triggers",
			handleFunctions.ScheduledTasksAPI.UpdateTask,
		},
		{
			"Get",
			http.MethodGet,
			"/Search/Hints",
			handleFunctions.SearchAPI.Get,
		},
		{
			"AddUserToSession",
			http.MethodPost,
			"/Sessions/:sessionId/User/:userId",
			handleFunctions.SessionAPI.AddUserToSession,
		},
		{
			"DisplayContent",
			http.MethodPost,
			"/Sessions/:sessionId/Viewing",
			handleFunctions.SessionAPI.DisplayContent,
		},
		{
			"GetAuthProviders",
			http.MethodGet,
			"/Auth/Providers",
			handleFunctions.SessionAPI.GetAuthProviders,
		},
		{
			"GetPasswordResetProviders",
			http.MethodGet,
			"/Auth/PasswordResetProviders",
			handleFunctions.SessionAPI.GetPasswordResetProviders,
		},
		{
			"GetSessions",
			http.MethodGet,
			"/Sessions",
			handleFunctions.SessionAPI.GetSessions,
		},
		{
			"Play",
			http.MethodPost,
			"/Sessions/:sessionId/Playing",
			handleFunctions.SessionAPI.Play,
		},
		{
			"PostCapabilities",
			http.MethodPost,
			"/Sessions/Capabilities",
			handleFunctions.SessionAPI.PostCapabilities,
		},
		{
			"PostFullCapabilities",
			http.MethodPost,
			"/Sessions/Capabilities/Full",
			handleFunctions.SessionAPI.PostFullCapabilities,
		},
		{
			"RemoveUserFromSession",
			http.MethodDelete,
			"/Sessions/:sessionId/User/:userId",
			handleFunctions.SessionAPI.RemoveUserFromSession,
		},
		{
			"ReportSessionEnded",
			http.MethodPost,
			"/Sessions/Logout",
			handleFunctions.SessionAPI.ReportSessionEnded,
		},
		{
			"ReportViewing",
			http.MethodPost,
			"/Sessions/Viewing",
			handleFunctions.SessionAPI.ReportViewing,
		},
		{
			"SendFullGeneralCommand",
			http.MethodPost,
			"/Sessions/:sessionId/Command",
			handleFunctions.SessionAPI.SendFullGeneralCommand,
		},
		{
			"SendGeneralCommand",
			http.MethodPost,
			"/Sessions/:sessionId/Command/:command",
			handleFunctions.SessionAPI.SendGeneralCommand,
		},
		{
			"SendMessageCommand",
			http.MethodPost,
			"/Sessions/:sessionId/Message",
			handleFunctions.SessionAPI.SendMessageCommand,
		},
		{
			"SendPlaystateCommand",
			http.MethodPost,
			"/Sessions/:sessionId/Playing/:command",
			handleFunctions.SessionAPI.SendPlaystateCommand,
		},
		{
			"SendSystemCommand",
			http.MethodPost,
			"/Sessions/:sessionId/System/:command",
			handleFunctions.SessionAPI.SendSystemCommand,
		},
		{
			"CompleteWizard",
			http.MethodPost,
			"/Startup/Complete",
			handleFunctions.StartupAPI.CompleteWizard,
		},
		{
			"GetFirstUser",
			http.MethodGet,
			"/Startup/User",
			handleFunctions.StartupAPI.GetFirstUser,
		},
		{
			"GetFirstUser2",
			http.MethodGet,
			"/Startup/FirstUser",
			handleFunctions.StartupAPI.GetFirstUser2,
		},
		{
			"GetStartupConfiguration",
			http.MethodGet,
			"/Startup/Configuration",
			handleFunctions.StartupAPI.GetStartupConfiguration,
		},
		{
			"SetRemoteAccess",
			http.MethodPost,
			"/Startup/RemoteAccess",
			handleFunctions.StartupAPI.SetRemoteAccess,
		},
		{
			"UpdateInitialConfiguration",
			http.MethodPost,
			"/Startup/Configuration",
			handleFunctions.StartupAPI.UpdateInitialConfiguration,
		},
		{
			"UpdateStartupUser",
			http.MethodPost,
			"/Startup/User",
			handleFunctions.StartupAPI.UpdateStartupUser,
		},
		{
			"GetStudio",
			http.MethodGet,
			"/Studios/:name",
			handleFunctions.StudiosAPI.GetStudio,
		},
		{
			"GetStudios",
			http.MethodGet,
			"/Studios",
			handleFunctions.StudiosAPI.GetStudios,
		},
		{
			"DeleteSubtitle",
			http.MethodDelete,
			"/Videos/:itemId/Subtitles/:index",
			handleFunctions.SubtitleAPI.DeleteSubtitle,
		},
		{
			"DownloadRemoteSubtitles",
			http.MethodPost,
			"/Items/:itemId/RemoteSearch/Subtitles/:subtitleId",
			handleFunctions.SubtitleAPI.DownloadRemoteSubtitles,
		},
		{
			"GetFallbackFont",
			http.MethodGet,
			"/FallbackFont/Fonts/:name",
			handleFunctions.SubtitleAPI.GetFallbackFont,
		},
		{
			"GetFallbackFontList",
			http.MethodGet,
			"/FallbackFont/Fonts",
			handleFunctions.SubtitleAPI.GetFallbackFontList,
		},
		{
			"GetRemoteSubtitles",
			http.MethodGet,
			"/Providers/Subtitles/Subtitles/:id",
			handleFunctions.SubtitleAPI.GetRemoteSubtitles,
		},
		{
			"GetSubtitle",
			http.MethodGet,
			"/Videos/:itemId/:mediaSourceId/Subtitles/:index/Stream.:format",
			handleFunctions.SubtitleAPI.GetSubtitle,
		},
		{
			"GetSubtitlePlaylist",
			http.MethodGet,
			"/Videos/:itemId/:mediaSourceId/Subtitles/:index/subtitles.m3u8",
			handleFunctions.SubtitleAPI.GetSubtitlePlaylist,
		},
		{
			"GetSubtitleWithTicks",
			http.MethodGet,
			"/Videos/:itemId/:mediaSourceId/Subtitles/:index/:startPositionTicks/Stream.:format",
			handleFunctions.SubtitleAPI.GetSubtitleWithTicks,
		},
		{
			"SearchRemoteSubtitles",
			http.MethodGet,
			"/Items/:itemId/RemoteSearch/Subtitles/:language",
			handleFunctions.SubtitleAPI.SearchRemoteSubtitles,
		},
		{
			"UploadSubtitle",
			http.MethodPost,
			"/Videos/:itemId/Subtitles",
			handleFunctions.SubtitleAPI.UploadSubtitle,
		},
		{
			"GetSuggestions",
			http.MethodGet,
			"/Users/:userId/Suggestions",
			handleFunctions.SuggestionsAPI.GetSuggestions,
		},
		{
			"SyncPlayBuffering",
			http.MethodPost,
			"/SyncPlay/Buffering",
			handleFunctions.SyncPlayAPI.SyncPlayBuffering,
		},
		{
			"SyncPlayCreateGroup",
			http.MethodPost,
			"/SyncPlay/New",
			handleFunctions.SyncPlayAPI.SyncPlayCreateGroup,
		},
		{
			"SyncPlayGetGroups",
			http.MethodGet,
			"/SyncPlay/List",
			handleFunctions.SyncPlayAPI.SyncPlayGetGroups,
		},
		{
			"SyncPlayJoinGroup",
			http.MethodPost,
			"/SyncPlay/Join",
			handleFunctions.SyncPlayAPI.SyncPlayJoinGroup,
		},
		{
			"SyncPlayLeaveGroup",
			http.MethodPost,
			"/SyncPlay/Leave",
			handleFunctions.SyncPlayAPI.SyncPlayLeaveGroup,
		},
		{
			"SyncPlayMovePlaylistItem",
			http.MethodPost,
			"/SyncPlay/MovePlaylistItem",
			handleFunctions.SyncPlayAPI.SyncPlayMovePlaylistItem,
		},
		{
			"SyncPlayNextItem",
			http.MethodPost,
			"/SyncPlay/NextItem",
			handleFunctions.SyncPlayAPI.SyncPlayNextItem,
		},
		{
			"SyncPlayPause",
			http.MethodPost,
			"/SyncPlay/Pause",
			handleFunctions.SyncPlayAPI.SyncPlayPause,
		},
		{
			"SyncPlayPing",
			http.MethodPost,
			"/SyncPlay/Ping",
			handleFunctions.SyncPlayAPI.SyncPlayPing,
		},
		{
			"SyncPlayPreviousItem",
			http.MethodPost,
			"/SyncPlay/PreviousItem",
			handleFunctions.SyncPlayAPI.SyncPlayPreviousItem,
		},
		{
			"SyncPlayQueue",
			http.MethodPost,
			"/SyncPlay/Queue",
			handleFunctions.SyncPlayAPI.SyncPlayQueue,
		},
		{
			"SyncPlayReady",
			http.MethodPost,
			"/SyncPlay/Ready",
			handleFunctions.SyncPlayAPI.SyncPlayReady,
		},
		{
			"SyncPlayRemoveFromPlaylist",
			http.MethodPost,
			"/SyncPlay/RemoveFromPlaylist",
			handleFunctions.SyncPlayAPI.SyncPlayRemoveFromPlaylist,
		},
		{
			"SyncPlaySeek",
			http.MethodPost,
			"/SyncPlay/Seek",
			handleFunctions.SyncPlayAPI.SyncPlaySeek,
		},
		{
			"SyncPlaySetIgnoreWait",
			http.MethodPost,
			"/SyncPlay/SetIgnoreWait",
			handleFunctions.SyncPlayAPI.SyncPlaySetIgnoreWait,
		},
		{
			"SyncPlaySetNewQueue",
			http.MethodPost,
			"/SyncPlay/SetNewQueue",
			handleFunctions.SyncPlayAPI.SyncPlaySetNewQueue,
		},
		{
			"SyncPlaySetPlaylistItem",
			http.MethodPost,
			"/SyncPlay/SetPlaylistItem",
			handleFunctions.SyncPlayAPI.SyncPlaySetPlaylistItem,
		},
		{
			"SyncPlaySetRepeatMode",
			http.MethodPost,
			"/SyncPlay/SetRepeatMode",
			handleFunctions.SyncPlayAPI.SyncPlaySetRepeatMode,
		},
		{
			"SyncPlaySetShuffleMode",
			http.MethodPost,
			"/SyncPlay/SetShuffleMode",
			handleFunctions.SyncPlayAPI.SyncPlaySetShuffleMode,
		},
		{
			"SyncPlayStop",
			http.MethodPost,
			"/SyncPlay/Stop",
			handleFunctions.SyncPlayAPI.SyncPlayStop,
		},
		{
			"SyncPlayUnpause",
			http.MethodPost,
			"/SyncPlay/Unpause",
			handleFunctions.SyncPlayAPI.SyncPlayUnpause,
		},
		{
			"GetEndpointInfo",
			http.MethodGet,
			"/System/Endpoint",
			handleFunctions.SystemAPI.GetEndpointInfo,
		},
		{
			"GetLogFile",
			http.MethodGet,
			"/System/Logs/Log",
			handleFunctions.SystemAPI.GetLogFile,
		},
		{
			"GetPingSystem",
			http.MethodGet,
			"/System/Ping",
			handleFunctions.SystemAPI.GetPingSystem,
		},
		{
			"GetPublicSystemInfo",
			http.MethodGet,
			"/System/Info/Public",
			handleFunctions.SystemAPI.GetPublicSystemInfo,
		},
		{
			"GetServerLogs",
			http.MethodGet,
			"/System/Logs",
			handleFunctions.SystemAPI.GetServerLogs,
		},
		{
			"GetSystemInfo",
			http.MethodGet,
			"/System/Info",
			handleFunctions.SystemAPI.GetSystemInfo,
		},
		{
			"GetWakeOnLanInfo",
			http.MethodGet,
			"/System/WakeOnLanInfo",
			handleFunctions.SystemAPI.GetWakeOnLanInfo,
		},
		{
			"PostPingSystem",
			http.MethodPost,
			"/System/Ping",
			handleFunctions.SystemAPI.PostPingSystem,
		},
		{
			"RestartApplication",
			http.MethodPost,
			"/System/Restart",
			handleFunctions.SystemAPI.RestartApplication,
		},
		{
			"ShutdownApplication",
			http.MethodPost,
			"/System/Shutdown",
			handleFunctions.SystemAPI.ShutdownApplication,
		},
		{
			"GetUtcTime",
			http.MethodGet,
			"/GetUtcTime",
			handleFunctions.TimeSyncAPI.GetUtcTime,
		},
		{
			"GetTrailers",
			http.MethodGet,
			"/Trailers",
			handleFunctions.TrailersAPI.GetTrailers,
		},
		{
			"GetEpisodes",
			http.MethodGet,
			"/Shows/:seriesId/Episodes",
			handleFunctions.TvShowsAPI.GetEpisodes,
		},
		{
			"GetNextUp",
			http.MethodGet,
			"/Shows/NextUp",
			handleFunctions.TvShowsAPI.GetNextUp,
		},
		{
			"GetSeasons",
			http.MethodGet,
			"/Shows/:seriesId/Seasons",
			handleFunctions.TvShowsAPI.GetSeasons,
		},
		{
			"GetUpcomingEpisodes",
			http.MethodGet,
			"/Shows/Upcoming",
			handleFunctions.TvShowsAPI.GetUpcomingEpisodes,
		},
		{
			"GetUniversalAudioStream",
			http.MethodGet,
			"/Audio/:itemId/universal",
			handleFunctions.UniversalAudioAPI.GetUniversalAudioStream,
		},
		{
			"HeadUniversalAudioStream",
			http.MethodHead,
			"/Audio/:itemId/universal",
			handleFunctions.UniversalAudioAPI.HeadUniversalAudioStream,
		},
		{
			"AuthenticateUser",
			http.MethodPost,
			"/Users/:userId/Authenticate",
			handleFunctions.UserAPI.AuthenticateUser,
		},
		{
			"AuthenticateUserByName",
			http.MethodPost,
			"/Users/AuthenticateByName",
			handleFunctions.UserAPI.AuthenticateUserByName,
		},
		{
			"AuthenticateWithQuickConnect",
			http.MethodPost,
			"/Users/AuthenticateWithQuickConnect",
			handleFunctions.UserAPI.AuthenticateWithQuickConnect,
		},
		{
			"CreateUserByName",
			http.MethodPost,
			"/Users/New",
			handleFunctions.UserAPI.CreateUserByName,
		},
		{
			"DeleteUser",
			http.MethodDelete,
			"/Users/:userId",
			handleFunctions.UserAPI.DeleteUser,
		},
		{
			"ForgotPassword",
			http.MethodPost,
			"/Users/ForgotPassword",
			handleFunctions.UserAPI.ForgotPassword,
		},
		{
			"ForgotPasswordPin",
			http.MethodPost,
			"/Users/ForgotPassword/Pin",
			handleFunctions.UserAPI.ForgotPasswordPin,
		},
		{
			"GetCurrentUser",
			http.MethodGet,
			"/Users/Me",
			handleFunctions.UserAPI.GetCurrentUser,
		},
		{
			"GetPublicUsers",
			http.MethodGet,
			"/Users/Public",
			handleFunctions.UserAPI.GetPublicUsers,
		},
		{
			"GetUserById",
			http.MethodGet,
			"/Users/:userId",
			handleFunctions.UserAPI.GetUserById,
		},
		{
			"GetUsers",
			http.MethodGet,
			"/Users",
			handleFunctions.UserAPI.GetUsers,
		},
		{
			"UpdateUser",
			http.MethodPost,
			"/Users/:userId",
			handleFunctions.UserAPI.UpdateUser,
		},
		{
			"UpdateUserConfiguration",
			http.MethodPost,
			"/Users/:userId/Configuration",
			handleFunctions.UserAPI.UpdateUserConfiguration,
		},
		{
			"UpdateUserEasyPassword",
			http.MethodPost,
			"/Users/:userId/EasyPassword",
			handleFunctions.UserAPI.UpdateUserEasyPassword,
		},
		{
			"UpdateUserPassword",
			http.MethodPost,
			"/Users/:userId/Password",
			handleFunctions.UserAPI.UpdateUserPassword,
		},
		{
			"UpdateUserPolicy",
			http.MethodPost,
			"/Users/:userId/Policy",
			handleFunctions.UserAPI.UpdateUserPolicy,
		},
		{
			"DeleteUserItemRating",
			http.MethodDelete,
			"/Users/:userId/Items/:itemId/Rating",
			handleFunctions.UserLibraryAPI.DeleteUserItemRating,
		},
		{
			"GetIntros",
			http.MethodGet,
			"/Users/:userId/Items/:itemId/Intros",
			handleFunctions.UserLibraryAPI.GetIntros,
		},
		{
			"GetItem",
			http.MethodGet,
			"/Users/:userId/Items/:itemId",
			handleFunctions.UserLibraryAPI.GetItem,
		},
		{
			"GetLatestMedia",
			http.MethodGet,
			"/Users/:userId/Items/Latest",
			handleFunctions.UserLibraryAPI.GetLatestMedia,
		},
		{
			"GetLocalTrailers",
			http.MethodGet,
			"/Users/:userId/Items/:itemId/LocalTrailers",
			handleFunctions.UserLibraryAPI.GetLocalTrailers,
		},
		{
			"GetRootFolder",
			http.MethodGet,
			"/Users/:userId/Items/Root",
			handleFunctions.UserLibraryAPI.GetRootFolder,
		},
		{
			"GetSpecialFeatures",
			http.MethodGet,
			"/Users/:userId/Items/:itemId/SpecialFeatures",
			handleFunctions.UserLibraryAPI.GetSpecialFeatures,
		},
		{
			"MarkFavoriteItem",
			http.MethodPost,
			"/Users/:userId/FavoriteItems/:itemId",
			handleFunctions.UserLibraryAPI.MarkFavoriteItem,
		},
		{
			"UnmarkFavoriteItem",
			http.MethodDelete,
			"/Users/:userId/FavoriteItems/:itemId",
			handleFunctions.UserLibraryAPI.UnmarkFavoriteItem,
		},
		{
			"UpdateUserItemRating",
			http.MethodPost,
			"/Users/:userId/Items/:itemId/Rating",
			handleFunctions.UserLibraryAPI.UpdateUserItemRating,
		},
		{
			"GetGroupingOptions",
			http.MethodGet,
			"/Users/:userId/GroupingOptions",
			handleFunctions.UserViewsAPI.GetGroupingOptions,
		},
		{
			"GetUserViews",
			http.MethodGet,
			"/Users/:userId/Views",
			handleFunctions.UserViewsAPI.GetUserViews,
		},
		{
			"GetAttachment",
			http.MethodGet,
			"/Videos/:videoId/:mediaSourceId/Attachments/:index",
			handleFunctions.VideoAttachmentsAPI.GetAttachment,
		},
		{
			"GetLiveHlsStream",
			http.MethodGet,
			"/Videos/:itemId/live.m3u8",
			handleFunctions.VideoHlsAPI.GetLiveHlsStream,
		},
		{
			"DeleteAlternateSources",
			http.MethodDelete,
			"/Videos/:itemId/AlternateSources",
			handleFunctions.VideosAPI.DeleteAlternateSources,
		},
		{
			"GetAdditionalPart",
			http.MethodGet,
			"/Videos/:itemId/AdditionalParts",
			handleFunctions.VideosAPI.GetAdditionalPart,
		},
		{
			"GetVideoStream",
			http.MethodGet,
			"/Videos/:itemId/stream",
			handleFunctions.VideosAPI.GetVideoStream,
		},
		{
			"GetVideoStreamByContainer",
			http.MethodGet,
			"/Videos/:itemId/:stream.:container",
			handleFunctions.VideosAPI.GetVideoStreamByContainer,
		},
		{
			"HeadVideoStream",
			http.MethodHead,
			"/Videos/:itemId/stream",
			handleFunctions.VideosAPI.HeadVideoStream,
		},
		{
			"HeadVideoStreamByContainer",
			http.MethodHead,
			"/Videos/:itemId/:stream.:container",
			handleFunctions.VideosAPI.HeadVideoStreamByContainer,
		},
		{
			"MergeVersions",
			http.MethodPost,
			"/Videos/MergeVersions",
			handleFunctions.VideosAPI.MergeVersions,
		},
		{
			"GetYear",
			http.MethodGet,
			"/Years/:year",
			handleFunctions.YearsAPI.GetYear,
		},
		{
			"GetYears",
			http.MethodGet,
			"/Years",
			handleFunctions.YearsAPI.GetYears,
		},
	}
}
