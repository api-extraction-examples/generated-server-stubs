/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"github.com/gin-gonic/gin"
)

type SyncPlayAPI struct {
}

// Post /SyncPlay/Buffering
// Notify SyncPlay group that member is buffering. 
func (api *SyncPlayAPI) SyncPlayBuffering(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /SyncPlay/New
// Create a new SyncPlay group. 
func (api *SyncPlayAPI) SyncPlayCreateGroup(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /SyncPlay/List
// Gets all SyncPlay groups. 
func (api *SyncPlayAPI) SyncPlayGetGroups(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /SyncPlay/Join
// Join an existing SyncPlay group. 
func (api *SyncPlayAPI) SyncPlayJoinGroup(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /SyncPlay/Leave
// Leave the joined SyncPlay group. 
func (api *SyncPlayAPI) SyncPlayLeaveGroup(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /SyncPlay/MovePlaylistItem
// Request to move an item in the playlist in SyncPlay group. 
func (api *SyncPlayAPI) SyncPlayMovePlaylistItem(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /SyncPlay/NextItem
// Request next item in SyncPlay group. 
func (api *SyncPlayAPI) SyncPlayNextItem(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /SyncPlay/Pause
// Request pause in SyncPlay group. 
func (api *SyncPlayAPI) SyncPlayPause(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /SyncPlay/Ping
// Update session ping. 
func (api *SyncPlayAPI) SyncPlayPing(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /SyncPlay/PreviousItem
// Request previous item in SyncPlay group. 
func (api *SyncPlayAPI) SyncPlayPreviousItem(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /SyncPlay/Queue
// Request to queue items to the playlist of a SyncPlay group. 
func (api *SyncPlayAPI) SyncPlayQueue(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /SyncPlay/Ready
// Notify SyncPlay group that member is ready for playback. 
func (api *SyncPlayAPI) SyncPlayReady(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /SyncPlay/RemoveFromPlaylist
// Request to remove items from the playlist in SyncPlay group. 
func (api *SyncPlayAPI) SyncPlayRemoveFromPlaylist(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /SyncPlay/Seek
// Request seek in SyncPlay group. 
func (api *SyncPlayAPI) SyncPlaySeek(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /SyncPlay/SetIgnoreWait
// Request SyncPlay group to ignore member during group-wait. 
func (api *SyncPlayAPI) SyncPlaySetIgnoreWait(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /SyncPlay/SetNewQueue
// Request to set new playlist in SyncPlay group. 
func (api *SyncPlayAPI) SyncPlaySetNewQueue(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /SyncPlay/SetPlaylistItem
// Request to change playlist item in SyncPlay group. 
func (api *SyncPlayAPI) SyncPlaySetPlaylistItem(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /SyncPlay/SetRepeatMode
// Request to set repeat mode in SyncPlay group. 
func (api *SyncPlayAPI) SyncPlaySetRepeatMode(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /SyncPlay/SetShuffleMode
// Request to set shuffle mode in SyncPlay group. 
func (api *SyncPlayAPI) SyncPlaySetShuffleMode(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /SyncPlay/Stop
// Request stop in SyncPlay group. 
func (api *SyncPlayAPI) SyncPlayStop(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /SyncPlay/Unpause
// Request unpause in SyncPlay group. 
func (api *SyncPlayAPI) SyncPlayUnpause(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

