/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"github.com/gin-gonic/gin"
)

type SystemAPI struct {
}

// Get /System/Endpoint
// Gets information about the request endpoint. 
func (api *SystemAPI) GetEndpointInfo(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /System/Logs/Log
// Gets a log file. 
func (api *SystemAPI) GetLogFile(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /System/Ping
// Pings the system. 
func (api *SystemAPI) GetPingSystem(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /System/Info/Public
// Gets public information about the server. 
func (api *SystemAPI) GetPublicSystemInfo(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /System/Logs
// Gets a list of available server log files. 
func (api *SystemAPI) GetServerLogs(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /System/Info
// Gets information about the server. 
func (api *SystemAPI) GetSystemInfo(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /System/WakeOnLanInfo
// Gets wake on lan information. 
func (api *SystemAPI) GetWakeOnLanInfo(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /System/Ping
// Pings the system. 
func (api *SystemAPI) PostPingSystem(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /System/Restart
// Restarts the application. 
func (api *SystemAPI) RestartApplication(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /System/Shutdown
// Shuts down the application. 
func (api *SystemAPI) ShutdownApplication(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

