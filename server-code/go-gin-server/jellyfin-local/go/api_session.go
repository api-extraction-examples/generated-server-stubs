/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"github.com/gin-gonic/gin"
)

type SessionAPI struct {
}

// Post /Sessions/:sessionId/User/:userId
// Adds an additional user to a session. 
func (api *SessionAPI) AddUserToSession(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /Sessions/:sessionId/Viewing
// Instructs a session to browse to an item or view. 
func (api *SessionAPI) DisplayContent(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /Auth/Providers
// Get all auth providers. 
func (api *SessionAPI) GetAuthProviders(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /Auth/PasswordResetProviders
// Get all password reset providers. 
func (api *SessionAPI) GetPasswordResetProviders(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /Sessions
// Gets a list of sessions. 
func (api *SessionAPI) GetSessions(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /Sessions/:sessionId/Playing
// Instructs a session to play an item. 
func (api *SessionAPI) Play(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /Sessions/Capabilities
// Updates capabilities for a device. 
func (api *SessionAPI) PostCapabilities(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /Sessions/Capabilities/Full
// Updates capabilities for a device. 
func (api *SessionAPI) PostFullCapabilities(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Delete /Sessions/:sessionId/User/:userId
// Removes an additional user from a session. 
func (api *SessionAPI) RemoveUserFromSession(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /Sessions/Logout
// Reports that a session has ended. 
func (api *SessionAPI) ReportSessionEnded(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /Sessions/Viewing
// Reports that a session is viewing an item. 
func (api *SessionAPI) ReportViewing(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /Sessions/:sessionId/Command
// Issues a full general command to a client. 
func (api *SessionAPI) SendFullGeneralCommand(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /Sessions/:sessionId/Command/:command
// Issues a general command to a client. 
func (api *SessionAPI) SendGeneralCommand(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /Sessions/:sessionId/Message
// Issues a command to a client to display a message to the user. 
func (api *SessionAPI) SendMessageCommand(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /Sessions/:sessionId/Playing/:command
// Issues a playstate command to a client. 
func (api *SessionAPI) SendPlaystateCommand(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /Sessions/:sessionId/System/:command
// Issues a system command to a client. 
func (api *SessionAPI) SendSystemCommand(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

