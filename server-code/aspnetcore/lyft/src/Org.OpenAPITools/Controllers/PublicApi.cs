/*
 * Lyft
 *
 * Drive your app to success with Lyft's API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@lyft.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class PublicApiController : ControllerBase
    { 
        /// <summary>
        /// Cost estimates
        /// </summary>
        /// <remarks>Estimate the cost of taking a Lyft between two points. </remarks>
        /// <param name="startLat">Latitude of the starting location</param>
        /// <param name="startLng">Longitude of the starting location</param>
        /// <param name="rideType">ID of a ride type</param>
        /// <param name="endLat">Latitude of the ending location</param>
        /// <param name="endLng">Longitude of the ending location</param>
        /// <response code="200">An object with an array of cost estimates by ride type</response>
        /// <response code="400">The &#39;error&#39; field will be one of the following:  * &#x60;bad_parameter&#x60;: A validation error occurred  * &#x60;no_service_in_area&#x60;: start location is not within a Lyft service area  * &#x60;ridetype_unavailable_in_region&#x60;: ridetype not supported at this start location </response>
        [HttpGet]
        [Route("/v1/cost")]
        [ValidateModelState]
        [SwaggerOperation("GetCost")]
        [SwaggerResponse(statusCode: 200, type: typeof(CostEstimateResponse), description: "An object with an array of cost estimates by ride type")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "The &#39;error&#39; field will be one of the following:  * &#x60;bad_parameter&#x60;: A validation error occurred  * &#x60;no_service_in_area&#x60;: start location is not within a Lyft service area  * &#x60;ridetype_unavailable_in_region&#x60;: ridetype not supported at this start location ")]
        public virtual IActionResult GetCost([FromQuery (Name = "start_lat")][Required()]double startLat, [FromQuery (Name = "start_lng")][Required()]double startLng, [FromQuery (Name = "ride_type")]string rideType, [FromQuery (Name = "end_lat")]double? endLat, [FromQuery (Name = "end_lng")]double? endLng)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CostEstimateResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));
            string exampleJson = null;
            exampleJson = "{\n  \"cost_estimates\" : [ {\n    \"cost_token\" : \"EupdCgIzy17lJoRmiO5\",\n    \"display_name\" : \"Lyft\",\n    \"estimated_cost_cents_max\" : 1080,\n    \"estimated_cost_cents_min\" : 1390,\n    \"estimated_distance_miles\" : 12.4,\n    \"estimated_duration_seconds\" : 540,\n    \"is_valid_estimate\" : true,\n    \"primetime_confirmation_token\" : \"EupdCgIzy17lJoRmiO5\",\n    \"primetime_percentage\" : \"25%\",\n    \"ride_type\" : \"lyft\"\n  }, {\n    \"cost_token\" : \"EupdCgIzy17lJoRmiO5\",\n    \"display_name\" : \"Lyft\",\n    \"estimated_cost_cents_max\" : 1080,\n    \"estimated_cost_cents_min\" : 1390,\n    \"estimated_distance_miles\" : 12.4,\n    \"estimated_duration_seconds\" : 540,\n    \"is_valid_estimate\" : true,\n    \"primetime_confirmation_token\" : \"EupdCgIzy17lJoRmiO5\",\n    \"primetime_percentage\" : \"25%\",\n    \"ride_type\" : \"lyft\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CostEstimateResponse>(exampleJson)
            : default(CostEstimateResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Available drivers nearby
        /// </summary>
        /// <remarks>The drivers endpoint returns a list of nearby drivers&#39; lat and lng at a given location. </remarks>
        /// <param name="lat">Latitude of a location</param>
        /// <param name="lng">Longitude of a location</param>
        /// <response code="200">An object with an array of available drivers sorted by eta for the given location</response>
        /// <response code="400">A validation error occurred</response>
        [HttpGet]
        [Route("/v1/drivers")]
        [ValidateModelState]
        [SwaggerOperation("GetDrivers")]
        [SwaggerResponse(statusCode: 200, type: typeof(NearbyDriversResponse), description: "An object with an array of available drivers sorted by eta for the given location")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "A validation error occurred")]
        public virtual IActionResult GetDrivers([FromQuery (Name = "lat")][Required()]double lat, [FromQuery (Name = "lng")][Required()]double lng)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(NearbyDriversResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));
            string exampleJson = null;
            exampleJson = "{\n  \"nearby_drivers\" : [ {\n    \"drivers\" : [ {\n      \"locations\" : [ {\n        \"lat\" : 36.9442175,\n        \"lng\" : -123.8679133\n      }, {\n        \"lat\" : 36.9442175,\n        \"lng\" : -123.8679133\n      } ]\n    }, {\n      \"locations\" : [ {\n        \"lat\" : 36.9442175,\n        \"lng\" : -123.8679133\n      }, {\n        \"lat\" : 36.9442175,\n        \"lng\" : -123.8679133\n      } ]\n    } ],\n    \"ride_type\" : \"ride_type\"\n  }, {\n    \"drivers\" : [ {\n      \"locations\" : [ {\n        \"lat\" : 36.9442175,\n        \"lng\" : -123.8679133\n      }, {\n        \"lat\" : 36.9442175,\n        \"lng\" : -123.8679133\n      } ]\n    }, {\n      \"locations\" : [ {\n        \"lat\" : 36.9442175,\n        \"lng\" : -123.8679133\n      }, {\n        \"lat\" : 36.9442175,\n        \"lng\" : -123.8679133\n      } ]\n    } ],\n    \"ride_type\" : \"ride_type\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<NearbyDriversResponse>(exampleJson)
            : default(NearbyDriversResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Pickup ETAs
        /// </summary>
        /// <remarks>The ETA endpoint lets you know how quickly a Lyft driver can come get you </remarks>
        /// <param name="lat">Latitude of a location</param>
        /// <param name="lng">Longitude of a location</param>
        /// <param name="destinationLat">Latitude of destination location</param>
        /// <param name="destinationLng">Longitude of destination location</param>
        /// <param name="rideType">ID of a ride type</param>
        /// <response code="200">An object with an array of ETAs by ride type for the given location</response>
        /// <response code="400">The &#39;error&#39; field will be one of the following:  * &#x60;bad_parameter&#x60;: A validation error occurred  * &#x60;no_service_in_area&#x60;: location is not within a Lyft service area  * &#x60;ridetype_unavailable_in_region&#x60;: ridetype not supported at this location </response>
        [HttpGet]
        [Route("/v1/eta")]
        [ValidateModelState]
        [SwaggerOperation("GetETA")]
        [SwaggerResponse(statusCode: 200, type: typeof(EtaEstimateResponse), description: "An object with an array of ETAs by ride type for the given location")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "The &#39;error&#39; field will be one of the following:  * &#x60;bad_parameter&#x60;: A validation error occurred  * &#x60;no_service_in_area&#x60;: location is not within a Lyft service area  * &#x60;ridetype_unavailable_in_region&#x60;: ridetype not supported at this location ")]
        public virtual IActionResult GetETA([FromQuery (Name = "lat")][Required()]double lat, [FromQuery (Name = "lng")][Required()]double lng, [FromQuery (Name = "destination_lat")]double? destinationLat, [FromQuery (Name = "destination_lng")]double? destinationLng, [FromQuery (Name = "ride_type")]string rideType)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(EtaEstimateResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));
            string exampleJson = null;
            exampleJson = "{\n  \"eta_estimates\" : [ {\n    \"display_name\" : \"Lyft Line\",\n    \"eta_seconds\" : 120,\n    \"is_valid_estimate\" : true,\n    \"ride_type\" : \"lyft_line\"\n  }, {\n    \"display_name\" : \"Lyft Line\",\n    \"eta_seconds\" : 120,\n    \"is_valid_estimate\" : true,\n    \"ride_type\" : \"lyft_line\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<EtaEstimateResponse>(exampleJson)
            : default(EtaEstimateResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Types of rides
        /// </summary>
        /// <remarks>The ride types endpoint returns information about what kinds of Lyft rides you can request at a given location. </remarks>
        /// <param name="lat">Latitude of a location</param>
        /// <param name="lng">Longitude of a location</param>
        /// <param name="rideType">ID of a ride type</param>
        /// <response code="200">An object with an array of available Ride Types for the given location</response>
        /// <response code="400">A validation error occurred</response>
        [HttpGet]
        [Route("/v1/ridetypes")]
        [ValidateModelState]
        [SwaggerOperation("GetRideTypes")]
        [SwaggerResponse(statusCode: 200, type: typeof(RideTypesResponse), description: "An object with an array of available Ride Types for the given location")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "A validation error occurred")]
        public virtual IActionResult GetRideTypes([FromQuery (Name = "lat")][Required()]double lat, [FromQuery (Name = "lng")][Required()]double lng, [FromQuery (Name = "ride_type")]string rideType)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(RideTypesResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));
            string exampleJson = null;
            exampleJson = "{\n  \"ride_types\" : [ {\n    \"ride_types\" : [ {\n      \"display_name\" : \"Lyft Line\",\n      \"image_url\" : \"https://cdn.lyft.com/assets/car_standard.png\",\n      \"pricing_details\" : {\n        \"base_charge\" : 200,\n        \"cancel_penalty_amount\" : 500,\n        \"cost_minimum\" : 475,\n        \"cost_per_mile\" : 115,\n        \"cost_per_minute\" : 23,\n        \"currency\" : \"USD\",\n        \"trust_and_service\" : 155\n      },\n      \"ride_type\" : \"lyft_line\",\n      \"seats\" : 2\n    }, {\n      \"display_name\" : \"Lyft\",\n      \"image_url\" : \"https://cdn.lyft.com/assets/car_standard.png\",\n      \"pricing_details\" : {\n        \"base_charge\" : 200,\n        \"cancel_penalty_amount\" : 500,\n        \"cost_minimum\" : 500,\n        \"cost_per_mile\" : 115,\n        \"cost_per_minute\" : 23,\n        \"currency\" : \"USD\",\n        \"trust_and_service\" : 155\n      },\n      \"ride_type\" : \"lyft\",\n      \"seats\" : 4\n    }, {\n      \"display_name\" : \"Lyft Plus\",\n      \"image_url\" : \"https://cdn.lyft.com/assets/car_plus.png\",\n      \"pricing_details\" : {\n        \"base_charge\" : 300,\n        \"cancel_penalty_amount\" : 500,\n        \"cost_minimum\" : 700,\n        \"cost_per_mile\" : 200,\n        \"cost_per_minute\" : 30,\n        \"currency\" : \"USD\",\n        \"trust_and_service\" : 155\n      },\n      \"ride_type\" : \"lyft_plus\",\n      \"seats\" : 6\n    } ]\n  }, {\n    \"ride_types\" : [ {\n      \"display_name\" : \"Lyft Line\",\n      \"image_url\" : \"https://cdn.lyft.com/assets/car_standard.png\",\n      \"pricing_details\" : {\n        \"base_charge\" : 200,\n        \"cancel_penalty_amount\" : 500,\n        \"cost_minimum\" : 475,\n        \"cost_per_mile\" : 115,\n        \"cost_per_minute\" : 23,\n        \"currency\" : \"USD\",\n        \"trust_and_service\" : 155\n      },\n      \"ride_type\" : \"lyft_line\",\n      \"seats\" : 2\n    }, {\n      \"display_name\" : \"Lyft\",\n      \"image_url\" : \"https://cdn.lyft.com/assets/car_standard.png\",\n      \"pricing_details\" : {\n        \"base_charge\" : 200,\n        \"cancel_penalty_amount\" : 500,\n        \"cost_minimum\" : 500,\n        \"cost_per_mile\" : 115,\n        \"cost_per_minute\" : 23,\n        \"currency\" : \"USD\",\n        \"trust_and_service\" : 155\n      },\n      \"ride_type\" : \"lyft\",\n      \"seats\" : 4\n    }, {\n      \"display_name\" : \"Lyft Plus\",\n      \"image_url\" : \"https://cdn.lyft.com/assets/car_plus.png\",\n      \"pricing_details\" : {\n        \"base_charge\" : 300,\n        \"cancel_penalty_amount\" : 500,\n        \"cost_minimum\" : 700,\n        \"cost_per_mile\" : 200,\n        \"cost_per_minute\" : 30,\n        \"currency\" : \"USD\",\n        \"trust_and_service\" : 155\n      },\n      \"ride_type\" : \"lyft_plus\",\n      \"seats\" : 6\n    } ]\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<RideTypesResponse>(exampleJson)
            : default(RideTypesResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
