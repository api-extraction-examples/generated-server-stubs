/*
 * Twilio - Notify
 *
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.52.0
 * Contact: support@twilio.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class NotifyV1BindingApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <param name="serviceSid">The SID of the [Service](https://www.twilio.com/docs/notify/api/service-resource) to create the resource under.</param>
        /// <param name="address">The channel-specific address. For APNS, the device token. For FCM and GCM, the registration token. For SMS, a phone number in E.164 format. For Facebook Messenger, the Messenger ID of the user or a phone number in E.164 format.</param>
        /// <param name="bindingType"></param>
        /// <param name="identity">The &#x60;identity&#x60; value that uniquely identifies the new resource&#39;s [User](https://www.twilio.com/docs/chat/rest/user-resource) within the [Service](https://www.twilio.com/docs/notify/api/service-resource). Up to 20 Bindings can be created for the same Identity in a given Service.</param>
        /// <param name="credentialSid">The SID of the [Credential](https://www.twilio.com/docs/notify/api/credential-resource) resource to be used to send notifications to this Binding. If present, this overrides the Credential specified in the Service resource. Applies to only &#x60;apn&#x60;, &#x60;fcm&#x60;, and &#x60;gcm&#x60; type Bindings.</param>
        /// <param name="endpoint">Deprecated.</param>
        /// <param name="notificationProtocolVersion">The protocol version to use to send the notification. This defaults to the value of &#x60;default_xxxx_notification_protocol_version&#x60; for the protocol in the [Service](https://www.twilio.com/docs/notify/api/service-resource). The current version is &#x60;\\\&quot;3\\\&quot;&#x60; for &#x60;apn&#x60;, &#x60;fcm&#x60;, and &#x60;gcm&#x60; type Bindings. The parameter is not applicable to &#x60;sms&#x60; and &#x60;facebook-messenger&#x60; type Bindings as the data format is fixed.</param>
        /// <param name="tag">A tag that can be used to select the Bindings to notify. Repeat this parameter to specify more than one tag, up to a total of 20 tags.</param>
        /// <response code="201">Created</response>
        [HttpPost]
        [Route("/v1/Services/{ServiceSid}/Bindings")]
        [Consumes("application/x-www-form-urlencoded")]
        [ValidateModelState]
        [SwaggerOperation("CreateBinding")]
        [SwaggerResponse(statusCode: 201, type: typeof(NotifyV1ServiceBinding), description: "Created")]
        public virtual IActionResult CreateBinding([FromRoute (Name = "ServiceSid")][Required][RegularExpression("^IS[0-9a-fA-F]{32}$")][StringLength(34, MinimumLength=34)]string serviceSid, [FromForm (Name = "Address")][Required()]string address, [FromForm (Name = "BindingType")][Required()]BindingEnumBindingType bindingType, [FromForm (Name = "Identity")][Required()]string identity, [FromForm (Name = "CredentialSid")][RegularExpression("^CR[0-9a-fA-F]{32}$")][StringLength(34, MinimumLength=34)]string credentialSid, [FromForm (Name = "Endpoint")]string endpoint, [FromForm (Name = "NotificationProtocolVersion")]string notificationProtocolVersion, [FromForm (Name = "Tag")]List<string> tag)
        {

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(NotifyV1ServiceBinding));
            string exampleJson = null;
            exampleJson = "{\n  \"credential_sid\" : \"credential_sid\",\n  \"binding_type\" : \"binding_type\",\n  \"address\" : \"address\",\n  \"date_updated\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"date_created\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"url\" : \"https://openapi-generator.tech\",\n  \"sid\" : \"sid\",\n  \"tags\" : [ \"tags\", \"tags\" ],\n  \"service_sid\" : \"service_sid\",\n  \"endpoint\" : \"endpoint\",\n  \"identity\" : \"identity\",\n  \"notification_protocol_version\" : \"notification_protocol_version\",\n  \"account_sid\" : \"account_sid\",\n  \"links\" : \"{}\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<NotifyV1ServiceBinding>(exampleJson)
            : default(NotifyV1ServiceBinding);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="serviceSid">The SID of the [Service](https://www.twilio.com/docs/notify/api/service-resource) to delete the resource from.</param>
        /// <param name="sid">The Twilio-provided string that uniquely identifies the Binding resource to delete.</param>
        /// <response code="204">The resource was deleted successfully.</response>
        [HttpDelete]
        [Route("/v1/Services/{ServiceSid}/Bindings/{Sid}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteBinding")]
        public virtual IActionResult DeleteBinding([FromRoute (Name = "ServiceSid")][Required][RegularExpression("^IS[0-9a-fA-F]{32}$")][StringLength(34, MinimumLength=34)]string serviceSid, [FromRoute (Name = "Sid")][Required][RegularExpression("^BS[0-9a-fA-F]{32}$")][StringLength(34, MinimumLength=34)]string sid)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="serviceSid">The SID of the [Service](https://www.twilio.com/docs/notify/api/service-resource) to fetch the resource from.</param>
        /// <param name="sid">The Twilio-provided string that uniquely identifies the Binding resource to fetch.</param>
        /// <response code="200">OK</response>
        [HttpGet]
        [Route("/v1/Services/{ServiceSid}/Bindings/{Sid}")]
        [ValidateModelState]
        [SwaggerOperation("FetchBinding")]
        [SwaggerResponse(statusCode: 200, type: typeof(NotifyV1ServiceBinding), description: "OK")]
        public virtual IActionResult FetchBinding([FromRoute (Name = "ServiceSid")][Required][RegularExpression("^IS[0-9a-fA-F]{32}$")][StringLength(34, MinimumLength=34)]string serviceSid, [FromRoute (Name = "Sid")][Required][RegularExpression("^BS[0-9a-fA-F]{32}$")][StringLength(34, MinimumLength=34)]string sid)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(NotifyV1ServiceBinding));
            string exampleJson = null;
            exampleJson = "{\n  \"credential_sid\" : \"credential_sid\",\n  \"binding_type\" : \"binding_type\",\n  \"address\" : \"address\",\n  \"date_updated\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"date_created\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"url\" : \"https://openapi-generator.tech\",\n  \"sid\" : \"sid\",\n  \"tags\" : [ \"tags\", \"tags\" ],\n  \"service_sid\" : \"service_sid\",\n  \"endpoint\" : \"endpoint\",\n  \"identity\" : \"identity\",\n  \"notification_protocol_version\" : \"notification_protocol_version\",\n  \"account_sid\" : \"account_sid\",\n  \"links\" : \"{}\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<NotifyV1ServiceBinding>(exampleJson)
            : default(NotifyV1ServiceBinding);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="serviceSid">The SID of the [Service](https://www.twilio.com/docs/notify/api/service-resource) to read the resource from.</param>
        /// <param name="startDate">Only include usage that has occurred on or after this date. Specify the date in GMT and format as &#x60;YYYY-MM-DD&#x60;.</param>
        /// <param name="endDate">Only include usage that occurred on or before this date. Specify the date in GMT and format as &#x60;YYYY-MM-DD&#x60;.</param>
        /// <param name="identity">The [User](https://www.twilio.com/docs/chat/rest/user-resource)&#39;s &#x60;identity&#x60; value of the resources to read.</param>
        /// <param name="tag">Only list Bindings that have all of the specified Tags. The following implicit tags are available: &#x60;all&#x60;, &#x60;apn&#x60;, &#x60;fcm&#x60;, &#x60;gcm&#x60;, &#x60;sms&#x60;, &#x60;facebook-messenger&#x60;. Up to 5 tags are allowed.</param>
        /// <param name="pageSize">How many resources to return in each list page. The default is 50, and the maximum is 1000.</param>
        /// <param name="page">The page index. This value is simply for client state.</param>
        /// <param name="pageToken">The page token. This is provided by the API.</param>
        /// <response code="200">OK</response>
        [HttpGet]
        [Route("/v1/Services/{ServiceSid}/Bindings")]
        [ValidateModelState]
        [SwaggerOperation("ListBinding")]
        [SwaggerResponse(statusCode: 200, type: typeof(ListBindingResponse), description: "OK")]
        public virtual IActionResult ListBinding([FromRoute (Name = "ServiceSid")][Required][RegularExpression("^IS[0-9a-fA-F]{32}$")][StringLength(34, MinimumLength=34)]string serviceSid, [FromQuery (Name = "StartDate")]DateTime? startDate, [FromQuery (Name = "EndDate")]DateTime? endDate, [FromQuery (Name = "Identity")]List<string> identity, [FromQuery (Name = "Tag")]List<string> tag, [FromQuery (Name = "PageSize")][Range(1, 1000)]int? pageSize, [FromQuery (Name = "Page")]int? page, [FromQuery (Name = "PageToken")]string pageToken)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ListBindingResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://openapi-generator.tech\",\n    \"next_page_url\" : \"https://openapi-generator.tech\",\n    \"previous_page_url\" : \"https://openapi-generator.tech\",\n    \"page\" : 0,\n    \"key\" : \"key\",\n    \"url\" : \"https://openapi-generator.tech\",\n    \"page_size\" : 6\n  },\n  \"bindings\" : [ {\n    \"credential_sid\" : \"credential_sid\",\n    \"binding_type\" : \"binding_type\",\n    \"address\" : \"address\",\n    \"date_updated\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"date_created\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"url\" : \"https://openapi-generator.tech\",\n    \"sid\" : \"sid\",\n    \"tags\" : [ \"tags\", \"tags\" ],\n    \"service_sid\" : \"service_sid\",\n    \"endpoint\" : \"endpoint\",\n    \"identity\" : \"identity\",\n    \"notification_protocol_version\" : \"notification_protocol_version\",\n    \"account_sid\" : \"account_sid\",\n    \"links\" : \"{}\"\n  }, {\n    \"credential_sid\" : \"credential_sid\",\n    \"binding_type\" : \"binding_type\",\n    \"address\" : \"address\",\n    \"date_updated\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"date_created\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"url\" : \"https://openapi-generator.tech\",\n    \"sid\" : \"sid\",\n    \"tags\" : [ \"tags\", \"tags\" ],\n    \"service_sid\" : \"service_sid\",\n    \"endpoint\" : \"endpoint\",\n    \"identity\" : \"identity\",\n    \"notification_protocol_version\" : \"notification_protocol_version\",\n    \"account_sid\" : \"account_sid\",\n    \"links\" : \"{}\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ListBindingResponse>(exampleJson)
            : default(ListBindingResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
