/*
 * Mastodon API Specification (https://github.com/mastodon/mastodon)
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: sardo@hey.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class ApiV1AccountsIdFollowPostRequest : IEquatable<ApiV1AccountsIdFollowPostRequest>
    {
        /// <summary>
        /// Receive notifications when this account posts a status? Defaults to false.
        /// </summary>
        /// <value>Receive notifications when this account posts a status? Defaults to false.</value>
        [DataMember(Name="notify", EmitDefaultValue=true)]
        public bool Notify { get; set; } = false;

        /// <summary>
        /// Receive this account&#39;s reblogs in home timeline? Defaults to true.
        /// </summary>
        /// <value>Receive this account&#39;s reblogs in home timeline? Defaults to true.</value>
        [DataMember(Name="reblogs", EmitDefaultValue=true)]
        public bool Reblogs { get; set; } = true;

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ApiV1AccountsIdFollowPostRequest {\n");
            sb.Append("  Notify: ").Append(Notify).Append("\n");
            sb.Append("  Reblogs: ").Append(Reblogs).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((ApiV1AccountsIdFollowPostRequest)obj);
        }

        /// <summary>
        /// Returns true if ApiV1AccountsIdFollowPostRequest instances are equal
        /// </summary>
        /// <param name="other">Instance of ApiV1AccountsIdFollowPostRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ApiV1AccountsIdFollowPostRequest other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Notify == other.Notify ||
                    
                    Notify.Equals(other.Notify)
                ) && 
                (
                    Reblogs == other.Reblogs ||
                    
                    Reblogs.Equals(other.Reblogs)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    
                    hashCode = hashCode * 59 + Notify.GetHashCode();
                    
                    hashCode = hashCode * 59 + Reblogs.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(ApiV1AccountsIdFollowPostRequest left, ApiV1AccountsIdFollowPostRequest right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(ApiV1AccountsIdFollowPostRequest left, ApiV1AccountsIdFollowPostRequest right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
