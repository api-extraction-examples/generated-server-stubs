/*
 * Mastodon API Specification (https://github.com/mastodon/mastodon)
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: sardo@hey.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class ApiV1AppsPostRequest : IEquatable<ApiV1AppsPostRequest>
    {
        /// <summary>
        /// A name for your application
        /// </summary>
        /// <value>A name for your application</value>
        [Required]
        [DataMember(Name="client_name", EmitDefaultValue=false)]
        public string ClientName { get; set; }

        /// <summary>
        /// Where the user should be redirected after authorization. To display the authorization code to the user instead of redirecting to a web page, use urn:ietf:wg:oauth:2.0:oob in this parameter.
        /// </summary>
        /// <value>Where the user should be redirected after authorization. To display the authorization code to the user instead of redirecting to a web page, use urn:ietf:wg:oauth:2.0:oob in this parameter.</value>
        [Required]
        [DataMember(Name="redirect_uris", EmitDefaultValue=false)]
        public string RedirectUris { get; set; }

        /// <summary>
        /// Space separated list of scopes. If none is provided, defaults to read.
        /// </summary>
        /// <value>Space separated list of scopes. If none is provided, defaults to read.</value>
        [DataMember(Name="scopes", EmitDefaultValue=false)]
        public string Scopes { get; set; }

        /// <summary>
        /// A URL to the homepage of your app
        /// </summary>
        /// <value>A URL to the homepage of your app</value>
        [DataMember(Name="website", EmitDefaultValue=false)]
        public string Website { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ApiV1AppsPostRequest {\n");
            sb.Append("  ClientName: ").Append(ClientName).Append("\n");
            sb.Append("  RedirectUris: ").Append(RedirectUris).Append("\n");
            sb.Append("  Scopes: ").Append(Scopes).Append("\n");
            sb.Append("  Website: ").Append(Website).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((ApiV1AppsPostRequest)obj);
        }

        /// <summary>
        /// Returns true if ApiV1AppsPostRequest instances are equal
        /// </summary>
        /// <param name="other">Instance of ApiV1AppsPostRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ApiV1AppsPostRequest other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    ClientName == other.ClientName ||
                    ClientName != null &&
                    ClientName.Equals(other.ClientName)
                ) && 
                (
                    RedirectUris == other.RedirectUris ||
                    RedirectUris != null &&
                    RedirectUris.Equals(other.RedirectUris)
                ) && 
                (
                    Scopes == other.Scopes ||
                    Scopes != null &&
                    Scopes.Equals(other.Scopes)
                ) && 
                (
                    Website == other.Website ||
                    Website != null &&
                    Website.Equals(other.Website)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (ClientName != null)
                    hashCode = hashCode * 59 + ClientName.GetHashCode();
                    if (RedirectUris != null)
                    hashCode = hashCode * 59 + RedirectUris.GetHashCode();
                    if (Scopes != null)
                    hashCode = hashCode * 59 + Scopes.GetHashCode();
                    if (Website != null)
                    hashCode = hashCode * 59 + Website.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(ApiV1AppsPostRequest left, ApiV1AppsPostRequest right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(ApiV1AppsPostRequest left, ApiV1AppsPostRequest right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
