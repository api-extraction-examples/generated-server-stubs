/*
 * Open Build Service API
 *
 * The _Open Build Service API_ is a XML API.  To authenticate, use [HTTP basic authentication](https://en.wikipedia.org/wiki/Basic_access_authentication) by passing the _Authorization_ header in the form of `Authorization: Basic <credentials>`.  There is no API versioning as there is no need for it right now.  Only rudimentary rate limiting is implemented, so please be gentle when using the API concurrently, especially with potentially expensive operations. In case of abuse, we will limit/remove your access.  For command-line users, we recommend using [osc](https://github.com/openSUSE/osc) with its _api_ command to interact with the API. It's as simple as this example: `osc api /about` (_about_ is one of the endpoints documented below) 
 *
 * The version of the OpenAPI document: 2.10.50
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ConfigurationApiController : ControllerBase
    { 
        /// <summary>
        /// Display the configuration of this Open Build Service instance
        /// </summary>
        /// <remarks>Display the configuration of this Open Build Service instance. </remarks>
        /// <response code="200">OK. The request has succeeded. </response>
        /// <response code="401"></response>
        [HttpGet]
        [Route("/configuration")]
        [ValidateModelState]
        [SwaggerOperation("ConfigurationGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(ConfigurationGet200Response), description: "OK. The request has succeeded. ")]
        public virtual IActionResult ConfigurationGet()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ConfigurationGet200Response));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            string exampleJson = null;
            exampleJson = "<configuration>\n  <admin_email>unconfigured@openbuildservice.org</admin_email>\n  <allow_user_to_create_home_project>true</allow_user_to_create_home_project>\n  <anonymous>true</anonymous>\n  <change_password>true</change_password>\n  <cleanup_empty_projects>true</cleanup_empty_projects>\n  <default_access_disabled>false</default_access_disabled>\n  <description>The openSUSE Build Service is the public instance of the Open Build Service (OBS)</description>\n  <disable_publish_for_branches>true</disable_publish_for_branches>\n  <disallow_group_creation>false</disallow_group_creation>\n  <download_on_demand>true</download_on_demand>\n  <enforce_project_keys>false</enforce_project_keys>\n  <gravatar>true</gravatar>\n  <hide_private_options>false</hide_private_options>\n  <name>private</name>\n  <obs_url>https://unconfigured.openbuildservice.org</obs_url>\n  <registration>allow</registration>\n  <title>Open Build Service</title>\n  <tos_url>https://en.opensuse.org/Terms_of_site</tos_url>\n  <unlisted_projects_filter>^home:.+</unlisted_projects_filter>\n  <unlisted_projects_filter_description>home projects</unlisted_projects_filter_description>\n</configuration>";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ConfigurationGet200Response>(exampleJson)
            : default(ConfigurationGet200Response);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update the configuration of this Open Build Service instance
        /// </summary>
        /// <remarks>Update the configuration of this Open Build Service instance.  This is for admins only. </remarks>
        /// <param name="body">Configuration definition.</param>
        /// <response code="200">OK. The request has succeeded. </response>
        /// <response code="401"></response>
        /// <response code="403">Forbidden.  In the example below, _default_access_disabled_ is one of the possible configuration options which is set in the options.yml file. </response>
        [HttpPut]
        [Route("/configuration")]
        [Consumes("application/xml; charset=utf-8")]
        [ValidateModelState]
        [SwaggerOperation("ConfigurationPut")]
        [SwaggerResponse(statusCode: 200, type: typeof(Object), description: "OK. The request has succeeded. ")]
        [SwaggerResponse(statusCode: 403, type: typeof(Object), description: "Forbidden.  In the example below, _default_access_disabled_ is one of the possible configuration options which is set in the options.yml file. ")]
        public virtual IActionResult ConfigurationPut([FromBody]Object body)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Object));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Object));
            string exampleJson = null;
            exampleJson = "Custom MIME type example not yet supported: application/xml; charset=utf-8";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default(Object);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
