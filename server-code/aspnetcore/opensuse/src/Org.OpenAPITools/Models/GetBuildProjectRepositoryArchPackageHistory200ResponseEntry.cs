/*
 * Open Build Service API
 *
 * The _Open Build Service API_ is a XML API.  To authenticate, use [HTTP basic authentication](https://en.wikipedia.org/wiki/Basic_access_authentication) by passing the _Authorization_ header in the form of `Authorization: Basic <credentials>`.  There is no API versioning as there is no need for it right now.  Only rudimentary rate limiting is implemented, so please be gentle when using the API concurrently, especially with potentially expensive operations. In case of abuse, we will limit/remove your access.  For command-line users, we recommend using [osc](https://github.com/openSUSE/osc) with its _api_ command to interact with the API. It's as simple as this example: `osc api /about` (_about_ is one of the endpoints documented below) 
 *
 * The version of the OpenAPI document: 2.10.50
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class GetBuildProjectRepositoryArchPackageHistory200ResponseEntry : IEquatable<GetBuildProjectRepositoryArchPackageHistory200ResponseEntry>
    {
        /// <summary>
        /// Gets or Sets Bcnt
        /// </summary>
        /// <example>1</example>
        [DataMember(Name="bcnt", EmitDefaultValue=false)]
        public string Bcnt { get; set; }

        /// <summary>
        /// Gets or Sets Duration
        /// </summary>
        /// <example>222</example>
        [DataMember(Name="duration", EmitDefaultValue=false)]
        public string Duration { get; set; }

        /// <summary>
        /// Gets or Sets Rev
        /// </summary>
        /// <example>4</example>
        [DataMember(Name="rev", EmitDefaultValue=false)]
        public string Rev { get; set; }

        /// <summary>
        /// Gets or Sets Srcmd5
        /// </summary>
        /// <example>63a6f075d3d420c6c1160a7b5dc31354</example>
        [DataMember(Name="srcmd5", EmitDefaultValue=false)]
        public string Srcmd5 { get; set; }

        /// <summary>
        /// Gets or Sets Time
        /// </summary>
        /// <example>1617812788</example>
        [DataMember(Name="time", EmitDefaultValue=false)]
        public string Time { get; set; }

        /// <summary>
        /// Gets or Sets Versrel
        /// </summary>
        /// <example>0.42.1-4</example>
        [DataMember(Name="versrel", EmitDefaultValue=false)]
        public string Versrel { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetBuildProjectRepositoryArchPackageHistory200ResponseEntry {\n");
            sb.Append("  Bcnt: ").Append(Bcnt).Append("\n");
            sb.Append("  Duration: ").Append(Duration).Append("\n");
            sb.Append("  Rev: ").Append(Rev).Append("\n");
            sb.Append("  Srcmd5: ").Append(Srcmd5).Append("\n");
            sb.Append("  Time: ").Append(Time).Append("\n");
            sb.Append("  Versrel: ").Append(Versrel).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((GetBuildProjectRepositoryArchPackageHistory200ResponseEntry)obj);
        }

        /// <summary>
        /// Returns true if GetBuildProjectRepositoryArchPackageHistory200ResponseEntry instances are equal
        /// </summary>
        /// <param name="other">Instance of GetBuildProjectRepositoryArchPackageHistory200ResponseEntry to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetBuildProjectRepositoryArchPackageHistory200ResponseEntry other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Bcnt == other.Bcnt ||
                    Bcnt != null &&
                    Bcnt.Equals(other.Bcnt)
                ) && 
                (
                    Duration == other.Duration ||
                    Duration != null &&
                    Duration.Equals(other.Duration)
                ) && 
                (
                    Rev == other.Rev ||
                    Rev != null &&
                    Rev.Equals(other.Rev)
                ) && 
                (
                    Srcmd5 == other.Srcmd5 ||
                    Srcmd5 != null &&
                    Srcmd5.Equals(other.Srcmd5)
                ) && 
                (
                    Time == other.Time ||
                    Time != null &&
                    Time.Equals(other.Time)
                ) && 
                (
                    Versrel == other.Versrel ||
                    Versrel != null &&
                    Versrel.Equals(other.Versrel)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Bcnt != null)
                    hashCode = hashCode * 59 + Bcnt.GetHashCode();
                    if (Duration != null)
                    hashCode = hashCode * 59 + Duration.GetHashCode();
                    if (Rev != null)
                    hashCode = hashCode * 59 + Rev.GetHashCode();
                    if (Srcmd5 != null)
                    hashCode = hashCode * 59 + Srcmd5.GetHashCode();
                    if (Time != null)
                    hashCode = hashCode * 59 + Time.GetHashCode();
                    if (Versrel != null)
                    hashCode = hashCode * 59 + Versrel.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(GetBuildProjectRepositoryArchPackageHistory200ResponseEntry left, GetBuildProjectRepositoryArchPackageHistory200ResponseEntry right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(GetBuildProjectRepositoryArchPackageHistory200ResponseEntry left, GetBuildProjectRepositoryArchPackageHistory200ResponseEntry right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
