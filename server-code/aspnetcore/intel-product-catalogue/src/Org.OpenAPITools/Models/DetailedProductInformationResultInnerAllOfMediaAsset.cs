/*
 * Intel Product Catalogue Service
 *
 * This is the documentation for PIM Micro services. In order to use this tool you need to have Basic Auth credentials and a client id. If you dont have one, please make sure to request one by sending an email to the PIM MS team: [pim.360.team@intel.com](mailto:pim.360.team@intel.com?subject=PIMServices)
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: pim.360.team@intel.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// product media asset
    /// </summary>
    [DataContract]
    public partial class DetailedProductInformationResultInnerAllOfMediaAsset : IEquatable<DetailedProductInformationResultInnerAllOfMediaAsset>
    {
        /// <summary>
        /// Gets or Sets Picture1
        /// </summary>
        [DataMember(Name="picture_1", EmitDefaultValue=false)]
        public string Picture1 { get; set; }

        /// <summary>
        /// Gets or Sets Picture2
        /// </summary>
        [DataMember(Name="picture_2", EmitDefaultValue=false)]
        public string Picture2 { get; set; }

        /// <summary>
        /// Gets or Sets Picture3
        /// </summary>
        [DataMember(Name="picture_3", EmitDefaultValue=false)]
        public string Picture3 { get; set; }

        /// <summary>
        /// Gets or Sets Picture4
        /// </summary>
        [DataMember(Name="picture_4", EmitDefaultValue=false)]
        public string Picture4 { get; set; }

        /// <summary>
        /// Gets or Sets Picture5
        /// </summary>
        [DataMember(Name="picture_5", EmitDefaultValue=false)]
        public string Picture5 { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DetailedProductInformationResultInnerAllOfMediaAsset {\n");
            sb.Append("  Picture1: ").Append(Picture1).Append("\n");
            sb.Append("  Picture2: ").Append(Picture2).Append("\n");
            sb.Append("  Picture3: ").Append(Picture3).Append("\n");
            sb.Append("  Picture4: ").Append(Picture4).Append("\n");
            sb.Append("  Picture5: ").Append(Picture5).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((DetailedProductInformationResultInnerAllOfMediaAsset)obj);
        }

        /// <summary>
        /// Returns true if DetailedProductInformationResultInnerAllOfMediaAsset instances are equal
        /// </summary>
        /// <param name="other">Instance of DetailedProductInformationResultInnerAllOfMediaAsset to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DetailedProductInformationResultInnerAllOfMediaAsset other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Picture1 == other.Picture1 ||
                    Picture1 != null &&
                    Picture1.Equals(other.Picture1)
                ) && 
                (
                    Picture2 == other.Picture2 ||
                    Picture2 != null &&
                    Picture2.Equals(other.Picture2)
                ) && 
                (
                    Picture3 == other.Picture3 ||
                    Picture3 != null &&
                    Picture3.Equals(other.Picture3)
                ) && 
                (
                    Picture4 == other.Picture4 ||
                    Picture4 != null &&
                    Picture4.Equals(other.Picture4)
                ) && 
                (
                    Picture5 == other.Picture5 ||
                    Picture5 != null &&
                    Picture5.Equals(other.Picture5)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Picture1 != null)
                    hashCode = hashCode * 59 + Picture1.GetHashCode();
                    if (Picture2 != null)
                    hashCode = hashCode * 59 + Picture2.GetHashCode();
                    if (Picture3 != null)
                    hashCode = hashCode * 59 + Picture3.GetHashCode();
                    if (Picture4 != null)
                    hashCode = hashCode * 59 + Picture4.GetHashCode();
                    if (Picture5 != null)
                    hashCode = hashCode * 59 + Picture5.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(DetailedProductInformationResultInnerAllOfMediaAsset left, DetailedProductInformationResultInnerAllOfMediaAsset right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(DetailedProductInformationResultInnerAllOfMediaAsset left, DetailedProductInformationResultInnerAllOfMediaAsset right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
