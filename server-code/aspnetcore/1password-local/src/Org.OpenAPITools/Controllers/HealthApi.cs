/*
 * 1Password Connect
 *
 * REST API interface for 1Password Connect.
 *
 * The version of the OpenAPI document: 1.5.7
 * Contact: support@1password.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class HealthApiController : ControllerBase
    { 
        /// <summary>
        /// Ping the server for liveness
        /// </summary>
        /// <response code="200">OK</response>
        [HttpGet]
        [Route("/heartbeat")]
        [ValidateModelState]
        [SwaggerOperation("GetHeartbeat")]
        [SwaggerResponse(statusCode: 200, type: typeof(string), description: "OK")]
        public virtual IActionResult GetHeartbeat()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(string));
            string exampleJson = null;
            exampleJson = "";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<string>(exampleJson)
            : default(string);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get state of the server and its dependencies.
        /// </summary>
        /// <response code="200">OK</response>
        [HttpGet]
        [Route("/health")]
        [ValidateModelState]
        [SwaggerOperation("GetServerHealth")]
        [SwaggerResponse(statusCode: 200, type: typeof(GetServerHealth200Response), description: "OK")]
        public virtual IActionResult GetServerHealth()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(GetServerHealth200Response));
            string exampleJson = null;
            exampleJson = "{\n  \"name\" : \"name\",\n  \"version\" : \"version\",\n  \"dependencies\" : [ {\n    \"service\" : \"service\",\n    \"message\" : \"message\",\n    \"status\" : \"status\"\n  }, {\n    \"service\" : \"service\",\n    \"message\" : \"message\",\n    \"status\" : \"status\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<GetServerHealth200Response>(exampleJson)
            : default(GetServerHealth200Response);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
