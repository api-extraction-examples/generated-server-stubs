/*
 * 1Password Connect
 *
 * REST API interface for 1Password Connect.
 *
 * The version of the OpenAPI document: 1.5.7
 * Contact: support@1password.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class APIRequestResource : IEquatable<APIRequestResource>
    {
        /// <summary>
        /// Gets or Sets Item
        /// </summary>
        [DataMember(Name="item", EmitDefaultValue=false)]
        public APIRequestResourceItem Item { get; set; }

        /// <summary>
        /// Gets or Sets ItemVersion
        /// </summary>
        [DataMember(Name="itemVersion", EmitDefaultValue=true)]
        public int ItemVersion { get; set; }


        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [TypeConverter(typeof(CustomEnumConverter<TypeEnum>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum TypeEnum
        {
            
            /// <summary>
            /// Enum ITEMEnum for ITEM
            /// </summary>
            [EnumMember(Value = "ITEM")]
            ITEMEnum = 1,
            
            /// <summary>
            /// Enum VAULTEnum for VAULT
            /// </summary>
            [EnumMember(Value = "VAULT")]
            VAULTEnum = 2
        }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name="type", EmitDefaultValue=true)]
        public TypeEnum Type { get; set; }

        /// <summary>
        /// Gets or Sets Vault
        /// </summary>
        [DataMember(Name="vault", EmitDefaultValue=false)]
        public APIRequestResourceItem Vault { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class APIRequestResource {\n");
            sb.Append("  Item: ").Append(Item).Append("\n");
            sb.Append("  ItemVersion: ").Append(ItemVersion).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  Vault: ").Append(Vault).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((APIRequestResource)obj);
        }

        /// <summary>
        /// Returns true if APIRequestResource instances are equal
        /// </summary>
        /// <param name="other">Instance of APIRequestResource to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(APIRequestResource other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Item == other.Item ||
                    Item != null &&
                    Item.Equals(other.Item)
                ) && 
                (
                    ItemVersion == other.ItemVersion ||
                    
                    ItemVersion.Equals(other.ItemVersion)
                ) && 
                (
                    Type == other.Type ||
                    
                    Type.Equals(other.Type)
                ) && 
                (
                    Vault == other.Vault ||
                    Vault != null &&
                    Vault.Equals(other.Vault)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Item != null)
                    hashCode = hashCode * 59 + Item.GetHashCode();
                    
                    hashCode = hashCode * 59 + ItemVersion.GetHashCode();
                    
                    hashCode = hashCode * 59 + Type.GetHashCode();
                    if (Vault != null)
                    hashCode = hashCode * 59 + Vault.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(APIRequestResource left, APIRequestResource right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(APIRequestResource left, APIRequestResource right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
