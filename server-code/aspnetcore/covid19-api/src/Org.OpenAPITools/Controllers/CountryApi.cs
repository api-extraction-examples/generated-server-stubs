/*
 * COVID-19 data API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.6
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class CountryApiController : ControllerBase
    { 
        /// <summary>
        /// getDailyReportAllCountries
        /// </summary>
        /// <remarks>Get daily report for all countries. Date is mandatory parametar. Date format is by ISO 8601 standard, but you can provide different format with date-format parameter.</remarks>
        /// <param name="date">Date of the report.</param>
        /// <param name="dateFormat">Date format. If you dont want to use ISO 8601 standard (YYYY-MM-DD), you can provide different format.</param>
        /// <param name="format">Format of the response</param>
        /// <response code="200">Daily report for COVID-19 for selected country.</response>
        [HttpGet]
        [Route("/report/country/all")]
        [ValidateModelState]
        [SwaggerOperation("GetDailyReportAllCountries")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<GetDailyReportAllCountries200ResponseInner>), description: "Daily report for COVID-19 for selected country.")]
        public virtual IActionResult GetDailyReportAllCountries([FromQuery (Name = "date")][Required()]string date, [FromQuery (Name = "date-format")]string dateFormat, [FromQuery (Name = "format")]string format)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<GetDailyReportAllCountries200ResponseInner>));
            string exampleJson = null;
            exampleJson = "[ {\n  \"date\" : \"date\",\n  \"country\" : \"country\",\n  \"province\" : [ {\n    \"recovered\" : 2,\n    \"active\" : 1,\n    \"confirmed\" : 5,\n    \"deaths\" : 5\n  }, {\n    \"recovered\" : 2,\n    \"active\" : 1,\n    \"confirmed\" : 5,\n    \"deaths\" : 5\n  } ],\n  \"latitude\" : 0.8008282,\n  \"longitude\" : 6.0274563\n}, {\n  \"date\" : \"date\",\n  \"country\" : \"country\",\n  \"province\" : [ {\n    \"recovered\" : 2,\n    \"active\" : 1,\n    \"confirmed\" : 5,\n    \"deaths\" : 5\n  }, {\n    \"recovered\" : 2,\n    \"active\" : 1,\n    \"confirmed\" : 5,\n    \"deaths\" : 5\n  } ],\n  \"latitude\" : 0.8008282,\n  \"longitude\" : 6.0274563\n} ]";
            exampleJson = "<null>\n  <country>aeiou</country>\n  <date>aeiou</date>\n  <latitude>1.3579</latitude>\n  <longitude>1.3579</longitude>\n</null>";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<GetDailyReportAllCountries200ResponseInner>>(exampleJson)
            : default(List<GetDailyReportAllCountries200ResponseInner>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// getDailyReportByCountryCode
        /// </summary>
        /// <remarks>Get daily report for specific country. Country code and date are mandatory in parametars. Country code is in ISO 3166-1 standard. It can be 2 chars (Alpha-2) or 3 chars (Alpha-3) type. Date format is by ISO 8601 standard, but you can provide different format with date-format parameter</remarks>
        /// <param name="code">Country code. Country code is by ISO 3166-1 standard. It can be 2 chars (Alpha-2) or 3 chars (Alpha-3) type.</param>
        /// <param name="date">Date of the report.</param>
        /// <param name="dateFormat">Date format. If you dont want to use ISO 8601 standard (YYYY-MM-DD), you can provide different format.</param>
        /// <param name="format">Format of the response</param>
        /// <response code="200">Daily report for COVID-19 for selected country.</response>
        [HttpGet]
        [Route("/report/country/code")]
        [ValidateModelState]
        [SwaggerOperation("GetDailyReportByCountryCode")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<GetDailyReportAllCountries200ResponseInner>), description: "Daily report for COVID-19 for selected country.")]
        public virtual IActionResult GetDailyReportByCountryCode([FromQuery (Name = "code")][Required()]string code, [FromQuery (Name = "date")][Required()]string date, [FromQuery (Name = "date-format")]string dateFormat, [FromQuery (Name = "format")]string format)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<GetDailyReportAllCountries200ResponseInner>));
            string exampleJson = null;
            exampleJson = "[ {\n  \"date\" : \"date\",\n  \"country\" : \"country\",\n  \"province\" : [ {\n    \"recovered\" : 2,\n    \"active\" : 1,\n    \"confirmed\" : 5,\n    \"deaths\" : 5\n  }, {\n    \"recovered\" : 2,\n    \"active\" : 1,\n    \"confirmed\" : 5,\n    \"deaths\" : 5\n  } ],\n  \"latitude\" : 0.8008282,\n  \"longitude\" : 6.0274563\n}, {\n  \"date\" : \"date\",\n  \"country\" : \"country\",\n  \"province\" : [ {\n    \"recovered\" : 2,\n    \"active\" : 1,\n    \"confirmed\" : 5,\n    \"deaths\" : 5\n  }, {\n    \"recovered\" : 2,\n    \"active\" : 1,\n    \"confirmed\" : 5,\n    \"deaths\" : 5\n  } ],\n  \"latitude\" : 0.8008282,\n  \"longitude\" : 6.0274563\n} ]";
            exampleJson = "<null>\n  <country>aeiou</country>\n  <date>aeiou</date>\n  <latitude>1.3579</latitude>\n  <longitude>1.3579</longitude>\n</null>";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<GetDailyReportAllCountries200ResponseInner>>(exampleJson)
            : default(List<GetDailyReportAllCountries200ResponseInner>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// getDailyReportByCountryName
        /// </summary>
        /// <remarks>Get daily report for specific country. Country name and date are mandatory in parametars. Date format is by ISO 8601 standard, but you can provide different format with date-format parameter</remarks>
        /// <param name="name">Country name.</param>
        /// <param name="date">Date of the report.</param>
        /// <param name="dateFormat">Date format. If you dont want to use ISO 8601 standard (YYYY-MM-DD), you can provide different format.</param>
        /// <param name="format">Format of the response</param>
        /// <response code="200">Daily report for COVID-19 for selected country.</response>
        [HttpGet]
        [Route("/report/country/name")]
        [ValidateModelState]
        [SwaggerOperation("GetDailyReportByCountryName")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<GetDailyReportAllCountries200ResponseInner>), description: "Daily report for COVID-19 for selected country.")]
        public virtual IActionResult GetDailyReportByCountryName([FromQuery (Name = "name")][Required()]string name, [FromQuery (Name = "date")][Required()]string date, [FromQuery (Name = "date-format")]string dateFormat, [FromQuery (Name = "format")]string format)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<GetDailyReportAllCountries200ResponseInner>));
            string exampleJson = null;
            exampleJson = "[ {\n  \"date\" : \"date\",\n  \"country\" : \"country\",\n  \"province\" : [ {\n    \"recovered\" : 2,\n    \"active\" : 1,\n    \"confirmed\" : 5,\n    \"deaths\" : 5\n  }, {\n    \"recovered\" : 2,\n    \"active\" : 1,\n    \"confirmed\" : 5,\n    \"deaths\" : 5\n  } ],\n  \"latitude\" : 0.8008282,\n  \"longitude\" : 6.0274563\n}, {\n  \"date\" : \"date\",\n  \"country\" : \"country\",\n  \"province\" : [ {\n    \"recovered\" : 2,\n    \"active\" : 1,\n    \"confirmed\" : 5,\n    \"deaths\" : 5\n  }, {\n    \"recovered\" : 2,\n    \"active\" : 1,\n    \"confirmed\" : 5,\n    \"deaths\" : 5\n  } ],\n  \"latitude\" : 0.8008282,\n  \"longitude\" : 6.0274563\n} ]";
            exampleJson = "<null>\n  <country>aeiou</country>\n  <date>aeiou</date>\n  <latitude>1.3579</latitude>\n  <longitude>1.3579</longitude>\n</null>";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<GetDailyReportAllCountries200ResponseInner>>(exampleJson)
            : default(List<GetDailyReportAllCountries200ResponseInner>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// getLatestAllCountries
        /// </summary>
        /// <remarks>Get latest data from all countries.</remarks>
        /// <param name="format">Format of the response</param>
        /// <response code="200">Returns all countries with latest data about COVID-19</response>
        [HttpGet]
        [Route("/country/all")]
        [ValidateModelState]
        [SwaggerOperation("GetLatestAllCountries")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<GetLatestCountryDataByName200ResponseInner>), description: "Returns all countries with latest data about COVID-19")]
        public virtual IActionResult GetLatestAllCountries([FromQuery (Name = "format")]string format)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<GetLatestCountryDataByName200ResponseInner>));
            string exampleJson = null;
            exampleJson = "[ {\n  \"country\" : \"country\",\n  \"recovered\" : 2,\n  \"critical\" : 6,\n  \"lastUpdate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"latitude\" : 5.962134,\n  \"lastChange\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"confirmed\" : 0,\n  \"deaths\" : 1,\n  \"longitude\" : 5.637377\n}, {\n  \"country\" : \"country\",\n  \"recovered\" : 2,\n  \"critical\" : 6,\n  \"lastUpdate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"latitude\" : 5.962134,\n  \"lastChange\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"confirmed\" : 0,\n  \"deaths\" : 1,\n  \"longitude\" : 5.637377\n} ]";
            exampleJson = "<null>\n  <confirmed>123</confirmed>\n  <country>aeiou</country>\n  <critical>123</critical>\n  <deaths>123</deaths>\n  <lastChange>2000-01-23T04:56:07.000Z</lastChange>\n  <lastUpdate>2000-01-23T04:56:07.000Z</lastUpdate>\n  <latitude>1.3579</latitude>\n  <longitude>1.3579</longitude>\n  <recovered>123</recovered>\n</null>";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<GetLatestCountryDataByName200ResponseInner>>(exampleJson)
            : default(List<GetLatestCountryDataByName200ResponseInner>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// getLatestCountryDataByCode
        /// </summary>
        /// <remarks>Get latest data for specific country. Country code and format are in parametars. Country code is in ISO 3166-1 standard. It can be 2 chars (Alpha-2) or 3 chars (Alpha-3) type.</remarks>
        /// <param name="code">Country code</param>
        /// <param name="format">Format of the response</param>
        /// <response code="200">Latest data about COVID-19 for selected country</response>
        [HttpGet]
        [Route("/country/code")]
        [ValidateModelState]
        [SwaggerOperation("GetLatestCountryDataByCode")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<GetLatestCountryDataByName200ResponseInner>), description: "Latest data about COVID-19 for selected country")]
        public virtual IActionResult GetLatestCountryDataByCode([FromQuery (Name = "code")][Required()]string code, [FromQuery (Name = "format")]string format)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<GetLatestCountryDataByName200ResponseInner>));
            string exampleJson = null;
            exampleJson = "[ {\n  \"country\" : \"country\",\n  \"recovered\" : 2,\n  \"critical\" : 6,\n  \"lastUpdate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"latitude\" : 5.962134,\n  \"lastChange\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"confirmed\" : 0,\n  \"deaths\" : 1,\n  \"longitude\" : 5.637377\n}, {\n  \"country\" : \"country\",\n  \"recovered\" : 2,\n  \"critical\" : 6,\n  \"lastUpdate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"latitude\" : 5.962134,\n  \"lastChange\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"confirmed\" : 0,\n  \"deaths\" : 1,\n  \"longitude\" : 5.637377\n} ]";
            exampleJson = "<null>\n  <confirmed>123</confirmed>\n  <country>aeiou</country>\n  <critical>123</critical>\n  <deaths>123</deaths>\n  <lastChange>2000-01-23T04:56:07.000Z</lastChange>\n  <lastUpdate>2000-01-23T04:56:07.000Z</lastUpdate>\n  <latitude>1.3579</latitude>\n  <longitude>1.3579</longitude>\n  <recovered>123</recovered>\n</null>";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<GetLatestCountryDataByName200ResponseInner>>(exampleJson)
            : default(List<GetLatestCountryDataByName200ResponseInner>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// getLatestCountryDataByName
        /// </summary>
        /// <remarks>Get latest data for specific country. Country name and format are in parametars.</remarks>
        /// <param name="name">Name of the country</param>
        /// <param name="format">Format of the response</param>
        /// <response code="200">Latest data about COVID-19 for selected country</response>
        [HttpGet]
        [Route("/country")]
        [ValidateModelState]
        [SwaggerOperation("GetLatestCountryDataByName")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<GetLatestCountryDataByName200ResponseInner>), description: "Latest data about COVID-19 for selected country")]
        public virtual IActionResult GetLatestCountryDataByName([FromQuery (Name = "name")][Required()]string name, [FromQuery (Name = "format")]string format)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<GetLatestCountryDataByName200ResponseInner>));
            string exampleJson = null;
            exampleJson = "[ {\n  \"country\" : \"country\",\n  \"recovered\" : 2,\n  \"critical\" : 6,\n  \"lastUpdate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"latitude\" : 5.962134,\n  \"lastChange\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"confirmed\" : 0,\n  \"deaths\" : 1,\n  \"longitude\" : 5.637377\n}, {\n  \"country\" : \"country\",\n  \"recovered\" : 2,\n  \"critical\" : 6,\n  \"lastUpdate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"latitude\" : 5.962134,\n  \"lastChange\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"confirmed\" : 0,\n  \"deaths\" : 1,\n  \"longitude\" : 5.637377\n} ]";
            exampleJson = "<null>\n  <confirmed>123</confirmed>\n  <country>aeiou</country>\n  <critical>123</critical>\n  <deaths>123</deaths>\n  <lastChange>2000-01-23T04:56:07.000Z</lastChange>\n  <lastUpdate>2000-01-23T04:56:07.000Z</lastUpdate>\n  <latitude>1.3579</latitude>\n  <longitude>1.3579</longitude>\n  <recovered>123</recovered>\n</null>";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<GetLatestCountryDataByName200ResponseInner>>(exampleJson)
            : default(List<GetLatestCountryDataByName200ResponseInner>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
