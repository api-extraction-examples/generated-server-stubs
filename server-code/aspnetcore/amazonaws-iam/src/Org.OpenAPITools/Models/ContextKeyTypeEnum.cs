/*
 * AWS Identity and Access Management
 *
 * <fullname>Identity and Access Management</fullname> <p>Identity and Access Management (IAM) is a web service for securely controlling access to Amazon Web Services services. With IAM, you can centrally manage users, security credentials such as access keys, and permissions that control which Amazon Web Services resources users and applications can access. For more information about IAM, see <a href=\"http://aws.amazon.com/iam/\">Identity and Access Management (IAM)</a> and the <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/\">Identity and Access Management User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-08
 * Contact: mike.ralphson@gmail.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
        /// <summary>
        /// Gets or Sets ContextKeyTypeEnum
        /// </summary>
        [TypeConverter(typeof(CustomEnumConverter<ContextKeyTypeEnum>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum ContextKeyTypeEnum
        {
            
            /// <summary>
            /// Enum StringEnum for string
            /// </summary>
            [EnumMember(Value = "string")]
            StringEnum = 1,
            
            /// <summary>
            /// Enum StringListEnum for stringList
            /// </summary>
            [EnumMember(Value = "stringList")]
            StringListEnum = 2,
            
            /// <summary>
            /// Enum NumericEnum for numeric
            /// </summary>
            [EnumMember(Value = "numeric")]
            NumericEnum = 3,
            
            /// <summary>
            /// Enum NumericListEnum for numericList
            /// </summary>
            [EnumMember(Value = "numericList")]
            NumericListEnum = 4,
            
            /// <summary>
            /// Enum BooleanEnum for boolean
            /// </summary>
            [EnumMember(Value = "boolean")]
            BooleanEnum = 5,
            
            /// <summary>
            /// Enum BooleanListEnum for booleanList
            /// </summary>
            [EnumMember(Value = "booleanList")]
            BooleanListEnum = 6,
            
            /// <summary>
            /// Enum IpEnum for ip
            /// </summary>
            [EnumMember(Value = "ip")]
            IpEnum = 7,
            
            /// <summary>
            /// Enum IpListEnum for ipList
            /// </summary>
            [EnumMember(Value = "ipList")]
            IpListEnum = 8,
            
            /// <summary>
            /// Enum BinaryEnum for binary
            /// </summary>
            [EnumMember(Value = "binary")]
            BinaryEnum = 9,
            
            /// <summary>
            /// Enum BinaryListEnum for binaryList
            /// </summary>
            [EnumMember(Value = "binaryList")]
            BinaryListEnum = 10,
            
            /// <summary>
            /// Enum DateEnum for date
            /// </summary>
            [EnumMember(Value = "date")]
            DateEnum = 11,
            
            /// <summary>
            /// Enum DateListEnum for dateList
            /// </summary>
            [EnumMember(Value = "dateList")]
            DateListEnum = 12
        }
}
