/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class AppPriceTiersApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <param name="filterId">filter by id(s)</param>
        /// <param name="fieldsAppPriceTiers">the fields to include for returned resources of type appPriceTiers</param>
        /// <param name="limit">maximum resources per page</param>
        /// <param name="include">comma-separated list of relationships to include</param>
        /// <param name="fieldsAppPricePoints">the fields to include for returned resources of type appPricePoints</param>
        /// <param name="limitPricePoints">maximum number of related pricePoints returned (when they are included)</param>
        /// <response code="200">List of AppPriceTiers</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        [HttpGet]
        [Route("/v1/appPriceTiers")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("AppPriceTiersGetCollection")]
        [SwaggerResponse(statusCode: 200, type: typeof(AppPriceTiersResponse), description: "List of AppPriceTiers")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        public virtual IActionResult AppPriceTiersGetCollection([FromQuery (Name = "filter[id]")]List<string> filterId, [FromQuery (Name = "fields[appPriceTiers]")]List<string> fieldsAppPriceTiers, [FromQuery (Name = "limit")]int? limit, [FromQuery (Name = "include")]List<string> include, [FromQuery (Name = "fields[appPricePoints]")]List<string> fieldsAppPricePoints, [FromQuery (Name = "limit[pricePoints]")]int? limitPricePoints)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AppPriceTiersResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : [ {\n    \"relationships\" : {\n      \"pricePoints\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"appPricePoints\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"appPricePoints\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"appPriceTiers\"\n  }, {\n    \"relationships\" : {\n      \"pricePoints\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"appPricePoints\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"appPricePoints\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"appPriceTiers\"\n  } ],\n  \"meta\" : {\n    \"paging\" : {\n      \"total\" : 6,\n      \"limit\" : 0\n    }\n  },\n  \"links\" : {\n    \"next\" : \"next\",\n    \"self\" : \"self\",\n    \"first\" : \"first\"\n  },\n  \"included\" : [ {\n    \"relationships\" : {\n      \"priceTier\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appPriceTiers\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"territory\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"territories\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : {\n      \"proceeds\" : \"proceeds\",\n      \"customerPrice\" : \"customerPrice\"\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"appPricePoints\"\n  }, {\n    \"relationships\" : {\n      \"priceTier\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appPriceTiers\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"territory\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"territories\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : {\n      \"proceeds\" : \"proceeds\",\n      \"customerPrice\" : \"customerPrice\"\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"appPricePoints\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AppPriceTiersResponse>(exampleJson)
            : default(AppPriceTiersResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <param name="fieldsAppPriceTiers">the fields to include for returned resources of type appPriceTiers</param>
        /// <param name="include">comma-separated list of relationships to include</param>
        /// <param name="fieldsAppPricePoints">the fields to include for returned resources of type appPricePoints</param>
        /// <param name="limitPricePoints">maximum number of related pricePoints returned (when they are included)</param>
        /// <response code="200">Single AppPriceTier</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        [HttpGet]
        [Route("/v1/appPriceTiers/{id}")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("AppPriceTiersGetInstance")]
        [SwaggerResponse(statusCode: 200, type: typeof(AppPriceTierResponse), description: "Single AppPriceTier")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        public virtual IActionResult AppPriceTiersGetInstance([FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "fields[appPriceTiers]")]List<string> fieldsAppPriceTiers, [FromQuery (Name = "include")]List<string> include, [FromQuery (Name = "fields[appPricePoints]")]List<string> fieldsAppPricePoints, [FromQuery (Name = "limit[pricePoints]")]int? limitPricePoints)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AppPriceTierResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : {\n    \"relationships\" : {\n      \"pricePoints\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"appPricePoints\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"appPricePoints\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"appPriceTiers\"\n  },\n  \"links\" : {\n    \"self\" : \"self\"\n  },\n  \"included\" : [ {\n    \"relationships\" : {\n      \"priceTier\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appPriceTiers\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"territory\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"territories\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : {\n      \"proceeds\" : \"proceeds\",\n      \"customerPrice\" : \"customerPrice\"\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"appPricePoints\"\n  }, {\n    \"relationships\" : {\n      \"priceTier\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appPriceTiers\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"territory\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"territories\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : {\n      \"proceeds\" : \"proceeds\",\n      \"customerPrice\" : \"customerPrice\"\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"appPricePoints\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AppPriceTierResponse>(exampleJson)
            : default(AppPriceTierResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <param name="fieldsAppPricePoints">the fields to include for returned resources of type appPricePoints</param>
        /// <param name="limit">maximum resources per page</param>
        /// <response code="200">List of related resources</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        [HttpGet]
        [Route("/v1/appPriceTiers/{id}/pricePoints")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("AppPriceTiersPricePointsGetToManyRelated")]
        [SwaggerResponse(statusCode: 200, type: typeof(AppPricePointsResponse), description: "List of related resources")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        public virtual IActionResult AppPriceTiersPricePointsGetToManyRelated([FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "fields[appPricePoints]")]List<string> fieldsAppPricePoints, [FromQuery (Name = "limit")]int? limit)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AppPricePointsResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : [ {\n    \"relationships\" : {\n      \"priceTier\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appPriceTiers\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"territory\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"territories\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : {\n      \"proceeds\" : \"proceeds\",\n      \"customerPrice\" : \"customerPrice\"\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"appPricePoints\"\n  }, {\n    \"relationships\" : {\n      \"priceTier\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appPriceTiers\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"territory\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"territories\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : {\n      \"proceeds\" : \"proceeds\",\n      \"customerPrice\" : \"customerPrice\"\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"appPricePoints\"\n  } ],\n  \"meta\" : {\n    \"paging\" : {\n      \"total\" : 6,\n      \"limit\" : 0\n    }\n  },\n  \"links\" : {\n    \"next\" : \"next\",\n    \"self\" : \"self\",\n    \"first\" : \"first\"\n  },\n  \"included\" : [ {\n    \"attributes\" : {\n      \"currency\" : \"currency\"\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"territories\"\n  }, {\n    \"attributes\" : {\n      \"currency\" : \"currency\"\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"territories\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AppPricePointsResponse>(exampleJson)
            : default(AppPricePointsResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
