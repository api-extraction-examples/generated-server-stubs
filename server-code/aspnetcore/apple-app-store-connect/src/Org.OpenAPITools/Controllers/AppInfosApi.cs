/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class AppInfosApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <param name="fieldsAgeRatingDeclarations">the fields to include for returned resources of type ageRatingDeclarations</param>
        /// <response code="200">Related resource</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        [HttpGet]
        [Route("/v1/appInfos/{id}/ageRatingDeclaration")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("AppInfosAgeRatingDeclarationGetToOneRelated")]
        [SwaggerResponse(statusCode: 200, type: typeof(AgeRatingDeclarationResponse), description: "Related resource")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        public virtual IActionResult AppInfosAgeRatingDeclarationGetToOneRelated([FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "fields[ageRatingDeclarations]")]List<string> fieldsAgeRatingDeclarations)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AgeRatingDeclarationResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : {\n    \"attributes\" : {\n      \"alcoholTobaccoOrDrugUseOrReferences\" : \"NONE\",\n      \"gamblingAndContests\" : true,\n      \"gamblingSimulated\" : \"NONE\",\n      \"sexualContentGraphicAndNudity\" : \"NONE\",\n      \"violenceRealistic\" : \"NONE\",\n      \"gambling\" : true,\n      \"horrorOrFearThemes\" : \"NONE\",\n      \"profanityOrCrudeHumor\" : \"NONE\",\n      \"seventeenPlus\" : true,\n      \"violenceRealisticProlongedGraphicOrSadistic\" : \"NONE\",\n      \"contests\" : \"NONE\",\n      \"matureOrSuggestiveThemes\" : \"NONE\",\n      \"unrestrictedWebAccess\" : true,\n      \"violenceCartoonOrFantasy\" : \"NONE\",\n      \"medicalOrTreatmentInformation\" : \"NONE\",\n      \"sexualContentOrNudity\" : \"NONE\"\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"ageRatingDeclarations\"\n  },\n  \"links\" : {\n    \"self\" : \"self\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AgeRatingDeclarationResponse>(exampleJson)
            : default(AgeRatingDeclarationResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <param name="filterLocale">filter by attribute &#39;locale&#39;</param>
        /// <param name="fieldsAppInfos">the fields to include for returned resources of type appInfos</param>
        /// <param name="fieldsAppInfoLocalizations">the fields to include for returned resources of type appInfoLocalizations</param>
        /// <param name="limit">maximum resources per page</param>
        /// <param name="include">comma-separated list of relationships to include</param>
        /// <response code="200">List of related resources</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        [HttpGet]
        [Route("/v1/appInfos/{id}/appInfoLocalizations")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("AppInfosAppInfoLocalizationsGetToManyRelated")]
        [SwaggerResponse(statusCode: 200, type: typeof(AppInfoLocalizationsResponse), description: "List of related resources")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        public virtual IActionResult AppInfosAppInfoLocalizationsGetToManyRelated([FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "filter[locale]")]List<string> filterLocale, [FromQuery (Name = "fields[appInfos]")]List<string> fieldsAppInfos, [FromQuery (Name = "fields[appInfoLocalizations]")]List<string> fieldsAppInfoLocalizations, [FromQuery (Name = "limit")]int? limit, [FromQuery (Name = "include")]List<string> include)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AppInfoLocalizationsResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : [ {\n    \"relationships\" : {\n      \"appInfo\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appInfos\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : {\n      \"subtitle\" : \"subtitle\",\n      \"name\" : \"name\",\n      \"privacyPolicyText\" : \"privacyPolicyText\",\n      \"locale\" : \"locale\",\n      \"privacyPolicyUrl\" : \"privacyPolicyUrl\"\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"appInfoLocalizations\"\n  }, {\n    \"relationships\" : {\n      \"appInfo\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appInfos\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : {\n      \"subtitle\" : \"subtitle\",\n      \"name\" : \"name\",\n      \"privacyPolicyText\" : \"privacyPolicyText\",\n      \"locale\" : \"locale\",\n      \"privacyPolicyUrl\" : \"privacyPolicyUrl\"\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"appInfoLocalizations\"\n  } ],\n  \"meta\" : {\n    \"paging\" : {\n      \"total\" : 6,\n      \"limit\" : 0\n    }\n  },\n  \"links\" : {\n    \"next\" : \"next\",\n    \"self\" : \"self\",\n    \"first\" : \"first\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AppInfoLocalizationsResponse>(exampleJson)
            : default(AppInfoLocalizationsResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <param name="fieldsAppInfos">the fields to include for returned resources of type appInfos</param>
        /// <param name="include">comma-separated list of relationships to include</param>
        /// <param name="fieldsAgeRatingDeclarations">the fields to include for returned resources of type ageRatingDeclarations</param>
        /// <param name="fieldsAppCategories">the fields to include for returned resources of type appCategories</param>
        /// <param name="fieldsAppInfoLocalizations">the fields to include for returned resources of type appInfoLocalizations</param>
        /// <param name="limitAppInfoLocalizations">maximum number of related appInfoLocalizations returned (when they are included)</param>
        /// <response code="200">Single AppInfo</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        [HttpGet]
        [Route("/v1/appInfos/{id}")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("AppInfosGetInstance")]
        [SwaggerResponse(statusCode: 200, type: typeof(AppInfoResponse), description: "Single AppInfo")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        public virtual IActionResult AppInfosGetInstance([FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "fields[appInfos]")]List<string> fieldsAppInfos, [FromQuery (Name = "include")]List<string> include, [FromQuery (Name = "fields[ageRatingDeclarations]")]List<string> fieldsAgeRatingDeclarations, [FromQuery (Name = "fields[appCategories]")]List<string> fieldsAppCategories, [FromQuery (Name = "fields[appInfoLocalizations]")]List<string> fieldsAppInfoLocalizations, [FromQuery (Name = "limit[appInfoLocalizations]")]int? limitAppInfoLocalizations)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AppInfoResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : {\n    \"relationships\" : {\n      \"app\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"apps\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"secondaryCategory\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appCategories\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"primaryCategory\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appCategories\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"secondarySubcategoryOne\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appCategories\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"primarySubcategoryTwo\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appCategories\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"ageRatingDeclaration\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"ageRatingDeclarations\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"appInfoLocalizations\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"appInfoLocalizations\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"appInfoLocalizations\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"secondarySubcategoryTwo\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appCategories\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"primarySubcategoryOne\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appCategories\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : { },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"appInfos\"\n  },\n  \"links\" : {\n    \"self\" : \"self\"\n  },\n  \"included\" : [ null, null ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AppInfoResponse>(exampleJson)
            : default(AppInfoResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <param name="fieldsAppCategories">the fields to include for returned resources of type appCategories</param>
        /// <response code="200">Related resource</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        [HttpGet]
        [Route("/v1/appInfos/{id}/primaryCategory")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("AppInfosPrimaryCategoryGetToOneRelated")]
        [SwaggerResponse(statusCode: 200, type: typeof(AppCategoryResponse), description: "Related resource")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        public virtual IActionResult AppInfosPrimaryCategoryGetToOneRelated([FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "fields[appCategories]")]List<string> fieldsAppCategories)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AppCategoryResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : {\n    \"relationships\" : {\n      \"parent\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appCategories\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"subcategories\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"appCategories\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"appCategories\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : {\n      \"platforms\" : [ null, null ]\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"appCategories\"\n  },\n  \"links\" : {\n    \"self\" : \"self\"\n  },\n  \"included\" : [ null, null ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AppCategoryResponse>(exampleJson)
            : default(AppCategoryResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <param name="fieldsAppCategories">the fields to include for returned resources of type appCategories</param>
        /// <response code="200">Related resource</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        [HttpGet]
        [Route("/v1/appInfos/{id}/primarySubcategoryOne")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("AppInfosPrimarySubcategoryOneGetToOneRelated")]
        [SwaggerResponse(statusCode: 200, type: typeof(AppCategoryResponse), description: "Related resource")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        public virtual IActionResult AppInfosPrimarySubcategoryOneGetToOneRelated([FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "fields[appCategories]")]List<string> fieldsAppCategories)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AppCategoryResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : {\n    \"relationships\" : {\n      \"parent\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appCategories\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"subcategories\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"appCategories\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"appCategories\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : {\n      \"platforms\" : [ null, null ]\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"appCategories\"\n  },\n  \"links\" : {\n    \"self\" : \"self\"\n  },\n  \"included\" : [ null, null ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AppCategoryResponse>(exampleJson)
            : default(AppCategoryResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <param name="fieldsAppCategories">the fields to include for returned resources of type appCategories</param>
        /// <response code="200">Related resource</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        [HttpGet]
        [Route("/v1/appInfos/{id}/primarySubcategoryTwo")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("AppInfosPrimarySubcategoryTwoGetToOneRelated")]
        [SwaggerResponse(statusCode: 200, type: typeof(AppCategoryResponse), description: "Related resource")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        public virtual IActionResult AppInfosPrimarySubcategoryTwoGetToOneRelated([FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "fields[appCategories]")]List<string> fieldsAppCategories)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AppCategoryResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : {\n    \"relationships\" : {\n      \"parent\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appCategories\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"subcategories\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"appCategories\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"appCategories\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : {\n      \"platforms\" : [ null, null ]\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"appCategories\"\n  },\n  \"links\" : {\n    \"self\" : \"self\"\n  },\n  \"included\" : [ null, null ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AppCategoryResponse>(exampleJson)
            : default(AppCategoryResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <param name="fieldsAppCategories">the fields to include for returned resources of type appCategories</param>
        /// <response code="200">Related resource</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        [HttpGet]
        [Route("/v1/appInfos/{id}/secondaryCategory")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("AppInfosSecondaryCategoryGetToOneRelated")]
        [SwaggerResponse(statusCode: 200, type: typeof(AppCategoryResponse), description: "Related resource")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        public virtual IActionResult AppInfosSecondaryCategoryGetToOneRelated([FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "fields[appCategories]")]List<string> fieldsAppCategories)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AppCategoryResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : {\n    \"relationships\" : {\n      \"parent\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appCategories\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"subcategories\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"appCategories\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"appCategories\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : {\n      \"platforms\" : [ null, null ]\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"appCategories\"\n  },\n  \"links\" : {\n    \"self\" : \"self\"\n  },\n  \"included\" : [ null, null ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AppCategoryResponse>(exampleJson)
            : default(AppCategoryResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <param name="fieldsAppCategories">the fields to include for returned resources of type appCategories</param>
        /// <response code="200">Related resource</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        [HttpGet]
        [Route("/v1/appInfos/{id}/secondarySubcategoryOne")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("AppInfosSecondarySubcategoryOneGetToOneRelated")]
        [SwaggerResponse(statusCode: 200, type: typeof(AppCategoryResponse), description: "Related resource")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        public virtual IActionResult AppInfosSecondarySubcategoryOneGetToOneRelated([FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "fields[appCategories]")]List<string> fieldsAppCategories)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AppCategoryResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : {\n    \"relationships\" : {\n      \"parent\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appCategories\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"subcategories\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"appCategories\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"appCategories\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : {\n      \"platforms\" : [ null, null ]\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"appCategories\"\n  },\n  \"links\" : {\n    \"self\" : \"self\"\n  },\n  \"included\" : [ null, null ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AppCategoryResponse>(exampleJson)
            : default(AppCategoryResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <param name="fieldsAppCategories">the fields to include for returned resources of type appCategories</param>
        /// <response code="200">Related resource</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        [HttpGet]
        [Route("/v1/appInfos/{id}/secondarySubcategoryTwo")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("AppInfosSecondarySubcategoryTwoGetToOneRelated")]
        [SwaggerResponse(statusCode: 200, type: typeof(AppCategoryResponse), description: "Related resource")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        public virtual IActionResult AppInfosSecondarySubcategoryTwoGetToOneRelated([FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "fields[appCategories]")]List<string> fieldsAppCategories)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AppCategoryResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : {\n    \"relationships\" : {\n      \"parent\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appCategories\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"subcategories\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"appCategories\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"appCategories\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : {\n      \"platforms\" : [ null, null ]\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"appCategories\"\n  },\n  \"links\" : {\n    \"self\" : \"self\"\n  },\n  \"included\" : [ null, null ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AppCategoryResponse>(exampleJson)
            : default(AppCategoryResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <param name="appInfoUpdateRequest">AppInfo representation</param>
        /// <response code="200">Single AppInfo</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        /// <response code="409">Request entity error(s)</response>
        [HttpPatch]
        [Route("/v1/appInfos/{id}")]
        [Authorize]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("AppInfosUpdateInstance")]
        [SwaggerResponse(statusCode: 200, type: typeof(AppInfoResponse), description: "Single AppInfo")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        [SwaggerResponse(statusCode: 409, type: typeof(ErrorResponse), description: "Request entity error(s)")]
        public virtual IActionResult AppInfosUpdateInstance([FromRoute (Name = "id")][Required]string id, [FromBody]AppInfoUpdateRequest appInfoUpdateRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AppInfoResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : {\n    \"relationships\" : {\n      \"app\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"apps\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"secondaryCategory\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appCategories\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"primaryCategory\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appCategories\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"secondarySubcategoryOne\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appCategories\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"primarySubcategoryTwo\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appCategories\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"ageRatingDeclaration\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"ageRatingDeclarations\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"appInfoLocalizations\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"appInfoLocalizations\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"appInfoLocalizations\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"secondarySubcategoryTwo\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appCategories\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"primarySubcategoryOne\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appCategories\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : { },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"appInfos\"\n  },\n  \"links\" : {\n    \"self\" : \"self\"\n  },\n  \"included\" : [ null, null ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AppInfoResponse>(exampleJson)
            : default(AppInfoResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
