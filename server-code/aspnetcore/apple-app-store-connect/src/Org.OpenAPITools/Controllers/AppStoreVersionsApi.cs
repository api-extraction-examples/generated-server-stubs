/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class AppStoreVersionsApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <param name="fieldsAgeRatingDeclarations">the fields to include for returned resources of type ageRatingDeclarations (deprecated)</param>
        /// <response code="200">Related resource</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        [HttpGet]
        [Route("/v1/appStoreVersions/{id}/ageRatingDeclaration")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("AppStoreVersionsAgeRatingDeclarationGetToOneRelated")]
        [SwaggerResponse(statusCode: 200, type: typeof(AgeRatingDeclarationResponse), description: "Related resource")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        [Obsolete]
        public virtual IActionResult AppStoreVersionsAgeRatingDeclarationGetToOneRelated([FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "fields[ageRatingDeclarations]")]List<string> fieldsAgeRatingDeclarations)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AgeRatingDeclarationResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : {\n    \"attributes\" : {\n      \"alcoholTobaccoOrDrugUseOrReferences\" : \"NONE\",\n      \"gamblingAndContests\" : true,\n      \"gamblingSimulated\" : \"NONE\",\n      \"sexualContentGraphicAndNudity\" : \"NONE\",\n      \"violenceRealistic\" : \"NONE\",\n      \"gambling\" : true,\n      \"horrorOrFearThemes\" : \"NONE\",\n      \"profanityOrCrudeHumor\" : \"NONE\",\n      \"seventeenPlus\" : true,\n      \"violenceRealisticProlongedGraphicOrSadistic\" : \"NONE\",\n      \"contests\" : \"NONE\",\n      \"matureOrSuggestiveThemes\" : \"NONE\",\n      \"unrestrictedWebAccess\" : true,\n      \"violenceCartoonOrFantasy\" : \"NONE\",\n      \"medicalOrTreatmentInformation\" : \"NONE\",\n      \"sexualContentOrNudity\" : \"NONE\"\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"ageRatingDeclarations\"\n  },\n  \"links\" : {\n    \"self\" : \"self\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AgeRatingDeclarationResponse>(exampleJson)
            : default(AgeRatingDeclarationResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <param name="fieldsAppStoreReviewDetails">the fields to include for returned resources of type appStoreReviewDetails</param>
        /// <param name="fieldsAppStoreVersions">the fields to include for returned resources of type appStoreVersions</param>
        /// <param name="fieldsAppStoreReviewAttachments">the fields to include for returned resources of type appStoreReviewAttachments</param>
        /// <param name="include">comma-separated list of relationships to include</param>
        /// <response code="200">Related resource</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        [HttpGet]
        [Route("/v1/appStoreVersions/{id}/appStoreReviewDetail")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("AppStoreVersionsAppStoreReviewDetailGetToOneRelated")]
        [SwaggerResponse(statusCode: 200, type: typeof(AppStoreReviewDetailResponse), description: "Related resource")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        public virtual IActionResult AppStoreVersionsAppStoreReviewDetailGetToOneRelated([FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "fields[appStoreReviewDetails]")]List<string> fieldsAppStoreReviewDetails, [FromQuery (Name = "fields[appStoreVersions]")]List<string> fieldsAppStoreVersions, [FromQuery (Name = "fields[appStoreReviewAttachments]")]List<string> fieldsAppStoreReviewAttachments, [FromQuery (Name = "include")]List<string> include)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AppStoreReviewDetailResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : {\n    \"relationships\" : {\n      \"appStoreVersion\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appStoreVersions\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"appStoreReviewAttachments\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"appStoreReviewAttachments\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"appStoreReviewAttachments\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : {\n      \"demoAccountPassword\" : \"demoAccountPassword\",\n      \"notes\" : \"notes\",\n      \"contactEmail\" : \"contactEmail\",\n      \"contactFirstName\" : \"contactFirstName\",\n      \"demoAccountRequired\" : true,\n      \"demoAccountName\" : \"demoAccountName\",\n      \"contactLastName\" : \"contactLastName\",\n      \"contactPhone\" : \"contactPhone\"\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"appStoreReviewDetails\"\n  },\n  \"links\" : {\n    \"self\" : \"self\"\n  },\n  \"included\" : [ {\n    \"relationships\" : {\n      \"appStoreReviewDetail\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appStoreReviewDetails\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : {\n      \"fileName\" : \"fileName\",\n      \"fileSize\" : 0,\n      \"assetDeliveryState\" : {\n        \"warnings\" : [ {\n          \"code\" : \"code\",\n          \"description\" : \"description\"\n        }, {\n          \"code\" : \"code\",\n          \"description\" : \"description\"\n        } ],\n        \"state\" : \"AWAITING_UPLOAD\",\n        \"errors\" : [ {\n          \"code\" : \"code\",\n          \"description\" : \"description\"\n        }, {\n          \"code\" : \"code\",\n          \"description\" : \"description\"\n        } ]\n      },\n      \"sourceFileChecksum\" : \"sourceFileChecksum\",\n      \"uploadOperations\" : [ {\n        \"requestHeaders\" : [ {\n          \"name\" : \"name\",\n          \"value\" : \"value\"\n        }, {\n          \"name\" : \"name\",\n          \"value\" : \"value\"\n        } ],\n        \"method\" : \"method\",\n        \"offset\" : 5,\n        \"length\" : 5,\n        \"url\" : \"url\"\n      }, {\n        \"requestHeaders\" : [ {\n          \"name\" : \"name\",\n          \"value\" : \"value\"\n        }, {\n          \"name\" : \"name\",\n          \"value\" : \"value\"\n        } ],\n        \"method\" : \"method\",\n        \"offset\" : 5,\n        \"length\" : 5,\n        \"url\" : \"url\"\n      } ]\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"appStoreReviewAttachments\"\n  }, {\n    \"relationships\" : {\n      \"appStoreReviewDetail\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appStoreReviewDetails\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : {\n      \"fileName\" : \"fileName\",\n      \"fileSize\" : 0,\n      \"assetDeliveryState\" : {\n        \"warnings\" : [ {\n          \"code\" : \"code\",\n          \"description\" : \"description\"\n        }, {\n          \"code\" : \"code\",\n          \"description\" : \"description\"\n        } ],\n        \"state\" : \"AWAITING_UPLOAD\",\n        \"errors\" : [ {\n          \"code\" : \"code\",\n          \"description\" : \"description\"\n        }, {\n          \"code\" : \"code\",\n          \"description\" : \"description\"\n        } ]\n      },\n      \"sourceFileChecksum\" : \"sourceFileChecksum\",\n      \"uploadOperations\" : [ {\n        \"requestHeaders\" : [ {\n          \"name\" : \"name\",\n          \"value\" : \"value\"\n        }, {\n          \"name\" : \"name\",\n          \"value\" : \"value\"\n        } ],\n        \"method\" : \"method\",\n        \"offset\" : 5,\n        \"length\" : 5,\n        \"url\" : \"url\"\n      }, {\n        \"requestHeaders\" : [ {\n          \"name\" : \"name\",\n          \"value\" : \"value\"\n        }, {\n          \"name\" : \"name\",\n          \"value\" : \"value\"\n        } ],\n        \"method\" : \"method\",\n        \"offset\" : 5,\n        \"length\" : 5,\n        \"url\" : \"url\"\n      } ]\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"appStoreReviewAttachments\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AppStoreReviewDetailResponse>(exampleJson)
            : default(AppStoreReviewDetailResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <param name="fieldsAppStoreVersionLocalizations">the fields to include for returned resources of type appStoreVersionLocalizations</param>
        /// <param name="limit">maximum resources per page</param>
        /// <response code="200">List of related resources</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        [HttpGet]
        [Route("/v1/appStoreVersions/{id}/appStoreVersionLocalizations")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("AppStoreVersionsAppStoreVersionLocalizationsGetToManyRelated")]
        [SwaggerResponse(statusCode: 200, type: typeof(AppStoreVersionLocalizationsResponse), description: "List of related resources")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        public virtual IActionResult AppStoreVersionsAppStoreVersionLocalizationsGetToManyRelated([FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "fields[appStoreVersionLocalizations]")]List<string> fieldsAppStoreVersionLocalizations, [FromQuery (Name = "limit")]int? limit)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AppStoreVersionLocalizationsResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : [ {\n    \"relationships\" : {\n      \"appScreenshotSets\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"appScreenshotSets\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"appScreenshotSets\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"appStoreVersion\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appStoreVersions\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"appPreviewSets\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"appPreviewSets\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"appPreviewSets\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : {\n      \"whatsNew\" : \"whatsNew\",\n      \"keywords\" : \"keywords\",\n      \"marketingUrl\" : \"https://openapi-generator.tech\",\n      \"supportUrl\" : \"https://openapi-generator.tech\",\n      \"description\" : \"description\",\n      \"locale\" : \"locale\",\n      \"promotionalText\" : \"promotionalText\"\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"appStoreVersionLocalizations\"\n  }, {\n    \"relationships\" : {\n      \"appScreenshotSets\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"appScreenshotSets\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"appScreenshotSets\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"appStoreVersion\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appStoreVersions\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"appPreviewSets\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"appPreviewSets\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"appPreviewSets\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : {\n      \"whatsNew\" : \"whatsNew\",\n      \"keywords\" : \"keywords\",\n      \"marketingUrl\" : \"https://openapi-generator.tech\",\n      \"supportUrl\" : \"https://openapi-generator.tech\",\n      \"description\" : \"description\",\n      \"locale\" : \"locale\",\n      \"promotionalText\" : \"promotionalText\"\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"appStoreVersionLocalizations\"\n  } ],\n  \"meta\" : {\n    \"paging\" : {\n      \"total\" : 6,\n      \"limit\" : 0\n    }\n  },\n  \"links\" : {\n    \"next\" : \"next\",\n    \"self\" : \"self\",\n    \"first\" : \"first\"\n  },\n  \"included\" : [ null, null ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AppStoreVersionLocalizationsResponse>(exampleJson)
            : default(AppStoreVersionLocalizationsResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <param name="fieldsAppStoreVersionPhasedReleases">the fields to include for returned resources of type appStoreVersionPhasedReleases</param>
        /// <response code="200">Related resource</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        [HttpGet]
        [Route("/v1/appStoreVersions/{id}/appStoreVersionPhasedRelease")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("AppStoreVersionsAppStoreVersionPhasedReleaseGetToOneRelated")]
        [SwaggerResponse(statusCode: 200, type: typeof(AppStoreVersionPhasedReleaseResponse), description: "Related resource")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        public virtual IActionResult AppStoreVersionsAppStoreVersionPhasedReleaseGetToOneRelated([FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "fields[appStoreVersionPhasedReleases]")]List<string> fieldsAppStoreVersionPhasedReleases)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AppStoreVersionPhasedReleaseResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : {\n    \"attributes\" : {\n      \"currentDayNumber\" : 0,\n      \"totalPauseDuration\" : 6,\n      \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"appStoreVersionPhasedReleases\"\n  },\n  \"links\" : {\n    \"self\" : \"self\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AppStoreVersionPhasedReleaseResponse>(exampleJson)
            : default(AppStoreVersionPhasedReleaseResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <param name="fieldsAppStoreVersions">the fields to include for returned resources of type appStoreVersions</param>
        /// <param name="fieldsAppStoreVersionSubmissions">the fields to include for returned resources of type appStoreVersionSubmissions</param>
        /// <param name="include">comma-separated list of relationships to include</param>
        /// <response code="200">Related resource</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        [HttpGet]
        [Route("/v1/appStoreVersions/{id}/appStoreVersionSubmission")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("AppStoreVersionsAppStoreVersionSubmissionGetToOneRelated")]
        [SwaggerResponse(statusCode: 200, type: typeof(AppStoreVersionSubmissionResponse), description: "Related resource")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        public virtual IActionResult AppStoreVersionsAppStoreVersionSubmissionGetToOneRelated([FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "fields[appStoreVersions]")]List<string> fieldsAppStoreVersions, [FromQuery (Name = "fields[appStoreVersionSubmissions]")]List<string> fieldsAppStoreVersionSubmissions, [FromQuery (Name = "include")]List<string> include)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AppStoreVersionSubmissionResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : {\n    \"relationships\" : {\n      \"appStoreVersion\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appStoreVersions\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"appStoreVersionSubmissions\"\n  },\n  \"links\" : {\n    \"self\" : \"self\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AppStoreVersionSubmissionResponse>(exampleJson)
            : default(AppStoreVersionSubmissionResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <param name="fieldsBuilds">the fields to include for returned resources of type builds</param>
        /// <response code="200">Related resource</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        [HttpGet]
        [Route("/v1/appStoreVersions/{id}/build")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("AppStoreVersionsBuildGetToOneRelated")]
        [SwaggerResponse(statusCode: 200, type: typeof(BuildResponse), description: "Related resource")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        public virtual IActionResult AppStoreVersionsBuildGetToOneRelated([FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "fields[builds]")]List<string> fieldsBuilds)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(BuildResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : {\n    \"relationships\" : {\n      \"app\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"apps\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"individualTesters\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"betaTesters\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"betaTesters\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"preReleaseVersion\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"preReleaseVersions\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"betaAppReviewSubmission\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"betaAppReviewSubmissions\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"appStoreVersion\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appStoreVersions\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"appEncryptionDeclaration\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appEncryptionDeclarations\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"buildBetaDetail\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"buildBetaDetails\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"icons\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"buildIcons\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"buildIcons\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"betaBuildLocalizations\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"betaBuildLocalizations\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"betaBuildLocalizations\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : {\n      \"minOsVersion\" : \"minOsVersion\",\n      \"processingState\" : \"PROCESSING\",\n      \"expired\" : true,\n      \"iconAssetToken\" : {\n        \"width\" : 1,\n        \"height\" : 6,\n        \"templateUrl\" : \"templateUrl\"\n      },\n      \"usesNonExemptEncryption\" : true,\n      \"uploadedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"version\" : \"version\",\n      \"expirationDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"builds\"\n  },\n  \"links\" : {\n    \"self\" : \"self\"\n  },\n  \"included\" : [ null, null ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BuildResponse>(exampleJson)
            : default(BuildResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <response code="200">Related linkage</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        [HttpGet]
        [Route("/v1/appStoreVersions/{id}/relationships/build")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("AppStoreVersionsBuildGetToOneRelationship")]
        [SwaggerResponse(statusCode: 200, type: typeof(AppStoreVersionBuildLinkageResponse), description: "Related linkage")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        public virtual IActionResult AppStoreVersionsBuildGetToOneRelationship([FromRoute (Name = "id")][Required]string id)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AppStoreVersionBuildLinkageResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : {\n    \"id\" : \"id\",\n    \"type\" : \"builds\"\n  },\n  \"links\" : {\n    \"self\" : \"self\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AppStoreVersionBuildLinkageResponse>(exampleJson)
            : default(AppStoreVersionBuildLinkageResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <param name="appStoreVersionBuildLinkageRequest">Related linkage</param>
        /// <response code="204">Success (no content)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        /// <response code="409">Request entity error(s)</response>
        [HttpPatch]
        [Route("/v1/appStoreVersions/{id}/relationships/build")]
        [Authorize]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("AppStoreVersionsBuildUpdateToOneRelationship")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        [SwaggerResponse(statusCode: 409, type: typeof(ErrorResponse), description: "Request entity error(s)")]
        public virtual IActionResult AppStoreVersionsBuildUpdateToOneRelationship([FromRoute (Name = "id")][Required]string id, [FromBody]AppStoreVersionBuildLinkageRequest appStoreVersionBuildLinkageRequest)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(ErrorResponse));

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="appStoreVersionCreateRequest">AppStoreVersion representation</param>
        /// <response code="201">Single AppStoreVersion</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="409">Request entity error(s)</response>
        [HttpPost]
        [Route("/v1/appStoreVersions")]
        [Authorize]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("AppStoreVersionsCreateInstance")]
        [SwaggerResponse(statusCode: 201, type: typeof(AppStoreVersionResponse), description: "Single AppStoreVersion")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 409, type: typeof(ErrorResponse), description: "Request entity error(s)")]
        public virtual IActionResult AppStoreVersionsCreateInstance([FromBody]AppStoreVersionCreateRequest appStoreVersionCreateRequest)
        {

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(AppStoreVersionResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : {\n    \"relationships\" : {\n      \"app\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"apps\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"appStoreVersionLocalizations\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"appStoreVersionLocalizations\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"appStoreVersionLocalizations\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"appStoreVersionPhasedRelease\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appStoreVersionPhasedReleases\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"idfaDeclaration\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"idfaDeclarations\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"appStoreReviewDetail\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appStoreReviewDetails\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"build\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"builds\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"ageRatingDeclaration\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"ageRatingDeclarations\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"routingAppCoverage\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"routingAppCoverages\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"appStoreVersionSubmission\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appStoreVersionSubmissions\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : {\n      \"copyright\" : \"copyright\",\n      \"downloadable\" : true,\n      \"createdDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"earliestReleaseDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"usesIdfa\" : true,\n      \"versionString\" : \"versionString\",\n      \"releaseType\" : \"MANUAL\"\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"appStoreVersions\"\n  },\n  \"links\" : {\n    \"self\" : \"self\"\n  },\n  \"included\" : [ null, null ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AppStoreVersionResponse>(exampleJson)
            : default(AppStoreVersionResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <response code="204">Success (no content)</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        /// <response code="409">Request entity error(s)</response>
        [HttpDelete]
        [Route("/v1/appStoreVersions/{id}")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("AppStoreVersionsDeleteInstance")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        [SwaggerResponse(statusCode: 409, type: typeof(ErrorResponse), description: "Request entity error(s)")]
        public virtual IActionResult AppStoreVersionsDeleteInstance([FromRoute (Name = "id")][Required]string id)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(ErrorResponse));

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <param name="fieldsAppStoreVersions">the fields to include for returned resources of type appStoreVersions</param>
        /// <param name="include">comma-separated list of relationships to include</param>
        /// <param name="fieldsAppStoreVersionLocalizations">the fields to include for returned resources of type appStoreVersionLocalizations</param>
        /// <param name="fieldsIdfaDeclarations">the fields to include for returned resources of type idfaDeclarations</param>
        /// <param name="fieldsRoutingAppCoverages">the fields to include for returned resources of type routingAppCoverages</param>
        /// <param name="fieldsAppStoreVersionPhasedReleases">the fields to include for returned resources of type appStoreVersionPhasedReleases</param>
        /// <param name="fieldsAgeRatingDeclarations">the fields to include for returned resources of type ageRatingDeclarations (deprecated)</param>
        /// <param name="fieldsAppStoreReviewDetails">the fields to include for returned resources of type appStoreReviewDetails</param>
        /// <param name="fieldsBuilds">the fields to include for returned resources of type builds</param>
        /// <param name="fieldsAppStoreVersionSubmissions">the fields to include for returned resources of type appStoreVersionSubmissions</param>
        /// <param name="limitAppStoreVersionLocalizations">maximum number of related appStoreVersionLocalizations returned (when they are included)</param>
        /// <response code="200">Single AppStoreVersion</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        [HttpGet]
        [Route("/v1/appStoreVersions/{id}")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("AppStoreVersionsGetInstance")]
        [SwaggerResponse(statusCode: 200, type: typeof(AppStoreVersionResponse), description: "Single AppStoreVersion")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        public virtual IActionResult AppStoreVersionsGetInstance([FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "fields[appStoreVersions]")]List<string> fieldsAppStoreVersions, [FromQuery (Name = "include")]List<string> include, [FromQuery (Name = "fields[appStoreVersionLocalizations]")]List<string> fieldsAppStoreVersionLocalizations, [FromQuery (Name = "fields[idfaDeclarations]")]List<string> fieldsIdfaDeclarations, [FromQuery (Name = "fields[routingAppCoverages]")]List<string> fieldsRoutingAppCoverages, [FromQuery (Name = "fields[appStoreVersionPhasedReleases]")]List<string> fieldsAppStoreVersionPhasedReleases, [FromQuery (Name = "fields[ageRatingDeclarations]")]List<string> fieldsAgeRatingDeclarations, [FromQuery (Name = "fields[appStoreReviewDetails]")]List<string> fieldsAppStoreReviewDetails, [FromQuery (Name = "fields[builds]")]List<string> fieldsBuilds, [FromQuery (Name = "fields[appStoreVersionSubmissions]")]List<string> fieldsAppStoreVersionSubmissions, [FromQuery (Name = "limit[appStoreVersionLocalizations]")]int? limitAppStoreVersionLocalizations)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AppStoreVersionResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : {\n    \"relationships\" : {\n      \"app\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"apps\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"appStoreVersionLocalizations\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"appStoreVersionLocalizations\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"appStoreVersionLocalizations\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"appStoreVersionPhasedRelease\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appStoreVersionPhasedReleases\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"idfaDeclaration\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"idfaDeclarations\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"appStoreReviewDetail\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appStoreReviewDetails\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"build\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"builds\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"ageRatingDeclaration\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"ageRatingDeclarations\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"routingAppCoverage\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"routingAppCoverages\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"appStoreVersionSubmission\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appStoreVersionSubmissions\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : {\n      \"copyright\" : \"copyright\",\n      \"downloadable\" : true,\n      \"createdDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"earliestReleaseDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"usesIdfa\" : true,\n      \"versionString\" : \"versionString\",\n      \"releaseType\" : \"MANUAL\"\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"appStoreVersions\"\n  },\n  \"links\" : {\n    \"self\" : \"self\"\n  },\n  \"included\" : [ null, null ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AppStoreVersionResponse>(exampleJson)
            : default(AppStoreVersionResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <param name="fieldsIdfaDeclarations">the fields to include for returned resources of type idfaDeclarations</param>
        /// <response code="200">Related resource</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        [HttpGet]
        [Route("/v1/appStoreVersions/{id}/idfaDeclaration")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("AppStoreVersionsIdfaDeclarationGetToOneRelated")]
        [SwaggerResponse(statusCode: 200, type: typeof(IdfaDeclarationResponse), description: "Related resource")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        public virtual IActionResult AppStoreVersionsIdfaDeclarationGetToOneRelated([FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "fields[idfaDeclarations]")]List<string> fieldsIdfaDeclarations)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(IdfaDeclarationResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : {\n    \"relationships\" : {\n      \"appStoreVersion\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appStoreVersions\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : {\n      \"attributesAppInstallationToPreviousAd\" : true,\n      \"attributesActionWithPreviousAd\" : true,\n      \"servesAds\" : true,\n      \"honorsLimitedAdTracking\" : true\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"idfaDeclarations\"\n  },\n  \"links\" : {\n    \"self\" : \"self\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<IdfaDeclarationResponse>(exampleJson)
            : default(IdfaDeclarationResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <param name="fieldsRoutingAppCoverages">the fields to include for returned resources of type routingAppCoverages</param>
        /// <response code="200">Related resource</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        [HttpGet]
        [Route("/v1/appStoreVersions/{id}/routingAppCoverage")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("AppStoreVersionsRoutingAppCoverageGetToOneRelated")]
        [SwaggerResponse(statusCode: 200, type: typeof(RoutingAppCoverageResponse), description: "Related resource")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        public virtual IActionResult AppStoreVersionsRoutingAppCoverageGetToOneRelated([FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "fields[routingAppCoverages]")]List<string> fieldsRoutingAppCoverages)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(RoutingAppCoverageResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : {\n    \"relationships\" : {\n      \"appStoreVersion\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appStoreVersions\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : {\n      \"fileName\" : \"fileName\",\n      \"fileSize\" : 0,\n      \"assetDeliveryState\" : {\n        \"warnings\" : [ {\n          \"code\" : \"code\",\n          \"description\" : \"description\"\n        }, {\n          \"code\" : \"code\",\n          \"description\" : \"description\"\n        } ],\n        \"state\" : \"AWAITING_UPLOAD\",\n        \"errors\" : [ {\n          \"code\" : \"code\",\n          \"description\" : \"description\"\n        }, {\n          \"code\" : \"code\",\n          \"description\" : \"description\"\n        } ]\n      },\n      \"sourceFileChecksum\" : \"sourceFileChecksum\",\n      \"uploadOperations\" : [ {\n        \"requestHeaders\" : [ {\n          \"name\" : \"name\",\n          \"value\" : \"value\"\n        }, {\n          \"name\" : \"name\",\n          \"value\" : \"value\"\n        } ],\n        \"method\" : \"method\",\n        \"offset\" : 5,\n        \"length\" : 5,\n        \"url\" : \"url\"\n      }, {\n        \"requestHeaders\" : [ {\n          \"name\" : \"name\",\n          \"value\" : \"value\"\n        }, {\n          \"name\" : \"name\",\n          \"value\" : \"value\"\n        } ],\n        \"method\" : \"method\",\n        \"offset\" : 5,\n        \"length\" : 5,\n        \"url\" : \"url\"\n      } ]\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"routingAppCoverages\"\n  },\n  \"links\" : {\n    \"self\" : \"self\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<RoutingAppCoverageResponse>(exampleJson)
            : default(RoutingAppCoverageResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <param name="appStoreVersionUpdateRequest">AppStoreVersion representation</param>
        /// <response code="200">Single AppStoreVersion</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        /// <response code="409">Request entity error(s)</response>
        [HttpPatch]
        [Route("/v1/appStoreVersions/{id}")]
        [Authorize]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("AppStoreVersionsUpdateInstance")]
        [SwaggerResponse(statusCode: 200, type: typeof(AppStoreVersionResponse), description: "Single AppStoreVersion")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        [SwaggerResponse(statusCode: 409, type: typeof(ErrorResponse), description: "Request entity error(s)")]
        public virtual IActionResult AppStoreVersionsUpdateInstance([FromRoute (Name = "id")][Required]string id, [FromBody]AppStoreVersionUpdateRequest appStoreVersionUpdateRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AppStoreVersionResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : {\n    \"relationships\" : {\n      \"app\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"apps\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"appStoreVersionLocalizations\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"appStoreVersionLocalizations\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"appStoreVersionLocalizations\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"appStoreVersionPhasedRelease\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appStoreVersionPhasedReleases\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"idfaDeclaration\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"idfaDeclarations\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"appStoreReviewDetail\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appStoreReviewDetails\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"build\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"builds\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"ageRatingDeclaration\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"ageRatingDeclarations\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"routingAppCoverage\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"routingAppCoverages\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"appStoreVersionSubmission\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appStoreVersionSubmissions\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : {\n      \"copyright\" : \"copyright\",\n      \"downloadable\" : true,\n      \"createdDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"earliestReleaseDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"usesIdfa\" : true,\n      \"versionString\" : \"versionString\",\n      \"releaseType\" : \"MANUAL\"\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"appStoreVersions\"\n  },\n  \"links\" : {\n    \"self\" : \"self\"\n  },\n  \"included\" : [ null, null ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AppStoreVersionResponse>(exampleJson)
            : default(AppStoreVersionResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
