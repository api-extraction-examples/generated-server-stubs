/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class InAppPurchasesApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <param name="fieldsInAppPurchases">the fields to include for returned resources of type inAppPurchases</param>
        /// <param name="include">comma-separated list of relationships to include</param>
        /// <param name="limitApps">maximum number of related apps returned (when they are included)</param>
        /// <response code="200">Single InAppPurchase</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        [HttpGet]
        [Route("/v1/inAppPurchases/{id}")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("InAppPurchasesGetInstance")]
        [SwaggerResponse(statusCode: 200, type: typeof(InAppPurchaseResponse), description: "Single InAppPurchase")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        public virtual IActionResult InAppPurchasesGetInstance([FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "fields[inAppPurchases]")]List<string> fieldsInAppPurchases, [FromQuery (Name = "include")]List<string> include, [FromQuery (Name = "limit[apps]")]int? limitApps)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(InAppPurchaseResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : {\n    \"relationships\" : {\n      \"apps\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"apps\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"apps\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : {\n      \"productId\" : \"productId\",\n      \"state\" : \"CREATED\",\n      \"inAppPurchaseType\" : \"AUTOMATICALLY_RENEWABLE_SUBSCRIPTION\",\n      \"referenceName\" : \"referenceName\"\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"inAppPurchases\"\n  },\n  \"links\" : {\n    \"self\" : \"self\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<InAppPurchaseResponse>(exampleJson)
            : default(InAppPurchaseResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
