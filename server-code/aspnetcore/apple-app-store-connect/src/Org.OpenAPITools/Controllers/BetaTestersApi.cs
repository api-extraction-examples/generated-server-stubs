/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class BetaTestersApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <param name="betaTesterAppsLinkagesRequest">List of related linkages</param>
        /// <response code="204">Success (no content)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        /// <response code="409">Request entity error(s)</response>
        [HttpDelete]
        [Route("/v1/betaTesters/{id}/relationships/apps")]
        [Authorize]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("BetaTestersAppsDeleteToManyRelationship")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        [SwaggerResponse(statusCode: 409, type: typeof(ErrorResponse), description: "Request entity error(s)")]
        public virtual IActionResult BetaTestersAppsDeleteToManyRelationship([FromRoute (Name = "id")][Required]string id, [FromBody]BetaTesterAppsLinkagesRequest betaTesterAppsLinkagesRequest)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(ErrorResponse));

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <param name="fieldsApps">the fields to include for returned resources of type apps</param>
        /// <param name="limit">maximum resources per page</param>
        /// <response code="200">List of related resources</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        [HttpGet]
        [Route("/v1/betaTesters/{id}/apps")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("BetaTestersAppsGetToManyRelated")]
        [SwaggerResponse(statusCode: 200, type: typeof(AppsResponse), description: "List of related resources")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        public virtual IActionResult BetaTestersAppsGetToManyRelated([FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "fields[apps]")]List<string> fieldsApps, [FromQuery (Name = "limit")]int? limit)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AppsResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : [ {\n    \"relationships\" : {\n      \"betaGroups\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"betaGroups\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"betaGroups\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"endUserLicenseAgreement\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"endUserLicenseAgreements\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"appInfos\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"appInfos\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"appInfos\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"preReleaseVersions\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"preReleaseVersions\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"preReleaseVersions\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"inAppPurchases\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"inAppPurchases\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"inAppPurchases\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"betaAppReviewDetail\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"betaAppReviewDetails\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"betaLicenseAgreement\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"betaLicenseAgreements\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"gameCenterEnabledVersions\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"gameCenterEnabledVersions\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"gameCenterEnabledVersions\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"appStoreVersions\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"appStoreVersions\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"appStoreVersions\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"builds\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"builds\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"builds\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"preOrder\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appPreOrders\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"availableTerritories\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"territories\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"territories\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"betaAppLocalizations\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"betaAppLocalizations\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"betaAppLocalizations\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"prices\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"appPrices\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"appPrices\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : {\n      \"bundleId\" : \"bundleId\",\n      \"name\" : \"name\",\n      \"isOrEverWasMadeForKids\" : true,\n      \"sku\" : \"sku\",\n      \"availableInNewTerritories\" : true,\n      \"contentRightsDeclaration\" : \"DOES_NOT_USE_THIRD_PARTY_CONTENT\",\n      \"primaryLocale\" : \"primaryLocale\"\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"apps\"\n  }, {\n    \"relationships\" : {\n      \"betaGroups\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"betaGroups\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"betaGroups\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"endUserLicenseAgreement\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"endUserLicenseAgreements\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"appInfos\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"appInfos\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"appInfos\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"preReleaseVersions\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"preReleaseVersions\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"preReleaseVersions\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"inAppPurchases\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"inAppPurchases\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"inAppPurchases\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"betaAppReviewDetail\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"betaAppReviewDetails\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"betaLicenseAgreement\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"betaLicenseAgreements\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"gameCenterEnabledVersions\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"gameCenterEnabledVersions\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"gameCenterEnabledVersions\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"appStoreVersions\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"appStoreVersions\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"appStoreVersions\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"builds\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"builds\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"builds\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"preOrder\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appPreOrders\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"availableTerritories\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"territories\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"territories\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"betaAppLocalizations\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"betaAppLocalizations\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"betaAppLocalizations\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"prices\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"appPrices\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"appPrices\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : {\n      \"bundleId\" : \"bundleId\",\n      \"name\" : \"name\",\n      \"isOrEverWasMadeForKids\" : true,\n      \"sku\" : \"sku\",\n      \"availableInNewTerritories\" : true,\n      \"contentRightsDeclaration\" : \"DOES_NOT_USE_THIRD_PARTY_CONTENT\",\n      \"primaryLocale\" : \"primaryLocale\"\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"apps\"\n  } ],\n  \"meta\" : {\n    \"paging\" : {\n      \"total\" : 6,\n      \"limit\" : 0\n    }\n  },\n  \"links\" : {\n    \"next\" : \"next\",\n    \"self\" : \"self\",\n    \"first\" : \"first\"\n  },\n  \"included\" : [ null, null ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AppsResponse>(exampleJson)
            : default(AppsResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <param name="limit">maximum resources per page</param>
        /// <response code="200">List of related linkages</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        [HttpGet]
        [Route("/v1/betaTesters/{id}/relationships/apps")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("BetaTestersAppsGetToManyRelationship")]
        [SwaggerResponse(statusCode: 200, type: typeof(BetaTesterAppsLinkagesResponse), description: "List of related linkages")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        public virtual IActionResult BetaTestersAppsGetToManyRelationship([FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "limit")]int? limit)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(BetaTesterAppsLinkagesResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : [ {\n    \"id\" : \"id\",\n    \"type\" : \"apps\"\n  }, {\n    \"id\" : \"id\",\n    \"type\" : \"apps\"\n  } ],\n  \"meta\" : {\n    \"paging\" : {\n      \"total\" : 6,\n      \"limit\" : 0\n    }\n  },\n  \"links\" : {\n    \"next\" : \"next\",\n    \"self\" : \"self\",\n    \"first\" : \"first\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BetaTesterAppsLinkagesResponse>(exampleJson)
            : default(BetaTesterAppsLinkagesResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <param name="betaTesterBetaGroupsLinkagesRequest">List of related linkages</param>
        /// <response code="204">Success (no content)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        /// <response code="409">Request entity error(s)</response>
        [HttpPost]
        [Route("/v1/betaTesters/{id}/relationships/betaGroups")]
        [Authorize]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("BetaTestersBetaGroupsCreateToManyRelationship")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        [SwaggerResponse(statusCode: 409, type: typeof(ErrorResponse), description: "Request entity error(s)")]
        public virtual IActionResult BetaTestersBetaGroupsCreateToManyRelationship([FromRoute (Name = "id")][Required]string id, [FromBody]BetaTesterBetaGroupsLinkagesRequest betaTesterBetaGroupsLinkagesRequest)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(ErrorResponse));

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <param name="betaTesterBetaGroupsLinkagesRequest">List of related linkages</param>
        /// <response code="204">Success (no content)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        /// <response code="409">Request entity error(s)</response>
        [HttpDelete]
        [Route("/v1/betaTesters/{id}/relationships/betaGroups")]
        [Authorize]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("BetaTestersBetaGroupsDeleteToManyRelationship")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        [SwaggerResponse(statusCode: 409, type: typeof(ErrorResponse), description: "Request entity error(s)")]
        public virtual IActionResult BetaTestersBetaGroupsDeleteToManyRelationship([FromRoute (Name = "id")][Required]string id, [FromBody]BetaTesterBetaGroupsLinkagesRequest betaTesterBetaGroupsLinkagesRequest)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(ErrorResponse));

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <param name="fieldsBetaGroups">the fields to include for returned resources of type betaGroups</param>
        /// <param name="limit">maximum resources per page</param>
        /// <response code="200">List of related resources</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        [HttpGet]
        [Route("/v1/betaTesters/{id}/betaGroups")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("BetaTestersBetaGroupsGetToManyRelated")]
        [SwaggerResponse(statusCode: 200, type: typeof(BetaGroupsResponse), description: "List of related resources")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        public virtual IActionResult BetaTestersBetaGroupsGetToManyRelated([FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "fields[betaGroups]")]List<string> fieldsBetaGroups, [FromQuery (Name = "limit")]int? limit)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(BetaGroupsResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : [ {\n    \"relationships\" : {\n      \"app\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"apps\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"builds\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"builds\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"builds\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"betaTesters\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"betaTesters\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"betaTesters\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : {\n      \"publicLinkLimit\" : 0,\n      \"createdDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"publicLink\" : \"publicLink\",\n      \"publicLinkEnabled\" : true,\n      \"publicLinkId\" : \"publicLinkId\",\n      \"isInternalGroup\" : true,\n      \"name\" : \"name\",\n      \"feedbackEnabled\" : true,\n      \"publicLinkLimitEnabled\" : true\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"betaGroups\"\n  }, {\n    \"relationships\" : {\n      \"app\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"apps\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"builds\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"builds\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"builds\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"betaTesters\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"betaTesters\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"betaTesters\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : {\n      \"publicLinkLimit\" : 0,\n      \"createdDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"publicLink\" : \"publicLink\",\n      \"publicLinkEnabled\" : true,\n      \"publicLinkId\" : \"publicLinkId\",\n      \"isInternalGroup\" : true,\n      \"name\" : \"name\",\n      \"feedbackEnabled\" : true,\n      \"publicLinkLimitEnabled\" : true\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"betaGroups\"\n  } ],\n  \"meta\" : {\n    \"paging\" : {\n      \"total\" : 6,\n      \"limit\" : 0\n    }\n  },\n  \"links\" : {\n    \"next\" : \"next\",\n    \"self\" : \"self\",\n    \"first\" : \"first\"\n  },\n  \"included\" : [ null, null ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BetaGroupsResponse>(exampleJson)
            : default(BetaGroupsResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <param name="limit">maximum resources per page</param>
        /// <response code="200">List of related linkages</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        [HttpGet]
        [Route("/v1/betaTesters/{id}/relationships/betaGroups")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("BetaTestersBetaGroupsGetToManyRelationship")]
        [SwaggerResponse(statusCode: 200, type: typeof(BetaTesterBetaGroupsLinkagesResponse), description: "List of related linkages")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        public virtual IActionResult BetaTestersBetaGroupsGetToManyRelationship([FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "limit")]int? limit)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(BetaTesterBetaGroupsLinkagesResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : [ {\n    \"id\" : \"id\",\n    \"type\" : \"betaGroups\"\n  }, {\n    \"id\" : \"id\",\n    \"type\" : \"betaGroups\"\n  } ],\n  \"meta\" : {\n    \"paging\" : {\n      \"total\" : 6,\n      \"limit\" : 0\n    }\n  },\n  \"links\" : {\n    \"next\" : \"next\",\n    \"self\" : \"self\",\n    \"first\" : \"first\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BetaTesterBetaGroupsLinkagesResponse>(exampleJson)
            : default(BetaTesterBetaGroupsLinkagesResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <param name="betaTesterBuildsLinkagesRequest">List of related linkages</param>
        /// <response code="204">Success (no content)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        /// <response code="409">Request entity error(s)</response>
        [HttpPost]
        [Route("/v1/betaTesters/{id}/relationships/builds")]
        [Authorize]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("BetaTestersBuildsCreateToManyRelationship")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        [SwaggerResponse(statusCode: 409, type: typeof(ErrorResponse), description: "Request entity error(s)")]
        public virtual IActionResult BetaTestersBuildsCreateToManyRelationship([FromRoute (Name = "id")][Required]string id, [FromBody]BetaTesterBuildsLinkagesRequest betaTesterBuildsLinkagesRequest)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(ErrorResponse));

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <param name="betaTesterBuildsLinkagesRequest">List of related linkages</param>
        /// <response code="204">Success (no content)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        /// <response code="409">Request entity error(s)</response>
        [HttpDelete]
        [Route("/v1/betaTesters/{id}/relationships/builds")]
        [Authorize]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("BetaTestersBuildsDeleteToManyRelationship")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        [SwaggerResponse(statusCode: 409, type: typeof(ErrorResponse), description: "Request entity error(s)")]
        public virtual IActionResult BetaTestersBuildsDeleteToManyRelationship([FromRoute (Name = "id")][Required]string id, [FromBody]BetaTesterBuildsLinkagesRequest betaTesterBuildsLinkagesRequest)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(ErrorResponse));

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <param name="fieldsBuilds">the fields to include for returned resources of type builds</param>
        /// <param name="limit">maximum resources per page</param>
        /// <response code="200">List of related resources</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        [HttpGet]
        [Route("/v1/betaTesters/{id}/builds")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("BetaTestersBuildsGetToManyRelated")]
        [SwaggerResponse(statusCode: 200, type: typeof(BuildsResponse), description: "List of related resources")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        public virtual IActionResult BetaTestersBuildsGetToManyRelated([FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "fields[builds]")]List<string> fieldsBuilds, [FromQuery (Name = "limit")]int? limit)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(BuildsResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : [ {\n    \"relationships\" : {\n      \"app\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"apps\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"individualTesters\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"betaTesters\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"betaTesters\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"preReleaseVersion\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"preReleaseVersions\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"betaAppReviewSubmission\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"betaAppReviewSubmissions\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"appStoreVersion\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appStoreVersions\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"appEncryptionDeclaration\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appEncryptionDeclarations\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"buildBetaDetail\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"buildBetaDetails\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"icons\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"buildIcons\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"buildIcons\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"betaBuildLocalizations\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"betaBuildLocalizations\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"betaBuildLocalizations\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : {\n      \"minOsVersion\" : \"minOsVersion\",\n      \"processingState\" : \"PROCESSING\",\n      \"expired\" : true,\n      \"iconAssetToken\" : {\n        \"width\" : 1,\n        \"height\" : 6,\n        \"templateUrl\" : \"templateUrl\"\n      },\n      \"usesNonExemptEncryption\" : true,\n      \"uploadedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"version\" : \"version\",\n      \"expirationDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"builds\"\n  }, {\n    \"relationships\" : {\n      \"app\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"apps\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"individualTesters\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"betaTesters\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"betaTesters\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"preReleaseVersion\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"preReleaseVersions\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"betaAppReviewSubmission\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"betaAppReviewSubmissions\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"appStoreVersion\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appStoreVersions\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"appEncryptionDeclaration\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"appEncryptionDeclarations\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"buildBetaDetail\" : {\n        \"data\" : {\n          \"id\" : \"id\",\n          \"type\" : \"buildBetaDetails\"\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"icons\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"buildIcons\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"buildIcons\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"betaBuildLocalizations\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"betaBuildLocalizations\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"betaBuildLocalizations\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : {\n      \"minOsVersion\" : \"minOsVersion\",\n      \"processingState\" : \"PROCESSING\",\n      \"expired\" : true,\n      \"iconAssetToken\" : {\n        \"width\" : 1,\n        \"height\" : 6,\n        \"templateUrl\" : \"templateUrl\"\n      },\n      \"usesNonExemptEncryption\" : true,\n      \"uploadedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"version\" : \"version\",\n      \"expirationDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"builds\"\n  } ],\n  \"meta\" : {\n    \"paging\" : {\n      \"total\" : 6,\n      \"limit\" : 0\n    }\n  },\n  \"links\" : {\n    \"next\" : \"next\",\n    \"self\" : \"self\",\n    \"first\" : \"first\"\n  },\n  \"included\" : [ null, null ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BuildsResponse>(exampleJson)
            : default(BuildsResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <param name="limit">maximum resources per page</param>
        /// <response code="200">List of related linkages</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        [HttpGet]
        [Route("/v1/betaTesters/{id}/relationships/builds")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("BetaTestersBuildsGetToManyRelationship")]
        [SwaggerResponse(statusCode: 200, type: typeof(BetaTesterBuildsLinkagesResponse), description: "List of related linkages")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        public virtual IActionResult BetaTestersBuildsGetToManyRelationship([FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "limit")]int? limit)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(BetaTesterBuildsLinkagesResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : [ {\n    \"id\" : \"id\",\n    \"type\" : \"builds\"\n  }, {\n    \"id\" : \"id\",\n    \"type\" : \"builds\"\n  } ],\n  \"meta\" : {\n    \"paging\" : {\n      \"total\" : 6,\n      \"limit\" : 0\n    }\n  },\n  \"links\" : {\n    \"next\" : \"next\",\n    \"self\" : \"self\",\n    \"first\" : \"first\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BetaTesterBuildsLinkagesResponse>(exampleJson)
            : default(BetaTesterBuildsLinkagesResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="betaTesterCreateRequest">BetaTester representation</param>
        /// <response code="201">Single BetaTester</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="409">Request entity error(s)</response>
        [HttpPost]
        [Route("/v1/betaTesters")]
        [Authorize]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("BetaTestersCreateInstance")]
        [SwaggerResponse(statusCode: 201, type: typeof(BetaTesterResponse), description: "Single BetaTester")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 409, type: typeof(ErrorResponse), description: "Request entity error(s)")]
        public virtual IActionResult BetaTestersCreateInstance([FromBody]BetaTesterCreateRequest betaTesterCreateRequest)
        {

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(BetaTesterResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : {\n    \"relationships\" : {\n      \"betaGroups\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"betaGroups\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"betaGroups\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"builds\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"builds\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"builds\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"apps\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"apps\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"apps\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : {\n      \"firstName\" : \"firstName\",\n      \"lastName\" : \"lastName\",\n      \"email\" : \"email\"\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"betaTesters\"\n  },\n  \"links\" : {\n    \"self\" : \"self\"\n  },\n  \"included\" : [ null, null ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BetaTesterResponse>(exampleJson)
            : default(BetaTesterResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <response code="204">Success (no content)</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        /// <response code="409">Request entity error(s)</response>
        [HttpDelete]
        [Route("/v1/betaTesters/{id}")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("BetaTestersDeleteInstance")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        [SwaggerResponse(statusCode: 409, type: typeof(ErrorResponse), description: "Request entity error(s)")]
        public virtual IActionResult BetaTestersDeleteInstance([FromRoute (Name = "id")][Required]string id)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(ErrorResponse));

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="filterEmail">filter by attribute &#39;email&#39;</param>
        /// <param name="filterFirstName">filter by attribute &#39;firstName&#39;</param>
        /// <param name="filterInviteType">filter by attribute &#39;inviteType&#39;</param>
        /// <param name="filterLastName">filter by attribute &#39;lastName&#39;</param>
        /// <param name="filterApps">filter by id(s) of related &#39;apps&#39;</param>
        /// <param name="filterBetaGroups">filter by id(s) of related &#39;betaGroups&#39;</param>
        /// <param name="filterBuilds">filter by id(s) of related &#39;builds&#39;</param>
        /// <param name="sort">comma-separated list of sort expressions; resources will be sorted as specified</param>
        /// <param name="fieldsBetaTesters">the fields to include for returned resources of type betaTesters</param>
        /// <param name="limit">maximum resources per page</param>
        /// <param name="include">comma-separated list of relationships to include</param>
        /// <param name="fieldsBetaGroups">the fields to include for returned resources of type betaGroups</param>
        /// <param name="fieldsBuilds">the fields to include for returned resources of type builds</param>
        /// <param name="fieldsApps">the fields to include for returned resources of type apps</param>
        /// <param name="limitApps">maximum number of related apps returned (when they are included)</param>
        /// <param name="limitBetaGroups">maximum number of related betaGroups returned (when they are included)</param>
        /// <param name="limitBuilds">maximum number of related builds returned (when they are included)</param>
        /// <response code="200">List of BetaTesters</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        [HttpGet]
        [Route("/v1/betaTesters")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("BetaTestersGetCollection")]
        [SwaggerResponse(statusCode: 200, type: typeof(BetaTestersResponse), description: "List of BetaTesters")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        public virtual IActionResult BetaTestersGetCollection([FromQuery (Name = "filter[email]")]List<string> filterEmail, [FromQuery (Name = "filter[firstName]")]List<string> filterFirstName, [FromQuery (Name = "filter[inviteType]")]List<string> filterInviteType, [FromQuery (Name = "filter[lastName]")]List<string> filterLastName, [FromQuery (Name = "filter[apps]")]List<string> filterApps, [FromQuery (Name = "filter[betaGroups]")]List<string> filterBetaGroups, [FromQuery (Name = "filter[builds]")]List<string> filterBuilds, [FromQuery (Name = "sort")]List<string> sort, [FromQuery (Name = "fields[betaTesters]")]List<string> fieldsBetaTesters, [FromQuery (Name = "limit")]int? limit, [FromQuery (Name = "include")]List<string> include, [FromQuery (Name = "fields[betaGroups]")]List<string> fieldsBetaGroups, [FromQuery (Name = "fields[builds]")]List<string> fieldsBuilds, [FromQuery (Name = "fields[apps]")]List<string> fieldsApps, [FromQuery (Name = "limit[apps]")]int? limitApps, [FromQuery (Name = "limit[betaGroups]")]int? limitBetaGroups, [FromQuery (Name = "limit[builds]")]int? limitBuilds)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(BetaTestersResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : [ {\n    \"relationships\" : {\n      \"betaGroups\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"betaGroups\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"betaGroups\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"builds\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"builds\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"builds\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"apps\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"apps\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"apps\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : {\n      \"firstName\" : \"firstName\",\n      \"lastName\" : \"lastName\",\n      \"email\" : \"email\"\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"betaTesters\"\n  }, {\n    \"relationships\" : {\n      \"betaGroups\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"betaGroups\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"betaGroups\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"builds\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"builds\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"builds\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"apps\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"apps\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"apps\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : {\n      \"firstName\" : \"firstName\",\n      \"lastName\" : \"lastName\",\n      \"email\" : \"email\"\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"betaTesters\"\n  } ],\n  \"meta\" : {\n    \"paging\" : {\n      \"total\" : 6,\n      \"limit\" : 0\n    }\n  },\n  \"links\" : {\n    \"next\" : \"next\",\n    \"self\" : \"self\",\n    \"first\" : \"first\"\n  },\n  \"included\" : [ null, null ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BetaTestersResponse>(exampleJson)
            : default(BetaTestersResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id">the id of the requested resource</param>
        /// <param name="fieldsBetaTesters">the fields to include for returned resources of type betaTesters</param>
        /// <param name="include">comma-separated list of relationships to include</param>
        /// <param name="fieldsBetaGroups">the fields to include for returned resources of type betaGroups</param>
        /// <param name="fieldsBuilds">the fields to include for returned resources of type builds</param>
        /// <param name="fieldsApps">the fields to include for returned resources of type apps</param>
        /// <param name="limitApps">maximum number of related apps returned (when they are included)</param>
        /// <param name="limitBetaGroups">maximum number of related betaGroups returned (when they are included)</param>
        /// <param name="limitBuilds">maximum number of related builds returned (when they are included)</param>
        /// <response code="200">Single BetaTester</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        /// <response code="404">Not found error</response>
        [HttpGet]
        [Route("/v1/betaTesters/{id}")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("BetaTestersGetInstance")]
        [SwaggerResponse(statusCode: 200, type: typeof(BetaTesterResponse), description: "Single BetaTester")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not found error")]
        public virtual IActionResult BetaTestersGetInstance([FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "fields[betaTesters]")]List<string> fieldsBetaTesters, [FromQuery (Name = "include")]List<string> include, [FromQuery (Name = "fields[betaGroups]")]List<string> fieldsBetaGroups, [FromQuery (Name = "fields[builds]")]List<string> fieldsBuilds, [FromQuery (Name = "fields[apps]")]List<string> fieldsApps, [FromQuery (Name = "limit[apps]")]int? limitApps, [FromQuery (Name = "limit[betaGroups]")]int? limitBetaGroups, [FromQuery (Name = "limit[builds]")]int? limitBuilds)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(BetaTesterResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : {\n    \"relationships\" : {\n      \"betaGroups\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"betaGroups\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"betaGroups\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"builds\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"builds\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"builds\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      },\n      \"apps\" : {\n        \"data\" : [ {\n          \"id\" : \"id\",\n          \"type\" : \"apps\"\n        }, {\n          \"id\" : \"id\",\n          \"type\" : \"apps\"\n        } ],\n        \"meta\" : {\n          \"paging\" : {\n            \"total\" : 6,\n            \"limit\" : 0\n          }\n        },\n        \"links\" : {\n          \"related\" : \"related\",\n          \"self\" : \"self\"\n        }\n      }\n    },\n    \"attributes\" : {\n      \"firstName\" : \"firstName\",\n      \"lastName\" : \"lastName\",\n      \"email\" : \"email\"\n    },\n    \"links\" : {\n      \"self\" : \"self\"\n    },\n    \"id\" : \"id\",\n    \"type\" : \"betaTesters\"\n  },\n  \"links\" : {\n    \"self\" : \"self\"\n  },\n  \"included\" : [ null, null ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BetaTesterResponse>(exampleJson)
            : default(BetaTesterResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
