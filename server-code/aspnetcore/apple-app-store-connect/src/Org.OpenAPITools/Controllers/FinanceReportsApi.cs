/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class FinanceReportsApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <param name="filterRegionCode">filter by attribute &#39;regionCode&#39;</param>
        /// <param name="filterReportDate">filter by attribute &#39;reportDate&#39;</param>
        /// <param name="filterReportType">filter by attribute &#39;reportType&#39;</param>
        /// <param name="filterVendorNumber">filter by attribute &#39;vendorNumber&#39;</param>
        /// <response code="200">List of FinanceReports</response>
        /// <response code="400">Parameter error(s)</response>
        /// <response code="403">Forbidden error</response>
        [HttpGet]
        [Route("/v1/financeReports")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("FinanceReportsGetCollection")]
        [SwaggerResponse(statusCode: 200, type: typeof(System.IO.Stream), description: "List of FinanceReports")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Parameter error(s)")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorResponse), description: "Forbidden error")]
        public virtual IActionResult FinanceReportsGetCollection([FromQuery (Name = "filter[regionCode]")][Required()]List<string> filterRegionCode, [FromQuery (Name = "filter[reportDate]")][Required()]List<string> filterReportDate, [FromQuery (Name = "filter[reportType]")][Required()]List<string> filterReportType, [FromQuery (Name = "filter[vendorNumber]")][Required()]List<string> filterVendorNumber)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(System.IO.Stream));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorResponse));
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<System.IO.Stream>(exampleJson)
            : default(System.IO.Stream);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
