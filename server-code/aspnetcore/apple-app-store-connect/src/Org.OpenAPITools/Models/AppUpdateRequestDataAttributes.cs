/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class AppUpdateRequestDataAttributes : IEquatable<AppUpdateRequestDataAttributes>
    {
        /// <summary>
        /// Gets or Sets AvailableInNewTerritories
        /// </summary>
        [DataMember(Name="availableInNewTerritories", EmitDefaultValue=true)]
        public bool AvailableInNewTerritories { get; set; }

        /// <summary>
        /// Gets or Sets BundleId
        /// </summary>
        [DataMember(Name="bundleId", EmitDefaultValue=false)]
        public string BundleId { get; set; }


        /// <summary>
        /// Gets or Sets ContentRightsDeclaration
        /// </summary>
        [TypeConverter(typeof(CustomEnumConverter<ContentRightsDeclarationEnum>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum ContentRightsDeclarationEnum
        {
            
            /// <summary>
            /// Enum DOESNOTUSETHIRDPARTYCONTENTEnum for DOES_NOT_USE_THIRD_PARTY_CONTENT
            /// </summary>
            [EnumMember(Value = "DOES_NOT_USE_THIRD_PARTY_CONTENT")]
            DOESNOTUSETHIRDPARTYCONTENTEnum = 1,
            
            /// <summary>
            /// Enum USESTHIRDPARTYCONTENTEnum for USES_THIRD_PARTY_CONTENT
            /// </summary>
            [EnumMember(Value = "USES_THIRD_PARTY_CONTENT")]
            USESTHIRDPARTYCONTENTEnum = 2
        }

        /// <summary>
        /// Gets or Sets ContentRightsDeclaration
        /// </summary>
        [DataMember(Name="contentRightsDeclaration", EmitDefaultValue=true)]
        public ContentRightsDeclarationEnum ContentRightsDeclaration { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryLocale
        /// </summary>
        [DataMember(Name="primaryLocale", EmitDefaultValue=false)]
        public string PrimaryLocale { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AppUpdateRequestDataAttributes {\n");
            sb.Append("  AvailableInNewTerritories: ").Append(AvailableInNewTerritories).Append("\n");
            sb.Append("  BundleId: ").Append(BundleId).Append("\n");
            sb.Append("  ContentRightsDeclaration: ").Append(ContentRightsDeclaration).Append("\n");
            sb.Append("  PrimaryLocale: ").Append(PrimaryLocale).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((AppUpdateRequestDataAttributes)obj);
        }

        /// <summary>
        /// Returns true if AppUpdateRequestDataAttributes instances are equal
        /// </summary>
        /// <param name="other">Instance of AppUpdateRequestDataAttributes to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AppUpdateRequestDataAttributes other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    AvailableInNewTerritories == other.AvailableInNewTerritories ||
                    
                    AvailableInNewTerritories.Equals(other.AvailableInNewTerritories)
                ) && 
                (
                    BundleId == other.BundleId ||
                    BundleId != null &&
                    BundleId.Equals(other.BundleId)
                ) && 
                (
                    ContentRightsDeclaration == other.ContentRightsDeclaration ||
                    
                    ContentRightsDeclaration.Equals(other.ContentRightsDeclaration)
                ) && 
                (
                    PrimaryLocale == other.PrimaryLocale ||
                    PrimaryLocale != null &&
                    PrimaryLocale.Equals(other.PrimaryLocale)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    
                    hashCode = hashCode * 59 + AvailableInNewTerritories.GetHashCode();
                    if (BundleId != null)
                    hashCode = hashCode * 59 + BundleId.GetHashCode();
                    
                    hashCode = hashCode * 59 + ContentRightsDeclaration.GetHashCode();
                    if (PrimaryLocale != null)
                    hashCode = hashCode * 59 + PrimaryLocale.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(AppUpdateRequestDataAttributes left, AppUpdateRequestDataAttributes right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(AppUpdateRequestDataAttributes left, AppUpdateRequestDataAttributes right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
