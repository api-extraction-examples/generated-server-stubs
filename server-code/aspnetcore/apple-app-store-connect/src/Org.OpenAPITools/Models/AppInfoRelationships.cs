/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class AppInfoRelationships : IEquatable<AppInfoRelationships>
    {
        /// <summary>
        /// Gets or Sets AgeRatingDeclaration
        /// </summary>
        [DataMember(Name="ageRatingDeclaration", EmitDefaultValue=false)]
        public AppInfoRelationshipsAgeRatingDeclaration AgeRatingDeclaration { get; set; }

        /// <summary>
        /// Gets or Sets App
        /// </summary>
        [DataMember(Name="app", EmitDefaultValue=false)]
        public AppEncryptionDeclarationRelationshipsApp App { get; set; }

        /// <summary>
        /// Gets or Sets AppInfoLocalizations
        /// </summary>
        [DataMember(Name="appInfoLocalizations", EmitDefaultValue=false)]
        public AppInfoRelationshipsAppInfoLocalizations AppInfoLocalizations { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryCategory
        /// </summary>
        [DataMember(Name="primaryCategory", EmitDefaultValue=false)]
        public AppCategoryRelationshipsParent PrimaryCategory { get; set; }

        /// <summary>
        /// Gets or Sets PrimarySubcategoryOne
        /// </summary>
        [DataMember(Name="primarySubcategoryOne", EmitDefaultValue=false)]
        public AppCategoryRelationshipsParent PrimarySubcategoryOne { get; set; }

        /// <summary>
        /// Gets or Sets PrimarySubcategoryTwo
        /// </summary>
        [DataMember(Name="primarySubcategoryTwo", EmitDefaultValue=false)]
        public AppCategoryRelationshipsParent PrimarySubcategoryTwo { get; set; }

        /// <summary>
        /// Gets or Sets SecondaryCategory
        /// </summary>
        [DataMember(Name="secondaryCategory", EmitDefaultValue=false)]
        public AppCategoryRelationshipsParent SecondaryCategory { get; set; }

        /// <summary>
        /// Gets or Sets SecondarySubcategoryOne
        /// </summary>
        [DataMember(Name="secondarySubcategoryOne", EmitDefaultValue=false)]
        public AppCategoryRelationshipsParent SecondarySubcategoryOne { get; set; }

        /// <summary>
        /// Gets or Sets SecondarySubcategoryTwo
        /// </summary>
        [DataMember(Name="secondarySubcategoryTwo", EmitDefaultValue=false)]
        public AppCategoryRelationshipsParent SecondarySubcategoryTwo { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AppInfoRelationships {\n");
            sb.Append("  AgeRatingDeclaration: ").Append(AgeRatingDeclaration).Append("\n");
            sb.Append("  App: ").Append(App).Append("\n");
            sb.Append("  AppInfoLocalizations: ").Append(AppInfoLocalizations).Append("\n");
            sb.Append("  PrimaryCategory: ").Append(PrimaryCategory).Append("\n");
            sb.Append("  PrimarySubcategoryOne: ").Append(PrimarySubcategoryOne).Append("\n");
            sb.Append("  PrimarySubcategoryTwo: ").Append(PrimarySubcategoryTwo).Append("\n");
            sb.Append("  SecondaryCategory: ").Append(SecondaryCategory).Append("\n");
            sb.Append("  SecondarySubcategoryOne: ").Append(SecondarySubcategoryOne).Append("\n");
            sb.Append("  SecondarySubcategoryTwo: ").Append(SecondarySubcategoryTwo).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((AppInfoRelationships)obj);
        }

        /// <summary>
        /// Returns true if AppInfoRelationships instances are equal
        /// </summary>
        /// <param name="other">Instance of AppInfoRelationships to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AppInfoRelationships other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    AgeRatingDeclaration == other.AgeRatingDeclaration ||
                    AgeRatingDeclaration != null &&
                    AgeRatingDeclaration.Equals(other.AgeRatingDeclaration)
                ) && 
                (
                    App == other.App ||
                    App != null &&
                    App.Equals(other.App)
                ) && 
                (
                    AppInfoLocalizations == other.AppInfoLocalizations ||
                    AppInfoLocalizations != null &&
                    AppInfoLocalizations.Equals(other.AppInfoLocalizations)
                ) && 
                (
                    PrimaryCategory == other.PrimaryCategory ||
                    PrimaryCategory != null &&
                    PrimaryCategory.Equals(other.PrimaryCategory)
                ) && 
                (
                    PrimarySubcategoryOne == other.PrimarySubcategoryOne ||
                    PrimarySubcategoryOne != null &&
                    PrimarySubcategoryOne.Equals(other.PrimarySubcategoryOne)
                ) && 
                (
                    PrimarySubcategoryTwo == other.PrimarySubcategoryTwo ||
                    PrimarySubcategoryTwo != null &&
                    PrimarySubcategoryTwo.Equals(other.PrimarySubcategoryTwo)
                ) && 
                (
                    SecondaryCategory == other.SecondaryCategory ||
                    SecondaryCategory != null &&
                    SecondaryCategory.Equals(other.SecondaryCategory)
                ) && 
                (
                    SecondarySubcategoryOne == other.SecondarySubcategoryOne ||
                    SecondarySubcategoryOne != null &&
                    SecondarySubcategoryOne.Equals(other.SecondarySubcategoryOne)
                ) && 
                (
                    SecondarySubcategoryTwo == other.SecondarySubcategoryTwo ||
                    SecondarySubcategoryTwo != null &&
                    SecondarySubcategoryTwo.Equals(other.SecondarySubcategoryTwo)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (AgeRatingDeclaration != null)
                    hashCode = hashCode * 59 + AgeRatingDeclaration.GetHashCode();
                    if (App != null)
                    hashCode = hashCode * 59 + App.GetHashCode();
                    if (AppInfoLocalizations != null)
                    hashCode = hashCode * 59 + AppInfoLocalizations.GetHashCode();
                    if (PrimaryCategory != null)
                    hashCode = hashCode * 59 + PrimaryCategory.GetHashCode();
                    if (PrimarySubcategoryOne != null)
                    hashCode = hashCode * 59 + PrimarySubcategoryOne.GetHashCode();
                    if (PrimarySubcategoryTwo != null)
                    hashCode = hashCode * 59 + PrimarySubcategoryTwo.GetHashCode();
                    if (SecondaryCategory != null)
                    hashCode = hashCode * 59 + SecondaryCategory.GetHashCode();
                    if (SecondarySubcategoryOne != null)
                    hashCode = hashCode * 59 + SecondarySubcategoryOne.GetHashCode();
                    if (SecondarySubcategoryTwo != null)
                    hashCode = hashCode * 59 + SecondarySubcategoryTwo.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(AppInfoRelationships left, AppInfoRelationships right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(AppInfoRelationships left, AppInfoRelationships right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
