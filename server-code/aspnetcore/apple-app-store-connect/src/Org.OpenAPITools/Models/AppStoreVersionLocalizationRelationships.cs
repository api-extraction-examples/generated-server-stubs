/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class AppStoreVersionLocalizationRelationships : IEquatable<AppStoreVersionLocalizationRelationships>
    {
        /// <summary>
        /// Gets or Sets AppPreviewSets
        /// </summary>
        [DataMember(Name="appPreviewSets", EmitDefaultValue=false)]
        public AppStoreVersionLocalizationRelationshipsAppPreviewSets AppPreviewSets { get; set; }

        /// <summary>
        /// Gets or Sets AppScreenshotSets
        /// </summary>
        [DataMember(Name="appScreenshotSets", EmitDefaultValue=false)]
        public AppStoreVersionLocalizationRelationshipsAppScreenshotSets AppScreenshotSets { get; set; }

        /// <summary>
        /// Gets or Sets AppStoreVersion
        /// </summary>
        [DataMember(Name="appStoreVersion", EmitDefaultValue=false)]
        public AppStoreReviewDetailRelationshipsAppStoreVersion AppStoreVersion { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AppStoreVersionLocalizationRelationships {\n");
            sb.Append("  AppPreviewSets: ").Append(AppPreviewSets).Append("\n");
            sb.Append("  AppScreenshotSets: ").Append(AppScreenshotSets).Append("\n");
            sb.Append("  AppStoreVersion: ").Append(AppStoreVersion).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((AppStoreVersionLocalizationRelationships)obj);
        }

        /// <summary>
        /// Returns true if AppStoreVersionLocalizationRelationships instances are equal
        /// </summary>
        /// <param name="other">Instance of AppStoreVersionLocalizationRelationships to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AppStoreVersionLocalizationRelationships other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    AppPreviewSets == other.AppPreviewSets ||
                    AppPreviewSets != null &&
                    AppPreviewSets.Equals(other.AppPreviewSets)
                ) && 
                (
                    AppScreenshotSets == other.AppScreenshotSets ||
                    AppScreenshotSets != null &&
                    AppScreenshotSets.Equals(other.AppScreenshotSets)
                ) && 
                (
                    AppStoreVersion == other.AppStoreVersion ||
                    AppStoreVersion != null &&
                    AppStoreVersion.Equals(other.AppStoreVersion)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (AppPreviewSets != null)
                    hashCode = hashCode * 59 + AppPreviewSets.GetHashCode();
                    if (AppScreenshotSets != null)
                    hashCode = hashCode * 59 + AppScreenshotSets.GetHashCode();
                    if (AppStoreVersion != null)
                    hashCode = hashCode * 59 + AppStoreVersion.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(AppStoreVersionLocalizationRelationships left, AppStoreVersionLocalizationRelationships right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(AppStoreVersionLocalizationRelationships left, AppStoreVersionLocalizationRelationships right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
