/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class AppInfoLocalizationAttributes : IEquatable<AppInfoLocalizationAttributes>
    {
        /// <summary>
        /// Gets or Sets Locale
        /// </summary>
        [DataMember(Name="locale", EmitDefaultValue=false)]
        public string Locale { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets PrivacyPolicyText
        /// </summary>
        [DataMember(Name="privacyPolicyText", EmitDefaultValue=false)]
        public string PrivacyPolicyText { get; set; }

        /// <summary>
        /// Gets or Sets PrivacyPolicyUrl
        /// </summary>
        [DataMember(Name="privacyPolicyUrl", EmitDefaultValue=false)]
        public string PrivacyPolicyUrl { get; set; }

        /// <summary>
        /// Gets or Sets Subtitle
        /// </summary>
        [DataMember(Name="subtitle", EmitDefaultValue=false)]
        public string Subtitle { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AppInfoLocalizationAttributes {\n");
            sb.Append("  Locale: ").Append(Locale).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  PrivacyPolicyText: ").Append(PrivacyPolicyText).Append("\n");
            sb.Append("  PrivacyPolicyUrl: ").Append(PrivacyPolicyUrl).Append("\n");
            sb.Append("  Subtitle: ").Append(Subtitle).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((AppInfoLocalizationAttributes)obj);
        }

        /// <summary>
        /// Returns true if AppInfoLocalizationAttributes instances are equal
        /// </summary>
        /// <param name="other">Instance of AppInfoLocalizationAttributes to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AppInfoLocalizationAttributes other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Locale == other.Locale ||
                    Locale != null &&
                    Locale.Equals(other.Locale)
                ) && 
                (
                    Name == other.Name ||
                    Name != null &&
                    Name.Equals(other.Name)
                ) && 
                (
                    PrivacyPolicyText == other.PrivacyPolicyText ||
                    PrivacyPolicyText != null &&
                    PrivacyPolicyText.Equals(other.PrivacyPolicyText)
                ) && 
                (
                    PrivacyPolicyUrl == other.PrivacyPolicyUrl ||
                    PrivacyPolicyUrl != null &&
                    PrivacyPolicyUrl.Equals(other.PrivacyPolicyUrl)
                ) && 
                (
                    Subtitle == other.Subtitle ||
                    Subtitle != null &&
                    Subtitle.Equals(other.Subtitle)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Locale != null)
                    hashCode = hashCode * 59 + Locale.GetHashCode();
                    if (Name != null)
                    hashCode = hashCode * 59 + Name.GetHashCode();
                    if (PrivacyPolicyText != null)
                    hashCode = hashCode * 59 + PrivacyPolicyText.GetHashCode();
                    if (PrivacyPolicyUrl != null)
                    hashCode = hashCode * 59 + PrivacyPolicyUrl.GetHashCode();
                    if (Subtitle != null)
                    hashCode = hashCode * 59 + Subtitle.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(AppInfoLocalizationAttributes left, AppInfoLocalizationAttributes right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(AppInfoLocalizationAttributes left, AppInfoLocalizationAttributes right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
