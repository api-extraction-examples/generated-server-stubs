/*
 * LaunchDarkly REST API
 *
 * Build custom integrations with the LaunchDarkly REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: support@launchdarkly.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class Rollout : IEquatable<Rollout>
    {
        /// <summary>
        /// Gets or Sets BucketBy
        /// </summary>
        [DataMember(Name="bucketBy", EmitDefaultValue=false)]
        public string BucketBy { get; set; }

        /// <summary>
        /// Gets or Sets Variations
        /// </summary>
        [DataMember(Name="variations", EmitDefaultValue=false)]
        public List<WeightedVariation> Variations { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Rollout {\n");
            sb.Append("  BucketBy: ").Append(BucketBy).Append("\n");
            sb.Append("  Variations: ").Append(Variations).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((Rollout)obj);
        }

        /// <summary>
        /// Returns true if Rollout instances are equal
        /// </summary>
        /// <param name="other">Instance of Rollout to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Rollout other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    BucketBy == other.BucketBy ||
                    BucketBy != null &&
                    BucketBy.Equals(other.BucketBy)
                ) && 
                (
                    Variations == other.Variations ||
                    Variations != null &&
                    other.Variations != null &&
                    Variations.SequenceEqual(other.Variations)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (BucketBy != null)
                    hashCode = hashCode * 59 + BucketBy.GetHashCode();
                    if (Variations != null)
                    hashCode = hashCode * 59 + Variations.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(Rollout left, Rollout right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(Rollout left, Rollout right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
