/*
 * LaunchDarkly REST API
 *
 * Build custom integrations with the LaunchDarkly REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: support@launchdarkly.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class CustomRolesApiController : ControllerBase
    { 
        /// <summary>
        /// Delete a custom role by key.
        /// </summary>
        /// <param name="customRoleKey">The custom role key.</param>
        /// <response code="204">Action completed successfully.</response>
        /// <response code="401">Invalid access token.</response>
        /// <response code="404">Invalid resource specifier.</response>
        [HttpDelete]
        [Route("/api/v2/roles/{customRoleKey}")]
        [Authorize(Policy = "Token")]
        [ValidateModelState]
        [SwaggerOperation("DeleteCustomRole")]
        public virtual IActionResult DeleteCustomRole([FromRoute (Name = "customRoleKey")][Required]string customRoleKey)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Get one custom role by key.
        /// </summary>
        /// <param name="customRoleKey">The custom role key.</param>
        /// <response code="200">Custom role response.</response>
        /// <response code="400">Invalid request body.</response>
        /// <response code="401">Invalid access token.</response>
        [HttpGet]
        [Route("/api/v2/roles/{customRoleKey}")]
        [Authorize(Policy = "Token")]
        [ValidateModelState]
        [SwaggerOperation("GetCustomRole")]
        [SwaggerResponse(statusCode: 200, type: typeof(CustomRole), description: "Custom role response.")]
        public virtual IActionResult GetCustomRole([FromRoute (Name = "customRoleKey")][Required]string customRoleKey)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CustomRole));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            string exampleJson = null;
            exampleJson = "{\n  \"_links\" : {\n    \"next\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    },\n    \"self\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    }\n  },\n  \"name\" : \"revenue team\",\n  \"description\" : \"Description of revenue team role here\",\n  \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n  \"key\" : \"revenue-team\",\n  \"policy\" : [ {\n    \"notActions\" : [ \"updateOn\", \"updateOn\" ],\n    \"notResources\" : [ \"proj/*:env/*:flag/my-flag\", \"proj/*:env/*:flag/my-flag\" ],\n    \"effect\" : \"deny\",\n    \"resources\" : [ \"proj/*:env/*:flag/my-flag\", \"proj/*:env/*:flag/my-flag\" ],\n    \"actions\" : [ \"updateOn\", \"updateOn\" ]\n  }, {\n    \"notActions\" : [ \"updateOn\", \"updateOn\" ],\n    \"notResources\" : [ \"proj/*:env/*:flag/my-flag\", \"proj/*:env/*:flag/my-flag\" ],\n    \"effect\" : \"deny\",\n    \"resources\" : [ \"proj/*:env/*:flag/my-flag\", \"proj/*:env/*:flag/my-flag\" ],\n    \"actions\" : [ \"updateOn\", \"updateOn\" ]\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CustomRole>(exampleJson)
            : default(CustomRole);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Return a complete list of custom roles.
        /// </summary>
        /// <response code="200">Custom roles response.</response>
        /// <response code="401">Invalid access token.</response>
        [HttpGet]
        [Route("/api/v2/roles")]
        [Authorize(Policy = "Token")]
        [ValidateModelState]
        [SwaggerOperation("GetCustomRoles")]
        [SwaggerResponse(statusCode: 200, type: typeof(CustomRoles), description: "Custom roles response.")]
        public virtual IActionResult GetCustomRoles()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CustomRoles));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            string exampleJson = null;
            exampleJson = "{\n  \"_links\" : {\n    \"next\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    },\n    \"self\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    }\n  },\n  \"items\" : [ {\n    \"_links\" : {\n      \"next\" : {\n        \"href\" : \"/api/v2/endpoint\",\n        \"type\" : \"application/json\"\n      },\n      \"self\" : {\n        \"href\" : \"/api/v2/endpoint\",\n        \"type\" : \"application/json\"\n      }\n    },\n    \"name\" : \"revenue team\",\n    \"description\" : \"Description of revenue team role here\",\n    \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n    \"key\" : \"revenue-team\",\n    \"policy\" : [ {\n      \"notActions\" : [ \"updateOn\", \"updateOn\" ],\n      \"notResources\" : [ \"proj/*:env/*:flag/my-flag\", \"proj/*:env/*:flag/my-flag\" ],\n      \"effect\" : \"deny\",\n      \"resources\" : [ \"proj/*:env/*:flag/my-flag\", \"proj/*:env/*:flag/my-flag\" ],\n      \"actions\" : [ \"updateOn\", \"updateOn\" ]\n    }, {\n      \"notActions\" : [ \"updateOn\", \"updateOn\" ],\n      \"notResources\" : [ \"proj/*:env/*:flag/my-flag\", \"proj/*:env/*:flag/my-flag\" ],\n      \"effect\" : \"deny\",\n      \"resources\" : [ \"proj/*:env/*:flag/my-flag\", \"proj/*:env/*:flag/my-flag\" ],\n      \"actions\" : [ \"updateOn\", \"updateOn\" ]\n    } ]\n  }, {\n    \"_links\" : {\n      \"next\" : {\n        \"href\" : \"/api/v2/endpoint\",\n        \"type\" : \"application/json\"\n      },\n      \"self\" : {\n        \"href\" : \"/api/v2/endpoint\",\n        \"type\" : \"application/json\"\n      }\n    },\n    \"name\" : \"revenue team\",\n    \"description\" : \"Description of revenue team role here\",\n    \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n    \"key\" : \"revenue-team\",\n    \"policy\" : [ {\n      \"notActions\" : [ \"updateOn\", \"updateOn\" ],\n      \"notResources\" : [ \"proj/*:env/*:flag/my-flag\", \"proj/*:env/*:flag/my-flag\" ],\n      \"effect\" : \"deny\",\n      \"resources\" : [ \"proj/*:env/*:flag/my-flag\", \"proj/*:env/*:flag/my-flag\" ],\n      \"actions\" : [ \"updateOn\", \"updateOn\" ]\n    }, {\n      \"notActions\" : [ \"updateOn\", \"updateOn\" ],\n      \"notResources\" : [ \"proj/*:env/*:flag/my-flag\", \"proj/*:env/*:flag/my-flag\" ],\n      \"effect\" : \"deny\",\n      \"resources\" : [ \"proj/*:env/*:flag/my-flag\", \"proj/*:env/*:flag/my-flag\" ],\n      \"actions\" : [ \"updateOn\", \"updateOn\" ]\n    } ]\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CustomRoles>(exampleJson)
            : default(CustomRoles);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Modify a custom role by key.
        /// </summary>
        /// <param name="customRoleKey">The custom role key.</param>
        /// <param name="patchDelta">Requires a JSON Patch representation of the desired changes to the project. &#39;http://jsonpatch.com/&#39;</param>
        /// <response code="200">Custom role response.</response>
        /// <response code="400">Invalid request body.</response>
        /// <response code="401">Invalid access token.</response>
        /// <response code="404">Invalid resource specifier.</response>
        /// <response code="409">Status conflict.</response>
        [HttpPatch]
        [Route("/api/v2/roles/{customRoleKey}")]
        [Authorize(Policy = "Token")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchCustomRole")]
        [SwaggerResponse(statusCode: 200, type: typeof(CustomRole), description: "Custom role response.")]
        public virtual IActionResult PatchCustomRole([FromRoute (Name = "customRoleKey")][Required]string customRoleKey, [FromBody]List<PatchOperation> patchDelta)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CustomRole));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409);
            string exampleJson = null;
            exampleJson = "{\n  \"_links\" : {\n    \"next\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    },\n    \"self\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    }\n  },\n  \"name\" : \"revenue team\",\n  \"description\" : \"Description of revenue team role here\",\n  \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n  \"key\" : \"revenue-team\",\n  \"policy\" : [ {\n    \"notActions\" : [ \"updateOn\", \"updateOn\" ],\n    \"notResources\" : [ \"proj/*:env/*:flag/my-flag\", \"proj/*:env/*:flag/my-flag\" ],\n    \"effect\" : \"deny\",\n    \"resources\" : [ \"proj/*:env/*:flag/my-flag\", \"proj/*:env/*:flag/my-flag\" ],\n    \"actions\" : [ \"updateOn\", \"updateOn\" ]\n  }, {\n    \"notActions\" : [ \"updateOn\", \"updateOn\" ],\n    \"notResources\" : [ \"proj/*:env/*:flag/my-flag\", \"proj/*:env/*:flag/my-flag\" ],\n    \"effect\" : \"deny\",\n    \"resources\" : [ \"proj/*:env/*:flag/my-flag\", \"proj/*:env/*:flag/my-flag\" ],\n    \"actions\" : [ \"updateOn\", \"updateOn\" ]\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CustomRole>(exampleJson)
            : default(CustomRole);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create a new custom role.
        /// </summary>
        /// <param name="customRoleBody">New role or roles to create.</param>
        /// <response code="201">Custom role response.</response>
        /// <response code="400">Invalid request body.</response>
        /// <response code="401">Invalid access token.</response>
        /// <response code="409">Status conflict.</response>
        [HttpPost]
        [Route("/api/v2/roles")]
        [Authorize(Policy = "Token")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostCustomRole")]
        [SwaggerResponse(statusCode: 201, type: typeof(CustomRole), description: "Custom role response.")]
        public virtual IActionResult PostCustomRole([FromBody]PostCustomRoleRequest customRoleBody)
        {

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(CustomRole));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409);
            string exampleJson = null;
            exampleJson = "{\n  \"_links\" : {\n    \"next\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    },\n    \"self\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    }\n  },\n  \"name\" : \"revenue team\",\n  \"description\" : \"Description of revenue team role here\",\n  \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n  \"key\" : \"revenue-team\",\n  \"policy\" : [ {\n    \"notActions\" : [ \"updateOn\", \"updateOn\" ],\n    \"notResources\" : [ \"proj/*:env/*:flag/my-flag\", \"proj/*:env/*:flag/my-flag\" ],\n    \"effect\" : \"deny\",\n    \"resources\" : [ \"proj/*:env/*:flag/my-flag\", \"proj/*:env/*:flag/my-flag\" ],\n    \"actions\" : [ \"updateOn\", \"updateOn\" ]\n  }, {\n    \"notActions\" : [ \"updateOn\", \"updateOn\" ],\n    \"notResources\" : [ \"proj/*:env/*:flag/my-flag\", \"proj/*:env/*:flag/my-flag\" ],\n    \"effect\" : \"deny\",\n    \"resources\" : [ \"proj/*:env/*:flag/my-flag\", \"proj/*:env/*:flag/my-flag\" ],\n    \"actions\" : [ \"updateOn\", \"updateOn\" ]\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CustomRole>(exampleJson)
            : default(CustomRole);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
