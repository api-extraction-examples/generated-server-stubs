/*
 * LaunchDarkly REST API
 *
 * Build custom integrations with the LaunchDarkly REST API
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: support@launchdarkly.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class FeatureFlagsApiController : ControllerBase
    { 
        /// <summary>
        /// Copies the feature flag configuration from one environment to the same feature flag in another environment.
        /// </summary>
        /// <param name="projectKey">The project key, used to tie the flags together under one project so they can be managed together.</param>
        /// <param name="featureFlagKey">The feature flag&#39;s key. The key identifies the flag in your code.</param>
        /// <param name="featureFlagCopyBody">Copy feature flag configurations between environments.</param>
        /// <response code="201">Flag configuration copy response.</response>
        /// <response code="400">Invalid request body.</response>
        /// <response code="401">Invalid access token.</response>
        /// <response code="409">Status conflict.</response>
        [HttpPost]
        [Route("/api/v2/flags/{projectKey}/{featureFlagKey}/copy")]
        [Authorize(Policy = "Token")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("CopyFeatureFlag")]
        [SwaggerResponse(statusCode: 201, type: typeof(FeatureFlag), description: "Flag configuration copy response.")]
        public virtual IActionResult CopyFeatureFlag([FromRoute (Name = "projectKey")][Required]string projectKey, [FromRoute (Name = "featureFlagKey")][Required]string featureFlagKey, [FromBody]CopyFeatureFlagRequest featureFlagCopyBody)
        {

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(FeatureFlag));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409);
            string exampleJson = null;
            exampleJson = "{\n  \"archivedDate\" : 1443652232590,\n  \"temporary\" : false,\n  \"_maintainer\" : {\n    \"firstName\" : \"Alan\",\n    \"lastName\" : \"Turing\",\n    \"_verified\" : true,\n    \"_links\" : {\n      \"next\" : {\n        \"href\" : \"/api/v2/endpoint\",\n        \"type\" : \"application/json\"\n      },\n      \"self\" : {\n        \"href\" : \"/api/v2/endpoint\",\n        \"type\" : \"application/json\"\n      }\n    },\n    \"_pendingInvite\" : true,\n    \"_lastSeen\" : 1469326565348,\n    \"isBeta\" : true,\n    \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n    \"_lastSeenMetadata\" : {\n      \"tokenId\" : \"5fd2a1ee05600316d5cb3e96\"\n    },\n    \"email\" : \"user@launchdarkly.com\",\n    \"customRoles\" : [ \"5a580a01b4ff89217bdf9dc1\", \"5a580a01b4ff89217bdf9dc1\" ]\n  },\n  \"clientSideAvailability\" : {\n    \"usingEnvironmentId\" : true,\n    \"usingMobileKey\" : true\n  },\n  \"_links\" : {\n    \"next\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    },\n    \"self\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    }\n  },\n  \"environments\" : {\n    \"key\" : {\n      \"salt\" : \"YWx0ZXJuYXRlLnBhZ2U=\",\n      \"rules\" : [ {\n        \"rollout\" : {\n          \"variations\" : [ {\n            \"weight\" : 5,\n            \"variation\" : 1\n          }, {\n            \"weight\" : 5,\n            \"variation\" : 1\n          } ],\n          \"bucketBy\" : \"bucketBy\"\n        },\n        \"clauses\" : [ {\n          \"op\" : \"in\",\n          \"negate\" : true,\n          \"values\" : [ \"Top Customers\", \"Top Customers\" ],\n          \"_id\" : \"_id\",\n          \"attribute\" : \"groups\"\n        }, {\n          \"op\" : \"in\",\n          \"negate\" : true,\n          \"values\" : [ \"Top Customers\", \"Top Customers\" ],\n          \"_id\" : \"_id\",\n          \"attribute\" : \"groups\"\n        } ],\n        \"description\" : \"description\",\n        \"_id\" : \"_id\",\n        \"trackEvents\" : true,\n        \"variation\" : 9\n      }, {\n        \"rollout\" : {\n          \"variations\" : [ {\n            \"weight\" : 5,\n            \"variation\" : 1\n          }, {\n            \"weight\" : 5,\n            \"variation\" : 1\n          } ],\n          \"bucketBy\" : \"bucketBy\"\n        },\n        \"clauses\" : [ {\n          \"op\" : \"in\",\n          \"negate\" : true,\n          \"values\" : [ \"Top Customers\", \"Top Customers\" ],\n          \"_id\" : \"_id\",\n          \"attribute\" : \"groups\"\n        }, {\n          \"op\" : \"in\",\n          \"negate\" : true,\n          \"values\" : [ \"Top Customers\", \"Top Customers\" ],\n          \"_id\" : \"_id\",\n          \"attribute\" : \"groups\"\n        } ],\n        \"description\" : \"description\",\n        \"_id\" : \"_id\",\n        \"trackEvents\" : true,\n        \"variation\" : 9\n      } ],\n      \"targets\" : [ {\n        \"values\" : [ \"\\"1461797806427-7-115540266\\", \\"00142875-a39d-4028-a3b7-987ccd151649\\"\", \"\\"1461797806427-7-115540266\\", \\"00142875-a39d-4028-a3b7-987ccd151649\\"\" ],\n        \"variation\" : 3\n      }, {\n        \"values\" : [ \"\\"1461797806427-7-115540266\\", \\"00142875-a39d-4028-a3b7-987ccd151649\\"\", \"\\"1461797806427-7-115540266\\", \\"00142875-a39d-4028-a3b7-987ccd151649\\"\" ],\n        \"variation\" : 3\n      } ],\n      \"version\" : 65,\n      \"prerequisites\" : [ {\n        \"key\" : \"key\",\n        \"variation\" : 7\n      }, {\n        \"key\" : \"key\",\n        \"variation\" : 7\n      } ],\n      \"archived\" : true,\n      \"trackEventsFallthrough\" : true,\n      \"_environmentName\" : \"_environmentName\",\n      \"_site\" : {\n        \"href\" : \"/features/sort.order\",\n        \"type\" : \"text/html\"\n      },\n      \"true\" : true,\n      \"lastModified\" : 1469326565348,\n      \"sel\" : \"45501b9314dc4641841af774cb038b96\",\n      \"trackEvents\" : false,\n      \"fallthrough\" : {\n        \"rollout\" : {\n          \"variations\" : [ {\n            \"weight\" : 5,\n            \"variation\" : 1\n          }, {\n            \"weight\" : 5,\n            \"variation\" : 1\n          } ],\n          \"bucketBy\" : \"bucketBy\"\n        },\n        \"variation\" : 5\n      },\n      \"offVariation\" : 2\n    }\n  },\n  \"kind\" : \"boolean\",\n  \"description\" : \"This flag controls whether test feature is turned on or not.\",\n  \"creationDate\" : 1443652232590,\n  \"tags\" : [ ],\n  \"archived\" : false,\n  \"goalIds\" : [ \"d7239405bd89c930e885aa76\", \"405bc930e88d7239d895aa76\" ],\n  \"includeInSnippet\" : false,\n  \"maintainerId\" : \"561c579cd8fd5c2704000001\",\n  \"customProperties\" : {\n    \"bugs\" : {\n      \"name\" : \"Issue tracker ids\",\n      \"value\" : [ \"123\", \"456\" ]\n    },\n    \"deprecated\" : {\n      \"name\" : \"Deprecated Date\",\n      \"value\" : [ ]\n    }\n  },\n  \"defaults\" : {\n    \"onVariation\" : 6,\n    \"offVariation\" : 0\n  },\n  \"variations\" : [ {\n    \"value\" : \"a\"\n  }, {\n    \"value\" : \"b\"\n  } ],\n  \"name\" : \"Test Feature\",\n  \"_version\" : 23,\n  \"key\" : \"test-feature\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FeatureFlag>(exampleJson)
            : default(FeatureFlag);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Delete an approval request for a feature flag config
        /// </summary>
        /// <param name="projectKey">The project key, used to tie the flags together under one project so they can be managed together.</param>
        /// <param name="environmentKey">The environment key, used to tie together flag configuration and users under one environment so they can be managed together.</param>
        /// <param name="featureFlagKey">The feature flag&#39;s key. The key identifies the flag in your code.</param>
        /// <param name="approvalRequestId">The approval request ID</param>
        /// <param name="approvalRequestConfigBody">Create a new approval request</param>
        /// <response code="204">Action completed successfully.</response>
        /// <response code="401">Invalid access token.</response>
        /// <response code="404">Invalid resource specifier.</response>
        [HttpDelete]
        [Route("/api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/approval-requests/{approvalRequestId}")]
        [Authorize(Policy = "Token")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("DeleteApprovalRequest")]
        public virtual IActionResult DeleteApprovalRequest([FromRoute (Name = "projectKey")][Required]string projectKey, [FromRoute (Name = "environmentKey")][Required]string environmentKey, [FromRoute (Name = "featureFlagKey")][Required]string featureFlagKey, [FromRoute (Name = "approvalRequestId")][Required]string approvalRequestId, [FromBody]PostApprovalRequestRequest approvalRequestConfigBody)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Delete a feature flag in all environments. Be careful- - only delete feature flags that are no longer being used by your application.
        /// </summary>
        /// <param name="projectKey">The project key, used to tie the flags together under one project so they can be managed together.</param>
        /// <param name="featureFlagKey">The feature flag&#39;s key. The key identifies the flag in your code.</param>
        /// <response code="204">Action completed successfully.</response>
        /// <response code="401">Invalid access token.</response>
        /// <response code="404">Invalid resource specifier.</response>
        [HttpDelete]
        [Route("/api/v2/flags/{projectKey}/{featureFlagKey}")]
        [Authorize(Policy = "Token")]
        [ValidateModelState]
        [SwaggerOperation("DeleteFeatureFlag")]
        public virtual IActionResult DeleteFeatureFlag([FromRoute (Name = "projectKey")][Required]string projectKey, [FromRoute (Name = "featureFlagKey")][Required]string featureFlagKey)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Delete a scheduled change on a feature flag in an environment.
        /// </summary>
        /// <param name="projectKey">The project key, used to tie the flags together under one project so they can be managed together.</param>
        /// <param name="featureFlagKey">The feature flag&#39;s key. The key identifies the flag in your code.</param>
        /// <param name="environmentKey">The environment key, used to tie together flag configuration and users under one environment so they can be managed together.</param>
        /// <param name="scheduledChangeId">The id of the scheduled change</param>
        /// <response code="204">Action completed successfully.</response>
        /// <response code="401">Invalid access token.</response>
        /// <response code="404">Invalid resource specifier.</response>
        [HttpDelete]
        [Route("/api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/scheduled-changes/{scheduledChangeId}")]
        [Authorize(Policy = "Token")]
        [ValidateModelState]
        [SwaggerOperation("DeleteFlagConfigScheduledChanges")]
        public virtual IActionResult DeleteFlagConfigScheduledChanges([FromRoute (Name = "projectKey")][Required]string projectKey, [FromRoute (Name = "featureFlagKey")][Required]string featureFlagKey, [FromRoute (Name = "environmentKey")][Required]string environmentKey, [FromRoute (Name = "scheduledChangeId")][Required]string scheduledChangeId)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Get dependent flags for the flag in the environment specified in path parameters
        /// </summary>
        /// <param name="projectKey">The project key, used to tie the flags together under one project so they can be managed together.</param>
        /// <param name="environmentKey">The environment key, used to tie together flag configuration and users under one environment so they can be managed together.</param>
        /// <param name="featureFlagKey">The feature flag&#39;s key. The key identifies the flag in your code.</param>
        /// <response code="200">Dependent flags in a single envrionemnt response</response>
        /// <response code="401">Invalid access token.</response>
        /// <response code="403">This is a beta API, you must pass beta in the LD-API-Version header to use it.</response>
        /// <response code="404">Invalid resource specifier.</response>
        [HttpGet]
        [Route("/api/v2/flags/{projectKey}/{environmentKey}/{featureFlagKey}/dependent-flags")]
        [Authorize(Policy = "Token")]
        [ValidateModelState]
        [SwaggerOperation("FlagsProjectKeyEnvironmentKeyFeatureFlagKeyDependentFlagsGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(DependentFlagsByEnvironment), description: "Dependent flags in a single envrionemnt response")]
        [SwaggerResponse(statusCode: 403, type: typeof(UsageError), description: "This is a beta API, you must pass beta in the LD-API-Version header to use it.")]
        public virtual IActionResult FlagsProjectKeyEnvironmentKeyFeatureFlagKeyDependentFlagsGet([FromRoute (Name = "projectKey")][Required]string projectKey, [FromRoute (Name = "environmentKey")][Required]string environmentKey, [FromRoute (Name = "featureFlagKey")][Required]string featureFlagKey)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(DependentFlagsByEnvironment));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(UsageError));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"_links\" : {\n    \"parent\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    },\n    \"self\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    }\n  },\n  \"_site\" : {\n    \"href\" : \"/features/sort.order\",\n    \"type\" : \"text/html\"\n  },\n  \"items\" : [ {\n    \"_links\" : {\n      \"self\" : {\n        \"href\" : \"/api/v2/endpoint\",\n        \"type\" : \"application/json\"\n      }\n    },\n    \"_site\" : {\n      \"href\" : \"/features/sort.order\",\n      \"type\" : \"text/html\"\n    },\n    \"name\" : \"name\",\n    \"key\" : \"key\"\n  }, {\n    \"_links\" : {\n      \"self\" : {\n        \"href\" : \"/api/v2/endpoint\",\n        \"type\" : \"application/json\"\n      }\n    },\n    \"_site\" : {\n      \"href\" : \"/features/sort.order\",\n      \"type\" : \"text/html\"\n    },\n    \"name\" : \"name\",\n    \"key\" : \"key\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<DependentFlagsByEnvironment>(exampleJson)
            : default(DependentFlagsByEnvironment);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get dependent flags across all environments for the flag specified in the path parameters
        /// </summary>
        /// <param name="projectKey">The project key, used to tie the flags together under one project so they can be managed together.</param>
        /// <param name="featureFlagKey">The feature flag&#39;s key. The key identifies the flag in your code.</param>
        /// <response code="200">Dependent flags accross all environemnts in the project response</response>
        /// <response code="401">Invalid access token.</response>
        /// <response code="403">This is a beta API, you must pass beta in the LD-API-Version header to use it.</response>
        /// <response code="404">Invalid resource specifier.</response>
        [HttpGet]
        [Route("/api/v2/flags/{projectKey}/{featureFlagKey}/dependent-flags")]
        [Authorize(Policy = "Token")]
        [ValidateModelState]
        [SwaggerOperation("FlagsProjectKeyFeatureFlagKeyDependentFlagsGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(MultiEnvironmentDependentFlags), description: "Dependent flags accross all environemnts in the project response")]
        [SwaggerResponse(statusCode: 403, type: typeof(UsageError), description: "This is a beta API, you must pass beta in the LD-API-Version header to use it.")]
        public virtual IActionResult FlagsProjectKeyFeatureFlagKeyDependentFlagsGet([FromRoute (Name = "projectKey")][Required]string projectKey, [FromRoute (Name = "featureFlagKey")][Required]string featureFlagKey)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(MultiEnvironmentDependentFlags));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(UsageError));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"_links\" : {\n    \"parent\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    },\n    \"self\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    }\n  },\n  \"_site\" : {\n    \"href\" : \"/features/sort.order\",\n    \"type\" : \"text/html\"\n  },\n  \"items\" : [ {\n    \"_links\" : {\n      \"parent\" : {\n        \"href\" : \"/api/v2/endpoint\",\n        \"type\" : \"application/json\"\n      },\n      \"self\" : {\n        \"href\" : \"/api/v2/endpoint\",\n        \"type\" : \"application/json\"\n      }\n    },\n    \"environments\" : [ {\n      \"_links\" : {\n        \"flagLink\" : {\n          \"href\" : \"/api/v2/endpoint\",\n          \"type\" : \"application/json\"\n        },\n        \"self\" : {\n          \"href\" : \"/api/v2/endpoint\",\n          \"type\" : \"application/json\"\n        }\n      },\n      \"_site\" : {\n        \"href\" : \"/features/sort.order\",\n        \"type\" : \"text/html\"\n      },\n      \"name\" : \"name\",\n      \"key\" : \"key\"\n    }, {\n      \"_links\" : {\n        \"flagLink\" : {\n          \"href\" : \"/api/v2/endpoint\",\n          \"type\" : \"application/json\"\n        },\n        \"self\" : {\n          \"href\" : \"/api/v2/endpoint\",\n          \"type\" : \"application/json\"\n        }\n      },\n      \"_site\" : {\n        \"href\" : \"/features/sort.order\",\n        \"type\" : \"text/html\"\n      },\n      \"name\" : \"name\",\n      \"key\" : \"key\"\n    } ],\n    \"_site\" : {\n      \"href\" : \"/features/sort.order\",\n      \"type\" : \"text/html\"\n    },\n    \"name\" : \"name\",\n    \"key\" : \"key\"\n  }, {\n    \"_links\" : {\n      \"parent\" : {\n        \"href\" : \"/api/v2/endpoint\",\n        \"type\" : \"application/json\"\n      },\n      \"self\" : {\n        \"href\" : \"/api/v2/endpoint\",\n        \"type\" : \"application/json\"\n      }\n    },\n    \"environments\" : [ {\n      \"_links\" : {\n        \"flagLink\" : {\n          \"href\" : \"/api/v2/endpoint\",\n          \"type\" : \"application/json\"\n        },\n        \"self\" : {\n          \"href\" : \"/api/v2/endpoint\",\n          \"type\" : \"application/json\"\n        }\n      },\n      \"_site\" : {\n        \"href\" : \"/features/sort.order\",\n        \"type\" : \"text/html\"\n      },\n      \"name\" : \"name\",\n      \"key\" : \"key\"\n    }, {\n      \"_links\" : {\n        \"flagLink\" : {\n          \"href\" : \"/api/v2/endpoint\",\n          \"type\" : \"application/json\"\n        },\n        \"self\" : {\n          \"href\" : \"/api/v2/endpoint\",\n          \"type\" : \"application/json\"\n        }\n      },\n      \"_site\" : {\n        \"href\" : \"/features/sort.order\",\n        \"type\" : \"text/html\"\n      },\n      \"name\" : \"name\",\n      \"key\" : \"key\"\n    } ],\n    \"_site\" : {\n      \"href\" : \"/features/sort.order\",\n      \"type\" : \"text/html\"\n    },\n    \"name\" : \"name\",\n    \"key\" : \"key\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<MultiEnvironmentDependentFlags>(exampleJson)
            : default(MultiEnvironmentDependentFlags);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get a single approval request for a feature flag config
        /// </summary>
        /// <param name="projectKey">The project key, used to tie the flags together under one project so they can be managed together.</param>
        /// <param name="featureFlagKey">The feature flag&#39;s key. The key identifies the flag in your code.</param>
        /// <param name="environmentKey">The environment key, used to tie together flag configuration and users under one environment so they can be managed together.</param>
        /// <param name="approvalRequestId">The approval request ID</param>
        /// <response code="200">Approval request response</response>
        /// <response code="401">Invalid access token.</response>
        /// <response code="404">Invalid resource specifier.</response>
        [HttpGet]
        [Route("/api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/approval-requests/{approvalRequestId}")]
        [Authorize(Policy = "Token")]
        [ValidateModelState]
        [SwaggerOperation("GetApprovalRequest")]
        [SwaggerResponse(statusCode: 200, type: typeof(ApprovalRequests), description: "Approval request response")]
        public virtual IActionResult GetApprovalRequest([FromRoute (Name = "projectKey")][Required]string projectKey, [FromRoute (Name = "featureFlagKey")][Required]string featureFlagKey, [FromRoute (Name = "environmentKey")][Required]string environmentKey, [FromRoute (Name = "approvalRequestId")][Required]string approvalRequestId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ApprovalRequests));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"_links\" : {\n    \"next\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    },\n    \"self\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    }\n  },\n  \"items\" : [ {\n    \"allReviews\" : [ {\n      \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n      \"creationDate\" : 6,\n      \"memberId\" : \"5a580a01b4ff89217bdf9dc1\"\n    }, {\n      \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n      \"creationDate\" : 6,\n      \"memberId\" : \"5a580a01b4ff89217bdf9dc1\"\n    } ],\n    \"instructions\" : [ {\n      \"kind\" : \"removeUserTargets\"\n    }, {\n      \"kind\" : \"removeUserTargets\"\n    } ],\n    \"notifyMemberIds\" : [ \"memberId\", \"memberId2\" ],\n    \"executionDate\" : 5,\n    \"appliedDate\" : 1,\n    \"creationDate\" : 5,\n    \"requestorId\" : \"requestorId\",\n    \"appliedByMemberID\" : \"appliedByMemberID\",\n    \"operatingOnId\" : \"operatingOnId\",\n    \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n    \"_version\" : 0,\n    \"status\" : \"pending\"\n  }, {\n    \"allReviews\" : [ {\n      \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n      \"creationDate\" : 6,\n      \"memberId\" : \"5a580a01b4ff89217bdf9dc1\"\n    }, {\n      \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n      \"creationDate\" : 6,\n      \"memberId\" : \"5a580a01b4ff89217bdf9dc1\"\n    } ],\n    \"instructions\" : [ {\n      \"kind\" : \"removeUserTargets\"\n    }, {\n      \"kind\" : \"removeUserTargets\"\n    } ],\n    \"notifyMemberIds\" : [ \"memberId\", \"memberId2\" ],\n    \"executionDate\" : 5,\n    \"appliedDate\" : 1,\n    \"creationDate\" : 5,\n    \"requestorId\" : \"requestorId\",\n    \"appliedByMemberID\" : \"appliedByMemberID\",\n    \"operatingOnId\" : \"operatingOnId\",\n    \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n    \"_version\" : 0,\n    \"status\" : \"pending\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ApprovalRequests>(exampleJson)
            : default(ApprovalRequests);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get all approval requests for a feature flag config
        /// </summary>
        /// <param name="projectKey">The project key, used to tie the flags together under one project so they can be managed together.</param>
        /// <param name="featureFlagKey">The feature flag&#39;s key. The key identifies the flag in your code.</param>
        /// <param name="environmentKey">The environment key, used to tie together flag configuration and users under one environment so they can be managed together.</param>
        /// <response code="200">Approval requests response</response>
        /// <response code="401">Invalid access token.</response>
        /// <response code="404">Invalid resource specifier.</response>
        [HttpGet]
        [Route("/api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/approval-requests")]
        [Authorize(Policy = "Token")]
        [ValidateModelState]
        [SwaggerOperation("GetApprovalRequests")]
        [SwaggerResponse(statusCode: 200, type: typeof(ApprovalRequests), description: "Approval requests response")]
        public virtual IActionResult GetApprovalRequests([FromRoute (Name = "projectKey")][Required]string projectKey, [FromRoute (Name = "featureFlagKey")][Required]string featureFlagKey, [FromRoute (Name = "environmentKey")][Required]string environmentKey)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ApprovalRequests));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"_links\" : {\n    \"next\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    },\n    \"self\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    }\n  },\n  \"items\" : [ {\n    \"allReviews\" : [ {\n      \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n      \"creationDate\" : 6,\n      \"memberId\" : \"5a580a01b4ff89217bdf9dc1\"\n    }, {\n      \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n      \"creationDate\" : 6,\n      \"memberId\" : \"5a580a01b4ff89217bdf9dc1\"\n    } ],\n    \"instructions\" : [ {\n      \"kind\" : \"removeUserTargets\"\n    }, {\n      \"kind\" : \"removeUserTargets\"\n    } ],\n    \"notifyMemberIds\" : [ \"memberId\", \"memberId2\" ],\n    \"executionDate\" : 5,\n    \"appliedDate\" : 1,\n    \"creationDate\" : 5,\n    \"requestorId\" : \"requestorId\",\n    \"appliedByMemberID\" : \"appliedByMemberID\",\n    \"operatingOnId\" : \"operatingOnId\",\n    \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n    \"_version\" : 0,\n    \"status\" : \"pending\"\n  }, {\n    \"allReviews\" : [ {\n      \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n      \"creationDate\" : 6,\n      \"memberId\" : \"5a580a01b4ff89217bdf9dc1\"\n    }, {\n      \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n      \"creationDate\" : 6,\n      \"memberId\" : \"5a580a01b4ff89217bdf9dc1\"\n    } ],\n    \"instructions\" : [ {\n      \"kind\" : \"removeUserTargets\"\n    }, {\n      \"kind\" : \"removeUserTargets\"\n    } ],\n    \"notifyMemberIds\" : [ \"memberId\", \"memberId2\" ],\n    \"executionDate\" : 5,\n    \"appliedDate\" : 1,\n    \"creationDate\" : 5,\n    \"requestorId\" : \"requestorId\",\n    \"appliedByMemberID\" : \"appliedByMemberID\",\n    \"operatingOnId\" : \"operatingOnId\",\n    \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n    \"_version\" : 0,\n    \"status\" : \"pending\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ApprovalRequests>(exampleJson)
            : default(ApprovalRequests);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get expiring user targets for feature flag
        /// </summary>
        /// <param name="projectKey">The project key, used to tie the flags together under one project so they can be managed together.</param>
        /// <param name="environmentKey">The environment key, used to tie together flag configuration and users under one environment so they can be managed together.</param>
        /// <param name="featureFlagKey">The feature flag&#39;s key. The key identifies the flag in your code.</param>
        /// <response code="200">User targets of the requested feature flag.</response>
        /// <response code="401">Invalid access token.</response>
        [HttpGet]
        [Route("/api/v2/flags/{projectKey}/{featureFlagKey}/expiring-user-targets/{environmentKey}")]
        [Authorize(Policy = "Token")]
        [ValidateModelState]
        [SwaggerOperation("GetExpiringUserTargets")]
        [SwaggerResponse(statusCode: 200, type: typeof(UserTargetingExpirationForFlags), description: "User targets of the requested feature flag.")]
        public virtual IActionResult GetExpiringUserTargets([FromRoute (Name = "projectKey")][Required]string projectKey, [FromRoute (Name = "environmentKey")][Required]string environmentKey, [FromRoute (Name = "featureFlagKey")][Required]string featureFlagKey)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(UserTargetingExpirationForFlags));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            string exampleJson = null;
            exampleJson = "{\n  \"_links\" : {\n    \"next\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    },\n    \"self\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    }\n  },\n  \"items\" : [ {\n    \"_resourceId\" : {\n      \"projectKey\" : \"projectKey\",\n      \"kind\" : \"kind\",\n      \"flagKey\" : \"flagKey\",\n      \"key\" : \"key\",\n      \"environmentKey\" : \"environmentKey\"\n    },\n    \"variationId\" : \"variationId\",\n    \"_links\" : {\n      \"next\" : {\n        \"href\" : \"/api/v2/endpoint\",\n        \"type\" : \"application/json\"\n      },\n      \"self\" : {\n        \"href\" : \"/api/v2/endpoint\",\n        \"type\" : \"application/json\"\n      }\n    },\n    \"_id\" : \"_id\",\n    \"_version\" : 0,\n    \"userKey\" : \"userKey\",\n    \"expirationDate\" : 1735689600000\n  }, {\n    \"_resourceId\" : {\n      \"projectKey\" : \"projectKey\",\n      \"kind\" : \"kind\",\n      \"flagKey\" : \"flagKey\",\n      \"key\" : \"key\",\n      \"environmentKey\" : \"environmentKey\"\n    },\n    \"variationId\" : \"variationId\",\n    \"_links\" : {\n      \"next\" : {\n        \"href\" : \"/api/v2/endpoint\",\n        \"type\" : \"application/json\"\n      },\n      \"self\" : {\n        \"href\" : \"/api/v2/endpoint\",\n        \"type\" : \"application/json\"\n      }\n    },\n    \"_id\" : \"_id\",\n    \"_version\" : 0,\n    \"userKey\" : \"userKey\",\n    \"expirationDate\" : 1735689600000\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<UserTargetingExpirationForFlags>(exampleJson)
            : default(UserTargetingExpirationForFlags);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get a single feature flag by key.
        /// </summary>
        /// <param name="projectKey">The project key, used to tie the flags together under one project so they can be managed together.</param>
        /// <param name="featureFlagKey">The feature flag&#39;s key. The key identifies the flag in your code.</param>
        /// <param name="env">By default, each feature will include configurations for each environment. You can filter environments with the env query parameter. For example, setting env&#x3D;[\&quot;production\&quot;] will restrict the returned configurations to just your production environment.</param>
        /// <response code="200">Flag response.</response>
        /// <response code="401">Invalid access token.</response>
        /// <response code="404">Invalid resource specifier.</response>
        [HttpGet]
        [Route("/api/v2/flags/{projectKey}/{featureFlagKey}")]
        [Authorize(Policy = "Token")]
        [ValidateModelState]
        [SwaggerOperation("GetFeatureFlag")]
        [SwaggerResponse(statusCode: 200, type: typeof(FeatureFlag), description: "Flag response.")]
        public virtual IActionResult GetFeatureFlag([FromRoute (Name = "projectKey")][Required]string projectKey, [FromRoute (Name = "featureFlagKey")][Required]string featureFlagKey, [FromQuery (Name = "env")]List<string> env)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(FeatureFlag));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"archivedDate\" : 1443652232590,\n  \"temporary\" : false,\n  \"_maintainer\" : {\n    \"firstName\" : \"Alan\",\n    \"lastName\" : \"Turing\",\n    \"_verified\" : true,\n    \"_links\" : {\n      \"next\" : {\n        \"href\" : \"/api/v2/endpoint\",\n        \"type\" : \"application/json\"\n      },\n      \"self\" : {\n        \"href\" : \"/api/v2/endpoint\",\n        \"type\" : \"application/json\"\n      }\n    },\n    \"_pendingInvite\" : true,\n    \"_lastSeen\" : 1469326565348,\n    \"isBeta\" : true,\n    \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n    \"_lastSeenMetadata\" : {\n      \"tokenId\" : \"5fd2a1ee05600316d5cb3e96\"\n    },\n    \"email\" : \"user@launchdarkly.com\",\n    \"customRoles\" : [ \"5a580a01b4ff89217bdf9dc1\", \"5a580a01b4ff89217bdf9dc1\" ]\n  },\n  \"clientSideAvailability\" : {\n    \"usingEnvironmentId\" : true,\n    \"usingMobileKey\" : true\n  },\n  \"_links\" : {\n    \"next\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    },\n    \"self\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    }\n  },\n  \"environments\" : {\n    \"key\" : {\n      \"salt\" : \"YWx0ZXJuYXRlLnBhZ2U=\",\n      \"rules\" : [ {\n        \"rollout\" : {\n          \"variations\" : [ {\n            \"weight\" : 5,\n            \"variation\" : 1\n          }, {\n            \"weight\" : 5,\n            \"variation\" : 1\n          } ],\n          \"bucketBy\" : \"bucketBy\"\n        },\n        \"clauses\" : [ {\n          \"op\" : \"in\",\n          \"negate\" : true,\n          \"values\" : [ \"Top Customers\", \"Top Customers\" ],\n          \"_id\" : \"_id\",\n          \"attribute\" : \"groups\"\n        }, {\n          \"op\" : \"in\",\n          \"negate\" : true,\n          \"values\" : [ \"Top Customers\", \"Top Customers\" ],\n          \"_id\" : \"_id\",\n          \"attribute\" : \"groups\"\n        } ],\n        \"description\" : \"description\",\n        \"_id\" : \"_id\",\n        \"trackEvents\" : true,\n        \"variation\" : 9\n      }, {\n        \"rollout\" : {\n          \"variations\" : [ {\n            \"weight\" : 5,\n            \"variation\" : 1\n          }, {\n            \"weight\" : 5,\n            \"variation\" : 1\n          } ],\n          \"bucketBy\" : \"bucketBy\"\n        },\n        \"clauses\" : [ {\n          \"op\" : \"in\",\n          \"negate\" : true,\n          \"values\" : [ \"Top Customers\", \"Top Customers\" ],\n          \"_id\" : \"_id\",\n          \"attribute\" : \"groups\"\n        }, {\n          \"op\" : \"in\",\n          \"negate\" : true,\n          \"values\" : [ \"Top Customers\", \"Top Customers\" ],\n          \"_id\" : \"_id\",\n          \"attribute\" : \"groups\"\n        } ],\n        \"description\" : \"description\",\n        \"_id\" : \"_id\",\n        \"trackEvents\" : true,\n        \"variation\" : 9\n      } ],\n      \"targets\" : [ {\n        \"values\" : [ \"\\"1461797806427-7-115540266\\", \\"00142875-a39d-4028-a3b7-987ccd151649\\"\", \"\\"1461797806427-7-115540266\\", \\"00142875-a39d-4028-a3b7-987ccd151649\\"\" ],\n        \"variation\" : 3\n      }, {\n        \"values\" : [ \"\\"1461797806427-7-115540266\\", \\"00142875-a39d-4028-a3b7-987ccd151649\\"\", \"\\"1461797806427-7-115540266\\", \\"00142875-a39d-4028-a3b7-987ccd151649\\"\" ],\n        \"variation\" : 3\n      } ],\n      \"version\" : 65,\n      \"prerequisites\" : [ {\n        \"key\" : \"key\",\n        \"variation\" : 7\n      }, {\n        \"key\" : \"key\",\n        \"variation\" : 7\n      } ],\n      \"archived\" : true,\n      \"trackEventsFallthrough\" : true,\n      \"_environmentName\" : \"_environmentName\",\n      \"_site\" : {\n        \"href\" : \"/features/sort.order\",\n        \"type\" : \"text/html\"\n      },\n      \"true\" : true,\n      \"lastModified\" : 1469326565348,\n      \"sel\" : \"45501b9314dc4641841af774cb038b96\",\n      \"trackEvents\" : false,\n      \"fallthrough\" : {\n        \"rollout\" : {\n          \"variations\" : [ {\n            \"weight\" : 5,\n            \"variation\" : 1\n          }, {\n            \"weight\" : 5,\n            \"variation\" : 1\n          } ],\n          \"bucketBy\" : \"bucketBy\"\n        },\n        \"variation\" : 5\n      },\n      \"offVariation\" : 2\n    }\n  },\n  \"kind\" : \"boolean\",\n  \"description\" : \"This flag controls whether test feature is turned on or not.\",\n  \"creationDate\" : 1443652232590,\n  \"tags\" : [ ],\n  \"archived\" : false,\n  \"goalIds\" : [ \"d7239405bd89c930e885aa76\", \"405bc930e88d7239d895aa76\" ],\n  \"includeInSnippet\" : false,\n  \"maintainerId\" : \"561c579cd8fd5c2704000001\",\n  \"customProperties\" : {\n    \"bugs\" : {\n      \"name\" : \"Issue tracker ids\",\n      \"value\" : [ \"123\", \"456\" ]\n    },\n    \"deprecated\" : {\n      \"name\" : \"Deprecated Date\",\n      \"value\" : [ ]\n    }\n  },\n  \"defaults\" : {\n    \"onVariation\" : 6,\n    \"offVariation\" : 0\n  },\n  \"variations\" : [ {\n    \"value\" : \"a\"\n  }, {\n    \"value\" : \"b\"\n  } ],\n  \"name\" : \"Test Feature\",\n  \"_version\" : 23,\n  \"key\" : \"test-feature\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FeatureFlag>(exampleJson)
            : default(FeatureFlag);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get the status for a particular feature flag.
        /// </summary>
        /// <param name="projectKey">The project key, used to tie the flags together under one project so they can be managed together.</param>
        /// <param name="environmentKey">The environment key, used to tie together flag configuration and users under one environment so they can be managed together.</param>
        /// <param name="featureFlagKey">The feature flag&#39;s key. The key identifies the flag in your code.</param>
        /// <response code="200">Status of the requested feature flag.</response>
        /// <response code="401">Invalid access token.</response>
        [HttpGet]
        [Route("/api/v2/flag-statuses/{projectKey}/{environmentKey}/{featureFlagKey}")]
        [Authorize(Policy = "Token")]
        [ValidateModelState]
        [SwaggerOperation("GetFeatureFlagStatus")]
        [SwaggerResponse(statusCode: 200, type: typeof(FeatureFlagStatus), description: "Status of the requested feature flag.")]
        public virtual IActionResult GetFeatureFlagStatus([FromRoute (Name = "projectKey")][Required]string projectKey, [FromRoute (Name = "environmentKey")][Required]string environmentKey, [FromRoute (Name = "featureFlagKey")][Required]string featureFlagKey)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(FeatureFlagStatus));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            string exampleJson = null;
            exampleJson = "{\n  \"lastRequested\" : \"2016-08-16T21:10:11.886Z\",\n  \"default\" : \"{}\",\n  \"_links\" : {\n    \"parent\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    },\n    \"self\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    }\n  },\n  \"name\" : \"new\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FeatureFlagStatus>(exampleJson)
            : default(FeatureFlagStatus);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get the status for a particular feature flag across environments
        /// </summary>
        /// <param name="projectKey">The project key, used to tie the flags together under one project so they can be managed together.</param>
        /// <param name="featureFlagKey">The feature flag&#39;s key. The key identifies the flag in your code.</param>
        /// <response code="200">Status of the requested feature flag across environments</response>
        /// <response code="401">Invalid access token.</response>
        /// <response code="403">This is a beta API, you must pass beta in the LD-API-Version header to use it.</response>
        [HttpGet]
        [Route("/api/v2/flag-status/{projectKey}/{featureFlagKey}")]
        [Authorize(Policy = "Token")]
        [ValidateModelState]
        [SwaggerOperation("GetFeatureFlagStatusAcrossEnvironments")]
        [SwaggerResponse(statusCode: 200, type: typeof(FeatureFlagStatusAcrossEnvironments), description: "Status of the requested feature flag across environments")]
        [SwaggerResponse(statusCode: 403, type: typeof(UsageError), description: "This is a beta API, you must pass beta in the LD-API-Version header to use it.")]
        public virtual IActionResult GetFeatureFlagStatusAcrossEnvironments([FromRoute (Name = "projectKey")][Required]string projectKey, [FromRoute (Name = "featureFlagKey")][Required]string featureFlagKey)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(FeatureFlagStatusAcrossEnvironments));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(UsageError));
            string exampleJson = null;
            exampleJson = "{\n  \"_links\" : {\n    \"parent\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    },\n    \"self\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    }\n  },\n  \"environments\" : {\n    \"key\" : {\n      \"lastRequested\" : \"2016-08-16T21:10:11.886Z\",\n      \"default\" : \"{}\",\n      \"name\" : \"new\"\n    }\n  },\n  \"key\" : \"key\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FeatureFlagStatusAcrossEnvironments>(exampleJson)
            : default(FeatureFlagStatusAcrossEnvironments);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get a list of statuses for all feature flags. The status includes the last time the feature flag was requested, as well as the state of the flag.
        /// </summary>
        /// <param name="projectKey">The project key, used to tie the flags together under one project so they can be managed together.</param>
        /// <param name="environmentKey">The environment key, used to tie together flag configuration and users under one environment so they can be managed together.</param>
        /// <response code="200">List of feature flag statuses.</response>
        /// <response code="401">Invalid access token.</response>
        [HttpGet]
        [Route("/api/v2/flag-statuses/{projectKey}/{environmentKey}")]
        [Authorize(Policy = "Token")]
        [ValidateModelState]
        [SwaggerOperation("GetFeatureFlagStatuses")]
        [SwaggerResponse(statusCode: 200, type: typeof(FeatureFlagStatuses), description: "List of feature flag statuses.")]
        public virtual IActionResult GetFeatureFlagStatuses([FromRoute (Name = "projectKey")][Required]string projectKey, [FromRoute (Name = "environmentKey")][Required]string environmentKey)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(FeatureFlagStatuses));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            string exampleJson = null;
            exampleJson = "{\n  \"_links\" : {\n    \"parent\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    },\n    \"self\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    }\n  },\n  \"items\" : [ {\n    \"lastRequested\" : \"2016-08-16T21:10:11.886Z\",\n    \"default\" : \"{}\",\n    \"_links\" : {\n      \"parent\" : {\n        \"href\" : \"/api/v2/endpoint\",\n        \"type\" : \"application/json\"\n      },\n      \"self\" : {\n        \"href\" : \"/api/v2/endpoint\",\n        \"type\" : \"application/json\"\n      }\n    },\n    \"name\" : \"new\"\n  }, {\n    \"lastRequested\" : \"2016-08-16T21:10:11.886Z\",\n    \"default\" : \"{}\",\n    \"_links\" : {\n      \"parent\" : {\n        \"href\" : \"/api/v2/endpoint\",\n        \"type\" : \"application/json\"\n      },\n      \"self\" : {\n        \"href\" : \"/api/v2/endpoint\",\n        \"type\" : \"application/json\"\n      }\n    },\n    \"name\" : \"new\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FeatureFlagStatuses>(exampleJson)
            : default(FeatureFlagStatuses);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get a list of all features in the given project.
        /// </summary>
        /// <param name="projectKey">The project key, used to tie the flags together under one project so they can be managed together.</param>
        /// <param name="env">By default, each feature will include configurations for each environment. You can filter environments with the env query parameter. For example, setting env&#x3D;[\&quot;production\&quot;] will restrict the returned configurations to just your production environment.</param>
        /// <param name="summary">By default in api version &gt;&#x3D; 1, flags will _not_ include their list of prerequisites, targets or rules.  Set summary&#x3D;0 to include these fields for each flag returned.</param>
        /// <param name="archived">When set to 1, only archived flags will be included in the list of flags returned.  By default, archived flags are not included in the list of flags.</param>
        /// <param name="limit">The number of objects to return. Defaults to -1, which returns everything.</param>
        /// <param name="offset">Where to start in the list. This is for use with pagination. For example, an offset of 10 would skip the first 10 items and then return the next limit items.</param>
        /// <param name="filter">A comma-separated list of filters. Each filter is of the form field:value.</param>
        /// <param name="sort">A comma-separated list of fields to sort by. A field prefixed by a - will be sorted in descending order.</param>
        /// <param name="tag">Filter by tag. A tag can be used to group flags across projects.</param>
        /// <response code="200">Flags response.</response>
        /// <response code="401">Invalid access token.</response>
        [HttpGet]
        [Route("/api/v2/flags/{projectKey}")]
        [Authorize(Policy = "Token")]
        [ValidateModelState]
        [SwaggerOperation("GetFeatureFlags")]
        [SwaggerResponse(statusCode: 200, type: typeof(FeatureFlags), description: "Flags response.")]
        public virtual IActionResult GetFeatureFlags([FromRoute (Name = "projectKey")][Required]string projectKey, [FromQuery (Name = "env")]List<string> env, [FromQuery (Name = "summary")]bool? summary, [FromQuery (Name = "archived")]bool? archived, [FromQuery (Name = "limit")]decimal? limit, [FromQuery (Name = "offset")]decimal? offset, [FromQuery (Name = "filter")]string filter, [FromQuery (Name = "sort")]string sort, [FromQuery (Name = "tag")]string tag)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(FeatureFlags));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            string exampleJson = null;
            exampleJson = "{\n  \"_links\" : {\n    \"next\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    },\n    \"self\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    }\n  },\n  \"totalCount\" : 2.027123023002322,\n  \"items\" : [ {\n    \"archivedDate\" : 1443652232590,\n    \"temporary\" : false,\n    \"_maintainer\" : {\n      \"firstName\" : \"Alan\",\n      \"lastName\" : \"Turing\",\n      \"_verified\" : true,\n      \"_links\" : {\n        \"next\" : {\n          \"href\" : \"/api/v2/endpoint\",\n          \"type\" : \"application/json\"\n        },\n        \"self\" : {\n          \"href\" : \"/api/v2/endpoint\",\n          \"type\" : \"application/json\"\n        }\n      },\n      \"_pendingInvite\" : true,\n      \"_lastSeen\" : 1469326565348,\n      \"isBeta\" : true,\n      \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n      \"_lastSeenMetadata\" : {\n        \"tokenId\" : \"5fd2a1ee05600316d5cb3e96\"\n      },\n      \"email\" : \"user@launchdarkly.com\",\n      \"customRoles\" : [ \"5a580a01b4ff89217bdf9dc1\", \"5a580a01b4ff89217bdf9dc1\" ]\n    },\n    \"clientSideAvailability\" : {\n      \"usingEnvironmentId\" : true,\n      \"usingMobileKey\" : true\n    },\n    \"_links\" : {\n      \"next\" : {\n        \"href\" : \"/api/v2/endpoint\",\n        \"type\" : \"application/json\"\n      },\n      \"self\" : {\n        \"href\" : \"/api/v2/endpoint\",\n        \"type\" : \"application/json\"\n      }\n    },\n    \"environments\" : {\n      \"key\" : {\n        \"salt\" : \"YWx0ZXJuYXRlLnBhZ2U=\",\n        \"rules\" : [ {\n          \"rollout\" : {\n            \"variations\" : [ {\n              \"weight\" : 5,\n              \"variation\" : 1\n            }, {\n              \"weight\" : 5,\n              \"variation\" : 1\n            } ],\n            \"bucketBy\" : \"bucketBy\"\n          },\n          \"clauses\" : [ {\n            \"op\" : \"in\",\n            \"negate\" : true,\n            \"values\" : [ \"Top Customers\", \"Top Customers\" ],\n            \"_id\" : \"_id\",\n            \"attribute\" : \"groups\"\n          }, {\n            \"op\" : \"in\",\n            \"negate\" : true,\n            \"values\" : [ \"Top Customers\", \"Top Customers\" ],\n            \"_id\" : \"_id\",\n            \"attribute\" : \"groups\"\n          } ],\n          \"description\" : \"description\",\n          \"_id\" : \"_id\",\n          \"trackEvents\" : true,\n          \"variation\" : 9\n        }, {\n          \"rollout\" : {\n            \"variations\" : [ {\n              \"weight\" : 5,\n              \"variation\" : 1\n            }, {\n              \"weight\" : 5,\n              \"variation\" : 1\n            } ],\n            \"bucketBy\" : \"bucketBy\"\n          },\n          \"clauses\" : [ {\n            \"op\" : \"in\",\n            \"negate\" : true,\n            \"values\" : [ \"Top Customers\", \"Top Customers\" ],\n            \"_id\" : \"_id\",\n            \"attribute\" : \"groups\"\n          }, {\n            \"op\" : \"in\",\n            \"negate\" : true,\n            \"values\" : [ \"Top Customers\", \"Top Customers\" ],\n            \"_id\" : \"_id\",\n            \"attribute\" : \"groups\"\n          } ],\n          \"description\" : \"description\",\n          \"_id\" : \"_id\",\n          \"trackEvents\" : true,\n          \"variation\" : 9\n        } ],\n        \"targets\" : [ {\n          \"values\" : [ \"\\"1461797806427-7-115540266\\", \\"00142875-a39d-4028-a3b7-987ccd151649\\"\", \"\\"1461797806427-7-115540266\\", \\"00142875-a39d-4028-a3b7-987ccd151649\\"\" ],\n          \"variation\" : 3\n        }, {\n          \"values\" : [ \"\\"1461797806427-7-115540266\\", \\"00142875-a39d-4028-a3b7-987ccd151649\\"\", \"\\"1461797806427-7-115540266\\", \\"00142875-a39d-4028-a3b7-987ccd151649\\"\" ],\n          \"variation\" : 3\n        } ],\n        \"version\" : 65,\n        \"prerequisites\" : [ {\n          \"key\" : \"key\",\n          \"variation\" : 7\n        }, {\n          \"key\" : \"key\",\n          \"variation\" : 7\n        } ],\n        \"archived\" : true,\n        \"trackEventsFallthrough\" : true,\n        \"_environmentName\" : \"_environmentName\",\n        \"_site\" : {\n          \"href\" : \"/features/sort.order\",\n          \"type\" : \"text/html\"\n        },\n        \"true\" : true,\n        \"lastModified\" : 1469326565348,\n        \"sel\" : \"45501b9314dc4641841af774cb038b96\",\n        \"trackEvents\" : false,\n        \"fallthrough\" : {\n          \"rollout\" : {\n            \"variations\" : [ {\n              \"weight\" : 5,\n              \"variation\" : 1\n            }, {\n              \"weight\" : 5,\n              \"variation\" : 1\n            } ],\n            \"bucketBy\" : \"bucketBy\"\n          },\n          \"variation\" : 5\n        },\n        \"offVariation\" : 2\n      }\n    },\n    \"kind\" : \"boolean\",\n    \"description\" : \"This flag controls whether test feature is turned on or not.\",\n    \"creationDate\" : 1443652232590,\n    \"tags\" : [ ],\n    \"archived\" : false,\n    \"goalIds\" : [ \"d7239405bd89c930e885aa76\", \"405bc930e88d7239d895aa76\" ],\n    \"includeInSnippet\" : false,\n    \"maintainerId\" : \"561c579cd8fd5c2704000001\",\n    \"customProperties\" : {\n      \"bugs\" : {\n        \"name\" : \"Issue tracker ids\",\n        \"value\" : [ \"123\", \"456\" ]\n      },\n      \"deprecated\" : {\n        \"name\" : \"Deprecated Date\",\n        \"value\" : [ ]\n      }\n    },\n    \"defaults\" : {\n      \"onVariation\" : 6,\n      \"offVariation\" : 0\n    },\n    \"variations\" : [ {\n      \"value\" : \"a\"\n    }, {\n      \"value\" : \"b\"\n    } ],\n    \"name\" : \"Test Feature\",\n    \"_version\" : 23,\n    \"key\" : \"test-feature\"\n  }, {\n    \"archivedDate\" : 1443652232590,\n    \"temporary\" : false,\n    \"_maintainer\" : {\n      \"firstName\" : \"Alan\",\n      \"lastName\" : \"Turing\",\n      \"_verified\" : true,\n      \"_links\" : {\n        \"next\" : {\n          \"href\" : \"/api/v2/endpoint\",\n          \"type\" : \"application/json\"\n        },\n        \"self\" : {\n          \"href\" : \"/api/v2/endpoint\",\n          \"type\" : \"application/json\"\n        }\n      },\n      \"_pendingInvite\" : true,\n      \"_lastSeen\" : 1469326565348,\n      \"isBeta\" : true,\n      \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n      \"_lastSeenMetadata\" : {\n        \"tokenId\" : \"5fd2a1ee05600316d5cb3e96\"\n      },\n      \"email\" : \"user@launchdarkly.com\",\n      \"customRoles\" : [ \"5a580a01b4ff89217bdf9dc1\", \"5a580a01b4ff89217bdf9dc1\" ]\n    },\n    \"clientSideAvailability\" : {\n      \"usingEnvironmentId\" : true,\n      \"usingMobileKey\" : true\n    },\n    \"_links\" : {\n      \"next\" : {\n        \"href\" : \"/api/v2/endpoint\",\n        \"type\" : \"application/json\"\n      },\n      \"self\" : {\n        \"href\" : \"/api/v2/endpoint\",\n        \"type\" : \"application/json\"\n      }\n    },\n    \"environments\" : {\n      \"key\" : {\n        \"salt\" : \"YWx0ZXJuYXRlLnBhZ2U=\",\n        \"rules\" : [ {\n          \"rollout\" : {\n            \"variations\" : [ {\n              \"weight\" : 5,\n              \"variation\" : 1\n            }, {\n              \"weight\" : 5,\n              \"variation\" : 1\n            } ],\n            \"bucketBy\" : \"bucketBy\"\n          },\n          \"clauses\" : [ {\n            \"op\" : \"in\",\n            \"negate\" : true,\n            \"values\" : [ \"Top Customers\", \"Top Customers\" ],\n            \"_id\" : \"_id\",\n            \"attribute\" : \"groups\"\n          }, {\n            \"op\" : \"in\",\n            \"negate\" : true,\n            \"values\" : [ \"Top Customers\", \"Top Customers\" ],\n            \"_id\" : \"_id\",\n            \"attribute\" : \"groups\"\n          } ],\n          \"description\" : \"description\",\n          \"_id\" : \"_id\",\n          \"trackEvents\" : true,\n          \"variation\" : 9\n        }, {\n          \"rollout\" : {\n            \"variations\" : [ {\n              \"weight\" : 5,\n              \"variation\" : 1\n            }, {\n              \"weight\" : 5,\n              \"variation\" : 1\n            } ],\n            \"bucketBy\" : \"bucketBy\"\n          },\n          \"clauses\" : [ {\n            \"op\" : \"in\",\n            \"negate\" : true,\n            \"values\" : [ \"Top Customers\", \"Top Customers\" ],\n            \"_id\" : \"_id\",\n            \"attribute\" : \"groups\"\n          }, {\n            \"op\" : \"in\",\n            \"negate\" : true,\n            \"values\" : [ \"Top Customers\", \"Top Customers\" ],\n            \"_id\" : \"_id\",\n            \"attribute\" : \"groups\"\n          } ],\n          \"description\" : \"description\",\n          \"_id\" : \"_id\",\n          \"trackEvents\" : true,\n          \"variation\" : 9\n        } ],\n        \"targets\" : [ {\n          \"values\" : [ \"\\"1461797806427-7-115540266\\", \\"00142875-a39d-4028-a3b7-987ccd151649\\"\", \"\\"1461797806427-7-115540266\\", \\"00142875-a39d-4028-a3b7-987ccd151649\\"\" ],\n          \"variation\" : 3\n        }, {\n          \"values\" : [ \"\\"1461797806427-7-115540266\\", \\"00142875-a39d-4028-a3b7-987ccd151649\\"\", \"\\"1461797806427-7-115540266\\", \\"00142875-a39d-4028-a3b7-987ccd151649\\"\" ],\n          \"variation\" : 3\n        } ],\n        \"version\" : 65,\n        \"prerequisites\" : [ {\n          \"key\" : \"key\",\n          \"variation\" : 7\n        }, {\n          \"key\" : \"key\",\n          \"variation\" : 7\n        } ],\n        \"archived\" : true,\n        \"trackEventsFallthrough\" : true,\n        \"_environmentName\" : \"_environmentName\",\n        \"_site\" : {\n          \"href\" : \"/features/sort.order\",\n          \"type\" : \"text/html\"\n        },\n        \"true\" : true,\n        \"lastModified\" : 1469326565348,\n        \"sel\" : \"45501b9314dc4641841af774cb038b96\",\n        \"trackEvents\" : false,\n        \"fallthrough\" : {\n          \"rollout\" : {\n            \"variations\" : [ {\n              \"weight\" : 5,\n              \"variation\" : 1\n            }, {\n              \"weight\" : 5,\n              \"variation\" : 1\n            } ],\n            \"bucketBy\" : \"bucketBy\"\n          },\n          \"variation\" : 5\n        },\n        \"offVariation\" : 2\n      }\n    },\n    \"kind\" : \"boolean\",\n    \"description\" : \"This flag controls whether test feature is turned on or not.\",\n    \"creationDate\" : 1443652232590,\n    \"tags\" : [ ],\n    \"archived\" : false,\n    \"goalIds\" : [ \"d7239405bd89c930e885aa76\", \"405bc930e88d7239d895aa76\" ],\n    \"includeInSnippet\" : false,\n    \"maintainerId\" : \"561c579cd8fd5c2704000001\",\n    \"customProperties\" : {\n      \"bugs\" : {\n        \"name\" : \"Issue tracker ids\",\n        \"value\" : [ \"123\", \"456\" ]\n      },\n      \"deprecated\" : {\n        \"name\" : \"Deprecated Date\",\n        \"value\" : [ ]\n      }\n    },\n    \"defaults\" : {\n      \"onVariation\" : 6,\n      \"offVariation\" : 0\n    },\n    \"variations\" : [ {\n      \"value\" : \"a\"\n    }, {\n      \"value\" : \"b\"\n    } ],\n    \"name\" : \"Test Feature\",\n    \"_version\" : 23,\n    \"key\" : \"test-feature\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FeatureFlags>(exampleJson)
            : default(FeatureFlags);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get a scheduled change on a feature flag by id.
        /// </summary>
        /// <param name="projectKey">The project key, used to tie the flags together under one project so they can be managed together.</param>
        /// <param name="featureFlagKey">The feature flag&#39;s key. The key identifies the flag in your code.</param>
        /// <param name="environmentKey">The environment key, used to tie together flag configuration and users under one environment so they can be managed together.</param>
        /// <param name="scheduledChangeId">The id of the scheduled change</param>
        /// <response code="200">A scheduled change for feature flag response.</response>
        /// <response code="401">Invalid access token.</response>
        /// <response code="404">Invalid resource specifier.</response>
        [HttpGet]
        [Route("/api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/scheduled-changes/{scheduledChangeId}")]
        [Authorize(Policy = "Token")]
        [ValidateModelState]
        [SwaggerOperation("GetFlagConfigScheduledChange")]
        [SwaggerResponse(statusCode: 200, type: typeof(FeatureFlagScheduledChange), description: "A scheduled change for feature flag response.")]
        public virtual IActionResult GetFlagConfigScheduledChange([FromRoute (Name = "projectKey")][Required]string projectKey, [FromRoute (Name = "featureFlagKey")][Required]string featureFlagKey, [FromRoute (Name = "environmentKey")][Required]string environmentKey, [FromRoute (Name = "scheduledChangeId")][Required]string scheduledChangeId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(FeatureFlagScheduledChange));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"instructions\" : [ {\n    \"kind\" : \"removeUserTargets\"\n  }, {\n    \"kind\" : \"removeUserTargets\"\n  } ],\n  \"executionDate\" : 6,\n  \"_id\" : \"_id\",\n  \"_version\" : 0\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FeatureFlagScheduledChange>(exampleJson)
            : default(FeatureFlagScheduledChange);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get all scheduled workflows for a feature flag by key.
        /// </summary>
        /// <param name="projectKey">The project key, used to tie the flags together under one project so they can be managed together.</param>
        /// <param name="featureFlagKey">The feature flag&#39;s key. The key identifies the flag in your code.</param>
        /// <param name="environmentKey">The environment key, used to tie together flag configuration and users under one environment so they can be managed together.</param>
        /// <response code="200">A list of scheduled changes for feature flag response.</response>
        /// <response code="401">Invalid access token.</response>
        /// <response code="404">Invalid resource specifier.</response>
        [HttpGet]
        [Route("/api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/scheduled-changes")]
        [Authorize(Policy = "Token")]
        [ValidateModelState]
        [SwaggerOperation("GetFlagConfigScheduledChanges")]
        [SwaggerResponse(statusCode: 200, type: typeof(FeatureFlagScheduledChanges), description: "A list of scheduled changes for feature flag response.")]
        public virtual IActionResult GetFlagConfigScheduledChanges([FromRoute (Name = "projectKey")][Required]string projectKey, [FromRoute (Name = "featureFlagKey")][Required]string featureFlagKey, [FromRoute (Name = "environmentKey")][Required]string environmentKey)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(FeatureFlagScheduledChanges));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"_links\" : {\n    \"next\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    },\n    \"self\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    }\n  },\n  \"items\" : [ {\n    \"instructions\" : [ {\n      \"kind\" : \"removeUserTargets\"\n    }, {\n      \"kind\" : \"removeUserTargets\"\n    } ],\n    \"executionDate\" : 6,\n    \"_id\" : \"_id\",\n    \"_version\" : 0\n  }, {\n    \"instructions\" : [ {\n      \"kind\" : \"removeUserTargets\"\n    }, {\n      \"kind\" : \"removeUserTargets\"\n    } ],\n    \"executionDate\" : 6,\n    \"_id\" : \"_id\",\n    \"_version\" : 0\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FeatureFlagScheduledChanges>(exampleJson)
            : default(FeatureFlagScheduledChanges);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Lists conflicts between the given instructions and any existing scheduled changes for the feature flag. The actual HTTP verb should be REPORT, not POST.
        /// </summary>
        /// <param name="projectKey">The project key, used to tie the flags together under one project so they can be managed together.</param>
        /// <param name="featureFlagKey">The feature flag&#39;s key. The key identifies the flag in your code.</param>
        /// <param name="environmentKey">The environment key, used to tie together flag configuration and users under one environment so they can be managed together.</param>
        /// <param name="flagConfigScheduledChangesConflictsBody">Used to determine if a semantic patch will result in conflicts with scheduled changes on a feature flag.</param>
        /// <response code="200">Scheduled changes conflict response</response>
        /// <response code="401">Invalid access token.</response>
        /// <response code="404">Invalid resource specifier.</response>
        [HttpPost]
        [Route("/api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/scheduled-changes-conflicts")]
        [Authorize(Policy = "Token")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("GetFlagConfigScheduledChangesConflicts")]
        [SwaggerResponse(statusCode: 200, type: typeof(FeatureFlagScheduledChangesConflicts), description: "Scheduled changes conflict response")]
        public virtual IActionResult GetFlagConfigScheduledChangesConflicts([FromRoute (Name = "projectKey")][Required]string projectKey, [FromRoute (Name = "featureFlagKey")][Required]string featureFlagKey, [FromRoute (Name = "environmentKey")][Required]string environmentKey, [FromBody]GetFlagConfigScheduledChangesConflictsRequest flagConfigScheduledChangesConflictsBody)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(FeatureFlagScheduledChangesConflicts));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"instructions\" : [ {\n    \"kind\" : \"removeUserTargets\",\n    \"conflicts\" : [ {\n      \"reason\" : \"reason\",\n      \"_id\" : \"_id\"\n    }, {\n      \"reason\" : \"reason\",\n      \"_id\" : \"_id\"\n    } ]\n  }, {\n    \"kind\" : \"removeUserTargets\",\n    \"conflicts\" : [ {\n      \"reason\" : \"reason\",\n      \"_id\" : \"_id\"\n    }, {\n      \"reason\" : \"reason\",\n      \"_id\" : \"_id\"\n    } ]\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FeatureFlagScheduledChangesConflicts>(exampleJson)
            : default(FeatureFlagScheduledChangesConflicts);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update, add, or delete expiring user targets on feature flag
        /// </summary>
        /// <param name="projectKey">The project key, used to tie the flags together under one project so they can be managed together.</param>
        /// <param name="environmentKey">The environment key, used to tie together flag configuration and users under one environment so they can be managed together.</param>
        /// <param name="featureFlagKey">The feature flag&#39;s key. The key identifies the flag in your code.</param>
        /// <param name="semanticPatchWithComment">Requires a Semantic Patch representation of the desired changes to the resource. &#39;https://apidocs.launchdarkly.com/reference#updates-via-semantic-patches&#39;. The addition of comments is also supported.</param>
        /// <response code="200">User targeting expirations on feature flag response.</response>
        /// <response code="400">Invalid request body.</response>
        /// <response code="401">Invalid access token.</response>
        /// <response code="404">Invalid resource specifier.</response>
        /// <response code="409">Status conflict.</response>
        [HttpPatch]
        [Route("/api/v2/flags/{projectKey}/{featureFlagKey}/expiring-user-targets/{environmentKey}")]
        [Authorize(Policy = "Token")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchExpiringUserTargets")]
        [SwaggerResponse(statusCode: 200, type: typeof(UserTargetingExpirationForFlags), description: "User targeting expirations on feature flag response.")]
        public virtual IActionResult PatchExpiringUserTargets([FromRoute (Name = "projectKey")][Required]string projectKey, [FromRoute (Name = "environmentKey")][Required]string environmentKey, [FromRoute (Name = "featureFlagKey")][Required]string featureFlagKey, [FromBody]List<SemanticPatchOperation> semanticPatchWithComment)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(UserTargetingExpirationForFlags));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409);
            string exampleJson = null;
            exampleJson = "{\n  \"_links\" : {\n    \"next\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    },\n    \"self\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    }\n  },\n  \"items\" : [ {\n    \"_resourceId\" : {\n      \"projectKey\" : \"projectKey\",\n      \"kind\" : \"kind\",\n      \"flagKey\" : \"flagKey\",\n      \"key\" : \"key\",\n      \"environmentKey\" : \"environmentKey\"\n    },\n    \"variationId\" : \"variationId\",\n    \"_links\" : {\n      \"next\" : {\n        \"href\" : \"/api/v2/endpoint\",\n        \"type\" : \"application/json\"\n      },\n      \"self\" : {\n        \"href\" : \"/api/v2/endpoint\",\n        \"type\" : \"application/json\"\n      }\n    },\n    \"_id\" : \"_id\",\n    \"_version\" : 0,\n    \"userKey\" : \"userKey\",\n    \"expirationDate\" : 1735689600000\n  }, {\n    \"_resourceId\" : {\n      \"projectKey\" : \"projectKey\",\n      \"kind\" : \"kind\",\n      \"flagKey\" : \"flagKey\",\n      \"key\" : \"key\",\n      \"environmentKey\" : \"environmentKey\"\n    },\n    \"variationId\" : \"variationId\",\n    \"_links\" : {\n      \"next\" : {\n        \"href\" : \"/api/v2/endpoint\",\n        \"type\" : \"application/json\"\n      },\n      \"self\" : {\n        \"href\" : \"/api/v2/endpoint\",\n        \"type\" : \"application/json\"\n      }\n    },\n    \"_id\" : \"_id\",\n    \"_version\" : 0,\n    \"userKey\" : \"userKey\",\n    \"expirationDate\" : 1735689600000\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<UserTargetingExpirationForFlags>(exampleJson)
            : default(UserTargetingExpirationForFlags);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Perform a partial update to a feature.
        /// </summary>
        /// <param name="projectKey">The project key, used to tie the flags together under one project so they can be managed together.</param>
        /// <param name="featureFlagKey">The feature flag&#39;s key. The key identifies the flag in your code.</param>
        /// <param name="patchComment">Requires a JSON Patch representation of the desired changes to the project, and an optional comment. &#39;http://jsonpatch.com/&#39; Feature flag patches also support JSON Merge Patch format. &#39;https://tools.ietf.org/html/rfc7386&#39; The addition of comments is also supported.</param>
        /// <response code="200">Feature flag response.</response>
        /// <response code="400">Invalid request body.</response>
        /// <response code="401">Invalid access token.</response>
        /// <response code="404">Invalid resource specifier.</response>
        /// <response code="409">Status conflict.</response>
        [HttpPatch]
        [Route("/api/v2/flags/{projectKey}/{featureFlagKey}")]
        [Authorize(Policy = "Token")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchFeatureFlag")]
        [SwaggerResponse(statusCode: 200, type: typeof(FeatureFlag), description: "Feature flag response.")]
        public virtual IActionResult PatchFeatureFlag([FromRoute (Name = "projectKey")][Required]string projectKey, [FromRoute (Name = "featureFlagKey")][Required]string featureFlagKey, [FromBody]PatchFeatureFlagRequest patchComment)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(FeatureFlag));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409);
            string exampleJson = null;
            exampleJson = "{\n  \"archivedDate\" : 1443652232590,\n  \"temporary\" : false,\n  \"_maintainer\" : {\n    \"firstName\" : \"Alan\",\n    \"lastName\" : \"Turing\",\n    \"_verified\" : true,\n    \"_links\" : {\n      \"next\" : {\n        \"href\" : \"/api/v2/endpoint\",\n        \"type\" : \"application/json\"\n      },\n      \"self\" : {\n        \"href\" : \"/api/v2/endpoint\",\n        \"type\" : \"application/json\"\n      }\n    },\n    \"_pendingInvite\" : true,\n    \"_lastSeen\" : 1469326565348,\n    \"isBeta\" : true,\n    \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n    \"_lastSeenMetadata\" : {\n      \"tokenId\" : \"5fd2a1ee05600316d5cb3e96\"\n    },\n    \"email\" : \"user@launchdarkly.com\",\n    \"customRoles\" : [ \"5a580a01b4ff89217bdf9dc1\", \"5a580a01b4ff89217bdf9dc1\" ]\n  },\n  \"clientSideAvailability\" : {\n    \"usingEnvironmentId\" : true,\n    \"usingMobileKey\" : true\n  },\n  \"_links\" : {\n    \"next\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    },\n    \"self\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    }\n  },\n  \"environments\" : {\n    \"key\" : {\n      \"salt\" : \"YWx0ZXJuYXRlLnBhZ2U=\",\n      \"rules\" : [ {\n        \"rollout\" : {\n          \"variations\" : [ {\n            \"weight\" : 5,\n            \"variation\" : 1\n          }, {\n            \"weight\" : 5,\n            \"variation\" : 1\n          } ],\n          \"bucketBy\" : \"bucketBy\"\n        },\n        \"clauses\" : [ {\n          \"op\" : \"in\",\n          \"negate\" : true,\n          \"values\" : [ \"Top Customers\", \"Top Customers\" ],\n          \"_id\" : \"_id\",\n          \"attribute\" : \"groups\"\n        }, {\n          \"op\" : \"in\",\n          \"negate\" : true,\n          \"values\" : [ \"Top Customers\", \"Top Customers\" ],\n          \"_id\" : \"_id\",\n          \"attribute\" : \"groups\"\n        } ],\n        \"description\" : \"description\",\n        \"_id\" : \"_id\",\n        \"trackEvents\" : true,\n        \"variation\" : 9\n      }, {\n        \"rollout\" : {\n          \"variations\" : [ {\n            \"weight\" : 5,\n            \"variation\" : 1\n          }, {\n            \"weight\" : 5,\n            \"variation\" : 1\n          } ],\n          \"bucketBy\" : \"bucketBy\"\n        },\n        \"clauses\" : [ {\n          \"op\" : \"in\",\n          \"negate\" : true,\n          \"values\" : [ \"Top Customers\", \"Top Customers\" ],\n          \"_id\" : \"_id\",\n          \"attribute\" : \"groups\"\n        }, {\n          \"op\" : \"in\",\n          \"negate\" : true,\n          \"values\" : [ \"Top Customers\", \"Top Customers\" ],\n          \"_id\" : \"_id\",\n          \"attribute\" : \"groups\"\n        } ],\n        \"description\" : \"description\",\n        \"_id\" : \"_id\",\n        \"trackEvents\" : true,\n        \"variation\" : 9\n      } ],\n      \"targets\" : [ {\n        \"values\" : [ \"\\"1461797806427-7-115540266\\", \\"00142875-a39d-4028-a3b7-987ccd151649\\"\", \"\\"1461797806427-7-115540266\\", \\"00142875-a39d-4028-a3b7-987ccd151649\\"\" ],\n        \"variation\" : 3\n      }, {\n        \"values\" : [ \"\\"1461797806427-7-115540266\\", \\"00142875-a39d-4028-a3b7-987ccd151649\\"\", \"\\"1461797806427-7-115540266\\", \\"00142875-a39d-4028-a3b7-987ccd151649\\"\" ],\n        \"variation\" : 3\n      } ],\n      \"version\" : 65,\n      \"prerequisites\" : [ {\n        \"key\" : \"key\",\n        \"variation\" : 7\n      }, {\n        \"key\" : \"key\",\n        \"variation\" : 7\n      } ],\n      \"archived\" : true,\n      \"trackEventsFallthrough\" : true,\n      \"_environmentName\" : \"_environmentName\",\n      \"_site\" : {\n        \"href\" : \"/features/sort.order\",\n        \"type\" : \"text/html\"\n      },\n      \"true\" : true,\n      \"lastModified\" : 1469326565348,\n      \"sel\" : \"45501b9314dc4641841af774cb038b96\",\n      \"trackEvents\" : false,\n      \"fallthrough\" : {\n        \"rollout\" : {\n          \"variations\" : [ {\n            \"weight\" : 5,\n            \"variation\" : 1\n          }, {\n            \"weight\" : 5,\n            \"variation\" : 1\n          } ],\n          \"bucketBy\" : \"bucketBy\"\n        },\n        \"variation\" : 5\n      },\n      \"offVariation\" : 2\n    }\n  },\n  \"kind\" : \"boolean\",\n  \"description\" : \"This flag controls whether test feature is turned on or not.\",\n  \"creationDate\" : 1443652232590,\n  \"tags\" : [ ],\n  \"archived\" : false,\n  \"goalIds\" : [ \"d7239405bd89c930e885aa76\", \"405bc930e88d7239d895aa76\" ],\n  \"includeInSnippet\" : false,\n  \"maintainerId\" : \"561c579cd8fd5c2704000001\",\n  \"customProperties\" : {\n    \"bugs\" : {\n      \"name\" : \"Issue tracker ids\",\n      \"value\" : [ \"123\", \"456\" ]\n    },\n    \"deprecated\" : {\n      \"name\" : \"Deprecated Date\",\n      \"value\" : [ ]\n    }\n  },\n  \"defaults\" : {\n    \"onVariation\" : 6,\n    \"offVariation\" : 0\n  },\n  \"variations\" : [ {\n    \"value\" : \"a\"\n  }, {\n    \"value\" : \"b\"\n  } ],\n  \"name\" : \"Test Feature\",\n  \"_version\" : 23,\n  \"key\" : \"test-feature\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FeatureFlag>(exampleJson)
            : default(FeatureFlag);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Updates an existing scheduled-change on a feature flag in an environment.
        /// </summary>
        /// <param name="projectKey">The project key, used to tie the flags together under one project so they can be managed together.</param>
        /// <param name="featureFlagKey">The feature flag&#39;s key. The key identifies the flag in your code.</param>
        /// <param name="environmentKey">The environment key, used to tie together flag configuration and users under one environment so they can be managed together.</param>
        /// <param name="scheduledChangeId">The id of the scheduled change</param>
        /// <param name="flagConfigScheduledChangesPatchBody">Update scheduled changes on a feature flag.</param>
        /// <response code="201">A Scheduled change for feature flag response.</response>
        /// <response code="400">Invalid request body.</response>
        /// <response code="401">Invalid access token.</response>
        /// <response code="409">Status conflict.</response>
        [HttpPatch]
        [Route("/api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/scheduled-changes/{scheduledChangeId}")]
        [Authorize(Policy = "Token")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchFlagConfigScheduledChange")]
        [SwaggerResponse(statusCode: 201, type: typeof(FeatureFlagScheduledChange), description: "A Scheduled change for feature flag response.")]
        public virtual IActionResult PatchFlagConfigScheduledChange([FromRoute (Name = "projectKey")][Required]string projectKey, [FromRoute (Name = "featureFlagKey")][Required]string featureFlagKey, [FromRoute (Name = "environmentKey")][Required]string environmentKey, [FromRoute (Name = "scheduledChangeId")][Required]string scheduledChangeId, [FromBody]PatchFlagConfigScheduledChangeRequest flagConfigScheduledChangesPatchBody)
        {

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(FeatureFlagScheduledChange));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409);
            string exampleJson = null;
            exampleJson = "{\n  \"instructions\" : [ {\n    \"kind\" : \"removeUserTargets\"\n  }, {\n    \"kind\" : \"removeUserTargets\"\n  } ],\n  \"executionDate\" : 6,\n  \"_id\" : \"_id\",\n  \"_version\" : 0\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FeatureFlagScheduledChange>(exampleJson)
            : default(FeatureFlagScheduledChange);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Apply approval request for a feature flag config
        /// </summary>
        /// <param name="projectKey">The project key, used to tie the flags together under one project so they can be managed together.</param>
        /// <param name="featureFlagKey">The feature flag&#39;s key. The key identifies the flag in your code.</param>
        /// <param name="environmentKey">The environment key, used to tie together flag configuration and users under one environment so they can be managed together.</param>
        /// <param name="approvalRequestId">The approval request ID</param>
        /// <param name="approvalRequestApplyConfigBody">Apply an approval request</param>
        /// <response code="200">Approval request applied response</response>
        /// <response code="401">Invalid access token.</response>
        /// <response code="404">Invalid resource specifier.</response>
        [HttpPost]
        [Route("/api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/approval-requests/{approvalRequestId}/apply")]
        [Authorize(Policy = "Token")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostApplyApprovalRequest")]
        [SwaggerResponse(statusCode: 200, type: typeof(ApprovalRequests), description: "Approval request applied response")]
        public virtual IActionResult PostApplyApprovalRequest([FromRoute (Name = "projectKey")][Required]string projectKey, [FromRoute (Name = "featureFlagKey")][Required]string featureFlagKey, [FromRoute (Name = "environmentKey")][Required]string environmentKey, [FromRoute (Name = "approvalRequestId")][Required]string approvalRequestId, [FromBody]PostApplyApprovalRequestRequest approvalRequestApplyConfigBody)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ApprovalRequests));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"_links\" : {\n    \"next\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    },\n    \"self\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    }\n  },\n  \"items\" : [ {\n    \"allReviews\" : [ {\n      \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n      \"creationDate\" : 6,\n      \"memberId\" : \"5a580a01b4ff89217bdf9dc1\"\n    }, {\n      \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n      \"creationDate\" : 6,\n      \"memberId\" : \"5a580a01b4ff89217bdf9dc1\"\n    } ],\n    \"instructions\" : [ {\n      \"kind\" : \"removeUserTargets\"\n    }, {\n      \"kind\" : \"removeUserTargets\"\n    } ],\n    \"notifyMemberIds\" : [ \"memberId\", \"memberId2\" ],\n    \"executionDate\" : 5,\n    \"appliedDate\" : 1,\n    \"creationDate\" : 5,\n    \"requestorId\" : \"requestorId\",\n    \"appliedByMemberID\" : \"appliedByMemberID\",\n    \"operatingOnId\" : \"operatingOnId\",\n    \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n    \"_version\" : 0,\n    \"status\" : \"pending\"\n  }, {\n    \"allReviews\" : [ {\n      \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n      \"creationDate\" : 6,\n      \"memberId\" : \"5a580a01b4ff89217bdf9dc1\"\n    }, {\n      \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n      \"creationDate\" : 6,\n      \"memberId\" : \"5a580a01b4ff89217bdf9dc1\"\n    } ],\n    \"instructions\" : [ {\n      \"kind\" : \"removeUserTargets\"\n    }, {\n      \"kind\" : \"removeUserTargets\"\n    } ],\n    \"notifyMemberIds\" : [ \"memberId\", \"memberId2\" ],\n    \"executionDate\" : 5,\n    \"appliedDate\" : 1,\n    \"creationDate\" : 5,\n    \"requestorId\" : \"requestorId\",\n    \"appliedByMemberID\" : \"appliedByMemberID\",\n    \"operatingOnId\" : \"operatingOnId\",\n    \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n    \"_version\" : 0,\n    \"status\" : \"pending\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ApprovalRequests>(exampleJson)
            : default(ApprovalRequests);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create an approval request for a feature flag config
        /// </summary>
        /// <param name="projectKey">The project key, used to tie the flags together under one project so they can be managed together.</param>
        /// <param name="featureFlagKey">The feature flag&#39;s key. The key identifies the flag in your code.</param>
        /// <param name="environmentKey">The environment key, used to tie together flag configuration and users under one environment so they can be managed together.</param>
        /// <param name="approvalRequestId">The approval request ID</param>
        /// <param name="approvalRequestConfigBody">Create a new approval request</param>
        /// <response code="200">Approval request response</response>
        /// <response code="401">Invalid access token.</response>
        /// <response code="404">Invalid resource specifier.</response>
        [HttpPost]
        [Route("/api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/approval-requests/{approvalRequestId}")]
        [Authorize(Policy = "Token")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostApprovalRequest")]
        [SwaggerResponse(statusCode: 200, type: typeof(ApprovalRequest), description: "Approval request response")]
        public virtual IActionResult PostApprovalRequest([FromRoute (Name = "projectKey")][Required]string projectKey, [FromRoute (Name = "featureFlagKey")][Required]string featureFlagKey, [FromRoute (Name = "environmentKey")][Required]string environmentKey, [FromRoute (Name = "approvalRequestId")][Required]string approvalRequestId, [FromBody]PostApprovalRequestRequest approvalRequestConfigBody)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ApprovalRequest));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"allReviews\" : [ {\n    \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n    \"creationDate\" : 6,\n    \"memberId\" : \"5a580a01b4ff89217bdf9dc1\"\n  }, {\n    \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n    \"creationDate\" : 6,\n    \"memberId\" : \"5a580a01b4ff89217bdf9dc1\"\n  } ],\n  \"instructions\" : [ {\n    \"kind\" : \"removeUserTargets\"\n  }, {\n    \"kind\" : \"removeUserTargets\"\n  } ],\n  \"notifyMemberIds\" : [ \"memberId\", \"memberId2\" ],\n  \"executionDate\" : 5,\n  \"appliedDate\" : 1,\n  \"creationDate\" : 5,\n  \"requestorId\" : \"requestorId\",\n  \"appliedByMemberID\" : \"appliedByMemberID\",\n  \"operatingOnId\" : \"operatingOnId\",\n  \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n  \"_version\" : 0,\n  \"status\" : \"pending\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ApprovalRequest>(exampleJson)
            : default(ApprovalRequest);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Creates a new feature flag.
        /// </summary>
        /// <param name="projectKey">The project key, used to tie the flags together under one project so they can be managed together.</param>
        /// <param name="featureFlagBody">Create a new feature flag.</param>
        /// <param name="clone">The key of the feature flag to be cloned. The key identifies the flag in your code.  For example, setting clone&#x3D;flagKey will copy the full targeting configuration for all environments (including on/off state) from the original flag to the new flag.</param>
        /// <response code="201">Flag response.</response>
        /// <response code="400">Invalid request body.</response>
        /// <response code="401">Invalid access token.</response>
        /// <response code="409">Status conflict.</response>
        [HttpPost]
        [Route("/api/v2/flags/{projectKey}")]
        [Authorize(Policy = "Token")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostFeatureFlag")]
        [SwaggerResponse(statusCode: 201, type: typeof(FeatureFlag), description: "Flag response.")]
        public virtual IActionResult PostFeatureFlag([FromRoute (Name = "projectKey")][Required]string projectKey, [FromBody]PostFeatureFlagRequest featureFlagBody, [FromQuery (Name = "clone")]string clone)
        {

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(FeatureFlag));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409);
            string exampleJson = null;
            exampleJson = "{\n  \"archivedDate\" : 1443652232590,\n  \"temporary\" : false,\n  \"_maintainer\" : {\n    \"firstName\" : \"Alan\",\n    \"lastName\" : \"Turing\",\n    \"_verified\" : true,\n    \"_links\" : {\n      \"next\" : {\n        \"href\" : \"/api/v2/endpoint\",\n        \"type\" : \"application/json\"\n      },\n      \"self\" : {\n        \"href\" : \"/api/v2/endpoint\",\n        \"type\" : \"application/json\"\n      }\n    },\n    \"_pendingInvite\" : true,\n    \"_lastSeen\" : 1469326565348,\n    \"isBeta\" : true,\n    \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n    \"_lastSeenMetadata\" : {\n      \"tokenId\" : \"5fd2a1ee05600316d5cb3e96\"\n    },\n    \"email\" : \"user@launchdarkly.com\",\n    \"customRoles\" : [ \"5a580a01b4ff89217bdf9dc1\", \"5a580a01b4ff89217bdf9dc1\" ]\n  },\n  \"clientSideAvailability\" : {\n    \"usingEnvironmentId\" : true,\n    \"usingMobileKey\" : true\n  },\n  \"_links\" : {\n    \"next\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    },\n    \"self\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    }\n  },\n  \"environments\" : {\n    \"key\" : {\n      \"salt\" : \"YWx0ZXJuYXRlLnBhZ2U=\",\n      \"rules\" : [ {\n        \"rollout\" : {\n          \"variations\" : [ {\n            \"weight\" : 5,\n            \"variation\" : 1\n          }, {\n            \"weight\" : 5,\n            \"variation\" : 1\n          } ],\n          \"bucketBy\" : \"bucketBy\"\n        },\n        \"clauses\" : [ {\n          \"op\" : \"in\",\n          \"negate\" : true,\n          \"values\" : [ \"Top Customers\", \"Top Customers\" ],\n          \"_id\" : \"_id\",\n          \"attribute\" : \"groups\"\n        }, {\n          \"op\" : \"in\",\n          \"negate\" : true,\n          \"values\" : [ \"Top Customers\", \"Top Customers\" ],\n          \"_id\" : \"_id\",\n          \"attribute\" : \"groups\"\n        } ],\n        \"description\" : \"description\",\n        \"_id\" : \"_id\",\n        \"trackEvents\" : true,\n        \"variation\" : 9\n      }, {\n        \"rollout\" : {\n          \"variations\" : [ {\n            \"weight\" : 5,\n            \"variation\" : 1\n          }, {\n            \"weight\" : 5,\n            \"variation\" : 1\n          } ],\n          \"bucketBy\" : \"bucketBy\"\n        },\n        \"clauses\" : [ {\n          \"op\" : \"in\",\n          \"negate\" : true,\n          \"values\" : [ \"Top Customers\", \"Top Customers\" ],\n          \"_id\" : \"_id\",\n          \"attribute\" : \"groups\"\n        }, {\n          \"op\" : \"in\",\n          \"negate\" : true,\n          \"values\" : [ \"Top Customers\", \"Top Customers\" ],\n          \"_id\" : \"_id\",\n          \"attribute\" : \"groups\"\n        } ],\n        \"description\" : \"description\",\n        \"_id\" : \"_id\",\n        \"trackEvents\" : true,\n        \"variation\" : 9\n      } ],\n      \"targets\" : [ {\n        \"values\" : [ \"\\"1461797806427-7-115540266\\", \\"00142875-a39d-4028-a3b7-987ccd151649\\"\", \"\\"1461797806427-7-115540266\\", \\"00142875-a39d-4028-a3b7-987ccd151649\\"\" ],\n        \"variation\" : 3\n      }, {\n        \"values\" : [ \"\\"1461797806427-7-115540266\\", \\"00142875-a39d-4028-a3b7-987ccd151649\\"\", \"\\"1461797806427-7-115540266\\", \\"00142875-a39d-4028-a3b7-987ccd151649\\"\" ],\n        \"variation\" : 3\n      } ],\n      \"version\" : 65,\n      \"prerequisites\" : [ {\n        \"key\" : \"key\",\n        \"variation\" : 7\n      }, {\n        \"key\" : \"key\",\n        \"variation\" : 7\n      } ],\n      \"archived\" : true,\n      \"trackEventsFallthrough\" : true,\n      \"_environmentName\" : \"_environmentName\",\n      \"_site\" : {\n        \"href\" : \"/features/sort.order\",\n        \"type\" : \"text/html\"\n      },\n      \"true\" : true,\n      \"lastModified\" : 1469326565348,\n      \"sel\" : \"45501b9314dc4641841af774cb038b96\",\n      \"trackEvents\" : false,\n      \"fallthrough\" : {\n        \"rollout\" : {\n          \"variations\" : [ {\n            \"weight\" : 5,\n            \"variation\" : 1\n          }, {\n            \"weight\" : 5,\n            \"variation\" : 1\n          } ],\n          \"bucketBy\" : \"bucketBy\"\n        },\n        \"variation\" : 5\n      },\n      \"offVariation\" : 2\n    }\n  },\n  \"kind\" : \"boolean\",\n  \"description\" : \"This flag controls whether test feature is turned on or not.\",\n  \"creationDate\" : 1443652232590,\n  \"tags\" : [ ],\n  \"archived\" : false,\n  \"goalIds\" : [ \"d7239405bd89c930e885aa76\", \"405bc930e88d7239d895aa76\" ],\n  \"includeInSnippet\" : false,\n  \"maintainerId\" : \"561c579cd8fd5c2704000001\",\n  \"customProperties\" : {\n    \"bugs\" : {\n      \"name\" : \"Issue tracker ids\",\n      \"value\" : [ \"123\", \"456\" ]\n    },\n    \"deprecated\" : {\n      \"name\" : \"Deprecated Date\",\n      \"value\" : [ ]\n    }\n  },\n  \"defaults\" : {\n    \"onVariation\" : 6,\n    \"offVariation\" : 0\n  },\n  \"variations\" : [ {\n    \"value\" : \"a\"\n  }, {\n    \"value\" : \"b\"\n  } ],\n  \"name\" : \"Test Feature\",\n  \"_version\" : 23,\n  \"key\" : \"test-feature\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FeatureFlag>(exampleJson)
            : default(FeatureFlag);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Creates a new scheduled change for a feature flag.
        /// </summary>
        /// <param name="projectKey">The project key, used to tie the flags together under one project so they can be managed together.</param>
        /// <param name="featureFlagKey">The feature flag&#39;s key. The key identifies the flag in your code.</param>
        /// <param name="environmentKey">The environment key, used to tie together flag configuration and users under one environment so they can be managed together.</param>
        /// <param name="flagConfigScheduledChangesPostBody">Create scheduled changes on a feature flag.</param>
        /// <response code="201">A scheduled change for feature flag response.</response>
        /// <response code="400">Invalid request body.</response>
        /// <response code="401">Invalid access token.</response>
        /// <response code="409">Status conflict.</response>
        [HttpPost]
        [Route("/api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/scheduled-changes")]
        [Authorize(Policy = "Token")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostFlagConfigScheduledChanges")]
        [SwaggerResponse(statusCode: 201, type: typeof(FeatureFlagScheduledChange), description: "A scheduled change for feature flag response.")]
        public virtual IActionResult PostFlagConfigScheduledChanges([FromRoute (Name = "projectKey")][Required]string projectKey, [FromRoute (Name = "featureFlagKey")][Required]string featureFlagKey, [FromRoute (Name = "environmentKey")][Required]string environmentKey, [FromBody]PostFlagConfigScheduledChangesRequest flagConfigScheduledChangesPostBody)
        {

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(FeatureFlagScheduledChange));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409);
            string exampleJson = null;
            exampleJson = "{\n  \"instructions\" : [ {\n    \"kind\" : \"removeUserTargets\"\n  }, {\n    \"kind\" : \"removeUserTargets\"\n  } ],\n  \"executionDate\" : 6,\n  \"_id\" : \"_id\",\n  \"_version\" : 0\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FeatureFlagScheduledChange>(exampleJson)
            : default(FeatureFlagScheduledChange);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Review approval request for a feature flag config
        /// </summary>
        /// <param name="projectKey">The project key, used to tie the flags together under one project so they can be managed together.</param>
        /// <param name="featureFlagKey">The feature flag&#39;s key. The key identifies the flag in your code.</param>
        /// <param name="environmentKey">The environment key, used to tie together flag configuration and users under one environment so they can be managed together.</param>
        /// <param name="approvalRequestId">The approval request ID</param>
        /// <param name="approvalRequestReviewConfigBody">Review an approval request</param>
        /// <response code="200">Approval request reviewed response</response>
        /// <response code="401">Invalid access token.</response>
        /// <response code="404">Invalid resource specifier.</response>
        [HttpPost]
        [Route("/api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/approval-requests/{approvalRequestId}/review")]
        [Authorize(Policy = "Token")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostReviewApprovalRequest")]
        [SwaggerResponse(statusCode: 200, type: typeof(ApprovalRequests), description: "Approval request reviewed response")]
        public virtual IActionResult PostReviewApprovalRequest([FromRoute (Name = "projectKey")][Required]string projectKey, [FromRoute (Name = "featureFlagKey")][Required]string featureFlagKey, [FromRoute (Name = "environmentKey")][Required]string environmentKey, [FromRoute (Name = "approvalRequestId")][Required]string approvalRequestId, [FromBody]PostReviewApprovalRequestRequest approvalRequestReviewConfigBody)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ApprovalRequests));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"_links\" : {\n    \"next\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    },\n    \"self\" : {\n      \"href\" : \"/api/v2/endpoint\",\n      \"type\" : \"application/json\"\n    }\n  },\n  \"items\" : [ {\n    \"allReviews\" : [ {\n      \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n      \"creationDate\" : 6,\n      \"memberId\" : \"5a580a01b4ff89217bdf9dc1\"\n    }, {\n      \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n      \"creationDate\" : 6,\n      \"memberId\" : \"5a580a01b4ff89217bdf9dc1\"\n    } ],\n    \"instructions\" : [ {\n      \"kind\" : \"removeUserTargets\"\n    }, {\n      \"kind\" : \"removeUserTargets\"\n    } ],\n    \"notifyMemberIds\" : [ \"memberId\", \"memberId2\" ],\n    \"executionDate\" : 5,\n    \"appliedDate\" : 1,\n    \"creationDate\" : 5,\n    \"requestorId\" : \"requestorId\",\n    \"appliedByMemberID\" : \"appliedByMemberID\",\n    \"operatingOnId\" : \"operatingOnId\",\n    \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n    \"_version\" : 0,\n    \"status\" : \"pending\"\n  }, {\n    \"allReviews\" : [ {\n      \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n      \"creationDate\" : 6,\n      \"memberId\" : \"5a580a01b4ff89217bdf9dc1\"\n    }, {\n      \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n      \"creationDate\" : 6,\n      \"memberId\" : \"5a580a01b4ff89217bdf9dc1\"\n    } ],\n    \"instructions\" : [ {\n      \"kind\" : \"removeUserTargets\"\n    }, {\n      \"kind\" : \"removeUserTargets\"\n    } ],\n    \"notifyMemberIds\" : [ \"memberId\", \"memberId2\" ],\n    \"executionDate\" : 5,\n    \"appliedDate\" : 1,\n    \"creationDate\" : 5,\n    \"requestorId\" : \"requestorId\",\n    \"appliedByMemberID\" : \"appliedByMemberID\",\n    \"operatingOnId\" : \"operatingOnId\",\n    \"_id\" : \"5a580a01b4ff89217bdf9dc1\",\n    \"_version\" : 0,\n    \"status\" : \"pending\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ApprovalRequests>(exampleJson)
            : default(ApprovalRequests);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
