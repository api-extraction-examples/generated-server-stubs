/*
 * Top Stories
 *
 * The Top Stories API provides lists of articles and associated images by section.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class StoriesApiController : ControllerBase
    { 
        /// <summary>
        /// Top Stories
        /// </summary>
        /// <remarks>The Top Stories API returns a list of articles and associated images currently on the specified section.  Support JSON and JSONP. </remarks>
        /// <param name="section">The section the story appears in.</param>
        /// <param name="format">if this is JSONP or JSON</param>
        /// <param name="callback">The name of the function the API call results will be passed to. Required when using JSONP. This parameter has only one valid value per section. The format is {section_name}TopStoriesCallback. </param>
        /// <response code="200">An array of articles</response>
        [HttpGet]
        [Route("/svc/topstories/v2/{section}.{format}")]
        [Authorize(Policy = "apikey")]
        [ValidateModelState]
        [SwaggerOperation("SectionFormatGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(SectionFormatGet200Response), description: "An array of articles")]
        public virtual IActionResult SectionFormatGet([FromRoute (Name = "section")][Required]string section, [FromRoute (Name = "format")][Required]string format, [FromQuery (Name = "callback")]string callback)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SectionFormatGet200Response));
            string exampleJson = null;
            exampleJson = "{\n  \"results\" : [ {\n    \"per_facet\" : [ \"per_facet\", \"per_facet\" ],\n    \"subsection\" : \"subsection\",\n    \"item_type\" : \"item_type\",\n    \"org_facet\" : [ \"org_facet\", \"org_facet\" ],\n    \"section\" : \"section\",\n    \"abstract\" : \"abstract\",\n    \"related_urls\" : [ {\n      \"suggested_link_text\" : \"suggested_link_text\",\n      \"url\" : \"url\"\n    }, {\n      \"suggested_link_text\" : \"suggested_link_text\",\n      \"url\" : \"url\"\n    } ],\n    \"des_facet\" : [ \"des_facet\", \"des_facet\" ],\n    \"title\" : \"title\",\n    \"url\" : \"url\",\n    \"short_url\" : \"short_url\",\n    \"material_type_facet\" : \"material_type_facet\",\n    \"multimedia\" : [ {\n      \"copyright\" : \"copyright\",\n      \"subtype\" : \"subtype\",\n      \"format\" : \"format\",\n      \"width\" : 6,\n      \"caption\" : \"caption\",\n      \"type\" : \"type\",\n      \"url\" : \"url\",\n      \"height\" : 0\n    }, {\n      \"copyright\" : \"copyright\",\n      \"subtype\" : \"subtype\",\n      \"format\" : \"format\",\n      \"width\" : 6,\n      \"caption\" : \"caption\",\n      \"type\" : \"type\",\n      \"url\" : \"url\",\n      \"height\" : 0\n    } ],\n    \"thumbnail_standard\" : \"thumbnail_standard\",\n    \"geo_facet\" : [ \"geo_facet\", \"geo_facet\" ],\n    \"created_date\" : \"created_date\",\n    \"updated_date\" : \"updated_date\",\n    \"byline\" : \"byline\",\n    \"published_date\" : \"published_date\",\n    \"kicker\" : \"kicker\"\n  }, {\n    \"per_facet\" : [ \"per_facet\", \"per_facet\" ],\n    \"subsection\" : \"subsection\",\n    \"item_type\" : \"item_type\",\n    \"org_facet\" : [ \"org_facet\", \"org_facet\" ],\n    \"section\" : \"section\",\n    \"abstract\" : \"abstract\",\n    \"related_urls\" : [ {\n      \"suggested_link_text\" : \"suggested_link_text\",\n      \"url\" : \"url\"\n    }, {\n      \"suggested_link_text\" : \"suggested_link_text\",\n      \"url\" : \"url\"\n    } ],\n    \"des_facet\" : [ \"des_facet\", \"des_facet\" ],\n    \"title\" : \"title\",\n    \"url\" : \"url\",\n    \"short_url\" : \"short_url\",\n    \"material_type_facet\" : \"material_type_facet\",\n    \"multimedia\" : [ {\n      \"copyright\" : \"copyright\",\n      \"subtype\" : \"subtype\",\n      \"format\" : \"format\",\n      \"width\" : 6,\n      \"caption\" : \"caption\",\n      \"type\" : \"type\",\n      \"url\" : \"url\",\n      \"height\" : 0\n    }, {\n      \"copyright\" : \"copyright\",\n      \"subtype\" : \"subtype\",\n      \"format\" : \"format\",\n      \"width\" : 6,\n      \"caption\" : \"caption\",\n      \"type\" : \"type\",\n      \"url\" : \"url\",\n      \"height\" : 0\n    } ],\n    \"thumbnail_standard\" : \"thumbnail_standard\",\n    \"geo_facet\" : [ \"geo_facet\", \"geo_facet\" ],\n    \"created_date\" : \"created_date\",\n    \"updated_date\" : \"updated_date\",\n    \"byline\" : \"byline\",\n    \"published_date\" : \"published_date\",\n    \"kicker\" : \"kicker\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<SectionFormatGet200Response>(exampleJson)
            : default(SectionFormatGet200Response);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
