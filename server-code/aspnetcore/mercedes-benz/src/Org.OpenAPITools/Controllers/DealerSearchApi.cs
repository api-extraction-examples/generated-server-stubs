/*
 * Dealer
 *
 * The Dealer API provides Dealer search functions.
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class DealerSearchApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>This request returns dealers for given parameters</remarks>
        /// <param name="dealerId">The dealer id is dealer’s business key, also known as GS Id. e.g. GS0000857</param>
        /// <param name="fields">Specifies which fields should be included in the result. If this filter is not used, per default all fields are returned. e.g. fields&#x3D;dealerId,address(street,city)</param>
        /// <response code="200">OK</response>
        /// <response code="400">Invalid format for parameter dealerId was specified</response>
        /// <response code="401">Unauthorized:   * Failed to resolve API Key query parameter   * Invalid API Key</response>
        /// <response code="404">Dealer not found</response>
        /// <response code="429">Quota limit is exceeded</response>
        /// <response code="500">Internal server error</response>
        [HttpGet]
        [Route("/dealer_tryout/v1/dealers/{dealerId}")]
        [ValidateModelState]
        [SwaggerOperation("DealerGET")]
        [SwaggerResponse(statusCode: 200, type: typeof(Dealer), description: "OK")]
        public virtual IActionResult DealerGET([FromRoute (Name = "dealerId")][Required]string dealerId, [FromQuery (Name = "fields")]string fields)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Dealer));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            //TODO: Uncomment the next line to return response 429 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(429);
            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500);
            string exampleJson = null;
            exampleJson = "{\n  \"legalName\" : \"legalName\",\n  \"brandCodes\" : [ {\n    \"brand\" : {\n      \"code\" : \"code\",\n      \"name\" : \"name\"\n    }\n  }, {\n    \"brand\" : {\n      \"code\" : \"code\",\n      \"name\" : \"name\"\n    }\n  } ],\n  \"address\" : {\n    \"zipCode\" : \"zipCode\",\n    \"addressAddition\" : \"addressAddition\",\n    \"city\" : \"city\",\n    \"countryIsoCode\" : \"countryIsoCode\",\n    \"street\" : \"street\",\n    \"district\" : \"district\"\n  },\n  \"distance\" : {\n    \"unit\" : \"M\",\n    \"value\" : 0.8008281904610115\n  },\n  \"functions\" : [ {\n    \"activity\" : {\n      \"code\" : \"code\",\n      \"name\" : \"name\"\n    },\n    \"productGroup\" : {\n      \"code\" : \"code\",\n      \"name\" : \"name\"\n    },\n    \"brand\" : {\n      \"code\" : \"code\",\n      \"name\" : \"name\"\n    }\n  }, {\n    \"activity\" : {\n      \"code\" : \"code\",\n      \"name\" : \"name\"\n    },\n    \"productGroup\" : {\n      \"code\" : \"code\",\n      \"name\" : \"name\"\n    },\n    \"brand\" : {\n      \"code\" : \"code\",\n      \"name\" : \"name\"\n    }\n  } ],\n  \"_links\" : {\n    \"self\" : {\n      \"href\" : \"href\"\n    }\n  },\n  \"dealerId\" : \"dealerId\",\n  \"nameAddition\" : \"nameAddition\",\n  \"openingHours\" : [ {\n    \"weekdays\" : {\n      \"WEDNESDAY\" : {\n        \"periods\" : [ {\n          \"from\" : \"from\",\n          \"until\" : \"until\"\n        }, {\n          \"from\" : \"from\",\n          \"until\" : \"until\"\n        } ],\n        \"status\" : \"OPEN\"\n      },\n      \"MONDAY\" : {\n        \"periods\" : [ {\n          \"from\" : \"from\",\n          \"until\" : \"until\"\n        }, {\n          \"from\" : \"from\",\n          \"until\" : \"until\"\n        } ],\n        \"status\" : \"OPEN\"\n      },\n      \"THURSDAY\" : {\n        \"periods\" : [ {\n          \"from\" : \"from\",\n          \"until\" : \"until\"\n        }, {\n          \"from\" : \"from\",\n          \"until\" : \"until\"\n        } ],\n        \"status\" : \"OPEN\"\n      },\n      \"SUNDAY\" : {\n        \"periods\" : [ {\n          \"from\" : \"from\",\n          \"until\" : \"until\"\n        }, {\n          \"from\" : \"from\",\n          \"until\" : \"until\"\n        } ],\n        \"status\" : \"OPEN\"\n      },\n      \"FRIDAY\" : {\n        \"periods\" : [ {\n          \"from\" : \"from\",\n          \"until\" : \"until\"\n        }, {\n          \"from\" : \"from\",\n          \"until\" : \"until\"\n        } ],\n        \"status\" : \"OPEN\"\n      },\n      \"TUESDAY\" : {\n        \"periods\" : [ {\n          \"from\" : \"from\",\n          \"until\" : \"until\"\n        }, {\n          \"from\" : \"from\",\n          \"until\" : \"until\"\n        } ],\n        \"status\" : \"OPEN\"\n      },\n      \"SATURDAY\" : {\n        \"periods\" : [ {\n          \"from\" : \"from\",\n          \"until\" : \"until\"\n        }, {\n          \"from\" : \"from\",\n          \"until\" : \"until\"\n        } ],\n        \"status\" : \"OPEN\"\n      }\n    },\n    \"function\" : {\n      \"activity\" : {\n        \"code\" : \"code\",\n        \"name\" : \"name\"\n      },\n      \"productGroup\" : {\n        \"code\" : \"code\",\n        \"name\" : \"name\"\n      },\n      \"brand\" : {\n        \"code\" : \"code\",\n        \"name\" : \"name\"\n      }\n    }\n  }, {\n    \"weekdays\" : {\n      \"WEDNESDAY\" : {\n        \"periods\" : [ {\n          \"from\" : \"from\",\n          \"until\" : \"until\"\n        }, {\n          \"from\" : \"from\",\n          \"until\" : \"until\"\n        } ],\n        \"status\" : \"OPEN\"\n      },\n      \"MONDAY\" : {\n        \"periods\" : [ {\n          \"from\" : \"from\",\n          \"until\" : \"until\"\n        }, {\n          \"from\" : \"from\",\n          \"until\" : \"until\"\n        } ],\n        \"status\" : \"OPEN\"\n      },\n      \"THURSDAY\" : {\n        \"periods\" : [ {\n          \"from\" : \"from\",\n          \"until\" : \"until\"\n        }, {\n          \"from\" : \"from\",\n          \"until\" : \"until\"\n        } ],\n        \"status\" : \"OPEN\"\n      },\n      \"SUNDAY\" : {\n        \"periods\" : [ {\n          \"from\" : \"from\",\n          \"until\" : \"until\"\n        }, {\n          \"from\" : \"from\",\n          \"until\" : \"until\"\n        } ],\n        \"status\" : \"OPEN\"\n      },\n      \"FRIDAY\" : {\n        \"periods\" : [ {\n          \"from\" : \"from\",\n          \"until\" : \"until\"\n        }, {\n          \"from\" : \"from\",\n          \"until\" : \"until\"\n        } ],\n        \"status\" : \"OPEN\"\n      },\n      \"TUESDAY\" : {\n        \"periods\" : [ {\n          \"from\" : \"from\",\n          \"until\" : \"until\"\n        }, {\n          \"from\" : \"from\",\n          \"until\" : \"until\"\n        } ],\n        \"status\" : \"OPEN\"\n      },\n      \"SATURDAY\" : {\n        \"periods\" : [ {\n          \"from\" : \"from\",\n          \"until\" : \"until\"\n        }, {\n          \"from\" : \"from\",\n          \"until\" : \"until\"\n        } ],\n        \"status\" : \"OPEN\"\n      }\n    },\n    \"function\" : {\n      \"activity\" : {\n        \"code\" : \"code\",\n        \"name\" : \"name\"\n      },\n      \"productGroup\" : {\n        \"code\" : \"code\",\n        \"name\" : \"name\"\n      },\n      \"brand\" : {\n        \"code\" : \"code\",\n        \"name\" : \"name\"\n      }\n    }\n  } ],\n  \"geoCoordinates\" : {\n    \"latitude\" : 6.027456183070403,\n    \"longitude\" : 1.4658129805029452\n  },\n  \"communication\" : {\n    \"general\" : {\n      \"twitter\" : \"twitter\",\n      \"website\" : \"website\",\n      \"phone\" : \"phone\",\n      \"facebook\" : \"facebook\",\n      \"mobile\" : \"mobile\",\n      \"fax\" : \"fax\",\n      \"email\" : \"email\",\n      \"googlePlus\" : \"googlePlus\"\n    }\n  },\n  \"region\" : {\n    \"subRegion\" : \"subRegion\",\n    \"region\" : \"region\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Dealer>(exampleJson)
            : default(Dealer);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>This request returns dealers (dealer, garage, retailer, etc.) for given parameters</remarks>
        /// <param name="dealerIds">Array of dealer ids. The dealer id is dealer’s business key, also known as GS Id. e.g. GS0000857,GS0017621 </param>
        /// <param name="latitude">The latitude geo coordinate.</param>
        /// <param name="longitude">The longitude geo coordinate.</param>
        /// <param name="radiusValue">The radius value of the search area. The center of the search area is defined by geo coordinates. (latitude, longitude properties) If radiusValue and radiusUnit parameters are missing, then the default radius is 10 km.</param>
        /// <param name="radiusUnit">The radius unit of the search area. The center of the search area is defined by geo coordinates. (latitude, longitude properties) If radiusValue and radiusUnit parameters are missing, then the default radius is 10 km.</param>
        /// <param name="countryIsoCode">The country of the dealer address defined as ISO two letter ID (e.g. DE, CH, CN, etc.)</param>
        /// <param name="city">The city of the dealer address.</param>
        /// <param name="name">A name of the dealer, the name filter will be applied to all Dealer names (e.g. legalName, nameAddition). You can also search for parts of Dealer names, e.g. the search term &#39;Niederlassung&#39; will also match &#39;Niederlassung Stuttgart&#39;.</param>
        /// <param name="brand">Filter by brand, valid values are:   * MB: Mercedes-Benz   * SMT: Smart</param>
        /// <param name="productGroup">Filter by a product group</param>
        /// <param name="activity">Filter by activity, valid actitvity values are:   * PARTS: Spare Parts Sales   * SALES: Sales of new vehicles   * SERVICE: Maintaining and repair   * USED-VEHICLES-TRADE: Sales of used vehicles</param>
        /// <param name="fields">Specifies which fields should be included in the result. If this filter is not used, per default all fields are returned. e.g. fields&#x3D;dealers(dealerId,address(street,city))</param>
        /// <param name="page">The index of the page to be returned. If this parameter is omitted, the first page will be returned. </param>
        /// <param name="pageSize">The index of the page to be returned. If this parameter is omitted, the first page will be returned. </param>
        /// <response code="200">OK</response>
        /// <response code="204">The search did not match any dealers.</response>
        /// <response code="400">Invalid parameter was specified:  * DealerId is not valid  * Area search is not valid (latitude or longitude missing or invalid)  * Country ISO code is not valid  * Brand code is not valid  * Product group is not valid  * Activity is not valid  * Page is not valid  * Page size is not valid</response>
        /// <response code="401">Unauthorized:   * Failed to resolve API Key query parameter   * Invalid API Key</response>
        /// <response code="429">Quota limit is exceeded</response>
        /// <response code="500">Internal server error</response>
        [HttpGet]
        [Route("/dealer_tryout/v1/dealers")]
        [ValidateModelState]
        [SwaggerOperation("DealersGET")]
        [SwaggerResponse(statusCode: 200, type: typeof(HalifiedDealers), description: "OK")]
        public virtual IActionResult DealersGET([FromQuery (Name = "dealerIds")]List<string> dealerIds, [FromQuery (Name = "latitude")]decimal? latitude, [FromQuery (Name = "longitude")]decimal? longitude, [FromQuery (Name = "radiusValue")]int? radiusValue, [FromQuery (Name = "radiusUnit")]string radiusUnit, [FromQuery (Name = "countryIsoCode")]string countryIsoCode, [FromQuery (Name = "city")]string city, [FromQuery (Name = "name")]string name, [FromQuery (Name = "brand")]string brand, [FromQuery (Name = "productGroup")]string productGroup, [FromQuery (Name = "activity")]string activity, [FromQuery (Name = "fields")]string fields, [FromQuery (Name = "page")]int? page, [FromQuery (Name = "pageSize")]int? pageSize)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(HalifiedDealers));
            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 429 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(429);
            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500);
            string exampleJson = null;
            exampleJson = "{\n  \"_links\" : {\n    \"next\" : {\n      \"href\" : \"href\"\n    },\n    \"previous\" : {\n      \"href\" : \"href\"\n    },\n    \"self\" : {\n      \"href\" : \"href\"\n    }\n  },\n  \"dealers\" : [ {\n    \"legalName\" : \"legalName\",\n    \"brandCodes\" : [ {\n      \"brand\" : {\n        \"code\" : \"code\",\n        \"name\" : \"name\"\n      }\n    }, {\n      \"brand\" : {\n        \"code\" : \"code\",\n        \"name\" : \"name\"\n      }\n    } ],\n    \"address\" : {\n      \"zipCode\" : \"zipCode\",\n      \"addressAddition\" : \"addressAddition\",\n      \"city\" : \"city\",\n      \"countryIsoCode\" : \"countryIsoCode\",\n      \"street\" : \"street\",\n      \"district\" : \"district\"\n    },\n    \"distance\" : {\n      \"unit\" : \"M\",\n      \"value\" : 0.8008281904610115\n    },\n    \"functions\" : [ {\n      \"activity\" : {\n        \"code\" : \"code\",\n        \"name\" : \"name\"\n      },\n      \"productGroup\" : {\n        \"code\" : \"code\",\n        \"name\" : \"name\"\n      },\n      \"brand\" : {\n        \"code\" : \"code\",\n        \"name\" : \"name\"\n      }\n    }, {\n      \"activity\" : {\n        \"code\" : \"code\",\n        \"name\" : \"name\"\n      },\n      \"productGroup\" : {\n        \"code\" : \"code\",\n        \"name\" : \"name\"\n      },\n      \"brand\" : {\n        \"code\" : \"code\",\n        \"name\" : \"name\"\n      }\n    } ],\n    \"_links\" : {\n      \"self\" : {\n        \"href\" : \"href\"\n      }\n    },\n    \"dealerId\" : \"dealerId\",\n    \"nameAddition\" : \"nameAddition\",\n    \"openingHours\" : [ {\n      \"weekdays\" : {\n        \"WEDNESDAY\" : {\n          \"periods\" : [ {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          }, {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          } ],\n          \"status\" : \"OPEN\"\n        },\n        \"MONDAY\" : {\n          \"periods\" : [ {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          }, {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          } ],\n          \"status\" : \"OPEN\"\n        },\n        \"THURSDAY\" : {\n          \"periods\" : [ {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          }, {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          } ],\n          \"status\" : \"OPEN\"\n        },\n        \"SUNDAY\" : {\n          \"periods\" : [ {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          }, {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          } ],\n          \"status\" : \"OPEN\"\n        },\n        \"FRIDAY\" : {\n          \"periods\" : [ {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          }, {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          } ],\n          \"status\" : \"OPEN\"\n        },\n        \"TUESDAY\" : {\n          \"periods\" : [ {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          }, {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          } ],\n          \"status\" : \"OPEN\"\n        },\n        \"SATURDAY\" : {\n          \"periods\" : [ {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          }, {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          } ],\n          \"status\" : \"OPEN\"\n        }\n      },\n      \"function\" : {\n        \"activity\" : {\n          \"code\" : \"code\",\n          \"name\" : \"name\"\n        },\n        \"productGroup\" : {\n          \"code\" : \"code\",\n          \"name\" : \"name\"\n        },\n        \"brand\" : {\n          \"code\" : \"code\",\n          \"name\" : \"name\"\n        }\n      }\n    }, {\n      \"weekdays\" : {\n        \"WEDNESDAY\" : {\n          \"periods\" : [ {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          }, {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          } ],\n          \"status\" : \"OPEN\"\n        },\n        \"MONDAY\" : {\n          \"periods\" : [ {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          }, {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          } ],\n          \"status\" : \"OPEN\"\n        },\n        \"THURSDAY\" : {\n          \"periods\" : [ {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          }, {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          } ],\n          \"status\" : \"OPEN\"\n        },\n        \"SUNDAY\" : {\n          \"periods\" : [ {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          }, {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          } ],\n          \"status\" : \"OPEN\"\n        },\n        \"FRIDAY\" : {\n          \"periods\" : [ {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          }, {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          } ],\n          \"status\" : \"OPEN\"\n        },\n        \"TUESDAY\" : {\n          \"periods\" : [ {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          }, {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          } ],\n          \"status\" : \"OPEN\"\n        },\n        \"SATURDAY\" : {\n          \"periods\" : [ {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          }, {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          } ],\n          \"status\" : \"OPEN\"\n        }\n      },\n      \"function\" : {\n        \"activity\" : {\n          \"code\" : \"code\",\n          \"name\" : \"name\"\n        },\n        \"productGroup\" : {\n          \"code\" : \"code\",\n          \"name\" : \"name\"\n        },\n        \"brand\" : {\n          \"code\" : \"code\",\n          \"name\" : \"name\"\n        }\n      }\n    } ],\n    \"geoCoordinates\" : {\n      \"latitude\" : 6.027456183070403,\n      \"longitude\" : 1.4658129805029452\n    },\n    \"communication\" : {\n      \"general\" : {\n        \"twitter\" : \"twitter\",\n        \"website\" : \"website\",\n        \"phone\" : \"phone\",\n        \"facebook\" : \"facebook\",\n        \"mobile\" : \"mobile\",\n        \"fax\" : \"fax\",\n        \"email\" : \"email\",\n        \"googlePlus\" : \"googlePlus\"\n      }\n    },\n    \"region\" : {\n      \"subRegion\" : \"subRegion\",\n      \"region\" : \"region\"\n    }\n  }, {\n    \"legalName\" : \"legalName\",\n    \"brandCodes\" : [ {\n      \"brand\" : {\n        \"code\" : \"code\",\n        \"name\" : \"name\"\n      }\n    }, {\n      \"brand\" : {\n        \"code\" : \"code\",\n        \"name\" : \"name\"\n      }\n    } ],\n    \"address\" : {\n      \"zipCode\" : \"zipCode\",\n      \"addressAddition\" : \"addressAddition\",\n      \"city\" : \"city\",\n      \"countryIsoCode\" : \"countryIsoCode\",\n      \"street\" : \"street\",\n      \"district\" : \"district\"\n    },\n    \"distance\" : {\n      \"unit\" : \"M\",\n      \"value\" : 0.8008281904610115\n    },\n    \"functions\" : [ {\n      \"activity\" : {\n        \"code\" : \"code\",\n        \"name\" : \"name\"\n      },\n      \"productGroup\" : {\n        \"code\" : \"code\",\n        \"name\" : \"name\"\n      },\n      \"brand\" : {\n        \"code\" : \"code\",\n        \"name\" : \"name\"\n      }\n    }, {\n      \"activity\" : {\n        \"code\" : \"code\",\n        \"name\" : \"name\"\n      },\n      \"productGroup\" : {\n        \"code\" : \"code\",\n        \"name\" : \"name\"\n      },\n      \"brand\" : {\n        \"code\" : \"code\",\n        \"name\" : \"name\"\n      }\n    } ],\n    \"_links\" : {\n      \"self\" : {\n        \"href\" : \"href\"\n      }\n    },\n    \"dealerId\" : \"dealerId\",\n    \"nameAddition\" : \"nameAddition\",\n    \"openingHours\" : [ {\n      \"weekdays\" : {\n        \"WEDNESDAY\" : {\n          \"periods\" : [ {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          }, {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          } ],\n          \"status\" : \"OPEN\"\n        },\n        \"MONDAY\" : {\n          \"periods\" : [ {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          }, {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          } ],\n          \"status\" : \"OPEN\"\n        },\n        \"THURSDAY\" : {\n          \"periods\" : [ {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          }, {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          } ],\n          \"status\" : \"OPEN\"\n        },\n        \"SUNDAY\" : {\n          \"periods\" : [ {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          }, {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          } ],\n          \"status\" : \"OPEN\"\n        },\n        \"FRIDAY\" : {\n          \"periods\" : [ {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          }, {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          } ],\n          \"status\" : \"OPEN\"\n        },\n        \"TUESDAY\" : {\n          \"periods\" : [ {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          }, {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          } ],\n          \"status\" : \"OPEN\"\n        },\n        \"SATURDAY\" : {\n          \"periods\" : [ {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          }, {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          } ],\n          \"status\" : \"OPEN\"\n        }\n      },\n      \"function\" : {\n        \"activity\" : {\n          \"code\" : \"code\",\n          \"name\" : \"name\"\n        },\n        \"productGroup\" : {\n          \"code\" : \"code\",\n          \"name\" : \"name\"\n        },\n        \"brand\" : {\n          \"code\" : \"code\",\n          \"name\" : \"name\"\n        }\n      }\n    }, {\n      \"weekdays\" : {\n        \"WEDNESDAY\" : {\n          \"periods\" : [ {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          }, {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          } ],\n          \"status\" : \"OPEN\"\n        },\n        \"MONDAY\" : {\n          \"periods\" : [ {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          }, {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          } ],\n          \"status\" : \"OPEN\"\n        },\n        \"THURSDAY\" : {\n          \"periods\" : [ {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          }, {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          } ],\n          \"status\" : \"OPEN\"\n        },\n        \"SUNDAY\" : {\n          \"periods\" : [ {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          }, {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          } ],\n          \"status\" : \"OPEN\"\n        },\n        \"FRIDAY\" : {\n          \"periods\" : [ {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          }, {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          } ],\n          \"status\" : \"OPEN\"\n        },\n        \"TUESDAY\" : {\n          \"periods\" : [ {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          }, {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          } ],\n          \"status\" : \"OPEN\"\n        },\n        \"SATURDAY\" : {\n          \"periods\" : [ {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          }, {\n            \"from\" : \"from\",\n            \"until\" : \"until\"\n          } ],\n          \"status\" : \"OPEN\"\n        }\n      },\n      \"function\" : {\n        \"activity\" : {\n          \"code\" : \"code\",\n          \"name\" : \"name\"\n        },\n        \"productGroup\" : {\n          \"code\" : \"code\",\n          \"name\" : \"name\"\n        },\n        \"brand\" : {\n          \"code\" : \"code\",\n          \"name\" : \"name\"\n        }\n      }\n    } ],\n    \"geoCoordinates\" : {\n      \"latitude\" : 6.027456183070403,\n      \"longitude\" : 1.4658129805029452\n    },\n    \"communication\" : {\n      \"general\" : {\n        \"twitter\" : \"twitter\",\n        \"website\" : \"website\",\n        \"phone\" : \"phone\",\n        \"facebook\" : \"facebook\",\n        \"mobile\" : \"mobile\",\n        \"fax\" : \"fax\",\n        \"email\" : \"email\",\n        \"googlePlus\" : \"googlePlus\"\n      }\n    },\n    \"region\" : {\n      \"subRegion\" : \"subRegion\",\n      \"region\" : \"region\"\n    }\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<HalifiedDealers>(exampleJson)
            : default(HalifiedDealers);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
