/*
 * College Football Data API
 *
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class StatsApiController : ControllerBase
    { 
        /// <summary>
        /// Advanced team metrics by game
        /// </summary>
        /// <remarks>Advanced team game stats</remarks>
        /// <param name="year">Year filter (required if no team specified)</param>
        /// <param name="week">Week filter</param>
        /// <param name="team">Team filter (required if no year specified)</param>
        /// <param name="opponent">Opponent filter</param>
        /// <param name="excludeGarbageTime">Filter to remove garbage time plays from calculations</param>
        /// <param name="seasonType">Season type filter (regular, postseason, or both)</param>
        /// <response code="200">successful operation</response>
        /// <response code="400">error</response>
        [HttpGet]
        [Route("/stats/game/advanced")]
        [Authorize(Policy = "ApiKeyAuth")]
        [ValidateModelState]
        [SwaggerOperation("GetAdvancedTeamGameStats")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AdvancedGameStat>), description: "successful operation")]
        public virtual IActionResult GetAdvancedTeamGameStats([FromQuery (Name = "year")]int? year, [FromQuery (Name = "week")][Range(1, 16)]int? week, [FromQuery (Name = "team")]string team, [FromQuery (Name = "opponent")]string opponent, [FromQuery (Name = "excludeGarbageTime")]bool? excludeGarbageTime, [FromQuery (Name = "seasonType")]string seasonType)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AdvancedGameStat>));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            string exampleJson = null;
            exampleJson = "[ {\n  \"gameId\" : 9,\n  \"week\" : 8,\n  \"offense\" : {\n    \"ppa\" : 6.84685269835264,\n    \"plays\" : 1,\n    \"lineYardsTotal\" : 5.962133916683182,\n    \"stuffRate\" : 4.965218492984954,\n    \"successRate\" : 5.025004791520295,\n    \"openFieldYards\" : 5.637376656633329,\n    \"powerSuccess\" : 1.4894159098541704,\n    \"rushingPlays\" : {\n      \"ppa\" : 4.145608029883936,\n      \"successRate\" : 7.386281948385884,\n      \"totalPPA\" : 1.2315135367772556,\n      \"explosiveness\" : 2.027123023002322\n    },\n    \"standardDowns\" : {\n      \"ppa\" : 9.301444243932576,\n      \"successRate\" : 3.616076749251911,\n      \"explosiveness\" : 7.061401241503109\n    },\n    \"openFieldYardsTotal\" : 2,\n    \"totalPPA\" : 9.965781217890562,\n    \"secondLevelYards\" : 7.457744773683766,\n    \"passingPlays\" : {\n      \"ppa\" : 4.145608029883936,\n      \"successRate\" : 7.386281948385884,\n      \"totalPPA\" : 1.2315135367772556,\n      \"explosiveness\" : 2.027123023002322\n    },\n    \"lineYards\" : 1.4658129805029452,\n    \"drives\" : 0,\n    \"passingDowns\" : {\n      \"ppa\" : 9.301444243932576,\n      \"successRate\" : 3.616076749251911,\n      \"explosiveness\" : 7.061401241503109\n    },\n    \"explosiveness\" : 6.027456183070403,\n    \"secondLevelYardsTotal\" : 1\n  },\n  \"defense\" : {\n    \"ppa\" : 6.84685269835264,\n    \"plays\" : 1,\n    \"lineYardsTotal\" : 5.962133916683182,\n    \"stuffRate\" : 4.965218492984954,\n    \"successRate\" : 5.025004791520295,\n    \"openFieldYards\" : 5.637376656633329,\n    \"powerSuccess\" : 1.4894159098541704,\n    \"rushingPlays\" : {\n      \"ppa\" : 4.145608029883936,\n      \"successRate\" : 7.386281948385884,\n      \"totalPPA\" : 1.2315135367772556,\n      \"explosiveness\" : 2.027123023002322\n    },\n    \"standardDowns\" : {\n      \"ppa\" : 9.301444243932576,\n      \"successRate\" : 3.616076749251911,\n      \"explosiveness\" : 7.061401241503109\n    },\n    \"openFieldYardsTotal\" : 2,\n    \"totalPPA\" : 9.965781217890562,\n    \"secondLevelYards\" : 7.457744773683766,\n    \"passingPlays\" : {\n      \"ppa\" : 4.145608029883936,\n      \"successRate\" : 7.386281948385884,\n      \"totalPPA\" : 1.2315135367772556,\n      \"explosiveness\" : 2.027123023002322\n    },\n    \"lineYards\" : 1.4658129805029452,\n    \"drives\" : 0,\n    \"passingDowns\" : {\n      \"ppa\" : 9.301444243932576,\n      \"successRate\" : 3.616076749251911,\n      \"explosiveness\" : 7.061401241503109\n    },\n    \"explosiveness\" : 6.027456183070403,\n    \"secondLevelYardsTotal\" : 1\n  },\n  \"opponent\" : \"opponent\",\n  \"season\" : 6,\n  \"team\" : \"team\"\n}, {\n  \"gameId\" : 9,\n  \"week\" : 8,\n  \"offense\" : {\n    \"ppa\" : 6.84685269835264,\n    \"plays\" : 1,\n    \"lineYardsTotal\" : 5.962133916683182,\n    \"stuffRate\" : 4.965218492984954,\n    \"successRate\" : 5.025004791520295,\n    \"openFieldYards\" : 5.637376656633329,\n    \"powerSuccess\" : 1.4894159098541704,\n    \"rushingPlays\" : {\n      \"ppa\" : 4.145608029883936,\n      \"successRate\" : 7.386281948385884,\n      \"totalPPA\" : 1.2315135367772556,\n      \"explosiveness\" : 2.027123023002322\n    },\n    \"standardDowns\" : {\n      \"ppa\" : 9.301444243932576,\n      \"successRate\" : 3.616076749251911,\n      \"explosiveness\" : 7.061401241503109\n    },\n    \"openFieldYardsTotal\" : 2,\n    \"totalPPA\" : 9.965781217890562,\n    \"secondLevelYards\" : 7.457744773683766,\n    \"passingPlays\" : {\n      \"ppa\" : 4.145608029883936,\n      \"successRate\" : 7.386281948385884,\n      \"totalPPA\" : 1.2315135367772556,\n      \"explosiveness\" : 2.027123023002322\n    },\n    \"lineYards\" : 1.4658129805029452,\n    \"drives\" : 0,\n    \"passingDowns\" : {\n      \"ppa\" : 9.301444243932576,\n      \"successRate\" : 3.616076749251911,\n      \"explosiveness\" : 7.061401241503109\n    },\n    \"explosiveness\" : 6.027456183070403,\n    \"secondLevelYardsTotal\" : 1\n  },\n  \"defense\" : {\n    \"ppa\" : 6.84685269835264,\n    \"plays\" : 1,\n    \"lineYardsTotal\" : 5.962133916683182,\n    \"stuffRate\" : 4.965218492984954,\n    \"successRate\" : 5.025004791520295,\n    \"openFieldYards\" : 5.637376656633329,\n    \"powerSuccess\" : 1.4894159098541704,\n    \"rushingPlays\" : {\n      \"ppa\" : 4.145608029883936,\n      \"successRate\" : 7.386281948385884,\n      \"totalPPA\" : 1.2315135367772556,\n      \"explosiveness\" : 2.027123023002322\n    },\n    \"standardDowns\" : {\n      \"ppa\" : 9.301444243932576,\n      \"successRate\" : 3.616076749251911,\n      \"explosiveness\" : 7.061401241503109\n    },\n    \"openFieldYardsTotal\" : 2,\n    \"totalPPA\" : 9.965781217890562,\n    \"secondLevelYards\" : 7.457744773683766,\n    \"passingPlays\" : {\n      \"ppa\" : 4.145608029883936,\n      \"successRate\" : 7.386281948385884,\n      \"totalPPA\" : 1.2315135367772556,\n      \"explosiveness\" : 2.027123023002322\n    },\n    \"lineYards\" : 1.4658129805029452,\n    \"drives\" : 0,\n    \"passingDowns\" : {\n      \"ppa\" : 9.301444243932576,\n      \"successRate\" : 3.616076749251911,\n      \"explosiveness\" : 7.061401241503109\n    },\n    \"explosiveness\" : 6.027456183070403,\n    \"secondLevelYardsTotal\" : 1\n  },\n  \"opponent\" : \"opponent\",\n  \"season\" : 6,\n  \"team\" : \"team\"\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<AdvancedGameStat>>(exampleJson)
            : default(List<AdvancedGameStat>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Advanced team metrics by season
        /// </summary>
        /// <remarks>Advanced team season stats</remarks>
        /// <param name="year">Year filter (required if no team specified)</param>
        /// <param name="team">Team filter (required if no year specified)</param>
        /// <param name="excludeGarbageTime">Filter to remove garbage time plays from calculations</param>
        /// <param name="startWeek">Starting week filter</param>
        /// <param name="endWeek">Starting week filter</param>
        /// <response code="200">successful operation</response>
        /// <response code="400">error</response>
        [HttpGet]
        [Route("/stats/season/advanced")]
        [Authorize(Policy = "ApiKeyAuth")]
        [ValidateModelState]
        [SwaggerOperation("GetAdvancedTeamSeasonStats")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AdvancedSeasonStat>), description: "successful operation")]
        public virtual IActionResult GetAdvancedTeamSeasonStats([FromQuery (Name = "year")]int? year, [FromQuery (Name = "team")]string team, [FromQuery (Name = "excludeGarbageTime")]bool? excludeGarbageTime, [FromQuery (Name = "startWeek")][Range(1, 16)]int? startWeek, [FromQuery (Name = "endWeek")][Range(1, 16)]int? endWeek)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AdvancedSeasonStat>));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            string exampleJson = null;
            exampleJson = "[ {\n  \"conference\" : \"conference\",\n  \"offense\" : {\n    \"ppa\" : 9.965781217890562,\n    \"plays\" : 1,\n    \"lineYardsTotal\" : 2.3021358869347655,\n    \"stuffRate\" : 8.762042012749001,\n    \"successRate\" : 9.018348186070783,\n    \"openFieldYards\" : 7.061401241503109,\n    \"powerSuccess\" : 5.025004791520295,\n    \"rushingPlays\" : {\n      \"ppa\" : 1.0246457001441578,\n      \"rate\" : 1.4894159098541704,\n      \"successRate\" : 6.84685269835264,\n      \"totalPPA\" : 7.457744773683766,\n      \"explosiveness\" : 1.2315135367772556\n    },\n    \"standardDowns\" : {\n      \"ppa\" : 2.027123023002322,\n      \"rate\" : 4.145608029883936,\n      \"successRate\" : 7.386281948385884,\n      \"explosiveness\" : 3.616076749251911\n    },\n    \"openFieldYardsTotal\" : 9,\n    \"totalPPA\" : 3.5571952270680973,\n    \"secondLevelYards\" : 9.369310271410669,\n    \"totalOpportunies\" : 6,\n    \"passingPlays\" : {\n      \"ppa\" : 1.0246457001441578,\n      \"rate\" : 1.4894159098541704,\n      \"successRate\" : 6.84685269835264,\n      \"totalPPA\" : 7.457744773683766,\n      \"explosiveness\" : 1.2315135367772556\n    },\n    \"lineYards\" : 5.637376656633329,\n    \"pointsPerOpportunity\" : 4.965218492984954,\n    \"fieldPosition\" : {\n      \"averagePredictedPoints\" : 1.4658129805029452,\n      \"averageStart\" : 5.962133916683182\n    },\n    \"drives\" : 0,\n    \"havoc\" : {\n      \"total\" : 5.962133916683182,\n      \"frontSeven\" : 1.4658129805029452,\n      \"db\" : 6.027456183070403\n    },\n    \"passingDowns\" : {\n      \"ppa\" : 2.027123023002322,\n      \"rate\" : 4.145608029883936,\n      \"successRate\" : 7.386281948385884,\n      \"explosiveness\" : 3.616076749251911\n    },\n    \"explosiveness\" : 6.027456183070403,\n    \"secondLevelYardsTotal\" : 6\n  },\n  \"defense\" : {\n    \"ppa\" : 9.965781217890562,\n    \"plays\" : 1,\n    \"lineYardsTotal\" : 2.3021358869347655,\n    \"stuffRate\" : 8.762042012749001,\n    \"successRate\" : 9.018348186070783,\n    \"openFieldYards\" : 7.061401241503109,\n    \"powerSuccess\" : 5.025004791520295,\n    \"rushingPlays\" : {\n      \"ppa\" : 1.0246457001441578,\n      \"rate\" : 1.4894159098541704,\n      \"successRate\" : 6.84685269835264,\n      \"totalPPA\" : 7.457744773683766,\n      \"explosiveness\" : 1.2315135367772556\n    },\n    \"standardDowns\" : {\n      \"ppa\" : 2.027123023002322,\n      \"rate\" : 4.145608029883936,\n      \"successRate\" : 7.386281948385884,\n      \"explosiveness\" : 3.616076749251911\n    },\n    \"openFieldYardsTotal\" : 9,\n    \"totalPPA\" : 3.5571952270680973,\n    \"secondLevelYards\" : 9.369310271410669,\n    \"totalOpportunies\" : 6,\n    \"passingPlays\" : {\n      \"ppa\" : 1.0246457001441578,\n      \"rate\" : 1.4894159098541704,\n      \"successRate\" : 6.84685269835264,\n      \"totalPPA\" : 7.457744773683766,\n      \"explosiveness\" : 1.2315135367772556\n    },\n    \"lineYards\" : 5.637376656633329,\n    \"pointsPerOpportunity\" : 4.965218492984954,\n    \"fieldPosition\" : {\n      \"averagePredictedPoints\" : 1.4658129805029452,\n      \"averageStart\" : 5.962133916683182\n    },\n    \"drives\" : 0,\n    \"havoc\" : {\n      \"total\" : 5.962133916683182,\n      \"frontSeven\" : 1.4658129805029452,\n      \"db\" : 6.027456183070403\n    },\n    \"passingDowns\" : {\n      \"ppa\" : 2.027123023002322,\n      \"rate\" : 4.145608029883936,\n      \"successRate\" : 7.386281948385884,\n      \"explosiveness\" : 3.616076749251911\n    },\n    \"explosiveness\" : 6.027456183070403,\n    \"secondLevelYardsTotal\" : 6\n  },\n  \"season\" : 6,\n  \"team\" : \"team\"\n}, {\n  \"conference\" : \"conference\",\n  \"offense\" : {\n    \"ppa\" : 9.965781217890562,\n    \"plays\" : 1,\n    \"lineYardsTotal\" : 2.3021358869347655,\n    \"stuffRate\" : 8.762042012749001,\n    \"successRate\" : 9.018348186070783,\n    \"openFieldYards\" : 7.061401241503109,\n    \"powerSuccess\" : 5.025004791520295,\n    \"rushingPlays\" : {\n      \"ppa\" : 1.0246457001441578,\n      \"rate\" : 1.4894159098541704,\n      \"successRate\" : 6.84685269835264,\n      \"totalPPA\" : 7.457744773683766,\n      \"explosiveness\" : 1.2315135367772556\n    },\n    \"standardDowns\" : {\n      \"ppa\" : 2.027123023002322,\n      \"rate\" : 4.145608029883936,\n      \"successRate\" : 7.386281948385884,\n      \"explosiveness\" : 3.616076749251911\n    },\n    \"openFieldYardsTotal\" : 9,\n    \"totalPPA\" : 3.5571952270680973,\n    \"secondLevelYards\" : 9.369310271410669,\n    \"totalOpportunies\" : 6,\n    \"passingPlays\" : {\n      \"ppa\" : 1.0246457001441578,\n      \"rate\" : 1.4894159098541704,\n      \"successRate\" : 6.84685269835264,\n      \"totalPPA\" : 7.457744773683766,\n      \"explosiveness\" : 1.2315135367772556\n    },\n    \"lineYards\" : 5.637376656633329,\n    \"pointsPerOpportunity\" : 4.965218492984954,\n    \"fieldPosition\" : {\n      \"averagePredictedPoints\" : 1.4658129805029452,\n      \"averageStart\" : 5.962133916683182\n    },\n    \"drives\" : 0,\n    \"havoc\" : {\n      \"total\" : 5.962133916683182,\n      \"frontSeven\" : 1.4658129805029452,\n      \"db\" : 6.027456183070403\n    },\n    \"passingDowns\" : {\n      \"ppa\" : 2.027123023002322,\n      \"rate\" : 4.145608029883936,\n      \"successRate\" : 7.386281948385884,\n      \"explosiveness\" : 3.616076749251911\n    },\n    \"explosiveness\" : 6.027456183070403,\n    \"secondLevelYardsTotal\" : 6\n  },\n  \"defense\" : {\n    \"ppa\" : 9.965781217890562,\n    \"plays\" : 1,\n    \"lineYardsTotal\" : 2.3021358869347655,\n    \"stuffRate\" : 8.762042012749001,\n    \"successRate\" : 9.018348186070783,\n    \"openFieldYards\" : 7.061401241503109,\n    \"powerSuccess\" : 5.025004791520295,\n    \"rushingPlays\" : {\n      \"ppa\" : 1.0246457001441578,\n      \"rate\" : 1.4894159098541704,\n      \"successRate\" : 6.84685269835264,\n      \"totalPPA\" : 7.457744773683766,\n      \"explosiveness\" : 1.2315135367772556\n    },\n    \"standardDowns\" : {\n      \"ppa\" : 2.027123023002322,\n      \"rate\" : 4.145608029883936,\n      \"successRate\" : 7.386281948385884,\n      \"explosiveness\" : 3.616076749251911\n    },\n    \"openFieldYardsTotal\" : 9,\n    \"totalPPA\" : 3.5571952270680973,\n    \"secondLevelYards\" : 9.369310271410669,\n    \"totalOpportunies\" : 6,\n    \"passingPlays\" : {\n      \"ppa\" : 1.0246457001441578,\n      \"rate\" : 1.4894159098541704,\n      \"successRate\" : 6.84685269835264,\n      \"totalPPA\" : 7.457744773683766,\n      \"explosiveness\" : 1.2315135367772556\n    },\n    \"lineYards\" : 5.637376656633329,\n    \"pointsPerOpportunity\" : 4.965218492984954,\n    \"fieldPosition\" : {\n      \"averagePredictedPoints\" : 1.4658129805029452,\n      \"averageStart\" : 5.962133916683182\n    },\n    \"drives\" : 0,\n    \"havoc\" : {\n      \"total\" : 5.962133916683182,\n      \"frontSeven\" : 1.4658129805029452,\n      \"db\" : 6.027456183070403\n    },\n    \"passingDowns\" : {\n      \"ppa\" : 2.027123023002322,\n      \"rate\" : 4.145608029883936,\n      \"successRate\" : 7.386281948385884,\n      \"explosiveness\" : 3.616076749251911\n    },\n    \"explosiveness\" : 6.027456183070403,\n    \"secondLevelYardsTotal\" : 6\n  },\n  \"season\" : 6,\n  \"team\" : \"team\"\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<AdvancedSeasonStat>>(exampleJson)
            : default(List<AdvancedSeasonStat>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Team stat categories
        /// </summary>
        /// <remarks>Stat category list</remarks>
        /// <response code="200">successful operation</response>
        [HttpGet]
        [Route("/stats/categories")]
        [Authorize(Policy = "ApiKeyAuth")]
        [ValidateModelState]
        [SwaggerOperation("GetStatCategories")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<string>), description: "successful operation")]
        public virtual IActionResult GetStatCategories()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<string>));
            string exampleJson = null;
            exampleJson = "[ \"\", \"\" ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<string>>(exampleJson)
            : default(List<string>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Team statistics by season
        /// </summary>
        /// <remarks>Team season stats</remarks>
        /// <param name="year">Year filter (required if no team specified)</param>
        /// <param name="team">Team filter (required if no year specified)</param>
        /// <param name="conference">Conference abbreviation filter</param>
        /// <param name="startWeek">Starting week filter</param>
        /// <param name="endWeek">Starting week filter</param>
        /// <response code="200">successful operation</response>
        /// <response code="400">error</response>
        [HttpGet]
        [Route("/stats/season")]
        [Authorize(Policy = "ApiKeyAuth")]
        [ValidateModelState]
        [SwaggerOperation("GetTeamSeasonStats")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<TeamSeasonStat>), description: "successful operation")]
        public virtual IActionResult GetTeamSeasonStats([FromQuery (Name = "year")]int? year, [FromQuery (Name = "team")]string team, [FromQuery (Name = "conference")]string conference, [FromQuery (Name = "startWeek")][Range(1, 16)]int? startWeek, [FromQuery (Name = "endWeek")][Range(1, 16)]int? endWeek)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<TeamSeasonStat>));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            string exampleJson = null;
            exampleJson = "[ {\n  \"conference\" : \"conference\",\n  \"statValue\" : 6,\n  \"statName\" : \"statName\",\n  \"season\" : 0,\n  \"team\" : \"team\"\n}, {\n  \"conference\" : \"conference\",\n  \"statValue\" : 6,\n  \"statName\" : \"statName\",\n  \"season\" : 0,\n  \"team\" : \"team\"\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<TeamSeasonStat>>(exampleJson)
            : default(List<TeamSeasonStat>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
