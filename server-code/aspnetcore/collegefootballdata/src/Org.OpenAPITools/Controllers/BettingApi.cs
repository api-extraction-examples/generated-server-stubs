/*
 * College Football Data API
 *
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class BettingApiController : ControllerBase
    { 
        /// <summary>
        /// Betting lines
        /// </summary>
        /// <remarks>Closing betting lines</remarks>
        /// <param name="gameId">Game id filter</param>
        /// <param name="year">Year/season filter for games</param>
        /// <param name="week">Week filter</param>
        /// <param name="seasonType">Season type filter (regular or postseason)</param>
        /// <param name="team">Team</param>
        /// <param name="home">Home team filter</param>
        /// <param name="away">Away team filter</param>
        /// <param name="conference">Conference abbreviation filter</param>
        /// <response code="200">successful operation</response>
        /// <response code="400">error</response>
        [HttpGet]
        [Route("/lines")]
        [Authorize(Policy = "ApiKeyAuth")]
        [ValidateModelState]
        [SwaggerOperation("GetLines")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<GameLines>), description: "successful operation")]
        public virtual IActionResult GetLines([FromQuery (Name = "gameId")]int? gameId, [FromQuery (Name = "year")]int? year, [FromQuery (Name = "week")][Range(1, 16)]int? week, [FromQuery (Name = "seasonType")]string seasonType, [FromQuery (Name = "team")]string team, [FromQuery (Name = "home")]string home, [FromQuery (Name = "away")]string away, [FromQuery (Name = "conference")]string conference)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<GameLines>));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            string exampleJson = null;
            exampleJson = "[ {\n  \"awayConference\" : \"awayConference\",\n  \"seasonType\" : \"seasonType\",\n  \"homeConference\" : \"homeConference\",\n  \"homeScore\" : 6,\n  \"week\" : 4,\n  \"awayScore\" : 0,\n  \"awayTeam\" : \"awayTeam\",\n  \"homeTeam\" : \"homeTeam\",\n  \"season\" : 2,\n  \"id\" : 1,\n  \"lines\" : [ {\n    \"homeMoneyline\" : 5.637376656633329,\n    \"overUnder\" : 2.3021358869347655,\n    \"overUnderOpen\" : 7.061401241503109,\n    \"formattedSpread\" : \"formattedSpread\",\n    \"awayMoneyline\" : 5.962133916683182,\n    \"provider\" : \"provider\",\n    \"spreadOpen\" : 3.616076749251911,\n    \"spread\" : 9.301444243932576\n  }, {\n    \"homeMoneyline\" : 5.637376656633329,\n    \"overUnder\" : 2.3021358869347655,\n    \"overUnderOpen\" : 7.061401241503109,\n    \"formattedSpread\" : \"formattedSpread\",\n    \"awayMoneyline\" : 5.962133916683182,\n    \"provider\" : \"provider\",\n    \"spreadOpen\" : 3.616076749251911,\n    \"spread\" : 9.301444243932576\n  } ],\n  \"startDate\" : \"startDate\"\n}, {\n  \"awayConference\" : \"awayConference\",\n  \"seasonType\" : \"seasonType\",\n  \"homeConference\" : \"homeConference\",\n  \"homeScore\" : 6,\n  \"week\" : 4,\n  \"awayScore\" : 0,\n  \"awayTeam\" : \"awayTeam\",\n  \"homeTeam\" : \"homeTeam\",\n  \"season\" : 2,\n  \"id\" : 1,\n  \"lines\" : [ {\n    \"homeMoneyline\" : 5.637376656633329,\n    \"overUnder\" : 2.3021358869347655,\n    \"overUnderOpen\" : 7.061401241503109,\n    \"formattedSpread\" : \"formattedSpread\",\n    \"awayMoneyline\" : 5.962133916683182,\n    \"provider\" : \"provider\",\n    \"spreadOpen\" : 3.616076749251911,\n    \"spread\" : 9.301444243932576\n  }, {\n    \"homeMoneyline\" : 5.637376656633329,\n    \"overUnder\" : 2.3021358869347655,\n    \"overUnderOpen\" : 7.061401241503109,\n    \"formattedSpread\" : \"formattedSpread\",\n    \"awayMoneyline\" : 5.962133916683182,\n    \"provider\" : \"provider\",\n    \"spreadOpen\" : 3.616076749251911,\n    \"spread\" : 9.301444243932576\n  } ],\n  \"startDate\" : \"startDate\"\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<GameLines>>(exampleJson)
            : default(List<GameLines>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
