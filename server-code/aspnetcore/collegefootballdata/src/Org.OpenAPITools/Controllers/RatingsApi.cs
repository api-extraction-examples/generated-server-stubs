/*
 * College Football Data API
 *
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class RatingsApiController : ControllerBase
    { 
        /// <summary>
        /// Historical SP+ ratings by conference
        /// </summary>
        /// <remarks>Get average SP+ historical rating data by conference</remarks>
        /// <param name="year">Season filter</param>
        /// <param name="conference">Conference abbreviation filter</param>
        /// <response code="200">successful operation</response>
        /// <response code="400">error</response>
        [HttpGet]
        [Route("/ratings/sp/conferences")]
        [Authorize(Policy = "ApiKeyAuth")]
        [ValidateModelState]
        [SwaggerOperation("GetConferenceSPRatings")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ConferenceSPRating>), description: "successful operation")]
        public virtual IActionResult GetConferenceSPRatings([FromQuery (Name = "year")]int? year, [FromQuery (Name = "conference")]string conference)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ConferenceSPRating>));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            string exampleJson = null;
            exampleJson = "[ {\n  \"conference\" : \"conference\",\n  \"specialTeams\" : {\n    \"rating\" : 6.438423552598547\n  },\n  \"offense\" : {\n    \"success\" : 6.84685269835264,\n    \"pace\" : 3.616076749251911,\n    \"rating\" : 7.386281948385884,\n    \"rushing\" : 1.0246457001441578,\n    \"standardDowns\" : 1.4894159098541704,\n    \"runRate\" : 1.2315135367772556,\n    \"passingDowns\" : 4.145608029883936,\n    \"passing\" : 2.027123023002322,\n    \"explosiveness\" : 9.301444243932576\n  },\n  \"defense\" : {\n    \"havoc\" : {\n      \"total\" : 5.962133916683182,\n      \"frontSeven\" : 1.4658129805029452,\n      \"db\" : 6.027456183070403\n    },\n    \"success\" : 7.061401241503109,\n    \"rating\" : 5.962133916683182,\n    \"rushing\" : 5.637376656633329,\n    \"standardDowns\" : 2.3021358869347655,\n    \"passingDowns\" : 1.4658129805029452,\n    \"pasing\" : 6.027456183070403,\n    \"explosiveness\" : 0.8008281904610115\n  },\n  \"secondOrderWins\" : 1.1730742509559433,\n  \"year\" : 5,\n  \"sos\" : 4.965218492984954,\n  \"rating\" : 7.457744773683766\n}, {\n  \"conference\" : \"conference\",\n  \"specialTeams\" : {\n    \"rating\" : 6.438423552598547\n  },\n  \"offense\" : {\n    \"success\" : 6.84685269835264,\n    \"pace\" : 3.616076749251911,\n    \"rating\" : 7.386281948385884,\n    \"rushing\" : 1.0246457001441578,\n    \"standardDowns\" : 1.4894159098541704,\n    \"runRate\" : 1.2315135367772556,\n    \"passingDowns\" : 4.145608029883936,\n    \"passing\" : 2.027123023002322,\n    \"explosiveness\" : 9.301444243932576\n  },\n  \"defense\" : {\n    \"havoc\" : {\n      \"total\" : 5.962133916683182,\n      \"frontSeven\" : 1.4658129805029452,\n      \"db\" : 6.027456183070403\n    },\n    \"success\" : 7.061401241503109,\n    \"rating\" : 5.962133916683182,\n    \"rushing\" : 5.637376656633329,\n    \"standardDowns\" : 2.3021358869347655,\n    \"passingDowns\" : 1.4658129805029452,\n    \"pasing\" : 6.027456183070403,\n    \"explosiveness\" : 0.8008281904610115\n  },\n  \"secondOrderWins\" : 1.1730742509559433,\n  \"year\" : 5,\n  \"sos\" : 4.965218492984954,\n  \"rating\" : 7.457744773683766\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ConferenceSPRating>>(exampleJson)
            : default(List<ConferenceSPRating>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Historical Elo ratings
        /// </summary>
        /// <remarks>Elo rating data</remarks>
        /// <param name="year">Season filter</param>
        /// <param name="week">Maximum week filter</param>
        /// <param name="team">Team filter</param>
        /// <param name="conference">Conference filter</param>
        /// <response code="200">successful operation</response>
        /// <response code="400">error</response>
        [HttpGet]
        [Route("/ratings/elo")]
        [Authorize(Policy = "ApiKeyAuth")]
        [ValidateModelState]
        [SwaggerOperation("GetEloRatings")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<TeamEloRating>), description: "successful operation")]
        public virtual IActionResult GetEloRatings([FromQuery (Name = "year")]int? year, [FromQuery (Name = "week")]int? week, [FromQuery (Name = "team")]string team, [FromQuery (Name = "conference")]string conference)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<TeamEloRating>));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            string exampleJson = null;
            exampleJson = "[ {\n  \"conference\" : \"conference\",\n  \"year\" : 6,\n  \"elo\" : 0.8008281904610115,\n  \"team\" : \"team\"\n}, {\n  \"conference\" : \"conference\",\n  \"year\" : 6,\n  \"elo\" : 0.8008281904610115,\n  \"team\" : \"team\"\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<TeamEloRating>>(exampleJson)
            : default(List<TeamEloRating>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Historical SP+ ratings
        /// </summary>
        /// <remarks>SP+ rating data</remarks>
        /// <param name="year">Season filter (required if team not specified)</param>
        /// <param name="team">Team filter (required if year not specified)</param>
        /// <response code="200">successful operation</response>
        /// <response code="400">error</response>
        [HttpGet]
        [Route("/ratings/sp")]
        [Authorize(Policy = "ApiKeyAuth")]
        [ValidateModelState]
        [SwaggerOperation("GetSPRatings")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<TeamSPRating>), description: "successful operation")]
        public virtual IActionResult GetSPRatings([FromQuery (Name = "year")]int? year, [FromQuery (Name = "team")]string team)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<TeamSPRating>));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            string exampleJson = null;
            exampleJson = "[ {\n  \"conference\" : \"conference\",\n  \"specialTeams\" : {\n    \"rating\" : 6.438423552598547\n  },\n  \"offense\" : {\n    \"success\" : 9.965781217890562,\n    \"pace\" : 1.2315135367772556,\n    \"rating\" : 7.457744773683766,\n    \"rushing\" : 4.965218492984954,\n    \"standardDowns\" : 5.025004791520295,\n    \"runRate\" : 1.1730742509559433,\n    \"passingDowns\" : 1.4894159098541704,\n    \"ranking\" : 6.84685269835264,\n    \"passing\" : 1.0246457001441578,\n    \"explosiveness\" : 7.386281948385884\n  },\n  \"defense\" : {\n    \"havoc\" : {\n      \"total\" : 5.962133916683182,\n      \"frontSeven\" : 1.4658129805029452,\n      \"db\" : 6.027456183070403\n    },\n    \"success\" : 4.145608029883936,\n    \"rating\" : 9.301444243932576,\n    \"rushing\" : 3.616076749251911,\n    \"standardDowns\" : 2.027123023002322,\n    \"passingDowns\" : 2.3021358869347655,\n    \"ranking\" : 7.061401241503109,\n    \"pasing\" : 5.637376656633329,\n    \"explosiveness\" : 0.8008281904610115\n  },\n  \"secondOrderWins\" : 8.762042012749001,\n  \"year\" : 3,\n  \"sos\" : 9.018348186070783,\n  \"rating\" : 6.683562403749608,\n  \"ranking\" : 9.369310271410669,\n  \"team\" : \"team\"\n}, {\n  \"conference\" : \"conference\",\n  \"specialTeams\" : {\n    \"rating\" : 6.438423552598547\n  },\n  \"offense\" : {\n    \"success\" : 9.965781217890562,\n    \"pace\" : 1.2315135367772556,\n    \"rating\" : 7.457744773683766,\n    \"rushing\" : 4.965218492984954,\n    \"standardDowns\" : 5.025004791520295,\n    \"runRate\" : 1.1730742509559433,\n    \"passingDowns\" : 1.4894159098541704,\n    \"ranking\" : 6.84685269835264,\n    \"passing\" : 1.0246457001441578,\n    \"explosiveness\" : 7.386281948385884\n  },\n  \"defense\" : {\n    \"havoc\" : {\n      \"total\" : 5.962133916683182,\n      \"frontSeven\" : 1.4658129805029452,\n      \"db\" : 6.027456183070403\n    },\n    \"success\" : 4.145608029883936,\n    \"rating\" : 9.301444243932576,\n    \"rushing\" : 3.616076749251911,\n    \"standardDowns\" : 2.027123023002322,\n    \"passingDowns\" : 2.3021358869347655,\n    \"ranking\" : 7.061401241503109,\n    \"pasing\" : 5.637376656633329,\n    \"explosiveness\" : 0.8008281904610115\n  },\n  \"secondOrderWins\" : 8.762042012749001,\n  \"year\" : 3,\n  \"sos\" : 9.018348186070783,\n  \"rating\" : 6.683562403749608,\n  \"ranking\" : 9.369310271410669,\n  \"team\" : \"team\"\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<TeamSPRating>>(exampleJson)
            : default(List<TeamSPRating>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Historical SRS ratings
        /// </summary>
        /// <remarks>SRS rating data (requires either a year or team specified)</remarks>
        /// <param name="year">Season filter (required if team not specified)</param>
        /// <param name="team">Team filter (required if year not specified)</param>
        /// <param name="conference">Conference filter</param>
        /// <response code="200">successful operation</response>
        /// <response code="400">error</response>
        [HttpGet]
        [Route("/ratings/srs")]
        [Authorize(Policy = "ApiKeyAuth")]
        [ValidateModelState]
        [SwaggerOperation("GetSRSRatings")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<TeamSRSRating>), description: "successful operation")]
        public virtual IActionResult GetSRSRatings([FromQuery (Name = "year")]int? year, [FromQuery (Name = "team")]string team, [FromQuery (Name = "conference")]string conference)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<TeamSRSRating>));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            string exampleJson = null;
            exampleJson = "[ {\n  \"division\" : \"division\",\n  \"conference\" : \"conference\",\n  \"year\" : 1,\n  \"rating\" : 6.027456183070403,\n  \"ranking\" : 0.8008281904610115,\n  \"team\" : \"team\"\n}, {\n  \"division\" : \"division\",\n  \"conference\" : \"conference\",\n  \"year\" : 1,\n  \"rating\" : 6.027456183070403,\n  \"ranking\" : 0.8008281904610115,\n  \"team\" : \"team\"\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<TeamSRSRating>>(exampleJson)
            : default(List<TeamSRSRating>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
