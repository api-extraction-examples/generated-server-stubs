/*
 * College Football Data API
 *
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class CoachesApiController : ControllerBase
    { 
        /// <summary>
        /// Coaching records and history
        /// </summary>
        /// <remarks>Coaching history</remarks>
        /// <param name="firstName">First name filter</param>
        /// <param name="lastName">Last name filter</param>
        /// <param name="team">Team name filter</param>
        /// <param name="year">Year filter</param>
        /// <param name="minYear">Minimum year filter (inclusive)</param>
        /// <param name="maxYear">Maximum year filter (inclusive)</param>
        /// <response code="200">successful operation</response>
        [HttpGet]
        [Route("/coaches")]
        [Authorize(Policy = "ApiKeyAuth")]
        [ValidateModelState]
        [SwaggerOperation("GetCoaches")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Coach>), description: "successful operation")]
        public virtual IActionResult GetCoaches([FromQuery (Name = "firstName")]string firstName, [FromQuery (Name = "lastName")]string lastName, [FromQuery (Name = "team")]string team, [FromQuery (Name = "year")]int? year, [FromQuery (Name = "minYear")]int? minYear, [FromQuery (Name = "maxYear")]int? maxYear)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Coach>));
            string exampleJson = null;
            exampleJson = "[ {\n  \"seasons\" : [ {\n    \"wins\" : 2,\n    \"sp_offense\" : 2.3021358869347655,\n    \"school\" : \"school\",\n    \"srs\" : 9.301444243932576,\n    \"ties\" : 3,\n    \"year\" : \"year\",\n    \"games\" : 0,\n    \"sp_overall\" : 7.061401241503109,\n    \"losses\" : 6,\n    \"sp_defense\" : 5.637376656633329,\n    \"preseason_rank\" : 5,\n    \"postseason_rank\" : 1\n  }, {\n    \"wins\" : 2,\n    \"sp_offense\" : 2.3021358869347655,\n    \"school\" : \"school\",\n    \"srs\" : 9.301444243932576,\n    \"ties\" : 3,\n    \"year\" : \"year\",\n    \"games\" : 0,\n    \"sp_overall\" : 7.061401241503109,\n    \"losses\" : 6,\n    \"sp_defense\" : 5.637376656633329,\n    \"preseason_rank\" : 5,\n    \"postseason_rank\" : 1\n  } ],\n  \"last_name\" : \"last_name\",\n  \"hire_date\" : \"hire_date\",\n  \"first_name\" : \"first_name\"\n}, {\n  \"seasons\" : [ {\n    \"wins\" : 2,\n    \"sp_offense\" : 2.3021358869347655,\n    \"school\" : \"school\",\n    \"srs\" : 9.301444243932576,\n    \"ties\" : 3,\n    \"year\" : \"year\",\n    \"games\" : 0,\n    \"sp_overall\" : 7.061401241503109,\n    \"losses\" : 6,\n    \"sp_defense\" : 5.637376656633329,\n    \"preseason_rank\" : 5,\n    \"postseason_rank\" : 1\n  }, {\n    \"wins\" : 2,\n    \"sp_offense\" : 2.3021358869347655,\n    \"school\" : \"school\",\n    \"srs\" : 9.301444243932576,\n    \"ties\" : 3,\n    \"year\" : \"year\",\n    \"games\" : 0,\n    \"sp_overall\" : 7.061401241503109,\n    \"losses\" : 6,\n    \"sp_defense\" : 5.637376656633329,\n    \"preseason_rank\" : 5,\n    \"postseason_rank\" : 1\n  } ],\n  \"last_name\" : \"last_name\",\n  \"hire_date\" : \"hire_date\",\n  \"first_name\" : \"first_name\"\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<Coach>>(exampleJson)
            : default(List<Coach>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
