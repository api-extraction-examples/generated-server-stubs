/*
 * College Football Data API
 *
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class DraftApiController : ControllerBase
    { 
        /// <summary>
        /// List of NFL Draft picks
        /// </summary>
        /// <remarks>List of NFL Draft picks</remarks>
        /// <param name="year">Year filter</param>
        /// <param name="nflTeam">NFL team filter</param>
        /// <param name="college">Player college filter</param>
        /// <param name="conference">College confrence abbreviation filter</param>
        /// <param name="position">NFL position filter</param>
        /// <response code="200">successful operation</response>
        /// <response code="400">error</response>
        [HttpGet]
        [Route("/draft/picks")]
        [Authorize(Policy = "ApiKeyAuth")]
        [ValidateModelState]
        [SwaggerOperation("GetDraftPicks")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<DraftPick>), description: "successful operation")]
        public virtual IActionResult GetDraftPicks([FromQuery (Name = "year")]int? year, [FromQuery (Name = "nflTeam")]string nflTeam, [FromQuery (Name = "college")]string college, [FromQuery (Name = "conference")]string conference, [FromQuery (Name = "position")]string position)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<DraftPick>));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            string exampleJson = null;
            exampleJson = "[ {\n  \"collegeTeam\" : \"collegeTeam\",\n  \"nflTeam\" : \"nflTeam\",\n  \"preDraftPositionRanking\" : 4,\n  \"year\" : 1,\n  \"hometownInfo\" : {\n    \"country\" : \"country\",\n    \"city\" : \"city\",\n    \"latitude\" : 5.637376656633329,\n    \"countryFips\" : 5,\n    \"state\" : \"state\",\n    \"longitude\" : 2.3021358869347655\n  },\n  \"weight\" : 1,\n  \"round\" : 1,\n  \"pick\" : 3,\n  \"collegeId\" : 6,\n  \"nflAthleteId\" : 7,\n  \"name\" : \"name\",\n  \"overall\" : 9,\n  \"preDraftRanking\" : 7,\n  \"collegeAthleteId\" : 0,\n  \"collegeConference\" : \"collegeConference\",\n  \"position\" : \"position\",\n  \"preDraftGrade\" : 2,\n  \"height\" : 1\n}, {\n  \"collegeTeam\" : \"collegeTeam\",\n  \"nflTeam\" : \"nflTeam\",\n  \"preDraftPositionRanking\" : 4,\n  \"year\" : 1,\n  \"hometownInfo\" : {\n    \"country\" : \"country\",\n    \"city\" : \"city\",\n    \"latitude\" : 5.637376656633329,\n    \"countryFips\" : 5,\n    \"state\" : \"state\",\n    \"longitude\" : 2.3021358869347655\n  },\n  \"weight\" : 1,\n  \"round\" : 1,\n  \"pick\" : 3,\n  \"collegeId\" : 6,\n  \"nflAthleteId\" : 7,\n  \"name\" : \"name\",\n  \"overall\" : 9,\n  \"preDraftRanking\" : 7,\n  \"collegeAthleteId\" : 0,\n  \"collegeConference\" : \"collegeConference\",\n  \"position\" : \"position\",\n  \"preDraftGrade\" : 2,\n  \"height\" : 1\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<DraftPick>>(exampleJson)
            : default(List<DraftPick>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// List of NFL positions
        /// </summary>
        /// <remarks>List of NFL positions</remarks>
        /// <response code="200">successful operation</response>
        /// <response code="400">error</response>
        [HttpGet]
        [Route("/draft/positions")]
        [Authorize(Policy = "ApiKeyAuth")]
        [ValidateModelState]
        [SwaggerOperation("GetNFLPositions")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<DraftPosition>), description: "successful operation")]
        public virtual IActionResult GetNFLPositions()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<DraftPosition>));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            string exampleJson = null;
            exampleJson = "[ {\n  \"name\" : \"name\",\n  \"abbreviation\" : \"abbreviation\"\n}, {\n  \"name\" : \"name\",\n  \"abbreviation\" : \"abbreviation\"\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<DraftPosition>>(exampleJson)
            : default(List<DraftPosition>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// List of NFL teams
        /// </summary>
        /// <remarks>List of NFL teams</remarks>
        /// <response code="200">successful operation</response>
        /// <response code="400">error</response>
        [HttpGet]
        [Route("/draft/teams")]
        [Authorize(Policy = "ApiKeyAuth")]
        [ValidateModelState]
        [SwaggerOperation("GetNFLTeams")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<DraftTeam>), description: "successful operation")]
        public virtual IActionResult GetNFLTeams()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<DraftTeam>));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            string exampleJson = null;
            exampleJson = "[ {\n  \"displayName\" : \"displayName\",\n  \"nickname\" : \"nickname\",\n  \"logo\" : \"logo\",\n  \"location\" : \"location\"\n}, {\n  \"displayName\" : \"displayName\",\n  \"nickname\" : \"nickname\",\n  \"logo\" : \"logo\",\n  \"location\" : \"location\"\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<DraftTeam>>(exampleJson)
            : default(List<DraftTeam>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
