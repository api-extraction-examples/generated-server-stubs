/*
 * College Football Data API
 *
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 4.4.12
 * Contact: admin@collegefootballdata.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class DrivesApiController : ControllerBase
    { 
        /// <summary>
        /// Drive data and results
        /// </summary>
        /// <remarks>Get game drives</remarks>
        /// <param name="year">Year filter</param>
        /// <param name="seasonType">Season type filter</param>
        /// <param name="week">Week filter</param>
        /// <param name="team">Team filter</param>
        /// <param name="offense">Offensive team filter</param>
        /// <param name="defense">Defensive team filter</param>
        /// <param name="conference">Conference filter</param>
        /// <param name="offenseConference">Offensive conference filter</param>
        /// <param name="defenseConference">Defensive conference filter</param>
        /// <param name="classification">Division classification filter (fbs/fcs/ii/iii)</param>
        /// <response code="200">successful operation</response>
        [HttpGet]
        [Route("/drives")]
        [Authorize(Policy = "ApiKeyAuth")]
        [ValidateModelState]
        [SwaggerOperation("GetDrives")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Drive>), description: "successful operation")]
        public virtual IActionResult GetDrives([FromQuery (Name = "year")][Required()]int year, [FromQuery (Name = "seasonType")]string seasonType, [FromQuery (Name = "week")][Range(1, 16)]int? week, [FromQuery (Name = "team")]string team, [FromQuery (Name = "offense")]string offense, [FromQuery (Name = "defense")]string defense, [FromQuery (Name = "conference")]string conference, [FromQuery (Name = "offenseConference")]string offenseConference, [FromQuery (Name = "defenseConference")]string defenseConference, [FromQuery (Name = "classification")]string classification)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Drive>));
            string exampleJson = null;
            exampleJson = "[ {\n  \"scoring\" : true,\n  \"plays\" : 4,\n  \"offense\" : \"offense\",\n  \"start_offense_score\" : 1,\n  \"end_yardline\" : 7,\n  \"start_defense_score\" : 7,\n  \"end_time\" : {\n    \"seconds\" : 2,\n    \"minutes\" : 5\n  },\n  \"is_home_offense\" : true,\n  \"drive_result\" : \"drive_result\",\n  \"start_period\" : 1,\n  \"offense_conference\" : \"offense_conference\",\n  \"end_period\" : 5,\n  \"yards\" : 7,\n  \"end_offense_score\" : 1,\n  \"start_yardline\" : 1,\n  \"start_time\" : {\n    \"seconds\" : 2,\n    \"minutes\" : 5\n  },\n  \"defense\" : \"defense\",\n  \"defense_conference\" : \"defense_conference\",\n  \"drive_number\" : 0,\n  \"end_defense_score\" : 6,\n  \"id\" : 2,\n  \"end_yards_to_goal\" : 9,\n  \"game_id\" : 3,\n  \"start_yards_to_goal\" : 6\n}, {\n  \"scoring\" : true,\n  \"plays\" : 4,\n  \"offense\" : \"offense\",\n  \"start_offense_score\" : 1,\n  \"end_yardline\" : 7,\n  \"start_defense_score\" : 7,\n  \"end_time\" : {\n    \"seconds\" : 2,\n    \"minutes\" : 5\n  },\n  \"is_home_offense\" : true,\n  \"drive_result\" : \"drive_result\",\n  \"start_period\" : 1,\n  \"offense_conference\" : \"offense_conference\",\n  \"end_period\" : 5,\n  \"yards\" : 7,\n  \"end_offense_score\" : 1,\n  \"start_yardline\" : 1,\n  \"start_time\" : {\n    \"seconds\" : 2,\n    \"minutes\" : 5\n  },\n  \"defense\" : \"defense\",\n  \"defense_conference\" : \"defense_conference\",\n  \"drive_number\" : 0,\n  \"end_defense_score\" : 6,\n  \"id\" : 2,\n  \"end_yards_to_goal\" : 9,\n  \"game_id\" : 3,\n  \"start_yards_to_goal\" : 6\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<Drive>>(exampleJson)
            : default(List<Drive>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
