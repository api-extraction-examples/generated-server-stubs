/*
 * Radio & Music Services
 *
 * We encapsulate Radio & Music business logic for iPlayer Radio and BBC Music products on all platforms. We add value by reliably providing the right blend of metadata needed by clients.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class MusicApiController : ControllerBase
    { 
        /// <summary>
        /// Favourite Track or Clip
        /// </summary>
        /// <remarks>Delete track or clip from a BBC Music user favourites. </remarks>
        /// <param name="authorization">Bearer OAUTH_TOKEN</param>
        /// <param name="xAuthenticationProvider">Authentication type</param>
        /// <param name="xAPIKey">API_KEY</param>
        /// <param name="type">Supported Music favourite types: Clips or Tracks</param>
        /// <param name="id">Clip PID or Track ID</param>
        /// <response code="200">OK</response>
        /// <response code="0">Unexpected error</response>
        [HttpDelete]
        [Route("/my/music/favourites/{type}/{id}")]
        [ValidateModelState]
        [SwaggerOperation("DeletePersonalisedMusicFavouritesByTypeById")]
        [SwaggerResponse(statusCode: 200, type: typeof(PersonalisedMusicSuccess), description: "OK")]
        [SwaggerResponse(statusCode: 0, type: typeof(PersonalisedMusicErrorResponse), description: "Unexpected error")]
        public virtual IActionResult DeletePersonalisedMusicFavouritesByTypeById([FromHeader (Name = "Authorization")][Required()]string authorization, [FromHeader (Name = "X-Authentication-Provider")][Required()]string xAuthenticationProvider, [FromHeader (Name = "X-API-Key")][Required()]string xAPIKey, [FromRoute (Name = "type")][Required]string type, [FromRoute (Name = "id")][Required]string id)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PersonalisedMusicSuccess));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(PersonalisedMusicErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"schema\" : \"schema\",\n  \"method\" : \"method\",\n  \"replied_at\" : \"replied_at\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PersonalisedMusicSuccess>(exampleJson)
            : default(PersonalisedMusicSuccess);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Followed Network, Category, Artist, Playlist and Genre
        /// </summary>
        /// <remarks>Remove a single network, category, artist, playlist, network, genre or service entity is in a users follows </remarks>
        /// <param name="authorization">Bearer OAUTH_TOKEN</param>
        /// <param name="xAuthenticationProvider">Authentication type</param>
        /// <param name="xAPIKey">API_KEY</param>
        /// <param name="type">Supported Music follows types: Playlists, Services, Genres &amp; Artists</param>
        /// <param name="id">Playlists, Services, Networks, Genres, Categories or Artists ID</param>
        /// <param name="musicData">Omits music data from the response, defaults to true</param>
        /// <param name="musicContext">Specify context to be passed to Music API</param>
        /// <param name="musicWithinUk">Specify location to be passed to Music API</param>
        /// <response code="200">OK</response>
        /// <response code="0">Unexpected error</response>
        [HttpDelete]
        [Route("/my/music/follows/{type}/{id}")]
        [ValidateModelState]
        [SwaggerOperation("DeletePersonalisedMusicFollowsByTypeById")]
        [SwaggerResponse(statusCode: 200, type: typeof(PersonalisedMusicSuccess), description: "OK")]
        [SwaggerResponse(statusCode: 0, type: typeof(PersonalisedMusicErrorResponse), description: "Unexpected error")]
        public virtual IActionResult DeletePersonalisedMusicFollowsByTypeById([FromHeader (Name = "Authorization")][Required()]string authorization, [FromHeader (Name = "X-Authentication-Provider")][Required()]string xAuthenticationProvider, [FromHeader (Name = "X-API-Key")][Required()]string xAPIKey, [FromRoute (Name = "type")][Required]string type, [FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "music-data")]bool? musicData, [FromQuery (Name = "music_context")]string musicContext, [FromQuery (Name = "music_within_uk")]bool? musicWithinUk)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PersonalisedMusicSuccess));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(PersonalisedMusicErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"schema\" : \"schema\",\n  \"method\" : \"method\",\n  \"replied_at\" : \"replied_at\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PersonalisedMusicSuccess>(exampleJson)
            : default(PersonalisedMusicSuccess);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Single Artist Popularity
        /// </summary>
        /// <remarks>Popularity Artist By Id </remarks>
        /// <param name="xAPIKey">API_KEY</param>
        /// <param name="id">MusicBrainz Id - Used to get single resource score</param>
        /// <param name="since">ISO 8601 Date yyyy-mm-dd.  Returns items between given time period and now</param>
        /// <param name="until">ISO 8601 Date yyyy-mm-dd.  Returns items between given &#39;since&#39; and &#39;until&#39; date params</param>
        /// <param name="decomposed">In addition to the overall score, return a list of scores broken down by day N.B Must be used in conjunction with since and/or until and since is &gt;&#x3D; 31 days</param>
        /// <response code="200">OK</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/music/popular/artists/{id}")]
        [ValidateModelState]
        [SwaggerOperation("GetMusicPopularArtistById")]
        [SwaggerResponse(statusCode: 200, type: typeof(MusicPopularityArtists), description: "OK")]
        [SwaggerResponse(statusCode: 0, type: typeof(MusicPopularityError), description: "Unexpected error")]
        public virtual IActionResult GetMusicPopularArtistById([FromHeader (Name = "X-API-Key")][Required()]string xAPIKey, [FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "since")]string since, [FromQuery (Name = "until")]string until, [FromQuery (Name = "decomposed")]bool? decomposed)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(MusicPopularityArtists));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(MusicPopularityError));
            string exampleJson = null;
            exampleJson = "{\n  \"repliedAt\" : \"repliedAt\",\n  \"schema\" : \"schema\",\n  \"total\" : 5,\n  \"method\" : \"method\",\n  \"offset\" : 6,\n  \"limit\" : 0,\n  \"results\" : [ {\n    \"score\" : 1,\n    \"gid\" : \"gid\",\n    \"imagePid\" : \"imagePid\",\n    \"sortName\" : \"sortName\",\n    \"name\" : \"name\",\n    \"id\" : \"id\"\n  }, {\n    \"score\" : 1,\n    \"gid\" : \"gid\",\n    \"imagePid\" : \"imagePid\",\n    \"sortName\" : \"sortName\",\n    \"name\" : \"name\",\n    \"id\" : \"id\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<MusicPopularityArtists>(exampleJson)
            : default(MusicPopularityArtists);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Popular Artists
        /// </summary>
        /// <remarks>List of Most Popular artists from BBC Music. </remarks>
        /// <param name="xAPIKey">API_KEY</param>
        /// <param name="since">ISO 8601 Date yyyy-mm-dd.  Returns items between given time period and now</param>
        /// <param name="until">ISO 8601 Date yyyy-mm-dd.  Returns items between given &#39;since&#39; and &#39;until&#39; date params</param>
        /// <param name="decomposed">In addition to the overall score, return a list of scores broken down by day N.B Must be used in conjunction with since and/or until and since is &gt;&#x3D; 31 days</param>
        /// <param name="offset">Paginated results offset</param>
        /// <param name="limit">Paginated results limit</param>
        /// <response code="200">OK</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/music/popular/artists")]
        [ValidateModelState]
        [SwaggerOperation("GetMusicPopularArtists")]
        [SwaggerResponse(statusCode: 200, type: typeof(MusicPopularityArtists), description: "OK")]
        [SwaggerResponse(statusCode: 0, type: typeof(MusicPopularityError), description: "Unexpected error")]
        public virtual IActionResult GetMusicPopularArtists([FromHeader (Name = "X-API-Key")][Required()]string xAPIKey, [FromQuery (Name = "since")]string since, [FromQuery (Name = "until")]string until, [FromQuery (Name = "decomposed")]bool? decomposed, [FromQuery (Name = "offset")]int? offset, [FromQuery (Name = "limit")]int? limit)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(MusicPopularityArtists));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(MusicPopularityError));
            string exampleJson = null;
            exampleJson = "{\n  \"repliedAt\" : \"repliedAt\",\n  \"schema\" : \"schema\",\n  \"total\" : 5,\n  \"method\" : \"method\",\n  \"offset\" : 6,\n  \"limit\" : 0,\n  \"results\" : [ {\n    \"score\" : 1,\n    \"gid\" : \"gid\",\n    \"imagePid\" : \"imagePid\",\n    \"sortName\" : \"sortName\",\n    \"name\" : \"name\",\n    \"id\" : \"id\"\n  }, {\n    \"score\" : 1,\n    \"gid\" : \"gid\",\n    \"imagePid\" : \"imagePid\",\n    \"sortName\" : \"sortName\",\n    \"name\" : \"name\",\n    \"id\" : \"id\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<MusicPopularityArtists>(exampleJson)
            : default(MusicPopularityArtists);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Single Playlist Popularity
        /// </summary>
        /// <remarks>Popular playlist by Id </remarks>
        /// <param name="xAPIKey">API_KEY</param>
        /// <param name="id">BBC Music Playlist Id - Used to get single resource score</param>
        /// <param name="since">ISO 8601 Date yyyy-mm-dd.  Returns items between given time period and now</param>
        /// <param name="until">ISO 8601 Date yyyy-mm-dd.  Returns items between given &#39;since&#39; and &#39;until&#39; date params</param>
        /// <param name="decomposed">In addition to the overall score, return a list of scores broken down by day N.B Must be used in conjunction with since and/or until and since is &gt;&#x3D; 31 days</param>
        /// <response code="200">OK</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/music/popular/playlists/{id}")]
        [ValidateModelState]
        [SwaggerOperation("GetMusicPopularPlaylistById")]
        [SwaggerResponse(statusCode: 200, type: typeof(MusicPopularityPlaylists), description: "OK")]
        [SwaggerResponse(statusCode: 0, type: typeof(MusicPopularityError), description: "Unexpected error")]
        public virtual IActionResult GetMusicPopularPlaylistById([FromHeader (Name = "X-API-Key")][Required()]string xAPIKey, [FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "since")]string since, [FromQuery (Name = "until")]string until, [FromQuery (Name = "decomposed")]bool? decomposed)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(MusicPopularityPlaylists));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(MusicPopularityError));
            string exampleJson = null;
            exampleJson = "{\n  \"repliedAt\" : \"repliedAt\",\n  \"schema\" : \"schema\",\n  \"total\" : 5,\n  \"method\" : \"method\",\n  \"offset\" : 6,\n  \"limit\" : 0,\n  \"results\" : [ {\n    \"commentsEnabled\" : true,\n    \"mood\" : \"mood\",\n    \"visibility\" : \"visibility\",\n    \"kind\" : \"kind\",\n    \"description\" : \"description\",\n    \"wideImageUrl\" : \"wideImageUrl\",\n    \"title\" : \"title\",\n    \"wideImagePid\" : \"wideImagePid\",\n    \"oneOff\" : true,\n    \"score\" : 1,\n    \"imagePid\" : \"imagePid\",\n    \"externalPartners\" : [ {\n      \"type\" : \"type\",\n      \"value\" : \"value\"\n    }, {\n      \"type\" : \"type\",\n      \"value\" : \"value\"\n    } ],\n    \"imageUrl\" : \"imageUrl\",\n    \"genre\" : \"genre\",\n    \"playlistPlaybackType\" : \"playlistPlaybackType\",\n    \"categories\" : [ \"categories\", \"categories\" ],\n    \"id\" : \"id\",\n    \"serviceId\" : \"serviceId\",\n    \"updatedAt\" : \"updatedAt\"\n  }, {\n    \"commentsEnabled\" : true,\n    \"mood\" : \"mood\",\n    \"visibility\" : \"visibility\",\n    \"kind\" : \"kind\",\n    \"description\" : \"description\",\n    \"wideImageUrl\" : \"wideImageUrl\",\n    \"title\" : \"title\",\n    \"wideImagePid\" : \"wideImagePid\",\n    \"oneOff\" : true,\n    \"score\" : 1,\n    \"imagePid\" : \"imagePid\",\n    \"externalPartners\" : [ {\n      \"type\" : \"type\",\n      \"value\" : \"value\"\n    }, {\n      \"type\" : \"type\",\n      \"value\" : \"value\"\n    } ],\n    \"imageUrl\" : \"imageUrl\",\n    \"genre\" : \"genre\",\n    \"playlistPlaybackType\" : \"playlistPlaybackType\",\n    \"categories\" : [ \"categories\", \"categories\" ],\n    \"id\" : \"id\",\n    \"serviceId\" : \"serviceId\",\n    \"updatedAt\" : \"updatedAt\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<MusicPopularityPlaylists>(exampleJson)
            : default(MusicPopularityPlaylists);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Popular Playlists
        /// </summary>
        /// <remarks>List of Most Popular playlists from BBC Music. </remarks>
        /// <param name="xAPIKey">API_KEY</param>
        /// <param name="since">ISO 8601 Date yyyy-mm-dd.  Returns items between given time period and now</param>
        /// <param name="until">ISO 8601 Date yyyy-mm-dd.  Returns items between given &#39;since&#39; and &#39;until&#39; date params</param>
        /// <param name="decomposed">In addition to the overall score, return a list of scores broken down by day N.B Must be used in conjunction with since and/or until and since is &gt;&#x3D; 31 days</param>
        /// <param name="offset">Paginated results offset</param>
        /// <param name="limit">Paginated results limit</param>
        /// <response code="200">OK</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/music/popular/playlists")]
        [ValidateModelState]
        [SwaggerOperation("GetMusicPopularPlaylists")]
        [SwaggerResponse(statusCode: 200, type: typeof(MusicPopularityPlaylists), description: "OK")]
        [SwaggerResponse(statusCode: 0, type: typeof(MusicPopularityError), description: "Unexpected error")]
        public virtual IActionResult GetMusicPopularPlaylists([FromHeader (Name = "X-API-Key")][Required()]string xAPIKey, [FromQuery (Name = "since")]string since, [FromQuery (Name = "until")]string until, [FromQuery (Name = "decomposed")]bool? decomposed, [FromQuery (Name = "offset")]int? offset, [FromQuery (Name = "limit")]int? limit)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(MusicPopularityPlaylists));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(MusicPopularityError));
            string exampleJson = null;
            exampleJson = "{\n  \"repliedAt\" : \"repliedAt\",\n  \"schema\" : \"schema\",\n  \"total\" : 5,\n  \"method\" : \"method\",\n  \"offset\" : 6,\n  \"limit\" : 0,\n  \"results\" : [ {\n    \"commentsEnabled\" : true,\n    \"mood\" : \"mood\",\n    \"visibility\" : \"visibility\",\n    \"kind\" : \"kind\",\n    \"description\" : \"description\",\n    \"wideImageUrl\" : \"wideImageUrl\",\n    \"title\" : \"title\",\n    \"wideImagePid\" : \"wideImagePid\",\n    \"oneOff\" : true,\n    \"score\" : 1,\n    \"imagePid\" : \"imagePid\",\n    \"externalPartners\" : [ {\n      \"type\" : \"type\",\n      \"value\" : \"value\"\n    }, {\n      \"type\" : \"type\",\n      \"value\" : \"value\"\n    } ],\n    \"imageUrl\" : \"imageUrl\",\n    \"genre\" : \"genre\",\n    \"playlistPlaybackType\" : \"playlistPlaybackType\",\n    \"categories\" : [ \"categories\", \"categories\" ],\n    \"id\" : \"id\",\n    \"serviceId\" : \"serviceId\",\n    \"updatedAt\" : \"updatedAt\"\n  }, {\n    \"commentsEnabled\" : true,\n    \"mood\" : \"mood\",\n    \"visibility\" : \"visibility\",\n    \"kind\" : \"kind\",\n    \"description\" : \"description\",\n    \"wideImageUrl\" : \"wideImageUrl\",\n    \"title\" : \"title\",\n    \"wideImagePid\" : \"wideImagePid\",\n    \"oneOff\" : true,\n    \"score\" : 1,\n    \"imagePid\" : \"imagePid\",\n    \"externalPartners\" : [ {\n      \"type\" : \"type\",\n      \"value\" : \"value\"\n    }, {\n      \"type\" : \"type\",\n      \"value\" : \"value\"\n    } ],\n    \"imageUrl\" : \"imageUrl\",\n    \"genre\" : \"genre\",\n    \"playlistPlaybackType\" : \"playlistPlaybackType\",\n    \"categories\" : [ \"categories\", \"categories\" ],\n    \"id\" : \"id\",\n    \"serviceId\" : \"serviceId\",\n    \"updatedAt\" : \"updatedAt\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<MusicPopularityPlaylists>(exampleJson)
            : default(MusicPopularityPlaylists);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Single Track Popularity
        /// </summary>
        /// <remarks>Popular Track for BBC Music </remarks>
        /// <param name="xAPIKey">API_KEY</param>
        /// <param name="id">BBC Music Track Id - Used to get single resource score</param>
        /// <param name="since">ISO 8601 Date yyyy-mm-dd.  Returns items between given time period and now</param>
        /// <param name="until">ISO 8601 Date yyyy-mm-dd.  Returns items between given &#39;since&#39; and &#39;until&#39; date params</param>
        /// <param name="network">Return items with given Network ID</param>
        /// <param name="programme">Items with given Programme Pid</param>
        /// <param name="artist">MusicBrainz artist ID</param>
        /// <param name="decomposed">In addition to the overall score, return a list of scores broken down by day N.B Must be used in conjunction with since and/or until and since is &gt;&#x3D; 31 days</param>
        /// <response code="200">OK</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/music/popular/tracks/{id}")]
        [ValidateModelState]
        [SwaggerOperation("GetMusicPopularTrackById")]
        [SwaggerResponse(statusCode: 200, type: typeof(MusicPopularityTracks), description: "OK")]
        [SwaggerResponse(statusCode: 0, type: typeof(MusicPopularityError), description: "Unexpected error")]
        public virtual IActionResult GetMusicPopularTrackById([FromHeader (Name = "X-API-Key")][Required()]string xAPIKey, [FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "since")]string since, [FromQuery (Name = "until")]string until, [FromQuery (Name = "network")]string network, [FromQuery (Name = "programme")]string programme, [FromQuery (Name = "artist")]string artist, [FromQuery (Name = "decomposed")]bool? decomposed)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(MusicPopularityTracks));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(MusicPopularityError));
            string exampleJson = null;
            exampleJson = "{\n  \"repliedAt\" : \"repliedAt\",\n  \"schema\" : \"schema\",\n  \"total\" : 5,\n  \"method\" : \"method\",\n  \"offset\" : 6,\n  \"limit\" : 0,\n  \"results\" : [ {\n    \"radioEdit\" : true,\n    \"artistGid\" : \"artistGid\",\n    \"recordAudio\" : [ {\n      \"duration\" : 1,\n      \"identifier\" : \"identifier\",\n      \"audioType\" : \"audioType\",\n      \"resourceType\" : \"resourceType\"\n    }, {\n      \"duration\" : 1,\n      \"identifier\" : \"identifier\",\n      \"audioType\" : \"audioType\",\n      \"resourceType\" : \"resourceType\"\n    } ],\n    \"album\" : \"album\",\n    \"classical\" : true,\n    \"preferredRecordAudio\" : {\n      \"duration\" : 1,\n      \"identifier\" : \"identifier\",\n      \"audioType\" : \"audioType\",\n      \"resourceType\" : \"resourceType\"\n    },\n    \"title\" : \"title\",\n    \"type\" : \"type\",\n    \"mergedIds\" : [ \"mergedIds\", \"mergedIds\" ],\n    \"recordImageHref\" : \"recordImageHref\",\n    \"score\" : 5,\n    \"artists\" : [ {\n      \"gid\" : \"gid\",\n      \"imagePid\" : \"imagePid\",\n      \"role\" : \"role\",\n      \"sortName\" : \"sortName\",\n      \"name\" : \"name\"\n    }, {\n      \"gid\" : \"gid\",\n      \"imagePid\" : \"imagePid\",\n      \"role\" : \"role\",\n      \"sortName\" : \"sortName\",\n      \"name\" : \"name\"\n    } ],\n    \"preferredMultiplayRecordAudio\" : {\n      \"duration\" : 1,\n      \"identifier\" : \"identifier\",\n      \"audioType\" : \"audioType\",\n      \"resourceType\" : \"resourceType\"\n    },\n    \"artistName\" : \"artistName\",\n    \"id\" : \"id\",\n    \"baseTitle\" : \"baseTitle\",\n    \"recordImagePid\" : \"recordImagePid\"\n  }, {\n    \"radioEdit\" : true,\n    \"artistGid\" : \"artistGid\",\n    \"recordAudio\" : [ {\n      \"duration\" : 1,\n      \"identifier\" : \"identifier\",\n      \"audioType\" : \"audioType\",\n      \"resourceType\" : \"resourceType\"\n    }, {\n      \"duration\" : 1,\n      \"identifier\" : \"identifier\",\n      \"audioType\" : \"audioType\",\n      \"resourceType\" : \"resourceType\"\n    } ],\n    \"album\" : \"album\",\n    \"classical\" : true,\n    \"preferredRecordAudio\" : {\n      \"duration\" : 1,\n      \"identifier\" : \"identifier\",\n      \"audioType\" : \"audioType\",\n      \"resourceType\" : \"resourceType\"\n    },\n    \"title\" : \"title\",\n    \"type\" : \"type\",\n    \"mergedIds\" : [ \"mergedIds\", \"mergedIds\" ],\n    \"recordImageHref\" : \"recordImageHref\",\n    \"score\" : 5,\n    \"artists\" : [ {\n      \"gid\" : \"gid\",\n      \"imagePid\" : \"imagePid\",\n      \"role\" : \"role\",\n      \"sortName\" : \"sortName\",\n      \"name\" : \"name\"\n    }, {\n      \"gid\" : \"gid\",\n      \"imagePid\" : \"imagePid\",\n      \"role\" : \"role\",\n      \"sortName\" : \"sortName\",\n      \"name\" : \"name\"\n    } ],\n    \"preferredMultiplayRecordAudio\" : {\n      \"duration\" : 1,\n      \"identifier\" : \"identifier\",\n      \"audioType\" : \"audioType\",\n      \"resourceType\" : \"resourceType\"\n    },\n    \"artistName\" : \"artistName\",\n    \"id\" : \"id\",\n    \"baseTitle\" : \"baseTitle\",\n    \"recordImagePid\" : \"recordImagePid\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<MusicPopularityTracks>(exampleJson)
            : default(MusicPopularityTracks);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Popular Tracks
        /// </summary>
        /// <remarks>List of popular tracks for BBC Music. Filter by time, network, artist, playlist or programme. </remarks>
        /// <param name="xAPIKey">API_KEY</param>
        /// <param name="since">ISO 8601 Date yyyy-mm-dd.  Returns items between given time period and now</param>
        /// <param name="until">ISO 8601 Date yyyy-mm-dd.  Returns items between given &#39;since&#39; and &#39;until&#39; date params</param>
        /// <param name="network">Return items with given Network ID</param>
        /// <param name="programme">Items with given Programme Pid</param>
        /// <param name="artist">MusicBrainz artist ID</param>
        /// <param name="decomposed">In addition to the overall score, return a list of scores broken down by day N.B Must be used in conjunction with since and/or until and since is &gt;&#x3D; 31 days</param>
        /// <param name="offset">Paginated results offset</param>
        /// <param name="limit">Paginated results limit</param>
        /// <response code="200">OK</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/music/popular/tracks")]
        [ValidateModelState]
        [SwaggerOperation("GetMusicPopularTracks")]
        [SwaggerResponse(statusCode: 200, type: typeof(MusicPopularityTracks), description: "OK")]
        [SwaggerResponse(statusCode: 0, type: typeof(MusicPopularityError), description: "Unexpected error")]
        public virtual IActionResult GetMusicPopularTracks([FromHeader (Name = "X-API-Key")][Required()]string xAPIKey, [FromQuery (Name = "since")]string since, [FromQuery (Name = "until")]string until, [FromQuery (Name = "network")]string network, [FromQuery (Name = "programme")]string programme, [FromQuery (Name = "artist")]string artist, [FromQuery (Name = "decomposed")]bool? decomposed, [FromQuery (Name = "offset")]int? offset, [FromQuery (Name = "limit")]int? limit)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(MusicPopularityTracks));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(MusicPopularityError));
            string exampleJson = null;
            exampleJson = "{\n  \"repliedAt\" : \"repliedAt\",\n  \"schema\" : \"schema\",\n  \"total\" : 5,\n  \"method\" : \"method\",\n  \"offset\" : 6,\n  \"limit\" : 0,\n  \"results\" : [ {\n    \"radioEdit\" : true,\n    \"artistGid\" : \"artistGid\",\n    \"recordAudio\" : [ {\n      \"duration\" : 1,\n      \"identifier\" : \"identifier\",\n      \"audioType\" : \"audioType\",\n      \"resourceType\" : \"resourceType\"\n    }, {\n      \"duration\" : 1,\n      \"identifier\" : \"identifier\",\n      \"audioType\" : \"audioType\",\n      \"resourceType\" : \"resourceType\"\n    } ],\n    \"album\" : \"album\",\n    \"classical\" : true,\n    \"preferredRecordAudio\" : {\n      \"duration\" : 1,\n      \"identifier\" : \"identifier\",\n      \"audioType\" : \"audioType\",\n      \"resourceType\" : \"resourceType\"\n    },\n    \"title\" : \"title\",\n    \"type\" : \"type\",\n    \"mergedIds\" : [ \"mergedIds\", \"mergedIds\" ],\n    \"recordImageHref\" : \"recordImageHref\",\n    \"score\" : 5,\n    \"artists\" : [ {\n      \"gid\" : \"gid\",\n      \"imagePid\" : \"imagePid\",\n      \"role\" : \"role\",\n      \"sortName\" : \"sortName\",\n      \"name\" : \"name\"\n    }, {\n      \"gid\" : \"gid\",\n      \"imagePid\" : \"imagePid\",\n      \"role\" : \"role\",\n      \"sortName\" : \"sortName\",\n      \"name\" : \"name\"\n    } ],\n    \"preferredMultiplayRecordAudio\" : {\n      \"duration\" : 1,\n      \"identifier\" : \"identifier\",\n      \"audioType\" : \"audioType\",\n      \"resourceType\" : \"resourceType\"\n    },\n    \"artistName\" : \"artistName\",\n    \"id\" : \"id\",\n    \"baseTitle\" : \"baseTitle\",\n    \"recordImagePid\" : \"recordImagePid\"\n  }, {\n    \"radioEdit\" : true,\n    \"artistGid\" : \"artistGid\",\n    \"recordAudio\" : [ {\n      \"duration\" : 1,\n      \"identifier\" : \"identifier\",\n      \"audioType\" : \"audioType\",\n      \"resourceType\" : \"resourceType\"\n    }, {\n      \"duration\" : 1,\n      \"identifier\" : \"identifier\",\n      \"audioType\" : \"audioType\",\n      \"resourceType\" : \"resourceType\"\n    } ],\n    \"album\" : \"album\",\n    \"classical\" : true,\n    \"preferredRecordAudio\" : {\n      \"duration\" : 1,\n      \"identifier\" : \"identifier\",\n      \"audioType\" : \"audioType\",\n      \"resourceType\" : \"resourceType\"\n    },\n    \"title\" : \"title\",\n    \"type\" : \"type\",\n    \"mergedIds\" : [ \"mergedIds\", \"mergedIds\" ],\n    \"recordImageHref\" : \"recordImageHref\",\n    \"score\" : 5,\n    \"artists\" : [ {\n      \"gid\" : \"gid\",\n      \"imagePid\" : \"imagePid\",\n      \"role\" : \"role\",\n      \"sortName\" : \"sortName\",\n      \"name\" : \"name\"\n    }, {\n      \"gid\" : \"gid\",\n      \"imagePid\" : \"imagePid\",\n      \"role\" : \"role\",\n      \"sortName\" : \"sortName\",\n      \"name\" : \"name\"\n    } ],\n    \"preferredMultiplayRecordAudio\" : {\n      \"duration\" : 1,\n      \"identifier\" : \"identifier\",\n      \"audioType\" : \"audioType\",\n      \"resourceType\" : \"resourceType\"\n    },\n    \"artistName\" : \"artistName\",\n    \"id\" : \"id\",\n    \"baseTitle\" : \"baseTitle\",\n    \"recordImagePid\" : \"recordImagePid\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<MusicPopularityTracks>(exampleJson)
            : default(MusicPopularityTracks);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Favourite Tracks or Clips
        /// </summary>
        /// <remarks>List of favourited tracks and clips for a given user for BBC Music. </remarks>
        /// <param name="authorization">Bearer OAUTH_TOKEN</param>
        /// <param name="xAuthenticationProvider">Authentication type</param>
        /// <param name="xAPIKey">API_KEY</param>
        /// <param name="offset">Paginated results offset</param>
        /// <param name="limit">Paginated results limit</param>
        /// <param name="action">Filters activities based on the type of action</param>
        /// <param name="musicData">Omits music data from the response, defaults to true</param>
        /// <response code="200">OK</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/my/music/favourites")]
        [ValidateModelState]
        [SwaggerOperation("GetPersonalisedMusicFavourites")]
        [SwaggerResponse(statusCode: 200, type: typeof(PersonalisedMusicResponse), description: "OK")]
        [SwaggerResponse(statusCode: 0, type: typeof(PersonalisedMusicErrorResponse), description: "Unexpected error")]
        public virtual IActionResult GetPersonalisedMusicFavourites([FromHeader (Name = "Authorization")][Required()]string authorization, [FromHeader (Name = "X-Authentication-Provider")][Required()]string xAuthenticationProvider, [FromHeader (Name = "X-API-Key")][Required()]string xAPIKey, [FromQuery (Name = "offset")]int? offset, [FromQuery (Name = "limit")]int? limit, [FromQuery (Name = "action")]string action, [FromQuery (Name = "music-data")]bool? musicData)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PersonalisedMusicResponse));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(PersonalisedMusicErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"schema\" : \"schema\",\n  \"total\" : 5,\n  \"method\" : \"method\",\n  \"offset\" : 6,\n  \"limit\" : 0,\n  \"replied_at\" : \"replied_at\",\n  \"results\" : [ {\n    \"urn\" : \"urn\",\n    \"added_at\" : \"added_at\",\n    \"activity\" : \"activity\",\n    \"data\" : [ {\n      \"playlist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"updated_at\" : \"updated_at\",\n        \"playback_type\" : \"playback_type\",\n        \"service_id\" : \"service_id\",\n        \"description\" : \"description\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"starts_at\" : \"starts_at\",\n          \"expires_at\" : \"expires_at\",\n          \"warnings\" : [ \"warnings\", \"warnings\" ],\n          \"id\" : \"id\"\n        },\n        \"tracks\" : {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"contributions\" : [ {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }, {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          } ],\n          \"id\" : \"id\",\n          \"media\" : [ {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          }, {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          } ],\n          \"title\" : \"title\",\n          \"type\" : \"type\",\n          \"version\" : {\n            \"duration\" : \"duration\",\n            \"vpid\" : \"vpid\",\n            \"classical\" : true,\n            \"radio\" : true\n          }\n        }\n      },\n      \"artist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"role\" : \"role\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      },\n      \"service\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"genre\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"track\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"contributions\" : [ {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        }, {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        } ],\n        \"id\" : \"id\",\n        \"media\" : [ {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        }, {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        } ],\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        }\n      },\n      \"clip\" : {\n        \"masterbrandMid\" : \"masterbrandMid\",\n        \"parentProgramme\" : {\n          \"entityType\" : \"entityType\",\n          \"pid\" : \"pid\",\n          \"title\" : \"title\"\n        },\n        \"endDate\" : \"endDate\",\n        \"entityType\" : \"entityType\",\n        \"imageUrl\" : \"imageUrl\",\n        \"mediaType\" : \"mediaType\",\n        \"pid\" : \"pid\",\n        \"contributors\" : [ \"contributors\", \"contributors\" ],\n        \"synopsis\" : \"synopsis\",\n        \"title\" : \"title\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        },\n        \"startDate\" : \"startDate\"\n      }\n    }, {\n      \"playlist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"updated_at\" : \"updated_at\",\n        \"playback_type\" : \"playback_type\",\n        \"service_id\" : \"service_id\",\n        \"description\" : \"description\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"starts_at\" : \"starts_at\",\n          \"expires_at\" : \"expires_at\",\n          \"warnings\" : [ \"warnings\", \"warnings\" ],\n          \"id\" : \"id\"\n        },\n        \"tracks\" : {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"contributions\" : [ {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }, {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          } ],\n          \"id\" : \"id\",\n          \"media\" : [ {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          }, {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          } ],\n          \"title\" : \"title\",\n          \"type\" : \"type\",\n          \"version\" : {\n            \"duration\" : \"duration\",\n            \"vpid\" : \"vpid\",\n            \"classical\" : true,\n            \"radio\" : true\n          }\n        }\n      },\n      \"artist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"role\" : \"role\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      },\n      \"service\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"genre\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"track\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"contributions\" : [ {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        }, {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        } ],\n        \"id\" : \"id\",\n        \"media\" : [ {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        }, {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        } ],\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        }\n      },\n      \"clip\" : {\n        \"masterbrandMid\" : \"masterbrandMid\",\n        \"parentProgramme\" : {\n          \"entityType\" : \"entityType\",\n          \"pid\" : \"pid\",\n          \"title\" : \"title\"\n        },\n        \"endDate\" : \"endDate\",\n        \"entityType\" : \"entityType\",\n        \"imageUrl\" : \"imageUrl\",\n        \"mediaType\" : \"mediaType\",\n        \"pid\" : \"pid\",\n        \"contributors\" : [ \"contributors\", \"contributors\" ],\n        \"synopsis\" : \"synopsis\",\n        \"title\" : \"title\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        },\n        \"startDate\" : \"startDate\"\n      }\n    } ],\n    \"domain\" : \"domain\",\n    \"meta_data\" : {\n      \"key\" : \"key\"\n    },\n    \"action\" : \"action\",\n    \"id\" : \"id\",\n    \"type\" : \"type\"\n  }, {\n    \"urn\" : \"urn\",\n    \"added_at\" : \"added_at\",\n    \"activity\" : \"activity\",\n    \"data\" : [ {\n      \"playlist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"updated_at\" : \"updated_at\",\n        \"playback_type\" : \"playback_type\",\n        \"service_id\" : \"service_id\",\n        \"description\" : \"description\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"starts_at\" : \"starts_at\",\n          \"expires_at\" : \"expires_at\",\n          \"warnings\" : [ \"warnings\", \"warnings\" ],\n          \"id\" : \"id\"\n        },\n        \"tracks\" : {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"contributions\" : [ {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }, {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          } ],\n          \"id\" : \"id\",\n          \"media\" : [ {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          }, {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          } ],\n          \"title\" : \"title\",\n          \"type\" : \"type\",\n          \"version\" : {\n            \"duration\" : \"duration\",\n            \"vpid\" : \"vpid\",\n            \"classical\" : true,\n            \"radio\" : true\n          }\n        }\n      },\n      \"artist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"role\" : \"role\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      },\n      \"service\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"genre\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"track\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"contributions\" : [ {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        }, {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        } ],\n        \"id\" : \"id\",\n        \"media\" : [ {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        }, {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        } ],\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        }\n      },\n      \"clip\" : {\n        \"masterbrandMid\" : \"masterbrandMid\",\n        \"parentProgramme\" : {\n          \"entityType\" : \"entityType\",\n          \"pid\" : \"pid\",\n          \"title\" : \"title\"\n        },\n        \"endDate\" : \"endDate\",\n        \"entityType\" : \"entityType\",\n        \"imageUrl\" : \"imageUrl\",\n        \"mediaType\" : \"mediaType\",\n        \"pid\" : \"pid\",\n        \"contributors\" : [ \"contributors\", \"contributors\" ],\n        \"synopsis\" : \"synopsis\",\n        \"title\" : \"title\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        },\n        \"startDate\" : \"startDate\"\n      }\n    }, {\n      \"playlist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"updated_at\" : \"updated_at\",\n        \"playback_type\" : \"playback_type\",\n        \"service_id\" : \"service_id\",\n        \"description\" : \"description\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"starts_at\" : \"starts_at\",\n          \"expires_at\" : \"expires_at\",\n          \"warnings\" : [ \"warnings\", \"warnings\" ],\n          \"id\" : \"id\"\n        },\n        \"tracks\" : {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"contributions\" : [ {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }, {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          } ],\n          \"id\" : \"id\",\n          \"media\" : [ {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          }, {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          } ],\n          \"title\" : \"title\",\n          \"type\" : \"type\",\n          \"version\" : {\n            \"duration\" : \"duration\",\n            \"vpid\" : \"vpid\",\n            \"classical\" : true,\n            \"radio\" : true\n          }\n        }\n      },\n      \"artist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"role\" : \"role\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      },\n      \"service\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"genre\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"track\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"contributions\" : [ {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        }, {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        } ],\n        \"id\" : \"id\",\n        \"media\" : [ {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        }, {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        } ],\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        }\n      },\n      \"clip\" : {\n        \"masterbrandMid\" : \"masterbrandMid\",\n        \"parentProgramme\" : {\n          \"entityType\" : \"entityType\",\n          \"pid\" : \"pid\",\n          \"title\" : \"title\"\n        },\n        \"endDate\" : \"endDate\",\n        \"entityType\" : \"entityType\",\n        \"imageUrl\" : \"imageUrl\",\n        \"mediaType\" : \"mediaType\",\n        \"pid\" : \"pid\",\n        \"contributors\" : [ \"contributors\", \"contributors\" ],\n        \"synopsis\" : \"synopsis\",\n        \"title\" : \"title\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        },\n        \"startDate\" : \"startDate\"\n      }\n    } ],\n    \"domain\" : \"domain\",\n    \"meta_data\" : {\n      \"key\" : \"key\"\n    },\n    \"action\" : \"action\",\n    \"id\" : \"id\",\n    \"type\" : \"type\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PersonalisedMusicResponse>(exampleJson)
            : default(PersonalisedMusicResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Favourite Tracks or Clips by Type
        /// </summary>
        /// <remarks>List of favourited tracks or clips for a given user for BBC Music. </remarks>
        /// <param name="authorization">Bearer OAUTH_TOKEN</param>
        /// <param name="xAuthenticationProvider">Authentication type</param>
        /// <param name="xAPIKey">API_KEY</param>
        /// <param name="type">Supported Music favourite types: Clips or Tracks</param>
        /// <param name="action">Filters activities based on the type of action</param>
        /// <param name="offset">Paginated results offset</param>
        /// <param name="limit">Paginated results limit</param>
        /// <response code="200">OK</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/my/music/favourites/{type}")]
        [ValidateModelState]
        [SwaggerOperation("GetPersonalisedMusicFavouritesByType")]
        [SwaggerResponse(statusCode: 200, type: typeof(PersonalisedMusicResponse), description: "OK")]
        [SwaggerResponse(statusCode: 0, type: typeof(PersonalisedMusicErrorResponse), description: "Unexpected error")]
        public virtual IActionResult GetPersonalisedMusicFavouritesByType([FromHeader (Name = "Authorization")][Required()]string authorization, [FromHeader (Name = "X-Authentication-Provider")][Required()]string xAuthenticationProvider, [FromHeader (Name = "X-API-Key")][Required()]string xAPIKey, [FromRoute (Name = "type")][Required]string type, [FromQuery (Name = "action")]string action, [FromQuery (Name = "offset")]int? offset, [FromQuery (Name = "limit")]int? limit)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PersonalisedMusicResponse));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(PersonalisedMusicErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"schema\" : \"schema\",\n  \"total\" : 5,\n  \"method\" : \"method\",\n  \"offset\" : 6,\n  \"limit\" : 0,\n  \"replied_at\" : \"replied_at\",\n  \"results\" : [ {\n    \"urn\" : \"urn\",\n    \"added_at\" : \"added_at\",\n    \"activity\" : \"activity\",\n    \"data\" : [ {\n      \"playlist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"updated_at\" : \"updated_at\",\n        \"playback_type\" : \"playback_type\",\n        \"service_id\" : \"service_id\",\n        \"description\" : \"description\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"starts_at\" : \"starts_at\",\n          \"expires_at\" : \"expires_at\",\n          \"warnings\" : [ \"warnings\", \"warnings\" ],\n          \"id\" : \"id\"\n        },\n        \"tracks\" : {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"contributions\" : [ {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }, {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          } ],\n          \"id\" : \"id\",\n          \"media\" : [ {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          }, {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          } ],\n          \"title\" : \"title\",\n          \"type\" : \"type\",\n          \"version\" : {\n            \"duration\" : \"duration\",\n            \"vpid\" : \"vpid\",\n            \"classical\" : true,\n            \"radio\" : true\n          }\n        }\n      },\n      \"artist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"role\" : \"role\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      },\n      \"service\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"genre\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"track\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"contributions\" : [ {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        }, {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        } ],\n        \"id\" : \"id\",\n        \"media\" : [ {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        }, {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        } ],\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        }\n      },\n      \"clip\" : {\n        \"masterbrandMid\" : \"masterbrandMid\",\n        \"parentProgramme\" : {\n          \"entityType\" : \"entityType\",\n          \"pid\" : \"pid\",\n          \"title\" : \"title\"\n        },\n        \"endDate\" : \"endDate\",\n        \"entityType\" : \"entityType\",\n        \"imageUrl\" : \"imageUrl\",\n        \"mediaType\" : \"mediaType\",\n        \"pid\" : \"pid\",\n        \"contributors\" : [ \"contributors\", \"contributors\" ],\n        \"synopsis\" : \"synopsis\",\n        \"title\" : \"title\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        },\n        \"startDate\" : \"startDate\"\n      }\n    }, {\n      \"playlist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"updated_at\" : \"updated_at\",\n        \"playback_type\" : \"playback_type\",\n        \"service_id\" : \"service_id\",\n        \"description\" : \"description\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"starts_at\" : \"starts_at\",\n          \"expires_at\" : \"expires_at\",\n          \"warnings\" : [ \"warnings\", \"warnings\" ],\n          \"id\" : \"id\"\n        },\n        \"tracks\" : {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"contributions\" : [ {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }, {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          } ],\n          \"id\" : \"id\",\n          \"media\" : [ {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          }, {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          } ],\n          \"title\" : \"title\",\n          \"type\" : \"type\",\n          \"version\" : {\n            \"duration\" : \"duration\",\n            \"vpid\" : \"vpid\",\n            \"classical\" : true,\n            \"radio\" : true\n          }\n        }\n      },\n      \"artist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"role\" : \"role\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      },\n      \"service\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"genre\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"track\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"contributions\" : [ {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        }, {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        } ],\n        \"id\" : \"id\",\n        \"media\" : [ {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        }, {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        } ],\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        }\n      },\n      \"clip\" : {\n        \"masterbrandMid\" : \"masterbrandMid\",\n        \"parentProgramme\" : {\n          \"entityType\" : \"entityType\",\n          \"pid\" : \"pid\",\n          \"title\" : \"title\"\n        },\n        \"endDate\" : \"endDate\",\n        \"entityType\" : \"entityType\",\n        \"imageUrl\" : \"imageUrl\",\n        \"mediaType\" : \"mediaType\",\n        \"pid\" : \"pid\",\n        \"contributors\" : [ \"contributors\", \"contributors\" ],\n        \"synopsis\" : \"synopsis\",\n        \"title\" : \"title\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        },\n        \"startDate\" : \"startDate\"\n      }\n    } ],\n    \"domain\" : \"domain\",\n    \"meta_data\" : {\n      \"key\" : \"key\"\n    },\n    \"action\" : \"action\",\n    \"id\" : \"id\",\n    \"type\" : \"type\"\n  }, {\n    \"urn\" : \"urn\",\n    \"added_at\" : \"added_at\",\n    \"activity\" : \"activity\",\n    \"data\" : [ {\n      \"playlist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"updated_at\" : \"updated_at\",\n        \"playback_type\" : \"playback_type\",\n        \"service_id\" : \"service_id\",\n        \"description\" : \"description\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"starts_at\" : \"starts_at\",\n          \"expires_at\" : \"expires_at\",\n          \"warnings\" : [ \"warnings\", \"warnings\" ],\n          \"id\" : \"id\"\n        },\n        \"tracks\" : {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"contributions\" : [ {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }, {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          } ],\n          \"id\" : \"id\",\n          \"media\" : [ {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          }, {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          } ],\n          \"title\" : \"title\",\n          \"type\" : \"type\",\n          \"version\" : {\n            \"duration\" : \"duration\",\n            \"vpid\" : \"vpid\",\n            \"classical\" : true,\n            \"radio\" : true\n          }\n        }\n      },\n      \"artist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"role\" : \"role\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      },\n      \"service\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"genre\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"track\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"contributions\" : [ {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        }, {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        } ],\n        \"id\" : \"id\",\n        \"media\" : [ {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        }, {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        } ],\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        }\n      },\n      \"clip\" : {\n        \"masterbrandMid\" : \"masterbrandMid\",\n        \"parentProgramme\" : {\n          \"entityType\" : \"entityType\",\n          \"pid\" : \"pid\",\n          \"title\" : \"title\"\n        },\n        \"endDate\" : \"endDate\",\n        \"entityType\" : \"entityType\",\n        \"imageUrl\" : \"imageUrl\",\n        \"mediaType\" : \"mediaType\",\n        \"pid\" : \"pid\",\n        \"contributors\" : [ \"contributors\", \"contributors\" ],\n        \"synopsis\" : \"synopsis\",\n        \"title\" : \"title\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        },\n        \"startDate\" : \"startDate\"\n      }\n    }, {\n      \"playlist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"updated_at\" : \"updated_at\",\n        \"playback_type\" : \"playback_type\",\n        \"service_id\" : \"service_id\",\n        \"description\" : \"description\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"starts_at\" : \"starts_at\",\n          \"expires_at\" : \"expires_at\",\n          \"warnings\" : [ \"warnings\", \"warnings\" ],\n          \"id\" : \"id\"\n        },\n        \"tracks\" : {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"contributions\" : [ {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }, {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          } ],\n          \"id\" : \"id\",\n          \"media\" : [ {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          }, {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          } ],\n          \"title\" : \"title\",\n          \"type\" : \"type\",\n          \"version\" : {\n            \"duration\" : \"duration\",\n            \"vpid\" : \"vpid\",\n            \"classical\" : true,\n            \"radio\" : true\n          }\n        }\n      },\n      \"artist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"role\" : \"role\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      },\n      \"service\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"genre\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"track\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"contributions\" : [ {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        }, {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        } ],\n        \"id\" : \"id\",\n        \"media\" : [ {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        }, {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        } ],\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        }\n      },\n      \"clip\" : {\n        \"masterbrandMid\" : \"masterbrandMid\",\n        \"parentProgramme\" : {\n          \"entityType\" : \"entityType\",\n          \"pid\" : \"pid\",\n          \"title\" : \"title\"\n        },\n        \"endDate\" : \"endDate\",\n        \"entityType\" : \"entityType\",\n        \"imageUrl\" : \"imageUrl\",\n        \"mediaType\" : \"mediaType\",\n        \"pid\" : \"pid\",\n        \"contributors\" : [ \"contributors\", \"contributors\" ],\n        \"synopsis\" : \"synopsis\",\n        \"title\" : \"title\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        },\n        \"startDate\" : \"startDate\"\n      }\n    } ],\n    \"domain\" : \"domain\",\n    \"meta_data\" : {\n      \"key\" : \"key\"\n    },\n    \"action\" : \"action\",\n    \"id\" : \"id\",\n    \"type\" : \"type\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PersonalisedMusicResponse>(exampleJson)
            : default(PersonalisedMusicResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Favourite Track or Clip
        /// </summary>
        /// <remarks>Check to see if a single track or clip entity is in a users favourites - determines UX of add button. </remarks>
        /// <param name="authorization">Bearer OAUTH_TOKEN</param>
        /// <param name="xAuthenticationProvider">Authentication type</param>
        /// <param name="xAPIKey">API_KEY</param>
        /// <param name="type">Supported Music favourite types: Clips or Tracks</param>
        /// <param name="id">Clip PID or Track ID</param>
        /// <response code="200">OK</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/my/music/favourites/{type}/{id}")]
        [ValidateModelState]
        [SwaggerOperation("GetPersonalisedMusicFavouritesByTypeById")]
        [SwaggerResponse(statusCode: 200, type: typeof(PersonalisedMusicResponse), description: "OK")]
        [SwaggerResponse(statusCode: 0, type: typeof(PersonalisedMusicErrorResponse), description: "Unexpected error")]
        public virtual IActionResult GetPersonalisedMusicFavouritesByTypeById([FromHeader (Name = "Authorization")][Required()]string authorization, [FromHeader (Name = "X-Authentication-Provider")][Required()]string xAuthenticationProvider, [FromHeader (Name = "X-API-Key")][Required()]string xAPIKey, [FromRoute (Name = "type")][Required]string type, [FromRoute (Name = "id")][Required]string id)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PersonalisedMusicResponse));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(PersonalisedMusicErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"schema\" : \"schema\",\n  \"total\" : 5,\n  \"method\" : \"method\",\n  \"offset\" : 6,\n  \"limit\" : 0,\n  \"replied_at\" : \"replied_at\",\n  \"results\" : [ {\n    \"urn\" : \"urn\",\n    \"added_at\" : \"added_at\",\n    \"activity\" : \"activity\",\n    \"data\" : [ {\n      \"playlist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"updated_at\" : \"updated_at\",\n        \"playback_type\" : \"playback_type\",\n        \"service_id\" : \"service_id\",\n        \"description\" : \"description\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"starts_at\" : \"starts_at\",\n          \"expires_at\" : \"expires_at\",\n          \"warnings\" : [ \"warnings\", \"warnings\" ],\n          \"id\" : \"id\"\n        },\n        \"tracks\" : {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"contributions\" : [ {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }, {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          } ],\n          \"id\" : \"id\",\n          \"media\" : [ {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          }, {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          } ],\n          \"title\" : \"title\",\n          \"type\" : \"type\",\n          \"version\" : {\n            \"duration\" : \"duration\",\n            \"vpid\" : \"vpid\",\n            \"classical\" : true,\n            \"radio\" : true\n          }\n        }\n      },\n      \"artist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"role\" : \"role\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      },\n      \"service\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"genre\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"track\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"contributions\" : [ {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        }, {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        } ],\n        \"id\" : \"id\",\n        \"media\" : [ {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        }, {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        } ],\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        }\n      },\n      \"clip\" : {\n        \"masterbrandMid\" : \"masterbrandMid\",\n        \"parentProgramme\" : {\n          \"entityType\" : \"entityType\",\n          \"pid\" : \"pid\",\n          \"title\" : \"title\"\n        },\n        \"endDate\" : \"endDate\",\n        \"entityType\" : \"entityType\",\n        \"imageUrl\" : \"imageUrl\",\n        \"mediaType\" : \"mediaType\",\n        \"pid\" : \"pid\",\n        \"contributors\" : [ \"contributors\", \"contributors\" ],\n        \"synopsis\" : \"synopsis\",\n        \"title\" : \"title\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        },\n        \"startDate\" : \"startDate\"\n      }\n    }, {\n      \"playlist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"updated_at\" : \"updated_at\",\n        \"playback_type\" : \"playback_type\",\n        \"service_id\" : \"service_id\",\n        \"description\" : \"description\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"starts_at\" : \"starts_at\",\n          \"expires_at\" : \"expires_at\",\n          \"warnings\" : [ \"warnings\", \"warnings\" ],\n          \"id\" : \"id\"\n        },\n        \"tracks\" : {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"contributions\" : [ {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }, {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          } ],\n          \"id\" : \"id\",\n          \"media\" : [ {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          }, {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          } ],\n          \"title\" : \"title\",\n          \"type\" : \"type\",\n          \"version\" : {\n            \"duration\" : \"duration\",\n            \"vpid\" : \"vpid\",\n            \"classical\" : true,\n            \"radio\" : true\n          }\n        }\n      },\n      \"artist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"role\" : \"role\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      },\n      \"service\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"genre\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"track\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"contributions\" : [ {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        }, {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        } ],\n        \"id\" : \"id\",\n        \"media\" : [ {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        }, {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        } ],\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        }\n      },\n      \"clip\" : {\n        \"masterbrandMid\" : \"masterbrandMid\",\n        \"parentProgramme\" : {\n          \"entityType\" : \"entityType\",\n          \"pid\" : \"pid\",\n          \"title\" : \"title\"\n        },\n        \"endDate\" : \"endDate\",\n        \"entityType\" : \"entityType\",\n        \"imageUrl\" : \"imageUrl\",\n        \"mediaType\" : \"mediaType\",\n        \"pid\" : \"pid\",\n        \"contributors\" : [ \"contributors\", \"contributors\" ],\n        \"synopsis\" : \"synopsis\",\n        \"title\" : \"title\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        },\n        \"startDate\" : \"startDate\"\n      }\n    } ],\n    \"domain\" : \"domain\",\n    \"meta_data\" : {\n      \"key\" : \"key\"\n    },\n    \"action\" : \"action\",\n    \"id\" : \"id\",\n    \"type\" : \"type\"\n  }, {\n    \"urn\" : \"urn\",\n    \"added_at\" : \"added_at\",\n    \"activity\" : \"activity\",\n    \"data\" : [ {\n      \"playlist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"updated_at\" : \"updated_at\",\n        \"playback_type\" : \"playback_type\",\n        \"service_id\" : \"service_id\",\n        \"description\" : \"description\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"starts_at\" : \"starts_at\",\n          \"expires_at\" : \"expires_at\",\n          \"warnings\" : [ \"warnings\", \"warnings\" ],\n          \"id\" : \"id\"\n        },\n        \"tracks\" : {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"contributions\" : [ {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }, {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          } ],\n          \"id\" : \"id\",\n          \"media\" : [ {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          }, {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          } ],\n          \"title\" : \"title\",\n          \"type\" : \"type\",\n          \"version\" : {\n            \"duration\" : \"duration\",\n            \"vpid\" : \"vpid\",\n            \"classical\" : true,\n            \"radio\" : true\n          }\n        }\n      },\n      \"artist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"role\" : \"role\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      },\n      \"service\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"genre\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"track\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"contributions\" : [ {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        }, {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        } ],\n        \"id\" : \"id\",\n        \"media\" : [ {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        }, {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        } ],\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        }\n      },\n      \"clip\" : {\n        \"masterbrandMid\" : \"masterbrandMid\",\n        \"parentProgramme\" : {\n          \"entityType\" : \"entityType\",\n          \"pid\" : \"pid\",\n          \"title\" : \"title\"\n        },\n        \"endDate\" : \"endDate\",\n        \"entityType\" : \"entityType\",\n        \"imageUrl\" : \"imageUrl\",\n        \"mediaType\" : \"mediaType\",\n        \"pid\" : \"pid\",\n        \"contributors\" : [ \"contributors\", \"contributors\" ],\n        \"synopsis\" : \"synopsis\",\n        \"title\" : \"title\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        },\n        \"startDate\" : \"startDate\"\n      }\n    }, {\n      \"playlist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"updated_at\" : \"updated_at\",\n        \"playback_type\" : \"playback_type\",\n        \"service_id\" : \"service_id\",\n        \"description\" : \"description\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"starts_at\" : \"starts_at\",\n          \"expires_at\" : \"expires_at\",\n          \"warnings\" : [ \"warnings\", \"warnings\" ],\n          \"id\" : \"id\"\n        },\n        \"tracks\" : {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"contributions\" : [ {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }, {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          } ],\n          \"id\" : \"id\",\n          \"media\" : [ {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          }, {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          } ],\n          \"title\" : \"title\",\n          \"type\" : \"type\",\n          \"version\" : {\n            \"duration\" : \"duration\",\n            \"vpid\" : \"vpid\",\n            \"classical\" : true,\n            \"radio\" : true\n          }\n        }\n      },\n      \"artist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"role\" : \"role\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      },\n      \"service\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"genre\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"track\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"contributions\" : [ {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        }, {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        } ],\n        \"id\" : \"id\",\n        \"media\" : [ {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        }, {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        } ],\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        }\n      },\n      \"clip\" : {\n        \"masterbrandMid\" : \"masterbrandMid\",\n        \"parentProgramme\" : {\n          \"entityType\" : \"entityType\",\n          \"pid\" : \"pid\",\n          \"title\" : \"title\"\n        },\n        \"endDate\" : \"endDate\",\n        \"entityType\" : \"entityType\",\n        \"imageUrl\" : \"imageUrl\",\n        \"mediaType\" : \"mediaType\",\n        \"pid\" : \"pid\",\n        \"contributors\" : [ \"contributors\", \"contributors\" ],\n        \"synopsis\" : \"synopsis\",\n        \"title\" : \"title\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        },\n        \"startDate\" : \"startDate\"\n      }\n    } ],\n    \"domain\" : \"domain\",\n    \"meta_data\" : {\n      \"key\" : \"key\"\n    },\n    \"action\" : \"action\",\n    \"id\" : \"id\",\n    \"type\" : \"type\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PersonalisedMusicResponse>(exampleJson)
            : default(PersonalisedMusicResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Followed Networks, Categories, Artists, Playlists and Genres
        /// </summary>
        /// <remarks>List of followed networks, categories, artists, playlists and genres for a given user for BBC Music. </remarks>
        /// <param name="authorization">Bearer OAUTH_TOKEN</param>
        /// <param name="xAuthenticationProvider">Authentication type</param>
        /// <param name="xAPIKey">API_KEY</param>
        /// <param name="action">Filters activities based on the type of action</param>
        /// <param name="musicData">Omits music data from the response, defaults to true</param>
        /// <param name="musicContext">Specify context to be passed to Music API</param>
        /// <param name="musicWithinUk">Specify location to be passed to Music API</param>
        /// <param name="offset">Paginated results offset</param>
        /// <param name="limit">Paginated results limit</param>
        /// <response code="200">OK</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/my/music/follows")]
        [ValidateModelState]
        [SwaggerOperation("GetPersonalisedMusicFollows")]
        [SwaggerResponse(statusCode: 200, type: typeof(PersonalisedMusicResponse), description: "OK")]
        [SwaggerResponse(statusCode: 0, type: typeof(PersonalisedMusicErrorResponse), description: "Unexpected error")]
        public virtual IActionResult GetPersonalisedMusicFollows([FromHeader (Name = "Authorization")][Required()]string authorization, [FromHeader (Name = "X-Authentication-Provider")][Required()]string xAuthenticationProvider, [FromHeader (Name = "X-API-Key")][Required()]string xAPIKey, [FromQuery (Name = "action")]string action, [FromQuery (Name = "music-data")]bool? musicData, [FromQuery (Name = "music_context")]string musicContext, [FromQuery (Name = "music_within_uk")]bool? musicWithinUk, [FromQuery (Name = "offset")]int? offset, [FromQuery (Name = "limit")]int? limit)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PersonalisedMusicResponse));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(PersonalisedMusicErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"schema\" : \"schema\",\n  \"total\" : 5,\n  \"method\" : \"method\",\n  \"offset\" : 6,\n  \"limit\" : 0,\n  \"replied_at\" : \"replied_at\",\n  \"results\" : [ {\n    \"urn\" : \"urn\",\n    \"added_at\" : \"added_at\",\n    \"activity\" : \"activity\",\n    \"data\" : [ {\n      \"playlist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"updated_at\" : \"updated_at\",\n        \"playback_type\" : \"playback_type\",\n        \"service_id\" : \"service_id\",\n        \"description\" : \"description\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"starts_at\" : \"starts_at\",\n          \"expires_at\" : \"expires_at\",\n          \"warnings\" : [ \"warnings\", \"warnings\" ],\n          \"id\" : \"id\"\n        },\n        \"tracks\" : {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"contributions\" : [ {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }, {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          } ],\n          \"id\" : \"id\",\n          \"media\" : [ {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          }, {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          } ],\n          \"title\" : \"title\",\n          \"type\" : \"type\",\n          \"version\" : {\n            \"duration\" : \"duration\",\n            \"vpid\" : \"vpid\",\n            \"classical\" : true,\n            \"radio\" : true\n          }\n        }\n      },\n      \"artist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"role\" : \"role\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      },\n      \"service\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"genre\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"track\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"contributions\" : [ {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        }, {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        } ],\n        \"id\" : \"id\",\n        \"media\" : [ {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        }, {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        } ],\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        }\n      },\n      \"clip\" : {\n        \"masterbrandMid\" : \"masterbrandMid\",\n        \"parentProgramme\" : {\n          \"entityType\" : \"entityType\",\n          \"pid\" : \"pid\",\n          \"title\" : \"title\"\n        },\n        \"endDate\" : \"endDate\",\n        \"entityType\" : \"entityType\",\n        \"imageUrl\" : \"imageUrl\",\n        \"mediaType\" : \"mediaType\",\n        \"pid\" : \"pid\",\n        \"contributors\" : [ \"contributors\", \"contributors\" ],\n        \"synopsis\" : \"synopsis\",\n        \"title\" : \"title\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        },\n        \"startDate\" : \"startDate\"\n      }\n    }, {\n      \"playlist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"updated_at\" : \"updated_at\",\n        \"playback_type\" : \"playback_type\",\n        \"service_id\" : \"service_id\",\n        \"description\" : \"description\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"starts_at\" : \"starts_at\",\n          \"expires_at\" : \"expires_at\",\n          \"warnings\" : [ \"warnings\", \"warnings\" ],\n          \"id\" : \"id\"\n        },\n        \"tracks\" : {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"contributions\" : [ {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }, {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          } ],\n          \"id\" : \"id\",\n          \"media\" : [ {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          }, {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          } ],\n          \"title\" : \"title\",\n          \"type\" : \"type\",\n          \"version\" : {\n            \"duration\" : \"duration\",\n            \"vpid\" : \"vpid\",\n            \"classical\" : true,\n            \"radio\" : true\n          }\n        }\n      },\n      \"artist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"role\" : \"role\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      },\n      \"service\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"genre\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"track\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"contributions\" : [ {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        }, {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        } ],\n        \"id\" : \"id\",\n        \"media\" : [ {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        }, {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        } ],\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        }\n      },\n      \"clip\" : {\n        \"masterbrandMid\" : \"masterbrandMid\",\n        \"parentProgramme\" : {\n          \"entityType\" : \"entityType\",\n          \"pid\" : \"pid\",\n          \"title\" : \"title\"\n        },\n        \"endDate\" : \"endDate\",\n        \"entityType\" : \"entityType\",\n        \"imageUrl\" : \"imageUrl\",\n        \"mediaType\" : \"mediaType\",\n        \"pid\" : \"pid\",\n        \"contributors\" : [ \"contributors\", \"contributors\" ],\n        \"synopsis\" : \"synopsis\",\n        \"title\" : \"title\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        },\n        \"startDate\" : \"startDate\"\n      }\n    } ],\n    \"domain\" : \"domain\",\n    \"meta_data\" : {\n      \"key\" : \"key\"\n    },\n    \"action\" : \"action\",\n    \"id\" : \"id\",\n    \"type\" : \"type\"\n  }, {\n    \"urn\" : \"urn\",\n    \"added_at\" : \"added_at\",\n    \"activity\" : \"activity\",\n    \"data\" : [ {\n      \"playlist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"updated_at\" : \"updated_at\",\n        \"playback_type\" : \"playback_type\",\n        \"service_id\" : \"service_id\",\n        \"description\" : \"description\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"starts_at\" : \"starts_at\",\n          \"expires_at\" : \"expires_at\",\n          \"warnings\" : [ \"warnings\", \"warnings\" ],\n          \"id\" : \"id\"\n        },\n        \"tracks\" : {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"contributions\" : [ {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }, {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          } ],\n          \"id\" : \"id\",\n          \"media\" : [ {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          }, {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          } ],\n          \"title\" : \"title\",\n          \"type\" : \"type\",\n          \"version\" : {\n            \"duration\" : \"duration\",\n            \"vpid\" : \"vpid\",\n            \"classical\" : true,\n            \"radio\" : true\n          }\n        }\n      },\n      \"artist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"role\" : \"role\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      },\n      \"service\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"genre\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"track\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"contributions\" : [ {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        }, {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        } ],\n        \"id\" : \"id\",\n        \"media\" : [ {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        }, {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        } ],\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        }\n      },\n      \"clip\" : {\n        \"masterbrandMid\" : \"masterbrandMid\",\n        \"parentProgramme\" : {\n          \"entityType\" : \"entityType\",\n          \"pid\" : \"pid\",\n          \"title\" : \"title\"\n        },\n        \"endDate\" : \"endDate\",\n        \"entityType\" : \"entityType\",\n        \"imageUrl\" : \"imageUrl\",\n        \"mediaType\" : \"mediaType\",\n        \"pid\" : \"pid\",\n        \"contributors\" : [ \"contributors\", \"contributors\" ],\n        \"synopsis\" : \"synopsis\",\n        \"title\" : \"title\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        },\n        \"startDate\" : \"startDate\"\n      }\n    }, {\n      \"playlist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"updated_at\" : \"updated_at\",\n        \"playback_type\" : \"playback_type\",\n        \"service_id\" : \"service_id\",\n        \"description\" : \"description\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"starts_at\" : \"starts_at\",\n          \"expires_at\" : \"expires_at\",\n          \"warnings\" : [ \"warnings\", \"warnings\" ],\n          \"id\" : \"id\"\n        },\n        \"tracks\" : {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"contributions\" : [ {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }, {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          } ],\n          \"id\" : \"id\",\n          \"media\" : [ {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          }, {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          } ],\n          \"title\" : \"title\",\n          \"type\" : \"type\",\n          \"version\" : {\n            \"duration\" : \"duration\",\n            \"vpid\" : \"vpid\",\n            \"classical\" : true,\n            \"radio\" : true\n          }\n        }\n      },\n      \"artist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"role\" : \"role\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      },\n      \"service\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"genre\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"track\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"contributions\" : [ {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        }, {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        } ],\n        \"id\" : \"id\",\n        \"media\" : [ {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        }, {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        } ],\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        }\n      },\n      \"clip\" : {\n        \"masterbrandMid\" : \"masterbrandMid\",\n        \"parentProgramme\" : {\n          \"entityType\" : \"entityType\",\n          \"pid\" : \"pid\",\n          \"title\" : \"title\"\n        },\n        \"endDate\" : \"endDate\",\n        \"entityType\" : \"entityType\",\n        \"imageUrl\" : \"imageUrl\",\n        \"mediaType\" : \"mediaType\",\n        \"pid\" : \"pid\",\n        \"contributors\" : [ \"contributors\", \"contributors\" ],\n        \"synopsis\" : \"synopsis\",\n        \"title\" : \"title\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        },\n        \"startDate\" : \"startDate\"\n      }\n    } ],\n    \"domain\" : \"domain\",\n    \"meta_data\" : {\n      \"key\" : \"key\"\n    },\n    \"action\" : \"action\",\n    \"id\" : \"id\",\n    \"type\" : \"type\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PersonalisedMusicResponse>(exampleJson)
            : default(PersonalisedMusicResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Followed Networks, Categories, Artists, Playlists and Genres by Type
        /// </summary>
        /// <remarks>List of followed networks, categories, artists, playlists, networks, genres, categories or services for a given BBC Music user. </remarks>
        /// <param name="authorization">Bearer OAUTH_TOKEN</param>
        /// <param name="xAuthenticationProvider">Authentication type</param>
        /// <param name="xAPIKey">API_KEY</param>
        /// <param name="type">Supported Music follows types: Playlists, Services, Genres &amp; Artists</param>
        /// <param name="action">Filters activities based on the type of action</param>
        /// <param name="musicData">Omits music data from the response, defaults to true</param>
        /// <param name="musicContext">Specify context to be passed to Music API</param>
        /// <param name="musicWithinUk">Specify location to be passed to Music API</param>
        /// <param name="offset">Paginated results offset</param>
        /// <param name="limit">Paginated results limit</param>
        /// <response code="200">OK</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/my/music/follows/{type}")]
        [ValidateModelState]
        [SwaggerOperation("GetPersonalisedMusicFollowsByType")]
        [SwaggerResponse(statusCode: 200, type: typeof(PersonalisedMusicResponse), description: "OK")]
        [SwaggerResponse(statusCode: 0, type: typeof(PersonalisedMusicErrorResponse), description: "Unexpected error")]
        public virtual IActionResult GetPersonalisedMusicFollowsByType([FromHeader (Name = "Authorization")][Required()]string authorization, [FromHeader (Name = "X-Authentication-Provider")][Required()]string xAuthenticationProvider, [FromHeader (Name = "X-API-Key")][Required()]string xAPIKey, [FromRoute (Name = "type")][Required]string type, [FromQuery (Name = "action")]string action, [FromQuery (Name = "music-data")]bool? musicData, [FromQuery (Name = "music_context")]string musicContext, [FromQuery (Name = "music_within_uk")]bool? musicWithinUk, [FromQuery (Name = "offset")]int? offset, [FromQuery (Name = "limit")]int? limit)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PersonalisedMusicResponse));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(PersonalisedMusicErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"schema\" : \"schema\",\n  \"total\" : 5,\n  \"method\" : \"method\",\n  \"offset\" : 6,\n  \"limit\" : 0,\n  \"replied_at\" : \"replied_at\",\n  \"results\" : [ {\n    \"urn\" : \"urn\",\n    \"added_at\" : \"added_at\",\n    \"activity\" : \"activity\",\n    \"data\" : [ {\n      \"playlist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"updated_at\" : \"updated_at\",\n        \"playback_type\" : \"playback_type\",\n        \"service_id\" : \"service_id\",\n        \"description\" : \"description\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"starts_at\" : \"starts_at\",\n          \"expires_at\" : \"expires_at\",\n          \"warnings\" : [ \"warnings\", \"warnings\" ],\n          \"id\" : \"id\"\n        },\n        \"tracks\" : {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"contributions\" : [ {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }, {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          } ],\n          \"id\" : \"id\",\n          \"media\" : [ {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          }, {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          } ],\n          \"title\" : \"title\",\n          \"type\" : \"type\",\n          \"version\" : {\n            \"duration\" : \"duration\",\n            \"vpid\" : \"vpid\",\n            \"classical\" : true,\n            \"radio\" : true\n          }\n        }\n      },\n      \"artist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"role\" : \"role\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      },\n      \"service\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"genre\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"track\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"contributions\" : [ {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        }, {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        } ],\n        \"id\" : \"id\",\n        \"media\" : [ {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        }, {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        } ],\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        }\n      },\n      \"clip\" : {\n        \"masterbrandMid\" : \"masterbrandMid\",\n        \"parentProgramme\" : {\n          \"entityType\" : \"entityType\",\n          \"pid\" : \"pid\",\n          \"title\" : \"title\"\n        },\n        \"endDate\" : \"endDate\",\n        \"entityType\" : \"entityType\",\n        \"imageUrl\" : \"imageUrl\",\n        \"mediaType\" : \"mediaType\",\n        \"pid\" : \"pid\",\n        \"contributors\" : [ \"contributors\", \"contributors\" ],\n        \"synopsis\" : \"synopsis\",\n        \"title\" : \"title\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        },\n        \"startDate\" : \"startDate\"\n      }\n    }, {\n      \"playlist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"updated_at\" : \"updated_at\",\n        \"playback_type\" : \"playback_type\",\n        \"service_id\" : \"service_id\",\n        \"description\" : \"description\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"starts_at\" : \"starts_at\",\n          \"expires_at\" : \"expires_at\",\n          \"warnings\" : [ \"warnings\", \"warnings\" ],\n          \"id\" : \"id\"\n        },\n        \"tracks\" : {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"contributions\" : [ {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }, {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          } ],\n          \"id\" : \"id\",\n          \"media\" : [ {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          }, {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          } ],\n          \"title\" : \"title\",\n          \"type\" : \"type\",\n          \"version\" : {\n            \"duration\" : \"duration\",\n            \"vpid\" : \"vpid\",\n            \"classical\" : true,\n            \"radio\" : true\n          }\n        }\n      },\n      \"artist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"role\" : \"role\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      },\n      \"service\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"genre\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"track\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"contributions\" : [ {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        }, {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        } ],\n        \"id\" : \"id\",\n        \"media\" : [ {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        }, {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        } ],\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        }\n      },\n      \"clip\" : {\n        \"masterbrandMid\" : \"masterbrandMid\",\n        \"parentProgramme\" : {\n          \"entityType\" : \"entityType\",\n          \"pid\" : \"pid\",\n          \"title\" : \"title\"\n        },\n        \"endDate\" : \"endDate\",\n        \"entityType\" : \"entityType\",\n        \"imageUrl\" : \"imageUrl\",\n        \"mediaType\" : \"mediaType\",\n        \"pid\" : \"pid\",\n        \"contributors\" : [ \"contributors\", \"contributors\" ],\n        \"synopsis\" : \"synopsis\",\n        \"title\" : \"title\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        },\n        \"startDate\" : \"startDate\"\n      }\n    } ],\n    \"domain\" : \"domain\",\n    \"meta_data\" : {\n      \"key\" : \"key\"\n    },\n    \"action\" : \"action\",\n    \"id\" : \"id\",\n    \"type\" : \"type\"\n  }, {\n    \"urn\" : \"urn\",\n    \"added_at\" : \"added_at\",\n    \"activity\" : \"activity\",\n    \"data\" : [ {\n      \"playlist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"updated_at\" : \"updated_at\",\n        \"playback_type\" : \"playback_type\",\n        \"service_id\" : \"service_id\",\n        \"description\" : \"description\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"starts_at\" : \"starts_at\",\n          \"expires_at\" : \"expires_at\",\n          \"warnings\" : [ \"warnings\", \"warnings\" ],\n          \"id\" : \"id\"\n        },\n        \"tracks\" : {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"contributions\" : [ {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }, {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          } ],\n          \"id\" : \"id\",\n          \"media\" : [ {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          }, {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          } ],\n          \"title\" : \"title\",\n          \"type\" : \"type\",\n          \"version\" : {\n            \"duration\" : \"duration\",\n            \"vpid\" : \"vpid\",\n            \"classical\" : true,\n            \"radio\" : true\n          }\n        }\n      },\n      \"artist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"role\" : \"role\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      },\n      \"service\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"genre\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"track\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"contributions\" : [ {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        }, {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        } ],\n        \"id\" : \"id\",\n        \"media\" : [ {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        }, {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        } ],\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        }\n      },\n      \"clip\" : {\n        \"masterbrandMid\" : \"masterbrandMid\",\n        \"parentProgramme\" : {\n          \"entityType\" : \"entityType\",\n          \"pid\" : \"pid\",\n          \"title\" : \"title\"\n        },\n        \"endDate\" : \"endDate\",\n        \"entityType\" : \"entityType\",\n        \"imageUrl\" : \"imageUrl\",\n        \"mediaType\" : \"mediaType\",\n        \"pid\" : \"pid\",\n        \"contributors\" : [ \"contributors\", \"contributors\" ],\n        \"synopsis\" : \"synopsis\",\n        \"title\" : \"title\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        },\n        \"startDate\" : \"startDate\"\n      }\n    }, {\n      \"playlist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"updated_at\" : \"updated_at\",\n        \"playback_type\" : \"playback_type\",\n        \"service_id\" : \"service_id\",\n        \"description\" : \"description\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"starts_at\" : \"starts_at\",\n          \"expires_at\" : \"expires_at\",\n          \"warnings\" : [ \"warnings\", \"warnings\" ],\n          \"id\" : \"id\"\n        },\n        \"tracks\" : {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"contributions\" : [ {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }, {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          } ],\n          \"id\" : \"id\",\n          \"media\" : [ {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          }, {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          } ],\n          \"title\" : \"title\",\n          \"type\" : \"type\",\n          \"version\" : {\n            \"duration\" : \"duration\",\n            \"vpid\" : \"vpid\",\n            \"classical\" : true,\n            \"radio\" : true\n          }\n        }\n      },\n      \"artist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"role\" : \"role\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      },\n      \"service\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"genre\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"track\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"contributions\" : [ {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        }, {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        } ],\n        \"id\" : \"id\",\n        \"media\" : [ {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        }, {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        } ],\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        }\n      },\n      \"clip\" : {\n        \"masterbrandMid\" : \"masterbrandMid\",\n        \"parentProgramme\" : {\n          \"entityType\" : \"entityType\",\n          \"pid\" : \"pid\",\n          \"title\" : \"title\"\n        },\n        \"endDate\" : \"endDate\",\n        \"entityType\" : \"entityType\",\n        \"imageUrl\" : \"imageUrl\",\n        \"mediaType\" : \"mediaType\",\n        \"pid\" : \"pid\",\n        \"contributors\" : [ \"contributors\", \"contributors\" ],\n        \"synopsis\" : \"synopsis\",\n        \"title\" : \"title\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        },\n        \"startDate\" : \"startDate\"\n      }\n    } ],\n    \"domain\" : \"domain\",\n    \"meta_data\" : {\n      \"key\" : \"key\"\n    },\n    \"action\" : \"action\",\n    \"id\" : \"id\",\n    \"type\" : \"type\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PersonalisedMusicResponse>(exampleJson)
            : default(PersonalisedMusicResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Followed Network, Category, Artist, Playlist and Genre
        /// </summary>
        /// <remarks>Check to see if a single network, category, artist, playlist, network, genre or service entity is in a users follows - determines UX of add button. </remarks>
        /// <param name="authorization">Bearer OAUTH_TOKEN</param>
        /// <param name="xAuthenticationProvider">Authentication type</param>
        /// <param name="xAPIKey">API_KEY</param>
        /// <param name="type">Supported Music follows types: Playlists, Services, Genres &amp; Artists</param>
        /// <param name="id">Playlists, Services, Networks, Genres, Categories or Artists ID</param>
        /// <param name="musicData">Omits music data from the response, defaults to true</param>
        /// <param name="musicContext">Specify context to be passed to Music API</param>
        /// <param name="musicWithinUk">Specify location to be passed to Music API</param>
        /// <response code="200">OK</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/my/music/follows/{type}/{id}")]
        [ValidateModelState]
        [SwaggerOperation("GetPersonalisedMusicFollowsByTypeById")]
        [SwaggerResponse(statusCode: 200, type: typeof(PersonalisedMusicResponse), description: "OK")]
        [SwaggerResponse(statusCode: 0, type: typeof(PersonalisedMusicErrorResponse), description: "Unexpected error")]
        public virtual IActionResult GetPersonalisedMusicFollowsByTypeById([FromHeader (Name = "Authorization")][Required()]string authorization, [FromHeader (Name = "X-Authentication-Provider")][Required()]string xAuthenticationProvider, [FromHeader (Name = "X-API-Key")][Required()]string xAPIKey, [FromRoute (Name = "type")][Required]string type, [FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "music-data")]bool? musicData, [FromQuery (Name = "music_context")]string musicContext, [FromQuery (Name = "music_within_uk")]bool? musicWithinUk)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PersonalisedMusicResponse));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(PersonalisedMusicErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"schema\" : \"schema\",\n  \"total\" : 5,\n  \"method\" : \"method\",\n  \"offset\" : 6,\n  \"limit\" : 0,\n  \"replied_at\" : \"replied_at\",\n  \"results\" : [ {\n    \"urn\" : \"urn\",\n    \"added_at\" : \"added_at\",\n    \"activity\" : \"activity\",\n    \"data\" : [ {\n      \"playlist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"updated_at\" : \"updated_at\",\n        \"playback_type\" : \"playback_type\",\n        \"service_id\" : \"service_id\",\n        \"description\" : \"description\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"starts_at\" : \"starts_at\",\n          \"expires_at\" : \"expires_at\",\n          \"warnings\" : [ \"warnings\", \"warnings\" ],\n          \"id\" : \"id\"\n        },\n        \"tracks\" : {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"contributions\" : [ {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }, {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          } ],\n          \"id\" : \"id\",\n          \"media\" : [ {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          }, {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          } ],\n          \"title\" : \"title\",\n          \"type\" : \"type\",\n          \"version\" : {\n            \"duration\" : \"duration\",\n            \"vpid\" : \"vpid\",\n            \"classical\" : true,\n            \"radio\" : true\n          }\n        }\n      },\n      \"artist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"role\" : \"role\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      },\n      \"service\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"genre\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"track\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"contributions\" : [ {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        }, {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        } ],\n        \"id\" : \"id\",\n        \"media\" : [ {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        }, {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        } ],\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        }\n      },\n      \"clip\" : {\n        \"masterbrandMid\" : \"masterbrandMid\",\n        \"parentProgramme\" : {\n          \"entityType\" : \"entityType\",\n          \"pid\" : \"pid\",\n          \"title\" : \"title\"\n        },\n        \"endDate\" : \"endDate\",\n        \"entityType\" : \"entityType\",\n        \"imageUrl\" : \"imageUrl\",\n        \"mediaType\" : \"mediaType\",\n        \"pid\" : \"pid\",\n        \"contributors\" : [ \"contributors\", \"contributors\" ],\n        \"synopsis\" : \"synopsis\",\n        \"title\" : \"title\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        },\n        \"startDate\" : \"startDate\"\n      }\n    }, {\n      \"playlist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"updated_at\" : \"updated_at\",\n        \"playback_type\" : \"playback_type\",\n        \"service_id\" : \"service_id\",\n        \"description\" : \"description\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"starts_at\" : \"starts_at\",\n          \"expires_at\" : \"expires_at\",\n          \"warnings\" : [ \"warnings\", \"warnings\" ],\n          \"id\" : \"id\"\n        },\n        \"tracks\" : {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"contributions\" : [ {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }, {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          } ],\n          \"id\" : \"id\",\n          \"media\" : [ {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          }, {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          } ],\n          \"title\" : \"title\",\n          \"type\" : \"type\",\n          \"version\" : {\n            \"duration\" : \"duration\",\n            \"vpid\" : \"vpid\",\n            \"classical\" : true,\n            \"radio\" : true\n          }\n        }\n      },\n      \"artist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"role\" : \"role\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      },\n      \"service\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"genre\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"track\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"contributions\" : [ {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        }, {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        } ],\n        \"id\" : \"id\",\n        \"media\" : [ {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        }, {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        } ],\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        }\n      },\n      \"clip\" : {\n        \"masterbrandMid\" : \"masterbrandMid\",\n        \"parentProgramme\" : {\n          \"entityType\" : \"entityType\",\n          \"pid\" : \"pid\",\n          \"title\" : \"title\"\n        },\n        \"endDate\" : \"endDate\",\n        \"entityType\" : \"entityType\",\n        \"imageUrl\" : \"imageUrl\",\n        \"mediaType\" : \"mediaType\",\n        \"pid\" : \"pid\",\n        \"contributors\" : [ \"contributors\", \"contributors\" ],\n        \"synopsis\" : \"synopsis\",\n        \"title\" : \"title\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        },\n        \"startDate\" : \"startDate\"\n      }\n    } ],\n    \"domain\" : \"domain\",\n    \"meta_data\" : {\n      \"key\" : \"key\"\n    },\n    \"action\" : \"action\",\n    \"id\" : \"id\",\n    \"type\" : \"type\"\n  }, {\n    \"urn\" : \"urn\",\n    \"added_at\" : \"added_at\",\n    \"activity\" : \"activity\",\n    \"data\" : [ {\n      \"playlist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"updated_at\" : \"updated_at\",\n        \"playback_type\" : \"playback_type\",\n        \"service_id\" : \"service_id\",\n        \"description\" : \"description\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"starts_at\" : \"starts_at\",\n          \"expires_at\" : \"expires_at\",\n          \"warnings\" : [ \"warnings\", \"warnings\" ],\n          \"id\" : \"id\"\n        },\n        \"tracks\" : {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"contributions\" : [ {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }, {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          } ],\n          \"id\" : \"id\",\n          \"media\" : [ {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          }, {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          } ],\n          \"title\" : \"title\",\n          \"type\" : \"type\",\n          \"version\" : {\n            \"duration\" : \"duration\",\n            \"vpid\" : \"vpid\",\n            \"classical\" : true,\n            \"radio\" : true\n          }\n        }\n      },\n      \"artist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"role\" : \"role\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      },\n      \"service\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"genre\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"track\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"contributions\" : [ {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        }, {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        } ],\n        \"id\" : \"id\",\n        \"media\" : [ {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        }, {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        } ],\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        }\n      },\n      \"clip\" : {\n        \"masterbrandMid\" : \"masterbrandMid\",\n        \"parentProgramme\" : {\n          \"entityType\" : \"entityType\",\n          \"pid\" : \"pid\",\n          \"title\" : \"title\"\n        },\n        \"endDate\" : \"endDate\",\n        \"entityType\" : \"entityType\",\n        \"imageUrl\" : \"imageUrl\",\n        \"mediaType\" : \"mediaType\",\n        \"pid\" : \"pid\",\n        \"contributors\" : [ \"contributors\", \"contributors\" ],\n        \"synopsis\" : \"synopsis\",\n        \"title\" : \"title\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        },\n        \"startDate\" : \"startDate\"\n      }\n    }, {\n      \"playlist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"updated_at\" : \"updated_at\",\n        \"playback_type\" : \"playback_type\",\n        \"service_id\" : \"service_id\",\n        \"description\" : \"description\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"starts_at\" : \"starts_at\",\n          \"expires_at\" : \"expires_at\",\n          \"warnings\" : [ \"warnings\", \"warnings\" ],\n          \"id\" : \"id\"\n        },\n        \"tracks\" : {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"contributions\" : [ {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }, {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          } ],\n          \"id\" : \"id\",\n          \"media\" : [ {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          }, {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          } ],\n          \"title\" : \"title\",\n          \"type\" : \"type\",\n          \"version\" : {\n            \"duration\" : \"duration\",\n            \"vpid\" : \"vpid\",\n            \"classical\" : true,\n            \"radio\" : true\n          }\n        }\n      },\n      \"artist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"role\" : \"role\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      },\n      \"service\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"genre\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"track\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"contributions\" : [ {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        }, {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        } ],\n        \"id\" : \"id\",\n        \"media\" : [ {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        }, {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        } ],\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        }\n      },\n      \"clip\" : {\n        \"masterbrandMid\" : \"masterbrandMid\",\n        \"parentProgramme\" : {\n          \"entityType\" : \"entityType\",\n          \"pid\" : \"pid\",\n          \"title\" : \"title\"\n        },\n        \"endDate\" : \"endDate\",\n        \"entityType\" : \"entityType\",\n        \"imageUrl\" : \"imageUrl\",\n        \"mediaType\" : \"mediaType\",\n        \"pid\" : \"pid\",\n        \"contributors\" : [ \"contributors\", \"contributors\" ],\n        \"synopsis\" : \"synopsis\",\n        \"title\" : \"title\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        },\n        \"startDate\" : \"startDate\"\n      }\n    } ],\n    \"domain\" : \"domain\",\n    \"meta_data\" : {\n      \"key\" : \"key\"\n    },\n    \"action\" : \"action\",\n    \"id\" : \"id\",\n    \"type\" : \"type\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PersonalisedMusicResponse>(exampleJson)
            : default(PersonalisedMusicResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Favourite Tracks or Clips
        /// </summary>
        /// <remarks>Add multiple tracks and/or clips to a BBC Music user&#39;s favourites.  N.B. Any HTML tags submitted in metadata will be removed </remarks>
        /// <param name="authorization">Bearer OAUTH_TOKEN</param>
        /// <param name="xAuthenticationProvider">Authentication type</param>
        /// <param name="xAPIKey">API_KEY</param>
        /// <param name="body">Action favourited or unfavourited</param>
        /// <response code="200">OK</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/my/music/favourites")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostPersonalisedMusicFavouritesBatch")]
        [SwaggerResponse(statusCode: 200, type: typeof(PersonalisedMusicResponse), description: "OK")]
        [SwaggerResponse(statusCode: 0, type: typeof(PersonalisedMusicErrorResponse), description: "Unexpected error")]
        public virtual IActionResult PostPersonalisedMusicFavouritesBatch([FromHeader (Name = "Authorization")][Required()]string authorization, [FromHeader (Name = "X-Authentication-Provider")][Required()]string xAuthenticationProvider, [FromHeader (Name = "X-API-Key")][Required()]string xAPIKey, [FromBody]List<PersonalisedMusicBatchRequest> body)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PersonalisedMusicResponse));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(PersonalisedMusicErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"schema\" : \"schema\",\n  \"total\" : 5,\n  \"method\" : \"method\",\n  \"offset\" : 6,\n  \"limit\" : 0,\n  \"replied_at\" : \"replied_at\",\n  \"results\" : [ {\n    \"urn\" : \"urn\",\n    \"added_at\" : \"added_at\",\n    \"activity\" : \"activity\",\n    \"data\" : [ {\n      \"playlist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"updated_at\" : \"updated_at\",\n        \"playback_type\" : \"playback_type\",\n        \"service_id\" : \"service_id\",\n        \"description\" : \"description\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"starts_at\" : \"starts_at\",\n          \"expires_at\" : \"expires_at\",\n          \"warnings\" : [ \"warnings\", \"warnings\" ],\n          \"id\" : \"id\"\n        },\n        \"tracks\" : {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"contributions\" : [ {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }, {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          } ],\n          \"id\" : \"id\",\n          \"media\" : [ {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          }, {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          } ],\n          \"title\" : \"title\",\n          \"type\" : \"type\",\n          \"version\" : {\n            \"duration\" : \"duration\",\n            \"vpid\" : \"vpid\",\n            \"classical\" : true,\n            \"radio\" : true\n          }\n        }\n      },\n      \"artist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"role\" : \"role\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      },\n      \"service\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"genre\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"track\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"contributions\" : [ {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        }, {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        } ],\n        \"id\" : \"id\",\n        \"media\" : [ {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        }, {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        } ],\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        }\n      },\n      \"clip\" : {\n        \"masterbrandMid\" : \"masterbrandMid\",\n        \"parentProgramme\" : {\n          \"entityType\" : \"entityType\",\n          \"pid\" : \"pid\",\n          \"title\" : \"title\"\n        },\n        \"endDate\" : \"endDate\",\n        \"entityType\" : \"entityType\",\n        \"imageUrl\" : \"imageUrl\",\n        \"mediaType\" : \"mediaType\",\n        \"pid\" : \"pid\",\n        \"contributors\" : [ \"contributors\", \"contributors\" ],\n        \"synopsis\" : \"synopsis\",\n        \"title\" : \"title\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        },\n        \"startDate\" : \"startDate\"\n      }\n    }, {\n      \"playlist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"updated_at\" : \"updated_at\",\n        \"playback_type\" : \"playback_type\",\n        \"service_id\" : \"service_id\",\n        \"description\" : \"description\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"starts_at\" : \"starts_at\",\n          \"expires_at\" : \"expires_at\",\n          \"warnings\" : [ \"warnings\", \"warnings\" ],\n          \"id\" : \"id\"\n        },\n        \"tracks\" : {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"contributions\" : [ {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }, {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          } ],\n          \"id\" : \"id\",\n          \"media\" : [ {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          }, {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          } ],\n          \"title\" : \"title\",\n          \"type\" : \"type\",\n          \"version\" : {\n            \"duration\" : \"duration\",\n            \"vpid\" : \"vpid\",\n            \"classical\" : true,\n            \"radio\" : true\n          }\n        }\n      },\n      \"artist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"role\" : \"role\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      },\n      \"service\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"genre\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"track\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"contributions\" : [ {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        }, {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        } ],\n        \"id\" : \"id\",\n        \"media\" : [ {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        }, {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        } ],\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        }\n      },\n      \"clip\" : {\n        \"masterbrandMid\" : \"masterbrandMid\",\n        \"parentProgramme\" : {\n          \"entityType\" : \"entityType\",\n          \"pid\" : \"pid\",\n          \"title\" : \"title\"\n        },\n        \"endDate\" : \"endDate\",\n        \"entityType\" : \"entityType\",\n        \"imageUrl\" : \"imageUrl\",\n        \"mediaType\" : \"mediaType\",\n        \"pid\" : \"pid\",\n        \"contributors\" : [ \"contributors\", \"contributors\" ],\n        \"synopsis\" : \"synopsis\",\n        \"title\" : \"title\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        },\n        \"startDate\" : \"startDate\"\n      }\n    } ],\n    \"domain\" : \"domain\",\n    \"meta_data\" : {\n      \"key\" : \"key\"\n    },\n    \"action\" : \"action\",\n    \"id\" : \"id\",\n    \"type\" : \"type\"\n  }, {\n    \"urn\" : \"urn\",\n    \"added_at\" : \"added_at\",\n    \"activity\" : \"activity\",\n    \"data\" : [ {\n      \"playlist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"updated_at\" : \"updated_at\",\n        \"playback_type\" : \"playback_type\",\n        \"service_id\" : \"service_id\",\n        \"description\" : \"description\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"starts_at\" : \"starts_at\",\n          \"expires_at\" : \"expires_at\",\n          \"warnings\" : [ \"warnings\", \"warnings\" ],\n          \"id\" : \"id\"\n        },\n        \"tracks\" : {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"contributions\" : [ {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }, {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          } ],\n          \"id\" : \"id\",\n          \"media\" : [ {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          }, {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          } ],\n          \"title\" : \"title\",\n          \"type\" : \"type\",\n          \"version\" : {\n            \"duration\" : \"duration\",\n            \"vpid\" : \"vpid\",\n            \"classical\" : true,\n            \"radio\" : true\n          }\n        }\n      },\n      \"artist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"role\" : \"role\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      },\n      \"service\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"genre\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"track\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"contributions\" : [ {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        }, {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        } ],\n        \"id\" : \"id\",\n        \"media\" : [ {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        }, {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        } ],\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        }\n      },\n      \"clip\" : {\n        \"masterbrandMid\" : \"masterbrandMid\",\n        \"parentProgramme\" : {\n          \"entityType\" : \"entityType\",\n          \"pid\" : \"pid\",\n          \"title\" : \"title\"\n        },\n        \"endDate\" : \"endDate\",\n        \"entityType\" : \"entityType\",\n        \"imageUrl\" : \"imageUrl\",\n        \"mediaType\" : \"mediaType\",\n        \"pid\" : \"pid\",\n        \"contributors\" : [ \"contributors\", \"contributors\" ],\n        \"synopsis\" : \"synopsis\",\n        \"title\" : \"title\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        },\n        \"startDate\" : \"startDate\"\n      }\n    }, {\n      \"playlist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"updated_at\" : \"updated_at\",\n        \"playback_type\" : \"playback_type\",\n        \"service_id\" : \"service_id\",\n        \"description\" : \"description\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"starts_at\" : \"starts_at\",\n          \"expires_at\" : \"expires_at\",\n          \"warnings\" : [ \"warnings\", \"warnings\" ],\n          \"id\" : \"id\"\n        },\n        \"tracks\" : {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"contributions\" : [ {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }, {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          } ],\n          \"id\" : \"id\",\n          \"media\" : [ {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          }, {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          } ],\n          \"title\" : \"title\",\n          \"type\" : \"type\",\n          \"version\" : {\n            \"duration\" : \"duration\",\n            \"vpid\" : \"vpid\",\n            \"classical\" : true,\n            \"radio\" : true\n          }\n        }\n      },\n      \"artist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"role\" : \"role\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      },\n      \"service\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"genre\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"track\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"contributions\" : [ {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        }, {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        } ],\n        \"id\" : \"id\",\n        \"media\" : [ {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        }, {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        } ],\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        }\n      },\n      \"clip\" : {\n        \"masterbrandMid\" : \"masterbrandMid\",\n        \"parentProgramme\" : {\n          \"entityType\" : \"entityType\",\n          \"pid\" : \"pid\",\n          \"title\" : \"title\"\n        },\n        \"endDate\" : \"endDate\",\n        \"entityType\" : \"entityType\",\n        \"imageUrl\" : \"imageUrl\",\n        \"mediaType\" : \"mediaType\",\n        \"pid\" : \"pid\",\n        \"contributors\" : [ \"contributors\", \"contributors\" ],\n        \"synopsis\" : \"synopsis\",\n        \"title\" : \"title\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        },\n        \"startDate\" : \"startDate\"\n      }\n    } ],\n    \"domain\" : \"domain\",\n    \"meta_data\" : {\n      \"key\" : \"key\"\n    },\n    \"action\" : \"action\",\n    \"id\" : \"id\",\n    \"type\" : \"type\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PersonalisedMusicResponse>(exampleJson)
            : default(PersonalisedMusicResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Favourite Track or Clip
        /// </summary>
        /// <remarks>Add track or clip to a BBC Music user favourites.  N.B. Any HTML tags submitted in metadata will be removed </remarks>
        /// <param name="authorization">Bearer OAUTH_TOKEN</param>
        /// <param name="xAuthenticationProvider">Authentication type</param>
        /// <param name="xAPIKey">API_KEY</param>
        /// <param name="type">Supported Music favourite types: Clips or Tracks</param>
        /// <param name="id">Clip PID or Track ID</param>
        /// <param name="body">Action favourited or unfavourited</param>
        /// <response code="200">OK</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/my/music/favourites/{type}/{id}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostPersonalisedMusicFavouritesByTypeById")]
        [SwaggerResponse(statusCode: 200, type: typeof(PersonalisedMusicResponse), description: "OK")]
        [SwaggerResponse(statusCode: 0, type: typeof(PersonalisedMusicErrorResponse), description: "Unexpected error")]
        public virtual IActionResult PostPersonalisedMusicFavouritesByTypeById([FromHeader (Name = "Authorization")][Required()]string authorization, [FromHeader (Name = "X-Authentication-Provider")][Required()]string xAuthenticationProvider, [FromHeader (Name = "X-API-Key")][Required()]string xAPIKey, [FromRoute (Name = "type")][Required]string type, [FromRoute (Name = "id")][Required]string id, [FromBody]PersonalisedMusicRequest body)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PersonalisedMusicResponse));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(PersonalisedMusicErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"schema\" : \"schema\",\n  \"total\" : 5,\n  \"method\" : \"method\",\n  \"offset\" : 6,\n  \"limit\" : 0,\n  \"replied_at\" : \"replied_at\",\n  \"results\" : [ {\n    \"urn\" : \"urn\",\n    \"added_at\" : \"added_at\",\n    \"activity\" : \"activity\",\n    \"data\" : [ {\n      \"playlist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"updated_at\" : \"updated_at\",\n        \"playback_type\" : \"playback_type\",\n        \"service_id\" : \"service_id\",\n        \"description\" : \"description\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"starts_at\" : \"starts_at\",\n          \"expires_at\" : \"expires_at\",\n          \"warnings\" : [ \"warnings\", \"warnings\" ],\n          \"id\" : \"id\"\n        },\n        \"tracks\" : {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"contributions\" : [ {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }, {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          } ],\n          \"id\" : \"id\",\n          \"media\" : [ {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          }, {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          } ],\n          \"title\" : \"title\",\n          \"type\" : \"type\",\n          \"version\" : {\n            \"duration\" : \"duration\",\n            \"vpid\" : \"vpid\",\n            \"classical\" : true,\n            \"radio\" : true\n          }\n        }\n      },\n      \"artist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"role\" : \"role\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      },\n      \"service\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"genre\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"track\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"contributions\" : [ {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        }, {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        } ],\n        \"id\" : \"id\",\n        \"media\" : [ {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        }, {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        } ],\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        }\n      },\n      \"clip\" : {\n        \"masterbrandMid\" : \"masterbrandMid\",\n        \"parentProgramme\" : {\n          \"entityType\" : \"entityType\",\n          \"pid\" : \"pid\",\n          \"title\" : \"title\"\n        },\n        \"endDate\" : \"endDate\",\n        \"entityType\" : \"entityType\",\n        \"imageUrl\" : \"imageUrl\",\n        \"mediaType\" : \"mediaType\",\n        \"pid\" : \"pid\",\n        \"contributors\" : [ \"contributors\", \"contributors\" ],\n        \"synopsis\" : \"synopsis\",\n        \"title\" : \"title\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        },\n        \"startDate\" : \"startDate\"\n      }\n    }, {\n      \"playlist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"updated_at\" : \"updated_at\",\n        \"playback_type\" : \"playback_type\",\n        \"service_id\" : \"service_id\",\n        \"description\" : \"description\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"starts_at\" : \"starts_at\",\n          \"expires_at\" : \"expires_at\",\n          \"warnings\" : [ \"warnings\", \"warnings\" ],\n          \"id\" : \"id\"\n        },\n        \"tracks\" : {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"contributions\" : [ {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }, {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          } ],\n          \"id\" : \"id\",\n          \"media\" : [ {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          }, {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          } ],\n          \"title\" : \"title\",\n          \"type\" : \"type\",\n          \"version\" : {\n            \"duration\" : \"duration\",\n            \"vpid\" : \"vpid\",\n            \"classical\" : true,\n            \"radio\" : true\n          }\n        }\n      },\n      \"artist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"role\" : \"role\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      },\n      \"service\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"genre\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"track\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"contributions\" : [ {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        }, {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        } ],\n        \"id\" : \"id\",\n        \"media\" : [ {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        }, {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        } ],\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        }\n      },\n      \"clip\" : {\n        \"masterbrandMid\" : \"masterbrandMid\",\n        \"parentProgramme\" : {\n          \"entityType\" : \"entityType\",\n          \"pid\" : \"pid\",\n          \"title\" : \"title\"\n        },\n        \"endDate\" : \"endDate\",\n        \"entityType\" : \"entityType\",\n        \"imageUrl\" : \"imageUrl\",\n        \"mediaType\" : \"mediaType\",\n        \"pid\" : \"pid\",\n        \"contributors\" : [ \"contributors\", \"contributors\" ],\n        \"synopsis\" : \"synopsis\",\n        \"title\" : \"title\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        },\n        \"startDate\" : \"startDate\"\n      }\n    } ],\n    \"domain\" : \"domain\",\n    \"meta_data\" : {\n      \"key\" : \"key\"\n    },\n    \"action\" : \"action\",\n    \"id\" : \"id\",\n    \"type\" : \"type\"\n  }, {\n    \"urn\" : \"urn\",\n    \"added_at\" : \"added_at\",\n    \"activity\" : \"activity\",\n    \"data\" : [ {\n      \"playlist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"updated_at\" : \"updated_at\",\n        \"playback_type\" : \"playback_type\",\n        \"service_id\" : \"service_id\",\n        \"description\" : \"description\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"starts_at\" : \"starts_at\",\n          \"expires_at\" : \"expires_at\",\n          \"warnings\" : [ \"warnings\", \"warnings\" ],\n          \"id\" : \"id\"\n        },\n        \"tracks\" : {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"contributions\" : [ {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }, {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          } ],\n          \"id\" : \"id\",\n          \"media\" : [ {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          }, {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          } ],\n          \"title\" : \"title\",\n          \"type\" : \"type\",\n          \"version\" : {\n            \"duration\" : \"duration\",\n            \"vpid\" : \"vpid\",\n            \"classical\" : true,\n            \"radio\" : true\n          }\n        }\n      },\n      \"artist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"role\" : \"role\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      },\n      \"service\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"genre\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"track\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"contributions\" : [ {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        }, {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        } ],\n        \"id\" : \"id\",\n        \"media\" : [ {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        }, {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        } ],\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        }\n      },\n      \"clip\" : {\n        \"masterbrandMid\" : \"masterbrandMid\",\n        \"parentProgramme\" : {\n          \"entityType\" : \"entityType\",\n          \"pid\" : \"pid\",\n          \"title\" : \"title\"\n        },\n        \"endDate\" : \"endDate\",\n        \"entityType\" : \"entityType\",\n        \"imageUrl\" : \"imageUrl\",\n        \"mediaType\" : \"mediaType\",\n        \"pid\" : \"pid\",\n        \"contributors\" : [ \"contributors\", \"contributors\" ],\n        \"synopsis\" : \"synopsis\",\n        \"title\" : \"title\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        },\n        \"startDate\" : \"startDate\"\n      }\n    }, {\n      \"playlist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"updated_at\" : \"updated_at\",\n        \"playback_type\" : \"playback_type\",\n        \"service_id\" : \"service_id\",\n        \"description\" : \"description\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"starts_at\" : \"starts_at\",\n          \"expires_at\" : \"expires_at\",\n          \"warnings\" : [ \"warnings\", \"warnings\" ],\n          \"id\" : \"id\"\n        },\n        \"tracks\" : {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"contributions\" : [ {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }, {\n            \"images\" : [ {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            }, {\n              \"format\" : \"format\",\n              \"id\" : \"id\",\n              \"type\" : \"type\"\n            } ],\n            \"role\" : \"role\",\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          } ],\n          \"id\" : \"id\",\n          \"media\" : [ {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          }, {\n            \"duration\" : 1,\n            \"scope\" : \"scope\",\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"source\" : \"source\",\n            \"type\" : \"type\"\n          } ],\n          \"title\" : \"title\",\n          \"type\" : \"type\",\n          \"version\" : {\n            \"duration\" : \"duration\",\n            \"vpid\" : \"vpid\",\n            \"classical\" : true,\n            \"radio\" : true\n          }\n        }\n      },\n      \"artist\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"role\" : \"role\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      },\n      \"service\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"genre\" : {\n        \"id\" : \"id\",\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"key\" : \"key\"\n      },\n      \"track\" : {\n        \"images\" : [ {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        }, {\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"type\" : \"type\"\n        } ],\n        \"contributions\" : [ {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        }, {\n          \"images\" : [ {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          }, {\n            \"format\" : \"format\",\n            \"id\" : \"id\",\n            \"type\" : \"type\"\n          } ],\n          \"role\" : \"role\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        } ],\n        \"id\" : \"id\",\n        \"media\" : [ {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        }, {\n          \"duration\" : 1,\n          \"scope\" : \"scope\",\n          \"format\" : \"format\",\n          \"id\" : \"id\",\n          \"source\" : \"source\",\n          \"type\" : \"type\"\n        } ],\n        \"title\" : \"title\",\n        \"type\" : \"type\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        }\n      },\n      \"clip\" : {\n        \"masterbrandMid\" : \"masterbrandMid\",\n        \"parentProgramme\" : {\n          \"entityType\" : \"entityType\",\n          \"pid\" : \"pid\",\n          \"title\" : \"title\"\n        },\n        \"endDate\" : \"endDate\",\n        \"entityType\" : \"entityType\",\n        \"imageUrl\" : \"imageUrl\",\n        \"mediaType\" : \"mediaType\",\n        \"pid\" : \"pid\",\n        \"contributors\" : [ \"contributors\", \"contributors\" ],\n        \"synopsis\" : \"synopsis\",\n        \"title\" : \"title\",\n        \"version\" : {\n          \"duration\" : \"duration\",\n          \"vpid\" : \"vpid\",\n          \"classical\" : true,\n          \"radio\" : true\n        },\n        \"startDate\" : \"startDate\"\n      }\n    } ],\n    \"domain\" : \"domain\",\n    \"meta_data\" : {\n      \"key\" : \"key\"\n    },\n    \"action\" : \"action\",\n    \"id\" : \"id\",\n    \"type\" : \"type\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PersonalisedMusicResponse>(exampleJson)
            : default(PersonalisedMusicResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Followed Networks, Categories, Artists, Playlists and Genres
        /// </summary>
        /// <remarks>Add networks, categories, artists, playlists, networks, genres or services in a users follows  N.B. Any HTML tags submitted in metadata will be removed </remarks>
        /// <param name="authorization">Bearer OAUTH_TOKEN</param>
        /// <param name="xAuthenticationProvider">Authentication type</param>
        /// <param name="xAPIKey">API_KEY</param>
        /// <param name="body">Action followed or unfollowed</param>
        /// <param name="action">Filters activities based on the type of action</param>
        /// <param name="musicData">Omits music data from the response, defaults to true</param>
        /// <param name="musicContext">Specify context to be passed to Music API</param>
        /// <param name="musicWithinUk">Specify location to be passed to Music API</param>
        /// <response code="200">OK</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/my/music/follows")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostPersonalisedMusicFollowsBatch")]
        [SwaggerResponse(statusCode: 200, type: typeof(PersonalisedMusicSuccess), description: "OK")]
        [SwaggerResponse(statusCode: 0, type: typeof(PersonalisedMusicErrorResponse), description: "Unexpected error")]
        public virtual IActionResult PostPersonalisedMusicFollowsBatch([FromHeader (Name = "Authorization")][Required()]string authorization, [FromHeader (Name = "X-Authentication-Provider")][Required()]string xAuthenticationProvider, [FromHeader (Name = "X-API-Key")][Required()]string xAPIKey, [FromBody]List<PersonalisedMusicBatchRequest> body, [FromQuery (Name = "action")]string action, [FromQuery (Name = "music-data")]bool? musicData, [FromQuery (Name = "music_context")]string musicContext, [FromQuery (Name = "music_within_uk")]bool? musicWithinUk)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PersonalisedMusicSuccess));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(PersonalisedMusicErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"schema\" : \"schema\",\n  \"method\" : \"method\",\n  \"replied_at\" : \"replied_at\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PersonalisedMusicSuccess>(exampleJson)
            : default(PersonalisedMusicSuccess);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Followed Network, Category, Artist, Playlist and Genre
        /// </summary>
        /// <remarks>Add a single network, category, artist, playlist, network, genre or service entity is in a users follows  N.B. Any HTML tags submitted in metadata will be removed </remarks>
        /// <param name="authorization">Bearer OAUTH_TOKEN</param>
        /// <param name="xAuthenticationProvider">Authentication type</param>
        /// <param name="xAPIKey">API_KEY</param>
        /// <param name="type">Supported Music follows types: Playlists, Services, Genres &amp; Artists</param>
        /// <param name="id">Playlists, Services, Networks, Genres, Categories or Artists ID</param>
        /// <param name="body">Action followed or unfollowed</param>
        /// <param name="musicData">Omits music data from the response, defaults to true</param>
        /// <param name="musicContext">Specify context to be passed to Music API</param>
        /// <param name="musicWithinUk">Specify location to be passed to Music API</param>
        /// <response code="200">OK</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/my/music/follows/{type}/{id}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostPersonalisedMusicFollowsByTypeById")]
        [SwaggerResponse(statusCode: 200, type: typeof(PersonalisedMusicSuccess), description: "OK")]
        [SwaggerResponse(statusCode: 0, type: typeof(PersonalisedMusicErrorResponse), description: "Unexpected error")]
        public virtual IActionResult PostPersonalisedMusicFollowsByTypeById([FromHeader (Name = "Authorization")][Required()]string authorization, [FromHeader (Name = "X-Authentication-Provider")][Required()]string xAuthenticationProvider, [FromHeader (Name = "X-API-Key")][Required()]string xAPIKey, [FromRoute (Name = "type")][Required]string type, [FromRoute (Name = "id")][Required]string id, [FromBody]PersonalisedMusicRequest body, [FromQuery (Name = "music-data")]bool? musicData, [FromQuery (Name = "music_context")]string musicContext, [FromQuery (Name = "music_within_uk")]bool? musicWithinUk)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PersonalisedMusicSuccess));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(PersonalisedMusicErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"schema\" : \"schema\",\n  \"method\" : \"method\",\n  \"replied_at\" : \"replied_at\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PersonalisedMusicSuccess>(exampleJson)
            : default(PersonalisedMusicSuccess);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Favourite Tracks or Clips
        /// </summary>
        /// <remarks>Update tracks or clips from a BBC Music user favourites.  N.B. Any HTML tags submitted in metadata will be removed </remarks>
        /// <param name="authorization">Bearer OAUTH_TOKEN</param>
        /// <param name="xAuthenticationProvider">Authentication type</param>
        /// <param name="xAPIKey">API_KEY</param>
        /// <param name="body">Action favourited or unfavourited</param>
        /// <response code="200">OK</response>
        /// <response code="0">Unexpected error</response>
        [HttpPut]
        [Route("/my/music/favourites")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PutPersonalisedMusicFavouritesBatch")]
        [SwaggerResponse(statusCode: 200, type: typeof(PersonalisedMusicSuccess), description: "OK")]
        [SwaggerResponse(statusCode: 0, type: typeof(PersonalisedMusicErrorResponse), description: "Unexpected error")]
        public virtual IActionResult PutPersonalisedMusicFavouritesBatch([FromHeader (Name = "Authorization")][Required()]string authorization, [FromHeader (Name = "X-Authentication-Provider")][Required()]string xAuthenticationProvider, [FromHeader (Name = "X-API-Key")][Required()]string xAPIKey, [FromBody]List<PersonalisedMusicBatchRequest> body)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PersonalisedMusicSuccess));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(PersonalisedMusicErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"schema\" : \"schema\",\n  \"method\" : \"method\",\n  \"replied_at\" : \"replied_at\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PersonalisedMusicSuccess>(exampleJson)
            : default(PersonalisedMusicSuccess);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Favourite Track or Clip
        /// </summary>
        /// <remarks>Update tracks or clips from a BBC Music user favourites.  N.B. Any HTML tags submitted in metadata will be removed </remarks>
        /// <param name="authorization">Bearer OAUTH_TOKEN</param>
        /// <param name="xAuthenticationProvider">Authentication type</param>
        /// <param name="xAPIKey">API_KEY</param>
        /// <param name="type">Supported Music favourite types: Clips or Tracks</param>
        /// <param name="id">Clip PID or Track ID</param>
        /// <param name="body">Action favourited or unfavourited</param>
        /// <response code="200">OK</response>
        /// <response code="0">Unexpected error</response>
        [HttpPut]
        [Route("/my/music/favourites/{type}/{id}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PutPersonalisedMusicFavouritesByTypeById")]
        [SwaggerResponse(statusCode: 200, type: typeof(PersonalisedMusicSuccess), description: "OK")]
        [SwaggerResponse(statusCode: 0, type: typeof(PersonalisedMusicErrorResponse), description: "Unexpected error")]
        public virtual IActionResult PutPersonalisedMusicFavouritesByTypeById([FromHeader (Name = "Authorization")][Required()]string authorization, [FromHeader (Name = "X-Authentication-Provider")][Required()]string xAuthenticationProvider, [FromHeader (Name = "X-API-Key")][Required()]string xAPIKey, [FromRoute (Name = "type")][Required]string type, [FromRoute (Name = "id")][Required]string id, [FromBody]PersonalisedMusicRequest body)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PersonalisedMusicSuccess));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(PersonalisedMusicErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"schema\" : \"schema\",\n  \"method\" : \"method\",\n  \"replied_at\" : \"replied_at\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PersonalisedMusicSuccess>(exampleJson)
            : default(PersonalisedMusicSuccess);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Followed Networks, Categories, Artists, Playlists and Genres
        /// </summary>
        /// <remarks>Update networks, categories, artists, playlists, networks, genres or services in a users follows  N.B. Any HTML tags submitted in metadata will be removed </remarks>
        /// <param name="authorization">Bearer OAUTH_TOKEN</param>
        /// <param name="xAuthenticationProvider">Authentication type</param>
        /// <param name="xAPIKey">API_KEY</param>
        /// <param name="body">Action followed or unfollowed</param>
        /// <param name="action">Filters activities based on the type of action</param>
        /// <param name="musicData">Omits music data from the response, defaults to true</param>
        /// <param name="musicContext">Specify context to be passed to Music API</param>
        /// <param name="musicWithinUk">Specify location to be passed to Music API</param>
        /// <response code="200">OK</response>
        /// <response code="0">Unexpected error</response>
        [HttpPut]
        [Route("/my/music/follows")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PutPersonalisedMusicFollowsBatch")]
        [SwaggerResponse(statusCode: 200, type: typeof(PersonalisedMusicSuccess), description: "OK")]
        [SwaggerResponse(statusCode: 0, type: typeof(PersonalisedMusicErrorResponse), description: "Unexpected error")]
        public virtual IActionResult PutPersonalisedMusicFollowsBatch([FromHeader (Name = "Authorization")][Required()]string authorization, [FromHeader (Name = "X-Authentication-Provider")][Required()]string xAuthenticationProvider, [FromHeader (Name = "X-API-Key")][Required()]string xAPIKey, [FromBody]List<PersonalisedMusicBatchRequest> body, [FromQuery (Name = "action")]string action, [FromQuery (Name = "music-data")]bool? musicData, [FromQuery (Name = "music_context")]string musicContext, [FromQuery (Name = "music_within_uk")]bool? musicWithinUk)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PersonalisedMusicSuccess));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(PersonalisedMusicErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"schema\" : \"schema\",\n  \"method\" : \"method\",\n  \"replied_at\" : \"replied_at\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PersonalisedMusicSuccess>(exampleJson)
            : default(PersonalisedMusicSuccess);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Followed Network, Category, Artist, Playlist and Genre
        /// </summary>
        /// <remarks>Update a single network, category, artist, playlist, network, genre or service entity is in a users follows  N.B. Any HTML tags submitted in metadata will be removed </remarks>
        /// <param name="authorization">Bearer OAUTH_TOKEN</param>
        /// <param name="xAuthenticationProvider">Authentication type</param>
        /// <param name="xAPIKey">API_KEY</param>
        /// <param name="type">Supported Music follows types: Playlists, Services, Genres &amp; Artists</param>
        /// <param name="id">Playlists, Services, Networks, Genres, Categories or Artists ID</param>
        /// <param name="body">Action followed or unfollowed</param>
        /// <param name="musicData">Omits music data from the response, defaults to true</param>
        /// <param name="musicContext">Specify context to be passed to Music API</param>
        /// <param name="musicWithinUk">Specify location to be passed to Music API</param>
        /// <response code="200">OK</response>
        /// <response code="0">Unexpected error</response>
        [HttpPut]
        [Route("/my/music/follows/{type}/{id}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PutPersonalisedMusicFollowsByTypeById")]
        [SwaggerResponse(statusCode: 200, type: typeof(PersonalisedMusicSuccess), description: "OK")]
        [SwaggerResponse(statusCode: 0, type: typeof(PersonalisedMusicErrorResponse), description: "Unexpected error")]
        public virtual IActionResult PutPersonalisedMusicFollowsByTypeById([FromHeader (Name = "Authorization")][Required()]string authorization, [FromHeader (Name = "X-Authentication-Provider")][Required()]string xAuthenticationProvider, [FromHeader (Name = "X-API-Key")][Required()]string xAPIKey, [FromRoute (Name = "type")][Required]string type, [FromRoute (Name = "id")][Required]string id, [FromBody]PersonalisedMusicRequest body, [FromQuery (Name = "music-data")]bool? musicData, [FromQuery (Name = "music_context")]string musicContext, [FromQuery (Name = "music_within_uk")]bool? musicWithinUk)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PersonalisedMusicSuccess));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(PersonalisedMusicErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"schema\" : \"schema\",\n  \"method\" : \"method\",\n  \"replied_at\" : \"replied_at\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PersonalisedMusicSuccess>(exampleJson)
            : default(PersonalisedMusicSuccess);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
