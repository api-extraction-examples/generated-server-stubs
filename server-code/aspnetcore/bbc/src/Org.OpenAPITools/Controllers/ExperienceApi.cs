/*
 * Radio & Music Services
 *
 * We encapsulate Radio & Music business logic for iPlayer Radio and BBC Music products on all platforms. We add value by reliably providing the right blend of metadata needed by clients.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ExperienceApiController : ControllerBase
    { 
        /// <summary>
        /// Homepage Experience
        /// </summary>
        /// <remarks>Homepage Experience </remarks>
        /// <param name="xAPIKey">API_KEY</param>
        /// <response code="200">OK</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/experience/homepage")]
        [ValidateModelState]
        [SwaggerOperation("GetExperienceHomepage")]
        [SwaggerResponse(statusCode: 200, type: typeof(ExperienceResponse), description: "OK")]
        [SwaggerResponse(statusCode: 0, type: typeof(ErrorResponse), description: "Unexpected error")]
        public virtual IActionResult GetExperienceHomepage([FromHeader (Name = "X-API-Key")][Required()]string xAPIKey)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ExperienceResponse));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"$schema\" : \"$schema\",\n  \"data\" : [ {\n    \"description\" : \"description\",\n    \"title\" : \"title\",\n    \"type\" : \"type\",\n    \"uri\" : \"uri\"\n  }, {\n    \"description\" : \"description\",\n    \"title\" : \"title\",\n    \"type\" : \"type\",\n    \"uri\" : \"uri\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ExperienceResponse>(exampleJson)
            : default(ExperienceResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
