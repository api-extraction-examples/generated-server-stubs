/*
 * Radio & Music Services
 *
 * We encapsulate Radio & Music business logic for iPlayer Radio and BBC Music products on all platforms. We add value by reliably providing the right blend of metadata needed by clients.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class CategoriesApiController : ControllerBase
    { 
        /// <summary>
        /// List of categories
        /// </summary>
        /// <remarks>Retrieve Categories </remarks>
        /// <param name="xAPIKey">API_KEY</param>
        /// <param name="kind">Filter by provided query. E.g. &#39;promoted&#39; returns promoted categories</param>
        /// <response code="200">OK</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/categories")]
        [ValidateModelState]
        [SwaggerOperation("CategoriesGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(CategoriesResponse), description: "OK")]
        [SwaggerResponse(statusCode: 0, type: typeof(CategoryErrorResponse), description: "Unexpected error")]
        public virtual IActionResult CategoriesGet([FromHeader (Name = "X-API-Key")][Required()]string xAPIKey, [FromQuery (Name = "kind")]string kind)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CategoriesResponse));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(CategoryErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"total\" : 5,\n  \"$schema\" : \"$schema\",\n  \"offset\" : 6,\n  \"limit\" : 0,\n  \"results\" : [ {\n    \"depth\" : 5,\n    \"category_type\" : \"category_type\",\n    \"pip_id\" : \"pip_id\",\n    \"child_categories\" : [ {\n      \"depth\" : 1,\n      \"category_type\" : \"category_type\",\n      \"pip_id\" : \"pip_id\",\n      \"child_categories\" : [ null, null ],\n      \"id\" : \"id\",\n      \"title\" : \"title\",\n      \"type\" : \"type\",\n      \"url_key\" : \"url_key\"\n    }, {\n      \"depth\" : 1,\n      \"category_type\" : \"category_type\",\n      \"pip_id\" : \"pip_id\",\n      \"child_categories\" : [ null, null ],\n      \"id\" : \"id\",\n      \"title\" : \"title\",\n      \"type\" : \"type\",\n      \"url_key\" : \"url_key\"\n    } ],\n    \"id\" : \"id\",\n    \"title\" : \"title\",\n    \"type\" : \"type\",\n    \"url_key\" : \"url_key\"\n  }, {\n    \"depth\" : 5,\n    \"category_type\" : \"category_type\",\n    \"pip_id\" : \"pip_id\",\n    \"child_categories\" : [ {\n      \"depth\" : 1,\n      \"category_type\" : \"category_type\",\n      \"pip_id\" : \"pip_id\",\n      \"child_categories\" : [ null, null ],\n      \"id\" : \"id\",\n      \"title\" : \"title\",\n      \"type\" : \"type\",\n      \"url_key\" : \"url_key\"\n    }, {\n      \"depth\" : 1,\n      \"category_type\" : \"category_type\",\n      \"pip_id\" : \"pip_id\",\n      \"child_categories\" : [ null, null ],\n      \"id\" : \"id\",\n      \"title\" : \"title\",\n      \"type\" : \"type\",\n      \"url_key\" : \"url_key\"\n    } ],\n    \"id\" : \"id\",\n    \"title\" : \"title\",\n    \"type\" : \"type\",\n    \"url_key\" : \"url_key\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CategoriesResponse>(exampleJson)
            : default(CategoriesResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Category by ID
        /// </summary>
        /// <remarks>Retrieve Categories by ID </remarks>
        /// <param name="xAPIKey">API_KEY</param>
        /// <param name="id">Retrieve information about the category. E.g. &#39;sport-football-europeanchampionship&#39;</param>
        /// <response code="200">OK</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/categories/{id}")]
        [ValidateModelState]
        [SwaggerOperation("CategoriesIdGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(CategoriesResponse), description: "OK")]
        [SwaggerResponse(statusCode: 0, type: typeof(CategoryErrorResponse), description: "Unexpected error")]
        public virtual IActionResult CategoriesIdGet([FromHeader (Name = "X-API-Key")][Required()]string xAPIKey, [FromRoute (Name = "id")][Required]string id)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CategoriesResponse));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(CategoryErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"total\" : 5,\n  \"$schema\" : \"$schema\",\n  \"offset\" : 6,\n  \"limit\" : 0,\n  \"results\" : [ {\n    \"depth\" : 5,\n    \"category_type\" : \"category_type\",\n    \"pip_id\" : \"pip_id\",\n    \"child_categories\" : [ {\n      \"depth\" : 1,\n      \"category_type\" : \"category_type\",\n      \"pip_id\" : \"pip_id\",\n      \"child_categories\" : [ null, null ],\n      \"id\" : \"id\",\n      \"title\" : \"title\",\n      \"type\" : \"type\",\n      \"url_key\" : \"url_key\"\n    }, {\n      \"depth\" : 1,\n      \"category_type\" : \"category_type\",\n      \"pip_id\" : \"pip_id\",\n      \"child_categories\" : [ null, null ],\n      \"id\" : \"id\",\n      \"title\" : \"title\",\n      \"type\" : \"type\",\n      \"url_key\" : \"url_key\"\n    } ],\n    \"id\" : \"id\",\n    \"title\" : \"title\",\n    \"type\" : \"type\",\n    \"url_key\" : \"url_key\"\n  }, {\n    \"depth\" : 5,\n    \"category_type\" : \"category_type\",\n    \"pip_id\" : \"pip_id\",\n    \"child_categories\" : [ {\n      \"depth\" : 1,\n      \"category_type\" : \"category_type\",\n      \"pip_id\" : \"pip_id\",\n      \"child_categories\" : [ null, null ],\n      \"id\" : \"id\",\n      \"title\" : \"title\",\n      \"type\" : \"type\",\n      \"url_key\" : \"url_key\"\n    }, {\n      \"depth\" : 1,\n      \"category_type\" : \"category_type\",\n      \"pip_id\" : \"pip_id\",\n      \"child_categories\" : [ null, null ],\n      \"id\" : \"id\",\n      \"title\" : \"title\",\n      \"type\" : \"type\",\n      \"url_key\" : \"url_key\"\n    } ],\n    \"id\" : \"id\",\n    \"title\" : \"title\",\n    \"type\" : \"type\",\n    \"url_key\" : \"url_key\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CategoriesResponse>(exampleJson)
            : default(CategoriesResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
