/*
 * Radio & Music Services
 *
 * We encapsulate Radio & Music business logic for iPlayer Radio and BBC Music products on all platforms. We add value by reliably providing the right blend of metadata needed by clients.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class BroadcastsApiController : ControllerBase
    { 
        /// <summary>
        /// Broadcasts
        /// </summary>
        /// <remarks>All broadcasts </remarks>
        /// <param name="xAPIKey">API_KEY</param>
        /// <param name="offset">Paginated results offset</param>
        /// <param name="limit">Paginated results limit</param>
        /// <param name="serviceId">Filter by Service ID. E.g. bbc_radio_fourfm</param>
        /// <param name="date">Filter by date. E.g. 2016-06-17</param>
        /// <param name="sort">Sort by provided query. E.g. &#39;start_at&#39; sorts in ascending order, and &#39;-start_at&#39; sorts in descending order</param>
        /// <response code="200">OK</response>
        /// <response code="401">There was an error with the supplied &#x60;Authorization&#x60; header.</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/broadcasts")]
        [ValidateModelState]
        [SwaggerOperation("BroadcastsGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(BroadcastsResponse), description: "OK")]
        [SwaggerResponse(statusCode: 401, type: typeof(ErrorResponse), description: "There was an error with the supplied &#x60;Authorization&#x60; header.")]
        [SwaggerResponse(statusCode: 0, type: typeof(ErrorResponse), description: "Unexpected error")]
        public virtual IActionResult BroadcastsGet([FromHeader (Name = "X-API-Key")][Required()]string xAPIKey, [FromQuery (Name = "offset")]int? offset, [FromQuery (Name = "limit")]int? limit, [FromQuery (Name = "service_id")]string serviceId, [FromQuery (Name = "date")]string date, [FromQuery (Name = "sort")]string sort)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(BroadcastsResponse));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"total\" : 5,\n  \"$schema\" : \"$schema\",\n  \"offset\" : 6,\n  \"limit\" : 0,\n  \"results\" : [ {\n    \"is_webcast\" : true,\n    \"is_repeat\" : true,\n    \"start\" : \"start\",\n    \"pid\" : \"pid\",\n    \"type\" : \"type\",\n    \"duration\" : 1,\n    \"version_pid\" : \"version_pid\",\n    \"service_id\" : \"service_id\",\n    \"is_live\" : true,\n    \"is_audio_described\" : true,\n    \"end\" : \"end\",\n    \"is_blanked\" : true,\n    \"programme\" : {\n      \"pid\" : \"pid\",\n      \"type\" : \"brand_summary\"\n    },\n    \"is_critical\" : true\n  }, {\n    \"is_webcast\" : true,\n    \"is_repeat\" : true,\n    \"start\" : \"start\",\n    \"pid\" : \"pid\",\n    \"type\" : \"type\",\n    \"duration\" : 1,\n    \"version_pid\" : \"version_pid\",\n    \"service_id\" : \"service_id\",\n    \"is_live\" : true,\n    \"is_audio_described\" : true,\n    \"end\" : \"end\",\n    \"is_blanked\" : true,\n    \"programme\" : {\n      \"pid\" : \"pid\",\n      \"type\" : \"brand_summary\"\n    },\n    \"is_critical\" : true\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BroadcastsResponse>(exampleJson)
            : default(BroadcastsResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Latest Broadcasts
        /// </summary>
        /// <remarks>Broadcasts for the current day </remarks>
        /// <param name="xAPIKey">API_KEY</param>
        /// <param name="offset">Paginated results offset</param>
        /// <param name="limit">Paginated results limit</param>
        /// <param name="serviceId">Filter by Service ID. E.g. bbc_radio_fourfm</param>
        /// <param name="onAir">Filter what is on air. E.g. &#39;now&#39; returns current programme being broadcasted.</param>
        /// <param name="next">Filter what will be on air next in minutes. E.g. &#39;240&#39; returns programmes broadcasted in the next four hurs</param>
        /// <param name="previous">Filter what was on air previously in minutes. E.g. &#39;240&#39; returns programmes broadcasted in the previous four hurs</param>
        /// <param name="sort">Sort by provided query. E.g. &#39;start_at&#39; sorts in ascending order, and &#39;-start_at&#39; sorts in descending order</param>
        /// <response code="200">OK</response>
        /// <response code="401">There was an error with the supplied &#x60;Authorization&#x60; header.</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/broadcasts/latest")]
        [ValidateModelState]
        [SwaggerOperation("BroadcastsLatestGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(BroadcastsResponse), description: "OK")]
        [SwaggerResponse(statusCode: 401, type: typeof(ErrorResponse), description: "There was an error with the supplied &#x60;Authorization&#x60; header.")]
        [SwaggerResponse(statusCode: 0, type: typeof(ErrorResponse), description: "Unexpected error")]
        public virtual IActionResult BroadcastsLatestGet([FromHeader (Name = "X-API-Key")][Required()]string xAPIKey, [FromQuery (Name = "offset")]int? offset, [FromQuery (Name = "limit")]int? limit, [FromQuery (Name = "service_id")]string serviceId, [FromQuery (Name = "on_air")]string onAir, [FromQuery (Name = "next")]string next, [FromQuery (Name = "previous")]string previous, [FromQuery (Name = "sort")]string sort)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(BroadcastsResponse));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"total\" : 5,\n  \"$schema\" : \"$schema\",\n  \"offset\" : 6,\n  \"limit\" : 0,\n  \"results\" : [ {\n    \"is_webcast\" : true,\n    \"is_repeat\" : true,\n    \"start\" : \"start\",\n    \"pid\" : \"pid\",\n    \"type\" : \"type\",\n    \"duration\" : 1,\n    \"version_pid\" : \"version_pid\",\n    \"service_id\" : \"service_id\",\n    \"is_live\" : true,\n    \"is_audio_described\" : true,\n    \"end\" : \"end\",\n    \"is_blanked\" : true,\n    \"programme\" : {\n      \"pid\" : \"pid\",\n      \"type\" : \"brand_summary\"\n    },\n    \"is_critical\" : true\n  }, {\n    \"is_webcast\" : true,\n    \"is_repeat\" : true,\n    \"start\" : \"start\",\n    \"pid\" : \"pid\",\n    \"type\" : \"type\",\n    \"duration\" : 1,\n    \"version_pid\" : \"version_pid\",\n    \"service_id\" : \"service_id\",\n    \"is_live\" : true,\n    \"is_audio_described\" : true,\n    \"end\" : \"end\",\n    \"is_blanked\" : true,\n    \"programme\" : {\n      \"pid\" : \"pid\",\n      \"type\" : \"brand_summary\"\n    },\n    \"is_critical\" : true\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BroadcastsResponse>(exampleJson)
            : default(BroadcastsResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Broadcasts by PID
        /// </summary>
        /// <remarks>Find broadcast by PID </remarks>
        /// <param name="xAPIKey">API_KEY</param>
        /// <param name="pid">pid</param>
        /// <response code="200">OK</response>
        /// <response code="401">There was an error with the supplied &#x60;Authorization&#x60; header.</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/broadcasts/{pid}")]
        [ValidateModelState]
        [SwaggerOperation("GetBroadcastByPid")]
        [SwaggerResponse(statusCode: 200, type: typeof(BroadcastsResponse), description: "OK")]
        [SwaggerResponse(statusCode: 401, type: typeof(ErrorResponse), description: "There was an error with the supplied &#x60;Authorization&#x60; header.")]
        [SwaggerResponse(statusCode: 0, type: typeof(ErrorResponse), description: "Unexpected error")]
        public virtual IActionResult GetBroadcastByPid([FromHeader (Name = "X-API-Key")][Required()]string xAPIKey, [FromRoute (Name = "pid")][Required]string pid)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(BroadcastsResponse));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(ErrorResponse));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"total\" : 5,\n  \"$schema\" : \"$schema\",\n  \"offset\" : 6,\n  \"limit\" : 0,\n  \"results\" : [ {\n    \"is_webcast\" : true,\n    \"is_repeat\" : true,\n    \"start\" : \"start\",\n    \"pid\" : \"pid\",\n    \"type\" : \"type\",\n    \"duration\" : 1,\n    \"version_pid\" : \"version_pid\",\n    \"service_id\" : \"service_id\",\n    \"is_live\" : true,\n    \"is_audio_described\" : true,\n    \"end\" : \"end\",\n    \"is_blanked\" : true,\n    \"programme\" : {\n      \"pid\" : \"pid\",\n      \"type\" : \"brand_summary\"\n    },\n    \"is_critical\" : true\n  }, {\n    \"is_webcast\" : true,\n    \"is_repeat\" : true,\n    \"start\" : \"start\",\n    \"pid\" : \"pid\",\n    \"type\" : \"type\",\n    \"duration\" : 1,\n    \"version_pid\" : \"version_pid\",\n    \"service_id\" : \"service_id\",\n    \"is_live\" : true,\n    \"is_audio_described\" : true,\n    \"end\" : \"end\",\n    \"is_blanked\" : true,\n    \"programme\" : {\n      \"pid\" : \"pid\",\n      \"type\" : \"brand_summary\"\n    },\n    \"is_critical\" : true\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BroadcastsResponse>(exampleJson)
            : default(BroadcastsResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
