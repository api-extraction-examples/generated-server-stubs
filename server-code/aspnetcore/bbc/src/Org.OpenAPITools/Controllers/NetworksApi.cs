/*
 * Radio & Music Services
 *
 * We encapsulate Radio & Music business logic for iPlayer Radio and BBC Music products on all platforms. We add value by reliably providing the right blend of metadata needed by clients.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class NetworksApiController : ControllerBase
    { 
        /// <summary>
        /// Networks
        /// </summary>
        /// <remarks>All iPlayer Radio networks - contains business logic for masterbrand and service relationships </remarks>
        /// <param name="xAPIKey">API_KEY</param>
        /// <param name="preset">Returns all networks needed for iPlayer Radio responsive web navigation</param>
        /// <param name="international">Returns all networks available internationally</param>
        /// <response code="200">OK</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/radio/networks.json")]
        [ValidateModelState]
        [SwaggerOperation("GetRadioNetworks")]
        [SwaggerResponse(statusCode: 200, type: typeof(NetworksResponse), description: "OK")]
        [SwaggerResponse(statusCode: 0, type: typeof(RadioErrorResponse), description: "Unexpected error")]
        public virtual IActionResult GetRadioNetworks([FromHeader (Name = "X-API-Key")][Required()]string xAPIKey, [FromQuery (Name = "preset")]bool? preset, [FromQuery (Name = "international")]bool? international)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(NetworksResponse));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(RadioErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"total\" : 5,\n  \"$schema\" : \"$schema\",\n  \"offset\" : 6,\n  \"limit\" : 0,\n  \"results\" : [ {\n    \"date_ranges\" : [ {\n      \"start\" : \"start\",\n      \"end\" : \"end\"\n    }, {\n      \"start\" : \"start\",\n      \"end\" : \"end\"\n    } ],\n    \"active\" : true,\n    \"preset\" : true,\n    \"services\" : [ {\n      \"coverage\" : \"coverage\",\n      \"date_ranges\" : [ {\n        \"start\" : \"start\",\n        \"end\" : \"end\"\n      }, {\n        \"start\" : \"start\",\n        \"end\" : \"end\"\n      } ],\n      \"default\" : true,\n      \"short_title\" : \"short_title\",\n      \"active\" : true,\n      \"id\" : \"id\",\n      \"default_language\" : \"default_language\",\n      \"region\" : \"region\",\n      \"title\" : \"title\",\n      \"type\" : \"type\"\n    }, {\n      \"coverage\" : \"coverage\",\n      \"date_ranges\" : [ {\n        \"start\" : \"start\",\n        \"end\" : \"end\"\n      }, {\n        \"start\" : \"start\",\n        \"end\" : \"end\"\n      } ],\n      \"default\" : true,\n      \"short_title\" : \"short_title\",\n      \"active\" : true,\n      \"id\" : \"id\",\n      \"default_language\" : \"default_language\",\n      \"region\" : \"region\",\n      \"title\" : \"title\",\n      \"type\" : \"type\"\n    } ],\n    \"sort\" : 1,\n    \"title\" : \"title\",\n    \"type\" : \"type\",\n    \"short_title\" : \"short_title\",\n    \"promoted_category_summaries\" : [ {\n      \"category_type\" : \"category_type\",\n      \"id\" : \"id\",\n      \"title\" : \"title\",\n      \"type\" : \"type\",\n      \"key\" : \"key\"\n    }, {\n      \"category_type\" : \"category_type\",\n      \"id\" : \"id\",\n      \"title\" : \"title\",\n      \"type\" : \"type\",\n      \"key\" : \"key\"\n    } ],\n    \"id\" : \"id\",\n    \"international\" : true,\n    \"contacts\" : [ {\n      \"service\" : \"service\",\n      \"name\" : \"name\",\n      \"handle\" : \"handle\",\n      \"url\" : \"url\"\n    }, {\n      \"service\" : \"service\",\n      \"name\" : \"name\",\n      \"handle\" : \"handle\",\n      \"url\" : \"url\"\n    } ],\n    \"key\" : \"key\",\n    \"group\" : \"group\"\n  }, {\n    \"date_ranges\" : [ {\n      \"start\" : \"start\",\n      \"end\" : \"end\"\n    }, {\n      \"start\" : \"start\",\n      \"end\" : \"end\"\n    } ],\n    \"active\" : true,\n    \"preset\" : true,\n    \"services\" : [ {\n      \"coverage\" : \"coverage\",\n      \"date_ranges\" : [ {\n        \"start\" : \"start\",\n        \"end\" : \"end\"\n      }, {\n        \"start\" : \"start\",\n        \"end\" : \"end\"\n      } ],\n      \"default\" : true,\n      \"short_title\" : \"short_title\",\n      \"active\" : true,\n      \"id\" : \"id\",\n      \"default_language\" : \"default_language\",\n      \"region\" : \"region\",\n      \"title\" : \"title\",\n      \"type\" : \"type\"\n    }, {\n      \"coverage\" : \"coverage\",\n      \"date_ranges\" : [ {\n        \"start\" : \"start\",\n        \"end\" : \"end\"\n      }, {\n        \"start\" : \"start\",\n        \"end\" : \"end\"\n      } ],\n      \"default\" : true,\n      \"short_title\" : \"short_title\",\n      \"active\" : true,\n      \"id\" : \"id\",\n      \"default_language\" : \"default_language\",\n      \"region\" : \"region\",\n      \"title\" : \"title\",\n      \"type\" : \"type\"\n    } ],\n    \"sort\" : 1,\n    \"title\" : \"title\",\n    \"type\" : \"type\",\n    \"short_title\" : \"short_title\",\n    \"promoted_category_summaries\" : [ {\n      \"category_type\" : \"category_type\",\n      \"id\" : \"id\",\n      \"title\" : \"title\",\n      \"type\" : \"type\",\n      \"key\" : \"key\"\n    }, {\n      \"category_type\" : \"category_type\",\n      \"id\" : \"id\",\n      \"title\" : \"title\",\n      \"type\" : \"type\",\n      \"key\" : \"key\"\n    } ],\n    \"id\" : \"id\",\n    \"international\" : true,\n    \"contacts\" : [ {\n      \"service\" : \"service\",\n      \"name\" : \"name\",\n      \"handle\" : \"handle\",\n      \"url\" : \"url\"\n    }, {\n      \"service\" : \"service\",\n      \"name\" : \"name\",\n      \"handle\" : \"handle\",\n      \"url\" : \"url\"\n    } ],\n    \"key\" : \"key\",\n    \"group\" : \"group\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<NetworksResponse>(exampleJson)
            : default(NetworksResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
