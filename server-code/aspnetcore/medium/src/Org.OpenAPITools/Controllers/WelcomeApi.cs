/*
 * Medium API
 *
 * Medium API helps you to quickly extract data from Medium's Website (https://medium.com).   You can gather data related to users, publications, articles (including its textual content), latest posts &amp; top writers within a topic/niche, etcâ€¦ 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: nishu@mediumapi.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class WelcomeApiController : ControllerBase
    { 
        /// <summary>
        /// Get Welcome
        /// </summary>
        /// <remarks>**Test Endpoint** Returns the information about the Medium API </remarks>
        /// <response code="200">OK</response>
        [HttpGet]
        [Route("/")]
        [ValidateModelState]
        [SwaggerOperation("RootGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(Get200Response), description: "OK")]
        public virtual IActionResult RootGet()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Get200Response));
            string exampleJson = null;
            exampleJson = "{\n  \"twitter\" : \"https://twitter.com/medium_api\",\n  \"website\" : \"https://mediumapi.com\",\n  \"documentation\" : \"https://docs.mediumapi.com\",\n  \"name\" : \"Medium API\",\n  \"developer\" : \"Nishu Jain\",\n  \"linkedin\" : \"https://www.linkedin.com/company/medium-api\",\n  \"email\" : \"nishu@mediumapi.com\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Get200Response>(exampleJson)
            : default(Get200Response);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
