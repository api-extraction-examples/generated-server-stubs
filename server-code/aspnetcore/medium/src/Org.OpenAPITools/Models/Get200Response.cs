/*
 * Medium API
 *
 * Medium API helps you to quickly extract data from Medium's Website (https://medium.com).   You can gather data related to users, publications, articles (including its textual content), latest posts &amp; top writers within a topic/niche, etcâ€¦ 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: nishu@mediumapi.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class Get200Response : IEquatable<Get200Response>
    {
        /// <summary>
        /// Full name of the API&#39;s developer
        /// </summary>
        /// <value>Full name of the API&#39;s developer</value>
        /// <example>Nishu Jain</example>
        [DataMember(Name="developer", EmitDefaultValue=false)]
        public string Developer { get; set; }

        /// <summary>
        /// Link to the Medium API&#39;s documentation
        /// </summary>
        /// <value>Link to the Medium API&#39;s documentation</value>
        /// <example>https://docs.mediumapi.com</example>
        [DataMember(Name="documentation", EmitDefaultValue=false)]
        public string Documentation { get; set; }

        /// <summary>
        /// Email ID of the developer
        /// </summary>
        /// <value>Email ID of the developer</value>
        /// <example>nishu@mediumapi.com</example>
        [DataMember(Name="email", EmitDefaultValue=false)]
        public string Email { get; set; }

        /// <summary>
        /// LinkedIn Page URL
        /// </summary>
        /// <value>LinkedIn Page URL</value>
        /// <example>https://www.linkedin.com/company/medium-api</example>
        [DataMember(Name="linkedin", EmitDefaultValue=false)]
        public string Linkedin { get; set; }

        /// <summary>
        /// Full name of the API
        /// </summary>
        /// <value>Full name of the API</value>
        /// <example>Medium API</example>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Twitter Profile URL
        /// </summary>
        /// <value>Twitter Profile URL</value>
        /// <example>https://twitter.com/medium_api</example>
        [DataMember(Name="twitter", EmitDefaultValue=false)]
        public string Twitter { get; set; }

        /// <summary>
        /// Link to the Medium API&#39;s website
        /// </summary>
        /// <value>Link to the Medium API&#39;s website</value>
        /// <example>https://mediumapi.com</example>
        [DataMember(Name="website", EmitDefaultValue=false)]
        public string Website { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Get200Response {\n");
            sb.Append("  Developer: ").Append(Developer).Append("\n");
            sb.Append("  Documentation: ").Append(Documentation).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  Linkedin: ").Append(Linkedin).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Twitter: ").Append(Twitter).Append("\n");
            sb.Append("  Website: ").Append(Website).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((Get200Response)obj);
        }

        /// <summary>
        /// Returns true if Get200Response instances are equal
        /// </summary>
        /// <param name="other">Instance of Get200Response to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Get200Response other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Developer == other.Developer ||
                    Developer != null &&
                    Developer.Equals(other.Developer)
                ) && 
                (
                    Documentation == other.Documentation ||
                    Documentation != null &&
                    Documentation.Equals(other.Documentation)
                ) && 
                (
                    Email == other.Email ||
                    Email != null &&
                    Email.Equals(other.Email)
                ) && 
                (
                    Linkedin == other.Linkedin ||
                    Linkedin != null &&
                    Linkedin.Equals(other.Linkedin)
                ) && 
                (
                    Name == other.Name ||
                    Name != null &&
                    Name.Equals(other.Name)
                ) && 
                (
                    Twitter == other.Twitter ||
                    Twitter != null &&
                    Twitter.Equals(other.Twitter)
                ) && 
                (
                    Website == other.Website ||
                    Website != null &&
                    Website.Equals(other.Website)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Developer != null)
                    hashCode = hashCode * 59 + Developer.GetHashCode();
                    if (Documentation != null)
                    hashCode = hashCode * 59 + Documentation.GetHashCode();
                    if (Email != null)
                    hashCode = hashCode * 59 + Email.GetHashCode();
                    if (Linkedin != null)
                    hashCode = hashCode * 59 + Linkedin.GetHashCode();
                    if (Name != null)
                    hashCode = hashCode * 59 + Name.GetHashCode();
                    if (Twitter != null)
                    hashCode = hashCode * 59 + Twitter.GetHashCode();
                    if (Website != null)
                    hashCode = hashCode * 59 + Website.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(Get200Response left, Get200Response right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(Get200Response left, Get200Response right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
