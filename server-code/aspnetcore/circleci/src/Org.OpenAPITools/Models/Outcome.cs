/*
 * CircleCI REST API
 *
 * The CircleCI API is a RESTful, fully-featured API that allows you to do almost anything in CircleCI. You can access all information and trigger all actions. The only thing we donâ€™t provide access to is billing functions, which must be done from the CircleCI web UI. 
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
        /// <summary>
        /// Gets or Sets Outcome
        /// </summary>
        [TypeConverter(typeof(CustomEnumConverter<Outcome>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum Outcome
        {
            
            /// <summary>
            /// Enum CanceledEnum for canceled
            /// </summary>
            [EnumMember(Value = "canceled")]
            CanceledEnum = 1,
            
            /// <summary>
            /// Enum InfrastructureFailEnum for infrastructure_fail
            /// </summary>
            [EnumMember(Value = "infrastructure_fail")]
            InfrastructureFailEnum = 2,
            
            /// <summary>
            /// Enum TimedoutEnum for timedout
            /// </summary>
            [EnumMember(Value = "timedout")]
            TimedoutEnum = 3,
            
            /// <summary>
            /// Enum FailedEnum for failed
            /// </summary>
            [EnumMember(Value = "failed")]
            FailedEnum = 4,
            
            /// <summary>
            /// Enum NoTestsEnum for no_tests
            /// </summary>
            [EnumMember(Value = "no_tests")]
            NoTestsEnum = 5,
            
            /// <summary>
            /// Enum SuccessEnum for success
            /// </summary>
            [EnumMember(Value = "success")]
            SuccessEnum = 6
        }
}
