/*
 * CircleCI REST API
 *
 * The CircleCI API is a RESTful, fully-featured API that allows you to do almost anything in CircleCI. You can access all information and trigger all actions. The only thing we donâ€™t provide access to is billing functions, which must be done from the CircleCI web UI. 
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
        /// <summary>
        /// Gets or Sets Scope
        /// </summary>
        [TypeConverter(typeof(CustomEnumConverter<Scope>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum Scope
        {
            
            /// <summary>
            /// Enum WriteSettingsEnum for write-settings
            /// </summary>
            [EnumMember(Value = "write-settings")]
            WriteSettingsEnum = 1,
            
            /// <summary>
            /// Enum ViewBuildsEnum for view-builds
            /// </summary>
            [EnumMember(Value = "view-builds")]
            ViewBuildsEnum = 2,
            
            /// <summary>
            /// Enum ReadSettingsEnum for read-settings
            /// </summary>
            [EnumMember(Value = "read-settings")]
            ReadSettingsEnum = 3,
            
            /// <summary>
            /// Enum TriggerBuildsEnum for trigger-builds
            /// </summary>
            [EnumMember(Value = "trigger-builds")]
            TriggerBuildsEnum = 4,
            
            /// <summary>
            /// Enum AllEnum for all
            /// </summary>
            [EnumMember(Value = "all")]
            AllEnum = 5,
            
            /// <summary>
            /// Enum StatusEnum for status
            /// </summary>
            [EnumMember(Value = "status")]
            StatusEnum = 6,
            
            /// <summary>
            /// Enum NoneEnum for none
            /// </summary>
            [EnumMember(Value = "none")]
            NoneEnum = 7
        }
}
