/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class SimplifiedHierarchyLevel : IEquatable<SimplifiedHierarchyLevel>
    {
        /// <summary>
        /// The ID of the level above this one in the hierarchy. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).
        /// </summary>
        /// <value>The ID of the level above this one in the hierarchy. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).</value>
        [DataMember(Name="aboveLevelId", EmitDefaultValue=true)]
        public long AboveLevelId { get; set; }

        /// <summary>
        /// The ID of the level below this one in the hierarchy. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).
        /// </summary>
        /// <value>The ID of the level below this one in the hierarchy. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).</value>
        [DataMember(Name="belowLevelId", EmitDefaultValue=true)]
        public long BelowLevelId { get; set; }

        /// <summary>
        /// The external UUID of the hierarchy level. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).
        /// </summary>
        /// <value>The external UUID of the hierarchy level. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).</value>
        [DataMember(Name="externalUuid", EmitDefaultValue=false)]
        public Guid ExternalUuid { get; set; }

        /// <summary>
        /// Gets or Sets HierarchyLevelNumber
        /// </summary>
        [DataMember(Name="hierarchyLevelNumber", EmitDefaultValue=true)]
        public int HierarchyLevelNumber { get; set; }

        /// <summary>
        /// The ID of the hierarchy level. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).
        /// </summary>
        /// <value>The ID of the hierarchy level. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).</value>
        [DataMember(Name="id", EmitDefaultValue=true)]
        public long Id { get; set; }

        /// <summary>
        /// The issue types available in this hierarchy level.
        /// </summary>
        /// <value>The issue types available in this hierarchy level.</value>
        [DataMember(Name="issueTypeIds", EmitDefaultValue=false)]
        public List<long> IssueTypeIds { get; set; }

        /// <summary>
        /// The level of this item in the hierarchy.
        /// </summary>
        /// <value>The level of this item in the hierarchy.</value>
        [DataMember(Name="level", EmitDefaultValue=true)]
        public int Level { get; set; }

        /// <summary>
        /// The name of this hierarchy level.
        /// </summary>
        /// <value>The name of this hierarchy level.</value>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// The ID of the project configuration. This property is deprecated, see [Change oticen: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).
        /// </summary>
        /// <value>The ID of the project configuration. This property is deprecated, see [Change oticen: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).</value>
        [DataMember(Name="projectConfigurationId", EmitDefaultValue=true)]
        public long ProjectConfigurationId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SimplifiedHierarchyLevel {\n");
            sb.Append("  AboveLevelId: ").Append(AboveLevelId).Append("\n");
            sb.Append("  BelowLevelId: ").Append(BelowLevelId).Append("\n");
            sb.Append("  ExternalUuid: ").Append(ExternalUuid).Append("\n");
            sb.Append("  HierarchyLevelNumber: ").Append(HierarchyLevelNumber).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  IssueTypeIds: ").Append(IssueTypeIds).Append("\n");
            sb.Append("  Level: ").Append(Level).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  ProjectConfigurationId: ").Append(ProjectConfigurationId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((SimplifiedHierarchyLevel)obj);
        }

        /// <summary>
        /// Returns true if SimplifiedHierarchyLevel instances are equal
        /// </summary>
        /// <param name="other">Instance of SimplifiedHierarchyLevel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SimplifiedHierarchyLevel other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    AboveLevelId == other.AboveLevelId ||
                    
                    AboveLevelId.Equals(other.AboveLevelId)
                ) && 
                (
                    BelowLevelId == other.BelowLevelId ||
                    
                    BelowLevelId.Equals(other.BelowLevelId)
                ) && 
                (
                    ExternalUuid == other.ExternalUuid ||
                    ExternalUuid != null &&
                    ExternalUuid.Equals(other.ExternalUuid)
                ) && 
                (
                    HierarchyLevelNumber == other.HierarchyLevelNumber ||
                    
                    HierarchyLevelNumber.Equals(other.HierarchyLevelNumber)
                ) && 
                (
                    Id == other.Id ||
                    
                    Id.Equals(other.Id)
                ) && 
                (
                    IssueTypeIds == other.IssueTypeIds ||
                    IssueTypeIds != null &&
                    other.IssueTypeIds != null &&
                    IssueTypeIds.SequenceEqual(other.IssueTypeIds)
                ) && 
                (
                    Level == other.Level ||
                    
                    Level.Equals(other.Level)
                ) && 
                (
                    Name == other.Name ||
                    Name != null &&
                    Name.Equals(other.Name)
                ) && 
                (
                    ProjectConfigurationId == other.ProjectConfigurationId ||
                    
                    ProjectConfigurationId.Equals(other.ProjectConfigurationId)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    
                    hashCode = hashCode * 59 + AboveLevelId.GetHashCode();
                    
                    hashCode = hashCode * 59 + BelowLevelId.GetHashCode();
                    if (ExternalUuid != null)
                    hashCode = hashCode * 59 + ExternalUuid.GetHashCode();
                    
                    hashCode = hashCode * 59 + HierarchyLevelNumber.GetHashCode();
                    
                    hashCode = hashCode * 59 + Id.GetHashCode();
                    if (IssueTypeIds != null)
                    hashCode = hashCode * 59 + IssueTypeIds.GetHashCode();
                    
                    hashCode = hashCode * 59 + Level.GetHashCode();
                    if (Name != null)
                    hashCode = hashCode * 59 + Name.GetHashCode();
                    
                    hashCode = hashCode * 59 + ProjectConfigurationId.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(SimplifiedHierarchyLevel left, SimplifiedHierarchyLevel right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(SimplifiedHierarchyLevel left, SimplifiedHierarchyLevel right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
