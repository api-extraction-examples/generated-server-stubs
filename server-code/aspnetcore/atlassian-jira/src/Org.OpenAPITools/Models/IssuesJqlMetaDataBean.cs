/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// The description of the page of issues loaded by the provided JQL query.
    /// </summary>
    [DataContract]
    public partial class IssuesJqlMetaDataBean : IEquatable<IssuesJqlMetaDataBean>
    {
        /// <summary>
        /// The number of issues that were loaded in this evaluation.
        /// </summary>
        /// <value>The number of issues that were loaded in this evaluation.</value>
        [Required]
        [DataMember(Name="count", EmitDefaultValue=true)]
        public int Count { get; set; }

        /// <summary>
        /// The maximum number of issues that could be loaded in this evaluation.
        /// </summary>
        /// <value>The maximum number of issues that could be loaded in this evaluation.</value>
        [Required]
        [DataMember(Name="maxResults", EmitDefaultValue=true)]
        public int MaxResults { get; set; }

        /// <summary>
        /// The index of the first issue.
        /// </summary>
        /// <value>The index of the first issue.</value>
        [Required]
        [DataMember(Name="startAt", EmitDefaultValue=true)]
        public long StartAt { get; set; }

        /// <summary>
        /// The total number of issues the JQL returned.
        /// </summary>
        /// <value>The total number of issues the JQL returned.</value>
        [Required]
        [DataMember(Name="totalCount", EmitDefaultValue=true)]
        public long TotalCount { get; set; }

        /// <summary>
        /// Any warnings related to the JQL query. Present only if the validation mode was set to &#x60;warn&#x60;.
        /// </summary>
        /// <value>Any warnings related to the JQL query. Present only if the validation mode was set to &#x60;warn&#x60;.</value>
        [DataMember(Name="validationWarnings", EmitDefaultValue=false)]
        public List<string> ValidationWarnings { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class IssuesJqlMetaDataBean {\n");
            sb.Append("  Count: ").Append(Count).Append("\n");
            sb.Append("  MaxResults: ").Append(MaxResults).Append("\n");
            sb.Append("  StartAt: ").Append(StartAt).Append("\n");
            sb.Append("  TotalCount: ").Append(TotalCount).Append("\n");
            sb.Append("  ValidationWarnings: ").Append(ValidationWarnings).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((IssuesJqlMetaDataBean)obj);
        }

        /// <summary>
        /// Returns true if IssuesJqlMetaDataBean instances are equal
        /// </summary>
        /// <param name="other">Instance of IssuesJqlMetaDataBean to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(IssuesJqlMetaDataBean other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Count == other.Count ||
                    
                    Count.Equals(other.Count)
                ) && 
                (
                    MaxResults == other.MaxResults ||
                    
                    MaxResults.Equals(other.MaxResults)
                ) && 
                (
                    StartAt == other.StartAt ||
                    
                    StartAt.Equals(other.StartAt)
                ) && 
                (
                    TotalCount == other.TotalCount ||
                    
                    TotalCount.Equals(other.TotalCount)
                ) && 
                (
                    ValidationWarnings == other.ValidationWarnings ||
                    ValidationWarnings != null &&
                    other.ValidationWarnings != null &&
                    ValidationWarnings.SequenceEqual(other.ValidationWarnings)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    
                    hashCode = hashCode * 59 + Count.GetHashCode();
                    
                    hashCode = hashCode * 59 + MaxResults.GetHashCode();
                    
                    hashCode = hashCode * 59 + StartAt.GetHashCode();
                    
                    hashCode = hashCode * 59 + TotalCount.GetHashCode();
                    if (ValidationWarnings != null)
                    hashCode = hashCode * 59 + ValidationWarnings.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(IssuesJqlMetaDataBean left, IssuesJqlMetaDataBean right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(IssuesJqlMetaDataBean left, IssuesJqlMetaDataBean right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
