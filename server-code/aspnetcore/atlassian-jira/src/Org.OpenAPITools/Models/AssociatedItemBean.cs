/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// Details of an item associated with the changed record.
    /// </summary>
    [DataContract]
    public partial class AssociatedItemBean : IEquatable<AssociatedItemBean>
    {
        /// <summary>
        /// The ID of the associated record.
        /// </summary>
        /// <value>The ID of the associated record.</value>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// The name of the associated record.
        /// </summary>
        /// <value>The name of the associated record.</value>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// The ID of the associated parent record.
        /// </summary>
        /// <value>The ID of the associated parent record.</value>
        [DataMember(Name="parentId", EmitDefaultValue=false)]
        public string ParentId { get; set; }

        /// <summary>
        /// The name of the associated parent record.
        /// </summary>
        /// <value>The name of the associated parent record.</value>
        [DataMember(Name="parentName", EmitDefaultValue=false)]
        public string ParentName { get; set; }

        /// <summary>
        /// The type of the associated record.
        /// </summary>
        /// <value>The type of the associated record.</value>
        [DataMember(Name="typeName", EmitDefaultValue=false)]
        public string TypeName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AssociatedItemBean {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  ParentId: ").Append(ParentId).Append("\n");
            sb.Append("  ParentName: ").Append(ParentName).Append("\n");
            sb.Append("  TypeName: ").Append(TypeName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((AssociatedItemBean)obj);
        }

        /// <summary>
        /// Returns true if AssociatedItemBean instances are equal
        /// </summary>
        /// <param name="other">Instance of AssociatedItemBean to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AssociatedItemBean other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Id == other.Id ||
                    Id != null &&
                    Id.Equals(other.Id)
                ) && 
                (
                    Name == other.Name ||
                    Name != null &&
                    Name.Equals(other.Name)
                ) && 
                (
                    ParentId == other.ParentId ||
                    ParentId != null &&
                    ParentId.Equals(other.ParentId)
                ) && 
                (
                    ParentName == other.ParentName ||
                    ParentName != null &&
                    ParentName.Equals(other.ParentName)
                ) && 
                (
                    TypeName == other.TypeName ||
                    TypeName != null &&
                    TypeName.Equals(other.TypeName)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Id != null)
                    hashCode = hashCode * 59 + Id.GetHashCode();
                    if (Name != null)
                    hashCode = hashCode * 59 + Name.GetHashCode();
                    if (ParentId != null)
                    hashCode = hashCode * 59 + ParentId.GetHashCode();
                    if (ParentName != null)
                    hashCode = hashCode * 59 + ParentName.GetHashCode();
                    if (TypeName != null)
                    hashCode = hashCode * 59 + TypeName.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(AssociatedItemBean left, AssociatedItemBean right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(AssociatedItemBean left, AssociatedItemBean right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
