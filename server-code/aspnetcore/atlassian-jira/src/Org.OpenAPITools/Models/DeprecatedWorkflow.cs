/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// Details about a workflow.
    /// </summary>
    [DataContract]
    public partial class DeprecatedWorkflow : IEquatable<DeprecatedWorkflow>
    {
        /// <summary>
        /// Gets or Sets VarDefault
        /// </summary>
        [DataMember(Name="default", EmitDefaultValue=true)]
        public bool VarDefault { get; set; }

        /// <summary>
        /// The description of the workflow.
        /// </summary>
        /// <value>The description of the workflow.</value>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// The datetime the workflow was last modified.
        /// </summary>
        /// <value>The datetime the workflow was last modified.</value>
        [DataMember(Name="lastModifiedDate", EmitDefaultValue=false)]
        public string LastModifiedDate { get; set; }

        /// <summary>
        /// This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
        /// </summary>
        /// <value>This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.</value>
        [DataMember(Name="lastModifiedUser", EmitDefaultValue=false)]
        public string LastModifiedUser { get; set; }

        /// <summary>
        /// The account ID of the user that last modified the workflow.
        /// </summary>
        /// <value>The account ID of the user that last modified the workflow.</value>
        [DataMember(Name="lastModifiedUserAccountId", EmitDefaultValue=false)]
        public string LastModifiedUserAccountId { get; set; }

        /// <summary>
        /// The name of the workflow.
        /// </summary>
        /// <value>The name of the workflow.</value>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Scope
        /// </summary>
        [DataMember(Name="scope", EmitDefaultValue=false)]
        public DeprecatedWorkflowScope Scope { get; set; }

        /// <summary>
        /// The number of steps included in the workflow.
        /// </summary>
        /// <value>The number of steps included in the workflow.</value>
        [DataMember(Name="steps", EmitDefaultValue=true)]
        public int Steps { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DeprecatedWorkflow {\n");
            sb.Append("  VarDefault: ").Append(VarDefault).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  LastModifiedDate: ").Append(LastModifiedDate).Append("\n");
            sb.Append("  LastModifiedUser: ").Append(LastModifiedUser).Append("\n");
            sb.Append("  LastModifiedUserAccountId: ").Append(LastModifiedUserAccountId).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Scope: ").Append(Scope).Append("\n");
            sb.Append("  Steps: ").Append(Steps).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((DeprecatedWorkflow)obj);
        }

        /// <summary>
        /// Returns true if DeprecatedWorkflow instances are equal
        /// </summary>
        /// <param name="other">Instance of DeprecatedWorkflow to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DeprecatedWorkflow other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    VarDefault == other.VarDefault ||
                    
                    VarDefault.Equals(other.VarDefault)
                ) && 
                (
                    Description == other.Description ||
                    Description != null &&
                    Description.Equals(other.Description)
                ) && 
                (
                    LastModifiedDate == other.LastModifiedDate ||
                    LastModifiedDate != null &&
                    LastModifiedDate.Equals(other.LastModifiedDate)
                ) && 
                (
                    LastModifiedUser == other.LastModifiedUser ||
                    LastModifiedUser != null &&
                    LastModifiedUser.Equals(other.LastModifiedUser)
                ) && 
                (
                    LastModifiedUserAccountId == other.LastModifiedUserAccountId ||
                    LastModifiedUserAccountId != null &&
                    LastModifiedUserAccountId.Equals(other.LastModifiedUserAccountId)
                ) && 
                (
                    Name == other.Name ||
                    Name != null &&
                    Name.Equals(other.Name)
                ) && 
                (
                    Scope == other.Scope ||
                    Scope != null &&
                    Scope.Equals(other.Scope)
                ) && 
                (
                    Steps == other.Steps ||
                    
                    Steps.Equals(other.Steps)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    
                    hashCode = hashCode * 59 + VarDefault.GetHashCode();
                    if (Description != null)
                    hashCode = hashCode * 59 + Description.GetHashCode();
                    if (LastModifiedDate != null)
                    hashCode = hashCode * 59 + LastModifiedDate.GetHashCode();
                    if (LastModifiedUser != null)
                    hashCode = hashCode * 59 + LastModifiedUser.GetHashCode();
                    if (LastModifiedUserAccountId != null)
                    hashCode = hashCode * 59 + LastModifiedUserAccountId.GetHashCode();
                    if (Name != null)
                    hashCode = hashCode * 59 + Name.GetHashCode();
                    if (Scope != null)
                    hashCode = hashCode * 59 + Scope.GetHashCode();
                    
                    hashCode = hashCode * 59 + Steps.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(DeprecatedWorkflow left, DeprecatedWorkflow right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(DeprecatedWorkflow left, DeprecatedWorkflow right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
