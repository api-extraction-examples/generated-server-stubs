/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class IssueLinkTypesApiController : ControllerBase
    { 
        /// <summary>
        /// Create issue link type
        /// </summary>
        /// <remarks>Creates an issue link type. Use this operation to create descriptions of the reasons why issues are linked. The issue link type consists of a name and descriptions for a link&#39;s inward and outward relationships.  To use this operation, the site must have [issue linking](https://confluence.atlassian.com/x/yoXKM) enabled.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="issueLinkType"></param>
        /// <response code="201">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="404">Returned if:   *  issue linking is disabled.  *  the issue link type name is in use.  *  the user does not have the required permissions.</response>
        [HttpPost]
        [Route("/rest/api/3/issueLinkType")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("CreateIssueLinkType")]
        [SwaggerResponse(statusCode: 201, type: typeof(IssueLinkType), description: "Returned if the request is successful.")]
        public virtual IActionResult CreateIssueLinkType([FromBody]IssueLinkType issueLinkType)
        {

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(IssueLinkType));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"inward\" : \"inward\",\n  \"name\" : \"name\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : \"id\",\n  \"outward\" : \"outward\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<IssueLinkType>(exampleJson)
            : default(IssueLinkType);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Delete issue link type
        /// </summary>
        /// <remarks>Deletes an issue link type.  To use this operation, the site must have [issue linking](https://confluence.atlassian.com/x/yoXKM) enabled.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="issueLinkTypeId">The ID of the issue link type.</param>
        /// <response code="204">Returned if the request is successful.</response>
        /// <response code="400">Returned if the issue link type ID is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="404">Returned if:   *  issue linking is disabled.  *  the issue link type is not found.  *  the user does not have the required permissions.</response>
        [HttpDelete]
        [Route("/rest/api/3/issueLinkType/{issueLinkTypeId}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteIssueLinkType")]
        public virtual IActionResult DeleteIssueLinkType([FromRoute (Name = "issueLinkTypeId")][Required]string issueLinkTypeId)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Get issue link type
        /// </summary>
        /// <remarks>Returns an issue link type.  To use this operation, the site must have [issue linking](https://confluence.atlassian.com/x/yoXKM) enabled.  This operation can be accessed anonymously.  **[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for a project in the site.</remarks>
        /// <param name="issueLinkTypeId">The ID of the issue link type.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the issue link type ID is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="404">Returned if:   *  issue linking is disabled.  *  the issue link type is not found.  *  the user does not have the required permissions.</response>
        [HttpGet]
        [Route("/rest/api/3/issueLinkType/{issueLinkTypeId}")]
        [ValidateModelState]
        [SwaggerOperation("GetIssueLinkType")]
        [SwaggerResponse(statusCode: 200, type: typeof(IssueLinkType), description: "Returned if the request is successful.")]
        public virtual IActionResult GetIssueLinkType([FromRoute (Name = "issueLinkTypeId")][Required]string issueLinkTypeId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(IssueLinkType));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"inward\" : \"inward\",\n  \"name\" : \"name\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : \"id\",\n  \"outward\" : \"outward\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<IssueLinkType>(exampleJson)
            : default(IssueLinkType);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get issue link types
        /// </summary>
        /// <remarks>Returns a list of all issue link types.  To use this operation, the site must have [issue linking](https://confluence.atlassian.com/x/yoXKM) enabled.  This operation can be accessed anonymously.  **[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for a project in the site.</remarks>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="404">Returned if issue linking is disabled.</response>
        [HttpGet]
        [Route("/rest/api/3/issueLinkType")]
        [ValidateModelState]
        [SwaggerOperation("GetIssueLinkTypes")]
        [SwaggerResponse(statusCode: 200, type: typeof(IssueLinkTypes), description: "Returned if the request is successful.")]
        public virtual IActionResult GetIssueLinkTypes()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(IssueLinkTypes));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"issueLinkTypes\" : [ {\n    \"inward\" : \"inward\",\n    \"name\" : \"name\",\n    \"self\" : \"https://openapi-generator.tech\",\n    \"id\" : \"id\",\n    \"outward\" : \"outward\"\n  }, {\n    \"inward\" : \"inward\",\n    \"name\" : \"name\",\n    \"self\" : \"https://openapi-generator.tech\",\n    \"id\" : \"id\",\n    \"outward\" : \"outward\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<IssueLinkTypes>(exampleJson)
            : default(IssueLinkTypes);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update issue link type
        /// </summary>
        /// <remarks>Updates an issue link type.  To use this operation, the site must have [issue linking](https://confluence.atlassian.com/x/yoXKM) enabled.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="issueLinkTypeId">The ID of the issue link type.</param>
        /// <param name="issueLinkType"></param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the issue link type ID or the request body are invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="404">Returned if:   *  issue linking is disabled.  *  the issue link type is not found.  *  the user does not have the required permissions.</response>
        [HttpPut]
        [Route("/rest/api/3/issueLinkType/{issueLinkTypeId}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("UpdateIssueLinkType")]
        [SwaggerResponse(statusCode: 200, type: typeof(IssueLinkType), description: "Returned if the request is successful.")]
        public virtual IActionResult UpdateIssueLinkType([FromRoute (Name = "issueLinkTypeId")][Required]string issueLinkTypeId, [FromBody]IssueLinkType issueLinkType)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(IssueLinkType));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"inward\" : \"inward\",\n  \"name\" : \"name\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : \"id\",\n  \"outward\" : \"outward\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<IssueLinkType>(exampleJson)
            : default(IssueLinkType);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
