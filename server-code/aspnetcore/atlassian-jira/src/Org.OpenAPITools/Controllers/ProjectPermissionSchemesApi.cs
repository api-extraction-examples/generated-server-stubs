/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ProjectPermissionSchemesApiController : ControllerBase
    { 
        /// <summary>
        /// Assign permission scheme
        /// </summary>
        /// <remarks>Assigns a permission scheme with a project. See [Managing project permissions](https://confluence.atlassian.com/x/yodKLg) for more information about permission schemes.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)</remarks>
        /// <param name="projectKeyOrId">The project ID or project key (case sensitive).</param>
        /// <param name="idBean"></param>
        /// <param name="expand">Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are included when you specify any value. Expand options include:   *  &#x60;all&#x60; Returns all expandable information.  *  &#x60;field&#x60; Returns information about the custom field granted the permission.  *  &#x60;group&#x60; Returns information about the group that is granted the permission.  *  &#x60;permissions&#x60; Returns all permission grants for each permission scheme.  *  &#x60;projectRole&#x60; Returns information about the project role granted the permission.  *  &#x60;user&#x60; Returns information about the user who is granted the permission.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if:   *  the user does not have the necessary permission to edit the project&#39;s configuration.  *  the Jira instance is Jira Core Free or Jira Software Free. Permission schemes cannot be assigned to projects on free plans.</response>
        /// <response code="404">Returned if the project or permission scheme is not found.</response>
        [HttpPut]
        [Route("/rest/api/3/project/{projectKeyOrId}/permissionscheme")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("AssignPermissionScheme")]
        [SwaggerResponse(statusCode: 200, type: typeof(PermissionScheme), description: "Returned if the request is successful.")]
        public virtual IActionResult AssignPermissionScheme([FromRoute (Name = "projectKeyOrId")][Required]string projectKeyOrId, [FromBody]IdBean idBean, [FromQuery (Name = "expand")]string expand)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PermissionScheme));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"expand\" : \"expand\",\n  \"permissions\" : [ {\n    \"self\" : \"https://openapi-generator.tech\",\n    \"holder\" : \"\",\n    \"permission\" : \"permission\",\n    \"id\" : 6\n  }, {\n    \"self\" : \"https://openapi-generator.tech\",\n    \"holder\" : \"\",\n    \"permission\" : \"permission\",\n    \"id\" : 6\n  } ],\n  \"scope\" : \"\",\n  \"name\" : \"name\",\n  \"description\" : \"description\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : 0\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PermissionScheme>(exampleJson)
            : default(PermissionScheme);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get assigned permission scheme
        /// </summary>
        /// <remarks>Gets the [permission scheme](https://confluence.atlassian.com/x/yodKLg) associated with the project.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg).</remarks>
        /// <param name="projectKeyOrId">The project ID or project key (case sensitive).</param>
        /// <param name="expand">Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are included when you specify any value. Expand options include:   *  &#x60;all&#x60; Returns all expandable information.  *  &#x60;field&#x60; Returns information about the custom field granted the permission.  *  &#x60;group&#x60; Returns information about the group that is granted the permission.  *  &#x60;permissions&#x60; Returns all permission grants for each permission scheme.  *  &#x60;projectRole&#x60; Returns information about the project role granted the permission.  *  &#x60;user&#x60; Returns information about the user who is granted the permission.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have permission to view the project&#39;s configuration.</response>
        /// <response code="404">Returned if the project is not found or the user does not have permission to view the project.</response>
        [HttpGet]
        [Route("/rest/api/3/project/{projectKeyOrId}/permissionscheme")]
        [ValidateModelState]
        [SwaggerOperation("GetAssignedPermissionScheme")]
        [SwaggerResponse(statusCode: 200, type: typeof(PermissionScheme), description: "Returned if the request is successful.")]
        public virtual IActionResult GetAssignedPermissionScheme([FromRoute (Name = "projectKeyOrId")][Required]string projectKeyOrId, [FromQuery (Name = "expand")]string expand)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PermissionScheme));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"expand\" : \"expand\",\n  \"permissions\" : [ {\n    \"self\" : \"https://openapi-generator.tech\",\n    \"holder\" : \"\",\n    \"permission\" : \"permission\",\n    \"id\" : 6\n  }, {\n    \"self\" : \"https://openapi-generator.tech\",\n    \"holder\" : \"\",\n    \"permission\" : \"permission\",\n    \"id\" : 6\n  } ],\n  \"scope\" : \"\",\n  \"name\" : \"name\",\n  \"description\" : \"description\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : 0\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PermissionScheme>(exampleJson)
            : default(PermissionScheme);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get project issue security scheme
        /// </summary>
        /// <remarks>Returns the [issue security scheme](https://confluence.atlassian.com/x/J4lKLg) associated with the project.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or the *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg).</remarks>
        /// <param name="projectKeyOrId">The project ID or project key (case sensitive).</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the project is visible to the user but the user doesn&#39;t have administrative permissions.</response>
        /// <response code="404">Returned if the project is not found or the user does not have permission to view it.</response>
        [HttpGet]
        [Route("/rest/api/3/project/{projectKeyOrId}/issuesecuritylevelscheme")]
        [ValidateModelState]
        [SwaggerOperation("GetProjectIssueSecurityScheme")]
        [SwaggerResponse(statusCode: 200, type: typeof(SecurityScheme), description: "Returned if the request is successful.")]
        public virtual IActionResult GetProjectIssueSecurityScheme([FromRoute (Name = "projectKeyOrId")][Required]string projectKeyOrId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SecurityScheme));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"name\" : \"name\",\n  \"defaultSecurityLevelId\" : 0,\n  \"description\" : \"description\",\n  \"self\" : \"self\",\n  \"id\" : 6,\n  \"levels\" : [ {\n    \"isDefault\" : true,\n    \"issueSecuritySchemeId\" : \"issueSecuritySchemeId\",\n    \"name\" : \"name\",\n    \"description\" : \"description\",\n    \"self\" : \"self\",\n    \"id\" : \"id\"\n  }, {\n    \"isDefault\" : true,\n    \"issueSecuritySchemeId\" : \"issueSecuritySchemeId\",\n    \"name\" : \"name\",\n    \"description\" : \"description\",\n    \"self\" : \"self\",\n    \"id\" : \"id\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<SecurityScheme>(exampleJson)
            : default(SecurityScheme);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get project issue security levels
        /// </summary>
        /// <remarks>Returns all [issue security](https://confluence.atlassian.com/x/J4lKLg) levels for the project that the user has access to.  This operation can be accessed anonymously.  **[Permissions](#permissions) required:** *Browse projects* [global permission](https://confluence.atlassian.com/x/x4dKLg) for the project, however, issue security levels are only returned for authenticated user with *Set Issue Security* [global permission](https://confluence.atlassian.com/x/x4dKLg) for the project.</remarks>
        /// <param name="projectKeyOrId">The project ID or project key (case sensitive).</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="404">Returned if the project is not found or the user does not have permission to view it.</response>
        [HttpGet]
        [Route("/rest/api/3/project/{projectKeyOrId}/securitylevel")]
        [ValidateModelState]
        [SwaggerOperation("GetSecurityLevelsForProject")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProjectIssueSecurityLevels), description: "Returned if the request is successful.")]
        public virtual IActionResult GetSecurityLevelsForProject([FromRoute (Name = "projectKeyOrId")][Required]string projectKeyOrId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ProjectIssueSecurityLevels));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"levels\" : [ {\n    \"isDefault\" : true,\n    \"issueSecuritySchemeId\" : \"issueSecuritySchemeId\",\n    \"name\" : \"name\",\n    \"description\" : \"description\",\n    \"self\" : \"self\",\n    \"id\" : \"id\"\n  }, {\n    \"isDefault\" : true,\n    \"issueSecuritySchemeId\" : \"issueSecuritySchemeId\",\n    \"name\" : \"name\",\n    \"description\" : \"description\",\n    \"self\" : \"self\",\n    \"id\" : \"id\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ProjectIssueSecurityLevels>(exampleJson)
            : default(ProjectIssueSecurityLevels);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
