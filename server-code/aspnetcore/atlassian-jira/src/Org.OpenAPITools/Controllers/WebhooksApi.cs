/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class WebhooksApiController : ControllerBase
    { 
        /// <summary>
        /// Delete webhooks by ID
        /// </summary>
        /// <remarks>Removes webhooks by ID. Only webhooks registered by the calling app are removed. If webhooks created by other apps are specified, they are ignored.  **[Permissions](#permissions) required:** Only [Connect](https://developer.atlassian.com/cloud/jira/platform/#connect-apps) and [OAuth 2.0](https://developer.atlassian.com/cloud/jira/platform/oauth-2-3lo-apps) apps can use this operation.</remarks>
        /// <param name="containerForWebhookIDs"></param>
        /// <response code="202">Returned if the request is successful.</response>
        /// <response code="400">Returned if the list of webhook IDs is missing.</response>
        /// <response code="403">Returned if the caller isn&#39;t an app.</response>
        [HttpDelete]
        [Route("/rest/api/3/webhook")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("DeleteWebhookById")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorCollection), description: "Returned if the list of webhook IDs is missing.")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorCollection), description: "Returned if the caller isn&#39;t an app.")]
        public virtual IActionResult DeleteWebhookById([FromBody]ContainerForWebhookIDs containerForWebhookIDs)
        {

            //TODO: Uncomment the next line to return response 202 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(202);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorCollection));

            throw new NotImplementedException();
        }

        /// <summary>
        /// Get dynamic webhooks for app
        /// </summary>
        /// <remarks>Returns a [paginated](#pagination) list of the webhooks registered by the calling app.  **[Permissions](#permissions) required:** Only [Connect](https://developer.atlassian.com/cloud/jira/platform/#connect-apps) and [OAuth 2.0](https://developer.atlassian.com/cloud/jira/platform/oauth-2-3lo-apps) apps can use this operation.</remarks>
        /// <param name="startAt">The index of the first item to return in a page of results (page offset).</param>
        /// <param name="maxResults">The maximum number of items to return per page.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid.</response>
        /// <response code="403">Returned if the caller isn&#39;t an app.</response>
        [HttpGet]
        [Route("/rest/api/3/webhook")]
        [ValidateModelState]
        [SwaggerOperation("GetDynamicWebhooksForApp")]
        [SwaggerResponse(statusCode: 200, type: typeof(PageBeanWebhook), description: "Returned if the request is successful.")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorCollection), description: "Returned if the request is invalid.")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorCollection), description: "Returned if the caller isn&#39;t an app.")]
        public virtual IActionResult GetDynamicWebhooksForApp([FromQuery (Name = "startAt")]long? startAt, [FromQuery (Name = "maxResults")]int? maxResults)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PageBeanWebhook));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorCollection));
            string exampleJson = null;
            exampleJson = "{\n  \"total\" : 1,\n  \"isLast\" : true,\n  \"maxResults\" : 0,\n  \"nextPage\" : \"https://openapi-generator.tech\",\n  \"values\" : [ {\n    \"jqlFilter\" : \"jqlFilter\",\n    \"fieldIdsFilter\" : [ \"fieldIdsFilter\", \"fieldIdsFilter\" ],\n    \"id\" : 5,\n    \"issuePropertyKeysFilter\" : [ \"issuePropertyKeysFilter\", \"issuePropertyKeysFilter\" ],\n    \"events\" : [ \"jira:issue_created\", \"jira:issue_created\" ],\n    \"expirationDate\" : 5\n  }, {\n    \"jqlFilter\" : \"jqlFilter\",\n    \"fieldIdsFilter\" : [ \"fieldIdsFilter\", \"fieldIdsFilter\" ],\n    \"id\" : 5,\n    \"issuePropertyKeysFilter\" : [ \"issuePropertyKeysFilter\", \"issuePropertyKeysFilter\" ],\n    \"events\" : [ \"jira:issue_created\", \"jira:issue_created\" ],\n    \"expirationDate\" : 5\n  } ],\n  \"self\" : \"https://openapi-generator.tech\",\n  \"startAt\" : 6\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PageBeanWebhook>(exampleJson)
            : default(PageBeanWebhook);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get failed webhooks
        /// </summary>
        /// <remarks>Returns webhooks that have recently failed to be delivered to the requesting app after the maximum number of retries.  After 72 hours the failure may no longer be returned by this operation.  The oldest failure is returned first.  This method uses a cursor-based pagination. To request the next page use the failure time of the last webhook on the list as the &#x60;failedAfter&#x60; value or use the URL provided in &#x60;next&#x60;.  **[Permissions](#permissions) required:** Only [Connect apps](https://developer.atlassian.com/cloud/jira/platform/index/#connect-apps) can use this operation.</remarks>
        /// <param name="maxResults">The maximum number of webhooks to return per page. If obeying the maxResults directive would result in records with the same failure time being split across pages, the directive is ignored and all records with the same failure time included on the page.</param>
        /// <param name="after">The time after which any webhook failure must have occurred for the record to be returned, expressed as milliseconds since the UNIX epoch.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">400 response</response>
        /// <response code="403">Returned if the caller is not a Connect app.</response>
        [HttpGet]
        [Route("/rest/api/3/webhook/failed")]
        [ValidateModelState]
        [SwaggerOperation("GetFailedWebhooks")]
        [SwaggerResponse(statusCode: 200, type: typeof(FailedWebhooks), description: "Returned if the request is successful.")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorCollection), description: "400 response")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorCollection), description: "Returned if the caller is not a Connect app.")]
        public virtual IActionResult GetFailedWebhooks([FromQuery (Name = "maxResults")]int? maxResults, [FromQuery (Name = "after")]long? after)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(FailedWebhooks));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorCollection));
            string exampleJson = null;
            exampleJson = "{\n  \"next\" : \"https://openapi-generator.tech\",\n  \"maxResults\" : 0,\n  \"values\" : [ {\n    \"failureTime\" : 6,\n    \"id\" : \"id\",\n    \"body\" : \"body\",\n    \"url\" : \"url\"\n  }, {\n    \"failureTime\" : 6,\n    \"id\" : \"id\",\n    \"body\" : \"body\",\n    \"url\" : \"url\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FailedWebhooks>(exampleJson)
            : default(FailedWebhooks);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Extend webhook life
        /// </summary>
        /// <remarks>Extends the life of webhook. Webhooks registered through the REST API expire after 30 days. Call this operation to keep them alive.  Unrecognized webhook IDs (those that are not found or belong to other apps) are ignored.  **[Permissions](#permissions) required:** Only [Connect](https://developer.atlassian.com/cloud/jira/platform/#connect-apps) and [OAuth 2.0](https://developer.atlassian.com/cloud/jira/platform/oauth-2-3lo-apps) apps can use this operation.</remarks>
        /// <param name="containerForWebhookIDs"></param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid.</response>
        /// <response code="403">Returned if the caller isn&#39;t an app.</response>
        [HttpPut]
        [Route("/rest/api/3/webhook/refresh")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("RefreshWebhooks")]
        [SwaggerResponse(statusCode: 200, type: typeof(WebhooksExpirationDate), description: "Returned if the request is successful.")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorCollection), description: "Returned if the request is invalid.")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorCollection), description: "Returned if the caller isn&#39;t an app.")]
        public virtual IActionResult RefreshWebhooks([FromBody]ContainerForWebhookIDs containerForWebhookIDs)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(WebhooksExpirationDate));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorCollection));
            string exampleJson = null;
            exampleJson = "{\n  \"expirationDate\" : 0\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<WebhooksExpirationDate>(exampleJson)
            : default(WebhooksExpirationDate);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Register dynamic webhooks
        /// </summary>
        /// <remarks>Registers webhooks.  **NOTE:** for non-public OAuth apps, webhooks are delivered only if there is a match between the app owner and the user who registered a dynamic webhook.  **[Permissions](#permissions) required:** Only [Connect](https://developer.atlassian.com/cloud/jira/platform/#connect-apps) and [OAuth 2.0](https://developer.atlassian.com/cloud/jira/platform/oauth-2-3lo-apps) apps can use this operation.</remarks>
        /// <param name="webhookRegistrationDetails"></param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid.</response>
        /// <response code="403">Returned if the caller isn&#39;t an app.</response>
        [HttpPost]
        [Route("/rest/api/3/webhook")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("RegisterDynamicWebhooks")]
        [SwaggerResponse(statusCode: 200, type: typeof(ContainerForRegisteredWebhooks), description: "Returned if the request is successful.")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorCollection), description: "Returned if the request is invalid.")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorCollection), description: "Returned if the caller isn&#39;t an app.")]
        public virtual IActionResult RegisterDynamicWebhooks([FromBody]WebhookRegistrationDetails webhookRegistrationDetails)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ContainerForRegisteredWebhooks));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorCollection));
            string exampleJson = null;
            exampleJson = "{\n  \"webhookRegistrationResult\" : [ {\n    \"createdWebhookId\" : 0,\n    \"errors\" : [ \"errors\", \"errors\" ]\n  }, {\n    \"createdWebhookId\" : 0,\n    \"errors\" : [ \"errors\", \"errors\" ]\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ContainerForRegisteredWebhooks>(exampleJson)
            : default(ContainerForRegisteredWebhooks);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
