/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class IssueWorklogPropertiesApiController : ControllerBase
    { 
        /// <summary>
        /// Delete worklog property
        /// </summary>
        /// <remarks>Deletes a worklog property.  This operation can be accessed anonymously.  **[Permissions](#permissions) required:**   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.  *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.  *  If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.</remarks>
        /// <param name="issueIdOrKey">The ID or key of the issue.</param>
        /// <param name="worklogId">The ID of the worklog.</param>
        /// <param name="propertyKey">The key of the property.</param>
        /// <response code="204">Returned if the worklog property is removed.</response>
        /// <response code="400">Returned if the worklog key or id is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have permission to edit the worklog.</response>
        /// <response code="404">Returned if:   *  the issue, worklog, or property is not found.  *  the user does not have permission to view the issue or worklog.</response>
        [HttpDelete]
        [Route("/rest/api/3/issue/{issueIdOrKey}/worklog/{worklogId}/properties/{propertyKey}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteWorklogProperty")]
        public virtual IActionResult DeleteWorklogProperty([FromRoute (Name = "issueIdOrKey")][Required]string issueIdOrKey, [FromRoute (Name = "worklogId")][Required]string worklogId, [FromRoute (Name = "propertyKey")][Required]string propertyKey)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Get worklog property
        /// </summary>
        /// <remarks>Returns the value of a worklog property.  This operation can be accessed anonymously.  **[Permissions](#permissions) required:**   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.  *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.  *  If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.</remarks>
        /// <param name="issueIdOrKey">The ID or key of the issue.</param>
        /// <param name="worklogId">The ID of the worklog.</param>
        /// <param name="propertyKey">The key of the property.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the worklog ID is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="404">Returned if:   *  the issue, worklog, or property is not found.  *  the user does not have permission to view the issue or worklog.</response>
        [HttpGet]
        [Route("/rest/api/3/issue/{issueIdOrKey}/worklog/{worklogId}/properties/{propertyKey}")]
        [ValidateModelState]
        [SwaggerOperation("GetWorklogProperty")]
        [SwaggerResponse(statusCode: 200, type: typeof(EntityProperty), description: "Returned if the request is successful.")]
        public virtual IActionResult GetWorklogProperty([FromRoute (Name = "issueIdOrKey")][Required]string issueIdOrKey, [FromRoute (Name = "worklogId")][Required]string worklogId, [FromRoute (Name = "propertyKey")][Required]string propertyKey)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(EntityProperty));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"value\" : \"\",\n  \"key\" : \"key\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<EntityProperty>(exampleJson)
            : default(EntityProperty);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get worklog property keys
        /// </summary>
        /// <remarks>Returns the keys of all properties for a worklog.  This operation can be accessed anonymously.  **[Permissions](#permissions) required:**   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.  *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.  *  If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.</remarks>
        /// <param name="issueIdOrKey">The ID or key of the issue.</param>
        /// <param name="worklogId">The ID of the worklog.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the worklog ID is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="404">Returned if:   *  the issue or worklog is not found.  *  the user does not have permission to view the issue or worklog.</response>
        [HttpGet]
        [Route("/rest/api/3/issue/{issueIdOrKey}/worklog/{worklogId}/properties")]
        [ValidateModelState]
        [SwaggerOperation("GetWorklogPropertyKeys")]
        [SwaggerResponse(statusCode: 200, type: typeof(PropertyKeys), description: "Returned if the request is successful.")]
        public virtual IActionResult GetWorklogPropertyKeys([FromRoute (Name = "issueIdOrKey")][Required]string issueIdOrKey, [FromRoute (Name = "worklogId")][Required]string worklogId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PropertyKeys));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"keys\" : [ {\n    \"self\" : \"self\",\n    \"key\" : \"key\"\n  }, {\n    \"self\" : \"self\",\n    \"key\" : \"key\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PropertyKeys>(exampleJson)
            : default(PropertyKeys);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Set worklog property
        /// </summary>
        /// <remarks>Sets the value of a worklog property. Use this operation to store custom data against the worklog.  The value of the request body must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON blob. The maximum length is 32768 characters.  This operation can be accessed anonymously.  **[Permissions](#permissions) required:**   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.  *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.  *  *Edit all worklogs*[ project permission](https://confluence.atlassian.com/x/yodKLg) to update any worklog or *Edit own worklogs* to update worklogs created by the user.  *  If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.</remarks>
        /// <param name="issueIdOrKey">The ID or key of the issue.</param>
        /// <param name="worklogId">The ID of the worklog.</param>
        /// <param name="propertyKey">The key of the issue property. The maximum length is 255 characters.</param>
        /// <param name="body"></param>
        /// <response code="200">Returned if the worklog property is updated.</response>
        /// <response code="201">Returned if the worklog property is created.</response>
        /// <response code="400">Returned if the worklog ID is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have permission to edit the worklog.</response>
        /// <response code="404">Returned if:   *  the issue or worklog is not found.  *  the user does not have permission to view the issue or worklog.</response>
        [HttpPut]
        [Route("/rest/api/3/issue/{issueIdOrKey}/worklog/{worklogId}/properties/{propertyKey}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("SetWorklogProperty")]
        [SwaggerResponse(statusCode: 200, type: typeof(Object), description: "Returned if the worklog property is updated.")]
        [SwaggerResponse(statusCode: 201, type: typeof(Object), description: "Returned if the worklog property is created.")]
        public virtual IActionResult SetWorklogProperty([FromRoute (Name = "issueIdOrKey")][Required]string issueIdOrKey, [FromRoute (Name = "worklogId")][Required]string worklogId, [FromRoute (Name = "propertyKey")][Required]string propertyKey, [FromBody]Object body)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Object));
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(Object));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default(Object);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
