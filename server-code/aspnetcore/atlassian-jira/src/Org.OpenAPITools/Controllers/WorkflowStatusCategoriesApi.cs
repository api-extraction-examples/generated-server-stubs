/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class WorkflowStatusCategoriesApiController : ControllerBase
    { 
        /// <summary>
        /// Get all status categories
        /// </summary>
        /// <remarks>Returns a list of all status categories.  **[Permissions](#permissions) required:** Permission to access Jira.</remarks>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        [HttpGet]
        [Route("/rest/api/3/statuscategory")]
        [ValidateModelState]
        [SwaggerOperation("GetStatusCategories")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<StatusCategory>), description: "Returned if the request is successful.")]
        public virtual IActionResult GetStatusCategories()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<StatusCategory>));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            string exampleJson = null;
            exampleJson = "[ {\n  \"colorName\" : \"colorName\",\n  \"name\" : \"name\",\n  \"self\" : \"self\",\n  \"id\" : 0,\n  \"key\" : \"key\"\n}, {\n  \"colorName\" : \"colorName\",\n  \"name\" : \"name\",\n  \"self\" : \"self\",\n  \"id\" : 0,\n  \"key\" : \"key\"\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<StatusCategory>>(exampleJson)
            : default(List<StatusCategory>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get status category
        /// </summary>
        /// <remarks>Returns a status category. Status categories provided a mechanism for categorizing [statuses](#api-rest-api-3-status-idOrName-get).  **[Permissions](#permissions) required:** Permission to access Jira.</remarks>
        /// <param name="idOrKey">The ID or key of the status category.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="404">Returned if the status category is not found.</response>
        [HttpGet]
        [Route("/rest/api/3/statuscategory/{idOrKey}")]
        [ValidateModelState]
        [SwaggerOperation("GetStatusCategory")]
        [SwaggerResponse(statusCode: 200, type: typeof(StatusCategory), description: "Returned if the request is successful.")]
        public virtual IActionResult GetStatusCategory([FromRoute (Name = "idOrKey")][Required]string idOrKey)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(StatusCategory));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"colorName\" : \"colorName\",\n  \"name\" : \"name\",\n  \"self\" : \"self\",\n  \"id\" : 0,\n  \"key\" : \"key\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<StatusCategory>(exampleJson)
            : default(StatusCategory);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
