/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class WorkflowTransitionRulesApiController : ControllerBase
    { 
        /// <summary>
        /// Delete workflow transition rule configurations
        /// </summary>
        /// <remarks>Deletes workflow transition rules from one or more workflows. These rule types are supported:   *  [post functions](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-post-function/)  *  [conditions](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-condition/)  *  [validators](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-validator/)  Only rules created by the calling Connect app can be deleted.  **[Permissions](#permissions) required:** Only Connect apps can use this operation.</remarks>
        /// <param name="workflowsWithTransitionRulesDetails"></param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid.</response>
        /// <response code="403">Returned if the caller is not a Connect app.</response>
        [HttpPut]
        [Route("/rest/api/3/workflow/rule/config/delete")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("DeleteWorkflowTransitionRuleConfigurations")]
        [SwaggerResponse(statusCode: 200, type: typeof(WorkflowTransitionRulesUpdateErrors), description: "Returned if the request is successful.")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorCollection), description: "Returned if the request is invalid.")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorCollection), description: "Returned if the caller is not a Connect app.")]
        public virtual IActionResult DeleteWorkflowTransitionRuleConfigurations([FromBody]WorkflowsWithTransitionRulesDetails workflowsWithTransitionRulesDetails)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(WorkflowTransitionRulesUpdateErrors));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorCollection));
            string exampleJson = null;
            exampleJson = "{\n  \"updateResults\" : [ {\n    \"updateErrors\" : [ \"updateErrors\", \"updateErrors\" ],\n    \"workflowId\" : {\n      \"draft\" : true,\n      \"name\" : \"name\"\n    },\n    \"ruleUpdateErrors\" : {\n      \"key\" : [ \"ruleUpdateErrors\", \"ruleUpdateErrors\" ]\n    }\n  }, {\n    \"updateErrors\" : [ \"updateErrors\", \"updateErrors\" ],\n    \"workflowId\" : {\n      \"draft\" : true,\n      \"name\" : \"name\"\n    },\n    \"ruleUpdateErrors\" : {\n      \"key\" : [ \"ruleUpdateErrors\", \"ruleUpdateErrors\" ]\n    }\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<WorkflowTransitionRulesUpdateErrors>(exampleJson)
            : default(WorkflowTransitionRulesUpdateErrors);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get workflow transition rule configurations
        /// </summary>
        /// <remarks>Returns a [paginated](#pagination) list of workflows with transition rules. The workflows can be filtered to return only those containing workflow transition rules:   *  of one or more transition rule types, such as [workflow post functions](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-post-function/).  *  matching one or more transition rule keys.  Only workflows containing transition rules created by the calling [Connect](https://developer.atlassian.com/cloud/jira/platform/index/#connect-apps) or [Forge](https://developer.atlassian.com/cloud/jira/platform/index/#forge-apps) app are returned.  Due to server-side optimizations, workflows with an empty list of rules may be returned; these workflows can be ignored.  **[Permissions](#permissions) required:** Only [Connect](https://developer.atlassian.com/cloud/jira/platform/index/#connect-apps) or [Forge](https://developer.atlassian.com/cloud/jira/platform/index/#forge-apps) apps can use this operation.</remarks>
        /// <param name="types">The types of the transition rules to return.</param>
        /// <param name="startAt">The index of the first item to return in a page of results (page offset).</param>
        /// <param name="maxResults">The maximum number of items to return per page.</param>
        /// <param name="keys">The transition rule class keys, as defined in the Connect or the Forge app descriptor, of the transition rules to return.</param>
        /// <param name="workflowNames">EXPERIMENTAL: The list of workflow names to filter by.</param>
        /// <param name="withTags">EXPERIMENTAL: The list of &#x60;tags&#x60; to filter by.</param>
        /// <param name="draft">EXPERIMENTAL: Whether draft or published workflows are returned. If not provided, both workflow types are returned.</param>
        /// <param name="expand">Use [expand](#expansion) to include additional information in the response. This parameter accepts &#x60;transition&#x60;, which, for each rule, returns information about the transition the rule is assigned to.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid.</response>
        /// <response code="403">Returned if the caller is not a Connect or a Forge app.</response>
        /// <response code="404">Returned if any transition rule type is not supported.</response>
        [HttpGet]
        [Route("/rest/api/3/workflow/rule/config")]
        [ValidateModelState]
        [SwaggerOperation("GetWorkflowTransitionRuleConfigurations")]
        [SwaggerResponse(statusCode: 200, type: typeof(PageBeanWorkflowTransitionRules), description: "Returned if the request is successful.")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorCollection), description: "Returned if the request is invalid.")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorCollection), description: "Returned if the caller is not a Connect or a Forge app.")]
        public virtual IActionResult GetWorkflowTransitionRuleConfigurations([FromQuery (Name = "types")][Required()]List<string> types, [FromQuery (Name = "startAt")]long? startAt, [FromQuery (Name = "maxResults")]int? maxResults, [FromQuery (Name = "keys")]List<string> keys, [FromQuery (Name = "workflowNames")]List<string> workflowNames, [FromQuery (Name = "withTags")]List<string> withTags, [FromQuery (Name = "draft")]bool? draft, [FromQuery (Name = "expand")]string expand)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PageBeanWorkflowTransitionRules));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"total\" : 1,\n  \"isLast\" : true,\n  \"maxResults\" : 0,\n  \"nextPage\" : \"https://openapi-generator.tech\",\n  \"values\" : [ {\n    \"postFunctions\" : [ {\n      \"configuration\" : {\n        \"disabled\" : false,\n        \"tag\" : \"tag\",\n        \"value\" : \"value\"\n      },\n      \"id\" : \"id\",\n      \"key\" : \"key\",\n      \"transition\" : \"\"\n    }, {\n      \"configuration\" : {\n        \"disabled\" : false,\n        \"tag\" : \"tag\",\n        \"value\" : \"value\"\n      },\n      \"id\" : \"id\",\n      \"key\" : \"key\",\n      \"transition\" : \"\"\n    } ],\n    \"validators\" : [ {\n      \"configuration\" : {\n        \"disabled\" : false,\n        \"tag\" : \"tag\",\n        \"value\" : \"value\"\n      },\n      \"id\" : \"id\",\n      \"key\" : \"key\",\n      \"transition\" : \"\"\n    }, {\n      \"configuration\" : {\n        \"disabled\" : false,\n        \"tag\" : \"tag\",\n        \"value\" : \"value\"\n      },\n      \"id\" : \"id\",\n      \"key\" : \"key\",\n      \"transition\" : \"\"\n    } ],\n    \"conditions\" : [ {\n      \"configuration\" : {\n        \"disabled\" : false,\n        \"tag\" : \"tag\",\n        \"value\" : \"value\"\n      },\n      \"id\" : \"id\",\n      \"key\" : \"key\",\n      \"transition\" : \"\"\n    }, {\n      \"configuration\" : {\n        \"disabled\" : false,\n        \"tag\" : \"tag\",\n        \"value\" : \"value\"\n      },\n      \"id\" : \"id\",\n      \"key\" : \"key\",\n      \"transition\" : \"\"\n    } ],\n    \"workflowId\" : {\n      \"draft\" : true,\n      \"name\" : \"name\"\n    }\n  }, {\n    \"postFunctions\" : [ {\n      \"configuration\" : {\n        \"disabled\" : false,\n        \"tag\" : \"tag\",\n        \"value\" : \"value\"\n      },\n      \"id\" : \"id\",\n      \"key\" : \"key\",\n      \"transition\" : \"\"\n    }, {\n      \"configuration\" : {\n        \"disabled\" : false,\n        \"tag\" : \"tag\",\n        \"value\" : \"value\"\n      },\n      \"id\" : \"id\",\n      \"key\" : \"key\",\n      \"transition\" : \"\"\n    } ],\n    \"validators\" : [ {\n      \"configuration\" : {\n        \"disabled\" : false,\n        \"tag\" : \"tag\",\n        \"value\" : \"value\"\n      },\n      \"id\" : \"id\",\n      \"key\" : \"key\",\n      \"transition\" : \"\"\n    }, {\n      \"configuration\" : {\n        \"disabled\" : false,\n        \"tag\" : \"tag\",\n        \"value\" : \"value\"\n      },\n      \"id\" : \"id\",\n      \"key\" : \"key\",\n      \"transition\" : \"\"\n    } ],\n    \"conditions\" : [ {\n      \"configuration\" : {\n        \"disabled\" : false,\n        \"tag\" : \"tag\",\n        \"value\" : \"value\"\n      },\n      \"id\" : \"id\",\n      \"key\" : \"key\",\n      \"transition\" : \"\"\n    }, {\n      \"configuration\" : {\n        \"disabled\" : false,\n        \"tag\" : \"tag\",\n        \"value\" : \"value\"\n      },\n      \"id\" : \"id\",\n      \"key\" : \"key\",\n      \"transition\" : \"\"\n    } ],\n    \"workflowId\" : {\n      \"draft\" : true,\n      \"name\" : \"name\"\n    }\n  } ],\n  \"self\" : \"https://openapi-generator.tech\",\n  \"startAt\" : 6\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PageBeanWorkflowTransitionRules>(exampleJson)
            : default(PageBeanWorkflowTransitionRules);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update workflow transition rule configurations
        /// </summary>
        /// <remarks>Updates configuration of workflow transition rules. The following rule types are supported:   *  [post functions](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-post-function/)  *  [conditions](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-condition/)  *  [validators](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-validator/)  Only rules created by the calling Connect app can be updated.  To assist with app migration, this operation can be used to:   *  Disable a rule.  *  Add a &#x60;tag&#x60;. Use this to filter rules in the [Get workflow transition rule configurations](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-workflow-transition-rules/#api-rest-api-3-workflow-rule-config-get).  Rules are enabled if the &#x60;disabled&#x60; parameter is not provided.  **[Permissions](#permissions) required:** Only Connect apps can use this operation.</remarks>
        /// <param name="workflowTransitionRulesUpdate"></param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid.</response>
        /// <response code="403">Returned if the caller is not a Connect app.</response>
        [HttpPut]
        [Route("/rest/api/3/workflow/rule/config")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("UpdateWorkflowTransitionRuleConfigurations")]
        [SwaggerResponse(statusCode: 200, type: typeof(WorkflowTransitionRulesUpdateErrors), description: "Returned if the request is successful.")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorCollection), description: "Returned if the request is invalid.")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorCollection), description: "Returned if the caller is not a Connect app.")]
        public virtual IActionResult UpdateWorkflowTransitionRuleConfigurations([FromBody]WorkflowTransitionRulesUpdate workflowTransitionRulesUpdate)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(WorkflowTransitionRulesUpdateErrors));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorCollection));
            string exampleJson = null;
            exampleJson = "{\n  \"updateResults\" : [ {\n    \"updateErrors\" : [ \"updateErrors\", \"updateErrors\" ],\n    \"workflowId\" : {\n      \"draft\" : true,\n      \"name\" : \"name\"\n    },\n    \"ruleUpdateErrors\" : {\n      \"key\" : [ \"ruleUpdateErrors\", \"ruleUpdateErrors\" ]\n    }\n  }, {\n    \"updateErrors\" : [ \"updateErrors\", \"updateErrors\" ],\n    \"workflowId\" : {\n      \"draft\" : true,\n      \"name\" : \"name\"\n    },\n    \"ruleUpdateErrors\" : {\n      \"key\" : [ \"ruleUpdateErrors\", \"ruleUpdateErrors\" ]\n    }\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<WorkflowTransitionRulesUpdateErrors>(exampleJson)
            : default(WorkflowTransitionRulesUpdateErrors);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
