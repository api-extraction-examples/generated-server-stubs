/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class IssueSecuritySchemesApiController : ControllerBase
    { 
        /// <summary>
        /// Add issue security levels
        /// </summary>
        /// <remarks>Adds levels and levels&#39; members to the issue security scheme. You can add up to 100 levels per request.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="schemeId">The ID of the issue security scheme.</param>
        /// <param name="addSecuritySchemeLevelsRequestBean"></param>
        /// <response code="204">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user doesn&#39;t have the necessary permission.</response>
        /// <response code="404">Returned if the security scheme isn&#39;t found.</response>
        [HttpPut]
        [Route("/rest/api/3/issuesecurityschemes/{schemeId}/level")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("AddSecurityLevel")]
        [SwaggerResponse(statusCode: 204, type: typeof(Object), description: "Returned if the request is successful.")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorCollection), description: "Returned if the request is invalid.")]
        [SwaggerResponse(statusCode: 401, type: typeof(ErrorCollection), description: "Returned if the authentication credentials are incorrect or missing.")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorCollection), description: "Returned if the user doesn&#39;t have the necessary permission.")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorCollection), description: "Returned if the security scheme isn&#39;t found.")]
        public virtual IActionResult AddSecurityLevel([FromRoute (Name = "schemeId")][Required]string schemeId, [FromBody]AddSecuritySchemeLevelsRequestBean addSecuritySchemeLevelsRequestBean)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204, default(Object));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorCollection));
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default(Object);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Add issue security level members
        /// </summary>
        /// <remarks>Adds members to the issue security level. You can add up to 100 members per request.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="schemeId">The ID of the issue security scheme.</param>
        /// <param name="levelId">The ID of the issue security level.</param>
        /// <param name="securitySchemeMembersRequest"></param>
        /// <response code="204">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user doesn&#39;t have the necessary permission.</response>
        /// <response code="404">Returned if the security scheme isn&#39;t found.</response>
        [HttpPut]
        [Route("/rest/api/3/issuesecurityschemes/{schemeId}/level/{levelId}/member")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("AddSecurityLevelMembers")]
        [SwaggerResponse(statusCode: 204, type: typeof(Object), description: "Returned if the request is successful.")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorCollection), description: "Returned if the request is invalid.")]
        [SwaggerResponse(statusCode: 401, type: typeof(ErrorCollection), description: "Returned if the authentication credentials are incorrect or missing.")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorCollection), description: "Returned if the user doesn&#39;t have the necessary permission.")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorCollection), description: "Returned if the security scheme isn&#39;t found.")]
        public virtual IActionResult AddSecurityLevelMembers([FromRoute (Name = "schemeId")][Required]string schemeId, [FromRoute (Name = "levelId")][Required]string levelId, [FromBody]SecuritySchemeMembersRequest securitySchemeMembersRequest)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204, default(Object));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorCollection));
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default(Object);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create issue security scheme
        /// </summary>
        /// <remarks>Creates a security scheme with security scheme levels and levels&#39; members. You can create up to 100 security scheme levels and security scheme levels&#39; members per request.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="createIssueSecuritySchemeDetails"></param>
        /// <response code="201">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user doesn&#39;t have the necessary permission.</response>
        [HttpPost]
        [Route("/rest/api/3/issuesecurityschemes")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("CreateIssueSecurityScheme")]
        [SwaggerResponse(statusCode: 201, type: typeof(SecuritySchemeId), description: "Returned if the request is successful.")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorCollection), description: "Returned if the request is invalid.")]
        [SwaggerResponse(statusCode: 401, type: typeof(ErrorCollection), description: "Returned if the authentication credentials are incorrect or missing.")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorCollection), description: "Returned if the user doesn&#39;t have the necessary permission.")]
        public virtual IActionResult CreateIssueSecurityScheme([FromBody]CreateIssueSecuritySchemeDetails createIssueSecuritySchemeDetails)
        {

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(SecuritySchemeId));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorCollection));
            string exampleJson = null;
            exampleJson = "{\n  \"id\" : \"id\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<SecuritySchemeId>(exampleJson)
            : default(SecuritySchemeId);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Delete issue security scheme
        /// </summary>
        /// <remarks>Deletes an issue security scheme.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="schemeId">The ID of the issue security scheme.</param>
        /// <response code="204">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user doesn&#39;t have the necessary permission.</response>
        /// <response code="404">Returned if the issue security scheme isn&#39;t found.</response>
        [HttpDelete]
        [Route("/rest/api/3/issuesecurityschemes/{schemeId}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteSecurityScheme")]
        [SwaggerResponse(statusCode: 204, type: typeof(Object), description: "Returned if the request is successful.")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorCollection), description: "Returned if the request is invalid.")]
        [SwaggerResponse(statusCode: 401, type: typeof(ErrorCollection), description: "Returned if the authentication credentials are incorrect or missing.")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorCollection), description: "Returned if the user doesn&#39;t have the necessary permission.")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorCollection), description: "Returned if the issue security scheme isn&#39;t found.")]
        public virtual IActionResult DeleteSecurityScheme([FromRoute (Name = "schemeId")][Required]string schemeId)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204, default(Object));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorCollection));
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default(Object);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get issue security scheme
        /// </summary>
        /// <remarks>Returns an issue security scheme along with its security levels.  **[Permissions](#permissions) required:**   *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).  *  *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for a project that uses the requested issue security scheme.</remarks>
        /// <param name="id">The ID of the issue security scheme. Use the [Get issue security schemes](#api-rest-api-3-issuesecurityschemes-get) operation to get a list of issue security scheme IDs.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the administrator permission and the scheme is not used in any project where the user has administrative permission.</response>
        [HttpGet]
        [Route("/rest/api/3/issuesecurityschemes/{id}")]
        [ValidateModelState]
        [SwaggerOperation("GetIssueSecurityScheme")]
        [SwaggerResponse(statusCode: 200, type: typeof(SecurityScheme), description: "Returned if the request is successful.")]
        public virtual IActionResult GetIssueSecurityScheme([FromRoute (Name = "id")][Required]long id)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SecurityScheme));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            string exampleJson = null;
            exampleJson = "{\n  \"name\" : \"name\",\n  \"defaultSecurityLevelId\" : 0,\n  \"description\" : \"description\",\n  \"self\" : \"self\",\n  \"id\" : 6,\n  \"levels\" : [ {\n    \"isDefault\" : true,\n    \"issueSecuritySchemeId\" : \"issueSecuritySchemeId\",\n    \"name\" : \"name\",\n    \"description\" : \"description\",\n    \"self\" : \"self\",\n    \"id\" : \"id\"\n  }, {\n    \"isDefault\" : true,\n    \"issueSecuritySchemeId\" : \"issueSecuritySchemeId\",\n    \"name\" : \"name\",\n    \"description\" : \"description\",\n    \"self\" : \"self\",\n    \"id\" : \"id\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<SecurityScheme>(exampleJson)
            : default(SecurityScheme);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get issue security schemes
        /// </summary>
        /// <remarks>Returns all [issue security schemes](https://confluence.atlassian.com/x/J4lKLg).  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect.</response>
        /// <response code="403">Returned if the user does not have permission to administer issue security schemes.</response>
        [HttpGet]
        [Route("/rest/api/3/issuesecurityschemes")]
        [ValidateModelState]
        [SwaggerOperation("GetIssueSecuritySchemes")]
        [SwaggerResponse(statusCode: 200, type: typeof(SecuritySchemes), description: "Returned if the request is successful.")]
        public virtual IActionResult GetIssueSecuritySchemes()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SecuritySchemes));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            string exampleJson = null;
            exampleJson = "{\n  \"issueSecuritySchemes\" : [ {\n    \"name\" : \"name\",\n    \"defaultSecurityLevelId\" : 0,\n    \"description\" : \"description\",\n    \"self\" : \"self\",\n    \"id\" : 6,\n    \"levels\" : [ {\n      \"isDefault\" : true,\n      \"issueSecuritySchemeId\" : \"issueSecuritySchemeId\",\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"self\" : \"self\",\n      \"id\" : \"id\"\n    }, {\n      \"isDefault\" : true,\n      \"issueSecuritySchemeId\" : \"issueSecuritySchemeId\",\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"self\" : \"self\",\n      \"id\" : \"id\"\n    } ]\n  }, {\n    \"name\" : \"name\",\n    \"defaultSecurityLevelId\" : 0,\n    \"description\" : \"description\",\n    \"self\" : \"self\",\n    \"id\" : 6,\n    \"levels\" : [ {\n      \"isDefault\" : true,\n      \"issueSecuritySchemeId\" : \"issueSecuritySchemeId\",\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"self\" : \"self\",\n      \"id\" : \"id\"\n    }, {\n      \"isDefault\" : true,\n      \"issueSecuritySchemeId\" : \"issueSecuritySchemeId\",\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"self\" : \"self\",\n      \"id\" : \"id\"\n    } ]\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<SecuritySchemes>(exampleJson)
            : default(SecuritySchemes);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get issue security level members
        /// </summary>
        /// <remarks>Returns a [paginated](#pagination) list of issue security level members.  Only issue security level members in the context of classic projects are returned.  Filtering using parameters is inclusive: if you specify both security scheme IDs and level IDs, the result will include all issue security level members from the specified schemes and levels.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="startAt">The index of the first item to return in a page of results (page offset).</param>
        /// <param name="maxResults">The maximum number of items to return per page.</param>
        /// <param name="id">The list of issue security level member IDs. To include multiple issue security level members separate IDs with an ampersand: &#x60;id&#x3D;10000&amp;id&#x3D;10001&#x60;.</param>
        /// <param name="schemeId">The list of issue security scheme IDs. To include multiple issue security schemes separate IDs with an ampersand: &#x60;schemeId&#x3D;10000&amp;schemeId&#x3D;10001&#x60;.</param>
        /// <param name="levelId">The list of issue security level IDs. To include multiple issue security levels separate IDs with an ampersand: &#x60;levelId&#x3D;10000&amp;levelId&#x3D;10001&#x60;.</param>
        /// <param name="expand">Use expand to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:   *  &#x60;all&#x60; Returns all expandable information  *  &#x60;field&#x60; Returns information about the custom field granted the permission  *  &#x60;group&#x60; Returns information about the group that is granted the permission  *  &#x60;projectRole&#x60; Returns information about the project role granted the permission  *  &#x60;user&#x60; Returns information about the user who is granted the permission</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user doesn&#39;t have the necessary permission.</response>
        [HttpGet]
        [Route("/rest/api/3/issuesecurityschemes/level/member")]
        [ValidateModelState]
        [SwaggerOperation("GetSecurityLevelMembers")]
        [SwaggerResponse(statusCode: 200, type: typeof(PageBeanSecurityLevelMember), description: "Returned if the request is successful.")]
        public virtual IActionResult GetSecurityLevelMembers([FromQuery (Name = "startAt")]string startAt, [FromQuery (Name = "maxResults")]string maxResults, [FromQuery (Name = "id")]List<string> id, [FromQuery (Name = "schemeId")]List<string> schemeId, [FromQuery (Name = "levelId")]List<string> levelId, [FromQuery (Name = "expand")]string expand)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PageBeanSecurityLevelMember));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            string exampleJson = null;
            exampleJson = "{\n  \"total\" : 1,\n  \"isLast\" : true,\n  \"maxResults\" : 0,\n  \"nextPage\" : \"https://openapi-generator.tech\",\n  \"values\" : [ {\n    \"issueSecuritySchemeId\" : \"issueSecuritySchemeId\",\n    \"id\" : \"id\",\n    \"issueSecurityLevelId\" : \"issueSecurityLevelId\"\n  }, {\n    \"issueSecuritySchemeId\" : \"issueSecuritySchemeId\",\n    \"id\" : \"id\",\n    \"issueSecurityLevelId\" : \"issueSecurityLevelId\"\n  } ],\n  \"self\" : \"https://openapi-generator.tech\",\n  \"startAt\" : 6\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PageBeanSecurityLevelMember>(exampleJson)
            : default(PageBeanSecurityLevelMember);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get issue security levels
        /// </summary>
        /// <remarks>Returns a [paginated](#pagination) list of issue security levels.  Only issue security levels in the context of classic projects are returned.  Filtering using IDs is inclusive: if you specify both security scheme IDs and level IDs, the result will include both specified issue security levels and all issue security levels from the specified schemes.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="startAt">The index of the first item to return in a page of results (page offset).</param>
        /// <param name="maxResults">The maximum number of items to return per page.</param>
        /// <param name="id">The list of issue security scheme level IDs. To include multiple issue security levels, separate IDs with an ampersand: &#x60;id&#x3D;10000&amp;id&#x3D;10001&#x60;.</param>
        /// <param name="schemeId">The list of issue security scheme IDs. To include multiple issue security schemes, separate IDs with an ampersand: &#x60;schemeId&#x3D;10000&amp;schemeId&#x3D;10001&#x60;.</param>
        /// <param name="onlyDefault">When set to true, returns multiple default levels for each security scheme containing a default. If you provide scheme and level IDs not associated with the default, returns an empty page. The default value is false.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user doesn&#39;t have the necessary permission.</response>
        [HttpGet]
        [Route("/rest/api/3/issuesecurityschemes/level")]
        [ValidateModelState]
        [SwaggerOperation("GetSecurityLevels")]
        [SwaggerResponse(statusCode: 200, type: typeof(PageBeanSecurityLevel), description: "Returned if the request is successful.")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorCollection), description: "Returned if the request is invalid.")]
        [SwaggerResponse(statusCode: 401, type: typeof(ErrorCollection), description: "Returned if the authentication credentials are incorrect or missing.")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorCollection), description: "Returned if the user doesn&#39;t have the necessary permission.")]
        public virtual IActionResult GetSecurityLevels([FromQuery (Name = "startAt")]string startAt, [FromQuery (Name = "maxResults")]string maxResults, [FromQuery (Name = "id")]List<string> id, [FromQuery (Name = "schemeId")]List<string> schemeId, [FromQuery (Name = "onlyDefault")]bool? onlyDefault)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PageBeanSecurityLevel));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorCollection));
            string exampleJson = null;
            exampleJson = "{\n  \"total\" : 1,\n  \"isLast\" : true,\n  \"maxResults\" : 0,\n  \"nextPage\" : \"https://openapi-generator.tech\",\n  \"values\" : [ {\n    \"isDefault\" : true,\n    \"issueSecuritySchemeId\" : \"issueSecuritySchemeId\",\n    \"name\" : \"name\",\n    \"description\" : \"description\",\n    \"self\" : \"self\",\n    \"id\" : \"id\"\n  }, {\n    \"isDefault\" : true,\n    \"issueSecuritySchemeId\" : \"issueSecuritySchemeId\",\n    \"name\" : \"name\",\n    \"description\" : \"description\",\n    \"self\" : \"self\",\n    \"id\" : \"id\"\n  } ],\n  \"self\" : \"https://openapi-generator.tech\",\n  \"startAt\" : 6\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PageBeanSecurityLevel>(exampleJson)
            : default(PageBeanSecurityLevel);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Remove issue security level
        /// </summary>
        /// <remarks>Deletes an issue security level.  This operation is [asynchronous](#async). Follow the &#x60;location&#x60; link in the response to determine the status of the task and use [Get task](#api-rest-api-3-task-taskId-get) to obtain subsequent updates.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="schemeId">The ID of the issue security scheme.</param>
        /// <param name="levelId">The ID of the issue security level to remove.</param>
        /// <param name="replaceWith">The ID of the issue security level that will replace the currently selected level.</param>
        /// <response code="303">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request isn&#39;t valid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user doesn&#39;t have the necessary permission.</response>
        /// <response code="404">Returned if the issue security level isn&#39;t found.</response>
        /// <response code="409">Returned if a task to remove the issue security level is already running.</response>
        [HttpDelete]
        [Route("/rest/api/3/issuesecurityschemes/{schemeId}/level/{levelId}")]
        [ValidateModelState]
        [SwaggerOperation("RemoveLevel")]
        [SwaggerResponse(statusCode: 303, type: typeof(TaskProgressBeanObject), description: "Returned if the request is successful.")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorCollection), description: "Returned if the request isn&#39;t valid.")]
        [SwaggerResponse(statusCode: 401, type: typeof(ErrorCollection), description: "Returned if the authentication credentials are incorrect or missing.")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorCollection), description: "Returned if the user doesn&#39;t have the necessary permission.")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorCollection), description: "Returned if the issue security level isn&#39;t found.")]
        [SwaggerResponse(statusCode: 409, type: typeof(ErrorCollection), description: "Returned if a task to remove the issue security level is already running.")]
        public virtual IActionResult RemoveLevel([FromRoute (Name = "schemeId")][Required]string schemeId, [FromRoute (Name = "levelId")][Required]string levelId, [FromQuery (Name = "replaceWith")]string replaceWith)
        {

            //TODO: Uncomment the next line to return response 303 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(303, default(TaskProgressBeanObject));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(ErrorCollection));

            throw new NotImplementedException();
        }

        /// <summary>
        /// Remove member from issue security level
        /// </summary>
        /// <remarks>Removes an issue security level member from an issue security scheme.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="schemeId">The ID of the issue security scheme.</param>
        /// <param name="levelId">The ID of the issue security level.</param>
        /// <param name="memberId">The ID of the issue security level member to be removed.</param>
        /// <response code="204">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user doesn&#39;t have the necessary permission.</response>
        /// <response code="404">Returned if the security scheme isn&#39;t found.</response>
        [HttpDelete]
        [Route("/rest/api/3/issuesecurityschemes/{schemeId}/level/{levelId}/member/{memberId}")]
        [ValidateModelState]
        [SwaggerOperation("RemoveMemberFromSecurityLevel")]
        [SwaggerResponse(statusCode: 204, type: typeof(Object), description: "Returned if the request is successful.")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorCollection), description: "Returned if the request is invalid.")]
        [SwaggerResponse(statusCode: 401, type: typeof(ErrorCollection), description: "Returned if the authentication credentials are incorrect or missing.")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorCollection), description: "Returned if the user doesn&#39;t have the necessary permission.")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorCollection), description: "Returned if the security scheme isn&#39;t found.")]
        public virtual IActionResult RemoveMemberFromSecurityLevel([FromRoute (Name = "schemeId")][Required]string schemeId, [FromRoute (Name = "levelId")][Required]string levelId, [FromRoute (Name = "memberId")][Required]string memberId)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204, default(Object));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorCollection));
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default(Object);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get projects using issue security schemes
        /// </summary>
        /// <remarks>Returns a [paginated](#pagination) mapping of projects that are using security schemes. You can provide either one or multiple security scheme IDs or project IDs to filter by. If you don&#39;t provide any, this will return a list of all mappings. Only issue security schemes in the context of classic projects are supported. **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="startAt">The index of the first item to return in a page of results (page offset).</param>
        /// <param name="maxResults">The maximum number of items to return per page.</param>
        /// <param name="issueSecuritySchemeId">The list of security scheme IDs to be filtered out.</param>
        /// <param name="projectId">The list of project IDs to be filtered out.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the search criteria is invalid.If you specify the project ID parameter</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user doesn&#39;t have the necessary permission.</response>
        [HttpGet]
        [Route("/rest/api/3/issuesecurityschemes/project")]
        [ValidateModelState]
        [SwaggerOperation("SearchProjectsUsingSecuritySchemes")]
        [SwaggerResponse(statusCode: 200, type: typeof(PageBeanIssueSecuritySchemeToProjectMapping), description: "Returned if the request is successful.")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorCollection), description: "Returned if the search criteria is invalid.If you specify the project ID parameter")]
        [SwaggerResponse(statusCode: 401, type: typeof(ErrorCollection), description: "Returned if the authentication credentials are incorrect or missing.")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorCollection), description: "Returned if the user doesn&#39;t have the necessary permission.")]
        public virtual IActionResult SearchProjectsUsingSecuritySchemes([FromQuery (Name = "startAt")]string startAt, [FromQuery (Name = "maxResults")]string maxResults, [FromQuery (Name = "issueSecuritySchemeId")]List<string> issueSecuritySchemeId, [FromQuery (Name = "projectId")]List<string> projectId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PageBeanIssueSecuritySchemeToProjectMapping));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorCollection));
            string exampleJson = null;
            exampleJson = "{\n  \"total\" : 1,\n  \"isLast\" : true,\n  \"maxResults\" : 0,\n  \"nextPage\" : \"https://openapi-generator.tech\",\n  \"values\" : [ {\n    \"issueSecuritySchemeId\" : \"issueSecuritySchemeId\",\n    \"projectId\" : \"projectId\"\n  }, {\n    \"issueSecuritySchemeId\" : \"issueSecuritySchemeId\",\n    \"projectId\" : \"projectId\"\n  } ],\n  \"self\" : \"https://openapi-generator.tech\",\n  \"startAt\" : 6\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PageBeanIssueSecuritySchemeToProjectMapping>(exampleJson)
            : default(PageBeanIssueSecuritySchemeToProjectMapping);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Search issue security schemes
        /// </summary>
        /// <remarks>Returns a [paginated](#pagination) list of issue security schemes.   If you specify the project ID parameter, the result will contain issue security schemes and related project IDs you filter by. Use \\{@link IssueSecuritySchemeResource\\#searchProjectsUsingSecuritySchemes(String, String, Set, Set)\\} to obtain all projects related to scheme.  Only issue security schemes in the context of classic projects are returned.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="startAt">The index of the first item to return in a page of results (page offset).</param>
        /// <param name="maxResults">The maximum number of items to return per page.</param>
        /// <param name="id">The list of issue security scheme IDs. To include multiple issue security scheme IDs, separate IDs with an ampersand: &#x60;id&#x3D;10000&amp;id&#x3D;10001&#x60;.</param>
        /// <param name="projectId">The list of project IDs. To include multiple project IDs, separate IDs with an ampersand: &#x60;projectId&#x3D;10000&amp;projectId&#x3D;10001&#x60;.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user doesn&#39;t have the necessary permission.</response>
        [HttpGet]
        [Route("/rest/api/3/issuesecurityschemes/search")]
        [ValidateModelState]
        [SwaggerOperation("SearchSecuritySchemes")]
        [SwaggerResponse(statusCode: 200, type: typeof(PageBeanSecuritySchemeWithProjects), description: "Returned if the request is successful.")]
        public virtual IActionResult SearchSecuritySchemes([FromQuery (Name = "startAt")]string startAt, [FromQuery (Name = "maxResults")]string maxResults, [FromQuery (Name = "id")]List<string> id, [FromQuery (Name = "projectId")]List<string> projectId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PageBeanSecuritySchemeWithProjects));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            string exampleJson = null;
            exampleJson = "{\n  \"total\" : 1,\n  \"isLast\" : true,\n  \"maxResults\" : 0,\n  \"nextPage\" : \"https://openapi-generator.tech\",\n  \"values\" : [ {\n    \"defaultLevel\" : 5,\n    \"name\" : \"name\",\n    \"description\" : \"description\",\n    \"self\" : \"self\",\n    \"id\" : 5,\n    \"projectIds\" : [ 2, 2 ]\n  }, {\n    \"defaultLevel\" : 5,\n    \"name\" : \"name\",\n    \"description\" : \"description\",\n    \"self\" : \"self\",\n    \"id\" : 5,\n    \"projectIds\" : [ 2, 2 ]\n  } ],\n  \"self\" : \"https://openapi-generator.tech\",\n  \"startAt\" : 6\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PageBeanSecuritySchemeWithProjects>(exampleJson)
            : default(PageBeanSecuritySchemeWithProjects);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Set default issue security levels
        /// </summary>
        /// <remarks>Sets default issue security levels for schemes.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="setDefaultLevelsRequest"></param>
        /// <response code="204">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user doesn&#39;t have the necessary permission.</response>
        /// <response code="404">Returned if the issue resolution isn&#39;t found.</response>
        [HttpPut]
        [Route("/rest/api/3/issuesecurityschemes/level/default")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("SetDefaultLevels")]
        [SwaggerResponse(statusCode: 204, type: typeof(Object), description: "Returned if the request is successful.")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorCollection), description: "Returned if the request is invalid.")]
        [SwaggerResponse(statusCode: 401, type: typeof(ErrorCollection), description: "Returned if the authentication credentials are incorrect or missing.")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorCollection), description: "Returned if the user doesn&#39;t have the necessary permission.")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorCollection), description: "Returned if the issue resolution isn&#39;t found.")]
        public virtual IActionResult SetDefaultLevels([FromBody]SetDefaultLevelsRequest setDefaultLevelsRequest)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204, default(Object));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorCollection));
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default(Object);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update issue security scheme
        /// </summary>
        /// <remarks>Updates the issue security scheme.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id">The ID of the issue security scheme.</param>
        /// <param name="updateIssueSecuritySchemeRequestBean"></param>
        /// <response code="204">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user doesn&#39;t have the necessary permission.</response>
        /// <response code="404">Returned if the issue security scheme isn&#39;t found.</response>
        [HttpPut]
        [Route("/rest/api/3/issuesecurityschemes/{id}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("UpdateIssueSecurityScheme")]
        [SwaggerResponse(statusCode: 204, type: typeof(Object), description: "Returned if the request is successful.")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorCollection), description: "Returned if the request is invalid.")]
        [SwaggerResponse(statusCode: 401, type: typeof(ErrorCollection), description: "Returned if the authentication credentials are incorrect or missing.")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorCollection), description: "Returned if the user doesn&#39;t have the necessary permission.")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorCollection), description: "Returned if the issue security scheme isn&#39;t found.")]
        public virtual IActionResult UpdateIssueSecurityScheme([FromRoute (Name = "id")][Required]string id, [FromBody]UpdateIssueSecuritySchemeRequestBean updateIssueSecuritySchemeRequestBean)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204, default(Object));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorCollection));
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default(Object);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update issue security level
        /// </summary>
        /// <remarks>Updates the issue security level.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="schemeId">The ID of the issue security scheme level belongs to.</param>
        /// <param name="levelId">The ID of the issue security level to update.</param>
        /// <param name="updateIssueSecurityLevelDetails"></param>
        /// <response code="204">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request isn&#39;t valid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user doesn&#39;t have the necessary permission.</response>
        /// <response code="404">Returned if the issue security level isn&#39;t found.</response>
        [HttpPut]
        [Route("/rest/api/3/issuesecurityschemes/{schemeId}/level/{levelId}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("UpdateSecurityLevel")]
        [SwaggerResponse(statusCode: 204, type: typeof(Object), description: "Returned if the request is successful.")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorCollection), description: "Returned if the request isn&#39;t valid.")]
        [SwaggerResponse(statusCode: 401, type: typeof(ErrorCollection), description: "Returned if the authentication credentials are incorrect or missing.")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorCollection), description: "Returned if the user doesn&#39;t have the necessary permission.")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorCollection), description: "Returned if the issue security level isn&#39;t found.")]
        public virtual IActionResult UpdateSecurityLevel([FromRoute (Name = "schemeId")][Required]string schemeId, [FromRoute (Name = "levelId")][Required]string levelId, [FromBody]UpdateIssueSecurityLevelDetails updateIssueSecurityLevelDetails)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204, default(Object));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorCollection));
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default(Object);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
