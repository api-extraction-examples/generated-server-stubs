/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class FiltersApiController : ControllerBase
    { 
        /// <summary>
        /// Change filter owner
        /// </summary>
        /// <remarks>Changes the owner of the filter.  **[Permissions](#permissions) required:** Permission to access Jira. However, the user must own the filter or have the *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id">The ID of the filter to update.</param>
        /// <param name="changeFilterOwner">The account ID of the new owner of the filter.</param>
        /// <response code="204">Returned if the request is successful.</response>
        /// <response code="400">Returned when:   *  The new owner of the filter owns a filter with the same name.  *  An attempt is made to change owner of the default filter.</response>
        /// <response code="403">Returned if the requesting user is not an owner of the filter or does not have *Administer Jira* global permission.</response>
        /// <response code="404">Returned if the filter or the new owner of the filter is not found.</response>
        [HttpPut]
        [Route("/rest/api/3/filter/{id}/owner")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("ChangeFilterOwner")]
        [SwaggerResponse(statusCode: 204, type: typeof(Object), description: "Returned if the request is successful.")]
        public virtual IActionResult ChangeFilterOwner([FromRoute (Name = "id")][Required]long id, [FromBody]ChangeFilterOwner changeFilterOwner)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204, default(Object));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default(Object);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create filter
        /// </summary>
        /// <remarks>Creates a filter. The filter is shared according to the [default share scope](#api-rest-api-3-filter-post). The filter is not selected as a favorite.  **[Permissions](#permissions) required:** Permission to access Jira.</remarks>
        /// <param name="filter">The filter to create.</param>
        /// <param name="expand">Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:   *  &#x60;sharedUsers&#x60; Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don&#39;t specify &#x60;sharedUsers&#x60;, then the &#x60;sharedUsers&#x60; object is returned but it doesn&#39;t list any users. The list of users returned is limited to 1000, to access additional users append &#x60;[start-index:end-index]&#x60; to the expand request. For example, to access the next 1000 users, use &#x60;?expand&#x3D;sharedUsers[1001:2000]&#x60;.  *  &#x60;subscriptions&#x60; Returns the users that are subscribed to the filter. If you don&#39;t specify &#x60;subscriptions&#x60;, the &#x60;subscriptions&#x60; object is returned but it doesn&#39;t list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append &#x60;[start-index:end-index]&#x60; to the expand request. For example, to access the next 1000 subscriptions, use &#x60;?expand&#x3D;subscriptions[1001:2000]&#x60;.</param>
        /// <param name="overrideSharePermissions">EXPERIMENTAL: Whether share permissions are overridden to enable filters with any share permissions to be created. Available to users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request object is invalid. For example, the &#x60;name&#x60; is not unique or the project ID is not specified for a project role share permission.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        [HttpPost]
        [Route("/rest/api/3/filter")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("CreateFilter")]
        [SwaggerResponse(statusCode: 200, type: typeof(Filter), description: "Returned if the request is successful.")]
        public virtual IActionResult CreateFilter([FromBody]Filter filter, [FromQuery (Name = "expand")]string expand, [FromQuery (Name = "overrideSharePermissions")]bool? overrideSharePermissions)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Filter));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            string exampleJson = null;
            exampleJson = "{\n  \"jql\" : \"jql\",\n  \"favouritedCount\" : 0,\n  \"description\" : \"description\",\n  \"favourite\" : true,\n  \"editPermissions\" : [ {\n    \"role\" : \"\",\n    \"project\" : \"\",\n    \"id\" : 6,\n    \"type\" : \"user\",\n    \"user\" : \"\",\n    \"group\" : \"\"\n  }, {\n    \"role\" : \"\",\n    \"project\" : \"\",\n    \"id\" : 6,\n    \"type\" : \"user\",\n    \"user\" : \"\",\n    \"group\" : \"\"\n  } ],\n  \"name\" : \"name\",\n  \"viewUrl\" : \"https://openapi-generator.tech\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"searchUrl\" : \"https://openapi-generator.tech\",\n  \"id\" : \"id\",\n  \"sharePermissions\" : [ {\n    \"role\" : \"\",\n    \"project\" : \"\",\n    \"id\" : 6,\n    \"type\" : \"user\",\n    \"user\" : \"\",\n    \"group\" : \"\"\n  }, {\n    \"role\" : \"\",\n    \"project\" : \"\",\n    \"id\" : 6,\n    \"type\" : \"user\",\n    \"user\" : \"\",\n    \"group\" : \"\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Filter>(exampleJson)
            : default(Filter);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Remove filter as favorite
        /// </summary>
        /// <remarks>Removes a filter as a favorite for the user. Note that this operation only removes filters visible to the user from the user&#39;s favorites list. For example, if the user favorites a public filter that is subsequently made private (and is therefore no longer visible on their favorites list) they cannot remove it from their favorites list.  **[Permissions](#permissions) required:** Permission to access Jira.</remarks>
        /// <param name="id">The ID of the filter.</param>
        /// <param name="expand">Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:   *  &#x60;sharedUsers&#x60; Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don&#39;t specify &#x60;sharedUsers&#x60;, then the &#x60;sharedUsers&#x60; object is returned but it doesn&#39;t list any users. The list of users returned is limited to 1000, to access additional users append &#x60;[start-index:end-index]&#x60; to the expand request. For example, to access the next 1000 users, use &#x60;?expand&#x3D;sharedUsers[1001:2000]&#x60;.  *  &#x60;subscriptions&#x60; Returns the users that are subscribed to the filter. If you don&#39;t specify &#x60;subscriptions&#x60;, the &#x60;subscriptions&#x60; object is returned but it doesn&#39;t list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append &#x60;[start-index:end-index]&#x60; to the expand request. For example, to access the next 1000 subscriptions, use &#x60;?expand&#x3D;subscriptions[1001:2000]&#x60;.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if:   *  the filter is not found.  *  the user does not have permission to view the filter.</response>
        [HttpDelete]
        [Route("/rest/api/3/filter/{id}/favourite")]
        [ValidateModelState]
        [SwaggerOperation("DeleteFavouriteForFilter")]
        [SwaggerResponse(statusCode: 200, type: typeof(Filter), description: "Returned if the request is successful.")]
        public virtual IActionResult DeleteFavouriteForFilter([FromRoute (Name = "id")][Required]long id, [FromQuery (Name = "expand")]string expand)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Filter));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            string exampleJson = null;
            exampleJson = "{\n  \"jql\" : \"jql\",\n  \"favouritedCount\" : 0,\n  \"description\" : \"description\",\n  \"favourite\" : true,\n  \"editPermissions\" : [ {\n    \"role\" : \"\",\n    \"project\" : \"\",\n    \"id\" : 6,\n    \"type\" : \"user\",\n    \"user\" : \"\",\n    \"group\" : \"\"\n  }, {\n    \"role\" : \"\",\n    \"project\" : \"\",\n    \"id\" : 6,\n    \"type\" : \"user\",\n    \"user\" : \"\",\n    \"group\" : \"\"\n  } ],\n  \"name\" : \"name\",\n  \"viewUrl\" : \"https://openapi-generator.tech\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"searchUrl\" : \"https://openapi-generator.tech\",\n  \"id\" : \"id\",\n  \"sharePermissions\" : [ {\n    \"role\" : \"\",\n    \"project\" : \"\",\n    \"id\" : 6,\n    \"type\" : \"user\",\n    \"user\" : \"\",\n    \"group\" : \"\"\n  }, {\n    \"role\" : \"\",\n    \"project\" : \"\",\n    \"id\" : 6,\n    \"type\" : \"user\",\n    \"user\" : \"\",\n    \"group\" : \"\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Filter>(exampleJson)
            : default(Filter);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Delete filter
        /// </summary>
        /// <remarks>Delete a filter.  **[Permissions](#permissions) required:** Permission to access Jira, however filters can only be deleted by the creator of the filter or a user with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id">The ID of the filter to delete.</param>
        /// <response code="204">Returned if the request is successful.</response>
        /// <response code="400">Returned if the filter is not found.</response>
        /// <response code="401">Returned if the user does not have permission to delete the filter.</response>
        [HttpDelete]
        [Route("/rest/api/3/filter/{id}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteFilter")]
        public virtual IActionResult DeleteFilter([FromRoute (Name = "id")][Required]long id)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Get columns
        /// </summary>
        /// <remarks>Returns the columns configured for a filter. The column configuration is used when the filter&#39;s results are viewed in *List View* with the *Columns* set to *Filter*.  This operation can be accessed anonymously.  **[Permissions](#permissions) required:** None, however, column details are only returned for:   *  filters owned by the user.  *  filters shared with a group that the user is a member of.  *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.  *  filters shared with a public project.  *  filters shared with the public.</remarks>
        /// <param name="id">The ID of the filter.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the user does not have permission to view the filter.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="404">Returned if a column configuration is not set for the filter.</response>
        [HttpGet]
        [Route("/rest/api/3/filter/{id}/columns")]
        [ValidateModelState]
        [SwaggerOperation("GetColumns")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ColumnItem>), description: "Returned if the request is successful.")]
        public virtual IActionResult GetColumns([FromRoute (Name = "id")][Required]long id)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ColumnItem>));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"label\" : \"label\",\n  \"value\" : \"value\"\n}, {\n  \"label\" : \"label\",\n  \"value\" : \"value\"\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ColumnItem>>(exampleJson)
            : default(List<ColumnItem>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get favorite filters
        /// </summary>
        /// <remarks>Returns the visible favorite filters of the user.  This operation can be accessed anonymously.  **[Permissions](#permissions) required:** A favorite filter is only visible to the user where the filter is:   *  owned by the user.  *  shared with a group that the user is a member of.  *  shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.  *  shared with a public project.  *  shared with the public.  For example, if the user favorites a public filter that is subsequently made private that filter is not returned by this operation.</remarks>
        /// <param name="expand">Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:   *  &#x60;sharedUsers&#x60; Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don&#39;t specify &#x60;sharedUsers&#x60;, then the &#x60;sharedUsers&#x60; object is returned but it doesn&#39;t list any users. The list of users returned is limited to 1000, to access additional users append &#x60;[start-index:end-index]&#x60; to the expand request. For example, to access the next 1000 users, use &#x60;?expand&#x3D;sharedUsers[1001:2000]&#x60;.  *  &#x60;subscriptions&#x60; Returns the users that are subscribed to the filter. If you don&#39;t specify &#x60;subscriptions&#x60;, the &#x60;subscriptions&#x60; object is returned but it doesn&#39;t list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append &#x60;[start-index:end-index]&#x60; to the expand request. For example, to access the next 1000 subscriptions, use &#x60;?expand&#x3D;subscriptions[1001:2000]&#x60;.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        [HttpGet]
        [Route("/rest/api/3/filter/favourite")]
        [ValidateModelState]
        [SwaggerOperation("GetFavouriteFilters")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Filter>), description: "Returned if the request is successful.")]
        public virtual IActionResult GetFavouriteFilters([FromQuery (Name = "expand")]string expand)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Filter>));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            string exampleJson = null;
            exampleJson = "[ {\n  \"jql\" : \"jql\",\n  \"favouritedCount\" : 0,\n  \"description\" : \"description\",\n  \"favourite\" : true,\n  \"editPermissions\" : [ {\n    \"role\" : \"\",\n    \"project\" : \"\",\n    \"id\" : 6,\n    \"type\" : \"user\",\n    \"user\" : \"\",\n    \"group\" : \"\"\n  }, {\n    \"role\" : \"\",\n    \"project\" : \"\",\n    \"id\" : 6,\n    \"type\" : \"user\",\n    \"user\" : \"\",\n    \"group\" : \"\"\n  } ],\n  \"name\" : \"name\",\n  \"viewUrl\" : \"https://openapi-generator.tech\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"searchUrl\" : \"https://openapi-generator.tech\",\n  \"id\" : \"id\",\n  \"sharePermissions\" : [ {\n    \"role\" : \"\",\n    \"project\" : \"\",\n    \"id\" : 6,\n    \"type\" : \"user\",\n    \"user\" : \"\",\n    \"group\" : \"\"\n  }, {\n    \"role\" : \"\",\n    \"project\" : \"\",\n    \"id\" : 6,\n    \"type\" : \"user\",\n    \"user\" : \"\",\n    \"group\" : \"\"\n  } ]\n}, {\n  \"jql\" : \"jql\",\n  \"favouritedCount\" : 0,\n  \"description\" : \"description\",\n  \"favourite\" : true,\n  \"editPermissions\" : [ {\n    \"role\" : \"\",\n    \"project\" : \"\",\n    \"id\" : 6,\n    \"type\" : \"user\",\n    \"user\" : \"\",\n    \"group\" : \"\"\n  }, {\n    \"role\" : \"\",\n    \"project\" : \"\",\n    \"id\" : 6,\n    \"type\" : \"user\",\n    \"user\" : \"\",\n    \"group\" : \"\"\n  } ],\n  \"name\" : \"name\",\n  \"viewUrl\" : \"https://openapi-generator.tech\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"searchUrl\" : \"https://openapi-generator.tech\",\n  \"id\" : \"id\",\n  \"sharePermissions\" : [ {\n    \"role\" : \"\",\n    \"project\" : \"\",\n    \"id\" : 6,\n    \"type\" : \"user\",\n    \"user\" : \"\",\n    \"group\" : \"\"\n  }, {\n    \"role\" : \"\",\n    \"project\" : \"\",\n    \"id\" : 6,\n    \"type\" : \"user\",\n    \"user\" : \"\",\n    \"group\" : \"\"\n  } ]\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<Filter>>(exampleJson)
            : default(List<Filter>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get filter
        /// </summary>
        /// <remarks>Returns a filter.  This operation can be accessed anonymously.  **[Permissions](#permissions) required:** None, however, the filter is only returned where it is:   *  owned by the user.  *  shared with a group that the user is a member of.  *  shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.  *  shared with a public project.  *  shared with the public.</remarks>
        /// <param name="id">The ID of the filter to return.</param>
        /// <param name="expand">Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:   *  &#x60;sharedUsers&#x60; Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don&#39;t specify &#x60;sharedUsers&#x60;, then the &#x60;sharedUsers&#x60; object is returned but it doesn&#39;t list any users. The list of users returned is limited to 1000, to access additional users append &#x60;[start-index:end-index]&#x60; to the expand request. For example, to access the next 1000 users, use &#x60;?expand&#x3D;sharedUsers[1001:2000]&#x60;.  *  &#x60;subscriptions&#x60; Returns the users that are subscribed to the filter. If you don&#39;t specify &#x60;subscriptions&#x60;, the &#x60;subscriptions&#x60; object is returned but it doesn&#39;t list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append &#x60;[start-index:end-index]&#x60; to the expand request. For example, to access the next 1000 subscriptions, use &#x60;?expand&#x3D;subscriptions[1001:2000]&#x60;.</param>
        /// <param name="overrideSharePermissions">EXPERIMENTAL: Whether share permissions are overridden to enable filters with any share permissions to be returned. Available to users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the filter is not found or the user does not have permission to view it.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        [HttpGet]
        [Route("/rest/api/3/filter/{id}")]
        [ValidateModelState]
        [SwaggerOperation("GetFilter")]
        [SwaggerResponse(statusCode: 200, type: typeof(Filter), description: "Returned if the request is successful.")]
        public virtual IActionResult GetFilter([FromRoute (Name = "id")][Required]long id, [FromQuery (Name = "expand")]string expand, [FromQuery (Name = "overrideSharePermissions")]bool? overrideSharePermissions)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Filter));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            string exampleJson = null;
            exampleJson = "{\n  \"jql\" : \"jql\",\n  \"favouritedCount\" : 0,\n  \"description\" : \"description\",\n  \"favourite\" : true,\n  \"editPermissions\" : [ {\n    \"role\" : \"\",\n    \"project\" : \"\",\n    \"id\" : 6,\n    \"type\" : \"user\",\n    \"user\" : \"\",\n    \"group\" : \"\"\n  }, {\n    \"role\" : \"\",\n    \"project\" : \"\",\n    \"id\" : 6,\n    \"type\" : \"user\",\n    \"user\" : \"\",\n    \"group\" : \"\"\n  } ],\n  \"name\" : \"name\",\n  \"viewUrl\" : \"https://openapi-generator.tech\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"searchUrl\" : \"https://openapi-generator.tech\",\n  \"id\" : \"id\",\n  \"sharePermissions\" : [ {\n    \"role\" : \"\",\n    \"project\" : \"\",\n    \"id\" : 6,\n    \"type\" : \"user\",\n    \"user\" : \"\",\n    \"group\" : \"\"\n  }, {\n    \"role\" : \"\",\n    \"project\" : \"\",\n    \"id\" : 6,\n    \"type\" : \"user\",\n    \"user\" : \"\",\n    \"group\" : \"\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Filter>(exampleJson)
            : default(Filter);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Search for filters
        /// </summary>
        /// <remarks>Returns a [paginated](#pagination) list of filters. Use this operation to get:   *  specific filters, by defining &#x60;id&#x60; only.  *  filters that match all of the specified attributes. For example, all filters for a user with a particular word in their name. When multiple attributes are specified only filters matching all attributes are returned.  This operation can be accessed anonymously.  **[Permissions](#permissions) required:** None, however, only the following filters that match the query parameters are returned:   *  filters owned by the user.  *  filters shared with a group that the user is a member of.  *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.  *  filters shared with a public project.  *  filters shared with the public.</remarks>
        /// <param name="filterName">String used to perform a case-insensitive partial match with &#x60;name&#x60;.</param>
        /// <param name="accountId">User account ID used to return filters with the matching &#x60;owner.accountId&#x60;. This parameter cannot be used with &#x60;owner&#x60;.</param>
        /// <param name="owner">This parameter is deprecated because of privacy changes. Use &#x60;accountId&#x60; instead. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details. User name used to return filters with the matching &#x60;owner.name&#x60;. This parameter cannot be used with &#x60;accountId&#x60;.</param>
        /// <param name="groupname">As a group&#39;s name can change, use of &#x60;groupId&#x60; is recommended to identify a group. Group name used to returns filters that are shared with a group that matches &#x60;sharePermissions.group.groupname&#x60;. This parameter cannot be used with the &#x60;groupId&#x60; parameter.</param>
        /// <param name="groupId">Group ID used to returns filters that are shared with a group that matches &#x60;sharePermissions.group.groupId&#x60;. This parameter cannot be used with the &#x60;groupname&#x60; parameter.</param>
        /// <param name="projectId">Project ID used to returns filters that are shared with a project that matches &#x60;sharePermissions.project.id&#x60;.</param>
        /// <param name="id">The list of filter IDs. To include multiple IDs, provide an ampersand-separated list. For example, &#x60;id&#x3D;10000&amp;id&#x3D;10001&#x60;. Do not exceed 200 filter IDs.</param>
        /// <param name="orderBy">[Order](#ordering) the results by a field:   *  &#x60;description&#x60; Sorts by filter description. Note that this sorting works independently of whether the expand to display the description field is in use.  *  &#x60;favourite_count&#x60; Sorts by the count of how many users have this filter as a favorite.  *  &#x60;is_favourite&#x60; Sorts by whether the filter is marked as a favorite.  *  &#x60;id&#x60; Sorts by filter ID.  *  &#x60;name&#x60; Sorts by filter name.  *  &#x60;owner&#x60; Sorts by the ID of the filter owner.  *  &#x60;is_shared&#x60; Sorts by whether the filter is shared.</param>
        /// <param name="startAt">The index of the first item to return in a page of results (page offset).</param>
        /// <param name="maxResults">The maximum number of items to return per page.</param>
        /// <param name="expand">Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:   *  &#x60;description&#x60; Returns the description of the filter.  *  &#x60;favourite&#x60; Returns an indicator of whether the user has set the filter as a favorite.  *  &#x60;favouritedCount&#x60; Returns a count of how many users have set this filter as a favorite.  *  &#x60;jql&#x60; Returns the JQL query that the filter uses.  *  &#x60;owner&#x60; Returns the owner of the filter.  *  &#x60;searchUrl&#x60; Returns a URL to perform the filter&#39;s JQL query.  *  &#x60;sharePermissions&#x60; Returns the share permissions defined for the filter.  *  &#x60;editPermissions&#x60; Returns the edit permissions defined for the filter.  *  &#x60;isWritable&#x60; Returns whether the current user has permission to edit the filter.  *  &#x60;subscriptions&#x60; Returns the users that are subscribed to the filter.  *  &#x60;viewUrl&#x60; Returns a URL to view the filter.</param>
        /// <param name="overrideSharePermissions">EXPERIMENTAL: Whether share permissions are overridden to enable filters with any share permissions to be returned. Available to users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if:   *  &#x60;owner&#x60; and &#x60;accountId&#x60; are provided.  *  &#x60;expand&#x60; includes an invalid value.  *  &#x60;orderBy&#x60; is invalid.  *  &#x60;id&#x60; identifies more than 200 filter IDs.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        [HttpGet]
        [Route("/rest/api/3/filter/search")]
        [ValidateModelState]
        [SwaggerOperation("GetFiltersPaginated")]
        [SwaggerResponse(statusCode: 200, type: typeof(PageBeanFilterDetails), description: "Returned if the request is successful.")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorCollection), description: "Returned if:   *  &#x60;owner&#x60; and &#x60;accountId&#x60; are provided.  *  &#x60;expand&#x60; includes an invalid value.  *  &#x60;orderBy&#x60; is invalid.  *  &#x60;id&#x60; identifies more than 200 filter IDs.")]
        public virtual IActionResult GetFiltersPaginated([FromQuery (Name = "filterName")]string filterName, [FromQuery (Name = "accountId")] [MaxLength(128)]string accountId, [FromQuery (Name = "owner")]string owner, [FromQuery (Name = "groupname")]string groupname, [FromQuery (Name = "groupId")]string groupId, [FromQuery (Name = "projectId")]long? projectId, [FromQuery (Name = "id")]List<long> id, [FromQuery (Name = "orderBy")]string orderBy, [FromQuery (Name = "startAt")]long? startAt, [FromQuery (Name = "maxResults")]int? maxResults, [FromQuery (Name = "expand")]string expand, [FromQuery (Name = "overrideSharePermissions")]bool? overrideSharePermissions)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PageBeanFilterDetails));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorCollection));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            string exampleJson = null;
            exampleJson = "{\n  \"total\" : 1,\n  \"isLast\" : true,\n  \"maxResults\" : 0,\n  \"nextPage\" : \"https://openapi-generator.tech\",\n  \"values\" : [ {\n    \"subscriptions\" : [ {\n      \"id\" : 5\n    }, {\n      \"id\" : 5\n    } ],\n    \"jql\" : \"jql\",\n    \"favouritedCount\" : 5,\n    \"description\" : \"description\",\n    \"favourite\" : true,\n    \"expand\" : \"expand\",\n    \"editPermissions\" : [ {\n      \"role\" : \"\",\n      \"project\" : \"\",\n      \"id\" : 6,\n      \"type\" : \"user\",\n      \"user\" : \"\",\n      \"group\" : \"\"\n    }, {\n      \"role\" : \"\",\n      \"project\" : \"\",\n      \"id\" : 6,\n      \"type\" : \"user\",\n      \"user\" : \"\",\n      \"group\" : \"\"\n    } ],\n    \"name\" : \"name\",\n    \"viewUrl\" : \"https://openapi-generator.tech\",\n    \"self\" : \"https://openapi-generator.tech\",\n    \"searchUrl\" : \"https://openapi-generator.tech\",\n    \"id\" : \"id\",\n    \"sharePermissions\" : [ {\n      \"role\" : \"\",\n      \"project\" : \"\",\n      \"id\" : 6,\n      \"type\" : \"user\",\n      \"user\" : \"\",\n      \"group\" : \"\"\n    }, {\n      \"role\" : \"\",\n      \"project\" : \"\",\n      \"id\" : 6,\n      \"type\" : \"user\",\n      \"user\" : \"\",\n      \"group\" : \"\"\n    } ]\n  }, {\n    \"subscriptions\" : [ {\n      \"id\" : 5\n    }, {\n      \"id\" : 5\n    } ],\n    \"jql\" : \"jql\",\n    \"favouritedCount\" : 5,\n    \"description\" : \"description\",\n    \"favourite\" : true,\n    \"expand\" : \"expand\",\n    \"editPermissions\" : [ {\n      \"role\" : \"\",\n      \"project\" : \"\",\n      \"id\" : 6,\n      \"type\" : \"user\",\n      \"user\" : \"\",\n      \"group\" : \"\"\n    }, {\n      \"role\" : \"\",\n      \"project\" : \"\",\n      \"id\" : 6,\n      \"type\" : \"user\",\n      \"user\" : \"\",\n      \"group\" : \"\"\n    } ],\n    \"name\" : \"name\",\n    \"viewUrl\" : \"https://openapi-generator.tech\",\n    \"self\" : \"https://openapi-generator.tech\",\n    \"searchUrl\" : \"https://openapi-generator.tech\",\n    \"id\" : \"id\",\n    \"sharePermissions\" : [ {\n      \"role\" : \"\",\n      \"project\" : \"\",\n      \"id\" : 6,\n      \"type\" : \"user\",\n      \"user\" : \"\",\n      \"group\" : \"\"\n    }, {\n      \"role\" : \"\",\n      \"project\" : \"\",\n      \"id\" : 6,\n      \"type\" : \"user\",\n      \"user\" : \"\",\n      \"group\" : \"\"\n    } ]\n  } ],\n  \"self\" : \"https://openapi-generator.tech\",\n  \"startAt\" : 6\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PageBeanFilterDetails>(exampleJson)
            : default(PageBeanFilterDetails);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get my filters
        /// </summary>
        /// <remarks>Returns the filters owned by the user. If &#x60;includeFavourites&#x60; is &#x60;true&#x60;, the user&#39;s visible favorite filters are also returned.  **[Permissions](#permissions) required:** Permission to access Jira, however, a favorite filters is only visible to the user where the filter is:   *  owned by the user.  *  shared with a group that the user is a member of.  *  shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.  *  shared with a public project.  *  shared with the public.  For example, if the user favorites a public filter that is subsequently made private that filter is not returned by this operation.</remarks>
        /// <param name="expand">Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:   *  &#x60;sharedUsers&#x60; Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don&#39;t specify &#x60;sharedUsers&#x60;, then the &#x60;sharedUsers&#x60; object is returned but it doesn&#39;t list any users. The list of users returned is limited to 1000, to access additional users append &#x60;[start-index:end-index]&#x60; to the expand request. For example, to access the next 1000 users, use &#x60;?expand&#x3D;sharedUsers[1001:2000]&#x60;.  *  &#x60;subscriptions&#x60; Returns the users that are subscribed to the filter. If you don&#39;t specify &#x60;subscriptions&#x60;, the &#x60;subscriptions&#x60; object is returned but it doesn&#39;t list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append &#x60;[start-index:end-index]&#x60; to the expand request. For example, to access the next 1000 subscriptions, use &#x60;?expand&#x3D;subscriptions[1001:2000]&#x60;.</param>
        /// <param name="includeFavourites">Include the user&#39;s favorite filters in the response.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        [HttpGet]
        [Route("/rest/api/3/filter/my")]
        [ValidateModelState]
        [SwaggerOperation("GetMyFilters")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Filter>), description: "Returned if the request is successful.")]
        public virtual IActionResult GetMyFilters([FromQuery (Name = "expand")]string expand, [FromQuery (Name = "includeFavourites")]bool? includeFavourites)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Filter>));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            string exampleJson = null;
            exampleJson = "[ {\n  \"jql\" : \"jql\",\n  \"favouritedCount\" : 0,\n  \"description\" : \"description\",\n  \"favourite\" : true,\n  \"editPermissions\" : [ {\n    \"role\" : \"\",\n    \"project\" : \"\",\n    \"id\" : 6,\n    \"type\" : \"user\",\n    \"user\" : \"\",\n    \"group\" : \"\"\n  }, {\n    \"role\" : \"\",\n    \"project\" : \"\",\n    \"id\" : 6,\n    \"type\" : \"user\",\n    \"user\" : \"\",\n    \"group\" : \"\"\n  } ],\n  \"name\" : \"name\",\n  \"viewUrl\" : \"https://openapi-generator.tech\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"searchUrl\" : \"https://openapi-generator.tech\",\n  \"id\" : \"id\",\n  \"sharePermissions\" : [ {\n    \"role\" : \"\",\n    \"project\" : \"\",\n    \"id\" : 6,\n    \"type\" : \"user\",\n    \"user\" : \"\",\n    \"group\" : \"\"\n  }, {\n    \"role\" : \"\",\n    \"project\" : \"\",\n    \"id\" : 6,\n    \"type\" : \"user\",\n    \"user\" : \"\",\n    \"group\" : \"\"\n  } ]\n}, {\n  \"jql\" : \"jql\",\n  \"favouritedCount\" : 0,\n  \"description\" : \"description\",\n  \"favourite\" : true,\n  \"editPermissions\" : [ {\n    \"role\" : \"\",\n    \"project\" : \"\",\n    \"id\" : 6,\n    \"type\" : \"user\",\n    \"user\" : \"\",\n    \"group\" : \"\"\n  }, {\n    \"role\" : \"\",\n    \"project\" : \"\",\n    \"id\" : 6,\n    \"type\" : \"user\",\n    \"user\" : \"\",\n    \"group\" : \"\"\n  } ],\n  \"name\" : \"name\",\n  \"viewUrl\" : \"https://openapi-generator.tech\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"searchUrl\" : \"https://openapi-generator.tech\",\n  \"id\" : \"id\",\n  \"sharePermissions\" : [ {\n    \"role\" : \"\",\n    \"project\" : \"\",\n    \"id\" : 6,\n    \"type\" : \"user\",\n    \"user\" : \"\",\n    \"group\" : \"\"\n  }, {\n    \"role\" : \"\",\n    \"project\" : \"\",\n    \"id\" : 6,\n    \"type\" : \"user\",\n    \"user\" : \"\",\n    \"group\" : \"\"\n  } ]\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<Filter>>(exampleJson)
            : default(List<Filter>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Reset columns
        /// </summary>
        /// <remarks>Reset the user&#39;s column configuration for the filter to the default.  **[Permissions](#permissions) required:** Permission to access Jira, however, columns are only reset for:   *  filters owned by the user.  *  filters shared with a group that the user is a member of.  *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.  *  filters shared with a public project.  *  filters shared with the public.</remarks>
        /// <param name="id">The ID of the filter.</param>
        /// <response code="204">Returned if the request is successful.</response>
        /// <response code="400">Returned if:   *  the filter is not found.  *  the user does not have permission to view the filter.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        [HttpDelete]
        [Route("/rest/api/3/filter/{id}/columns")]
        [ValidateModelState]
        [SwaggerOperation("ResetColumns")]
        public virtual IActionResult ResetColumns([FromRoute (Name = "id")][Required]long id)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Set columns
        /// </summary>
        /// <remarks>Sets the columns for a filter. Only navigable fields can be set as columns. Use [Get fields](#api-rest-api-3-field-get) to get the list fields in Jira. A navigable field has &#x60;navigable&#x60; set to &#x60;true&#x60;.  The parameters for this resource are expressed as HTML form data. For example, in curl:  &#x60;curl -X PUT -d columns&#x3D;summary -d columns&#x3D;description https://your-domain.atlassian.net/rest/api/3/filter/10000/columns&#x60;  **[Permissions](#permissions) required:** Permission to access Jira, however, columns are only set for:   *  filters owned by the user.  *  filters shared with a group that the user is a member of.  *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.  *  filters shared with a public project.  *  filters shared with the public.</remarks>
        /// <param name="id">The ID of the filter.</param>
        /// <param name="requestBody">The IDs of the fields to set as columns. In the form data, specify each field as &#x60;columns&#x3D;id&#x60;, where &#x60;id&#x60; is the *id* of a field (as seen in the response for [Get fields](#api-rest-api-&lt;ver&gt;-field-get)). For example, &#x60;columns&#x3D;summary&#x60;.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if:   *  a non-navigable field is set as a column.  *  the user does not have permission to view the filter.</response>
        /// <response code="403">Returned if the requesting user is not an owner of the filter.</response>
        [HttpPut]
        [Route("/rest/api/3/filter/{id}/columns")]
        [Consumes("multipart/form-data")]
        [ValidateModelState]
        [SwaggerOperation("SetColumns")]
        [SwaggerResponse(statusCode: 200, type: typeof(Object), description: "Returned if the request is successful.")]
        public virtual IActionResult SetColumns([FromRoute (Name = "id")][Required]long id, [FromBody]List<string> requestBody)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Object));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default(Object);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Add filter as favorite
        /// </summary>
        /// <remarks>Add a filter as a favorite for the user.  **[Permissions](#permissions) required:** Permission to access Jira, however, the user can only favorite:   *  filters owned by the user.  *  filters shared with a group that the user is a member of.  *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.  *  filters shared with a public project.  *  filters shared with the public.</remarks>
        /// <param name="id">The ID of the filter.</param>
        /// <param name="expand">Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:   *  &#x60;sharedUsers&#x60; Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don&#39;t specify &#x60;sharedUsers&#x60;, then the &#x60;sharedUsers&#x60; object is returned but it doesn&#39;t list any users. The list of users returned is limited to 1000, to access additional users append &#x60;[start-index:end-index]&#x60; to the expand request. For example, to access the next 1000 users, use &#x60;?expand&#x3D;sharedUsers[1001:2000]&#x60;.  *  &#x60;subscriptions&#x60; Returns the users that are subscribed to the filter. If you don&#39;t specify &#x60;subscriptions&#x60;, the &#x60;subscriptions&#x60; object is returned but it doesn&#39;t list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append &#x60;[start-index:end-index]&#x60; to the expand request. For example, to access the next 1000 subscriptions, use &#x60;?expand&#x3D;subscriptions[1001:2000]&#x60;.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if:   *  the filter is not found.  *  the user does not have permission to favorite the filter.</response>
        [HttpPut]
        [Route("/rest/api/3/filter/{id}/favourite")]
        [ValidateModelState]
        [SwaggerOperation("SetFavouriteForFilter")]
        [SwaggerResponse(statusCode: 200, type: typeof(Filter), description: "Returned if the request is successful.")]
        public virtual IActionResult SetFavouriteForFilter([FromRoute (Name = "id")][Required]long id, [FromQuery (Name = "expand")]string expand)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Filter));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            string exampleJson = null;
            exampleJson = "{\n  \"jql\" : \"jql\",\n  \"favouritedCount\" : 0,\n  \"description\" : \"description\",\n  \"favourite\" : true,\n  \"editPermissions\" : [ {\n    \"role\" : \"\",\n    \"project\" : \"\",\n    \"id\" : 6,\n    \"type\" : \"user\",\n    \"user\" : \"\",\n    \"group\" : \"\"\n  }, {\n    \"role\" : \"\",\n    \"project\" : \"\",\n    \"id\" : 6,\n    \"type\" : \"user\",\n    \"user\" : \"\",\n    \"group\" : \"\"\n  } ],\n  \"name\" : \"name\",\n  \"viewUrl\" : \"https://openapi-generator.tech\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"searchUrl\" : \"https://openapi-generator.tech\",\n  \"id\" : \"id\",\n  \"sharePermissions\" : [ {\n    \"role\" : \"\",\n    \"project\" : \"\",\n    \"id\" : 6,\n    \"type\" : \"user\",\n    \"user\" : \"\",\n    \"group\" : \"\"\n  }, {\n    \"role\" : \"\",\n    \"project\" : \"\",\n    \"id\" : 6,\n    \"type\" : \"user\",\n    \"user\" : \"\",\n    \"group\" : \"\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Filter>(exampleJson)
            : default(Filter);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update filter
        /// </summary>
        /// <remarks>Updates a filter. Use this operation to update a filter&#39;s name, description, JQL, or sharing.  **[Permissions](#permissions) required:** Permission to access Jira, however the user must own the filter.</remarks>
        /// <param name="id">The ID of the filter to update.</param>
        /// <param name="filter">The filter to update.</param>
        /// <param name="expand">Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:   *  &#x60;sharedUsers&#x60; Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don&#39;t specify &#x60;sharedUsers&#x60;, then the &#x60;sharedUsers&#x60; object is returned but it doesn&#39;t list any users. The list of users returned is limited to 1000, to access additional users append &#x60;[start-index:end-index]&#x60; to the expand request. For example, to access the next 1000 users, use &#x60;?expand&#x3D;sharedUsers[1001:2000]&#x60;.  *  &#x60;subscriptions&#x60; Returns the users that are subscribed to the filter. If you don&#39;t specify &#x60;subscriptions&#x60;, the &#x60;subscriptions&#x60; object is returned but it doesn&#39;t list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append &#x60;[start-index:end-index]&#x60; to the expand request. For example, to access the next 1000 subscriptions, use &#x60;?expand&#x3D;subscriptions[1001:2000]&#x60;.</param>
        /// <param name="overrideSharePermissions">EXPERIMENTAL: Whether share permissions are overridden to enable the addition of any share permissions to filters. Available to users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request object is invalid. For example, the &#x60;name&#x60; is not unique or the project ID is not specified for a project role share permission.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        [HttpPut]
        [Route("/rest/api/3/filter/{id}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("UpdateFilter")]
        [SwaggerResponse(statusCode: 200, type: typeof(Filter), description: "Returned if the request is successful.")]
        public virtual IActionResult UpdateFilter([FromRoute (Name = "id")][Required]long id, [FromBody]Filter filter, [FromQuery (Name = "expand")]string expand, [FromQuery (Name = "overrideSharePermissions")]bool? overrideSharePermissions)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Filter));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            string exampleJson = null;
            exampleJson = "{\n  \"jql\" : \"jql\",\n  \"favouritedCount\" : 0,\n  \"description\" : \"description\",\n  \"favourite\" : true,\n  \"editPermissions\" : [ {\n    \"role\" : \"\",\n    \"project\" : \"\",\n    \"id\" : 6,\n    \"type\" : \"user\",\n    \"user\" : \"\",\n    \"group\" : \"\"\n  }, {\n    \"role\" : \"\",\n    \"project\" : \"\",\n    \"id\" : 6,\n    \"type\" : \"user\",\n    \"user\" : \"\",\n    \"group\" : \"\"\n  } ],\n  \"name\" : \"name\",\n  \"viewUrl\" : \"https://openapi-generator.tech\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"searchUrl\" : \"https://openapi-generator.tech\",\n  \"id\" : \"id\",\n  \"sharePermissions\" : [ {\n    \"role\" : \"\",\n    \"project\" : \"\",\n    \"id\" : 6,\n    \"type\" : \"user\",\n    \"user\" : \"\",\n    \"group\" : \"\"\n  }, {\n    \"role\" : \"\",\n    \"project\" : \"\",\n    \"id\" : 6,\n    \"type\" : \"user\",\n    \"user\" : \"\",\n    \"group\" : \"\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Filter>(exampleJson)
            : default(Filter);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
