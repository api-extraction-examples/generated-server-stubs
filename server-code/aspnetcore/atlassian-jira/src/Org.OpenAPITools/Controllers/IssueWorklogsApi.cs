/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class IssueWorklogsApiController : ControllerBase
    { 
        /// <summary>
        /// Add worklog
        /// </summary>
        /// <remarks>Adds a worklog to an issue.  Time tracking must be enabled in Jira, otherwise this operation returns an error. For more information, see [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).  This operation can be accessed anonymously.  **[Permissions](#permissions) required:**   *  *Browse projects* and *Work on issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.  *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.</remarks>
        /// <param name="issueIdOrKey">The ID or key the issue.</param>
        /// <param name="worklog"></param>
        /// <param name="notifyUsers">Whether users watching the issue are notified by email.</param>
        /// <param name="adjustEstimate">Defines how to update the issue&#39;s time estimate, the options are:   *  &#x60;new&#x60; Sets the estimate to a specific value, defined in &#x60;newEstimate&#x60;.  *  &#x60;leave&#x60; Leaves the estimate unchanged.  *  &#x60;manual&#x60; Reduces the estimate by amount specified in &#x60;reduceBy&#x60;.  *  &#x60;auto&#x60; Reduces the estimate by the value of &#x60;timeSpent&#x60; in the worklog.</param>
        /// <param name="newEstimate">The value to set as the issue&#39;s remaining time estimate, as days (\\#d), hours (\\#h), or minutes (\\#m or \\#). For example, *2d*. Required when &#x60;adjustEstimate&#x60; is &#x60;new&#x60;.</param>
        /// <param name="reduceBy">The amount to reduce the issue&#39;s remaining estimate by, as days (\\#d), hours (\\#h), or minutes (\\#m). For example, *2d*. Required when &#x60;adjustEstimate&#x60; is &#x60;manual&#x60;.</param>
        /// <param name="expand">Use [expand](#expansion) to include additional information about work logs in the response. This parameter accepts &#x60;properties&#x60;, which returns worklog properties.</param>
        /// <param name="overrideEditableFlag">Whether the worklog entry should be added to the issue even if the issue is not editable, because jira.issue.editable set to false or missing. For example, the issue is closed. Connect and Forge app users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) can use this flag.</param>
        /// <response code="201">Returned if the request is successful.</response>
        /// <response code="400">Returned if:   *  &#x60;adjustEstimate&#x60; is set to &#x60;new&#x60; but &#x60;newEstimate&#x60; is not provided or is invalid.  *  &#x60;adjustEstimate&#x60; is set to &#x60;manual&#x60; but &#x60;reduceBy&#x60; is not provided or is invalid.  *  the user does not have permission to add the worklog.  *  the request JSON is malformed.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect.</response>
        /// <response code="404">Returned if the issue is not found or the user does not have permission to view it.</response>
        [HttpPost]
        [Route("/rest/api/3/issue/{issueIdOrKey}/worklog")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("AddWorklog")]
        [SwaggerResponse(statusCode: 201, type: typeof(Worklog), description: "Returned if the request is successful.")]
        public virtual IActionResult AddWorklog([FromRoute (Name = "issueIdOrKey")][Required]string issueIdOrKey, [FromBody]Worklog worklog, [FromQuery (Name = "notifyUsers")]bool? notifyUsers, [FromQuery (Name = "adjustEstimate")]string adjustEstimate, [FromQuery (Name = "newEstimate")]string newEstimate, [FromQuery (Name = "reduceBy")]string reduceBy, [FromQuery (Name = "expand")]string expand, [FromQuery (Name = "overrideEditableFlag")]bool? overrideEditableFlag)
        {

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(Worklog));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"issueId\" : \"issueId\",\n  \"visibility\" : \"\",\n  \"timeSpent\" : \"timeSpent\",\n  \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"started\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"timeSpentSeconds\" : 5,\n  \"self\" : \"https://openapi-generator.tech\",\n  \"comment\" : \"\",\n  \"id\" : \"id\",\n  \"updated\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"properties\" : [ {\n    \"value\" : \"\",\n    \"key\" : \"key\"\n  }, {\n    \"value\" : \"\",\n    \"key\" : \"key\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Worklog>(exampleJson)
            : default(Worklog);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Delete worklog
        /// </summary>
        /// <remarks>Deletes a worklog from an issue.  Time tracking must be enabled in Jira, otherwise this operation returns an error. For more information, see [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).  This operation can be accessed anonymously.  **[Permissions](#permissions) required:**   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.  *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.  *  *Delete all worklogs*[ project permission](https://confluence.atlassian.com/x/yodKLg) to delete any worklog or *Delete own worklogs* to delete worklogs created by the user,  *  If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.</remarks>
        /// <param name="issueIdOrKey">The ID or key of the issue.</param>
        /// <param name="id">The ID of the worklog.</param>
        /// <param name="notifyUsers">Whether users watching the issue are notified by email.</param>
        /// <param name="adjustEstimate">Defines how to update the issue&#39;s time estimate, the options are:   *  &#x60;new&#x60; Sets the estimate to a specific value, defined in &#x60;newEstimate&#x60;.  *  &#x60;leave&#x60; Leaves the estimate unchanged.  *  &#x60;manual&#x60; Increases the estimate by amount specified in &#x60;increaseBy&#x60;.  *  &#x60;auto&#x60; Reduces the estimate by the value of &#x60;timeSpent&#x60; in the worklog.</param>
        /// <param name="newEstimate">The value to set as the issue&#39;s remaining time estimate, as days (\\#d), hours (\\#h), or minutes (\\#m or \\#). For example, *2d*. Required when &#x60;adjustEstimate&#x60; is &#x60;new&#x60;.</param>
        /// <param name="increaseBy">The amount to increase the issue&#39;s remaining estimate by, as days (\\#d), hours (\\#h), or minutes (\\#m or \\#). For example, *2d*. Required when &#x60;adjustEstimate&#x60; is &#x60;manual&#x60;.</param>
        /// <param name="overrideEditableFlag">Whether the work log entry should be added to the issue even if the issue is not editable, because jira.issue.editable set to false or missing. For example, the issue is closed. Connect and Forge app users with admin permission can use this flag.</param>
        /// <response code="204">Returned if the request is successful.</response>
        /// <response code="400">Returned if:   *  &#x60;adjustEstimate&#x60; is set to &#x60;new&#x60; but &#x60;newEstimate&#x60; is not provided or is invalid.  *  &#x60;adjustEstimate&#x60; is set to &#x60;manual&#x60; but &#x60;reduceBy&#x60; is not provided or is invalid.  *  the user does not have permission to delete the worklog.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect.</response>
        /// <response code="404">Returned if:   *  the issue is not found or user does not have permission to view the issue.  *  the worklog is not found or the user does not have permission to view it.  *  time tracking is disabled.</response>
        [HttpDelete]
        [Route("/rest/api/3/issue/{issueIdOrKey}/worklog/{id}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteWorklog")]
        public virtual IActionResult DeleteWorklog([FromRoute (Name = "issueIdOrKey")][Required]string issueIdOrKey, [FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "notifyUsers")]bool? notifyUsers, [FromQuery (Name = "adjustEstimate")]string adjustEstimate, [FromQuery (Name = "newEstimate")]string newEstimate, [FromQuery (Name = "increaseBy")]string increaseBy, [FromQuery (Name = "overrideEditableFlag")]bool? overrideEditableFlag)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Get IDs of deleted worklogs
        /// </summary>
        /// <remarks>Returns a list of IDs and delete timestamps for worklogs deleted after a date and time.  This resource is paginated, with a limit of 1000 worklogs per page. Each page lists worklogs from oldest to youngest. If the number of items in the date range exceeds 1000, &#x60;until&#x60; indicates the timestamp of the youngest item on the page. Also, &#x60;nextPage&#x60; provides the URL for the next page of worklogs. The &#x60;lastPage&#x60; parameter is set to true on the last page of worklogs.  This resource does not return worklogs deleted during the minute preceding the request.  **[Permissions](#permissions) required:** Permission to access Jira.</remarks>
        /// <param name="since">The date and time, as a UNIX timestamp in milliseconds, after which deleted worklogs are returned.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        [HttpGet]
        [Route("/rest/api/3/worklog/deleted")]
        [ValidateModelState]
        [SwaggerOperation("GetIdsOfWorklogsDeletedSince")]
        [SwaggerResponse(statusCode: 200, type: typeof(ChangedWorklogs), description: "Returned if the request is successful.")]
        public virtual IActionResult GetIdsOfWorklogsDeletedSince([FromQuery (Name = "since")]long? since)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ChangedWorklogs));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            string exampleJson = null;
            exampleJson = "{\n  \"lastPage\" : true,\n  \"nextPage\" : \"https://openapi-generator.tech\",\n  \"values\" : [ {\n    \"updatedTime\" : 1,\n    \"worklogId\" : 5,\n    \"properties\" : [ {\n      \"value\" : \"\",\n      \"key\" : \"key\"\n    }, {\n      \"value\" : \"\",\n      \"key\" : \"key\"\n    } ]\n  }, {\n    \"updatedTime\" : 1,\n    \"worklogId\" : 5,\n    \"properties\" : [ {\n      \"value\" : \"\",\n      \"key\" : \"key\"\n    }, {\n      \"value\" : \"\",\n      \"key\" : \"key\"\n    } ]\n  } ],\n  \"self\" : \"https://openapi-generator.tech\",\n  \"until\" : 6,\n  \"since\" : 0\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ChangedWorklogs>(exampleJson)
            : default(ChangedWorklogs);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get IDs of updated worklogs
        /// </summary>
        /// <remarks>Returns a list of IDs and update timestamps for worklogs updated after a date and time.  This resource is paginated, with a limit of 1000 worklogs per page. Each page lists worklogs from oldest to youngest. If the number of items in the date range exceeds 1000, &#x60;until&#x60; indicates the timestamp of the youngest item on the page. Also, &#x60;nextPage&#x60; provides the URL for the next page of worklogs. The &#x60;lastPage&#x60; parameter is set to true on the last page of worklogs.  This resource does not return worklogs updated during the minute preceding the request.  **[Permissions](#permissions) required:** Permission to access Jira, however, worklogs are only returned where either of the following is true:   *  the worklog is set as *Viewable by All Users*.  *  the user is a member of a project role or group with permission to view the worklog.</remarks>
        /// <param name="since">The date and time, as a UNIX timestamp in milliseconds, after which updated worklogs are returned.</param>
        /// <param name="expand">Use [expand](#expansion) to include additional information about worklogs in the response. This parameter accepts &#x60;properties&#x60; that returns the properties of each worklog.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        [HttpGet]
        [Route("/rest/api/3/worklog/updated")]
        [ValidateModelState]
        [SwaggerOperation("GetIdsOfWorklogsModifiedSince")]
        [SwaggerResponse(statusCode: 200, type: typeof(ChangedWorklogs), description: "Returned if the request is successful.")]
        public virtual IActionResult GetIdsOfWorklogsModifiedSince([FromQuery (Name = "since")]long? since, [FromQuery (Name = "expand")]string expand)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ChangedWorklogs));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            string exampleJson = null;
            exampleJson = "{\n  \"lastPage\" : true,\n  \"nextPage\" : \"https://openapi-generator.tech\",\n  \"values\" : [ {\n    \"updatedTime\" : 1,\n    \"worklogId\" : 5,\n    \"properties\" : [ {\n      \"value\" : \"\",\n      \"key\" : \"key\"\n    }, {\n      \"value\" : \"\",\n      \"key\" : \"key\"\n    } ]\n  }, {\n    \"updatedTime\" : 1,\n    \"worklogId\" : 5,\n    \"properties\" : [ {\n      \"value\" : \"\",\n      \"key\" : \"key\"\n    }, {\n      \"value\" : \"\",\n      \"key\" : \"key\"\n    } ]\n  } ],\n  \"self\" : \"https://openapi-generator.tech\",\n  \"until\" : 6,\n  \"since\" : 0\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ChangedWorklogs>(exampleJson)
            : default(ChangedWorklogs);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get issue worklogs
        /// </summary>
        /// <remarks>Returns worklogs for an issue, starting from the oldest worklog or from the worklog started on or after a date and time.  Time tracking must be enabled in Jira, otherwise this operation returns an error. For more information, see [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).  This operation can be accessed anonymously.  **[Permissions](#permissions) required:** Workloads are only returned where the user has:   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.  *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.  *  If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.</remarks>
        /// <param name="issueIdOrKey">The ID or key of the issue.</param>
        /// <param name="startAt">The index of the first item to return in a page of results (page offset).</param>
        /// <param name="maxResults">The maximum number of items to return per page.</param>
        /// <param name="startedAfter">The worklog start date and time, as a UNIX timestamp in milliseconds, after which worklogs are returned.</param>
        /// <param name="startedBefore">The worklog start date and time, as a UNIX timestamp in milliseconds, before which worklogs are returned.</param>
        /// <param name="expand">Use [expand](#expansion) to include additional information about worklogs in the response. This parameter accepts&#x60;properties&#x60;, which returns worklog properties.</param>
        /// <response code="200">Returned if the request is successful</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="404">Returned if:   *  the issue is not found or the user does not have permission to view the issue.  *  &#x60;startAt&#x60; or &#x60;maxResults&#x60; has non-numeric values.  *  time tracking is disabled.</response>
        [HttpGet]
        [Route("/rest/api/3/issue/{issueIdOrKey}/worklog")]
        [ValidateModelState]
        [SwaggerOperation("GetIssueWorklog")]
        [SwaggerResponse(statusCode: 200, type: typeof(PageOfWorklogs), description: "Returned if the request is successful")]
        public virtual IActionResult GetIssueWorklog([FromRoute (Name = "issueIdOrKey")][Required]string issueIdOrKey, [FromQuery (Name = "startAt")]long? startAt, [FromQuery (Name = "maxResults")]int? maxResults, [FromQuery (Name = "startedAfter")]long? startedAfter, [FromQuery (Name = "startedBefore")]long? startedBefore, [FromQuery (Name = "expand")]string expand)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PageOfWorklogs));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"total\" : 1,\n  \"maxResults\" : 0,\n  \"startAt\" : 6,\n  \"worklogs\" : [ {\n    \"issueId\" : \"issueId\",\n    \"visibility\" : \"\",\n    \"timeSpent\" : \"timeSpent\",\n    \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"started\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"timeSpentSeconds\" : 5,\n    \"self\" : \"https://openapi-generator.tech\",\n    \"comment\" : \"\",\n    \"id\" : \"id\",\n    \"updated\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"properties\" : [ {\n      \"value\" : \"\",\n      \"key\" : \"key\"\n    }, {\n      \"value\" : \"\",\n      \"key\" : \"key\"\n    } ]\n  }, {\n    \"issueId\" : \"issueId\",\n    \"visibility\" : \"\",\n    \"timeSpent\" : \"timeSpent\",\n    \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"started\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"timeSpentSeconds\" : 5,\n    \"self\" : \"https://openapi-generator.tech\",\n    \"comment\" : \"\",\n    \"id\" : \"id\",\n    \"updated\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"properties\" : [ {\n      \"value\" : \"\",\n      \"key\" : \"key\"\n    }, {\n      \"value\" : \"\",\n      \"key\" : \"key\"\n    } ]\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PageOfWorklogs>(exampleJson)
            : default(PageOfWorklogs);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get worklog
        /// </summary>
        /// <remarks>Returns a worklog.  Time tracking must be enabled in Jira, otherwise this operation returns an error. For more information, see [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).  This operation can be accessed anonymously.  **[Permissions](#permissions) required:**   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.  *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.  *  If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.</remarks>
        /// <param name="issueIdOrKey">The ID or key of the issue.</param>
        /// <param name="id">The ID of the worklog.</param>
        /// <param name="expand">Use [expand](#expansion) to include additional information about work logs in the response. This parameter accepts  &#x60;properties&#x60;, which returns worklog properties.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect.</response>
        /// <response code="404">Returned if:   *  the issue is not found or the user does not have permission to view it.  *  the worklog is not found or the user does not have permission to view it.  *  time tracking is disabled.  .</response>
        [HttpGet]
        [Route("/rest/api/3/issue/{issueIdOrKey}/worklog/{id}")]
        [ValidateModelState]
        [SwaggerOperation("GetWorklog")]
        [SwaggerResponse(statusCode: 200, type: typeof(Worklog), description: "Returned if the request is successful.")]
        public virtual IActionResult GetWorklog([FromRoute (Name = "issueIdOrKey")][Required]string issueIdOrKey, [FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "expand")]string expand)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Worklog));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"issueId\" : \"issueId\",\n  \"visibility\" : \"\",\n  \"timeSpent\" : \"timeSpent\",\n  \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"started\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"timeSpentSeconds\" : 5,\n  \"self\" : \"https://openapi-generator.tech\",\n  \"comment\" : \"\",\n  \"id\" : \"id\",\n  \"updated\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"properties\" : [ {\n    \"value\" : \"\",\n    \"key\" : \"key\"\n  }, {\n    \"value\" : \"\",\n    \"key\" : \"key\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Worklog>(exampleJson)
            : default(Worklog);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get worklogs
        /// </summary>
        /// <remarks>Returns worklog details for a list of worklog IDs.  The returned list of worklogs is limited to 1000 items.  **[Permissions](#permissions) required:** Permission to access Jira, however, worklogs are only returned where either of the following is true:   *  the worklog is set as *Viewable by All Users*.  *  the user is a member of a project role or group with permission to view the worklog.</remarks>
        /// <param name="worklogIdsRequestBean">A JSON object containing a list of worklog IDs.</param>
        /// <param name="expand">Use [expand](#expansion) to include additional information about worklogs in the response. This parameter accepts &#x60;properties&#x60; that returns the properties of each worklog.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request contains more than 1000 worklog IDs or is empty.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        [HttpPost]
        [Route("/rest/api/3/worklog/list")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("GetWorklogsForIds")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Worklog>), description: "Returned if the request is successful.")]
        public virtual IActionResult GetWorklogsForIds([FromBody]WorklogIdsRequestBean worklogIdsRequestBean, [FromQuery (Name = "expand")]string expand)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Worklog>));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            string exampleJson = null;
            exampleJson = "[ {\n  \"issueId\" : \"issueId\",\n  \"visibility\" : \"\",\n  \"timeSpent\" : \"timeSpent\",\n  \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"started\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"timeSpentSeconds\" : 5,\n  \"self\" : \"https://openapi-generator.tech\",\n  \"comment\" : \"\",\n  \"id\" : \"id\",\n  \"updated\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"properties\" : [ {\n    \"value\" : \"\",\n    \"key\" : \"key\"\n  }, {\n    \"value\" : \"\",\n    \"key\" : \"key\"\n  } ]\n}, {\n  \"issueId\" : \"issueId\",\n  \"visibility\" : \"\",\n  \"timeSpent\" : \"timeSpent\",\n  \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"started\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"timeSpentSeconds\" : 5,\n  \"self\" : \"https://openapi-generator.tech\",\n  \"comment\" : \"\",\n  \"id\" : \"id\",\n  \"updated\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"properties\" : [ {\n    \"value\" : \"\",\n    \"key\" : \"key\"\n  }, {\n    \"value\" : \"\",\n    \"key\" : \"key\"\n  } ]\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<Worklog>>(exampleJson)
            : default(List<Worklog>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update worklog
        /// </summary>
        /// <remarks>Updates a worklog.  Time tracking must be enabled in Jira, otherwise this operation returns an error. For more information, see [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).  This operation can be accessed anonymously.  **[Permissions](#permissions) required:**   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.  *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.  *  *Edit all worklogs*[ project permission](https://confluence.atlassian.com/x/yodKLg) to update any worklog or *Edit own worklogs* to update worklogs created by the user.  *  If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.</remarks>
        /// <param name="issueIdOrKey">The ID or key the issue.</param>
        /// <param name="id">The ID of the worklog.</param>
        /// <param name="worklog"></param>
        /// <param name="notifyUsers">Whether users watching the issue are notified by email.</param>
        /// <param name="adjustEstimate">Defines how to update the issue&#39;s time estimate, the options are:   *  &#x60;new&#x60; Sets the estimate to a specific value, defined in &#x60;newEstimate&#x60;.  *  &#x60;leave&#x60; Leaves the estimate unchanged.  *  &#x60;auto&#x60; Updates the estimate by the difference between the original and updated value of &#x60;timeSpent&#x60; or &#x60;timeSpentSeconds&#x60;.</param>
        /// <param name="newEstimate">The value to set as the issue&#39;s remaining time estimate, as days (\\#d), hours (\\#h), or minutes (\\#m or \\#). For example, *2d*. Required when &#x60;adjustEstimate&#x60; is &#x60;new&#x60;.</param>
        /// <param name="expand">Use [expand](#expansion) to include additional information about worklogs in the response. This parameter accepts &#x60;properties&#x60;, which returns worklog properties.</param>
        /// <param name="overrideEditableFlag">Whether the worklog should be added to the issue even if the issue is not editable. For example, because the issue is closed. Connect and Forge app users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) can use this flag.</param>
        /// <response code="200">Returned if the request is successful</response>
        /// <response code="400">Returned if:   *  &#x60;adjustEstimate&#x60; is set to &#x60;new&#x60; but &#x60;newEstimate&#x60; is not provided or is invalid.  *  the user does not have permission to update the worklog.  *  the request JSON is malformed.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect.</response>
        /// <response code="404">Returned if:   *  the issue is not found or user does not have permission to view the issue.  *  the worklog is not found or the user does not have permission to view it.  *  time tracking is disabled.</response>
        [HttpPut]
        [Route("/rest/api/3/issue/{issueIdOrKey}/worklog/{id}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("UpdateWorklog")]
        [SwaggerResponse(statusCode: 200, type: typeof(Worklog), description: "Returned if the request is successful")]
        public virtual IActionResult UpdateWorklog([FromRoute (Name = "issueIdOrKey")][Required]string issueIdOrKey, [FromRoute (Name = "id")][Required]string id, [FromBody]Worklog worklog, [FromQuery (Name = "notifyUsers")]bool? notifyUsers, [FromQuery (Name = "adjustEstimate")]string adjustEstimate, [FromQuery (Name = "newEstimate")]string newEstimate, [FromQuery (Name = "expand")]string expand, [FromQuery (Name = "overrideEditableFlag")]bool? overrideEditableFlag)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Worklog));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"issueId\" : \"issueId\",\n  \"visibility\" : \"\",\n  \"timeSpent\" : \"timeSpent\",\n  \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"started\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"timeSpentSeconds\" : 5,\n  \"self\" : \"https://openapi-generator.tech\",\n  \"comment\" : \"\",\n  \"id\" : \"id\",\n  \"updated\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"properties\" : [ {\n    \"value\" : \"\",\n    \"key\" : \"key\"\n  }, {\n    \"value\" : \"\",\n    \"key\" : \"key\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Worklog>(exampleJson)
            : default(Worklog);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
