/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ServerInfoApiController : ControllerBase
    { 
        /// <summary>
        /// Get Jira instance info
        /// </summary>
        /// <remarks>Returns information about the Jira instance.  This operation can be accessed anonymously.  **[Permissions](#permissions) required:** None.</remarks>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect.</response>
        [HttpGet]
        [Route("/rest/api/3/serverInfo")]
        [ValidateModelState]
        [SwaggerOperation("GetServerInfo")]
        [SwaggerResponse(statusCode: 200, type: typeof(ServerInformation), description: "Returned if the request is successful.")]
        public virtual IActionResult GetServerInfo()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ServerInformation));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            string exampleJson = null;
            exampleJson = "{\n  \"healthChecks\" : [ {\n    \"name\" : \"name\",\n    \"description\" : \"description\",\n    \"passed\" : true\n  }, {\n    \"name\" : \"name\",\n    \"description\" : \"description\",\n    \"passed\" : true\n  } ],\n  \"baseUrl\" : \"baseUrl\",\n  \"deploymentType\" : \"deploymentType\",\n  \"scmInfo\" : \"scmInfo\",\n  \"serverTime\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"buildDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"serverTitle\" : \"serverTitle\",\n  \"buildNumber\" : 0,\n  \"version\" : \"version\",\n  \"versionNumbers\" : [ 6, 6 ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ServerInformation>(exampleJson)
            : default(ServerInformation);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
