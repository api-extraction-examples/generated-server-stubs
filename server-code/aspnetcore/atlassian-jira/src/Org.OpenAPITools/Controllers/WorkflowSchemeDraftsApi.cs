/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class WorkflowSchemeDraftsApiController : ControllerBase
    { 
        /// <summary>
        /// Create draft workflow scheme
        /// </summary>
        /// <remarks>Create a draft workflow scheme from an active workflow scheme, by copying the active workflow scheme. Note that an active workflow scheme can only have one draft workflow scheme.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id">The ID of the active workflow scheme that the draft is created from.</param>
        /// <response code="201">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        [HttpPost]
        [Route("/rest/api/3/workflowscheme/{id}/createdraft")]
        [ValidateModelState]
        [SwaggerOperation("CreateWorkflowSchemeDraftFromParent")]
        [SwaggerResponse(statusCode: 201, type: typeof(WorkflowScheme), description: "Returned if the request is successful.")]
        public virtual IActionResult CreateWorkflowSchemeDraftFromParent([FromRoute (Name = "id")][Required]long id)
        {

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(WorkflowScheme));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            string exampleJson = null;
            exampleJson = "{\n  \"originalDefaultWorkflow\" : \"originalDefaultWorkflow\",\n  \"description\" : \"description\",\n  \"issueTypes\" : {\n    \"key\" : {\n      \"avatarId\" : 0,\n      \"hierarchyLevel\" : 6,\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"self\" : \"self\",\n      \"entityId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n      \"iconUrl\" : \"iconUrl\",\n      \"id\" : \"id\",\n      \"subtask\" : true\n    }\n  },\n  \"originalIssueTypeMappings\" : {\n    \"key\" : \"originalIssueTypeMappings\"\n  },\n  \"defaultWorkflow\" : \"defaultWorkflow\",\n  \"updateDraftIfNeeded\" : true,\n  \"draft\" : true,\n  \"name\" : \"name\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : 5,\n  \"lastModified\" : \"lastModified\",\n  \"issueTypeMappings\" : {\n    \"key\" : \"issueTypeMappings\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<WorkflowScheme>(exampleJson)
            : default(WorkflowScheme);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Delete draft default workflow
        /// </summary>
        /// <remarks>Resets the default workflow for a workflow scheme&#39;s draft. That is, the default workflow is set to Jira&#39;s system workflow (the *jira* workflow).  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id">The ID of the workflow scheme that the draft belongs to.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        /// <response code="404">Returned if any of the following is true:   *  The workflow scheme is not found.  *  The workflow scheme does not have a draft.</response>
        [HttpDelete]
        [Route("/rest/api/3/workflowscheme/{id}/draft/default")]
        [ValidateModelState]
        [SwaggerOperation("DeleteDraftDefaultWorkflow")]
        [SwaggerResponse(statusCode: 200, type: typeof(WorkflowScheme), description: "Returned if the request is successful.")]
        public virtual IActionResult DeleteDraftDefaultWorkflow([FromRoute (Name = "id")][Required]long id)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(WorkflowScheme));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"originalDefaultWorkflow\" : \"originalDefaultWorkflow\",\n  \"description\" : \"description\",\n  \"issueTypes\" : {\n    \"key\" : {\n      \"avatarId\" : 0,\n      \"hierarchyLevel\" : 6,\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"self\" : \"self\",\n      \"entityId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n      \"iconUrl\" : \"iconUrl\",\n      \"id\" : \"id\",\n      \"subtask\" : true\n    }\n  },\n  \"originalIssueTypeMappings\" : {\n    \"key\" : \"originalIssueTypeMappings\"\n  },\n  \"defaultWorkflow\" : \"defaultWorkflow\",\n  \"updateDraftIfNeeded\" : true,\n  \"draft\" : true,\n  \"name\" : \"name\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : 5,\n  \"lastModified\" : \"lastModified\",\n  \"issueTypeMappings\" : {\n    \"key\" : \"issueTypeMappings\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<WorkflowScheme>(exampleJson)
            : default(WorkflowScheme);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Delete issue types for workflow in draft workflow scheme
        /// </summary>
        /// <remarks>Deletes the workflow-issue type mapping for a workflow in a workflow scheme&#39;s draft.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id">The ID of the workflow scheme that the draft belongs to.</param>
        /// <param name="workflowName">The name of the workflow.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        /// <response code="404">Returned if any of the following is true:   *  The workflow scheme is not found.  *  The workflow scheme does not have a draft.  *  The workflow is not found.  *  The workflow is not specified.</response>
        [HttpDelete]
        [Route("/rest/api/3/workflowscheme/{id}/draft/workflow")]
        [ValidateModelState]
        [SwaggerOperation("DeleteDraftWorkflowMapping")]
        public virtual IActionResult DeleteDraftWorkflowMapping([FromRoute (Name = "id")][Required]long id, [FromQuery (Name = "workflowName")][Required()]string workflowName)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Delete draft workflow scheme
        /// </summary>
        /// <remarks>Deletes a draft workflow scheme.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id">The ID of the active workflow scheme that the draft was created from.</param>
        /// <response code="204">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission..</response>
        /// <response code="404">Returned if:   *  the original active workflow scheme is not found.  *  the original active workflow scheme does not have a draft.</response>
        [HttpDelete]
        [Route("/rest/api/3/workflowscheme/{id}/draft")]
        [ValidateModelState]
        [SwaggerOperation("DeleteWorkflowSchemeDraft")]
        public virtual IActionResult DeleteWorkflowSchemeDraft([FromRoute (Name = "id")][Required]long id)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Delete workflow for issue type in draft workflow scheme
        /// </summary>
        /// <remarks>Deletes the issue type-workflow mapping for an issue type in a workflow scheme&#39;s draft.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id">The ID of the workflow scheme that the draft belongs to.</param>
        /// <param name="issueType">The ID of the issue type.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        /// <response code="404">Returned if the workflow scheme or issue type is not found.</response>
        [HttpDelete]
        [Route("/rest/api/3/workflowscheme/{id}/draft/issuetype/{issueType}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteWorkflowSchemeDraftIssueType")]
        [SwaggerResponse(statusCode: 200, type: typeof(WorkflowScheme), description: "Returned if the request is successful.")]
        public virtual IActionResult DeleteWorkflowSchemeDraftIssueType([FromRoute (Name = "id")][Required]long id, [FromRoute (Name = "issueType")][Required]string issueType)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(WorkflowScheme));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"originalDefaultWorkflow\" : \"originalDefaultWorkflow\",\n  \"description\" : \"description\",\n  \"issueTypes\" : {\n    \"key\" : {\n      \"avatarId\" : 0,\n      \"hierarchyLevel\" : 6,\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"self\" : \"self\",\n      \"entityId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n      \"iconUrl\" : \"iconUrl\",\n      \"id\" : \"id\",\n      \"subtask\" : true\n    }\n  },\n  \"originalIssueTypeMappings\" : {\n    \"key\" : \"originalIssueTypeMappings\"\n  },\n  \"defaultWorkflow\" : \"defaultWorkflow\",\n  \"updateDraftIfNeeded\" : true,\n  \"draft\" : true,\n  \"name\" : \"name\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : 5,\n  \"lastModified\" : \"lastModified\",\n  \"issueTypeMappings\" : {\n    \"key\" : \"issueTypeMappings\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<WorkflowScheme>(exampleJson)
            : default(WorkflowScheme);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get draft default workflow
        /// </summary>
        /// <remarks>Returns the default workflow for a workflow scheme&#39;s draft. The default workflow is the workflow that is assigned any issue types that have not been mapped to any other workflow. The default workflow has *All Unassigned Issue Types* listed in its issue types for the workflow scheme in Jira.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id">The ID of the workflow scheme that the draft belongs to.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission..</response>
        /// <response code="404">Returned if any of the following is true:   *  The workflow scheme is not found.  *  The workflow scheme does not have a draft.</response>
        [HttpGet]
        [Route("/rest/api/3/workflowscheme/{id}/draft/default")]
        [ValidateModelState]
        [SwaggerOperation("GetDraftDefaultWorkflow")]
        [SwaggerResponse(statusCode: 200, type: typeof(DefaultWorkflow), description: "Returned if the request is successful.")]
        public virtual IActionResult GetDraftDefaultWorkflow([FromRoute (Name = "id")][Required]long id)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(DefaultWorkflow));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"updateDraftIfNeeded\" : true,\n  \"workflow\" : \"workflow\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<DefaultWorkflow>(exampleJson)
            : default(DefaultWorkflow);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get issue types for workflows in draft workflow scheme
        /// </summary>
        /// <remarks>Returns the workflow-issue type mappings for a workflow scheme&#39;s draft.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id">The ID of the workflow scheme that the draft belongs to.</param>
        /// <param name="workflowName">The name of a workflow in the scheme. Limits the results to the workflow-issue type mapping for the specified workflow.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        /// <response code="404">Returned if either the workflow scheme or workflow (if specified) is not found. session.</response>
        [HttpGet]
        [Route("/rest/api/3/workflowscheme/{id}/draft/workflow")]
        [ValidateModelState]
        [SwaggerOperation("GetDraftWorkflow")]
        [SwaggerResponse(statusCode: 200, type: typeof(IssueTypesWorkflowMapping), description: "Returned if the request is successful.")]
        public virtual IActionResult GetDraftWorkflow([FromRoute (Name = "id")][Required]long id, [FromQuery (Name = "workflowName")]string workflowName)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(IssueTypesWorkflowMapping));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"updateDraftIfNeeded\" : true,\n  \"workflow\" : \"workflow\",\n  \"defaultMapping\" : true,\n  \"issueTypes\" : [ \"issueTypes\", \"issueTypes\" ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<IssueTypesWorkflowMapping>(exampleJson)
            : default(IssueTypesWorkflowMapping);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get draft workflow scheme
        /// </summary>
        /// <remarks>Returns the draft workflow scheme for an active workflow scheme. Draft workflow schemes allow changes to be made to the active workflow schemes: When an active workflow scheme is updated, a draft copy is created. The draft is modified, then the changes in the draft are copied back to the active workflow scheme. See [Configuring workflow schemes](https://confluence.atlassian.com/x/tohKLg) for more information.   Note that:   *  Only active workflow schemes can have draft workflow schemes.  *  An active workflow scheme can only have one draft workflow scheme.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id">The ID of the active workflow scheme that the draft was created from.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        /// <response code="404">Returned if:   *  the original active workflow scheme is not found.  *  the original active workflow scheme does not have a draft.</response>
        [HttpGet]
        [Route("/rest/api/3/workflowscheme/{id}/draft")]
        [ValidateModelState]
        [SwaggerOperation("GetWorkflowSchemeDraft")]
        [SwaggerResponse(statusCode: 200, type: typeof(WorkflowScheme), description: "Returned if the request is successful.")]
        public virtual IActionResult GetWorkflowSchemeDraft([FromRoute (Name = "id")][Required]long id)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(WorkflowScheme));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"originalDefaultWorkflow\" : \"originalDefaultWorkflow\",\n  \"description\" : \"description\",\n  \"issueTypes\" : {\n    \"key\" : {\n      \"avatarId\" : 0,\n      \"hierarchyLevel\" : 6,\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"self\" : \"self\",\n      \"entityId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n      \"iconUrl\" : \"iconUrl\",\n      \"id\" : \"id\",\n      \"subtask\" : true\n    }\n  },\n  \"originalIssueTypeMappings\" : {\n    \"key\" : \"originalIssueTypeMappings\"\n  },\n  \"defaultWorkflow\" : \"defaultWorkflow\",\n  \"updateDraftIfNeeded\" : true,\n  \"draft\" : true,\n  \"name\" : \"name\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : 5,\n  \"lastModified\" : \"lastModified\",\n  \"issueTypeMappings\" : {\n    \"key\" : \"issueTypeMappings\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<WorkflowScheme>(exampleJson)
            : default(WorkflowScheme);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get workflow for issue type in draft workflow scheme
        /// </summary>
        /// <remarks>Returns the issue type-workflow mapping for an issue type in a workflow scheme&#39;s draft.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id">The ID of the workflow scheme that the draft belongs to.</param>
        /// <param name="issueType">The ID of the issue type.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        /// <response code="404">Returned if the workflow scheme or issue type is not found.</response>
        [HttpGet]
        [Route("/rest/api/3/workflowscheme/{id}/draft/issuetype/{issueType}")]
        [ValidateModelState]
        [SwaggerOperation("GetWorkflowSchemeDraftIssueType")]
        [SwaggerResponse(statusCode: 200, type: typeof(IssueTypeWorkflowMapping), description: "Returned if the request is successful.")]
        public virtual IActionResult GetWorkflowSchemeDraftIssueType([FromRoute (Name = "id")][Required]long id, [FromRoute (Name = "issueType")][Required]string issueType)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(IssueTypeWorkflowMapping));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"issueType\" : \"issueType\",\n  \"updateDraftIfNeeded\" : true,\n  \"workflow\" : \"workflow\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<IssueTypeWorkflowMapping>(exampleJson)
            : default(IssueTypeWorkflowMapping);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Publish draft workflow scheme
        /// </summary>
        /// <remarks>Publishes a draft workflow scheme.  Where the draft workflow includes new workflow statuses for an issue type, mappings are provided to update issues with the original workflow status to the new workflow status.  This operation is [asynchronous](#async). Follow the &#x60;location&#x60; link in the response to determine the status of the task and use [Get task](#api-rest-api-3-task-taskId-get) to obtain updates.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id">The ID of the workflow scheme that the draft belongs to.</param>
        /// <param name="publishDraftWorkflowScheme">Details of the status mappings.</param>
        /// <param name="validateOnly">Whether the request only performs a validation.</param>
        /// <response code="204">Returned if the request is only for validation and is successful.</response>
        /// <response code="303">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        /// <response code="404">Returned if any of these are true:   *  The workflow scheme is not found.  *  The workflow scheme does not have a draft.  *  A new status in the draft workflow scheme is not found.</response>
        [HttpPost]
        [Route("/rest/api/3/workflowscheme/{id}/draft/publish")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PublishDraftWorkflowScheme")]
        [SwaggerResponse(statusCode: 303, type: typeof(TaskProgressBeanObject), description: "Returned if the request is successful.")]
        public virtual IActionResult PublishDraftWorkflowScheme([FromRoute (Name = "id")][Required]long id, [FromBody]PublishDraftWorkflowScheme publishDraftWorkflowScheme, [FromQuery (Name = "validateOnly")]bool? validateOnly)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 303 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(303, default(TaskProgressBeanObject));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Set workflow for issue type in draft workflow scheme
        /// </summary>
        /// <remarks>Sets the workflow for an issue type in a workflow scheme&#39;s draft.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id">The ID of the workflow scheme that the draft belongs to.</param>
        /// <param name="issueType">The ID of the issue type.</param>
        /// <param name="issueTypeWorkflowMapping">The issue type-project mapping.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        /// <response code="404">Returned if the workflow scheme or issue type is not found.</response>
        [HttpPut]
        [Route("/rest/api/3/workflowscheme/{id}/draft/issuetype/{issueType}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("SetWorkflowSchemeDraftIssueType")]
        [SwaggerResponse(statusCode: 200, type: typeof(WorkflowScheme), description: "Returned if the request is successful.")]
        public virtual IActionResult SetWorkflowSchemeDraftIssueType([FromRoute (Name = "id")][Required]long id, [FromRoute (Name = "issueType")][Required]string issueType, [FromBody]IssueTypeWorkflowMapping issueTypeWorkflowMapping)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(WorkflowScheme));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"originalDefaultWorkflow\" : \"originalDefaultWorkflow\",\n  \"description\" : \"description\",\n  \"issueTypes\" : {\n    \"key\" : {\n      \"avatarId\" : 0,\n      \"hierarchyLevel\" : 6,\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"self\" : \"self\",\n      \"entityId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n      \"iconUrl\" : \"iconUrl\",\n      \"id\" : \"id\",\n      \"subtask\" : true\n    }\n  },\n  \"originalIssueTypeMappings\" : {\n    \"key\" : \"originalIssueTypeMappings\"\n  },\n  \"defaultWorkflow\" : \"defaultWorkflow\",\n  \"updateDraftIfNeeded\" : true,\n  \"draft\" : true,\n  \"name\" : \"name\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : 5,\n  \"lastModified\" : \"lastModified\",\n  \"issueTypeMappings\" : {\n    \"key\" : \"issueTypeMappings\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<WorkflowScheme>(exampleJson)
            : default(WorkflowScheme);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update draft default workflow
        /// </summary>
        /// <remarks>Sets the default workflow for a workflow scheme&#39;s draft.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id">The ID of the workflow scheme that the draft belongs to.</param>
        /// <param name="defaultWorkflow">The object for the new default workflow.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        /// <response code="404">Returned if any of the following is true:   *  The workflow scheme is not found.  *  The workflow scheme does not have a draft.</response>
        [HttpPut]
        [Route("/rest/api/3/workflowscheme/{id}/draft/default")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("UpdateDraftDefaultWorkflow")]
        [SwaggerResponse(statusCode: 200, type: typeof(WorkflowScheme), description: "Returned if the request is successful.")]
        public virtual IActionResult UpdateDraftDefaultWorkflow([FromRoute (Name = "id")][Required]long id, [FromBody]DefaultWorkflow defaultWorkflow)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(WorkflowScheme));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"originalDefaultWorkflow\" : \"originalDefaultWorkflow\",\n  \"description\" : \"description\",\n  \"issueTypes\" : {\n    \"key\" : {\n      \"avatarId\" : 0,\n      \"hierarchyLevel\" : 6,\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"self\" : \"self\",\n      \"entityId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n      \"iconUrl\" : \"iconUrl\",\n      \"id\" : \"id\",\n      \"subtask\" : true\n    }\n  },\n  \"originalIssueTypeMappings\" : {\n    \"key\" : \"originalIssueTypeMappings\"\n  },\n  \"defaultWorkflow\" : \"defaultWorkflow\",\n  \"updateDraftIfNeeded\" : true,\n  \"draft\" : true,\n  \"name\" : \"name\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : 5,\n  \"lastModified\" : \"lastModified\",\n  \"issueTypeMappings\" : {\n    \"key\" : \"issueTypeMappings\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<WorkflowScheme>(exampleJson)
            : default(WorkflowScheme);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Set issue types for workflow in workflow scheme
        /// </summary>
        /// <remarks>Sets the issue types for a workflow in a workflow scheme&#39;s draft. The workflow can also be set as the default workflow for the draft workflow scheme. Unmapped issues types are mapped to the default workflow.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id">The ID of the workflow scheme that the draft belongs to.</param>
        /// <param name="workflowName">The name of the workflow.</param>
        /// <param name="issueTypesWorkflowMapping"></param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        /// <response code="404">Returned if any of the following is true:   *  The workflow scheme is not found.  *  The workflow scheme does not have a draft.  *  The workflow is not found.  *  The workflow is not specified.</response>
        [HttpPut]
        [Route("/rest/api/3/workflowscheme/{id}/draft/workflow")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("UpdateDraftWorkflowMapping")]
        [SwaggerResponse(statusCode: 200, type: typeof(WorkflowScheme), description: "Returned if the request is successful.")]
        public virtual IActionResult UpdateDraftWorkflowMapping([FromRoute (Name = "id")][Required]long id, [FromQuery (Name = "workflowName")][Required()]string workflowName, [FromBody]IssueTypesWorkflowMapping issueTypesWorkflowMapping)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(WorkflowScheme));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"originalDefaultWorkflow\" : \"originalDefaultWorkflow\",\n  \"description\" : \"description\",\n  \"issueTypes\" : {\n    \"key\" : {\n      \"avatarId\" : 0,\n      \"hierarchyLevel\" : 6,\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"self\" : \"self\",\n      \"entityId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n      \"iconUrl\" : \"iconUrl\",\n      \"id\" : \"id\",\n      \"subtask\" : true\n    }\n  },\n  \"originalIssueTypeMappings\" : {\n    \"key\" : \"originalIssueTypeMappings\"\n  },\n  \"defaultWorkflow\" : \"defaultWorkflow\",\n  \"updateDraftIfNeeded\" : true,\n  \"draft\" : true,\n  \"name\" : \"name\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : 5,\n  \"lastModified\" : \"lastModified\",\n  \"issueTypeMappings\" : {\n    \"key\" : \"issueTypeMappings\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<WorkflowScheme>(exampleJson)
            : default(WorkflowScheme);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update draft workflow scheme
        /// </summary>
        /// <remarks>Updates a draft workflow scheme. If a draft workflow scheme does not exist for the active workflow scheme, then a draft is created. Note that an active workflow scheme can only have one draft workflow scheme.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id">The ID of the active workflow scheme that the draft was created from.</param>
        /// <param name="workflowScheme"></param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        /// <response code="404">Returned if:   *  the original active workflow scheme is not found.  *  the original active workflow scheme does not have a draft.</response>
        [HttpPut]
        [Route("/rest/api/3/workflowscheme/{id}/draft")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("UpdateWorkflowSchemeDraft")]
        [SwaggerResponse(statusCode: 200, type: typeof(WorkflowScheme), description: "Returned if the request is successful.")]
        public virtual IActionResult UpdateWorkflowSchemeDraft([FromRoute (Name = "id")][Required]long id, [FromBody]WorkflowScheme workflowScheme)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(WorkflowScheme));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"originalDefaultWorkflow\" : \"originalDefaultWorkflow\",\n  \"description\" : \"description\",\n  \"issueTypes\" : {\n    \"key\" : {\n      \"avatarId\" : 0,\n      \"hierarchyLevel\" : 6,\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"self\" : \"self\",\n      \"entityId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n      \"iconUrl\" : \"iconUrl\",\n      \"id\" : \"id\",\n      \"subtask\" : true\n    }\n  },\n  \"originalIssueTypeMappings\" : {\n    \"key\" : \"originalIssueTypeMappings\"\n  },\n  \"defaultWorkflow\" : \"defaultWorkflow\",\n  \"updateDraftIfNeeded\" : true,\n  \"draft\" : true,\n  \"name\" : \"name\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : 5,\n  \"lastModified\" : \"lastModified\",\n  \"issueTypeMappings\" : {\n    \"key\" : \"issueTypeMappings\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<WorkflowScheme>(exampleJson)
            : default(WorkflowScheme);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
