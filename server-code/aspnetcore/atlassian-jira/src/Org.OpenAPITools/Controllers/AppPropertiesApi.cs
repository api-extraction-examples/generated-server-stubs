/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class AppPropertiesApiController : ControllerBase
    { 
        /// <summary>
        /// Delete app property
        /// </summary>
        /// <remarks>Deletes an app&#39;s property.  **[Permissions](#permissions) required:** Only a Connect app whose key matches &#x60;addonKey&#x60; can make this request.</remarks>
        /// <param name="addonKey">The key of the app, as defined in its descriptor.</param>
        /// <param name="propertyKey">The key of the property.</param>
        /// <response code="204">Returned if the request is successful.</response>
        /// <response code="400">Returned if the property key is longer than 127 characters.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="404">Returned if the property is not found or doesn&#39;t belong to the app.</response>
        [HttpDelete]
        [Route("/rest/atlassian-connect/1/addons/{addonKey}/properties/{propertyKey}")]
        [ValidateModelState]
        [SwaggerOperation("AddonPropertiesResourceDeleteAddonPropertyDelete")]
        [SwaggerResponse(statusCode: 400, type: typeof(OperationMessage), description: "Returned if the property key is longer than 127 characters.")]
        [SwaggerResponse(statusCode: 401, type: typeof(OperationMessage), description: "Returned if the authentication credentials are incorrect or missing.")]
        [SwaggerResponse(statusCode: 404, type: typeof(OperationMessage), description: "Returned if the property is not found or doesn&#39;t belong to the app.")]
        public virtual IActionResult AddonPropertiesResourceDeleteAddonPropertyDelete([FromRoute (Name = "addonKey")][Required]string addonKey, [FromRoute (Name = "propertyKey")][Required]string propertyKey)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(OperationMessage));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(OperationMessage));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(OperationMessage));

            throw new NotImplementedException();
        }

        /// <summary>
        /// Get app properties
        /// </summary>
        /// <remarks>Gets all the properties of an app.  **[Permissions](#permissions) required:** Only a Connect app whose key matches &#x60;addonKey&#x60; can make this request. Additionally, Forge apps published on the Marketplace can access properties of Connect apps they were [migrated from](https://developer.atlassian.com/platform/forge/build-a-connect-on-forge-app/).</remarks>
        /// <param name="addonKey">The key of the app, as defined in its descriptor.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        [HttpGet]
        [Route("/rest/atlassian-connect/1/addons/{addonKey}/properties")]
        [ValidateModelState]
        [SwaggerOperation("AddonPropertiesResourceGetAddonPropertiesGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(PropertyKeys), description: "Returned if the request is successful.")]
        [SwaggerResponse(statusCode: 401, type: typeof(OperationMessage), description: "Returned if the authentication credentials are incorrect or missing.")]
        public virtual IActionResult AddonPropertiesResourceGetAddonPropertiesGet([FromRoute (Name = "addonKey")][Required]string addonKey)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PropertyKeys));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(OperationMessage));
            string exampleJson = null;
            exampleJson = "{\n  \"keys\" : [ {\n    \"self\" : \"self\",\n    \"key\" : \"key\"\n  }, {\n    \"self\" : \"self\",\n    \"key\" : \"key\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PropertyKeys>(exampleJson)
            : default(PropertyKeys);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get app property
        /// </summary>
        /// <remarks>Returns the key and value of an app&#39;s property.  **[Permissions](#permissions) required:** Only a Connect app whose key matches &#x60;addonKey&#x60; can make this request. Additionally, Forge apps published on the Marketplace can access properties of Connect apps they were [migrated from](https://developer.atlassian.com/platform/forge/build-a-connect-on-forge-app/).</remarks>
        /// <param name="addonKey">The key of the app, as defined in its descriptor.</param>
        /// <param name="propertyKey">The key of the property.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the property key is longer than 127 characters.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="404">Returned if the property is not found or doesn&#39;t belong to the app.</response>
        [HttpGet]
        [Route("/rest/atlassian-connect/1/addons/{addonKey}/properties/{propertyKey}")]
        [ValidateModelState]
        [SwaggerOperation("AddonPropertiesResourceGetAddonPropertyGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(EntityProperty), description: "Returned if the request is successful.")]
        [SwaggerResponse(statusCode: 400, type: typeof(OperationMessage), description: "Returned if the property key is longer than 127 characters.")]
        [SwaggerResponse(statusCode: 401, type: typeof(OperationMessage), description: "Returned if the authentication credentials are incorrect or missing.")]
        [SwaggerResponse(statusCode: 404, type: typeof(OperationMessage), description: "Returned if the property is not found or doesn&#39;t belong to the app.")]
        public virtual IActionResult AddonPropertiesResourceGetAddonPropertyGet([FromRoute (Name = "addonKey")][Required]string addonKey, [FromRoute (Name = "propertyKey")][Required]string propertyKey)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(EntityProperty));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(OperationMessage));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(OperationMessage));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(OperationMessage));
            string exampleJson = null;
            exampleJson = "{\n  \"value\" : \"\",\n  \"key\" : \"key\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<EntityProperty>(exampleJson)
            : default(EntityProperty);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Set app property
        /// </summary>
        /// <remarks>Sets the value of an app&#39;s property. Use this resource to store custom data for your app.  The value of the request body must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON blob. The maximum length is 32768 characters.  **[Permissions](#permissions) required:** Only a Connect app whose key matches &#x60;addonKey&#x60; can make this request.</remarks>
        /// <param name="addonKey">The key of the app, as defined in its descriptor.</param>
        /// <param name="propertyKey">The key of the property.</param>
        /// <param name="body"></param>
        /// <response code="200">Returned if the property is updated.</response>
        /// <response code="201">Returned is the property is created.</response>
        /// <response code="400">Returned if:   * the property key is longer than 127 characters.   * the value is not valid JSON.   * the value is longer than 32768 characters.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        [HttpPut]
        [Route("/rest/atlassian-connect/1/addons/{addonKey}/properties/{propertyKey}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("AddonPropertiesResourcePutAddonPropertyPut")]
        [SwaggerResponse(statusCode: 200, type: typeof(OperationMessage), description: "Returned if the property is updated.")]
        [SwaggerResponse(statusCode: 201, type: typeof(OperationMessage), description: "Returned is the property is created.")]
        [SwaggerResponse(statusCode: 400, type: typeof(OperationMessage), description: "Returned if:   * the property key is longer than 127 characters.   * the value is not valid JSON.   * the value is longer than 32768 characters.")]
        [SwaggerResponse(statusCode: 401, type: typeof(OperationMessage), description: "Returned if the authentication credentials are incorrect or missing.")]
        public virtual IActionResult AddonPropertiesResourcePutAddonPropertyPut([FromRoute (Name = "addonKey")][Required]string addonKey, [FromRoute (Name = "propertyKey")][Required]string propertyKey, [FromBody]Object body)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(OperationMessage));
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(OperationMessage));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(OperationMessage));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(OperationMessage));
            string exampleJson = null;
            exampleJson = "{\n  \"message\" : \"An example message.\",\n  \"statusCode\" : 200\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<OperationMessage>(exampleJson)
            : default(OperationMessage);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
