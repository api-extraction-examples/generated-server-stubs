/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class GroupsApiController : ControllerBase
    { 
        /// <summary>
        /// Add user to group
        /// </summary>
        /// <remarks>Adds a user to a group.  **[Permissions](#permissions) required:** Site administration (that is, member of the *site-admin* [group](https://confluence.atlassian.com/x/24xjL)).</remarks>
        /// <param name="updateUserToGroupBean">The user to add to the group.</param>
        /// <param name="groupname">As a group&#39;s name can change, use of &#x60;groupId&#x60; is recommended to identify a group.   The name of the group. This parameter cannot be used with the &#x60;groupId&#x60; parameter.</param>
        /// <param name="groupId">The ID of the group. This parameter cannot be used with the &#x60;groupName&#x60; parameter.</param>
        /// <response code="201">Returned if the request is successful.</response>
        /// <response code="400">Returned if:   *  &#x60;groupname&#x60; is not provided.  *  &#x60;accountId&#x60; is missing.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing from the request.</response>
        /// <response code="403">Returned if the calling user does not have the necessary permission.</response>
        /// <response code="404">Returned if the group or user are not found.</response>
        [HttpPost]
        [Route("/rest/api/3/group/user")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("AddUserToGroup")]
        [SwaggerResponse(statusCode: 201, type: typeof(Group), description: "Returned if the request is successful.")]
        public virtual IActionResult AddUserToGroup([FromBody]UpdateUserToGroupBean updateUserToGroupBean, [FromQuery (Name = "groupname")]string groupname, [FromQuery (Name = "groupId")]string groupId)
        {

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(Group));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"expand\" : \"expand\",\n  \"groupId\" : \"groupId\",\n  \"name\" : \"name\",\n  \"self\" : \"https://openapi-generator.tech\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Group>(exampleJson)
            : default(Group);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Bulk get groups
        /// </summary>
        /// <remarks>Returns a [paginated](#pagination) list of groups.  **[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="startAt">The index of the first item to return in a page of results (page offset).</param>
        /// <param name="maxResults">The maximum number of items to return per page.</param>
        /// <param name="groupId">The ID of a group. To specify multiple IDs, pass multiple &#x60;groupId&#x60; parameters. For example, &#x60;groupId&#x3D;5b10a2844c20165700ede21g&amp;groupId&#x3D;5b10ac8d82e05b22cc7d4ef5&#x60;.</param>
        /// <param name="groupName">The name of a group. To specify multiple names, pass multiple &#x60;groupName&#x60; parameters. For example, &#x60;groupName&#x3D;administrators&amp;groupName&#x3D;jira-software-users&#x60;.</param>
        /// <param name="accessType">The access level of a group. Valid values: &#39;site-admin&#39;, &#39;admin&#39;, &#39;user&#39;.</param>
        /// <param name="applicationKey">The application key of the product user groups to search for. Valid values: &#39;jira-servicedesk&#39;, &#39;jira-software&#39;, &#39;jira-product-discovery&#39;, &#39;jira-core&#39;.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is not valid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        /// <response code="500">Returned if the group with the given access level can&#39;t be retrieved.</response>
        [HttpGet]
        [Route("/rest/api/3/group/bulk")]
        [ValidateModelState]
        [SwaggerOperation("BulkGetGroups")]
        [SwaggerResponse(statusCode: 200, type: typeof(PageBeanGroupDetails), description: "Returned if the request is successful.")]
        public virtual IActionResult BulkGetGroups([FromQuery (Name = "startAt")]long? startAt, [FromQuery (Name = "maxResults")]int? maxResults, [FromQuery (Name = "groupId")]List<string> groupId, [FromQuery (Name = "groupName")]List<string> groupName, [FromQuery (Name = "accessType")]string accessType, [FromQuery (Name = "applicationKey")]string applicationKey)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PageBeanGroupDetails));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500);
            string exampleJson = null;
            exampleJson = "{\n  \"total\" : 1,\n  \"isLast\" : true,\n  \"maxResults\" : 0,\n  \"nextPage\" : \"https://openapi-generator.tech\",\n  \"values\" : [ {\n    \"groupId\" : \"groupId\",\n    \"name\" : \"name\"\n  }, {\n    \"groupId\" : \"groupId\",\n    \"name\" : \"name\"\n  } ],\n  \"self\" : \"https://openapi-generator.tech\",\n  \"startAt\" : 6\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PageBeanGroupDetails>(exampleJson)
            : default(PageBeanGroupDetails);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create group
        /// </summary>
        /// <remarks>Creates a group.  **[Permissions](#permissions) required:** Site administration (that is, member of the *site-admin* [group](https://confluence.atlassian.com/x/24xjL)).</remarks>
        /// <param name="addGroupBean">The name of the group.</param>
        /// <response code="201">Returned if the request is successful.</response>
        /// <response code="400">Returned if group name is not specified or the group name is in use.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        [HttpPost]
        [Route("/rest/api/3/group")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("CreateGroup")]
        [SwaggerResponse(statusCode: 201, type: typeof(Group), description: "Returned if the request is successful.")]
        public virtual IActionResult CreateGroup([FromBody]AddGroupBean addGroupBean)
        {

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(Group));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            string exampleJson = null;
            exampleJson = "{\n  \"expand\" : \"expand\",\n  \"groupId\" : \"groupId\",\n  \"name\" : \"name\",\n  \"self\" : \"https://openapi-generator.tech\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Group>(exampleJson)
            : default(Group);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Find groups
        /// </summary>
        /// <remarks>Returns a list of groups whose names contain a query string. A list of group names can be provided to exclude groups from the results.  The primary use case for this resource is to populate a group picker suggestions list. To this end, the returned object includes the &#x60;html&#x60; field where the matched query term is highlighted in the group name with the HTML strong tag. Also, the groups list is wrapped in a response object that contains a header for use in the picker, specifically *Showing X of Y matching groups*.  The list returns with the groups sorted. If no groups match the list criteria, an empty list is returned.  This operation can be accessed anonymously.  **[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg). Anonymous calls and calls by users without the required permission return an empty list.  *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg). Without this permission, calls where query is not an exact match to an existing group will return an empty list.</remarks>
        /// <param name="accountId">This parameter is deprecated, setting it does not affect the results. To find groups containing a particular user, use [Get user groups](#api-rest-api-3-user-groups-get).</param>
        /// <param name="query">The string to find in group names.</param>
        /// <param name="exclude">As a group&#39;s name can change, use of &#x60;excludeGroupIds&#x60; is recommended to identify a group.   A group to exclude from the result. To exclude multiple groups, provide an ampersand-separated list. For example, &#x60;exclude&#x3D;group1&amp;exclude&#x3D;group2&#x60;. This parameter cannot be used with the &#x60;excludeGroupIds&#x60; parameter.</param>
        /// <param name="excludeId">A group ID to exclude from the result. To exclude multiple groups, provide an ampersand-separated list. For example, &#x60;excludeId&#x3D;group1-id&amp;excludeId&#x3D;group2-id&#x60;. This parameter cannot be used with the &#x60;excludeGroups&#x60; parameter.</param>
        /// <param name="maxResults">The maximum number of groups to return. The maximum number of groups that can be returned is limited by the system property &#x60;jira.ajax.autocomplete.limit&#x60;.</param>
        /// <param name="caseInsensitive">Whether the search for groups should be case insensitive.</param>
        /// <param name="userName">This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.</param>
        /// <response code="200">Returned if the request is successful.</response>
        [HttpGet]
        [Route("/rest/api/3/groups/picker")]
        [ValidateModelState]
        [SwaggerOperation("FindGroups")]
        [SwaggerResponse(statusCode: 200, type: typeof(FoundGroups), description: "Returned if the request is successful.")]
        public virtual IActionResult FindGroups([FromQuery (Name = "accountId")]string accountId, [FromQuery (Name = "query")]string query, [FromQuery (Name = "exclude")]List<string> exclude, [FromQuery (Name = "excludeId")]List<string> excludeId, [FromQuery (Name = "maxResults")]int? maxResults, [FromQuery (Name = "caseInsensitive")]bool? caseInsensitive, [FromQuery (Name = "userName")]string userName)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(FoundGroups));
            string exampleJson = null;
            exampleJson = "{\n  \"total\" : 0,\n  \"groups\" : [ {\n    \"groupId\" : \"groupId\",\n    \"name\" : \"name\",\n    \"html\" : \"html\",\n    \"labels\" : [ {\n      \"text\" : \"text\",\n      \"title\" : \"title\",\n      \"type\" : \"ADMIN\"\n    }, {\n      \"text\" : \"text\",\n      \"title\" : \"title\",\n      \"type\" : \"ADMIN\"\n    } ]\n  }, {\n    \"groupId\" : \"groupId\",\n    \"name\" : \"name\",\n    \"html\" : \"html\",\n    \"labels\" : [ {\n      \"text\" : \"text\",\n      \"title\" : \"title\",\n      \"type\" : \"ADMIN\"\n    }, {\n      \"text\" : \"text\",\n      \"title\" : \"title\",\n      \"type\" : \"ADMIN\"\n    } ]\n  } ],\n  \"header\" : \"header\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FoundGroups>(exampleJson)
            : default(FoundGroups);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get group
        /// </summary>
        /// <remarks>This operation is deprecated, use [&#x60;group/member&#x60;](#api-rest-api-3-group-member-get).  Returns all users in a group.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="groupname">As a group&#39;s name can change, use of &#x60;groupId&#x60; is recommended to identify a group.   The name of the group. This parameter cannot be used with the &#x60;groupId&#x60; parameter.</param>
        /// <param name="groupId">The ID of the group. This parameter cannot be used with the &#x60;groupName&#x60; parameter.</param>
        /// <param name="expand">List of fields to expand.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the group name is not specified.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the calling user does not have the Administer Jira global permission.</response>
        /// <response code="404">Returned if the group is not found.</response>
        [HttpGet]
        [Route("/rest/api/3/group")]
        [ValidateModelState]
        [SwaggerOperation("GetGroup")]
        [SwaggerResponse(statusCode: 200, type: typeof(Group), description: "Returned if the request is successful.")]
        [Obsolete]
        public virtual IActionResult GetGroup([FromQuery (Name = "groupname")]string groupname, [FromQuery (Name = "groupId")]string groupId, [FromQuery (Name = "expand")]string expand)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Group));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"expand\" : \"expand\",\n  \"groupId\" : \"groupId\",\n  \"name\" : \"name\",\n  \"self\" : \"https://openapi-generator.tech\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Group>(exampleJson)
            : default(Group);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get users from group
        /// </summary>
        /// <remarks>Returns a [paginated](#pagination) list of all users in a group.  Note that users are ordered by username, however the username is not returned in the results due to privacy reasons.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="groupname">As a group&#39;s name can change, use of &#x60;groupId&#x60; is recommended to identify a group.   The name of the group. This parameter cannot be used with the &#x60;groupId&#x60; parameter.</param>
        /// <param name="groupId">The ID of the group. This parameter cannot be used with the &#x60;groupName&#x60; parameter.</param>
        /// <param name="includeInactiveUsers">Include inactive users.</param>
        /// <param name="startAt">The index of the first item to return in a page of results (page offset).</param>
        /// <param name="maxResults">The maximum number of items to return per page.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the group name is not specified.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the calling user does not have the Administer Jira global permission.</response>
        /// <response code="404">Returned if the group is not found.</response>
        [HttpGet]
        [Route("/rest/api/3/group/member")]
        [ValidateModelState]
        [SwaggerOperation("GetUsersFromGroup")]
        [SwaggerResponse(statusCode: 200, type: typeof(PageBeanUserDetails), description: "Returned if the request is successful.")]
        public virtual IActionResult GetUsersFromGroup([FromQuery (Name = "groupname")]string groupname, [FromQuery (Name = "groupId")]string groupId, [FromQuery (Name = "includeInactiveUsers")]bool? includeInactiveUsers, [FromQuery (Name = "startAt")]long? startAt, [FromQuery (Name = "maxResults")]int? maxResults)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PageBeanUserDetails));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"total\" : 1,\n  \"isLast\" : true,\n  \"maxResults\" : 0,\n  \"nextPage\" : \"https://openapi-generator.tech\",\n  \"values\" : [ {\n    \"accountId\" : \"accountId\",\n    \"emailAddress\" : \"emailAddress\",\n    \"displayName\" : \"displayName\",\n    \"accountType\" : \"accountType\",\n    \"name\" : \"name\",\n    \"active\" : true,\n    \"self\" : \"self\",\n    \"timeZone\" : \"timeZone\",\n    \"key\" : \"key\"\n  }, {\n    \"accountId\" : \"accountId\",\n    \"emailAddress\" : \"emailAddress\",\n    \"displayName\" : \"displayName\",\n    \"accountType\" : \"accountType\",\n    \"name\" : \"name\",\n    \"active\" : true,\n    \"self\" : \"self\",\n    \"timeZone\" : \"timeZone\",\n    \"key\" : \"key\"\n  } ],\n  \"self\" : \"https://openapi-generator.tech\",\n  \"startAt\" : 6\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PageBeanUserDetails>(exampleJson)
            : default(PageBeanUserDetails);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Remove group
        /// </summary>
        /// <remarks>Deletes a group.  **[Permissions](#permissions) required:** Site administration (that is, member of the *site-admin* strategic [group](https://confluence.atlassian.com/x/24xjL)).</remarks>
        /// <param name="groupname"></param>
        /// <param name="groupId">The ID of the group. This parameter cannot be used with the &#x60;groupname&#x60; parameter.</param>
        /// <param name="swapGroup">As a group&#39;s name can change, use of &#x60;swapGroupId&#x60; is recommended to identify a group.   The group to transfer restrictions to. Only comments and worklogs are transferred. If restrictions are not transferred, comments and worklogs are inaccessible after the deletion. This parameter cannot be used with the &#x60;swapGroupId&#x60; parameter.</param>
        /// <param name="swapGroupId">The ID of the group to transfer restrictions to. Only comments and worklogs are transferred. If restrictions are not transferred, comments and worklogs are inaccessible after the deletion. This parameter cannot be used with the &#x60;swapGroup&#x60; parameter.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the group name is not specified.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing from the request.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        /// <response code="404">Returned if the group is not found.</response>
        [HttpDelete]
        [Route("/rest/api/3/group")]
        [ValidateModelState]
        [SwaggerOperation("RemoveGroup")]
        public virtual IActionResult RemoveGroup([FromQuery (Name = "groupname")]string groupname, [FromQuery (Name = "groupId")]string groupId, [FromQuery (Name = "swapGroup")]string swapGroup, [FromQuery (Name = "swapGroupId")]string swapGroupId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Remove user from group
        /// </summary>
        /// <remarks>Removes a user from a group.  **[Permissions](#permissions) required:** Site administration (that is, member of the *site-admin* [group](https://confluence.atlassian.com/x/24xjL)).</remarks>
        /// <param name="accountId">The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.</param>
        /// <param name="groupname">As a group&#39;s name can change, use of &#x60;groupId&#x60; is recommended to identify a group.   The name of the group. This parameter cannot be used with the &#x60;groupId&#x60; parameter.</param>
        /// <param name="groupId">The ID of the group. This parameter cannot be used with the &#x60;groupName&#x60; parameter.</param>
        /// <param name="username">This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if:   *  &#x60;groupName&#x60; is missing.  *  &#x60;accountId&#x60; is missing.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing from the request.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        /// <response code="404">Returned if the group or user are not found.</response>
        [HttpDelete]
        [Route("/rest/api/3/group/user")]
        [ValidateModelState]
        [SwaggerOperation("RemoveUserFromGroup")]
        public virtual IActionResult RemoveUserFromGroup([FromQuery (Name = "accountId")][Required()] [MaxLength(128)]string accountId, [FromQuery (Name = "groupname")]string groupname, [FromQuery (Name = "groupId")]string groupId, [FromQuery (Name = "username")]string username)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }
    }
}
