/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ProjectEmailApiController : ControllerBase
    { 
        /// <summary>
        /// Get project&#39;s sender email
        /// </summary>
        /// <remarks>Returns the [project&#39;s sender email address](https://confluence.atlassian.com/x/dolKLg).  **[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.</remarks>
        /// <param name="projectId">The project ID.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have permission to read project.</response>
        /// <response code="404">Returned if the project or project&#39;s sender email address is not found.</response>
        [HttpGet]
        [Route("/rest/api/3/project/{projectId}/email")]
        [ValidateModelState]
        [SwaggerOperation("GetProjectEmail")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProjectEmailAddress), description: "Returned if the request is successful.")]
        public virtual IActionResult GetProjectEmail([FromRoute (Name = "projectId")][Required]long projectId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ProjectEmailAddress));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"emailAddress\" : \"emailAddress\",\n  \"emailAddressStatus\" : [ \"emailAddressStatus\", \"emailAddressStatus\" ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ProjectEmailAddress>(exampleJson)
            : default(ProjectEmailAddress);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Set project&#39;s sender email
        /// </summary>
        /// <remarks>Sets the [project&#39;s sender email address](https://confluence.atlassian.com/x/dolKLg).  If &#x60;emailAddress&#x60; is an empty string, the default email address is restored.  **[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.</remarks>
        /// <param name="projectId">The project ID.</param>
        /// <param name="projectEmailAddress">The project&#39;s sender email address to be set.</param>
        /// <response code="204">Returned if the project&#39;s sender email address is successfully set.</response>
        /// <response code="400">Returned if the request is not valid, if the email address is not valid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have permission to read project.</response>
        /// <response code="404">Returned if the project is not found.</response>
        [HttpPut]
        [Route("/rest/api/3/project/{projectId}/email")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("UpdateProjectEmail")]
        [SwaggerResponse(statusCode: 204, type: typeof(Object), description: "Returned if the project&#39;s sender email address is successfully set.")]
        public virtual IActionResult UpdateProjectEmail([FromRoute (Name = "projectId")][Required]long projectId, [FromBody]ProjectEmailAddress projectEmailAddress)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204, default(Object));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default(Object);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
