/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class UserSearchApiController : ControllerBase
    { 
        /// <summary>
        /// Find users assignable to issues
        /// </summary>
        /// <remarks>Returns a list of users that can be assigned to an issue. Use this operation to find the list of users who can be assigned to:   *  a new issue, by providing the &#x60;projectKeyOrId&#x60;.  *  an updated issue, by providing the &#x60;issueKey&#x60;.  *  to an issue during a transition (workflow action), by providing the &#x60;issueKey&#x60; and the transition id in &#x60;actionDescriptorId&#x60;. You can obtain the IDs of an issue&#39;s valid transitions using the &#x60;transitions&#x60; option in the &#x60;expand&#x60; parameter of [ Get issue](#api-rest-api-3-issue-issueIdOrKey-get).  In all these cases, you can pass an account ID to determine if a user can be assigned to an issue. The user is returned in the response if they can be assigned to the issue or issue transition.  This operation takes the users in the range defined by &#x60;startAt&#x60; and &#x60;maxResults&#x60;, up to the thousandth user, and then returns only the users from that range that can be assigned the issue. This means the operation usually returns fewer users than specified in &#x60;maxResults&#x60;. To get all the users who can be assigned the issue, use [Get all users](#api-rest-api-3-users-search-get) and filter the records in your code.  Privacy controls are applied to the response based on the users&#39; preferences. This could mean, for example, that the user&#39;s email address is hidden. See the [Profile visibility overview](https://developer.atlassian.com/cloud/jira/platform/profile-visibility/) for more details.  **[Permissions](#permissions) required:** Permission to access Jira.</remarks>
        /// <param name="query">A query string that is matched against user attributes, such as &#x60;displayName&#x60;, and &#x60;emailAddress&#x60;, to find relevant users. The string can match the prefix of the attribute&#39;s value. For example, *query&#x3D;john* matches a user with a &#x60;displayName&#x60; of *John Smith* and a user with an &#x60;emailAddress&#x60; of *johnson@example.com*. Required, unless &#x60;username&#x60; or &#x60;accountId&#x60; is specified.</param>
        /// <param name="sessionId">The sessionId of this request. SessionId is the same until the assignee is set.</param>
        /// <param name="username">This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.</param>
        /// <param name="accountId">A query string that is matched exactly against user &#x60;accountId&#x60;. Required, unless &#x60;query&#x60; is specified.</param>
        /// <param name="project">The project ID or project key (case sensitive). Required, unless &#x60;issueKey&#x60; is specified.</param>
        /// <param name="issueKey">The key of the issue. Required, unless &#x60;project&#x60; is specified.</param>
        /// <param name="startAt">The index of the first item to return in a page of results (page offset).</param>
        /// <param name="maxResults">The maximum number of items to return. This operation may return less than the maximum number of items even if more are available. The operation fetches users up to the maximum and then, from the fetched users, returns only the users that can be assigned to the issue.</param>
        /// <param name="actionDescriptorId">The ID of the transition.</param>
        /// <param name="recommend"></param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if:   *  &#x60;issueKey&#x60; or &#x60;project&#x60; is missing.  *  &#x60;query&#x60; or &#x60;accountId&#x60; is missing.  *  &#x60;query&#x60; and &#x60;accountId&#x60; are provided.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="404">Returned if the project, issue, or transition is not found.</response>
        /// <response code="429">Returned if the rate limit is exceeded. User search endpoints share a collective rate limit for the tenant, in addition to Jira&#39;s normal rate limiting you may receive a rate limit for user search. Please respect the Retry-After header.</response>
        [HttpGet]
        [Route("/rest/api/3/user/assignable/search")]
        [ValidateModelState]
        [SwaggerOperation("FindAssignableUsers")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<User>), description: "Returned if the request is successful.")]
        public virtual IActionResult FindAssignableUsers([FromQuery (Name = "query")]string query, [FromQuery (Name = "sessionId")]string sessionId, [FromQuery (Name = "username")]string username, [FromQuery (Name = "accountId")] [MaxLength(128)]string accountId, [FromQuery (Name = "project")]string project, [FromQuery (Name = "issueKey")]string issueKey, [FromQuery (Name = "startAt")]int? startAt, [FromQuery (Name = "maxResults")]int? maxResults, [FromQuery (Name = "actionDescriptorId")]int? actionDescriptorId, [FromQuery (Name = "recommend")]bool? recommend)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<User>));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            //TODO: Uncomment the next line to return response 429 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(429);
            string exampleJson = null;
            exampleJson = "[ {\n  \"displayName\" : \"displayName\",\n  \"accountType\" : \"atlassian\",\n  \"active\" : true,\n  \"timeZone\" : \"timeZone\",\n  \"locale\" : \"locale\",\n  \"accountId\" : \"accountId\",\n  \"emailAddress\" : \"emailAddress\",\n  \"expand\" : \"expand\",\n  \"name\" : \"name\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"key\" : \"key\"\n}, {\n  \"displayName\" : \"displayName\",\n  \"accountType\" : \"atlassian\",\n  \"active\" : true,\n  \"timeZone\" : \"timeZone\",\n  \"locale\" : \"locale\",\n  \"accountId\" : \"accountId\",\n  \"emailAddress\" : \"emailAddress\",\n  \"expand\" : \"expand\",\n  \"name\" : \"name\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"key\" : \"key\"\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<User>>(exampleJson)
            : default(List<User>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Find users assignable to projects
        /// </summary>
        /// <remarks>Returns a list of users who can be assigned issues in one or more projects. The list may be restricted to users whose attributes match a string.  This operation takes the users in the range defined by &#x60;startAt&#x60; and &#x60;maxResults&#x60;, up to the thousandth user, and then returns only the users from that range that can be assigned issues in the projects. This means the operation usually returns fewer users than specified in &#x60;maxResults&#x60;. To get all the users who can be assigned issues in the projects, use [Get all users](#api-rest-api-3-users-search-get) and filter the records in your code.  Privacy controls are applied to the response based on the users&#39; preferences. This could mean, for example, that the user&#39;s email address is hidden. See the [Profile visibility overview](https://developer.atlassian.com/cloud/jira/platform/profile-visibility/) for more details.  This operation can be accessed anonymously.  **[Permissions](#permissions) required:** None.</remarks>
        /// <param name="projectKeys">A list of project keys (case sensitive). This parameter accepts a comma-separated list.</param>
        /// <param name="query">A query string that is matched against user attributes, such as &#x60;displayName&#x60; and &#x60;emailAddress&#x60;, to find relevant users. The string can match the prefix of the attribute&#39;s value. For example, *query&#x3D;john* matches a user with a &#x60;displayName&#x60; of *John Smith* and a user with an &#x60;emailAddress&#x60; of *johnson@example.com*. Required, unless &#x60;accountId&#x60; is specified.</param>
        /// <param name="username">This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.</param>
        /// <param name="accountId">A query string that is matched exactly against user &#x60;accountId&#x60;. Required, unless &#x60;query&#x60; is specified.</param>
        /// <param name="startAt">The index of the first item to return in a page of results (page offset).</param>
        /// <param name="maxResults">The maximum number of items to return per page.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if:   *  &#x60;projectKeys&#x60; is missing.  *  &#x60;query&#x60; or &#x60;accountId&#x60; is missing.  *  &#x60;query&#x60; and &#x60;accountId&#x60; are provided.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="404">Returned if one or more of the projects is not found.</response>
        /// <response code="429">Returned if the rate limit is exceeded. User search endpoints share a collective rate limit for the tenant, in addition to Jira&#39;s normal rate limiting you may receive a rate limit for user search. Please respect the Retry-After header.</response>
        [HttpGet]
        [Route("/rest/api/3/user/assignable/multiProjectSearch")]
        [ValidateModelState]
        [SwaggerOperation("FindBulkAssignableUsers")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<User>), description: "Returned if the request is successful.")]
        public virtual IActionResult FindBulkAssignableUsers([FromQuery (Name = "projectKeys")][Required()]string projectKeys, [FromQuery (Name = "query")]string query, [FromQuery (Name = "username")]string username, [FromQuery (Name = "accountId")] [MaxLength(128)]string accountId, [FromQuery (Name = "startAt")]int? startAt, [FromQuery (Name = "maxResults")]int? maxResults)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<User>));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            //TODO: Uncomment the next line to return response 429 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(429);
            string exampleJson = null;
            exampleJson = "[ {\n  \"displayName\" : \"displayName\",\n  \"accountType\" : \"atlassian\",\n  \"active\" : true,\n  \"timeZone\" : \"timeZone\",\n  \"locale\" : \"locale\",\n  \"accountId\" : \"accountId\",\n  \"emailAddress\" : \"emailAddress\",\n  \"expand\" : \"expand\",\n  \"name\" : \"name\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"key\" : \"key\"\n}, {\n  \"displayName\" : \"displayName\",\n  \"accountType\" : \"atlassian\",\n  \"active\" : true,\n  \"timeZone\" : \"timeZone\",\n  \"locale\" : \"locale\",\n  \"accountId\" : \"accountId\",\n  \"emailAddress\" : \"emailAddress\",\n  \"expand\" : \"expand\",\n  \"name\" : \"name\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"key\" : \"key\"\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<User>>(exampleJson)
            : default(List<User>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Find user keys by query
        /// </summary>
        /// <remarks>Finds users with a structured query and returns a [paginated](#pagination) list of user keys.  This operation takes the users in the range defined by &#x60;startAt&#x60; and &#x60;maxResults&#x60;, up to the thousandth user, and then returns only the users from that range that match the structured query. This means the operation usually returns fewer users than specified in &#x60;maxResults&#x60;. To get all the users who match the structured query, use [Get all users](#api-rest-api-3-users-search-get) and filter the records in your code.  **[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg).  The query statements are:   *  &#x60;is assignee of PROJ&#x60; Returns the users that are assignees of at least one issue in project *PROJ*.  *  &#x60;is assignee of (PROJ-1, PROJ-2)&#x60; Returns users that are assignees on the issues *PROJ-1* or *PROJ-2*.  *  &#x60;is reporter of (PROJ-1, PROJ-2)&#x60; Returns users that are reporters on the issues *PROJ-1* or *PROJ-2*.  *  &#x60;is watcher of (PROJ-1, PROJ-2)&#x60; Returns users that are watchers on the issues *PROJ-1* or *PROJ-2*.  *  &#x60;is voter of (PROJ-1, PROJ-2)&#x60; Returns users that are voters on the issues *PROJ-1* or *PROJ-2*.  *  &#x60;is commenter of (PROJ-1, PROJ-2)&#x60; Returns users that have posted a comment on the issues *PROJ-1* or *PROJ-2*.  *  &#x60;is transitioner of (PROJ-1, PROJ-2)&#x60; Returns users that have performed a transition on issues *PROJ-1* or *PROJ-2*.  *  &#x60;[propertyKey].entity.property.path is \&quot;property value\&quot;&#x60; Returns users with the entity property value.  The list of issues can be extended as needed, as in *(PROJ-1, PROJ-2, ... PROJ-n)*. Statements can be combined using the &#x60;AND&#x60; and &#x60;OR&#x60; operators to form more complex queries. For example:  &#x60;is assignee of PROJ AND [propertyKey].entity.property.path is \&quot;property value\&quot;&#x60;</remarks>
        /// <param name="query">The search query.</param>
        /// <param name="startAt">The index of the first item to return in a page of results (page offset).</param>
        /// <param name="maxResults">The maximum number of items to return per page.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the query is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        /// <response code="408">Returned if the search is timed out.</response>
        [HttpGet]
        [Route("/rest/api/3/user/search/query/key")]
        [ValidateModelState]
        [SwaggerOperation("FindUserKeysByQuery")]
        [SwaggerResponse(statusCode: 200, type: typeof(PageBeanUserKey), description: "Returned if the request is successful.")]
        public virtual IActionResult FindUserKeysByQuery([FromQuery (Name = "query")][Required()]string query, [FromQuery (Name = "startAt")]long? startAt, [FromQuery (Name = "maxResults")]int? maxResults)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PageBeanUserKey));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 408 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(408);
            string exampleJson = null;
            exampleJson = "{\n  \"total\" : 1,\n  \"isLast\" : true,\n  \"maxResults\" : 0,\n  \"nextPage\" : \"https://openapi-generator.tech\",\n  \"values\" : [ {\n    \"accountId\" : \"accountId\",\n    \"key\" : \"key\"\n  }, {\n    \"accountId\" : \"accountId\",\n    \"key\" : \"key\"\n  } ],\n  \"self\" : \"https://openapi-generator.tech\",\n  \"startAt\" : 6\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PageBeanUserKey>(exampleJson)
            : default(PageBeanUserKey);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Find users
        /// </summary>
        /// <remarks>Returns a list of users that match the search string and property.  This operation first applies a filter to match the search string and property, and then takes the filtered users in the range defined by &#x60;startAt&#x60; and &#x60;maxResults&#x60;, up to the thousandth user. To get all the users who match the search string and property, use [Get all users](#api-rest-api-3-users-search-get) and filter the records in your code.  This operation can be accessed anonymously.  Privacy controls are applied to the response based on the users&#39; preferences. This could mean, for example, that the user&#39;s email address is hidden. See the [Profile visibility overview](https://developer.atlassian.com/cloud/jira/platform/profile-visibility/) for more details.  **[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg). Anonymous calls or calls by users without the required permission return empty search results.</remarks>
        /// <param name="query">A query string that is matched against user attributes ( &#x60;displayName&#x60;, and &#x60;emailAddress&#x60;) to find relevant users. The string can match the prefix of the attribute&#39;s value. For example, *query&#x3D;john* matches a user with a &#x60;displayName&#x60; of *John Smith* and a user with an &#x60;emailAddress&#x60; of *johnson@example.com*. Required, unless &#x60;accountId&#x60; or &#x60;property&#x60; is specified.</param>
        /// <param name="username"></param>
        /// <param name="accountId">A query string that is matched exactly against a user &#x60;accountId&#x60;. Required, unless &#x60;query&#x60; or &#x60;property&#x60; is specified.</param>
        /// <param name="startAt">The index of the first item to return in a page of filtered results (page offset).</param>
        /// <param name="maxResults">The maximum number of items to return per page.</param>
        /// <param name="property">A query string used to search properties. Property keys are specified by path, so property keys containing dot (.) or equals (&#x3D;) characters cannot be used. The query string cannot be specified using a JSON object. Example: To search for the value of &#x60;nested&#x60; from &#x60;{\&quot;something\&quot;:{\&quot;nested\&quot;:1,\&quot;other\&quot;:2}}&#x60; use &#x60;thepropertykey.something.nested&#x3D;1&#x60;. Required, unless &#x60;accountId&#x60; or &#x60;query&#x60; is specified.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if:   *  &#x60;accountId&#x60;, &#x60;query&#x60; or &#x60;property&#x60; is missing.  *  &#x60;query&#x60; and &#x60;accountId&#x60; are provided.  *  &#x60;property&#x60; parameter is not valid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="429">Returned if the rate limit is exceeded. User search endpoints share a collective rate limit for the tenant, in addition to Jira&#39;s normal rate limiting you may receive a rate limit for user search. Please respect the Retry-After header.</response>
        [HttpGet]
        [Route("/rest/api/3/user/search")]
        [ValidateModelState]
        [SwaggerOperation("FindUsers")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<User>), description: "Returned if the request is successful.")]
        public virtual IActionResult FindUsers([FromQuery (Name = "query")]string query, [FromQuery (Name = "username")]string username, [FromQuery (Name = "accountId")] [MaxLength(128)]string accountId, [FromQuery (Name = "startAt")]int? startAt, [FromQuery (Name = "maxResults")]int? maxResults, [FromQuery (Name = "property")]string property)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<User>));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 429 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(429);
            string exampleJson = null;
            exampleJson = "[ {\n  \"displayName\" : \"displayName\",\n  \"accountType\" : \"atlassian\",\n  \"active\" : true,\n  \"timeZone\" : \"timeZone\",\n  \"locale\" : \"locale\",\n  \"accountId\" : \"accountId\",\n  \"emailAddress\" : \"emailAddress\",\n  \"expand\" : \"expand\",\n  \"name\" : \"name\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"key\" : \"key\"\n}, {\n  \"displayName\" : \"displayName\",\n  \"accountType\" : \"atlassian\",\n  \"active\" : true,\n  \"timeZone\" : \"timeZone\",\n  \"locale\" : \"locale\",\n  \"accountId\" : \"accountId\",\n  \"emailAddress\" : \"emailAddress\",\n  \"expand\" : \"expand\",\n  \"name\" : \"name\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"key\" : \"key\"\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<User>>(exampleJson)
            : default(List<User>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Find users by query
        /// </summary>
        /// <remarks>Finds users with a structured query and returns a [paginated](#pagination) list of user details.  This operation takes the users in the range defined by &#x60;startAt&#x60; and &#x60;maxResults&#x60;, up to the thousandth user, and then returns only the users from that range that match the structured query. This means the operation usually returns fewer users than specified in &#x60;maxResults&#x60;. To get all the users who match the structured query, use [Get all users](#api-rest-api-3-users-search-get) and filter the records in your code.  **[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg).  The query statements are:   *  &#x60;is assignee of PROJ&#x60; Returns the users that are assignees of at least one issue in project *PROJ*.  *  &#x60;is assignee of (PROJ-1, PROJ-2)&#x60; Returns users that are assignees on the issues *PROJ-1* or *PROJ-2*.  *  &#x60;is reporter of (PROJ-1, PROJ-2)&#x60; Returns users that are reporters on the issues *PROJ-1* or *PROJ-2*.  *  &#x60;is watcher of (PROJ-1, PROJ-2)&#x60; Returns users that are watchers on the issues *PROJ-1* or *PROJ-2*.  *  &#x60;is voter of (PROJ-1, PROJ-2)&#x60; Returns users that are voters on the issues *PROJ-1* or *PROJ-2*.  *  &#x60;is commenter of (PROJ-1, PROJ-2)&#x60; Returns users that have posted a comment on the issues *PROJ-1* or *PROJ-2*.  *  &#x60;is transitioner of (PROJ-1, PROJ-2)&#x60; Returns users that have performed a transition on issues *PROJ-1* or *PROJ-2*.  *  &#x60;[propertyKey].entity.property.path is \&quot;property value\&quot;&#x60; Returns users with the entity property value.  The list of issues can be extended as needed, as in *(PROJ-1, PROJ-2, ... PROJ-n)*. Statements can be combined using the &#x60;AND&#x60; and &#x60;OR&#x60; operators to form more complex queries. For example:  &#x60;is assignee of PROJ AND [propertyKey].entity.property.path is \&quot;property value\&quot;&#x60;</remarks>
        /// <param name="query">The search query.</param>
        /// <param name="startAt">The index of the first item to return in a page of results (page offset).</param>
        /// <param name="maxResults">The maximum number of items to return per page.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the query is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        /// <response code="408">Returned if the search is timed out.</response>
        [HttpGet]
        [Route("/rest/api/3/user/search/query")]
        [ValidateModelState]
        [SwaggerOperation("FindUsersByQuery")]
        [SwaggerResponse(statusCode: 200, type: typeof(PageBeanUser), description: "Returned if the request is successful.")]
        public virtual IActionResult FindUsersByQuery([FromQuery (Name = "query")][Required()]string query, [FromQuery (Name = "startAt")]long? startAt, [FromQuery (Name = "maxResults")]int? maxResults)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PageBeanUser));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 408 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(408);
            string exampleJson = null;
            exampleJson = "{\n  \"total\" : 1,\n  \"isLast\" : true,\n  \"maxResults\" : 0,\n  \"nextPage\" : \"https://openapi-generator.tech\",\n  \"values\" : [ {\n    \"displayName\" : \"displayName\",\n    \"accountType\" : \"atlassian\",\n    \"active\" : true,\n    \"timeZone\" : \"timeZone\",\n    \"locale\" : \"locale\",\n    \"accountId\" : \"accountId\",\n    \"emailAddress\" : \"emailAddress\",\n    \"expand\" : \"expand\",\n    \"name\" : \"name\",\n    \"self\" : \"https://openapi-generator.tech\",\n    \"key\" : \"key\"\n  }, {\n    \"displayName\" : \"displayName\",\n    \"accountType\" : \"atlassian\",\n    \"active\" : true,\n    \"timeZone\" : \"timeZone\",\n    \"locale\" : \"locale\",\n    \"accountId\" : \"accountId\",\n    \"emailAddress\" : \"emailAddress\",\n    \"expand\" : \"expand\",\n    \"name\" : \"name\",\n    \"self\" : \"https://openapi-generator.tech\",\n    \"key\" : \"key\"\n  } ],\n  \"self\" : \"https://openapi-generator.tech\",\n  \"startAt\" : 6\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PageBeanUser>(exampleJson)
            : default(PageBeanUser);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Find users for picker
        /// </summary>
        /// <remarks>Returns a list of users whose attributes match the query term. The returned object includes the &#x60;html&#x60; field where the matched query term is highlighted with the HTML strong tag. A list of account IDs can be provided to exclude users from the results.  This operation takes the users in the range defined by &#x60;maxResults&#x60;, up to the thousandth user, and then returns only the users from that range that match the query term. This means the operation usually returns fewer users than specified in &#x60;maxResults&#x60;. To get all the users who match the query term, use [Get all users](#api-rest-api-3-users-search-get) and filter the records in your code.  Privacy controls are applied to the response based on the users&#39; preferences. This could mean, for example, that the user&#39;s email address is hidden. See the [Profile visibility overview](https://developer.atlassian.com/cloud/jira/platform/profile-visibility/) for more details.  This operation can be accessed anonymously.  **[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg). Anonymous calls and calls by users without the required permission return search results for an exact name match only.</remarks>
        /// <param name="query">A query string that is matched against user attributes, such as &#x60;displayName&#x60;, and &#x60;emailAddress&#x60;, to find relevant users. The string can match the prefix of the attribute&#39;s value. For example, *query&#x3D;john* matches a user with a &#x60;displayName&#x60; of *John Smith* and a user with an &#x60;emailAddress&#x60; of *johnson@example.com*.</param>
        /// <param name="maxResults">The maximum number of items to return. The total number of matched users is returned in &#x60;total&#x60;.</param>
        /// <param name="showAvatar">Include the URI to the user&#39;s avatar.</param>
        /// <param name="exclude">This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.</param>
        /// <param name="excludeAccountIds">A list of account IDs to exclude from the search results. This parameter accepts a comma-separated list. Multiple account IDs can also be provided using an ampersand-separated list. For example, &#x60;excludeAccountIds&#x3D;5b10a2844c20165700ede21g,5b10a0effa615349cb016cd8&amp;excludeAccountIds&#x3D;5b10ac8d82e05b22cc7d4ef5&#x60;. Cannot be provided with &#x60;exclude&#x60;.</param>
        /// <param name="avatarSize"></param>
        /// <param name="excludeConnectUsers"></param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if &#x60;exclude&#x60; and &#x60;excludeAccountIds&#x60; are provided.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="429">Returned if the rate limit is exceeded. User search endpoints share a collective rate limit for the tenant, in addition to Jira&#39;s normal rate limiting you may receive a rate limit for user search. Please respect the Retry-After header.</response>
        [HttpGet]
        [Route("/rest/api/3/user/picker")]
        [ValidateModelState]
        [SwaggerOperation("FindUsersForPicker")]
        [SwaggerResponse(statusCode: 200, type: typeof(FoundUsers), description: "Returned if the request is successful.")]
        public virtual IActionResult FindUsersForPicker([FromQuery (Name = "query")][Required()]string query, [FromQuery (Name = "maxResults")]int? maxResults, [FromQuery (Name = "showAvatar")]bool? showAvatar, [FromQuery (Name = "exclude")]List<string> exclude, [FromQuery (Name = "excludeAccountIds")]List<string> excludeAccountIds, [FromQuery (Name = "avatarSize")]string avatarSize, [FromQuery (Name = "excludeConnectUsers")]bool? excludeConnectUsers)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(FoundUsers));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 429 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(429);
            string exampleJson = null;
            exampleJson = "{\n  \"total\" : 0,\n  \"header\" : \"header\",\n  \"users\" : [ {\n    \"accountId\" : \"accountId\",\n    \"avatarUrl\" : \"https://openapi-generator.tech\",\n    \"displayName\" : \"displayName\",\n    \"name\" : \"name\",\n    \"html\" : \"html\",\n    \"key\" : \"key\"\n  }, {\n    \"accountId\" : \"accountId\",\n    \"avatarUrl\" : \"https://openapi-generator.tech\",\n    \"displayName\" : \"displayName\",\n    \"name\" : \"name\",\n    \"html\" : \"html\",\n    \"key\" : \"key\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FoundUsers>(exampleJson)
            : default(FoundUsers);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Find users with permissions
        /// </summary>
        /// <remarks>Returns a list of users who fulfill these criteria:   *  their user attributes match a search string.  *  they have a set of permissions for a project or issue.  If no search string is provided, a list of all users with the permissions is returned.  This operation takes the users in the range defined by &#x60;startAt&#x60; and &#x60;maxResults&#x60;, up to the thousandth user, and then returns only the users from that range that match the search string and have permission for the project or issue. This means the operation usually returns fewer users than specified in &#x60;maxResults&#x60;. To get all the users who match the search string and have permission for the project or issue, use [Get all users](#api-rest-api-3-users-search-get) and filter the records in your code.  Privacy controls are applied to the response based on the users&#39; preferences. This could mean, for example, that the user&#39;s email address is hidden. See the [Profile visibility overview](https://developer.atlassian.com/cloud/jira/platform/profile-visibility/) for more details.  This operation can be accessed anonymously.  **[Permissions](#permissions) required:**   *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), to get users for any project.  *  *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for a project, to get users for that project.</remarks>
        /// <param name="permissions">A comma separated list of permissions. Permissions can be specified as any:   *  permission returned by [Get all permissions](#api-rest-api-3-permissions-get).  *  custom project permission added by Connect apps.  *  (deprecated) one of the following:           *  ASSIGNABLE\\_USER      *  ASSIGN\\_ISSUE      *  ATTACHMENT\\_DELETE\\_ALL      *  ATTACHMENT\\_DELETE\\_OWN      *  BROWSE      *  CLOSE\\_ISSUE      *  COMMENT\\_DELETE\\_ALL      *  COMMENT\\_DELETE\\_OWN      *  COMMENT\\_EDIT\\_ALL      *  COMMENT\\_EDIT\\_OWN      *  COMMENT\\_ISSUE      *  CREATE\\_ATTACHMENT      *  CREATE\\_ISSUE      *  DELETE\\_ISSUE      *  EDIT\\_ISSUE      *  LINK\\_ISSUE      *  MANAGE\\_WATCHER\\_LIST      *  MODIFY\\_REPORTER      *  MOVE\\_ISSUE      *  PROJECT\\_ADMIN      *  RESOLVE\\_ISSUE      *  SCHEDULE\\_ISSUE      *  SET\\_ISSUE\\_SECURITY      *  TRANSITION\\_ISSUE      *  VIEW\\_VERSION\\_CONTROL      *  VIEW\\_VOTERS\\_AND\\_WATCHERS      *  VIEW\\_WORKFLOW\\_READONLY      *  WORKLOG\\_DELETE\\_ALL      *  WORKLOG\\_DELETE\\_OWN      *  WORKLOG\\_EDIT\\_ALL      *  WORKLOG\\_EDIT\\_OWN      *  WORK\\_ISSUE</param>
        /// <param name="query">A query string that is matched against user attributes, such as &#x60;displayName&#x60; and &#x60;emailAddress&#x60;, to find relevant users. The string can match the prefix of the attribute&#39;s value. For example, *query&#x3D;john* matches a user with a &#x60;displayName&#x60; of *John Smith* and a user with an &#x60;emailAddress&#x60; of *johnson@example.com*. Required, unless &#x60;accountId&#x60; is specified.</param>
        /// <param name="username">This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.</param>
        /// <param name="accountId">A query string that is matched exactly against user &#x60;accountId&#x60;. Required, unless &#x60;query&#x60; is specified.</param>
        /// <param name="issueKey">The issue key for the issue.</param>
        /// <param name="projectKey">The project key for the project (case sensitive).</param>
        /// <param name="startAt">The index of the first item to return in a page of results (page offset).</param>
        /// <param name="maxResults">The maximum number of items to return per page.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if:   *  &#x60;issueKey&#x60; or &#x60;projectKey&#x60; is missing.  *  &#x60;query&#x60; or &#x60;accountId&#x60; is missing.  *  &#x60;query&#x60; and &#x60;accountId&#x60; are provided.  *  &#x60;permissions&#x60; is empty or contains an invalid entry.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        /// <response code="404">Returned if the issue or project is not found.</response>
        /// <response code="429">Returned if the rate limit is exceeded. User search endpoints share a collective rate limit for the tenant, in addition to Jira&#39;s normal rate limiting you may receive a rate limit for user search. Please respect the Retry-After header.</response>
        [HttpGet]
        [Route("/rest/api/3/user/permission/search")]
        [ValidateModelState]
        [SwaggerOperation("FindUsersWithAllPermissions")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<User>), description: "Returned if the request is successful.")]
        public virtual IActionResult FindUsersWithAllPermissions([FromQuery (Name = "permissions")][Required()]string permissions, [FromQuery (Name = "query")]string query, [FromQuery (Name = "username")]string username, [FromQuery (Name = "accountId")] [MaxLength(128)]string accountId, [FromQuery (Name = "issueKey")]string issueKey, [FromQuery (Name = "projectKey")]string projectKey, [FromQuery (Name = "startAt")]int? startAt, [FromQuery (Name = "maxResults")]int? maxResults)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<User>));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            //TODO: Uncomment the next line to return response 429 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(429);
            string exampleJson = null;
            exampleJson = "[ {\n  \"displayName\" : \"displayName\",\n  \"accountType\" : \"atlassian\",\n  \"active\" : true,\n  \"timeZone\" : \"timeZone\",\n  \"locale\" : \"locale\",\n  \"accountId\" : \"accountId\",\n  \"emailAddress\" : \"emailAddress\",\n  \"expand\" : \"expand\",\n  \"name\" : \"name\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"key\" : \"key\"\n}, {\n  \"displayName\" : \"displayName\",\n  \"accountType\" : \"atlassian\",\n  \"active\" : true,\n  \"timeZone\" : \"timeZone\",\n  \"locale\" : \"locale\",\n  \"accountId\" : \"accountId\",\n  \"emailAddress\" : \"emailAddress\",\n  \"expand\" : \"expand\",\n  \"name\" : \"name\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"key\" : \"key\"\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<User>>(exampleJson)
            : default(List<User>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Find users with browse permission
        /// </summary>
        /// <remarks>Returns a list of users who fulfill these criteria:   *  their user attributes match a search string.  *  they have permission to browse issues.  Use this resource to find users who can browse:   *  an issue, by providing the &#x60;issueKey&#x60;.  *  any issue in a project, by providing the &#x60;projectKey&#x60;.  This operation takes the users in the range defined by &#x60;startAt&#x60; and &#x60;maxResults&#x60;, up to the thousandth user, and then returns only the users from that range that match the search string and have permission to browse issues. This means the operation usually returns fewer users than specified in &#x60;maxResults&#x60;. To get all the users who match the search string and have permission to browse issues, use [Get all users](#api-rest-api-3-users-search-get) and filter the records in your code.  Privacy controls are applied to the response based on the users&#39; preferences. This could mean, for example, that the user&#39;s email address is hidden. See the [Profile visibility overview](https://developer.atlassian.com/cloud/jira/platform/profile-visibility/) for more details.  This operation can be accessed anonymously.  **[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg). Anonymous calls and calls by users without the required permission return empty search results.</remarks>
        /// <param name="query">A query string that is matched against user attributes, such as &#x60;displayName&#x60; and &#x60;emailAddress&#x60;, to find relevant users. The string can match the prefix of the attribute&#39;s value. For example, *query&#x3D;john* matches a user with a &#x60;displayName&#x60; of *John Smith* and a user with an &#x60;emailAddress&#x60; of *johnson@example.com*. Required, unless &#x60;accountId&#x60; is specified.</param>
        /// <param name="username">This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.</param>
        /// <param name="accountId">A query string that is matched exactly against user &#x60;accountId&#x60;. Required, unless &#x60;query&#x60; is specified.</param>
        /// <param name="issueKey">The issue key for the issue. Required, unless &#x60;projectKey&#x60; is specified.</param>
        /// <param name="projectKey">The project key for the project (case sensitive). Required, unless &#x60;issueKey&#x60; is specified.</param>
        /// <param name="startAt">The index of the first item to return in a page of results (page offset).</param>
        /// <param name="maxResults">The maximum number of items to return per page.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if:   *  &#x60;issueKey&#x60; or &#x60;projectKey&#x60; is missing.  *  &#x60;query&#x60; or &#x60;accountId&#x60; is missing.  *  &#x60;query&#x60; and &#x60;accountId&#x60; are provided.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="404">Returned if the issue or project is not found.</response>
        /// <response code="429">Returned if the rate limit is exceeded. User search endpoints share a collective rate limit for the tenant, in addition to Jira&#39;s normal rate limiting you may receive a rate limit for user search. Please respect the Retry-After header.</response>
        [HttpGet]
        [Route("/rest/api/3/user/viewissue/search")]
        [ValidateModelState]
        [SwaggerOperation("FindUsersWithBrowsePermission")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<User>), description: "Returned if the request is successful.")]
        public virtual IActionResult FindUsersWithBrowsePermission([FromQuery (Name = "query")]string query, [FromQuery (Name = "username")]string username, [FromQuery (Name = "accountId")] [MaxLength(128)]string accountId, [FromQuery (Name = "issueKey")]string issueKey, [FromQuery (Name = "projectKey")]string projectKey, [FromQuery (Name = "startAt")]int? startAt, [FromQuery (Name = "maxResults")]int? maxResults)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<User>));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            //TODO: Uncomment the next line to return response 429 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(429);
            string exampleJson = null;
            exampleJson = "[ {\n  \"displayName\" : \"displayName\",\n  \"accountType\" : \"atlassian\",\n  \"active\" : true,\n  \"timeZone\" : \"timeZone\",\n  \"locale\" : \"locale\",\n  \"accountId\" : \"accountId\",\n  \"emailAddress\" : \"emailAddress\",\n  \"expand\" : \"expand\",\n  \"name\" : \"name\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"key\" : \"key\"\n}, {\n  \"displayName\" : \"displayName\",\n  \"accountType\" : \"atlassian\",\n  \"active\" : true,\n  \"timeZone\" : \"timeZone\",\n  \"locale\" : \"locale\",\n  \"accountId\" : \"accountId\",\n  \"emailAddress\" : \"emailAddress\",\n  \"expand\" : \"expand\",\n  \"name\" : \"name\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"key\" : \"key\"\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<User>>(exampleJson)
            : default(List<User>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
