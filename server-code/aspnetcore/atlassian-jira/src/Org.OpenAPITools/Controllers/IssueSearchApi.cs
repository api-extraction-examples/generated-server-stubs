/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class IssueSearchApiController : ControllerBase
    { 
        /// <summary>
        /// Get issue picker suggestions
        /// </summary>
        /// <remarks>Returns lists of issues matching a query string. Use this resource to provide auto-completion suggestions when the user is looking for an issue using a word or string.  This operation returns two lists:   *  &#x60;History Search&#x60; which includes issues from the user&#39;s history of created, edited, or viewed issues that contain the string in the &#x60;query&#x60; parameter.  *  &#x60;Current Search&#x60; which includes issues that match the JQL expression in &#x60;currentJQL&#x60; and contain the string in the &#x60;query&#x60; parameter.  This operation can be accessed anonymously.  **[Permissions](#permissions) required:** None.</remarks>
        /// <param name="query">A string to match against text fields in the issue such as title, description, or comments.</param>
        /// <param name="currentJQL">A JQL query defining a list of issues to search for the query term. Note that &#x60;username&#x60; and &#x60;userkey&#x60; cannot be used as search terms for this parameter, due to privacy reasons. Use &#x60;accountId&#x60; instead.</param>
        /// <param name="currentIssueKey">The key of an issue to exclude from search results. For example, the issue the user is viewing when they perform this query.</param>
        /// <param name="currentProjectId">The ID of a project that suggested issues must belong to.</param>
        /// <param name="showSubTasks">Indicate whether to include subtasks in the suggestions list.</param>
        /// <param name="showSubTaskParent">When &#x60;currentIssueKey&#x60; is a subtask, whether to include the parent issue in the suggestions if it matches the query.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        [HttpGet]
        [Route("/rest/api/3/issue/picker")]
        [ValidateModelState]
        [SwaggerOperation("GetIssuePickerResource")]
        [SwaggerResponse(statusCode: 200, type: typeof(IssuePickerSuggestions), description: "Returned if the request is successful.")]
        public virtual IActionResult GetIssuePickerResource([FromQuery (Name = "query")]string query, [FromQuery (Name = "currentJQL")]string currentJQL, [FromQuery (Name = "currentIssueKey")]string currentIssueKey, [FromQuery (Name = "currentProjectId")]string currentProjectId, [FromQuery (Name = "showSubTasks")]bool? showSubTasks, [FromQuery (Name = "showSubTaskParent")]bool? showSubTaskParent)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(IssuePickerSuggestions));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            string exampleJson = null;
            exampleJson = "{\n  \"sections\" : [ {\n    \"msg\" : \"msg\",\n    \"sub\" : \"sub\",\n    \"id\" : \"id\",\n    \"label\" : \"label\",\n    \"issues\" : [ {\n      \"summary\" : \"summary\",\n      \"img\" : \"img\",\n      \"keyHtml\" : \"keyHtml\",\n      \"summaryText\" : \"summaryText\",\n      \"id\" : 0,\n      \"key\" : \"key\"\n    }, {\n      \"summary\" : \"summary\",\n      \"img\" : \"img\",\n      \"keyHtml\" : \"keyHtml\",\n      \"summaryText\" : \"summaryText\",\n      \"id\" : 0,\n      \"key\" : \"key\"\n    } ]\n  }, {\n    \"msg\" : \"msg\",\n    \"sub\" : \"sub\",\n    \"id\" : \"id\",\n    \"label\" : \"label\",\n    \"issues\" : [ {\n      \"summary\" : \"summary\",\n      \"img\" : \"img\",\n      \"keyHtml\" : \"keyHtml\",\n      \"summaryText\" : \"summaryText\",\n      \"id\" : 0,\n      \"key\" : \"key\"\n    }, {\n      \"summary\" : \"summary\",\n      \"img\" : \"img\",\n      \"keyHtml\" : \"keyHtml\",\n      \"summaryText\" : \"summaryText\",\n      \"id\" : 0,\n      \"key\" : \"key\"\n    } ]\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<IssuePickerSuggestions>(exampleJson)
            : default(IssuePickerSuggestions);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Check issues against JQL
        /// </summary>
        /// <remarks>Checks whether one or more issues would be returned by one or more JQL queries.  **[Permissions](#permissions) required:** None, however, issues are only matched against JQL queries where the user has:   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.  *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.</remarks>
        /// <param name="issuesAndJQLQueries"></param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if &#x60;jqls&#x60; exceeds the maximum number of JQL queries or &#x60;issueIds&#x60; exceeds the maximum number of issue IDs.</response>
        [HttpPost]
        [Route("/rest/api/3/jql/match")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("MatchIssues")]
        [SwaggerResponse(statusCode: 200, type: typeof(IssueMatches), description: "Returned if the request is successful.")]
        public virtual IActionResult MatchIssues([FromBody]IssuesAndJQLQueries issuesAndJQLQueries)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(IssueMatches));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            string exampleJson = null;
            exampleJson = "{\n  \"matches\" : [ {\n    \"errors\" : [ \"errors\", \"errors\" ],\n    \"matchedIssues\" : [ 0, 0 ]\n  }, {\n    \"errors\" : [ \"errors\", \"errors\" ],\n    \"matchedIssues\" : [ 0, 0 ]\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<IssueMatches>(exampleJson)
            : default(IssueMatches);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Search for issues using JQL (GET)
        /// </summary>
        /// <remarks>Searches for issues using [JQL](https://confluence.atlassian.com/x/egORLQ).  If the JQL query expression is too large to be encoded as a query parameter, use the [POST](#api-rest-api-3-search-post) version of this resource.  This operation can be accessed anonymously.  **[Permissions](#permissions) required:** Issues are included in the response where the user has:   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.  *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.</remarks>
        /// <param name="jql">The [JQL](https://confluence.atlassian.com/x/egORLQ) that defines the search. Note:   *  If no JQL expression is provided, all issues are returned.  *  &#x60;username&#x60; and &#x60;userkey&#x60; cannot be used as search terms due to privacy reasons. Use &#x60;accountId&#x60; instead.  *  If a user has hidden their email address in their user profile, partial matches of the email address will not find the user. An exact match is required.</param>
        /// <param name="startAt">The index of the first item to return in a page of results (page offset).</param>
        /// <param name="maxResults">The maximum number of items to return per page. To manage page size, Jira may return fewer items per page where a large number of fields are requested. The greatest number of items returned per page is achieved when requesting &#x60;id&#x60; or &#x60;key&#x60; only.</param>
        /// <param name="validateQuery">Determines how to validate the JQL query and treat the validation results. Supported values are:   *  &#x60;strict&#x60; Returns a 400 response code if any errors are found, along with a list of all errors (and warnings).  *  &#x60;warn&#x60; Returns all errors as warnings.  *  &#x60;none&#x60; No validation is performed.  *  &#x60;true&#x60; *Deprecated* A legacy synonym for &#x60;strict&#x60;.  *  &#x60;false&#x60; *Deprecated* A legacy synonym for &#x60;warn&#x60;.  Note: If the JQL is not correctly formed a 400 response code is returned, regardless of the &#x60;validateQuery&#x60; value.</param>
        /// <param name="fields">A list of fields to return for each issue, use it to retrieve a subset of fields. This parameter accepts a comma-separated list. Expand options include:   *  &#x60;*all&#x60; Returns all fields.  *  &#x60;*navigable&#x60; Returns navigable fields.  *  Any issue field, prefixed with a minus to exclude.  Examples:   *  &#x60;summary,comment&#x60; Returns only the summary and comments fields.  *  &#x60;-description&#x60; Returns all navigable (default) fields except description.  *  &#x60;*all,-comment&#x60; Returns all fields except comments.  This parameter may be specified multiple times. For example, &#x60;fields&#x3D;field1,field2&amp;fields&#x3D;field3&#x60;.  Note: All navigable fields are returned by default. This differs from [GET issue](#api-rest-api-3-issue-issueIdOrKey-get) where the default is all fields.</param>
        /// <param name="expand">Use [expand](#expansion) to include additional information about issues in the response. This parameter accepts a comma-separated list. Expand options include:   *  &#x60;renderedFields&#x60; Returns field values rendered in HTML format.  *  &#x60;names&#x60; Returns the display name of each field.  *  &#x60;schema&#x60; Returns the schema describing a field type.  *  &#x60;transitions&#x60; Returns all possible transitions for the issue.  *  &#x60;operations&#x60; Returns all possible operations for the issue.  *  &#x60;editmeta&#x60; Returns information about how each field can be edited.  *  &#x60;changelog&#x60; Returns a list of recent updates to an issue, sorted by date, starting from the most recent.  *  &#x60;versionedRepresentations&#x60; Instead of &#x60;fields&#x60;, returns &#x60;versionedRepresentations&#x60; a JSON array containing each version of a field&#39;s value, with the highest numbered item representing the most recent version.</param>
        /// <param name="properties">A list of issue property keys for issue properties to include in the results. This parameter accepts a comma-separated list. Multiple properties can also be provided using an ampersand separated list. For example, &#x60;properties&#x3D;prop1,prop2&amp;properties&#x3D;prop3&#x60;. A maximum of 5 issue property keys can be specified.</param>
        /// <param name="fieldsByKeys">Reference fields by their key (rather than ID).</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the JQL query is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        [HttpGet]
        [Route("/rest/api/3/search")]
        [ValidateModelState]
        [SwaggerOperation("SearchForIssuesUsingJql")]
        [SwaggerResponse(statusCode: 200, type: typeof(SearchResults), description: "Returned if the request is successful.")]
        public virtual IActionResult SearchForIssuesUsingJql([FromQuery (Name = "jql")]string jql, [FromQuery (Name = "startAt")]int? startAt, [FromQuery (Name = "maxResults")]int? maxResults, [FromQuery (Name = "validateQuery")]string validateQuery, [FromQuery (Name = "fields")]List<string> fields, [FromQuery (Name = "expand")]string expand, [FromQuery (Name = "properties")]List<string> properties, [FromQuery (Name = "fieldsByKeys")]bool? fieldsByKeys)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SearchResults));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            string exampleJson = null;
            exampleJson = "{\n  \"schema\" : {\n    \"key\" : {\n      \"system\" : \"system\",\n      \"configuration\" : {\n        \"key\" : \"\"\n      },\n      \"custom\" : \"custom\",\n      \"type\" : \"type\",\n      \"customId\" : 2,\n      \"items\" : \"items\"\n    }\n  },\n  \"warningMessages\" : [ \"warningMessages\", \"warningMessages\" ],\n  \"expand\" : \"expand\",\n  \"total\" : 1,\n  \"names\" : {\n    \"key\" : \"names\"\n  },\n  \"maxResults\" : 0,\n  \"issues\" : [ {\n    \"schema\" : {\n      \"key\" : {\n        \"system\" : \"system\",\n        \"configuration\" : {\n          \"key\" : \"\"\n        },\n        \"custom\" : \"custom\",\n        \"type\" : \"type\",\n        \"customId\" : 2,\n        \"items\" : \"items\"\n      }\n    },\n    \"fieldsToInclude\" : {\n      \"excluded\" : [ \"excluded\", \"excluded\" ],\n      \"actuallyIncluded\" : [ \"actuallyIncluded\", \"actuallyIncluded\" ],\n      \"included\" : [ \"included\", \"included\" ]\n    },\n    \"transitions\" : [ {\n      \"hasScreen\" : true,\n      \"isAvailable\" : true,\n      \"expand\" : \"expand\",\n      \"isGlobal\" : true,\n      \"isInitial\" : true,\n      \"looped\" : true,\n      \"name\" : \"name\",\n      \"id\" : \"id\",\n      \"isConditional\" : true,\n      \"fields\" : {\n        \"key\" : {\n          \"allowedValues\" : [ \"\", \"\" ],\n          \"hasDefaultValue\" : true,\n          \"operations\" : [ \"operations\", \"operations\" ],\n          \"configuration\" : {\n            \"key\" : \"\"\n          },\n          \"defaultValue\" : \"\",\n          \"name\" : \"name\",\n          \"autoCompleteUrl\" : \"autoCompleteUrl\",\n          \"key\" : \"key\",\n          \"required\" : true\n        }\n      }\n    }, {\n      \"hasScreen\" : true,\n      \"isAvailable\" : true,\n      \"expand\" : \"expand\",\n      \"isGlobal\" : true,\n      \"isInitial\" : true,\n      \"looped\" : true,\n      \"name\" : \"name\",\n      \"id\" : \"id\",\n      \"isConditional\" : true,\n      \"fields\" : {\n        \"key\" : {\n          \"allowedValues\" : [ \"\", \"\" ],\n          \"hasDefaultValue\" : true,\n          \"operations\" : [ \"operations\", \"operations\" ],\n          \"configuration\" : {\n            \"key\" : \"\"\n          },\n          \"defaultValue\" : \"\",\n          \"name\" : \"name\",\n          \"autoCompleteUrl\" : \"autoCompleteUrl\",\n          \"key\" : \"key\",\n          \"required\" : true\n        }\n      }\n    } ],\n    \"renderedFields\" : {\n      \"key\" : \"\"\n    },\n    \"expand\" : \"expand\",\n    \"names\" : {\n      \"key\" : \"names\"\n    },\n    \"versionedRepresentations\" : {\n      \"key\" : {\n        \"key\" : \"\"\n      }\n    },\n    \"self\" : \"https://openapi-generator.tech\",\n    \"id\" : \"id\",\n    \"fields\" : {\n      \"key\" : \"\"\n    },\n    \"key\" : \"key\",\n    \"properties\" : {\n      \"key\" : \"\"\n    }\n  }, {\n    \"schema\" : {\n      \"key\" : {\n        \"system\" : \"system\",\n        \"configuration\" : {\n          \"key\" : \"\"\n        },\n        \"custom\" : \"custom\",\n        \"type\" : \"type\",\n        \"customId\" : 2,\n        \"items\" : \"items\"\n      }\n    },\n    \"fieldsToInclude\" : {\n      \"excluded\" : [ \"excluded\", \"excluded\" ],\n      \"actuallyIncluded\" : [ \"actuallyIncluded\", \"actuallyIncluded\" ],\n      \"included\" : [ \"included\", \"included\" ]\n    },\n    \"transitions\" : [ {\n      \"hasScreen\" : true,\n      \"isAvailable\" : true,\n      \"expand\" : \"expand\",\n      \"isGlobal\" : true,\n      \"isInitial\" : true,\n      \"looped\" : true,\n      \"name\" : \"name\",\n      \"id\" : \"id\",\n      \"isConditional\" : true,\n      \"fields\" : {\n        \"key\" : {\n          \"allowedValues\" : [ \"\", \"\" ],\n          \"hasDefaultValue\" : true,\n          \"operations\" : [ \"operations\", \"operations\" ],\n          \"configuration\" : {\n            \"key\" : \"\"\n          },\n          \"defaultValue\" : \"\",\n          \"name\" : \"name\",\n          \"autoCompleteUrl\" : \"autoCompleteUrl\",\n          \"key\" : \"key\",\n          \"required\" : true\n        }\n      }\n    }, {\n      \"hasScreen\" : true,\n      \"isAvailable\" : true,\n      \"expand\" : \"expand\",\n      \"isGlobal\" : true,\n      \"isInitial\" : true,\n      \"looped\" : true,\n      \"name\" : \"name\",\n      \"id\" : \"id\",\n      \"isConditional\" : true,\n      \"fields\" : {\n        \"key\" : {\n          \"allowedValues\" : [ \"\", \"\" ],\n          \"hasDefaultValue\" : true,\n          \"operations\" : [ \"operations\", \"operations\" ],\n          \"configuration\" : {\n            \"key\" : \"\"\n          },\n          \"defaultValue\" : \"\",\n          \"name\" : \"name\",\n          \"autoCompleteUrl\" : \"autoCompleteUrl\",\n          \"key\" : \"key\",\n          \"required\" : true\n        }\n      }\n    } ],\n    \"renderedFields\" : {\n      \"key\" : \"\"\n    },\n    \"expand\" : \"expand\",\n    \"names\" : {\n      \"key\" : \"names\"\n    },\n    \"versionedRepresentations\" : {\n      \"key\" : {\n        \"key\" : \"\"\n      }\n    },\n    \"self\" : \"https://openapi-generator.tech\",\n    \"id\" : \"id\",\n    \"fields\" : {\n      \"key\" : \"\"\n    },\n    \"key\" : \"key\",\n    \"properties\" : {\n      \"key\" : \"\"\n    }\n  } ],\n  \"startAt\" : 6\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<SearchResults>(exampleJson)
            : default(SearchResults);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Search for issues using JQL (POST)
        /// </summary>
        /// <remarks>Searches for issues using [JQL](https://confluence.atlassian.com/x/egORLQ).  There is a [GET](#api-rest-api-3-search-get) version of this resource that can be used for smaller JQL query expressions.  This operation can be accessed anonymously.  **[Permissions](#permissions) required:** Issues are included in the response where the user has:   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.  *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.</remarks>
        /// <param name="searchRequestBean">A JSON object containing the search request.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the JQL query is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        [HttpPost]
        [Route("/rest/api/3/search")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("SearchForIssuesUsingJqlPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(SearchResults), description: "Returned if the request is successful.")]
        public virtual IActionResult SearchForIssuesUsingJqlPost([FromBody]SearchRequestBean searchRequestBean)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SearchResults));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            string exampleJson = null;
            exampleJson = "{\n  \"schema\" : {\n    \"key\" : {\n      \"system\" : \"system\",\n      \"configuration\" : {\n        \"key\" : \"\"\n      },\n      \"custom\" : \"custom\",\n      \"type\" : \"type\",\n      \"customId\" : 2,\n      \"items\" : \"items\"\n    }\n  },\n  \"warningMessages\" : [ \"warningMessages\", \"warningMessages\" ],\n  \"expand\" : \"expand\",\n  \"total\" : 1,\n  \"names\" : {\n    \"key\" : \"names\"\n  },\n  \"maxResults\" : 0,\n  \"issues\" : [ {\n    \"schema\" : {\n      \"key\" : {\n        \"system\" : \"system\",\n        \"configuration\" : {\n          \"key\" : \"\"\n        },\n        \"custom\" : \"custom\",\n        \"type\" : \"type\",\n        \"customId\" : 2,\n        \"items\" : \"items\"\n      }\n    },\n    \"fieldsToInclude\" : {\n      \"excluded\" : [ \"excluded\", \"excluded\" ],\n      \"actuallyIncluded\" : [ \"actuallyIncluded\", \"actuallyIncluded\" ],\n      \"included\" : [ \"included\", \"included\" ]\n    },\n    \"transitions\" : [ {\n      \"hasScreen\" : true,\n      \"isAvailable\" : true,\n      \"expand\" : \"expand\",\n      \"isGlobal\" : true,\n      \"isInitial\" : true,\n      \"looped\" : true,\n      \"name\" : \"name\",\n      \"id\" : \"id\",\n      \"isConditional\" : true,\n      \"fields\" : {\n        \"key\" : {\n          \"allowedValues\" : [ \"\", \"\" ],\n          \"hasDefaultValue\" : true,\n          \"operations\" : [ \"operations\", \"operations\" ],\n          \"configuration\" : {\n            \"key\" : \"\"\n          },\n          \"defaultValue\" : \"\",\n          \"name\" : \"name\",\n          \"autoCompleteUrl\" : \"autoCompleteUrl\",\n          \"key\" : \"key\",\n          \"required\" : true\n        }\n      }\n    }, {\n      \"hasScreen\" : true,\n      \"isAvailable\" : true,\n      \"expand\" : \"expand\",\n      \"isGlobal\" : true,\n      \"isInitial\" : true,\n      \"looped\" : true,\n      \"name\" : \"name\",\n      \"id\" : \"id\",\n      \"isConditional\" : true,\n      \"fields\" : {\n        \"key\" : {\n          \"allowedValues\" : [ \"\", \"\" ],\n          \"hasDefaultValue\" : true,\n          \"operations\" : [ \"operations\", \"operations\" ],\n          \"configuration\" : {\n            \"key\" : \"\"\n          },\n          \"defaultValue\" : \"\",\n          \"name\" : \"name\",\n          \"autoCompleteUrl\" : \"autoCompleteUrl\",\n          \"key\" : \"key\",\n          \"required\" : true\n        }\n      }\n    } ],\n    \"renderedFields\" : {\n      \"key\" : \"\"\n    },\n    \"expand\" : \"expand\",\n    \"names\" : {\n      \"key\" : \"names\"\n    },\n    \"versionedRepresentations\" : {\n      \"key\" : {\n        \"key\" : \"\"\n      }\n    },\n    \"self\" : \"https://openapi-generator.tech\",\n    \"id\" : \"id\",\n    \"fields\" : {\n      \"key\" : \"\"\n    },\n    \"key\" : \"key\",\n    \"properties\" : {\n      \"key\" : \"\"\n    }\n  }, {\n    \"schema\" : {\n      \"key\" : {\n        \"system\" : \"system\",\n        \"configuration\" : {\n          \"key\" : \"\"\n        },\n        \"custom\" : \"custom\",\n        \"type\" : \"type\",\n        \"customId\" : 2,\n        \"items\" : \"items\"\n      }\n    },\n    \"fieldsToInclude\" : {\n      \"excluded\" : [ \"excluded\", \"excluded\" ],\n      \"actuallyIncluded\" : [ \"actuallyIncluded\", \"actuallyIncluded\" ],\n      \"included\" : [ \"included\", \"included\" ]\n    },\n    \"transitions\" : [ {\n      \"hasScreen\" : true,\n      \"isAvailable\" : true,\n      \"expand\" : \"expand\",\n      \"isGlobal\" : true,\n      \"isInitial\" : true,\n      \"looped\" : true,\n      \"name\" : \"name\",\n      \"id\" : \"id\",\n      \"isConditional\" : true,\n      \"fields\" : {\n        \"key\" : {\n          \"allowedValues\" : [ \"\", \"\" ],\n          \"hasDefaultValue\" : true,\n          \"operations\" : [ \"operations\", \"operations\" ],\n          \"configuration\" : {\n            \"key\" : \"\"\n          },\n          \"defaultValue\" : \"\",\n          \"name\" : \"name\",\n          \"autoCompleteUrl\" : \"autoCompleteUrl\",\n          \"key\" : \"key\",\n          \"required\" : true\n        }\n      }\n    }, {\n      \"hasScreen\" : true,\n      \"isAvailable\" : true,\n      \"expand\" : \"expand\",\n      \"isGlobal\" : true,\n      \"isInitial\" : true,\n      \"looped\" : true,\n      \"name\" : \"name\",\n      \"id\" : \"id\",\n      \"isConditional\" : true,\n      \"fields\" : {\n        \"key\" : {\n          \"allowedValues\" : [ \"\", \"\" ],\n          \"hasDefaultValue\" : true,\n          \"operations\" : [ \"operations\", \"operations\" ],\n          \"configuration\" : {\n            \"key\" : \"\"\n          },\n          \"defaultValue\" : \"\",\n          \"name\" : \"name\",\n          \"autoCompleteUrl\" : \"autoCompleteUrl\",\n          \"key\" : \"key\",\n          \"required\" : true\n        }\n      }\n    } ],\n    \"renderedFields\" : {\n      \"key\" : \"\"\n    },\n    \"expand\" : \"expand\",\n    \"names\" : {\n      \"key\" : \"names\"\n    },\n    \"versionedRepresentations\" : {\n      \"key\" : {\n        \"key\" : \"\"\n      }\n    },\n    \"self\" : \"https://openapi-generator.tech\",\n    \"id\" : \"id\",\n    \"fields\" : {\n      \"key\" : \"\"\n    },\n    \"key\" : \"key\",\n    \"properties\" : {\n      \"key\" : \"\"\n    }\n  } ],\n  \"startAt\" : 6\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<SearchResults>(exampleJson)
            : default(SearchResults);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
