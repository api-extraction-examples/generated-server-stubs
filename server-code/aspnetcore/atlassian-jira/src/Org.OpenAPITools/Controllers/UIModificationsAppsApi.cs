/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class UIModificationsAppsApiController : ControllerBase
    { 
        /// <summary>
        /// Create UI modification
        /// </summary>
        /// <remarks>Creates a UI modification. UI modification can only be created by Forge apps.  Each app can define up to 100 UI modifications. Each UI modification can define up to 1000 contexts.  **[Permissions](#permissions) required:**   *  *None* if the UI modification is created without contexts.  *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for one or more projects, if the UI modification is created with contexts.</remarks>
        /// <param name="createUiModificationDetails">Details of the UI modification.</param>
        /// <response code="201">Returned if the UI modification is created.</response>
        /// <response code="400">Returned if the request is not valid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the request is not from a Forge app.</response>
        /// <response code="404">Returned if a project or an issue type in the context are not found.</response>
        [HttpPost]
        [Route("/rest/api/3/uiModifications")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("CreateUiModification")]
        [SwaggerResponse(statusCode: 201, type: typeof(UiModificationIdentifiers), description: "Returned if the UI modification is created.")]
        public virtual IActionResult CreateUiModification([FromBody]CreateUiModificationDetails createUiModificationDetails)
        {

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(UiModificationIdentifiers));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"self\" : \"self\",\n  \"id\" : \"id\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<UiModificationIdentifiers>(exampleJson)
            : default(UiModificationIdentifiers);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Delete UI modification
        /// </summary>
        /// <remarks>Deletes a UI modification. All the contexts that belong to the UI modification are deleted too. UI modification can only be deleted by Forge apps.  **[Permissions](#permissions) required:** None.</remarks>
        /// <param name="uiModificationId">The ID of the UI modification.</param>
        /// <response code="204">Returned if the UI modification is deleted.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the request is not from a Forge app.</response>
        /// <response code="404">Returned if the UI modification is not found.</response>
        [HttpDelete]
        [Route("/rest/api/3/uiModifications/{uiModificationId}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteUiModification")]
        [SwaggerResponse(statusCode: 204, type: typeof(Object), description: "Returned if the UI modification is deleted.")]
        public virtual IActionResult DeleteUiModification([FromRoute (Name = "uiModificationId")][Required]string uiModificationId)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204, default(Object));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default(Object);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get UI modifications
        /// </summary>
        /// <remarks>Gets UI modifications. UI modifications can only be retrieved by Forge apps.  **[Permissions](#permissions) required:** None.</remarks>
        /// <param name="startAt">The index of the first item to return in a page of results (page offset).</param>
        /// <param name="maxResults">The maximum number of items to return per page.</param>
        /// <param name="expand">Use expand to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:   *  &#x60;data&#x60; Returns UI modification data.  *  &#x60;contexts&#x60; Returns UI modification contexts.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is not valid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the request is not from a Forge app.</response>
        [HttpGet]
        [Route("/rest/api/3/uiModifications")]
        [ValidateModelState]
        [SwaggerOperation("GetUiModifications")]
        [SwaggerResponse(statusCode: 200, type: typeof(PageBeanUiModificationDetails), description: "Returned if the request is successful.")]
        public virtual IActionResult GetUiModifications([FromQuery (Name = "startAt")]long? startAt, [FromQuery (Name = "maxResults")]int? maxResults, [FromQuery (Name = "expand")]string expand)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PageBeanUiModificationDetails));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            string exampleJson = null;
            exampleJson = "{\n  \"total\" : 1,\n  \"isLast\" : true,\n  \"maxResults\" : 0,\n  \"nextPage\" : \"https://openapi-generator.tech\",\n  \"values\" : [ {\n    \"data\" : \"data\",\n    \"name\" : \"name\",\n    \"description\" : \"description\",\n    \"self\" : \"self\",\n    \"contexts\" : [ {\n      \"isAvailable\" : true,\n      \"issueTypeId\" : \"issueTypeId\",\n      \"viewType\" : \"viewType\",\n      \"id\" : \"id\",\n      \"projectId\" : \"projectId\"\n    }, {\n      \"isAvailable\" : true,\n      \"issueTypeId\" : \"issueTypeId\",\n      \"viewType\" : \"viewType\",\n      \"id\" : \"id\",\n      \"projectId\" : \"projectId\"\n    } ],\n    \"id\" : \"id\"\n  }, {\n    \"data\" : \"data\",\n    \"name\" : \"name\",\n    \"description\" : \"description\",\n    \"self\" : \"self\",\n    \"contexts\" : [ {\n      \"isAvailable\" : true,\n      \"issueTypeId\" : \"issueTypeId\",\n      \"viewType\" : \"viewType\",\n      \"id\" : \"id\",\n      \"projectId\" : \"projectId\"\n    }, {\n      \"isAvailable\" : true,\n      \"issueTypeId\" : \"issueTypeId\",\n      \"viewType\" : \"viewType\",\n      \"id\" : \"id\",\n      \"projectId\" : \"projectId\"\n    } ],\n    \"id\" : \"id\"\n  } ],\n  \"self\" : \"https://openapi-generator.tech\",\n  \"startAt\" : 6\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PageBeanUiModificationDetails>(exampleJson)
            : default(PageBeanUiModificationDetails);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update UI modification
        /// </summary>
        /// <remarks>Updates a UI modification. UI modification can only be updated by Forge apps.  Each UI modification can define up to 1000 contexts.  **[Permissions](#permissions) required:**   *  *None* if the UI modification is created without contexts.  *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for one or more projects, if the UI modification is created with contexts.</remarks>
        /// <param name="uiModificationId">The ID of the UI modification.</param>
        /// <param name="updateUiModificationDetails">Details of the UI modification.</param>
        /// <response code="204">Returned if the UI modification is updated.</response>
        /// <response code="400">Returned if the request is not valid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the request is not from a Forge app.</response>
        /// <response code="404">Returned if the UI modification, a project or an issue type in the context are not found.</response>
        [HttpPut]
        [Route("/rest/api/3/uiModifications/{uiModificationId}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("UpdateUiModification")]
        [SwaggerResponse(statusCode: 204, type: typeof(Object), description: "Returned if the UI modification is updated.")]
        public virtual IActionResult UpdateUiModification([FromRoute (Name = "uiModificationId")][Required]string uiModificationId, [FromBody]UpdateUiModificationDetails updateUiModificationDetails)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204, default(Object));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default(Object);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
