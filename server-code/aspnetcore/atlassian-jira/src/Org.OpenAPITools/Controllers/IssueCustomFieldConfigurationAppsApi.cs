/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class IssueCustomFieldConfigurationAppsApiController : ControllerBase
    { 
        /// <summary>
        /// Get custom field configurations
        /// </summary>
        /// <remarks>Returns a [paginated](#pagination) list of configurations for a custom field created by a [Forge app](https://developer.atlassian.com/platform/forge/).  The result can be filtered by one of these criteria:   *  &#x60;id&#x60;.  *  &#x60;fieldContextId&#x60;.  *  &#x60;issueId&#x60;.  *  &#x60;projectKeyOrId&#x60; and &#x60;issueTypeId&#x60;.  Otherwise, all configurations are returned.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg). Jira permissions are not required for the Forge app that created the custom field.</remarks>
        /// <param name="fieldIdOrKey">The ID or key of the custom field, for example &#x60;customfield_10000&#x60;.</param>
        /// <param name="id">The list of configuration IDs. To include multiple configurations, separate IDs with an ampersand: &#x60;id&#x3D;10000&amp;id&#x3D;10001&#x60;. Can&#39;t be provided with &#x60;fieldContextId&#x60;, &#x60;issueId&#x60;, &#x60;projectKeyOrId&#x60;, or &#x60;issueTypeId&#x60;.</param>
        /// <param name="fieldContextId">The list of field context IDs. To include multiple field contexts, separate IDs with an ampersand: &#x60;fieldContextId&#x3D;10000&amp;fieldContextId&#x3D;10001&#x60;. Can&#39;t be provided with &#x60;id&#x60;, &#x60;issueId&#x60;, &#x60;projectKeyOrId&#x60;, or &#x60;issueTypeId&#x60;.</param>
        /// <param name="issueId">The ID of the issue to filter results by. If the issue doesn&#39;t exist, an empty list is returned. Can&#39;t be provided with &#x60;projectKeyOrId&#x60;, or &#x60;issueTypeId&#x60;.</param>
        /// <param name="projectKeyOrId">The ID or key of the project to filter results by. Must be provided with &#x60;issueTypeId&#x60;. Can&#39;t be provided with &#x60;issueId&#x60;.</param>
        /// <param name="issueTypeId">The ID of the issue type to filter results by. Must be provided with &#x60;projectKeyOrId&#x60;. Can&#39;t be provided with &#x60;issueId&#x60;.</param>
        /// <param name="startAt">The index of the first item to return in a page of results (page offset).</param>
        /// <param name="maxResults">The maximum number of items to return per page.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user is not a Jira admin or the request is not authenticated as from the app that provided the field.</response>
        /// <response code="404">Returned if the custom field is not found.</response>
        [HttpGet]
        [Route("/rest/api/3/app/field/{fieldIdOrKey}/context/configuration")]
        [ValidateModelState]
        [SwaggerOperation("GetCustomFieldConfiguration")]
        [SwaggerResponse(statusCode: 200, type: typeof(PageBeanContextualConfiguration), description: "Returned if the request is successful.")]
        public virtual IActionResult GetCustomFieldConfiguration([FromRoute (Name = "fieldIdOrKey")][Required]string fieldIdOrKey, [FromQuery (Name = "id")]List<long> id, [FromQuery (Name = "fieldContextId")]List<long> fieldContextId, [FromQuery (Name = "issueId")]long? issueId, [FromQuery (Name = "projectKeyOrId")]string projectKeyOrId, [FromQuery (Name = "issueTypeId")]string issueTypeId, [FromQuery (Name = "startAt")]long? startAt, [FromQuery (Name = "maxResults")]int? maxResults)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PageBeanContextualConfiguration));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"total\" : 1,\n  \"isLast\" : true,\n  \"maxResults\" : 0,\n  \"nextPage\" : \"https://openapi-generator.tech\",\n  \"values\" : [ {\n    \"fieldContextId\" : \"fieldContextId\",\n    \"schema\" : \"\",\n    \"configuration\" : \"\",\n    \"id\" : \"id\"\n  }, {\n    \"fieldContextId\" : \"fieldContextId\",\n    \"schema\" : \"\",\n    \"configuration\" : \"\",\n    \"id\" : \"id\"\n  } ],\n  \"self\" : \"https://openapi-generator.tech\",\n  \"startAt\" : 6\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PageBeanContextualConfiguration>(exampleJson)
            : default(PageBeanContextualConfiguration);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update custom field configurations
        /// </summary>
        /// <remarks>Update the configuration for contexts of a custom field created by a [Forge app](https://developer.atlassian.com/platform/forge/).  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg). Jira permissions are not required for the Forge app that created the custom field.</remarks>
        /// <param name="fieldIdOrKey">The ID or key of the custom field, for example &#x60;customfield_10000&#x60;.</param>
        /// <param name="customFieldConfigurations"></param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user is not a Jira admin or the request is not authenticated as from the app that provided the field.</response>
        /// <response code="404">Returned if the custom field is not found.</response>
        [HttpPut]
        [Route("/rest/api/3/app/field/{fieldIdOrKey}/context/configuration")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("UpdateCustomFieldConfiguration")]
        [SwaggerResponse(statusCode: 200, type: typeof(Object), description: "Returned if the request is successful.")]
        public virtual IActionResult UpdateCustomFieldConfiguration([FromRoute (Name = "fieldIdOrKey")][Required]string fieldIdOrKey, [FromBody]CustomFieldConfigurations customFieldConfigurations)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Object));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default(Object);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
