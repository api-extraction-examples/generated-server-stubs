/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ProjectCategoriesApiController : ControllerBase
    { 
        /// <summary>
        /// Create project category
        /// </summary>
        /// <remarks>Creates a project category.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="projectCategory"></param>
        /// <response code="201">Returned if the request is successful.</response>
        /// <response code="400">Returned if:   *  &#x60;name&#x60; is not provided or exceeds 255 characters.  *  &#x60;description&#x60; exceeds 1000 characters.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        /// <response code="409">Returned if the project category name is in use.</response>
        [HttpPost]
        [Route("/rest/api/3/projectCategory")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("CreateProjectCategory")]
        [SwaggerResponse(statusCode: 201, type: typeof(ProjectCategory), description: "Returned if the request is successful.")]
        public virtual IActionResult CreateProjectCategory([FromBody]ProjectCategory projectCategory)
        {

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(ProjectCategory));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409);
            string exampleJson = null;
            exampleJson = "{\n  \"name\" : \"name\",\n  \"description\" : \"description\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : \"id\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ProjectCategory>(exampleJson)
            : default(ProjectCategory);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get all project categories
        /// </summary>
        /// <remarks>Returns all project categories.  **[Permissions](#permissions) required:** Permission to access Jira.</remarks>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        [HttpGet]
        [Route("/rest/api/3/projectCategory")]
        [ValidateModelState]
        [SwaggerOperation("GetAllProjectCategories")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ProjectCategory>), description: "Returned if the request is successful.")]
        public virtual IActionResult GetAllProjectCategories()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ProjectCategory>));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            string exampleJson = null;
            exampleJson = "[ {\n  \"name\" : \"name\",\n  \"description\" : \"description\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : \"id\"\n}, {\n  \"name\" : \"name\",\n  \"description\" : \"description\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : \"id\"\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ProjectCategory>>(exampleJson)
            : default(List<ProjectCategory>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get project category by ID
        /// </summary>
        /// <remarks>Returns a project category.  **[Permissions](#permissions) required:** Permission to access Jira.</remarks>
        /// <param name="id">The ID of the project category.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="404">Returned if the project category is not found.</response>
        [HttpGet]
        [Route("/rest/api/3/projectCategory/{id}")]
        [ValidateModelState]
        [SwaggerOperation("GetProjectCategoryById")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProjectCategory), description: "Returned if the request is successful.")]
        public virtual IActionResult GetProjectCategoryById([FromRoute (Name = "id")][Required]long id)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ProjectCategory));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"name\" : \"name\",\n  \"description\" : \"description\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : \"id\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ProjectCategory>(exampleJson)
            : default(ProjectCategory);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Delete project category
        /// </summary>
        /// <remarks>Deletes a project category.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id">ID of the project category to delete.</param>
        /// <response code="204">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        /// <response code="404">Returned if the project category is not found.</response>
        [HttpDelete]
        [Route("/rest/api/3/projectCategory/{id}")]
        [ValidateModelState]
        [SwaggerOperation("RemoveProjectCategory")]
        public virtual IActionResult RemoveProjectCategory([FromRoute (Name = "id")][Required]long id)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Update project category
        /// </summary>
        /// <remarks>Updates a project category.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id"></param>
        /// <param name="projectCategory"></param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if:   *  &#x60;name&#x60; has been modified and exceeds 255 characters.  *  &#x60;description&#x60; has been modified and exceeds 1000 characters.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        /// <response code="404">Returned if the project category is not found.</response>
        [HttpPut]
        [Route("/rest/api/3/projectCategory/{id}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("UpdateProjectCategory")]
        [SwaggerResponse(statusCode: 200, type: typeof(UpdatedProjectCategory), description: "Returned if the request is successful.")]
        public virtual IActionResult UpdateProjectCategory([FromRoute (Name = "id")][Required]long id, [FromBody]ProjectCategory projectCategory)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(UpdatedProjectCategory));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"name\" : \"name\",\n  \"description\" : \"description\",\n  \"self\" : \"self\",\n  \"id\" : \"id\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<UpdatedProjectCategory>(exampleJson)
            : default(UpdatedProjectCategory);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
