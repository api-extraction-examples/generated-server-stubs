/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class TimeTrackingApiController : ControllerBase
    { 
        /// <summary>
        /// Get all time tracking providers
        /// </summary>
        /// <remarks>Returns all time tracking providers. By default, Jira only has one time tracking provider: *JIRA provided time tracking*. However, you can install other time tracking providers via apps from the Atlassian Marketplace. For more information on time tracking providers, see the documentation for the [ Time Tracking Provider](https://developer.atlassian.com/cloud/jira/platform/modules/time-tracking-provider/) module.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        [HttpGet]
        [Route("/rest/api/3/configuration/timetracking/list")]
        [ValidateModelState]
        [SwaggerOperation("GetAvailableTimeTrackingImplementations")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<TimeTrackingProvider>), description: "Returned if the request is successful.")]
        public virtual IActionResult GetAvailableTimeTrackingImplementations()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<TimeTrackingProvider>));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            string exampleJson = null;
            exampleJson = "[ {\n  \"name\" : \"name\",\n  \"key\" : \"key\",\n  \"url\" : \"url\"\n}, {\n  \"name\" : \"name\",\n  \"key\" : \"key\",\n  \"url\" : \"url\"\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<TimeTrackingProvider>>(exampleJson)
            : default(List<TimeTrackingProvider>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get selected time tracking provider
        /// </summary>
        /// <remarks>Returns the time tracking provider that is currently selected. Note that if time tracking is disabled, then a successful but empty response is returned.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <response code="200">Returned if the request is successful and time tracking is enabled.</response>
        /// <response code="204">Returned if the request is successful but time tracking is disabled.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        [HttpGet]
        [Route("/rest/api/3/configuration/timetracking")]
        [ValidateModelState]
        [SwaggerOperation("GetSelectedTimeTrackingImplementation")]
        [SwaggerResponse(statusCode: 200, type: typeof(TimeTrackingProvider), description: "Returned if the request is successful and time tracking is enabled.")]
        [SwaggerResponse(statusCode: 204, type: typeof(Object), description: "Returned if the request is successful but time tracking is disabled.")]
        public virtual IActionResult GetSelectedTimeTrackingImplementation()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(TimeTrackingProvider));
            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204, default(Object));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            string exampleJson = null;
            exampleJson = "{\n  \"name\" : \"name\",\n  \"key\" : \"key\",\n  \"url\" : \"url\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<TimeTrackingProvider>(exampleJson)
            : default(TimeTrackingProvider);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get time tracking settings
        /// </summary>
        /// <remarks>Returns the time tracking settings. This includes settings such as the time format, default time unit, and others. For more information, see [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        [HttpGet]
        [Route("/rest/api/3/configuration/timetracking/options")]
        [ValidateModelState]
        [SwaggerOperation("GetSharedTimeTrackingConfiguration")]
        [SwaggerResponse(statusCode: 200, type: typeof(TimeTrackingConfiguration), description: "Returned if the request is successful.")]
        public virtual IActionResult GetSharedTimeTrackingConfiguration()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(TimeTrackingConfiguration));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            string exampleJson = null;
            exampleJson = "{\n  \"defaultUnit\" : \"minute\",\n  \"workingHoursPerDay\" : 6.027456183070403,\n  \"timeFormat\" : \"pretty\",\n  \"workingDaysPerWeek\" : 0.8008281904610115\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<TimeTrackingConfiguration>(exampleJson)
            : default(TimeTrackingConfiguration);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Select time tracking provider
        /// </summary>
        /// <remarks>Selects a time tracking provider.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="timeTrackingProvider"></param>
        /// <response code="204">Returned if the request is successful.</response>
        /// <response code="400">Returned if the time tracking provider is not found.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        [HttpPut]
        [Route("/rest/api/3/configuration/timetracking")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("SelectTimeTrackingImplementation")]
        [SwaggerResponse(statusCode: 204, type: typeof(Object), description: "Returned if the request is successful.")]
        public virtual IActionResult SelectTimeTrackingImplementation([FromBody]TimeTrackingProvider timeTrackingProvider)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204, default(Object));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default(Object);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Set time tracking settings
        /// </summary>
        /// <remarks>Sets the time tracking settings.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="timeTrackingConfiguration"></param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request object is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        [HttpPut]
        [Route("/rest/api/3/configuration/timetracking/options")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("SetSharedTimeTrackingConfiguration")]
        [SwaggerResponse(statusCode: 200, type: typeof(TimeTrackingConfiguration), description: "Returned if the request is successful.")]
        public virtual IActionResult SetSharedTimeTrackingConfiguration([FromBody]TimeTrackingConfiguration timeTrackingConfiguration)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(TimeTrackingConfiguration));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            string exampleJson = null;
            exampleJson = "{\n  \"defaultUnit\" : \"minute\",\n  \"workingHoursPerDay\" : 6.027456183070403,\n  \"timeFormat\" : \"pretty\",\n  \"workingDaysPerWeek\" : 0.8008281904610115\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<TimeTrackingConfiguration>(exampleJson)
            : default(TimeTrackingConfiguration);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
