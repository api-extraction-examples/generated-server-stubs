/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class JQLFunctionsAppsApiController : ControllerBase
    { 
        /// <summary>
        /// Get precomputations (apps)
        /// </summary>
        /// <remarks>Returns the list of a function&#39;s precomputations along with information about when they were created, updated, and last used. Each precomputation has a &#x60;value&#x60; \\- the JQL fragment to replace the custom function clause with.  **[Permissions](#permissions) required:** This API is only accessible to apps and apps can only inspect their own functions.</remarks>
        /// <param name="functionKey">The function key in format:   *  Forge: &#x60;ari:cloud:ecosystem::extension/[App ID]/[Environment ID]/static/[Function key from manifest]&#x60;.  *  Connect: &#x60;[App key]__[Module key]&#x60;.</param>
        /// <param name="startAt">The index of the first item to return in a page of results (page offset).</param>
        /// <param name="maxResults">The maximum number of items to return per page.</param>
        /// <param name="orderBy">Not supported yet.</param>
        /// <param name="filter">Not supported yet.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the request is not authenticated as the app that provided the function.</response>
        /// <response code="404">Returned if the function is not found.</response>
        [HttpGet]
        [Route("/rest/api/3/jql/function/computation")]
        [ValidateModelState]
        [SwaggerOperation("GetPrecomputations")]
        [SwaggerResponse(statusCode: 200, type: typeof(PageBeanJqlFunctionPrecomputationBean), description: "Returned if the request is successful.")]
        public virtual IActionResult GetPrecomputations([FromQuery (Name = "functionKey")]List<string> functionKey, [FromQuery (Name = "startAt")]long? startAt, [FromQuery (Name = "maxResults")]int? maxResults, [FromQuery (Name = "orderBy")]string orderBy, [FromQuery (Name = "filter")]string filter)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PageBeanJqlFunctionPrecomputationBean));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"total\" : 1,\n  \"isLast\" : true,\n  \"maxResults\" : 0,\n  \"nextPage\" : \"https://openapi-generator.tech\",\n  \"values\" : [ {\n    \"field\" : \"field\",\n    \"functionName\" : \"functionName\",\n    \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"arguments\" : [ \"arguments\", \"arguments\" ],\n    \"id\" : \"id\",\n    \"used\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"functionKey\" : \"functionKey\",\n    \"updated\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"value\" : \"value\",\n    \"operator\" : \"operator\"\n  }, {\n    \"field\" : \"field\",\n    \"functionName\" : \"functionName\",\n    \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"arguments\" : [ \"arguments\", \"arguments\" ],\n    \"id\" : \"id\",\n    \"used\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"functionKey\" : \"functionKey\",\n    \"updated\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"value\" : \"value\",\n    \"operator\" : \"operator\"\n  } ],\n  \"self\" : \"https://openapi-generator.tech\",\n  \"startAt\" : 6\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PageBeanJqlFunctionPrecomputationBean>(exampleJson)
            : default(PageBeanJqlFunctionPrecomputationBean);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update precomputations (apps)
        /// </summary>
        /// <remarks>Update the precomputation value of a function created by a Forge/Connect app.  **[Permissions](#permissions) required:** An API for apps to update their own precomputations.</remarks>
        /// <param name="jqlFunctionPrecomputationUpdateRequestBean"></param>
        /// <response code="204">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid.</response>
        /// <response code="403">Returned if the request is not authenticated as the app that provided the function.</response>
        /// <response code="404">Returned if the function is not found.</response>
        [HttpPost]
        [Route("/rest/api/3/jql/function/computation")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("UpdatePrecomputations")]
        [SwaggerResponse(statusCode: 204, type: typeof(Object), description: "Returned if the request is successful.")]
        public virtual IActionResult UpdatePrecomputations([FromBody]JqlFunctionPrecomputationUpdateRequestBean jqlFunctionPrecomputationUpdateRequestBean)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204, default(Object));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default(Object);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
