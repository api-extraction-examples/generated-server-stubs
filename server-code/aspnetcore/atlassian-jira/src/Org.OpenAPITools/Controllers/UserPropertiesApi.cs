/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class UserPropertiesApiController : ControllerBase
    { 
        /// <summary>
        /// Delete user property
        /// </summary>
        /// <remarks>Deletes a property from a user.  Note: This operation does not access the [user properties](https://confluence.atlassian.com/x/8YxjL) created and maintained in Jira.  **[Permissions](#permissions) required:**   *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), to delete a property from any user.  *  Access to Jira, to delete a property from the calling user&#39;s record.</remarks>
        /// <param name="propertyKey">The key of the user&#39;s property.</param>
        /// <param name="accountId">The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.</param>
        /// <param name="userKey">This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.</param>
        /// <param name="username">This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.</param>
        /// <response code="204">Returned if the user property is deleted.</response>
        /// <response code="400">Returned if &#x60;accountId&#x60; is missing.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission or is not accessing their user record.</response>
        /// <response code="404">Returned if the user or the property is not found.</response>
        [HttpDelete]
        [Route("/rest/api/3/user/properties/{propertyKey}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteUserProperty")]
        public virtual IActionResult DeleteUserProperty([FromRoute (Name = "propertyKey")][Required]string propertyKey, [FromQuery (Name = "accountId")] [MaxLength(128)]string accountId, [FromQuery (Name = "userKey")]string userKey, [FromQuery (Name = "username")]string username)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Get user property
        /// </summary>
        /// <remarks>Returns the value of a user&#39;s property. If no property key is provided [Get user property keys](#api-rest-api-3-user-properties-get) is called.  Note: This operation does not access the [user properties](https://confluence.atlassian.com/x/8YxjL) created and maintained in Jira.  **[Permissions](#permissions) required:**   *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), to get a property from any user.  *  Access to Jira, to get a property from the calling user&#39;s record.</remarks>
        /// <param name="propertyKey">The key of the user&#39;s property.</param>
        /// <param name="accountId">The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.</param>
        /// <param name="userKey">This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.</param>
        /// <param name="username">This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if &#x60;accountId&#x60; is missing.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission or is not accessing their user record.</response>
        /// <response code="404">Returned if the user is not found.</response>
        [HttpGet]
        [Route("/rest/api/3/user/properties/{propertyKey}")]
        [ValidateModelState]
        [SwaggerOperation("GetUserProperty")]
        [SwaggerResponse(statusCode: 200, type: typeof(EntityProperty), description: "Returned if the request is successful.")]
        public virtual IActionResult GetUserProperty([FromRoute (Name = "propertyKey")][Required]string propertyKey, [FromQuery (Name = "accountId")] [MaxLength(128)]string accountId, [FromQuery (Name = "userKey")]string userKey, [FromQuery (Name = "username")]string username)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(EntityProperty));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"value\" : \"\",\n  \"key\" : \"key\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<EntityProperty>(exampleJson)
            : default(EntityProperty);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get user property keys
        /// </summary>
        /// <remarks>Returns the keys of all properties for a user.  Note: This operation does not access the [user properties](https://confluence.atlassian.com/x/8YxjL) created and maintained in Jira.  **[Permissions](#permissions) required:**   *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), to access the property keys on any user.  *  Access to Jira, to access the calling user&#39;s property keys.</remarks>
        /// <param name="accountId">The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.</param>
        /// <param name="userKey">This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.</param>
        /// <param name="username">This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if &#x60;accountId&#x60; is missing.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission or is not accessing their user record.</response>
        /// <response code="404">Returned if the user is not found.</response>
        [HttpGet]
        [Route("/rest/api/3/user/properties")]
        [ValidateModelState]
        [SwaggerOperation("GetUserPropertyKeys")]
        [SwaggerResponse(statusCode: 200, type: typeof(PropertyKeys), description: "Returned if the request is successful.")]
        public virtual IActionResult GetUserPropertyKeys([FromQuery (Name = "accountId")] [MaxLength(128)]string accountId, [FromQuery (Name = "userKey")]string userKey, [FromQuery (Name = "username")]string username)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PropertyKeys));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"keys\" : [ {\n    \"self\" : \"self\",\n    \"key\" : \"key\"\n  }, {\n    \"self\" : \"self\",\n    \"key\" : \"key\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PropertyKeys>(exampleJson)
            : default(PropertyKeys);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Set user property
        /// </summary>
        /// <remarks>Sets the value of a user&#39;s property. Use this resource to store custom data against a user.  Note: This operation does not access the [user properties](https://confluence.atlassian.com/x/8YxjL) created and maintained in Jira.  **[Permissions](#permissions) required:**   *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), to set a property on any user.  *  Access to Jira, to set a property on the calling user&#39;s record.</remarks>
        /// <param name="propertyKey">The key of the user&#39;s property. The maximum length is 255 characters.</param>
        /// <param name="body"></param>
        /// <param name="accountId">The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.</param>
        /// <param name="userKey">This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.</param>
        /// <param name="username">This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.</param>
        /// <response code="200">Returned if the user property is updated.</response>
        /// <response code="201">Returned if the user property is created.</response>
        /// <response code="400">Returned if &#x60;accountId&#x60; is missing.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission or is not accessing their user record.</response>
        /// <response code="404">Returned if the user is not found.</response>
        /// <response code="405">Returned if the property key is not specified.</response>
        [HttpPut]
        [Route("/rest/api/3/user/properties/{propertyKey}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("SetUserProperty")]
        [SwaggerResponse(statusCode: 200, type: typeof(Object), description: "Returned if the user property is updated.")]
        [SwaggerResponse(statusCode: 201, type: typeof(Object), description: "Returned if the user property is created.")]
        public virtual IActionResult SetUserProperty([FromRoute (Name = "propertyKey")][Required]string propertyKey, [FromBody]Object body, [FromQuery (Name = "accountId")] [MaxLength(128)]string accountId, [FromQuery (Name = "userKey")]string userKey, [FromQuery (Name = "username")]string username)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Object));
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(Object));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default(Object);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
