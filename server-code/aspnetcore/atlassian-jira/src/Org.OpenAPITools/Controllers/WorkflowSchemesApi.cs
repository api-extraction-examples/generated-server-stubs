/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class WorkflowSchemesApiController : ControllerBase
    { 
        /// <summary>
        /// Create workflow scheme
        /// </summary>
        /// <remarks>Creates a workflow scheme.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="workflowScheme"></param>
        /// <response code="201">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        [HttpPost]
        [Route("/rest/api/3/workflowscheme")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("CreateWorkflowScheme")]
        [SwaggerResponse(statusCode: 201, type: typeof(WorkflowScheme), description: "Returned if the request is successful.")]
        public virtual IActionResult CreateWorkflowScheme([FromBody]WorkflowScheme workflowScheme)
        {

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(WorkflowScheme));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            string exampleJson = null;
            exampleJson = "{\n  \"originalDefaultWorkflow\" : \"originalDefaultWorkflow\",\n  \"description\" : \"description\",\n  \"issueTypes\" : {\n    \"key\" : {\n      \"avatarId\" : 0,\n      \"hierarchyLevel\" : 6,\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"self\" : \"self\",\n      \"entityId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n      \"iconUrl\" : \"iconUrl\",\n      \"id\" : \"id\",\n      \"subtask\" : true\n    }\n  },\n  \"originalIssueTypeMappings\" : {\n    \"key\" : \"originalIssueTypeMappings\"\n  },\n  \"defaultWorkflow\" : \"defaultWorkflow\",\n  \"updateDraftIfNeeded\" : true,\n  \"draft\" : true,\n  \"name\" : \"name\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : 5,\n  \"lastModified\" : \"lastModified\",\n  \"issueTypeMappings\" : {\n    \"key\" : \"issueTypeMappings\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<WorkflowScheme>(exampleJson)
            : default(WorkflowScheme);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Delete default workflow
        /// </summary>
        /// <remarks>Resets the default workflow for a workflow scheme. That is, the default workflow is set to Jira&#39;s system workflow (the *jira* workflow).  Note that active workflow schemes cannot be edited. If the workflow scheme is active, set &#x60;updateDraftIfNeeded&#x60; to &#x60;true&#x60; and a draft workflow scheme is created or updated with the default workflow reset. The draft workflow scheme can be published in Jira.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id">The ID of the workflow scheme.</param>
        /// <param name="updateDraftIfNeeded">Set to true to create or update the draft of a workflow scheme and delete the mapping from the draft, when the workflow scheme cannot be edited. Defaults to &#x60;false&#x60;.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the workflow scheme cannot be edited and &#x60;updateDraftIfNeeded&#x60; is not &#x60;true&#x60;.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        /// <response code="404">Returned if the workflow scheme is not found.</response>
        [HttpDelete]
        [Route("/rest/api/3/workflowscheme/{id}/default")]
        [ValidateModelState]
        [SwaggerOperation("DeleteDefaultWorkflow")]
        [SwaggerResponse(statusCode: 200, type: typeof(WorkflowScheme), description: "Returned if the request is successful.")]
        public virtual IActionResult DeleteDefaultWorkflow([FromRoute (Name = "id")][Required]long id, [FromQuery (Name = "updateDraftIfNeeded")]bool? updateDraftIfNeeded)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(WorkflowScheme));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"originalDefaultWorkflow\" : \"originalDefaultWorkflow\",\n  \"description\" : \"description\",\n  \"issueTypes\" : {\n    \"key\" : {\n      \"avatarId\" : 0,\n      \"hierarchyLevel\" : 6,\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"self\" : \"self\",\n      \"entityId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n      \"iconUrl\" : \"iconUrl\",\n      \"id\" : \"id\",\n      \"subtask\" : true\n    }\n  },\n  \"originalIssueTypeMappings\" : {\n    \"key\" : \"originalIssueTypeMappings\"\n  },\n  \"defaultWorkflow\" : \"defaultWorkflow\",\n  \"updateDraftIfNeeded\" : true,\n  \"draft\" : true,\n  \"name\" : \"name\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : 5,\n  \"lastModified\" : \"lastModified\",\n  \"issueTypeMappings\" : {\n    \"key\" : \"issueTypeMappings\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<WorkflowScheme>(exampleJson)
            : default(WorkflowScheme);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Delete issue types for workflow in workflow scheme
        /// </summary>
        /// <remarks>Deletes the workflow-issue type mapping for a workflow in a workflow scheme.  Note that active workflow schemes cannot be edited. If the workflow scheme is active, set &#x60;updateDraftIfNeeded&#x60; to &#x60;true&#x60; and a draft workflow scheme is created or updated with the workflow-issue type mapping deleted. The draft workflow scheme can be published in Jira.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id">The ID of the workflow scheme.</param>
        /// <param name="workflowName">The name of the workflow.</param>
        /// <param name="updateDraftIfNeeded">Set to true to create or update the draft of a workflow scheme and delete the mapping from the draft, when the workflow scheme cannot be edited. Defaults to &#x60;false&#x60;.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the workflow cannot be edited and &#x60;updateDraftIfNeeded&#x60; is not true.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        /// <response code="404">Returned if any of the following is true:   *  The workflow scheme is not found.  *  The workflow is not found.  *  The workflow is not specified.</response>
        [HttpDelete]
        [Route("/rest/api/3/workflowscheme/{id}/workflow")]
        [ValidateModelState]
        [SwaggerOperation("DeleteWorkflowMapping")]
        public virtual IActionResult DeleteWorkflowMapping([FromRoute (Name = "id")][Required]long id, [FromQuery (Name = "workflowName")][Required()]string workflowName, [FromQuery (Name = "updateDraftIfNeeded")]bool? updateDraftIfNeeded)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Delete workflow scheme
        /// </summary>
        /// <remarks>Deletes a workflow scheme. Note that a workflow scheme cannot be deleted if it is active (that is, being used by at least one project).  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id">The ID of the workflow scheme. Find this ID by editing the desired workflow scheme in Jira. The ID is shown in the URL as &#x60;schemeId&#x60;. For example, *schemeId&#x3D;10301*.</param>
        /// <response code="204">Returned if the request is successful.</response>
        /// <response code="400">Returned if the scheme is active.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        /// <response code="404">Returned if the workflow scheme is not found.</response>
        [HttpDelete]
        [Route("/rest/api/3/workflowscheme/{id}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteWorkflowScheme")]
        [SwaggerResponse(statusCode: 204, type: typeof(Object), description: "Returned if the request is successful.")]
        public virtual IActionResult DeleteWorkflowScheme([FromRoute (Name = "id")][Required]long id)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204, default(Object));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default(Object);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Delete workflow for issue type in workflow scheme
        /// </summary>
        /// <remarks>Deletes the issue type-workflow mapping for an issue type in a workflow scheme.  Note that active workflow schemes cannot be edited. If the workflow scheme is active, set &#x60;updateDraftIfNeeded&#x60; to &#x60;true&#x60; and a draft workflow scheme is created or updated with the issue type-workflow mapping deleted. The draft workflow scheme can be published in Jira.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id">The ID of the workflow scheme.</param>
        /// <param name="issueType">The ID of the issue type.</param>
        /// <param name="updateDraftIfNeeded">Set to true to create or update the draft of a workflow scheme and update the mapping in the draft, when the workflow scheme cannot be edited. Defaults to &#x60;false&#x60;.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the workflow cannot be edited and &#x60;updateDraftIfNeeded&#x60; is false.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        /// <response code="404">Returned if the workflow scheme or issue type is not found.</response>
        [HttpDelete]
        [Route("/rest/api/3/workflowscheme/{id}/issuetype/{issueType}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteWorkflowSchemeIssueType")]
        [SwaggerResponse(statusCode: 200, type: typeof(WorkflowScheme), description: "Returned if the request is successful.")]
        public virtual IActionResult DeleteWorkflowSchemeIssueType([FromRoute (Name = "id")][Required]long id, [FromRoute (Name = "issueType")][Required]string issueType, [FromQuery (Name = "updateDraftIfNeeded")]bool? updateDraftIfNeeded)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(WorkflowScheme));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"originalDefaultWorkflow\" : \"originalDefaultWorkflow\",\n  \"description\" : \"description\",\n  \"issueTypes\" : {\n    \"key\" : {\n      \"avatarId\" : 0,\n      \"hierarchyLevel\" : 6,\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"self\" : \"self\",\n      \"entityId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n      \"iconUrl\" : \"iconUrl\",\n      \"id\" : \"id\",\n      \"subtask\" : true\n    }\n  },\n  \"originalIssueTypeMappings\" : {\n    \"key\" : \"originalIssueTypeMappings\"\n  },\n  \"defaultWorkflow\" : \"defaultWorkflow\",\n  \"updateDraftIfNeeded\" : true,\n  \"draft\" : true,\n  \"name\" : \"name\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : 5,\n  \"lastModified\" : \"lastModified\",\n  \"issueTypeMappings\" : {\n    \"key\" : \"issueTypeMappings\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<WorkflowScheme>(exampleJson)
            : default(WorkflowScheme);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get all workflow schemes
        /// </summary>
        /// <remarks>Returns a [paginated](#pagination) list of all workflow schemes, not including draft workflow schemes.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="startAt">The index of the first item to return in a page of results (page offset).</param>
        /// <param name="maxResults">The maximum number of items to return per page.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        [HttpGet]
        [Route("/rest/api/3/workflowscheme")]
        [ValidateModelState]
        [SwaggerOperation("GetAllWorkflowSchemes")]
        [SwaggerResponse(statusCode: 200, type: typeof(PageBeanWorkflowScheme), description: "Returned if the request is successful.")]
        public virtual IActionResult GetAllWorkflowSchemes([FromQuery (Name = "startAt")]long? startAt, [FromQuery (Name = "maxResults")]int? maxResults)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PageBeanWorkflowScheme));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            string exampleJson = null;
            exampleJson = "{\n  \"total\" : 1,\n  \"isLast\" : true,\n  \"maxResults\" : 0,\n  \"nextPage\" : \"https://openapi-generator.tech\",\n  \"values\" : [ {\n    \"originalDefaultWorkflow\" : \"originalDefaultWorkflow\",\n    \"description\" : \"description\",\n    \"issueTypes\" : {\n      \"key\" : {\n        \"avatarId\" : 0,\n        \"hierarchyLevel\" : 6,\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"self\" : \"self\",\n        \"entityId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n        \"iconUrl\" : \"iconUrl\",\n        \"id\" : \"id\",\n        \"subtask\" : true\n      }\n    },\n    \"originalIssueTypeMappings\" : {\n      \"key\" : \"originalIssueTypeMappings\"\n    },\n    \"defaultWorkflow\" : \"defaultWorkflow\",\n    \"updateDraftIfNeeded\" : true,\n    \"draft\" : true,\n    \"name\" : \"name\",\n    \"self\" : \"https://openapi-generator.tech\",\n    \"id\" : 5,\n    \"lastModified\" : \"lastModified\",\n    \"issueTypeMappings\" : {\n      \"key\" : \"issueTypeMappings\"\n    }\n  }, {\n    \"originalDefaultWorkflow\" : \"originalDefaultWorkflow\",\n    \"description\" : \"description\",\n    \"issueTypes\" : {\n      \"key\" : {\n        \"avatarId\" : 0,\n        \"hierarchyLevel\" : 6,\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"self\" : \"self\",\n        \"entityId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n        \"iconUrl\" : \"iconUrl\",\n        \"id\" : \"id\",\n        \"subtask\" : true\n      }\n    },\n    \"originalIssueTypeMappings\" : {\n      \"key\" : \"originalIssueTypeMappings\"\n    },\n    \"defaultWorkflow\" : \"defaultWorkflow\",\n    \"updateDraftIfNeeded\" : true,\n    \"draft\" : true,\n    \"name\" : \"name\",\n    \"self\" : \"https://openapi-generator.tech\",\n    \"id\" : 5,\n    \"lastModified\" : \"lastModified\",\n    \"issueTypeMappings\" : {\n      \"key\" : \"issueTypeMappings\"\n    }\n  } ],\n  \"self\" : \"https://openapi-generator.tech\",\n  \"startAt\" : 6\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PageBeanWorkflowScheme>(exampleJson)
            : default(PageBeanWorkflowScheme);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get default workflow
        /// </summary>
        /// <remarks>Returns the default workflow for a workflow scheme. The default workflow is the workflow that is assigned any issue types that have not been mapped to any other workflow. The default workflow has *All Unassigned Issue Types* listed in its issue types for the workflow scheme in Jira.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id">The ID of the workflow scheme.</param>
        /// <param name="returnDraftIfExists">Set to &#x60;true&#x60; to return the default workflow for the workflow scheme&#39;s draft rather than scheme itself. If the workflow scheme does not have a draft, then the default workflow for the workflow scheme is returned.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        /// <response code="404">Returned if the workflow scheme is not found.</response>
        [HttpGet]
        [Route("/rest/api/3/workflowscheme/{id}/default")]
        [ValidateModelState]
        [SwaggerOperation("GetDefaultWorkflow")]
        [SwaggerResponse(statusCode: 200, type: typeof(DefaultWorkflow), description: "Returned if the request is successful.")]
        public virtual IActionResult GetDefaultWorkflow([FromRoute (Name = "id")][Required]long id, [FromQuery (Name = "returnDraftIfExists")]bool? returnDraftIfExists)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(DefaultWorkflow));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"updateDraftIfNeeded\" : true,\n  \"workflow\" : \"workflow\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<DefaultWorkflow>(exampleJson)
            : default(DefaultWorkflow);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get issue types for workflows in workflow scheme
        /// </summary>
        /// <remarks>Returns the workflow-issue type mappings for a workflow scheme.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id">The ID of the workflow scheme.</param>
        /// <param name="workflowName">The name of a workflow in the scheme. Limits the results to the workflow-issue type mapping for the specified workflow.</param>
        /// <param name="returnDraftIfExists">Returns the mapping from the workflow scheme&#39;s draft rather than the workflow scheme, if set to true. If no draft exists, the mapping from the workflow scheme is returned.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        /// <response code="404">Returned if either the workflow scheme or workflow is not found.</response>
        [HttpGet]
        [Route("/rest/api/3/workflowscheme/{id}/workflow")]
        [ValidateModelState]
        [SwaggerOperation("GetWorkflow")]
        [SwaggerResponse(statusCode: 200, type: typeof(IssueTypesWorkflowMapping), description: "Returned if the request is successful.")]
        public virtual IActionResult GetWorkflow([FromRoute (Name = "id")][Required]long id, [FromQuery (Name = "workflowName")]string workflowName, [FromQuery (Name = "returnDraftIfExists")]bool? returnDraftIfExists)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(IssueTypesWorkflowMapping));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"updateDraftIfNeeded\" : true,\n  \"workflow\" : \"workflow\",\n  \"defaultMapping\" : true,\n  \"issueTypes\" : [ \"issueTypes\", \"issueTypes\" ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<IssueTypesWorkflowMapping>(exampleJson)
            : default(IssueTypesWorkflowMapping);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get workflow scheme
        /// </summary>
        /// <remarks>Returns a workflow scheme.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id">The ID of the workflow scheme. Find this ID by editing the desired workflow scheme in Jira. The ID is shown in the URL as &#x60;schemeId&#x60;. For example, *schemeId&#x3D;10301*.</param>
        /// <param name="returnDraftIfExists">Returns the workflow scheme&#39;s draft rather than scheme itself, if set to true. If the workflow scheme does not have a draft, then the workflow scheme is returned.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        /// <response code="404">Returned if the workflow scheme is not found.</response>
        [HttpGet]
        [Route("/rest/api/3/workflowscheme/{id}")]
        [ValidateModelState]
        [SwaggerOperation("GetWorkflowScheme")]
        [SwaggerResponse(statusCode: 200, type: typeof(WorkflowScheme), description: "Returned if the request is successful.")]
        public virtual IActionResult GetWorkflowScheme([FromRoute (Name = "id")][Required]long id, [FromQuery (Name = "returnDraftIfExists")]bool? returnDraftIfExists)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(WorkflowScheme));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"originalDefaultWorkflow\" : \"originalDefaultWorkflow\",\n  \"description\" : \"description\",\n  \"issueTypes\" : {\n    \"key\" : {\n      \"avatarId\" : 0,\n      \"hierarchyLevel\" : 6,\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"self\" : \"self\",\n      \"entityId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n      \"iconUrl\" : \"iconUrl\",\n      \"id\" : \"id\",\n      \"subtask\" : true\n    }\n  },\n  \"originalIssueTypeMappings\" : {\n    \"key\" : \"originalIssueTypeMappings\"\n  },\n  \"defaultWorkflow\" : \"defaultWorkflow\",\n  \"updateDraftIfNeeded\" : true,\n  \"draft\" : true,\n  \"name\" : \"name\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : 5,\n  \"lastModified\" : \"lastModified\",\n  \"issueTypeMappings\" : {\n    \"key\" : \"issueTypeMappings\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<WorkflowScheme>(exampleJson)
            : default(WorkflowScheme);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get workflow for issue type in workflow scheme
        /// </summary>
        /// <remarks>Returns the issue type-workflow mapping for an issue type in a workflow scheme.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id">The ID of the workflow scheme.</param>
        /// <param name="issueType">The ID of the issue type.</param>
        /// <param name="returnDraftIfExists">Returns the mapping from the workflow scheme&#39;s draft rather than the workflow scheme, if set to true. If no draft exists, the mapping from the workflow scheme is returned.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        /// <response code="404">Returned if the workflow scheme or issue type is not found.</response>
        [HttpGet]
        [Route("/rest/api/3/workflowscheme/{id}/issuetype/{issueType}")]
        [ValidateModelState]
        [SwaggerOperation("GetWorkflowSchemeIssueType")]
        [SwaggerResponse(statusCode: 200, type: typeof(IssueTypeWorkflowMapping), description: "Returned if the request is successful.")]
        public virtual IActionResult GetWorkflowSchemeIssueType([FromRoute (Name = "id")][Required]long id, [FromRoute (Name = "issueType")][Required]string issueType, [FromQuery (Name = "returnDraftIfExists")]bool? returnDraftIfExists)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(IssueTypeWorkflowMapping));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"issueType\" : \"issueType\",\n  \"updateDraftIfNeeded\" : true,\n  \"workflow\" : \"workflow\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<IssueTypeWorkflowMapping>(exampleJson)
            : default(IssueTypeWorkflowMapping);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Set workflow for issue type in workflow scheme
        /// </summary>
        /// <remarks>Sets the workflow for an issue type in a workflow scheme.  Note that active workflow schemes cannot be edited. If the workflow scheme is active, set &#x60;updateDraftIfNeeded&#x60; to &#x60;true&#x60; in the request body and a draft workflow scheme is created or updated with the new issue type-workflow mapping. The draft workflow scheme can be published in Jira.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id">The ID of the workflow scheme.</param>
        /// <param name="issueType">The ID of the issue type.</param>
        /// <param name="issueTypeWorkflowMapping">The issue type-project mapping.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the workflow cannot be edited and &#x60;updateDraftIfNeeded&#x60; is false.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        /// <response code="404">Returned if the workflow scheme or issue type is not found.</response>
        [HttpPut]
        [Route("/rest/api/3/workflowscheme/{id}/issuetype/{issueType}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("SetWorkflowSchemeIssueType")]
        [SwaggerResponse(statusCode: 200, type: typeof(WorkflowScheme), description: "Returned if the request is successful.")]
        public virtual IActionResult SetWorkflowSchemeIssueType([FromRoute (Name = "id")][Required]long id, [FromRoute (Name = "issueType")][Required]string issueType, [FromBody]IssueTypeWorkflowMapping issueTypeWorkflowMapping)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(WorkflowScheme));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"originalDefaultWorkflow\" : \"originalDefaultWorkflow\",\n  \"description\" : \"description\",\n  \"issueTypes\" : {\n    \"key\" : {\n      \"avatarId\" : 0,\n      \"hierarchyLevel\" : 6,\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"self\" : \"self\",\n      \"entityId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n      \"iconUrl\" : \"iconUrl\",\n      \"id\" : \"id\",\n      \"subtask\" : true\n    }\n  },\n  \"originalIssueTypeMappings\" : {\n    \"key\" : \"originalIssueTypeMappings\"\n  },\n  \"defaultWorkflow\" : \"defaultWorkflow\",\n  \"updateDraftIfNeeded\" : true,\n  \"draft\" : true,\n  \"name\" : \"name\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : 5,\n  \"lastModified\" : \"lastModified\",\n  \"issueTypeMappings\" : {\n    \"key\" : \"issueTypeMappings\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<WorkflowScheme>(exampleJson)
            : default(WorkflowScheme);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update default workflow
        /// </summary>
        /// <remarks>Sets the default workflow for a workflow scheme.  Note that active workflow schemes cannot be edited. If the workflow scheme is active, set &#x60;updateDraftIfNeeded&#x60; to &#x60;true&#x60; in the request object and a draft workflow scheme is created or updated with the new default workflow. The draft workflow scheme can be published in Jira.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id">The ID of the workflow scheme.</param>
        /// <param name="defaultWorkflow">The new default workflow.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the workflow scheme cannot be edited and &#x60;updateDraftIfNeeded&#x60; is not &#x60;true&#x60;.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        /// <response code="404">Returned if the workflow scheme is not found.</response>
        [HttpPut]
        [Route("/rest/api/3/workflowscheme/{id}/default")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("UpdateDefaultWorkflow")]
        [SwaggerResponse(statusCode: 200, type: typeof(WorkflowScheme), description: "Returned if the request is successful.")]
        public virtual IActionResult UpdateDefaultWorkflow([FromRoute (Name = "id")][Required]long id, [FromBody]DefaultWorkflow defaultWorkflow)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(WorkflowScheme));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"originalDefaultWorkflow\" : \"originalDefaultWorkflow\",\n  \"description\" : \"description\",\n  \"issueTypes\" : {\n    \"key\" : {\n      \"avatarId\" : 0,\n      \"hierarchyLevel\" : 6,\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"self\" : \"self\",\n      \"entityId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n      \"iconUrl\" : \"iconUrl\",\n      \"id\" : \"id\",\n      \"subtask\" : true\n    }\n  },\n  \"originalIssueTypeMappings\" : {\n    \"key\" : \"originalIssueTypeMappings\"\n  },\n  \"defaultWorkflow\" : \"defaultWorkflow\",\n  \"updateDraftIfNeeded\" : true,\n  \"draft\" : true,\n  \"name\" : \"name\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : 5,\n  \"lastModified\" : \"lastModified\",\n  \"issueTypeMappings\" : {\n    \"key\" : \"issueTypeMappings\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<WorkflowScheme>(exampleJson)
            : default(WorkflowScheme);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Set issue types for workflow in workflow scheme
        /// </summary>
        /// <remarks>Sets the issue types for a workflow in a workflow scheme. The workflow can also be set as the default workflow for the workflow scheme. Unmapped issues types are mapped to the default workflow.  Note that active workflow schemes cannot be edited. If the workflow scheme is active, set &#x60;updateDraftIfNeeded&#x60; to &#x60;true&#x60; in the request body and a draft workflow scheme is created or updated with the new workflow-issue types mappings. The draft workflow scheme can be published in Jira.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id">The ID of the workflow scheme.</param>
        /// <param name="workflowName">The name of the workflow.</param>
        /// <param name="issueTypesWorkflowMapping"></param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        /// <response code="404">Returned if any of the following is true:   *  The workflow scheme is not found.  *  The workflow is not found.  *  The workflow is not specified.</response>
        [HttpPut]
        [Route("/rest/api/3/workflowscheme/{id}/workflow")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("UpdateWorkflowMapping")]
        [SwaggerResponse(statusCode: 200, type: typeof(WorkflowScheme), description: "Returned if the request is successful.")]
        public virtual IActionResult UpdateWorkflowMapping([FromRoute (Name = "id")][Required]long id, [FromQuery (Name = "workflowName")][Required()]string workflowName, [FromBody]IssueTypesWorkflowMapping issueTypesWorkflowMapping)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(WorkflowScheme));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"originalDefaultWorkflow\" : \"originalDefaultWorkflow\",\n  \"description\" : \"description\",\n  \"issueTypes\" : {\n    \"key\" : {\n      \"avatarId\" : 0,\n      \"hierarchyLevel\" : 6,\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"self\" : \"self\",\n      \"entityId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n      \"iconUrl\" : \"iconUrl\",\n      \"id\" : \"id\",\n      \"subtask\" : true\n    }\n  },\n  \"originalIssueTypeMappings\" : {\n    \"key\" : \"originalIssueTypeMappings\"\n  },\n  \"defaultWorkflow\" : \"defaultWorkflow\",\n  \"updateDraftIfNeeded\" : true,\n  \"draft\" : true,\n  \"name\" : \"name\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : 5,\n  \"lastModified\" : \"lastModified\",\n  \"issueTypeMappings\" : {\n    \"key\" : \"issueTypeMappings\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<WorkflowScheme>(exampleJson)
            : default(WorkflowScheme);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update workflow scheme
        /// </summary>
        /// <remarks>Updates a workflow scheme, including the name, default workflow, issue type to project mappings, and more. If the workflow scheme is active (that is, being used by at least one project), then a draft workflow scheme is created or updated instead, provided that &#x60;updateDraftIfNeeded&#x60; is set to &#x60;true&#x60;.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id">The ID of the workflow scheme. Find this ID by editing the desired workflow scheme in Jira. The ID is shown in the URL as &#x60;schemeId&#x60;. For example, *schemeId&#x3D;10301*.</param>
        /// <param name="workflowScheme"></param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have the necessary permission.</response>
        /// <response code="404">Returned if the workflow scheme is not found.</response>
        [HttpPut]
        [Route("/rest/api/3/workflowscheme/{id}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("UpdateWorkflowScheme")]
        [SwaggerResponse(statusCode: 200, type: typeof(WorkflowScheme), description: "Returned if the request is successful.")]
        public virtual IActionResult UpdateWorkflowScheme([FromRoute (Name = "id")][Required]long id, [FromBody]WorkflowScheme workflowScheme)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(WorkflowScheme));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"originalDefaultWorkflow\" : \"originalDefaultWorkflow\",\n  \"description\" : \"description\",\n  \"issueTypes\" : {\n    \"key\" : {\n      \"avatarId\" : 0,\n      \"hierarchyLevel\" : 6,\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"self\" : \"self\",\n      \"entityId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n      \"iconUrl\" : \"iconUrl\",\n      \"id\" : \"id\",\n      \"subtask\" : true\n    }\n  },\n  \"originalIssueTypeMappings\" : {\n    \"key\" : \"originalIssueTypeMappings\"\n  },\n  \"defaultWorkflow\" : \"defaultWorkflow\",\n  \"updateDraftIfNeeded\" : true,\n  \"draft\" : true,\n  \"name\" : \"name\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : 5,\n  \"lastModified\" : \"lastModified\",\n  \"issueTypeMappings\" : {\n    \"key\" : \"issueTypeMappings\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<WorkflowScheme>(exampleJson)
            : default(WorkflowScheme);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
