/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class AuditRecordsApiController : ControllerBase
    { 
        /// <summary>
        /// Get audit records
        /// </summary>
        /// <remarks>Returns a list of audit records. The list can be filtered to include items:   *  where each item in &#x60;filter&#x60; has at least one match in any of these fields:           *  &#x60;summary&#x60;      *  &#x60;category&#x60;      *  &#x60;eventSource&#x60;      *  &#x60;objectItem.name&#x60; If the object is a user, account ID is available to filter.      *  &#x60;objectItem.parentName&#x60;      *  &#x60;objectItem.typeName&#x60;      *  &#x60;changedValues.changedFrom&#x60;      *  &#x60;changedValues.changedTo&#x60;      *  &#x60;remoteAddress&#x60;          For example, if &#x60;filter&#x60; contains *man ed*, an audit record containing &#x60;summary\&quot;: \&quot;User added to group\&quot;&#x60; and &#x60;\&quot;category\&quot;: \&quot;group management\&quot;&#x60; is returned.  *  created on or after a date and time.  *  created or or before a date and time.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="offset">The number of records to skip before returning the first result.</param>
        /// <param name="limit">The maximum number of results to return.</param>
        /// <param name="filter">The strings to match with audit field content, space separated.</param>
        /// <param name="from">The date and time on or after which returned audit records must have been created. If &#x60;to&#x60; is provided &#x60;from&#x60; must be before &#x60;to&#x60; or no audit records are returned.</param>
        /// <param name="to">The date and time on or before which returned audit results must have been created. If &#x60;from&#x60; is provided &#x60;to&#x60; must be after &#x60;from&#x60; or no audit records are returned.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if:   *  the user does not have the required permissions.  *  all Jira products are on free plans. Audit logs are available when at least one Jira product is on a paid plan.</response>
        [HttpGet]
        [Route("/rest/api/3/auditing/record")]
        [ValidateModelState]
        [SwaggerOperation("GetAuditRecords")]
        [SwaggerResponse(statusCode: 200, type: typeof(AuditRecords), description: "Returned if the request is successful.")]
        public virtual IActionResult GetAuditRecords([FromQuery (Name = "offset")]int? offset, [FromQuery (Name = "limit")]int? limit, [FromQuery (Name = "filter")]string filter, [FromQuery (Name = "from")]DateTime? from, [FromQuery (Name = "to")]DateTime? to)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AuditRecords));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            string exampleJson = null;
            exampleJson = "{\n  \"total\" : 5,\n  \"offset\" : 6,\n  \"records\" : [ {\n    \"changedValues\" : [ {\n      \"changedTo\" : \"changedTo\",\n      \"fieldName\" : \"fieldName\",\n      \"changedFrom\" : \"changedFrom\"\n    }, {\n      \"changedTo\" : \"changedTo\",\n      \"fieldName\" : \"fieldName\",\n      \"changedFrom\" : \"changedFrom\"\n    } ],\n    \"summary\" : \"summary\",\n    \"objectItem\" : {\n      \"parentName\" : \"parentName\",\n      \"name\" : \"name\",\n      \"typeName\" : \"typeName\",\n      \"id\" : \"id\",\n      \"parentId\" : \"parentId\"\n    },\n    \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"authorKey\" : \"authorKey\",\n    \"eventSource\" : \"eventSource\",\n    \"associatedItems\" : [ {\n      \"parentName\" : \"parentName\",\n      \"name\" : \"name\",\n      \"typeName\" : \"typeName\",\n      \"id\" : \"id\",\n      \"parentId\" : \"parentId\"\n    }, {\n      \"parentName\" : \"parentName\",\n      \"name\" : \"name\",\n      \"typeName\" : \"typeName\",\n      \"id\" : \"id\",\n      \"parentId\" : \"parentId\"\n    } ],\n    \"description\" : \"description\",\n    \"id\" : 1,\n    \"category\" : \"category\",\n    \"remoteAddress\" : \"remoteAddress\"\n  }, {\n    \"changedValues\" : [ {\n      \"changedTo\" : \"changedTo\",\n      \"fieldName\" : \"fieldName\",\n      \"changedFrom\" : \"changedFrom\"\n    }, {\n      \"changedTo\" : \"changedTo\",\n      \"fieldName\" : \"fieldName\",\n      \"changedFrom\" : \"changedFrom\"\n    } ],\n    \"summary\" : \"summary\",\n    \"objectItem\" : {\n      \"parentName\" : \"parentName\",\n      \"name\" : \"name\",\n      \"typeName\" : \"typeName\",\n      \"id\" : \"id\",\n      \"parentId\" : \"parentId\"\n    },\n    \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"authorKey\" : \"authorKey\",\n    \"eventSource\" : \"eventSource\",\n    \"associatedItems\" : [ {\n      \"parentName\" : \"parentName\",\n      \"name\" : \"name\",\n      \"typeName\" : \"typeName\",\n      \"id\" : \"id\",\n      \"parentId\" : \"parentId\"\n    }, {\n      \"parentName\" : \"parentName\",\n      \"name\" : \"name\",\n      \"typeName\" : \"typeName\",\n      \"id\" : \"id\",\n      \"parentId\" : \"parentId\"\n    } ],\n    \"description\" : \"description\",\n    \"id\" : 1,\n    \"category\" : \"category\",\n    \"remoteAddress\" : \"remoteAddress\"\n  } ],\n  \"limit\" : 0\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AuditRecords>(exampleJson)
            : default(AuditRecords);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
