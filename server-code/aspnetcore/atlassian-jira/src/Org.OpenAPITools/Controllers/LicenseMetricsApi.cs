/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class LicenseMetricsApiController : ControllerBase
    { 
        /// <summary>
        /// Get approximate application license count
        /// </summary>
        /// <remarks>Returns the total approximate user account for a specific &#x60;jira licence application key&#x60;. Please note this information is cached with a 7-day lifecycle and could be stale at the time of call.  #### Application Key ####  An application key represents a specific version of Jira. See \\{@link ApplicationKey\\} for details  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="applicationKey"></param>
        /// <response code="200">200 response</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have permission to complete this request.</response>
        [HttpGet]
        [Route("/rest/api/3/license/approximateLicenseCount/product/{applicationKey}")]
        [ValidateModelState]
        [SwaggerOperation("GetApproximateApplicationLicenseCount")]
        [SwaggerResponse(statusCode: 200, type: typeof(LicenseMetric), description: "200 response")]
        public virtual IActionResult GetApproximateApplicationLicenseCount([FromRoute (Name = "applicationKey")][Required]string applicationKey)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(LicenseMetric));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            string exampleJson = null;
            exampleJson = "{\n  \"value\" : \"value\",\n  \"key\" : \"key\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<LicenseMetric>(exampleJson)
            : default(LicenseMetric);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get approximate license count
        /// </summary>
        /// <remarks>Returns the total approximate user account across all jira licenced application keys. Please note this information is cached with a 7-day lifecycle and could be stale at the time of call.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <response code="200">200 response</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have permission to complete this request.</response>
        [HttpGet]
        [Route("/rest/api/3/license/approximateLicenseCount")]
        [ValidateModelState]
        [SwaggerOperation("GetApproximateLicenseCount")]
        [SwaggerResponse(statusCode: 200, type: typeof(LicenseMetric), description: "200 response")]
        public virtual IActionResult GetApproximateLicenseCount()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(LicenseMetric));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            string exampleJson = null;
            exampleJson = "{\n  \"value\" : \"value\",\n  \"key\" : \"key\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<LicenseMetric>(exampleJson)
            : default(LicenseMetric);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
