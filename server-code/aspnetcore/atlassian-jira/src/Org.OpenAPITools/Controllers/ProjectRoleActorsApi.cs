/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ProjectRoleActorsApiController : ControllerBase
    { 
        /// <summary>
        /// Add actors to project role
        /// </summary>
        /// <remarks>Adds actors to a project role for the project.  To replace all actors for the project, use [Set actors for project role](#api-rest-api-3-project-projectIdOrKey-role-id-put).  This operation can be accessed anonymously.  **[Permissions](#permissions) required:** *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project or *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="projectIdOrKey">The project ID or project key (case sensitive).</param>
        /// <param name="id">The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.</param>
        /// <param name="actorsMap">The groups or users to associate with the project role for this project. Provide the user account ID, group name, or group ID. As a group&#39;s name can change, use of group ID is recommended.</param>
        /// <response code="200">Returned if the request is successful. The complete list of actors for the project is returned.  For example, the cURL request above adds a group, *jira-developers*. For the response below to be returned as a result of that request, the user *Mia Krystof* would have previously been added as a &#x60;user&#x60; actor for this project.</response>
        /// <response code="400">Returned if the request is not valid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing or if the calling user lacks administrative permissions for the project.</response>
        /// <response code="404">Returned if:   *  the project is not found.  *  the user or group is not found.  *  the group or user is not active.</response>
        [HttpPost]
        [Route("/rest/api/3/project/{projectIdOrKey}/role/{id}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("AddActorUsers")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProjectRole), description: "Returned if the request is successful. The complete list of actors for the project is returned.  For example, the cURL request above adds a group, *jira-developers*. For the response below to be returned as a result of that request, the user *Mia Krystof* would have previously been added as a &#x60;user&#x60; actor for this project.")]
        public virtual IActionResult AddActorUsers([FromRoute (Name = "projectIdOrKey")][Required]string projectIdOrKey, [FromRoute (Name = "id")][Required]long id, [FromBody]ActorsMap actorsMap)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ProjectRole));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"actors\" : [ {\n    \"avatarUrl\" : \"https://openapi-generator.tech\",\n    \"displayName\" : \"displayName\",\n    \"actorGroup\" : \"\",\n    \"name\" : \"name\",\n    \"id\" : 0,\n    \"type\" : \"atlassian-group-role-actor\",\n    \"actorUser\" : \"\"\n  }, {\n    \"avatarUrl\" : \"https://openapi-generator.tech\",\n    \"displayName\" : \"displayName\",\n    \"actorGroup\" : \"\",\n    \"name\" : \"name\",\n    \"id\" : 0,\n    \"type\" : \"atlassian-group-role-actor\",\n    \"actorUser\" : \"\"\n  } ],\n  \"default\" : true,\n  \"roleConfigurable\" : true,\n  \"currentUserRole\" : true,\n  \"name\" : \"name\",\n  \"admin\" : true,\n  \"description\" : \"description\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : 6,\n  \"translatedName\" : \"translatedName\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ProjectRole>(exampleJson)
            : default(ProjectRole);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Add default actors to project role
        /// </summary>
        /// <remarks>Adds [default actors](#api-rest-api-3-resolution-get) to a role. You may add groups or users, but you cannot add groups and users in the same request.  Changing a project role&#39;s default actors does not affect project role members for projects already created.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id">The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.</param>
        /// <param name="actorInputBean"></param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have administrative permissions.</response>
        /// <response code="404">Returned if the project role is not found.</response>
        [HttpPost]
        [Route("/rest/api/3/role/{id}/actors")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("AddProjectRoleActorsToRole")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProjectRole), description: "Returned if the request is successful.")]
        public virtual IActionResult AddProjectRoleActorsToRole([FromRoute (Name = "id")][Required]long id, [FromBody]ActorInputBean actorInputBean)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ProjectRole));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"actors\" : [ {\n    \"avatarUrl\" : \"https://openapi-generator.tech\",\n    \"displayName\" : \"displayName\",\n    \"actorGroup\" : \"\",\n    \"name\" : \"name\",\n    \"id\" : 0,\n    \"type\" : \"atlassian-group-role-actor\",\n    \"actorUser\" : \"\"\n  }, {\n    \"avatarUrl\" : \"https://openapi-generator.tech\",\n    \"displayName\" : \"displayName\",\n    \"actorGroup\" : \"\",\n    \"name\" : \"name\",\n    \"id\" : 0,\n    \"type\" : \"atlassian-group-role-actor\",\n    \"actorUser\" : \"\"\n  } ],\n  \"default\" : true,\n  \"roleConfigurable\" : true,\n  \"currentUserRole\" : true,\n  \"name\" : \"name\",\n  \"admin\" : true,\n  \"description\" : \"description\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : 6,\n  \"translatedName\" : \"translatedName\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ProjectRole>(exampleJson)
            : default(ProjectRole);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Delete actors from project role
        /// </summary>
        /// <remarks>Deletes actors from a project role for the project.  To remove default actors from the project role, use [Delete default actors from project role](#api-rest-api-3-role-id-actors-delete).  This operation can be accessed anonymously.  **[Permissions](#permissions) required:** *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project or *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="projectIdOrKey">The project ID or project key (case sensitive).</param>
        /// <param name="id">The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.</param>
        /// <param name="user">The user account ID of the user to remove from the project role.</param>
        /// <param name="group">The name of the group to remove from the project role. This parameter cannot be used with the &#x60;groupId&#x60; parameter. As a group&#39;s name can change, use of &#x60;groupId&#x60; is recommended.</param>
        /// <param name="groupId">The ID of the group to remove from the project role. This parameter cannot be used with the &#x60;group&#x60; parameter.</param>
        /// <response code="204">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is not valid.</response>
        /// <response code="404">Returned if:   *  the project or project role is not found.  *  the calling user does not have administrative permission.</response>
        [HttpDelete]
        [Route("/rest/api/3/project/{projectIdOrKey}/role/{id}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteActor")]
        public virtual IActionResult DeleteActor([FromRoute (Name = "projectIdOrKey")][Required]string projectIdOrKey, [FromRoute (Name = "id")][Required]long id, [FromQuery (Name = "user")]string user, [FromQuery (Name = "group")]string group, [FromQuery (Name = "groupId")]string groupId)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Delete default actors from project role
        /// </summary>
        /// <remarks>Deletes the [default actors](#api-rest-api-3-resolution-get) from a project role. You may delete a group or user, but you cannot delete a group and a user in the same request.  Changing a project role&#39;s default actors does not affect project role members for projects already created.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id">The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.</param>
        /// <param name="user">The user account ID of the user to remove as a default actor.</param>
        /// <param name="groupId">The group ID of the group to be removed as a default actor. This parameter cannot be used with the &#x60;group&#x60; parameter.</param>
        /// <param name="group">The group name of the group to be removed as a default actor.This parameter cannot be used with the &#x60;groupId&#x60; parameter. As a group&#39;s name can change, use of &#x60;groupId&#x60; is recommended.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have administrative permissions.</response>
        /// <response code="404">Returned if the project role is not found.</response>
        [HttpDelete]
        [Route("/rest/api/3/role/{id}/actors")]
        [ValidateModelState]
        [SwaggerOperation("DeleteProjectRoleActorsFromRole")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProjectRole), description: "Returned if the request is successful.")]
        public virtual IActionResult DeleteProjectRoleActorsFromRole([FromRoute (Name = "id")][Required]long id, [FromQuery (Name = "user")]string user, [FromQuery (Name = "groupId")]string groupId, [FromQuery (Name = "group")]string group)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ProjectRole));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"actors\" : [ {\n    \"avatarUrl\" : \"https://openapi-generator.tech\",\n    \"displayName\" : \"displayName\",\n    \"actorGroup\" : \"\",\n    \"name\" : \"name\",\n    \"id\" : 0,\n    \"type\" : \"atlassian-group-role-actor\",\n    \"actorUser\" : \"\"\n  }, {\n    \"avatarUrl\" : \"https://openapi-generator.tech\",\n    \"displayName\" : \"displayName\",\n    \"actorGroup\" : \"\",\n    \"name\" : \"name\",\n    \"id\" : 0,\n    \"type\" : \"atlassian-group-role-actor\",\n    \"actorUser\" : \"\"\n  } ],\n  \"default\" : true,\n  \"roleConfigurable\" : true,\n  \"currentUserRole\" : true,\n  \"name\" : \"name\",\n  \"admin\" : true,\n  \"description\" : \"description\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : 6,\n  \"translatedName\" : \"translatedName\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ProjectRole>(exampleJson)
            : default(ProjectRole);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get default actors for project role
        /// </summary>
        /// <remarks>Returns the [default actors](#api-rest-api-3-resolution-get) for the project role.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id">The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have administrative permissions.</response>
        /// <response code="404">Returned if the project role is not found.</response>
        [HttpGet]
        [Route("/rest/api/3/role/{id}/actors")]
        [ValidateModelState]
        [SwaggerOperation("GetProjectRoleActorsForRole")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProjectRole), description: "Returned if the request is successful.")]
        public virtual IActionResult GetProjectRoleActorsForRole([FromRoute (Name = "id")][Required]long id)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ProjectRole));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"actors\" : [ {\n    \"avatarUrl\" : \"https://openapi-generator.tech\",\n    \"displayName\" : \"displayName\",\n    \"actorGroup\" : \"\",\n    \"name\" : \"name\",\n    \"id\" : 0,\n    \"type\" : \"atlassian-group-role-actor\",\n    \"actorUser\" : \"\"\n  }, {\n    \"avatarUrl\" : \"https://openapi-generator.tech\",\n    \"displayName\" : \"displayName\",\n    \"actorGroup\" : \"\",\n    \"name\" : \"name\",\n    \"id\" : 0,\n    \"type\" : \"atlassian-group-role-actor\",\n    \"actorUser\" : \"\"\n  } ],\n  \"default\" : true,\n  \"roleConfigurable\" : true,\n  \"currentUserRole\" : true,\n  \"name\" : \"name\",\n  \"admin\" : true,\n  \"description\" : \"description\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : 6,\n  \"translatedName\" : \"translatedName\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ProjectRole>(exampleJson)
            : default(ProjectRole);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Set actors for project role
        /// </summary>
        /// <remarks>Sets the actors for a project role for a project, replacing all existing actors.  To add actors to the project without overwriting the existing list, use [Add actors to project role](#api-rest-api-3-project-projectIdOrKey-role-id-post).  **[Permissions](#permissions) required:** *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project or *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="projectIdOrKey">The project ID or project key (case sensitive).</param>
        /// <param name="id">The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.</param>
        /// <param name="projectRoleActorsUpdateBean">The groups or users to associate with the project role for this project. Provide the user account ID, group name, or group ID. As a group&#39;s name can change, use of group ID is recommended.</param>
        /// <response code="200">Returned if the request is successful. The complete list of actors for the project is returned.</response>
        /// <response code="400">Returned if the request is not valid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing or if the calling user lacks administrative permissions for the project.</response>
        /// <response code="404">Returned if:   *  the project is not found.  *  a user or group is not found.  *  a group or user is not active.</response>
        [HttpPut]
        [Route("/rest/api/3/project/{projectIdOrKey}/role/{id}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("SetActors")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProjectRole), description: "Returned if the request is successful. The complete list of actors for the project is returned.")]
        public virtual IActionResult SetActors([FromRoute (Name = "projectIdOrKey")][Required]string projectIdOrKey, [FromRoute (Name = "id")][Required]long id, [FromBody]ProjectRoleActorsUpdateBean projectRoleActorsUpdateBean)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ProjectRole));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"actors\" : [ {\n    \"avatarUrl\" : \"https://openapi-generator.tech\",\n    \"displayName\" : \"displayName\",\n    \"actorGroup\" : \"\",\n    \"name\" : \"name\",\n    \"id\" : 0,\n    \"type\" : \"atlassian-group-role-actor\",\n    \"actorUser\" : \"\"\n  }, {\n    \"avatarUrl\" : \"https://openapi-generator.tech\",\n    \"displayName\" : \"displayName\",\n    \"actorGroup\" : \"\",\n    \"name\" : \"name\",\n    \"id\" : 0,\n    \"type\" : \"atlassian-group-role-actor\",\n    \"actorUser\" : \"\"\n  } ],\n  \"default\" : true,\n  \"roleConfigurable\" : true,\n  \"currentUserRole\" : true,\n  \"name\" : \"name\",\n  \"admin\" : true,\n  \"description\" : \"description\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : 6,\n  \"translatedName\" : \"translatedName\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ProjectRole>(exampleJson)
            : default(ProjectRole);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
