/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class IssueCustomFieldValuesAppsApiController : ControllerBase
    { 
        /// <summary>
        /// Update custom field value
        /// </summary>
        /// <remarks>Updates the value of a custom field on one or more issues. Custom fields can only be updated by the Forge app that created them.  **[Permissions](#permissions) required:** Only the app that created the custom field can update its values with this operation.</remarks>
        /// <param name="fieldIdOrKey">The ID or key of the custom field. For example, &#x60;customfield_10010&#x60;.</param>
        /// <param name="customFieldValueUpdateDetails"></param>
        /// <param name="generateChangelog">Whether to generate a changelog for this update.</param>
        /// <response code="204">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid.</response>
        /// <response code="403">Returned if the request is not authenticated as the app that provided the field.</response>
        /// <response code="404">Returned if the field is not found.</response>
        [HttpPut]
        [Route("/rest/api/3/app/field/{fieldIdOrKey}/value")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("UpdateCustomFieldValue")]
        [SwaggerResponse(statusCode: 204, type: typeof(Object), description: "Returned if the request is successful.")]
        public virtual IActionResult UpdateCustomFieldValue([FromRoute (Name = "fieldIdOrKey")][Required]string fieldIdOrKey, [FromBody]CustomFieldValueUpdateDetails customFieldValueUpdateDetails, [FromQuery (Name = "generateChangelog")]bool? generateChangelog)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204, default(Object));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default(Object);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update custom fields
        /// </summary>
        /// <remarks>Updates the value of one or more custom fields on one or more issues. Combinations of custom field and issue should be unique within the request. Custom fields can only be updated by the Forge app that created them.  **[Permissions](#permissions) required:** Only the app that created the custom field can update its values with this operation.</remarks>
        /// <param name="multipleCustomFieldValuesUpdateDetails"></param>
        /// <param name="generateChangelog">Whether to generate a changelog for this update.</param>
        /// <response code="204">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid.</response>
        /// <response code="403">Returned if the request is not authenticated as the app that provided all the fields.</response>
        /// <response code="404">Returned if any field is not found.</response>
        [HttpPost]
        [Route("/rest/api/3/app/field/value")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("UpdateMultipleCustomFieldValues")]
        [SwaggerResponse(statusCode: 204, type: typeof(Object), description: "Returned if the request is successful.")]
        public virtual IActionResult UpdateMultipleCustomFieldValues([FromBody]MultipleCustomFieldValuesUpdateDetails multipleCustomFieldValuesUpdateDetails, [FromQuery (Name = "generateChangelog")]bool? generateChangelog)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204, default(Object));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default(Object);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
