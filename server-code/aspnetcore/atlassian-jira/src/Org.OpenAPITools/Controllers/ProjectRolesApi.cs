/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ProjectRolesApiController : ControllerBase
    { 
        /// <summary>
        /// Create project role
        /// </summary>
        /// <remarks>Creates a new project role with no [default actors](#api-rest-api-3-resolution-get). You can use the [Add default actors to project role](#api-rest-api-3-role-id-actors-post) operation to add default actors to the project role after creating it.  *Note that although a new project role is available to all projects upon creation, any default actors that are associated with the project role are not added to projects that existed prior to the role being created.*&lt;  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="createUpdateRoleRequestBean"></param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is not valid. The &#x60;name&#x60; cannot be empty or start or end with whitespace.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have administrative permissions.</response>
        /// <response code="409">Returned if a project role with the provided name already exists.</response>
        [HttpPost]
        [Route("/rest/api/3/role")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("CreateProjectRole")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProjectRole), description: "Returned if the request is successful.")]
        public virtual IActionResult CreateProjectRole([FromBody]CreateUpdateRoleRequestBean createUpdateRoleRequestBean)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ProjectRole));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409);
            string exampleJson = null;
            exampleJson = "{\n  \"actors\" : [ {\n    \"avatarUrl\" : \"https://openapi-generator.tech\",\n    \"displayName\" : \"displayName\",\n    \"actorGroup\" : \"\",\n    \"name\" : \"name\",\n    \"id\" : 0,\n    \"type\" : \"atlassian-group-role-actor\",\n    \"actorUser\" : \"\"\n  }, {\n    \"avatarUrl\" : \"https://openapi-generator.tech\",\n    \"displayName\" : \"displayName\",\n    \"actorGroup\" : \"\",\n    \"name\" : \"name\",\n    \"id\" : 0,\n    \"type\" : \"atlassian-group-role-actor\",\n    \"actorUser\" : \"\"\n  } ],\n  \"default\" : true,\n  \"roleConfigurable\" : true,\n  \"currentUserRole\" : true,\n  \"name\" : \"name\",\n  \"admin\" : true,\n  \"description\" : \"description\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : 6,\n  \"translatedName\" : \"translatedName\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ProjectRole>(exampleJson)
            : default(ProjectRole);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Delete project role
        /// </summary>
        /// <remarks>Deletes a project role. You must specify a replacement project role if you wish to delete a project role that is in use.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id">The ID of the project role to delete. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.</param>
        /// <param name="swap">The ID of the project role that will replace the one being deleted.</param>
        /// <response code="204">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid or if the replacement project role is not found.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have administrative permissions.</response>
        /// <response code="404">Returned if the project role being deleted is not found.</response>
        /// <response code="409">Returned if the project role being deleted is in use and a replacement project role is not specified in the request.</response>
        [HttpDelete]
        [Route("/rest/api/3/role/{id}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteProjectRole")]
        public virtual IActionResult DeleteProjectRole([FromRoute (Name = "id")][Required]long id, [FromQuery (Name = "swap")]long? swap)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Fully update project role
        /// </summary>
        /// <remarks>Updates the project role&#39;s name and description. You must include both a name and a description in the request.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id">The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.</param>
        /// <param name="createUpdateRoleRequestBean"></param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is not valid. The &#x60;name&#x60; cannot be empty or start or end with whitespace.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have administrative permissions.</response>
        /// <response code="404">Returned if the project role is not found.</response>
        [HttpPut]
        [Route("/rest/api/3/role/{id}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("FullyUpdateProjectRole")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProjectRole), description: "Returned if the request is successful.")]
        public virtual IActionResult FullyUpdateProjectRole([FromRoute (Name = "id")][Required]long id, [FromBody]CreateUpdateRoleRequestBean createUpdateRoleRequestBean)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ProjectRole));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"actors\" : [ {\n    \"avatarUrl\" : \"https://openapi-generator.tech\",\n    \"displayName\" : \"displayName\",\n    \"actorGroup\" : \"\",\n    \"name\" : \"name\",\n    \"id\" : 0,\n    \"type\" : \"atlassian-group-role-actor\",\n    \"actorUser\" : \"\"\n  }, {\n    \"avatarUrl\" : \"https://openapi-generator.tech\",\n    \"displayName\" : \"displayName\",\n    \"actorGroup\" : \"\",\n    \"name\" : \"name\",\n    \"id\" : 0,\n    \"type\" : \"atlassian-group-role-actor\",\n    \"actorUser\" : \"\"\n  } ],\n  \"default\" : true,\n  \"roleConfigurable\" : true,\n  \"currentUserRole\" : true,\n  \"name\" : \"name\",\n  \"admin\" : true,\n  \"description\" : \"description\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : 6,\n  \"translatedName\" : \"translatedName\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ProjectRole>(exampleJson)
            : default(ProjectRole);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get all project roles
        /// </summary>
        /// <remarks>Gets a list of all project roles, complete with project role details and default actors.  ### About project roles ###  [Project roles](https://confluence.atlassian.com/x/3odKLg) are a flexible way to to associate users and groups with projects. In Jira Cloud, the list of project roles is shared globally with all projects, but each project can have a different set of actors associated with it (unlike groups, which have the same membership throughout all Jira applications).  Project roles are used in [permission schemes](#api-rest-api-3-permissionscheme-get), [email notification schemes](#api-rest-api-3-notificationscheme-get), [issue security levels](#api-rest-api-3-issuesecurityschemes-get), [comment visibility](#api-rest-api-3-comment-list-post), and workflow conditions.  #### Members and actors ####  In the Jira REST API, a member of a project role is called an *actor*. An *actor* is a group or user associated with a project role.  Actors may be set as [default members](https://confluence.atlassian.com/x/3odKLg#Managingprojectroles-Specifying&#39;defaultmembers&#39;foraprojectrole) of the project role or set at the project level:   *  Default actors: Users and groups that are assigned to the project role for all newly created projects. The default actors can be removed at the project level later if desired.  *  Actors: Users and groups that are associated with a project role for a project, which may differ from the default actors. This enables you to assign a user to different roles in different projects.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have administrative permissions.</response>
        [HttpGet]
        [Route("/rest/api/3/role")]
        [ValidateModelState]
        [SwaggerOperation("GetAllProjectRoles")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ProjectRole>), description: "Returned if the request is successful.")]
        public virtual IActionResult GetAllProjectRoles()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ProjectRole>));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            string exampleJson = null;
            exampleJson = "[ {\n  \"actors\" : [ {\n    \"avatarUrl\" : \"https://openapi-generator.tech\",\n    \"displayName\" : \"displayName\",\n    \"actorGroup\" : \"\",\n    \"name\" : \"name\",\n    \"id\" : 0,\n    \"type\" : \"atlassian-group-role-actor\",\n    \"actorUser\" : \"\"\n  }, {\n    \"avatarUrl\" : \"https://openapi-generator.tech\",\n    \"displayName\" : \"displayName\",\n    \"actorGroup\" : \"\",\n    \"name\" : \"name\",\n    \"id\" : 0,\n    \"type\" : \"atlassian-group-role-actor\",\n    \"actorUser\" : \"\"\n  } ],\n  \"default\" : true,\n  \"roleConfigurable\" : true,\n  \"currentUserRole\" : true,\n  \"name\" : \"name\",\n  \"admin\" : true,\n  \"description\" : \"description\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : 6,\n  \"translatedName\" : \"translatedName\"\n}, {\n  \"actors\" : [ {\n    \"avatarUrl\" : \"https://openapi-generator.tech\",\n    \"displayName\" : \"displayName\",\n    \"actorGroup\" : \"\",\n    \"name\" : \"name\",\n    \"id\" : 0,\n    \"type\" : \"atlassian-group-role-actor\",\n    \"actorUser\" : \"\"\n  }, {\n    \"avatarUrl\" : \"https://openapi-generator.tech\",\n    \"displayName\" : \"displayName\",\n    \"actorGroup\" : \"\",\n    \"name\" : \"name\",\n    \"id\" : 0,\n    \"type\" : \"atlassian-group-role-actor\",\n    \"actorUser\" : \"\"\n  } ],\n  \"default\" : true,\n  \"roleConfigurable\" : true,\n  \"currentUserRole\" : true,\n  \"name\" : \"name\",\n  \"admin\" : true,\n  \"description\" : \"description\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : 6,\n  \"translatedName\" : \"translatedName\"\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ProjectRole>>(exampleJson)
            : default(List<ProjectRole>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get project role for project
        /// </summary>
        /// <remarks>Returns a project role&#39;s details and actors associated with the project. The list of actors is sorted by display name.  To check whether a user belongs to a role based on their group memberships, use [Get user](#api-rest-api-3-user-get) with the &#x60;groups&#x60; expand parameter selected. Then check whether the user keys and groups match with the actors returned for the project.  This operation can be accessed anonymously.  **[Permissions](#permissions) required:** *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project or *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="projectIdOrKey">The project ID or project key (case sensitive).</param>
        /// <param name="id">The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.</param>
        /// <param name="excludeInactiveUsers">Exclude inactive users.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is not valid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="404">Returned if:   *  the project or project role is not found.  *  the user does not have administrative permission.</response>
        [HttpGet]
        [Route("/rest/api/3/project/{projectIdOrKey}/role/{id}")]
        [ValidateModelState]
        [SwaggerOperation("GetProjectRole")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProjectRole), description: "Returned if the request is successful.")]
        public virtual IActionResult GetProjectRole([FromRoute (Name = "projectIdOrKey")][Required]string projectIdOrKey, [FromRoute (Name = "id")][Required]long id, [FromQuery (Name = "excludeInactiveUsers")]bool? excludeInactiveUsers)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ProjectRole));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"actors\" : [ {\n    \"avatarUrl\" : \"https://openapi-generator.tech\",\n    \"displayName\" : \"displayName\",\n    \"actorGroup\" : \"\",\n    \"name\" : \"name\",\n    \"id\" : 0,\n    \"type\" : \"atlassian-group-role-actor\",\n    \"actorUser\" : \"\"\n  }, {\n    \"avatarUrl\" : \"https://openapi-generator.tech\",\n    \"displayName\" : \"displayName\",\n    \"actorGroup\" : \"\",\n    \"name\" : \"name\",\n    \"id\" : 0,\n    \"type\" : \"atlassian-group-role-actor\",\n    \"actorUser\" : \"\"\n  } ],\n  \"default\" : true,\n  \"roleConfigurable\" : true,\n  \"currentUserRole\" : true,\n  \"name\" : \"name\",\n  \"admin\" : true,\n  \"description\" : \"description\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : 6,\n  \"translatedName\" : \"translatedName\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ProjectRole>(exampleJson)
            : default(ProjectRole);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get project role by ID
        /// </summary>
        /// <remarks>Gets the project role details and the default actors associated with the role. The list of default actors is sorted by display name.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id">The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have administrative permissions.</response>
        /// <response code="404">Returned if the project role is not found.</response>
        [HttpGet]
        [Route("/rest/api/3/role/{id}")]
        [ValidateModelState]
        [SwaggerOperation("GetProjectRoleById")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProjectRole), description: "Returned if the request is successful.")]
        public virtual IActionResult GetProjectRoleById([FromRoute (Name = "id")][Required]long id)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ProjectRole));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"actors\" : [ {\n    \"avatarUrl\" : \"https://openapi-generator.tech\",\n    \"displayName\" : \"displayName\",\n    \"actorGroup\" : \"\",\n    \"name\" : \"name\",\n    \"id\" : 0,\n    \"type\" : \"atlassian-group-role-actor\",\n    \"actorUser\" : \"\"\n  }, {\n    \"avatarUrl\" : \"https://openapi-generator.tech\",\n    \"displayName\" : \"displayName\",\n    \"actorGroup\" : \"\",\n    \"name\" : \"name\",\n    \"id\" : 0,\n    \"type\" : \"atlassian-group-role-actor\",\n    \"actorUser\" : \"\"\n  } ],\n  \"default\" : true,\n  \"roleConfigurable\" : true,\n  \"currentUserRole\" : true,\n  \"name\" : \"name\",\n  \"admin\" : true,\n  \"description\" : \"description\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : 6,\n  \"translatedName\" : \"translatedName\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ProjectRole>(exampleJson)
            : default(ProjectRole);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get project role details
        /// </summary>
        /// <remarks>Returns all [project roles](https://confluence.atlassian.com/x/3odKLg) and the details for each role. Note that the list of project roles is common to all projects.  This operation can be accessed anonymously.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.</remarks>
        /// <param name="projectIdOrKey">The project ID or project key (case sensitive).</param>
        /// <param name="currentMember">Whether the roles should be filtered to include only those the user is assigned to.</param>
        /// <param name="excludeConnectAddons"></param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="404">Returned if the project is not found or if the user does not have the necessary permissions for the project.</response>
        [HttpGet]
        [Route("/rest/api/3/project/{projectIdOrKey}/roledetails")]
        [ValidateModelState]
        [SwaggerOperation("GetProjectRoleDetails")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ProjectRoleDetails>), description: "Returned if the request is successful.")]
        public virtual IActionResult GetProjectRoleDetails([FromRoute (Name = "projectIdOrKey")][Required]string projectIdOrKey, [FromQuery (Name = "currentMember")]bool? currentMember, [FromQuery (Name = "excludeConnectAddons")]bool? excludeConnectAddons)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ProjectRoleDetails>));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"default\" : true,\n  \"roleConfigurable\" : true,\n  \"name\" : \"name\",\n  \"admin\" : true,\n  \"description\" : \"description\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : 0,\n  \"translatedName\" : \"translatedName\"\n}, {\n  \"default\" : true,\n  \"roleConfigurable\" : true,\n  \"name\" : \"name\",\n  \"admin\" : true,\n  \"description\" : \"description\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : 0,\n  \"translatedName\" : \"translatedName\"\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ProjectRoleDetails>>(exampleJson)
            : default(List<ProjectRoleDetails>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get project roles for project
        /// </summary>
        /// <remarks>Returns a list of [project roles](https://confluence.atlassian.com/x/3odKLg) for the project returning the name and self URL for each role.  Note that all project roles are shared with all projects in Jira Cloud. See [Get all project roles](#api-rest-api-3-role-get) for more information.  This operation can be accessed anonymously.  **[Permissions](#permissions) required:** *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for any project on the site or *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="projectIdOrKey">The project ID or project key (case sensitive).</param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing or if the user lacks administrative permissions for the project.</response>
        /// <response code="404">Returned if the project is not found or or if the user does not have administrative permissions for the project.</response>
        [HttpGet]
        [Route("/rest/api/3/project/{projectIdOrKey}/role")]
        [ValidateModelState]
        [SwaggerOperation("GetProjectRoles")]
        [SwaggerResponse(statusCode: 200, type: typeof(Dictionary<string, string>), description: "Returned if the request is successful.")]
        public virtual IActionResult GetProjectRoles([FromRoute (Name = "projectIdOrKey")][Required]string projectIdOrKey)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Dictionary<string, string>));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Dictionary<string, string>>(exampleJson)
            : new Dictionary<string, string>();
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Partial update project role
        /// </summary>
        /// <remarks>Updates either the project role&#39;s name or its description.  You cannot update both the name and description at the same time using this operation. If you send a request with a name and a description only the name is updated.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).</remarks>
        /// <param name="id">The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.</param>
        /// <param name="createUpdateRoleRequestBean"></param>
        /// <response code="200">Returned if the request is successful.</response>
        /// <response code="400">Returned if the request is invalid.</response>
        /// <response code="401">Returned if the authentication credentials are incorrect or missing.</response>
        /// <response code="403">Returned if the user does not have administrative permissions.</response>
        /// <response code="404">Returned if the project role is not found.</response>
        [HttpPost]
        [Route("/rest/api/3/role/{id}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PartialUpdateProjectRole")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProjectRole), description: "Returned if the request is successful.")]
        public virtual IActionResult PartialUpdateProjectRole([FromRoute (Name = "id")][Required]long id, [FromBody]CreateUpdateRoleRequestBean createUpdateRoleRequestBean)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ProjectRole));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"actors\" : [ {\n    \"avatarUrl\" : \"https://openapi-generator.tech\",\n    \"displayName\" : \"displayName\",\n    \"actorGroup\" : \"\",\n    \"name\" : \"name\",\n    \"id\" : 0,\n    \"type\" : \"atlassian-group-role-actor\",\n    \"actorUser\" : \"\"\n  }, {\n    \"avatarUrl\" : \"https://openapi-generator.tech\",\n    \"displayName\" : \"displayName\",\n    \"actorGroup\" : \"\",\n    \"name\" : \"name\",\n    \"id\" : 0,\n    \"type\" : \"atlassian-group-role-actor\",\n    \"actorUser\" : \"\"\n  } ],\n  \"default\" : true,\n  \"roleConfigurable\" : true,\n  \"currentUserRole\" : true,\n  \"name\" : \"name\",\n  \"admin\" : true,\n  \"description\" : \"description\",\n  \"self\" : \"https://openapi-generator.tech\",\n  \"id\" : 6,\n  \"translatedName\" : \"translatedName\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ProjectRole>(exampleJson)
            : default(ProjectRole);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
