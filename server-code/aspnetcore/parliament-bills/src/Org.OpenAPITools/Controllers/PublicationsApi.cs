/*
 * Bills API
 *
 * API to get and search for information regarding Bills, their stages, associated amendments and publications.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class PublicationsApiController : ControllerBase
    { 
        /// <summary>
        /// Return a list of Bill stage publications.
        /// </summary>
        /// <param name="billId"></param>
        /// <param name="stageId"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/api/v1/Bills/{billId}/Stages/{stageId}/Publications")]
        [ValidateModelState]
        [SwaggerOperation("ApiV1BillsBillIdStagesStageIdPublicationsGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(BillStagePublicationList), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request")]
        [SwaggerResponse(statusCode: 404, type: typeof(ProblemDetails), description: "Not Found")]
        public virtual IActionResult ApiV1BillsBillIdStagesStageIdPublicationsGet([FromRoute (Name = "billId")][Required]int billId, [FromRoute (Name = "stageId")][Required]int stageId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(BillStagePublicationList));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ProblemDetails));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ProblemDetails));
            string exampleJson = null;
            exampleJson = "{\n  \"billStageId\" : 0,\n  \"sittings\" : [ {\n    \"sittingId\" : 1,\n    \"publications\" : [ {\n      \"displayDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"publicationType\" : {\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 2\n      },\n      \"files\" : [ {\n        \"filename\" : \"filename\",\n        \"contentLength\" : 6,\n        \"id\" : 1,\n        \"contentType\" : \"contentType\"\n      }, {\n        \"filename\" : \"filename\",\n        \"contentLength\" : 6,\n        \"id\" : 1,\n        \"contentType\" : \"contentType\"\n      } ],\n      \"links\" : [ {\n        \"id\" : 5,\n        \"title\" : \"title\",\n        \"contentType\" : \"contentType\",\n        \"url\" : \"url\"\n      }, {\n        \"id\" : 5,\n        \"title\" : \"title\",\n        \"contentType\" : \"contentType\",\n        \"url\" : \"url\"\n      } ],\n      \"id\" : 6,\n      \"title\" : \"title\"\n    }, {\n      \"displayDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"publicationType\" : {\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 2\n      },\n      \"files\" : [ {\n        \"filename\" : \"filename\",\n        \"contentLength\" : 6,\n        \"id\" : 1,\n        \"contentType\" : \"contentType\"\n      }, {\n        \"filename\" : \"filename\",\n        \"contentLength\" : 6,\n        \"id\" : 1,\n        \"contentType\" : \"contentType\"\n      } ],\n      \"links\" : [ {\n        \"id\" : 5,\n        \"title\" : \"title\",\n        \"contentType\" : \"contentType\",\n        \"url\" : \"url\"\n      }, {\n        \"id\" : 5,\n        \"title\" : \"title\",\n        \"contentType\" : \"contentType\",\n        \"url\" : \"url\"\n      } ],\n      \"id\" : 6,\n      \"title\" : \"title\"\n    } ]\n  }, {\n    \"sittingId\" : 1,\n    \"publications\" : [ {\n      \"displayDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"publicationType\" : {\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 2\n      },\n      \"files\" : [ {\n        \"filename\" : \"filename\",\n        \"contentLength\" : 6,\n        \"id\" : 1,\n        \"contentType\" : \"contentType\"\n      }, {\n        \"filename\" : \"filename\",\n        \"contentLength\" : 6,\n        \"id\" : 1,\n        \"contentType\" : \"contentType\"\n      } ],\n      \"links\" : [ {\n        \"id\" : 5,\n        \"title\" : \"title\",\n        \"contentType\" : \"contentType\",\n        \"url\" : \"url\"\n      }, {\n        \"id\" : 5,\n        \"title\" : \"title\",\n        \"contentType\" : \"contentType\",\n        \"url\" : \"url\"\n      } ],\n      \"id\" : 6,\n      \"title\" : \"title\"\n    }, {\n      \"displayDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"publicationType\" : {\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 2\n      },\n      \"files\" : [ {\n        \"filename\" : \"filename\",\n        \"contentLength\" : 6,\n        \"id\" : 1,\n        \"contentType\" : \"contentType\"\n      }, {\n        \"filename\" : \"filename\",\n        \"contentLength\" : 6,\n        \"id\" : 1,\n        \"contentType\" : \"contentType\"\n      } ],\n      \"links\" : [ {\n        \"id\" : 5,\n        \"title\" : \"title\",\n        \"contentType\" : \"contentType\",\n        \"url\" : \"url\"\n      }, {\n        \"id\" : 5,\n        \"title\" : \"title\",\n        \"contentType\" : \"contentType\",\n        \"url\" : \"url\"\n      } ],\n      \"id\" : 6,\n      \"title\" : \"title\"\n    } ]\n  } ],\n  \"publications\" : [ {\n    \"displayDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"publicationType\" : {\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"id\" : 2\n    },\n    \"files\" : [ {\n      \"filename\" : \"filename\",\n      \"contentLength\" : 6,\n      \"id\" : 1,\n      \"contentType\" : \"contentType\"\n    }, {\n      \"filename\" : \"filename\",\n      \"contentLength\" : 6,\n      \"id\" : 1,\n      \"contentType\" : \"contentType\"\n    } ],\n    \"links\" : [ {\n      \"id\" : 5,\n      \"title\" : \"title\",\n      \"contentType\" : \"contentType\",\n      \"url\" : \"url\"\n    }, {\n      \"id\" : 5,\n      \"title\" : \"title\",\n      \"contentType\" : \"contentType\",\n      \"url\" : \"url\"\n    } ],\n    \"id\" : 6,\n    \"title\" : \"title\"\n  }, {\n    \"displayDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"publicationType\" : {\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"id\" : 2\n    },\n    \"files\" : [ {\n      \"filename\" : \"filename\",\n      \"contentLength\" : 6,\n      \"id\" : 1,\n      \"contentType\" : \"contentType\"\n    }, {\n      \"filename\" : \"filename\",\n      \"contentLength\" : 6,\n      \"id\" : 1,\n      \"contentType\" : \"contentType\"\n    } ],\n    \"links\" : [ {\n      \"id\" : 5,\n      \"title\" : \"title\",\n      \"contentType\" : \"contentType\",\n      \"url\" : \"url\"\n    }, {\n      \"id\" : 5,\n      \"title\" : \"title\",\n      \"contentType\" : \"contentType\",\n      \"url\" : \"url\"\n    } ],\n    \"id\" : 6,\n    \"title\" : \"title\"\n  } ]\n}";
            exampleJson = "Custom MIME type example not yet supported: text/json";
            exampleJson = "Custom MIME type example not yet supported: text/plain";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BillStagePublicationList>(exampleJson)
            : default(BillStagePublicationList);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Return a list of Bill publications.
        /// </summary>
        /// <param name="billId">Publications relating to Bill with Bill ID specified</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/api/v1/Bills/{billId}/Publications")]
        [ValidateModelState]
        [SwaggerOperation("GetBillPublication")]
        [SwaggerResponse(statusCode: 200, type: typeof(BillPublicationList), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request")]
        [SwaggerResponse(statusCode: 404, type: typeof(ProblemDetails), description: "Not Found")]
        public virtual IActionResult GetBillPublication([FromRoute (Name = "billId")][Required]int billId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(BillPublicationList));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ProblemDetails));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ProblemDetails));
            string exampleJson = null;
            exampleJson = "{\n  \"billId\" : 0,\n  \"publications\" : [ {\n    \"displayDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"publicationType\" : {\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"id\" : 2\n    },\n    \"files\" : [ {\n      \"filename\" : \"filename\",\n      \"contentLength\" : 6,\n      \"id\" : 1,\n      \"contentType\" : \"contentType\"\n    }, {\n      \"filename\" : \"filename\",\n      \"contentLength\" : 6,\n      \"id\" : 1,\n      \"contentType\" : \"contentType\"\n    } ],\n    \"links\" : [ {\n      \"id\" : 5,\n      \"title\" : \"title\",\n      \"contentType\" : \"contentType\",\n      \"url\" : \"url\"\n    }, {\n      \"id\" : 5,\n      \"title\" : \"title\",\n      \"contentType\" : \"contentType\",\n      \"url\" : \"url\"\n    } ],\n    \"id\" : 5,\n    \"title\" : \"title\"\n  }, {\n    \"displayDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"publicationType\" : {\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"id\" : 2\n    },\n    \"files\" : [ {\n      \"filename\" : \"filename\",\n      \"contentLength\" : 6,\n      \"id\" : 1,\n      \"contentType\" : \"contentType\"\n    }, {\n      \"filename\" : \"filename\",\n      \"contentLength\" : 6,\n      \"id\" : 1,\n      \"contentType\" : \"contentType\"\n    } ],\n    \"links\" : [ {\n      \"id\" : 5,\n      \"title\" : \"title\",\n      \"contentType\" : \"contentType\",\n      \"url\" : \"url\"\n    }, {\n      \"id\" : 5,\n      \"title\" : \"title\",\n      \"contentType\" : \"contentType\",\n      \"url\" : \"url\"\n    } ],\n    \"id\" : 5,\n    \"title\" : \"title\"\n  } ]\n}";
            exampleJson = "Custom MIME type example not yet supported: text/json";
            exampleJson = "Custom MIME type example not yet supported: text/plain";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BillPublicationList>(exampleJson)
            : default(BillPublicationList);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
