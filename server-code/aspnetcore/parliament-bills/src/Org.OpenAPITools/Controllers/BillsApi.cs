/*
 * Bills API
 *
 * API to get and search for information regarding Bills, their stages, associated amendments and publications.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class BillsApiController : ControllerBase
    { 
        /// <summary>
        /// Returns all Bill stages.
        /// </summary>
        /// <param name="billId">Stages relating to a Bill with Bill ID specified</param>
        /// <param name="skip"></param>
        /// <param name="take"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/api/v1/Bills/{billId}/Stages")]
        [ValidateModelState]
        [SwaggerOperation("ApiV1BillsBillIdStagesGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(StageSummarySearchResult), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request")]
        [SwaggerResponse(statusCode: 404, type: typeof(ProblemDetails), description: "Not Found")]
        public virtual IActionResult ApiV1BillsBillIdStagesGet([FromRoute (Name = "billId")][Required]int billId, [FromQuery (Name = "Skip")]int? skip, [FromQuery (Name = "Take")]int? take)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(StageSummarySearchResult));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ProblemDetails));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ProblemDetails));
            string exampleJson = null;
            exampleJson = "{\n  \"totalResults\" : 6,\n  \"itemsPerPage\" : 0,\n  \"items\" : [ {\n    \"stageSittings\" : [ {\n      \"date\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"billId\" : 7,\n      \"billStageId\" : 9,\n      \"id\" : 3,\n      \"stageId\" : 2\n    }, {\n      \"date\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"billId\" : 7,\n      \"billStageId\" : 9,\n      \"id\" : 3,\n      \"stageId\" : 2\n    } ],\n    \"sortOrder\" : 5,\n    \"description\" : \"description\",\n    \"id\" : 1,\n    \"sessionId\" : 5,\n    \"abbreviation\" : \"abbreviation\",\n    \"stageId\" : 2\n  }, {\n    \"stageSittings\" : [ {\n      \"date\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"billId\" : 7,\n      \"billStageId\" : 9,\n      \"id\" : 3,\n      \"stageId\" : 2\n    }, {\n      \"date\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"billId\" : 7,\n      \"billStageId\" : 9,\n      \"id\" : 3,\n      \"stageId\" : 2\n    } ],\n    \"sortOrder\" : 5,\n    \"description\" : \"description\",\n    \"id\" : 1,\n    \"sessionId\" : 5,\n    \"abbreviation\" : \"abbreviation\",\n    \"stageId\" : 2\n  } ]\n}";
            exampleJson = "Custom MIME type example not yet supported: text/json";
            exampleJson = "Custom MIME type example not yet supported: text/plain";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<StageSummarySearchResult>(exampleJson)
            : default(StageSummarySearchResult);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Return a Bill.
        /// </summary>
        /// <param name="billId">Bill with ID specified</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/api/v1/Bills/{billId}")]
        [ValidateModelState]
        [SwaggerOperation("GetBill")]
        [SwaggerResponse(statusCode: 200, type: typeof(Bill), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request")]
        [SwaggerResponse(statusCode: 404, type: typeof(ProblemDetails), description: "Not Found")]
        public virtual IActionResult GetBill([FromRoute (Name = "billId")][Required]int billId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Bill));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ProblemDetails));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ProblemDetails));
            string exampleJson = null;
            exampleJson = "{\n  \"petitionInformation\" : \"petitionInformation\",\n  \"summary\" : \"summary\",\n  \"currentStage\" : {\n    \"stageSittings\" : [ {\n      \"date\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"billId\" : 7,\n      \"billStageId\" : 9,\n      \"id\" : 3,\n      \"stageId\" : 2\n    }, {\n      \"date\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"billId\" : 7,\n      \"billStageId\" : 9,\n      \"id\" : 3,\n      \"stageId\" : 2\n    } ],\n    \"sortOrder\" : 5,\n    \"description\" : \"description\",\n    \"id\" : 1,\n    \"sessionId\" : 5,\n    \"abbreviation\" : \"abbreviation\",\n    \"stageId\" : 2\n  },\n  \"agent\" : {\n    \"website\" : \"website\",\n    \"address\" : \"address\",\n    \"name\" : \"name\",\n    \"email\" : \"email\",\n    \"phoneNo\" : \"phoneNo\"\n  },\n  \"billWithdrawn\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"shortTitle\" : \"shortTitle\",\n  \"isDefeated\" : true,\n  \"isAct\" : true,\n  \"sponsors\" : [ {\n    \"sortOrder\" : 2,\n    \"member\" : {\n      \"memberPage\" : \"memberPage\",\n      \"name\" : \"name\",\n      \"partyColour\" : \"partyColour\",\n      \"memberFrom\" : \"memberFrom\",\n      \"memberPhoto\" : \"memberPhoto\",\n      \"party\" : \"party\",\n      \"memberId\" : 5\n    },\n    \"organisation\" : {\n      \"name\" : \"name\",\n      \"url\" : \"url\"\n    }\n  }, {\n    \"sortOrder\" : 2,\n    \"member\" : {\n      \"memberPage\" : \"memberPage\",\n      \"name\" : \"name\",\n      \"partyColour\" : \"partyColour\",\n      \"memberFrom\" : \"memberFrom\",\n      \"memberPhoto\" : \"memberPhoto\",\n      \"party\" : \"party\",\n      \"memberId\" : 5\n    },\n    \"organisation\" : {\n      \"name\" : \"name\",\n      \"url\" : \"url\"\n    }\n  } ],\n  \"billId\" : 0,\n  \"lastUpdate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"petitioningPeriod\" : \"petitioningPeriod\",\n  \"introducedSessionId\" : 5,\n  \"includedSessionIds\" : [ 1, 1 ],\n  \"promoters\" : [ {\n    \"organisationName\" : \"organisationName\",\n    \"organisationUrl\" : \"organisationUrl\"\n  }, {\n    \"organisationName\" : \"organisationName\",\n    \"organisationUrl\" : \"organisationUrl\"\n  } ],\n  \"billTypeId\" : 6,\n  \"longTitle\" : \"longTitle\"\n}";
            exampleJson = "Custom MIME type example not yet supported: text/json";
            exampleJson = "Custom MIME type example not yet supported: text/plain";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Bill>(exampleJson)
            : default(Bill);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Returns a Bill stage.
        /// </summary>
        /// <param name="billId">Bill stage relating to Bill with Bill ID specified</param>
        /// <param name="billStageId">Bill stage with ID specified</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/api/v1/Bills/{billId}/Stages/{billStageId}")]
        [ValidateModelState]
        [SwaggerOperation("GetBillStageDetails")]
        [SwaggerResponse(statusCode: 200, type: typeof(BillStageDetails), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request")]
        [SwaggerResponse(statusCode: 404, type: typeof(ProblemDetails), description: "Not Found")]
        public virtual IActionResult GetBillStageDetails([FromRoute (Name = "billId")][Required]int billId, [FromRoute (Name = "billStageId")][Required]int billStageId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(BillStageDetails));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ProblemDetails));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ProblemDetails));
            string exampleJson = null;
            exampleJson = "{\n  \"stageSittings\" : [ {\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"billId\" : 7,\n    \"billStageId\" : 9,\n    \"id\" : 3,\n    \"stageId\" : 2\n  }, {\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"billId\" : 7,\n    \"billStageId\" : 9,\n    \"id\" : 3,\n    \"stageId\" : 2\n  } ],\n  \"committee\" : {\n    \"name\" : \"name\",\n    \"id\" : 0,\n    \"category\" : \"category\",\n    \"url\" : \"url\"\n  },\n  \"lastUpdate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"sortOrder\" : 2,\n  \"description\" : \"description\",\n  \"nextStageBillStageId\" : 1,\n  \"id\" : 6,\n  \"sessionId\" : 5,\n  \"abbreviation\" : \"abbreviation\",\n  \"previousStageBillStageId\" : 5,\n  \"stageId\" : 7\n}";
            exampleJson = "Custom MIME type example not yet supported: text/json";
            exampleJson = "Custom MIME type example not yet supported: text/plain";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BillStageDetails>(exampleJson)
            : default(BillStageDetails);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Returns a list of Bills.
        /// </summary>
        /// <param name="searchTerm"></param>
        /// <param name="session"></param>
        /// <param name="currentHouse"></param>
        /// <param name="originatingHouse"></param>
        /// <param name="memberId"></param>
        /// <param name="departmentId"></param>
        /// <param name="billStage"></param>
        /// <param name="billStagesExcluded"></param>
        /// <param name="isDefeated"></param>
        /// <param name="isWithdrawn"></param>
        /// <param name="billType"></param>
        /// <param name="sortOrder"></param>
        /// <param name="billIds"></param>
        /// <param name="skip"></param>
        /// <param name="take"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        [HttpGet]
        [Route("/api/v1/Bills")]
        [ValidateModelState]
        [SwaggerOperation("GetBills")]
        [SwaggerResponse(statusCode: 200, type: typeof(BillSummarySearchResult), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request")]
        public virtual IActionResult GetBills([FromQuery (Name = "SearchTerm")]string searchTerm, [FromQuery (Name = "Session")]int? session, [FromQuery (Name = "CurrentHouse")]House currentHouse, [FromQuery (Name = "OriginatingHouse")]OriginatingHouse originatingHouse, [FromQuery (Name = "MemberId")]int? memberId, [FromQuery (Name = "DepartmentId")]int? departmentId, [FromQuery (Name = "BillStage")]List<int> billStage, [FromQuery (Name = "BillStagesExcluded")]List<int> billStagesExcluded, [FromQuery (Name = "IsDefeated")]bool? isDefeated, [FromQuery (Name = "IsWithdrawn")]bool? isWithdrawn, [FromQuery (Name = "BillType")]List<int> billType, [FromQuery (Name = "SortOrder")]BillSortOrder sortOrder, [FromQuery (Name = "BillIds")]List<int> billIds, [FromQuery (Name = "Skip")]int? skip, [FromQuery (Name = "Take")]int? take)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(BillSummarySearchResult));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ProblemDetails));
            string exampleJson = null;
            exampleJson = "{\n  \"totalResults\" : 1,\n  \"itemsPerPage\" : 1,\n  \"items\" : [ {\n    \"currentStage\" : {\n      \"stageSittings\" : [ {\n        \"date\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"billId\" : 7,\n        \"billStageId\" : 9,\n        \"id\" : 3,\n        \"stageId\" : 2\n      }, {\n        \"date\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"billId\" : 7,\n        \"billStageId\" : 9,\n        \"id\" : 3,\n        \"stageId\" : 2\n      } ],\n      \"sortOrder\" : 5,\n      \"description\" : \"description\",\n      \"id\" : 1,\n      \"sessionId\" : 5,\n      \"abbreviation\" : \"abbreviation\",\n      \"stageId\" : 2\n    },\n    \"isDefeated\" : true,\n    \"isAct\" : true,\n    \"billId\" : 0,\n    \"billWithdrawn\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"lastUpdate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"shortTitle\" : \"shortTitle\",\n    \"introducedSessionId\" : 7,\n    \"includedSessionIds\" : [ 4, 4 ],\n    \"billTypeId\" : 6\n  }, {\n    \"currentStage\" : {\n      \"stageSittings\" : [ {\n        \"date\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"billId\" : 7,\n        \"billStageId\" : 9,\n        \"id\" : 3,\n        \"stageId\" : 2\n      }, {\n        \"date\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"billId\" : 7,\n        \"billStageId\" : 9,\n        \"id\" : 3,\n        \"stageId\" : 2\n      } ],\n      \"sortOrder\" : 5,\n      \"description\" : \"description\",\n      \"id\" : 1,\n      \"sessionId\" : 5,\n      \"abbreviation\" : \"abbreviation\",\n      \"stageId\" : 2\n    },\n    \"isDefeated\" : true,\n    \"isAct\" : true,\n    \"billId\" : 0,\n    \"billWithdrawn\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"lastUpdate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"shortTitle\" : \"shortTitle\",\n    \"introducedSessionId\" : 7,\n    \"includedSessionIds\" : [ 4, 4 ],\n    \"billTypeId\" : 6\n  } ]\n}";
            exampleJson = "Custom MIME type example not yet supported: text/json";
            exampleJson = "Custom MIME type example not yet supported: text/plain";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BillSummarySearchResult>(exampleJson)
            : default(BillSummarySearchResult);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
