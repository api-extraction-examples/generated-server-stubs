/*
 * Bills API
 *
 * API to get and search for information regarding Bills, their stages, associated amendments and publications.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class AmendmentsApiController : ControllerBase
    { 
        /// <summary>
        /// Returns an amendment.
        /// </summary>
        /// <param name="billId">Amendment relating to a bill with bill ID specified</param>
        /// <param name="billStageId">Amendment relating to a bill stage with bill stage ID specified</param>
        /// <param name="amendmentId">Amendment with amendment ID specified</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/api/v1/Bills/{billId}/Stages/{billStageId}/Amendments/{amendmentId}")]
        [ValidateModelState]
        [SwaggerOperation("GetAmendment")]
        [SwaggerResponse(statusCode: 200, type: typeof(AmendmentDetail), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request")]
        [SwaggerResponse(statusCode: 404, type: typeof(ProblemDetails), description: "Not Found")]
        public virtual IActionResult GetAmendment([FromRoute (Name = "billId")][Required]int billId, [FromRoute (Name = "billStageId")][Required]int billStageId, [FromRoute (Name = "amendmentId")][Required]int amendmentId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AmendmentDetail));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ProblemDetails));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ProblemDetails));
            string exampleJson = null;
            exampleJson = "{\n  \"amendmentNote\" : \"amendmentNote\",\n  \"clause\" : 5,\n  \"pageNumber\" : 7,\n  \"amendmentId\" : 0,\n  \"explanatoryTextPrefix\" : \"explanatoryTextPrefix\",\n  \"marshalledListText\" : \"marshalledListText\",\n  \"amendmentLines\" : [ {\n    \"hangingIndentation\" : \"hangingIndentation\",\n    \"isImage\" : true,\n    \"indentation\" : 6,\n    \"text\" : \"text\",\n    \"imageType\" : \"imageType\"\n  }, {\n    \"hangingIndentation\" : \"hangingIndentation\",\n    \"isImage\" : true,\n    \"indentation\" : 6,\n    \"text\" : \"text\",\n    \"imageType\" : \"imageType\"\n  } ],\n  \"explanatoryText\" : \"explanatoryText\",\n  \"schedule\" : 9,\n  \"amendmentPosition\" : \"amendmentPosition\",\n  \"sponsors\" : [ {\n    \"isLead\" : true,\n    \"memberPage\" : \"memberPage\",\n    \"sortOrder\" : 3,\n    \"name\" : \"name\",\n    \"partyColour\" : \"partyColour\",\n    \"memberFrom\" : \"memberFrom\",\n    \"memberPhoto\" : \"memberPhoto\",\n    \"party\" : \"party\",\n    \"memberId\" : 9\n  }, {\n    \"isLead\" : true,\n    \"memberPage\" : \"memberPage\",\n    \"sortOrder\" : 3,\n    \"name\" : \"name\",\n    \"partyColour\" : \"partyColour\",\n    \"memberFrom\" : \"memberFrom\",\n    \"memberPhoto\" : \"memberPhoto\",\n    \"party\" : \"party\",\n    \"memberId\" : 9\n  } ],\n  \"billId\" : 1,\n  \"billStageId\" : 5,\n  \"lineNumber\" : 2\n}";
            exampleJson = "Custom MIME type example not yet supported: text/json";
            exampleJson = "Custom MIME type example not yet supported: text/plain";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AmendmentDetail>(exampleJson)
            : default(AmendmentDetail);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Returns a list of amendments.
        /// </summary>
        /// <param name="billId">Amendments relating to a Bill with Bill ID specified</param>
        /// <param name="billStageId">Amendments relating to a Bill stage with Bill stage ID specified</param>
        /// <param name="searchTerm"></param>
        /// <param name="decision"></param>
        /// <param name="memberId"></param>
        /// <param name="skip"></param>
        /// <param name="take"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/api/v1/Bills/{billId}/Stages/{billStageId}/Amendments")]
        [ValidateModelState]
        [SwaggerOperation("GetAmendments")]
        [SwaggerResponse(statusCode: 200, type: typeof(AmendmentSearchItemSearchResult), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request")]
        [SwaggerResponse(statusCode: 404, type: typeof(ProblemDetails), description: "Not Found")]
        public virtual IActionResult GetAmendments([FromRoute (Name = "billId")][Required]int billId, [FromRoute (Name = "billStageId")][Required]int billStageId, [FromQuery (Name = "SearchTerm")]string searchTerm, [FromQuery (Name = "Decision")]Decision decision, [FromQuery (Name = "MemberId")]int? memberId, [FromQuery (Name = "Skip")]int? skip, [FromQuery (Name = "Take")]int? take)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AmendmentSearchItemSearchResult));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ProblemDetails));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ProblemDetails));
            string exampleJson = null;
            exampleJson = "{\n  \"totalResults\" : 4,\n  \"itemsPerPage\" : 2,\n  \"items\" : [ {\n    \"clause\" : 5,\n    \"pageNumber\" : 2,\n    \"amendmentId\" : 0,\n    \"marshalledListText\" : \"marshalledListText\",\n    \"schedule\" : 7,\n    \"summaryText\" : [ \"summaryText\", \"summaryText\" ],\n    \"amendmentPosition\" : \"amendmentPosition\",\n    \"sponsors\" : [ {\n      \"isLead\" : true,\n      \"memberPage\" : \"memberPage\",\n      \"sortOrder\" : 3,\n      \"name\" : \"name\",\n      \"partyColour\" : \"partyColour\",\n      \"memberFrom\" : \"memberFrom\",\n      \"memberPhoto\" : \"memberPhoto\",\n      \"party\" : \"party\",\n      \"memberId\" : 9\n    }, {\n      \"isLead\" : true,\n      \"memberPage\" : \"memberPage\",\n      \"sortOrder\" : 3,\n      \"name\" : \"name\",\n      \"partyColour\" : \"partyColour\",\n      \"memberFrom\" : \"memberFrom\",\n      \"memberPhoto\" : \"memberPhoto\",\n      \"party\" : \"party\",\n      \"memberId\" : 9\n    } ],\n    \"billId\" : 6,\n    \"billStageId\" : 1,\n    \"lineNumber\" : 5\n  }, {\n    \"clause\" : 5,\n    \"pageNumber\" : 2,\n    \"amendmentId\" : 0,\n    \"marshalledListText\" : \"marshalledListText\",\n    \"schedule\" : 7,\n    \"summaryText\" : [ \"summaryText\", \"summaryText\" ],\n    \"amendmentPosition\" : \"amendmentPosition\",\n    \"sponsors\" : [ {\n      \"isLead\" : true,\n      \"memberPage\" : \"memberPage\",\n      \"sortOrder\" : 3,\n      \"name\" : \"name\",\n      \"partyColour\" : \"partyColour\",\n      \"memberFrom\" : \"memberFrom\",\n      \"memberPhoto\" : \"memberPhoto\",\n      \"party\" : \"party\",\n      \"memberId\" : 9\n    }, {\n      \"isLead\" : true,\n      \"memberPage\" : \"memberPage\",\n      \"sortOrder\" : 3,\n      \"name\" : \"name\",\n      \"partyColour\" : \"partyColour\",\n      \"memberFrom\" : \"memberFrom\",\n      \"memberPhoto\" : \"memberPhoto\",\n      \"party\" : \"party\",\n      \"memberId\" : 9\n    } ],\n    \"billId\" : 6,\n    \"billStageId\" : 1,\n    \"lineNumber\" : 5\n  } ]\n}";
            exampleJson = "Custom MIME type example not yet supported: text/json";
            exampleJson = "Custom MIME type example not yet supported: text/plain";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AmendmentSearchItemSearchResult>(exampleJson)
            : default(AmendmentSearchItemSearchResult);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
