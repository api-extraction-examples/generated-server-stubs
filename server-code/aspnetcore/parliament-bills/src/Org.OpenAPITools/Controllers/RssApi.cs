/*
 * Bills API
 *
 * API to get and search for information regarding Bills, their stages, associated amendments and publications.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class RssApiController : ControllerBase
    { 
        /// <summary>
        /// Returns an Rss feed of all Bills.
        /// </summary>
        /// <response code="200">Success</response>
        [HttpGet]
        [Route("/api/v1/Rss/allbills.rss")]
        [ValidateModelState]
        [SwaggerOperation("ApiV1RssAllbillsRssGet")]
        public virtual IActionResult ApiV1RssAllbillsRssGet()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Returns an Rss feed of a certain Bill.
        /// </summary>
        /// <param name="id">Id of Bill</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/api/v1/Rss/Bills/{id}.rss")]
        [ValidateModelState]
        [SwaggerOperation("ApiV1RssBillsIdRssGet")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request")]
        [SwaggerResponse(statusCode: 404, type: typeof(ProblemDetails), description: "Not Found")]
        public virtual IActionResult ApiV1RssBillsIdRssGet([FromRoute (Name = "id")][Required]int id)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ProblemDetails));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ProblemDetails));

            throw new NotImplementedException();
        }

        /// <summary>
        /// Returns an Rss feed of private Bills.
        /// </summary>
        /// <response code="200">Success</response>
        [HttpGet]
        [Route("/api/v1/Rss/privatebills.rss")]
        [ValidateModelState]
        [SwaggerOperation("ApiV1RssPrivatebillsRssGet")]
        public virtual IActionResult ApiV1RssPrivatebillsRssGet()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Returns an Rss feed of public Bills.
        /// </summary>
        /// <response code="200">Success</response>
        [HttpGet]
        [Route("/api/v1/Rss/publicbills.rss")]
        [ValidateModelState]
        [SwaggerOperation("ApiV1RssPublicbillsRssGet")]
        public virtual IActionResult ApiV1RssPublicbillsRssGet()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }
    }
}
