/*
 * Bills API
 *
 * API to get and search for information regarding Bills, their stages, associated amendments and publications.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class StagesApiController : ControllerBase
    { 
        /// <summary>
        /// Returns a list of Bill stages.
        /// </summary>
        /// <param name="skip"></param>
        /// <param name="take"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        [HttpGet]
        [Route("/api/v1/Stages")]
        [ValidateModelState]
        [SwaggerOperation("ApiV1StagesGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(StageReferenceSearchResult), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request")]
        public virtual IActionResult ApiV1StagesGet([FromQuery (Name = "Skip")]int? skip, [FromQuery (Name = "Take")]int? take)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(StageReferenceSearchResult));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ProblemDetails));
            string exampleJson = null;
            exampleJson = "{\n  \"totalResults\" : 1,\n  \"itemsPerPage\" : 6,\n  \"items\" : [ {\n    \"name\" : \"name\",\n    \"id\" : 0\n  }, {\n    \"name\" : \"name\",\n    \"id\" : 0\n  } ]\n}";
            exampleJson = "Custom MIME type example not yet supported: text/json";
            exampleJson = "Custom MIME type example not yet supported: text/plain";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<StageReferenceSearchResult>(exampleJson)
            : default(StageReferenceSearchResult);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
