/*
 * Account API
 *
 * The <b>Account API</b> gives sellers the ability to configure their eBay seller accounts, including the seller's policies (eBay business policies and seller-defined custom policies), opt in and out of eBay seller programs, configure sales tax tables, and get account information.  <br/><br/>For details on the availability of the methods in this API, see <a href=\"/api-docs/sell/account/overview.html#requirements\">Account API requirements and restrictions</a>.
 *
 * The version of the OpenAPI document: v1.9.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// This root container defines a seller&#39;s return business policy for a specific marketplace and category group. This type is used when creating or updating a return business policy.
    /// </summary>
    [DataContract]
    public partial class ReturnPolicyRequest : IEquatable<ReturnPolicyRequest>
    {
        /// <summary>
        /// This container indicates which category group that the return policy applies to.&lt;br/&gt;&lt;br/&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note&lt;/b&gt;: Return business policies are not applicable to motor vehicle listings, so the &lt;b&gt;categoryTypes.name&lt;/b&gt; value must be set to &lt;code&gt;ALL_EXCLUDING_MOTORS_VEHICLES&lt;/code&gt; for return business policies.&lt;/span&gt;
        /// </summary>
        /// <value>This container indicates which category group that the return policy applies to.&lt;br/&gt;&lt;br/&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note&lt;/b&gt;: Return business policies are not applicable to motor vehicle listings, so the &lt;b&gt;categoryTypes.name&lt;/b&gt; value must be set to &lt;code&gt;ALL_EXCLUDING_MOTORS_VEHICLES&lt;/code&gt; for return business policies.&lt;/span&gt;</value>
        [DataMember(Name="categoryTypes", EmitDefaultValue=false)]
        public List<CategoryType> CategoryTypes { get; set; }

        /// <summary>
        /// A seller-defined description of the return business policy. This description is only for the seller&#39;s use, and is not exposed on any eBay pages.  &lt;br/&gt;&lt;br/&gt;&lt;b&gt;Max length&lt;/b&gt;: 250
        /// </summary>
        /// <value>A seller-defined description of the return business policy. This description is only for the seller&#39;s use, and is not exposed on any eBay pages.  &lt;br/&gt;&lt;br/&gt;&lt;b&gt;Max length&lt;/b&gt;: 250</value>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// &lt;p class&#x3D;\&quot;tablenote\&quot;&gt;&lt;span  style&#x3D;\&quot;color: #dd1e31;\&quot;&gt;&lt;b&gt;Important!&lt;/b&gt;&lt;/span&gt; This field is deprecated, since eBay no longer supports extended holiday returns. Any value supplied in this field is neither read nor returned.&lt;/p&gt; 
        /// </summary>
        /// <value>&lt;p class&#x3D;\&quot;tablenote\&quot;&gt;&lt;span  style&#x3D;\&quot;color: #dd1e31;\&quot;&gt;&lt;b&gt;Important!&lt;/b&gt;&lt;/span&gt; This field is deprecated, since eBay no longer supports extended holiday returns. Any value supplied in this field is neither read nor returned.&lt;/p&gt; </value>
        [DataMember(Name="extendedHolidayReturnsOffered", EmitDefaultValue=true)]
        public bool ExtendedHolidayReturnsOffered { get; set; }

        /// <summary>
        /// Gets or Sets InternationalOverride
        /// </summary>
        [DataMember(Name="internationalOverride", EmitDefaultValue=false)]
        public InternationalReturnOverrideType InternationalOverride { get; set; }

        /// <summary>
        /// The ID of the eBay marketplace to which this return business policy applies.  For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/account/types/ba:MarketplaceIdEnum&#39;&gt;eBay API documentation&lt;/a&gt;
        /// </summary>
        /// <value>The ID of the eBay marketplace to which this return business policy applies.  For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/account/types/ba:MarketplaceIdEnum&#39;&gt;eBay API documentation&lt;/a&gt;</value>
        [DataMember(Name="marketplaceId", EmitDefaultValue=false)]
        public string MarketplaceId { get; set; }

        /// <summary>
        /// A seller-defined name for this return business policy. Names must be unique for policies assigned to the same marketplace. &lt;br/&gt;&lt;br/&gt;&lt;b&gt;Max length&lt;/b&gt;: 64
        /// </summary>
        /// <value>A seller-defined name for this return business policy. Names must be unique for policies assigned to the same marketplace. &lt;br/&gt;&lt;br/&gt;&lt;b&gt;Max length&lt;/b&gt;: 64</value>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// This value indicates the refund method that will be used by the seller for buyer returns.&lt;p class&#x3D;\&quot;tablenote\&quot;&gt;&lt;span  style&#x3D;\&quot;color: #dd1e31;\&quot;&gt;&lt;b&gt;Important!&lt;/b&gt;&lt;/span&gt; If this field is not included in a return business policy, it will default to MONEY_BACK.&lt;/p&gt; For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/account/types/api:RefundMethodEnum&#39;&gt;eBay API documentation&lt;/a&gt;
        /// </summary>
        /// <value>This value indicates the refund method that will be used by the seller for buyer returns.&lt;p class&#x3D;\&quot;tablenote\&quot;&gt;&lt;span  style&#x3D;\&quot;color: #dd1e31;\&quot;&gt;&lt;b&gt;Important!&lt;/b&gt;&lt;/span&gt; If this field is not included in a return business policy, it will default to MONEY_BACK.&lt;/p&gt; For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/account/types/api:RefundMethodEnum&#39;&gt;eBay API documentation&lt;/a&gt;</value>
        [DataMember(Name="refundMethod", EmitDefaultValue=false)]
        public string RefundMethod { get; set; }

        /// <summary>
        /// &lt;p class&#x3D;\&quot;tablenote\&quot;&gt;&lt;span  style&#x3D;\&quot;color: #dd1e31;\&quot;&gt;&lt;b&gt;Important!&lt;/b&gt;&lt;/span&gt; This field is deprecated, since eBay no longer allows sellers to charge a restocking fee for buyer remorse returns. If this field is included, it is ignored.&lt;/p&gt;
        /// </summary>
        /// <value>&lt;p class&#x3D;\&quot;tablenote\&quot;&gt;&lt;span  style&#x3D;\&quot;color: #dd1e31;\&quot;&gt;&lt;b&gt;Important!&lt;/b&gt;&lt;/span&gt; This field is deprecated, since eBay no longer allows sellers to charge a restocking fee for buyer remorse returns. If this field is included, it is ignored.&lt;/p&gt;</value>
        [DataMember(Name="restockingFeePercentage", EmitDefaultValue=false)]
        public string RestockingFeePercentage { get; set; }

        /// <summary>
        /// This text-based field provides more details on seller-specified return instructions. &lt;p class&#x3D;\&quot;tablenote\&quot;&gt;&lt;span  style&#x3D;\&quot;color: #dd1e31;\&quot;&gt;&lt;b&gt;Important!&lt;/b&gt;&lt;/span&gt; This field is no longer supported on many eBay marketplaces. To see if a marketplace and eBay category does support this field, call &lt;a href&#x3D;\&quot;/api-docs/sell/metadata/resources/marketplace/methods/getReturnPolicies\&quot;&gt;getReturnPolicies&lt;/a&gt; method of the &lt;b&gt;Metadata API&lt;/b&gt;. Then you will look for the &lt;b&gt;policyDescriptionEnabled&lt;/b&gt; field with a value of &lt;code&gt;true&lt;/code&gt; for the eBay category.&lt;/span&gt;&lt;/p&gt;&lt;br/&gt;&lt;b&gt;Max length&lt;/b&gt;: 5000 (8000 for DE)
        /// </summary>
        /// <value>This text-based field provides more details on seller-specified return instructions. &lt;p class&#x3D;\&quot;tablenote\&quot;&gt;&lt;span  style&#x3D;\&quot;color: #dd1e31;\&quot;&gt;&lt;b&gt;Important!&lt;/b&gt;&lt;/span&gt; This field is no longer supported on many eBay marketplaces. To see if a marketplace and eBay category does support this field, call &lt;a href&#x3D;\&quot;/api-docs/sell/metadata/resources/marketplace/methods/getReturnPolicies\&quot;&gt;getReturnPolicies&lt;/a&gt; method of the &lt;b&gt;Metadata API&lt;/b&gt;. Then you will look for the &lt;b&gt;policyDescriptionEnabled&lt;/b&gt; field with a value of &lt;code&gt;true&lt;/code&gt; for the eBay category.&lt;/span&gt;&lt;/p&gt;&lt;br/&gt;&lt;b&gt;Max length&lt;/b&gt;: 5000 (8000 for DE)</value>
        [DataMember(Name="returnInstructions", EmitDefaultValue=false)]
        public string ReturnInstructions { get; set; }

        /// <summary>
        /// This field can be used if the seller is willing and able to offer a replacement item as an alternative to &#39;Money Back&#39;. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/account/types/api:ReturnMethodEnum&#39;&gt;eBay API documentation&lt;/a&gt;
        /// </summary>
        /// <value>This field can be used if the seller is willing and able to offer a replacement item as an alternative to &#39;Money Back&#39;. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/account/types/api:ReturnMethodEnum&#39;&gt;eBay API documentation&lt;/a&gt;</value>
        [DataMember(Name="returnMethod", EmitDefaultValue=false)]
        public string ReturnMethod { get; set; }

        /// <summary>
        /// Gets or Sets ReturnPeriod
        /// </summary>
        [DataMember(Name="returnPeriod", EmitDefaultValue=false)]
        public TimeDuration ReturnPeriod { get; set; }

        /// <summary>
        /// This field indicates who is responsible for paying for the shipping charges for returned items. The field can be set to either &lt;code&gt;BUYER&lt;/code&gt; or &lt;code&gt;SELLER&lt;/code&gt;.  &lt;br/&gt;&lt;br/&gt;Depending on the return policy and specifics of the return, either the buyer or the seller can be responsible for the return shipping costs. Note that the seller is always responsible for return shipping costs for SNAD-related issues.  &lt;br/&gt;&lt;br/&gt;This field is conditionally required if &lt;b&gt;returnsAccepted&lt;/b&gt; is set to &lt;code&gt;true&lt;/code&gt;. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/account/types/api:ReturnShippingCostPayerEnum&#39;&gt;eBay API documentation&lt;/a&gt;
        /// </summary>
        /// <value>This field indicates who is responsible for paying for the shipping charges for returned items. The field can be set to either &lt;code&gt;BUYER&lt;/code&gt; or &lt;code&gt;SELLER&lt;/code&gt;.  &lt;br/&gt;&lt;br/&gt;Depending on the return policy and specifics of the return, either the buyer or the seller can be responsible for the return shipping costs. Note that the seller is always responsible for return shipping costs for SNAD-related issues.  &lt;br/&gt;&lt;br/&gt;This field is conditionally required if &lt;b&gt;returnsAccepted&lt;/b&gt; is set to &lt;code&gt;true&lt;/code&gt;. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/account/types/api:ReturnShippingCostPayerEnum&#39;&gt;eBay API documentation&lt;/a&gt;</value>
        [DataMember(Name="returnShippingCostPayer", EmitDefaultValue=false)]
        public string ReturnShippingCostPayer { get; set; }

        /// <summary>
        /// If set to &lt;code&gt;true&lt;/code&gt;, the seller accepts returns. &lt;p&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;strong&gt;Note:&lt;/strong&gt;Top-Rated sellers must accept item returns and the &lt;b&gt;handlingTime&lt;/b&gt; should be set to zero days or one day for a listing to receive a Top-Rated Plus badge on the View Item or search result pages. For more information on eBay&#39;s Top-Rated seller program, see &lt;a href&#x3D;\&quot;http://pages.ebay.com/help/sell/top-rated.html \&quot;&gt;Becoming a Top Rated Seller and qualifying for Top Rated Plus benefits&lt;/a&gt;.&lt;/span&gt;&lt;/p&gt;
        /// </summary>
        /// <value>If set to &lt;code&gt;true&lt;/code&gt;, the seller accepts returns. &lt;p&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;strong&gt;Note:&lt;/strong&gt;Top-Rated sellers must accept item returns and the &lt;b&gt;handlingTime&lt;/b&gt; should be set to zero days or one day for a listing to receive a Top-Rated Plus badge on the View Item or search result pages. For more information on eBay&#39;s Top-Rated seller program, see &lt;a href&#x3D;\&quot;http://pages.ebay.com/help/sell/top-rated.html \&quot;&gt;Becoming a Top Rated Seller and qualifying for Top Rated Plus benefits&lt;/a&gt;.&lt;/span&gt;&lt;/p&gt;</value>
        [DataMember(Name="returnsAccepted", EmitDefaultValue=true)]
        public bool ReturnsAccepted { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ReturnPolicyRequest {\n");
            sb.Append("  CategoryTypes: ").Append(CategoryTypes).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  ExtendedHolidayReturnsOffered: ").Append(ExtendedHolidayReturnsOffered).Append("\n");
            sb.Append("  InternationalOverride: ").Append(InternationalOverride).Append("\n");
            sb.Append("  MarketplaceId: ").Append(MarketplaceId).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  RefundMethod: ").Append(RefundMethod).Append("\n");
            sb.Append("  RestockingFeePercentage: ").Append(RestockingFeePercentage).Append("\n");
            sb.Append("  ReturnInstructions: ").Append(ReturnInstructions).Append("\n");
            sb.Append("  ReturnMethod: ").Append(ReturnMethod).Append("\n");
            sb.Append("  ReturnPeriod: ").Append(ReturnPeriod).Append("\n");
            sb.Append("  ReturnShippingCostPayer: ").Append(ReturnShippingCostPayer).Append("\n");
            sb.Append("  ReturnsAccepted: ").Append(ReturnsAccepted).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((ReturnPolicyRequest)obj);
        }

        /// <summary>
        /// Returns true if ReturnPolicyRequest instances are equal
        /// </summary>
        /// <param name="other">Instance of ReturnPolicyRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ReturnPolicyRequest other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    CategoryTypes == other.CategoryTypes ||
                    CategoryTypes != null &&
                    other.CategoryTypes != null &&
                    CategoryTypes.SequenceEqual(other.CategoryTypes)
                ) && 
                (
                    Description == other.Description ||
                    Description != null &&
                    Description.Equals(other.Description)
                ) && 
                (
                    ExtendedHolidayReturnsOffered == other.ExtendedHolidayReturnsOffered ||
                    
                    ExtendedHolidayReturnsOffered.Equals(other.ExtendedHolidayReturnsOffered)
                ) && 
                (
                    InternationalOverride == other.InternationalOverride ||
                    InternationalOverride != null &&
                    InternationalOverride.Equals(other.InternationalOverride)
                ) && 
                (
                    MarketplaceId == other.MarketplaceId ||
                    MarketplaceId != null &&
                    MarketplaceId.Equals(other.MarketplaceId)
                ) && 
                (
                    Name == other.Name ||
                    Name != null &&
                    Name.Equals(other.Name)
                ) && 
                (
                    RefundMethod == other.RefundMethod ||
                    RefundMethod != null &&
                    RefundMethod.Equals(other.RefundMethod)
                ) && 
                (
                    RestockingFeePercentage == other.RestockingFeePercentage ||
                    RestockingFeePercentage != null &&
                    RestockingFeePercentage.Equals(other.RestockingFeePercentage)
                ) && 
                (
                    ReturnInstructions == other.ReturnInstructions ||
                    ReturnInstructions != null &&
                    ReturnInstructions.Equals(other.ReturnInstructions)
                ) && 
                (
                    ReturnMethod == other.ReturnMethod ||
                    ReturnMethod != null &&
                    ReturnMethod.Equals(other.ReturnMethod)
                ) && 
                (
                    ReturnPeriod == other.ReturnPeriod ||
                    ReturnPeriod != null &&
                    ReturnPeriod.Equals(other.ReturnPeriod)
                ) && 
                (
                    ReturnShippingCostPayer == other.ReturnShippingCostPayer ||
                    ReturnShippingCostPayer != null &&
                    ReturnShippingCostPayer.Equals(other.ReturnShippingCostPayer)
                ) && 
                (
                    ReturnsAccepted == other.ReturnsAccepted ||
                    
                    ReturnsAccepted.Equals(other.ReturnsAccepted)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (CategoryTypes != null)
                    hashCode = hashCode * 59 + CategoryTypes.GetHashCode();
                    if (Description != null)
                    hashCode = hashCode * 59 + Description.GetHashCode();
                    
                    hashCode = hashCode * 59 + ExtendedHolidayReturnsOffered.GetHashCode();
                    if (InternationalOverride != null)
                    hashCode = hashCode * 59 + InternationalOverride.GetHashCode();
                    if (MarketplaceId != null)
                    hashCode = hashCode * 59 + MarketplaceId.GetHashCode();
                    if (Name != null)
                    hashCode = hashCode * 59 + Name.GetHashCode();
                    if (RefundMethod != null)
                    hashCode = hashCode * 59 + RefundMethod.GetHashCode();
                    if (RestockingFeePercentage != null)
                    hashCode = hashCode * 59 + RestockingFeePercentage.GetHashCode();
                    if (ReturnInstructions != null)
                    hashCode = hashCode * 59 + ReturnInstructions.GetHashCode();
                    if (ReturnMethod != null)
                    hashCode = hashCode * 59 + ReturnMethod.GetHashCode();
                    if (ReturnPeriod != null)
                    hashCode = hashCode * 59 + ReturnPeriod.GetHashCode();
                    if (ReturnShippingCostPayer != null)
                    hashCode = hashCode * 59 + ReturnShippingCostPayer.GetHashCode();
                    
                    hashCode = hashCode * 59 + ReturnsAccepted.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(ReturnPolicyRequest left, ReturnPolicyRequest right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(ReturnPolicyRequest left, ReturnPolicyRequest right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
