/*
 * Account API
 *
 * The <b>Account API</b> gives sellers the ability to configure their eBay seller accounts, including the seller's policies (eBay business policies and seller-defined custom policies), opt in and out of eBay seller programs, configure sales tax tables, and get account information.  <br/><br/>For details on the availability of the methods in this API, see <a href=\"/api-docs/sell/account/overview.html#requirements\">Account API requirements and restrictions</a>.
 *
 * The version of the OpenAPI document: v1.9.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// This type is used by the &lt;b&gt;shippingOptions&lt;/b&gt; array, which is used to provide detailed information on the domestic and international shipping options available for the policy. A separate &lt;b&gt;ShippingOption&lt;/b&gt; object covers domestic shipping service options and international shipping service options (if the seller ships to international locations).
    /// </summary>
    [DataContract]
    public partial class ShippingOption : IEquatable<ShippingOption>
    {
        /// <summary>
        /// This field defines whether the shipping cost model is &lt;code&gt;FLAT_RATE&lt;/code&gt; (the same rate for all buyers, or buyers within a region if shipping rate tables are used) or &lt;code&gt;CALCULATED&lt;/code&gt; (the shipping rate varies by the ship-to location and size and weight of the package). &lt;br/&gt;&lt;br/&gt;This field is conditionally required if any shipping service options are specified (domestic and/or international). For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/account/types/api:ShippingCostTypeEnum&#39;&gt;eBay API documentation&lt;/a&gt;
        /// </summary>
        /// <value>This field defines whether the shipping cost model is &lt;code&gt;FLAT_RATE&lt;/code&gt; (the same rate for all buyers, or buyers within a region if shipping rate tables are used) or &lt;code&gt;CALCULATED&lt;/code&gt; (the shipping rate varies by the ship-to location and size and weight of the package). &lt;br/&gt;&lt;br/&gt;This field is conditionally required if any shipping service options are specified (domestic and/or international). For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/account/types/api:ShippingCostTypeEnum&#39;&gt;eBay API documentation&lt;/a&gt;</value>
        [DataMember(Name="costType", EmitDefaultValue=false)]
        public string CostType { get; set; }

        /// <summary>
        /// Gets or Sets InsuranceFee
        /// </summary>
        [DataMember(Name="insuranceFee", EmitDefaultValue=false)]
        public Amount InsuranceFee { get; set; }

        /// <summary>
        /// This field has been deprecated. &lt;br/&gt;&lt;br/&gt;Shipping insurance is offered only via a shipping carrier&#39;s shipping services and is no longer available via eBay shipping policies.
        /// </summary>
        /// <value>This field has been deprecated. &lt;br/&gt;&lt;br/&gt;Shipping insurance is offered only via a shipping carrier&#39;s shipping services and is no longer available via eBay shipping policies.</value>
        [DataMember(Name="insuranceOffered", EmitDefaultValue=true)]
        public bool InsuranceOffered { get; set; }

        /// <summary>
        /// This field is used to indicate if the corresponding shipping service options (under &lt;b&gt;shippingServices&lt;/b&gt; array) are domestic or international shipping service options. This field is conditionally required if any shipping service options are specified (domestic and/or international). For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/account/types/api:ShippingOptionTypeEnum&#39;&gt;eBay API documentation&lt;/a&gt;
        /// </summary>
        /// <value>This field is used to indicate if the corresponding shipping service options (under &lt;b&gt;shippingServices&lt;/b&gt; array) are domestic or international shipping service options. This field is conditionally required if any shipping service options are specified (domestic and/or international). For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/account/types/api:ShippingOptionTypeEnum&#39;&gt;eBay API documentation&lt;/a&gt;</value>
        [DataMember(Name="optionType", EmitDefaultValue=false)]
        public string OptionType { get; set; }

        /// <summary>
        /// Gets or Sets PackageHandlingCost
        /// </summary>
        [DataMember(Name="packageHandlingCost", EmitDefaultValue=false)]
        public Amount PackageHandlingCost { get; set; }

        /// <summary>
        /// This field is used if the seller wants to associate a domestic or international shipping rate table to the fulfillment business policy. The &lt;a href&#x3D;\&quot;/api-docs/sell/account/resources/rate_table/methods/getRateTables\&quot;&gt;getRateTables&lt;/a&gt; method can be used to retrieve shipping rate table IDs.&lt;br/&gt;&lt;br/&gt;With domestic and international shipping rate tables, the seller can set different shipping costs based on shipping regions and shipping speed/level of service (one-day, expedited, standard, economy). There are also options to additional per-weight and handling charges.&lt;br/&gt;&lt;br/&gt;Sellers need to be careful that shipping rate tables match the corresponding shipping service options. In other words, a domestic shipping rate table must not be specified in the same container where international shipping service options are being specified, and vice versa, and the shipping speed/level of service of the provided shipping service options should match the shipping speed/level of service options that are defined in the shipping rate tables. &lt;br /&gt;&lt;br /&gt;For example, if the corresponding shipping rate table defines costs for one-day shipping services, there should be at least one one-day shipping service option specified under the &lt;b&gt;shippingServices&lt;/b&gt; array.&lt;br/&gt;&lt;br/&gt;This field is returned if set.
        /// </summary>
        /// <value>This field is used if the seller wants to associate a domestic or international shipping rate table to the fulfillment business policy. The &lt;a href&#x3D;\&quot;/api-docs/sell/account/resources/rate_table/methods/getRateTables\&quot;&gt;getRateTables&lt;/a&gt; method can be used to retrieve shipping rate table IDs.&lt;br/&gt;&lt;br/&gt;With domestic and international shipping rate tables, the seller can set different shipping costs based on shipping regions and shipping speed/level of service (one-day, expedited, standard, economy). There are also options to additional per-weight and handling charges.&lt;br/&gt;&lt;br/&gt;Sellers need to be careful that shipping rate tables match the corresponding shipping service options. In other words, a domestic shipping rate table must not be specified in the same container where international shipping service options are being specified, and vice versa, and the shipping speed/level of service of the provided shipping service options should match the shipping speed/level of service options that are defined in the shipping rate tables. &lt;br /&gt;&lt;br /&gt;For example, if the corresponding shipping rate table defines costs for one-day shipping services, there should be at least one one-day shipping service option specified under the &lt;b&gt;shippingServices&lt;/b&gt; array.&lt;br/&gt;&lt;br/&gt;This field is returned if set.</value>
        [DataMember(Name="rateTableId", EmitDefaultValue=false)]
        public string RateTableId { get; set; }

        /// <summary>
        /// This field is the unique identifier of a seller&#39;s domestic or international shipping discount profile. If a buyer satisfies the requirements of the discount rule, this buyer will receive a shipping discount for the order. &lt;br /&gt;&lt;br /&gt;The seller can create and manage shipping discount profiles using (Get/Set) &lt;b&gt;ShippingDiscountProfiles&lt;/b&gt; calls in the &lt;b&gt;Trading API&lt;/b&gt; or through the &lt;b&gt;Shipping Preferences&lt;/b&gt; in &lt;b&gt;My eBay&lt;/b&gt;. &lt;br/&gt;&lt;br/&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note: &lt;/b&gt;Initially, shipping discount profiles in the &lt;b&gt;Account API&lt;/b&gt; will &lt;i&gt;not&lt;/i&gt; be available to all sellers.&lt;/span&gt;
        /// </summary>
        /// <value>This field is the unique identifier of a seller&#39;s domestic or international shipping discount profile. If a buyer satisfies the requirements of the discount rule, this buyer will receive a shipping discount for the order. &lt;br /&gt;&lt;br /&gt;The seller can create and manage shipping discount profiles using (Get/Set) &lt;b&gt;ShippingDiscountProfiles&lt;/b&gt; calls in the &lt;b&gt;Trading API&lt;/b&gt; or through the &lt;b&gt;Shipping Preferences&lt;/b&gt; in &lt;b&gt;My eBay&lt;/b&gt;. &lt;br/&gt;&lt;br/&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note: &lt;/b&gt;Initially, shipping discount profiles in the &lt;b&gt;Account API&lt;/b&gt; will &lt;i&gt;not&lt;/i&gt; be available to all sellers.&lt;/span&gt;</value>
        [DataMember(Name="shippingDiscountProfileId", EmitDefaultValue=false)]
        public string ShippingDiscountProfileId { get; set; }

        /// <summary>
        /// This boolean indicates whether or not the seller has set up a promotional shipping discount that will be available to buyers who satisfy the requirements of the shipping discount rule. &lt;br/&gt;&lt;br/&gt;The seller can create and manage shipping promotional discounts using (Get/Set) &lt;b&gt;ShippingDiscountProfiles&lt;/b&gt; calls in the &lt;b&gt;Trading API&lt;/b&gt; or through the &lt;b&gt;Shipping Preferences&lt;/b&gt; in &lt;b&gt;My eBay&lt;/b&gt;. &lt;br/&gt;&lt;br/&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note: &lt;/b&gt;Initially, shipping discount profiles in the &lt;b&gt;Account API&lt;/b&gt; will &lt;i&gt;not&lt;/i&gt; be available to all sellers.&lt;/span&gt;
        /// </summary>
        /// <value>This boolean indicates whether or not the seller has set up a promotional shipping discount that will be available to buyers who satisfy the requirements of the shipping discount rule. &lt;br/&gt;&lt;br/&gt;The seller can create and manage shipping promotional discounts using (Get/Set) &lt;b&gt;ShippingDiscountProfiles&lt;/b&gt; calls in the &lt;b&gt;Trading API&lt;/b&gt; or through the &lt;b&gt;Shipping Preferences&lt;/b&gt; in &lt;b&gt;My eBay&lt;/b&gt;. &lt;br/&gt;&lt;br/&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note: &lt;/b&gt;Initially, shipping discount profiles in the &lt;b&gt;Account API&lt;/b&gt; will &lt;i&gt;not&lt;/i&gt; be available to all sellers.&lt;/span&gt;</value>
        [DataMember(Name="shippingPromotionOffered", EmitDefaultValue=true)]
        public bool ShippingPromotionOffered { get; set; }

        /// <summary>
        /// This array consists of the domestic or international shipping services options that are defined for the policy. The shipping service options defined under this array should match what is set in the corresponding &lt;b&gt;shippingOptions.optionType&lt;/b&gt; field (which controls whether domestic or international shipping service options are being defined). If a shipping rate table is being used, the specified shipping service options should also match the shipping rate table settings (domestic or international, shipping speed/level of service, etc.) &lt;br/&gt;&lt;br/&gt;Sellers can specify up to four domestic shipping services and up to five international shipping service options by using separate &lt;b&gt;shippingService&lt;/b&gt; containers for each. If the seller is using the Global Shipping Program as an international option, only a total of four international shipping service options (including GSP) can be offered. &lt;br/&gt;&lt;br/&gt; See &lt;a href&#x3D;\&quot;/api-docs/sell/static/seller-accounts/ht_shipping-setting-shipping-carrier-and-service-values.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;How to set up shipping carrier and shipping service values&lt;/a&gt;. &lt;br /&gt;&lt;br /&gt;To use the eBay standard envelope service (eSE), see &lt;a href&#x3D;\&quot;/api-docs/sell/static/seller-accounts/using-the-ebay-standard-envelope-service.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Using eBay standard envelope (eSE) service&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;This array is conditionally required if the seller is offering one or more domestic and/or international shipping service options.
        /// </summary>
        /// <value>This array consists of the domestic or international shipping services options that are defined for the policy. The shipping service options defined under this array should match what is set in the corresponding &lt;b&gt;shippingOptions.optionType&lt;/b&gt; field (which controls whether domestic or international shipping service options are being defined). If a shipping rate table is being used, the specified shipping service options should also match the shipping rate table settings (domestic or international, shipping speed/level of service, etc.) &lt;br/&gt;&lt;br/&gt;Sellers can specify up to four domestic shipping services and up to five international shipping service options by using separate &lt;b&gt;shippingService&lt;/b&gt; containers for each. If the seller is using the Global Shipping Program as an international option, only a total of four international shipping service options (including GSP) can be offered. &lt;br/&gt;&lt;br/&gt; See &lt;a href&#x3D;\&quot;/api-docs/sell/static/seller-accounts/ht_shipping-setting-shipping-carrier-and-service-values.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;How to set up shipping carrier and shipping service values&lt;/a&gt;. &lt;br /&gt;&lt;br /&gt;To use the eBay standard envelope service (eSE), see &lt;a href&#x3D;\&quot;/api-docs/sell/static/seller-accounts/using-the-ebay-standard-envelope-service.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Using eBay standard envelope (eSE) service&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;This array is conditionally required if the seller is offering one or more domestic and/or international shipping service options.</value>
        [DataMember(Name="shippingServices", EmitDefaultValue=false)]
        public List<ShippingService> ShippingServices { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ShippingOption {\n");
            sb.Append("  CostType: ").Append(CostType).Append("\n");
            sb.Append("  InsuranceFee: ").Append(InsuranceFee).Append("\n");
            sb.Append("  InsuranceOffered: ").Append(InsuranceOffered).Append("\n");
            sb.Append("  OptionType: ").Append(OptionType).Append("\n");
            sb.Append("  PackageHandlingCost: ").Append(PackageHandlingCost).Append("\n");
            sb.Append("  RateTableId: ").Append(RateTableId).Append("\n");
            sb.Append("  ShippingDiscountProfileId: ").Append(ShippingDiscountProfileId).Append("\n");
            sb.Append("  ShippingPromotionOffered: ").Append(ShippingPromotionOffered).Append("\n");
            sb.Append("  ShippingServices: ").Append(ShippingServices).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((ShippingOption)obj);
        }

        /// <summary>
        /// Returns true if ShippingOption instances are equal
        /// </summary>
        /// <param name="other">Instance of ShippingOption to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ShippingOption other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    CostType == other.CostType ||
                    CostType != null &&
                    CostType.Equals(other.CostType)
                ) && 
                (
                    InsuranceFee == other.InsuranceFee ||
                    InsuranceFee != null &&
                    InsuranceFee.Equals(other.InsuranceFee)
                ) && 
                (
                    InsuranceOffered == other.InsuranceOffered ||
                    
                    InsuranceOffered.Equals(other.InsuranceOffered)
                ) && 
                (
                    OptionType == other.OptionType ||
                    OptionType != null &&
                    OptionType.Equals(other.OptionType)
                ) && 
                (
                    PackageHandlingCost == other.PackageHandlingCost ||
                    PackageHandlingCost != null &&
                    PackageHandlingCost.Equals(other.PackageHandlingCost)
                ) && 
                (
                    RateTableId == other.RateTableId ||
                    RateTableId != null &&
                    RateTableId.Equals(other.RateTableId)
                ) && 
                (
                    ShippingDiscountProfileId == other.ShippingDiscountProfileId ||
                    ShippingDiscountProfileId != null &&
                    ShippingDiscountProfileId.Equals(other.ShippingDiscountProfileId)
                ) && 
                (
                    ShippingPromotionOffered == other.ShippingPromotionOffered ||
                    
                    ShippingPromotionOffered.Equals(other.ShippingPromotionOffered)
                ) && 
                (
                    ShippingServices == other.ShippingServices ||
                    ShippingServices != null &&
                    other.ShippingServices != null &&
                    ShippingServices.SequenceEqual(other.ShippingServices)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (CostType != null)
                    hashCode = hashCode * 59 + CostType.GetHashCode();
                    if (InsuranceFee != null)
                    hashCode = hashCode * 59 + InsuranceFee.GetHashCode();
                    
                    hashCode = hashCode * 59 + InsuranceOffered.GetHashCode();
                    if (OptionType != null)
                    hashCode = hashCode * 59 + OptionType.GetHashCode();
                    if (PackageHandlingCost != null)
                    hashCode = hashCode * 59 + PackageHandlingCost.GetHashCode();
                    if (RateTableId != null)
                    hashCode = hashCode * 59 + RateTableId.GetHashCode();
                    if (ShippingDiscountProfileId != null)
                    hashCode = hashCode * 59 + ShippingDiscountProfileId.GetHashCode();
                    
                    hashCode = hashCode * 59 + ShippingPromotionOffered.GetHashCode();
                    if (ShippingServices != null)
                    hashCode = hashCode * 59 + ShippingServices.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(ShippingOption left, ShippingOption right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(ShippingOption left, ShippingOption right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
