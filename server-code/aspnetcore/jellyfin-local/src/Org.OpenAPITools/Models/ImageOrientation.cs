/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
        /// <summary>
        /// Gets or Sets ImageOrientation
        /// </summary>
        [TypeConverter(typeof(CustomEnumConverter<ImageOrientation>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum ImageOrientation
        {
            
            /// <summary>
            /// Enum TopLeftEnum for TopLeft
            /// </summary>
            [EnumMember(Value = "TopLeft")]
            TopLeftEnum = 1,
            
            /// <summary>
            /// Enum TopRightEnum for TopRight
            /// </summary>
            [EnumMember(Value = "TopRight")]
            TopRightEnum = 2,
            
            /// <summary>
            /// Enum BottomRightEnum for BottomRight
            /// </summary>
            [EnumMember(Value = "BottomRight")]
            BottomRightEnum = 3,
            
            /// <summary>
            /// Enum BottomLeftEnum for BottomLeft
            /// </summary>
            [EnumMember(Value = "BottomLeft")]
            BottomLeftEnum = 4,
            
            /// <summary>
            /// Enum LeftTopEnum for LeftTop
            /// </summary>
            [EnumMember(Value = "LeftTop")]
            LeftTopEnum = 5,
            
            /// <summary>
            /// Enum RightTopEnum for RightTop
            /// </summary>
            [EnumMember(Value = "RightTop")]
            RightTopEnum = 6,
            
            /// <summary>
            /// Enum RightBottomEnum for RightBottom
            /// </summary>
            [EnumMember(Value = "RightBottom")]
            RightBottomEnum = 7,
            
            /// <summary>
            /// Enum LeftBottomEnum for LeftBottom
            /// </summary>
            [EnumMember(Value = "LeftBottom")]
            LeftBottomEnum = 8
        }
}
