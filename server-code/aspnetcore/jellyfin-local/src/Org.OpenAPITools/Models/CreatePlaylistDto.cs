/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// Create new playlist dto.
    /// </summary>
    [DataContract]
    public partial class CreatePlaylistDto : IEquatable<CreatePlaylistDto>
    {
        /// <summary>
        /// Gets or sets item ids to add to the playlist.
        /// </summary>
        /// <value>Gets or sets item ids to add to the playlist.</value>
        [DataMember(Name="Ids", EmitDefaultValue=true)]
        public List<Guid> Ids { get; set; }

        /// <summary>
        /// Gets or sets the media type.
        /// </summary>
        /// <value>Gets or sets the media type.</value>
        [DataMember(Name="MediaType", EmitDefaultValue=true)]
        public string MediaType { get; set; }

        /// <summary>
        /// Gets or sets the name of the new playlist.
        /// </summary>
        /// <value>Gets or sets the name of the new playlist.</value>
        [DataMember(Name="Name", EmitDefaultValue=true)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the user id.
        /// </summary>
        /// <value>Gets or sets the user id.</value>
        [DataMember(Name="UserId", EmitDefaultValue=true)]
        public Guid? UserId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CreatePlaylistDto {\n");
            sb.Append("  Ids: ").Append(Ids).Append("\n");
            sb.Append("  MediaType: ").Append(MediaType).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  UserId: ").Append(UserId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((CreatePlaylistDto)obj);
        }

        /// <summary>
        /// Returns true if CreatePlaylistDto instances are equal
        /// </summary>
        /// <param name="other">Instance of CreatePlaylistDto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CreatePlaylistDto other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Ids == other.Ids ||
                    Ids != null &&
                    other.Ids != null &&
                    Ids.SequenceEqual(other.Ids)
                ) && 
                (
                    MediaType == other.MediaType ||
                    MediaType != null &&
                    MediaType.Equals(other.MediaType)
                ) && 
                (
                    Name == other.Name ||
                    Name != null &&
                    Name.Equals(other.Name)
                ) && 
                (
                    UserId == other.UserId ||
                    UserId != null &&
                    UserId.Equals(other.UserId)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Ids != null)
                    hashCode = hashCode * 59 + Ids.GetHashCode();
                    if (MediaType != null)
                    hashCode = hashCode * 59 + MediaType.GetHashCode();
                    if (Name != null)
                    hashCode = hashCode * 59 + Name.GetHashCode();
                    if (UserId != null)
                    hashCode = hashCode * 59 + UserId.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(CreatePlaylistDto left, CreatePlaylistDto right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(CreatePlaylistDto left, CreatePlaylistDto right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
