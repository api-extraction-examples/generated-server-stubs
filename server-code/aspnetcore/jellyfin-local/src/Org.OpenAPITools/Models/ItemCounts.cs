/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// Class LibrarySummary.
    /// </summary>
    [DataContract]
    public partial class ItemCounts : IEquatable<ItemCounts>
    {
        /// <summary>
        /// Gets or sets the album count.
        /// </summary>
        /// <value>Gets or sets the album count.</value>
        [DataMember(Name="AlbumCount", EmitDefaultValue=true)]
        public int AlbumCount { get; set; }

        /// <summary>
        /// Gets or sets the artist count.
        /// </summary>
        /// <value>Gets or sets the artist count.</value>
        [DataMember(Name="ArtistCount", EmitDefaultValue=true)]
        public int ArtistCount { get; set; }

        /// <summary>
        /// Gets or sets the book count.
        /// </summary>
        /// <value>Gets or sets the book count.</value>
        [DataMember(Name="BookCount", EmitDefaultValue=true)]
        public int BookCount { get; set; }

        /// <summary>
        /// Gets or sets the box set count.
        /// </summary>
        /// <value>Gets or sets the box set count.</value>
        [DataMember(Name="BoxSetCount", EmitDefaultValue=true)]
        public int BoxSetCount { get; set; }

        /// <summary>
        /// Gets or sets the episode count.
        /// </summary>
        /// <value>Gets or sets the episode count.</value>
        [DataMember(Name="EpisodeCount", EmitDefaultValue=true)]
        public int EpisodeCount { get; set; }

        /// <summary>
        /// Gets or sets the item count.
        /// </summary>
        /// <value>Gets or sets the item count.</value>
        [DataMember(Name="ItemCount", EmitDefaultValue=true)]
        public int ItemCount { get; set; }

        /// <summary>
        /// Gets or sets the movie count.
        /// </summary>
        /// <value>Gets or sets the movie count.</value>
        [DataMember(Name="MovieCount", EmitDefaultValue=true)]
        public int MovieCount { get; set; }

        /// <summary>
        /// Gets or sets the music video count.
        /// </summary>
        /// <value>Gets or sets the music video count.</value>
        [DataMember(Name="MusicVideoCount", EmitDefaultValue=true)]
        public int MusicVideoCount { get; set; }

        /// <summary>
        /// Gets or sets the program count.
        /// </summary>
        /// <value>Gets or sets the program count.</value>
        [DataMember(Name="ProgramCount", EmitDefaultValue=true)]
        public int ProgramCount { get; set; }

        /// <summary>
        /// Gets or sets the series count.
        /// </summary>
        /// <value>Gets or sets the series count.</value>
        [DataMember(Name="SeriesCount", EmitDefaultValue=true)]
        public int SeriesCount { get; set; }

        /// <summary>
        /// Gets or sets the song count.
        /// </summary>
        /// <value>Gets or sets the song count.</value>
        [DataMember(Name="SongCount", EmitDefaultValue=true)]
        public int SongCount { get; set; }

        /// <summary>
        /// Gets or sets the trailer count.
        /// </summary>
        /// <value>Gets or sets the trailer count.</value>
        [DataMember(Name="TrailerCount", EmitDefaultValue=true)]
        public int TrailerCount { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ItemCounts {\n");
            sb.Append("  AlbumCount: ").Append(AlbumCount).Append("\n");
            sb.Append("  ArtistCount: ").Append(ArtistCount).Append("\n");
            sb.Append("  BookCount: ").Append(BookCount).Append("\n");
            sb.Append("  BoxSetCount: ").Append(BoxSetCount).Append("\n");
            sb.Append("  EpisodeCount: ").Append(EpisodeCount).Append("\n");
            sb.Append("  ItemCount: ").Append(ItemCount).Append("\n");
            sb.Append("  MovieCount: ").Append(MovieCount).Append("\n");
            sb.Append("  MusicVideoCount: ").Append(MusicVideoCount).Append("\n");
            sb.Append("  ProgramCount: ").Append(ProgramCount).Append("\n");
            sb.Append("  SeriesCount: ").Append(SeriesCount).Append("\n");
            sb.Append("  SongCount: ").Append(SongCount).Append("\n");
            sb.Append("  TrailerCount: ").Append(TrailerCount).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((ItemCounts)obj);
        }

        /// <summary>
        /// Returns true if ItemCounts instances are equal
        /// </summary>
        /// <param name="other">Instance of ItemCounts to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ItemCounts other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    AlbumCount == other.AlbumCount ||
                    
                    AlbumCount.Equals(other.AlbumCount)
                ) && 
                (
                    ArtistCount == other.ArtistCount ||
                    
                    ArtistCount.Equals(other.ArtistCount)
                ) && 
                (
                    BookCount == other.BookCount ||
                    
                    BookCount.Equals(other.BookCount)
                ) && 
                (
                    BoxSetCount == other.BoxSetCount ||
                    
                    BoxSetCount.Equals(other.BoxSetCount)
                ) && 
                (
                    EpisodeCount == other.EpisodeCount ||
                    
                    EpisodeCount.Equals(other.EpisodeCount)
                ) && 
                (
                    ItemCount == other.ItemCount ||
                    
                    ItemCount.Equals(other.ItemCount)
                ) && 
                (
                    MovieCount == other.MovieCount ||
                    
                    MovieCount.Equals(other.MovieCount)
                ) && 
                (
                    MusicVideoCount == other.MusicVideoCount ||
                    
                    MusicVideoCount.Equals(other.MusicVideoCount)
                ) && 
                (
                    ProgramCount == other.ProgramCount ||
                    
                    ProgramCount.Equals(other.ProgramCount)
                ) && 
                (
                    SeriesCount == other.SeriesCount ||
                    
                    SeriesCount.Equals(other.SeriesCount)
                ) && 
                (
                    SongCount == other.SongCount ||
                    
                    SongCount.Equals(other.SongCount)
                ) && 
                (
                    TrailerCount == other.TrailerCount ||
                    
                    TrailerCount.Equals(other.TrailerCount)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    
                    hashCode = hashCode * 59 + AlbumCount.GetHashCode();
                    
                    hashCode = hashCode * 59 + ArtistCount.GetHashCode();
                    
                    hashCode = hashCode * 59 + BookCount.GetHashCode();
                    
                    hashCode = hashCode * 59 + BoxSetCount.GetHashCode();
                    
                    hashCode = hashCode * 59 + EpisodeCount.GetHashCode();
                    
                    hashCode = hashCode * 59 + ItemCount.GetHashCode();
                    
                    hashCode = hashCode * 59 + MovieCount.GetHashCode();
                    
                    hashCode = hashCode * 59 + MusicVideoCount.GetHashCode();
                    
                    hashCode = hashCode * 59 + ProgramCount.GetHashCode();
                    
                    hashCode = hashCode * 59 + SeriesCount.GetHashCode();
                    
                    hashCode = hashCode * 59 + SongCount.GetHashCode();
                    
                    hashCode = hashCode * 59 + TrailerCount.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(ItemCounts left, ItemCounts right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(ItemCounts left, ItemCounts right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
