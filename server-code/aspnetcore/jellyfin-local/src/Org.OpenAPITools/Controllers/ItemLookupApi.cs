/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ItemLookupApiController : ControllerBase
    { 
        /// <summary>
        /// Applies search criteria to an item and refreshes metadata.
        /// </summary>
        /// <param name="itemId">Item id.</param>
        /// <param name="remoteSearchResult">The remote search result.</param>
        /// <param name="replaceAllImages">Optional. Whether or not to replace all images. Default: True.</param>
        /// <response code="204">Item metadata refreshed.</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpPost]
        [Route("/Items/RemoteSearch/Apply/{itemId}")]
        [Authorize(Policy = "CustomAuthentication")]
        [Consumes("application/*+json", "application/json", "text/json")]
        [ValidateModelState]
        [SwaggerOperation("ApplySearchCriteria")]
        public virtual IActionResult ApplySearchCriteria([FromRoute (Name = "itemId")][Required]Guid itemId, [FromBody]RemoteSearchResult remoteSearchResult, [FromQuery (Name = "replaceAllImages")]bool? replaceAllImages)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Get book remote search.
        /// </summary>
        /// <param name="bookInfoRemoteSearchQuery">Remote search query.</param>
        /// <response code="200">Book remote search executed.</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpPost]
        [Route("/Items/RemoteSearch/Book")]
        [Authorize(Policy = "CustomAuthentication")]
        [Consumes("application/*+json", "application/json", "text/json")]
        [ValidateModelState]
        [SwaggerOperation("GetBookRemoteSearchResults")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<RemoteSearchResult>), description: "Book remote search executed.")]
        public virtual IActionResult GetBookRemoteSearchResults([FromBody]BookInfoRemoteSearchQuery bookInfoRemoteSearchQuery)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<RemoteSearchResult>));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            string exampleJson = null;
            exampleJson = "[ {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n}, {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n} ]";
            exampleJson = "[ {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n}, {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n} ]";
            exampleJson = "[ {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n}, {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<RemoteSearchResult>>(exampleJson)
            : default(List<RemoteSearchResult>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get box set remote search.
        /// </summary>
        /// <param name="boxSetInfoRemoteSearchQuery">Remote search query.</param>
        /// <response code="200">Box set remote search executed.</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpPost]
        [Route("/Items/RemoteSearch/BoxSet")]
        [Authorize(Policy = "CustomAuthentication")]
        [Consumes("application/*+json", "application/json", "text/json")]
        [ValidateModelState]
        [SwaggerOperation("GetBoxSetRemoteSearchResults")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<RemoteSearchResult>), description: "Box set remote search executed.")]
        public virtual IActionResult GetBoxSetRemoteSearchResults([FromBody]BoxSetInfoRemoteSearchQuery boxSetInfoRemoteSearchQuery)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<RemoteSearchResult>));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            string exampleJson = null;
            exampleJson = "[ {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n}, {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n} ]";
            exampleJson = "[ {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n}, {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n} ]";
            exampleJson = "[ {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n}, {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<RemoteSearchResult>>(exampleJson)
            : default(List<RemoteSearchResult>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get the item&#39;s external id info.
        /// </summary>
        /// <param name="itemId">Item id.</param>
        /// <response code="200">External id info retrieved.</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Item not found.</response>
        [HttpGet]
        [Route("/Items/{itemId}/ExternalIdInfos")]
        [Authorize(Policy = "CustomAuthentication")]
        [ValidateModelState]
        [SwaggerOperation("GetExternalIdInfos")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ExternalIdInfo>), description: "External id info retrieved.")]
        [SwaggerResponse(statusCode: 404, type: typeof(ProblemDetails), description: "Item not found.")]
        public virtual IActionResult GetExternalIdInfos([FromRoute (Name = "itemId")][Required]Guid itemId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ExternalIdInfo>));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ProblemDetails));
            string exampleJson = null;
            exampleJson = "[ {\n  \"Key\" : \"Key\",\n  \"Name\" : \"Name\",\n  \"UrlFormatString\" : \"UrlFormatString\"\n}, {\n  \"Key\" : \"Key\",\n  \"Name\" : \"Name\",\n  \"UrlFormatString\" : \"UrlFormatString\"\n} ]";
            exampleJson = "[ {\n  \"Key\" : \"Key\",\n  \"Name\" : \"Name\",\n  \"UrlFormatString\" : \"UrlFormatString\"\n}, {\n  \"Key\" : \"Key\",\n  \"Name\" : \"Name\",\n  \"UrlFormatString\" : \"UrlFormatString\"\n} ]";
            exampleJson = "[ {\n  \"Key\" : \"Key\",\n  \"Name\" : \"Name\",\n  \"UrlFormatString\" : \"UrlFormatString\"\n}, {\n  \"Key\" : \"Key\",\n  \"Name\" : \"Name\",\n  \"UrlFormatString\" : \"UrlFormatString\"\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ExternalIdInfo>>(exampleJson)
            : default(List<ExternalIdInfo>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get movie remote search.
        /// </summary>
        /// <param name="movieInfoRemoteSearchQuery">Remote search query.</param>
        /// <response code="200">Movie remote search executed.</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpPost]
        [Route("/Items/RemoteSearch/Movie")]
        [Authorize(Policy = "CustomAuthentication")]
        [Consumes("application/*+json", "application/json", "text/json")]
        [ValidateModelState]
        [SwaggerOperation("GetMovieRemoteSearchResults")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<RemoteSearchResult>), description: "Movie remote search executed.")]
        public virtual IActionResult GetMovieRemoteSearchResults([FromBody]MovieInfoRemoteSearchQuery movieInfoRemoteSearchQuery)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<RemoteSearchResult>));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            string exampleJson = null;
            exampleJson = "[ {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n}, {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n} ]";
            exampleJson = "[ {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n}, {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n} ]";
            exampleJson = "[ {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n}, {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<RemoteSearchResult>>(exampleJson)
            : default(List<RemoteSearchResult>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get music album remote search.
        /// </summary>
        /// <param name="albumInfoRemoteSearchQuery">Remote search query.</param>
        /// <response code="200">Music album remote search executed.</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpPost]
        [Route("/Items/RemoteSearch/MusicAlbum")]
        [Authorize(Policy = "CustomAuthentication")]
        [Consumes("application/*+json", "application/json", "text/json")]
        [ValidateModelState]
        [SwaggerOperation("GetMusicAlbumRemoteSearchResults")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<RemoteSearchResult>), description: "Music album remote search executed.")]
        public virtual IActionResult GetMusicAlbumRemoteSearchResults([FromBody]AlbumInfoRemoteSearchQuery albumInfoRemoteSearchQuery)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<RemoteSearchResult>));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            string exampleJson = null;
            exampleJson = "[ {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n}, {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n} ]";
            exampleJson = "[ {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n}, {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n} ]";
            exampleJson = "[ {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n}, {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<RemoteSearchResult>>(exampleJson)
            : default(List<RemoteSearchResult>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get music artist remote search.
        /// </summary>
        /// <param name="artistInfoRemoteSearchQuery">Remote search query.</param>
        /// <response code="200">Music artist remote search executed.</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpPost]
        [Route("/Items/RemoteSearch/MusicArtist")]
        [Authorize(Policy = "CustomAuthentication")]
        [Consumes("application/*+json", "application/json", "text/json")]
        [ValidateModelState]
        [SwaggerOperation("GetMusicArtistRemoteSearchResults")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<RemoteSearchResult>), description: "Music artist remote search executed.")]
        public virtual IActionResult GetMusicArtistRemoteSearchResults([FromBody]ArtistInfoRemoteSearchQuery artistInfoRemoteSearchQuery)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<RemoteSearchResult>));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            string exampleJson = null;
            exampleJson = "[ {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n}, {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n} ]";
            exampleJson = "[ {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n}, {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n} ]";
            exampleJson = "[ {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n}, {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<RemoteSearchResult>>(exampleJson)
            : default(List<RemoteSearchResult>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get music video remote search.
        /// </summary>
        /// <param name="musicVideoInfoRemoteSearchQuery">Remote search query.</param>
        /// <response code="200">Music video remote search executed.</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpPost]
        [Route("/Items/RemoteSearch/MusicVideo")]
        [Authorize(Policy = "CustomAuthentication")]
        [Consumes("application/*+json", "application/json", "text/json")]
        [ValidateModelState]
        [SwaggerOperation("GetMusicVideoRemoteSearchResults")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<RemoteSearchResult>), description: "Music video remote search executed.")]
        public virtual IActionResult GetMusicVideoRemoteSearchResults([FromBody]MusicVideoInfoRemoteSearchQuery musicVideoInfoRemoteSearchQuery)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<RemoteSearchResult>));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            string exampleJson = null;
            exampleJson = "[ {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n}, {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n} ]";
            exampleJson = "[ {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n}, {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n} ]";
            exampleJson = "[ {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n}, {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<RemoteSearchResult>>(exampleJson)
            : default(List<RemoteSearchResult>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get person remote search.
        /// </summary>
        /// <param name="personLookupInfoRemoteSearchQuery">Remote search query.</param>
        /// <response code="200">Person remote search executed.</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpPost]
        [Route("/Items/RemoteSearch/Person")]
        [Authorize(Policy = "CustomAuthentication")]
        [Consumes("application/*+json", "application/json", "text/json")]
        [ValidateModelState]
        [SwaggerOperation("GetPersonRemoteSearchResults")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<RemoteSearchResult>), description: "Person remote search executed.")]
        public virtual IActionResult GetPersonRemoteSearchResults([FromBody]PersonLookupInfoRemoteSearchQuery personLookupInfoRemoteSearchQuery)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<RemoteSearchResult>));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            string exampleJson = null;
            exampleJson = "[ {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n}, {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n} ]";
            exampleJson = "[ {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n}, {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n} ]";
            exampleJson = "[ {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n}, {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<RemoteSearchResult>>(exampleJson)
            : default(List<RemoteSearchResult>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a remote image.
        /// </summary>
        /// <param name="imageUrl">The image url.</param>
        /// <param name="providerName">The provider name.</param>
        /// <response code="200">Remote image retrieved.</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpGet]
        [Route("/Items/RemoteSearch/Image")]
        [Authorize(Policy = "CustomAuthentication")]
        [ValidateModelState]
        [SwaggerOperation("GetRemoteSearchImage")]
        [SwaggerResponse(statusCode: 200, type: typeof(System.IO.Stream), description: "Remote image retrieved.")]
        public virtual IActionResult GetRemoteSearchImage([FromQuery (Name = "imageUrl")][Required()]string imageUrl, [FromQuery (Name = "providerName")][Required()]string providerName)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(System.IO.Stream));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<System.IO.Stream>(exampleJson)
            : default(System.IO.Stream);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get series remote search.
        /// </summary>
        /// <param name="seriesInfoRemoteSearchQuery">Remote search query.</param>
        /// <response code="200">Series remote search executed.</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpPost]
        [Route("/Items/RemoteSearch/Series")]
        [Authorize(Policy = "CustomAuthentication")]
        [Consumes("application/*+json", "application/json", "text/json")]
        [ValidateModelState]
        [SwaggerOperation("GetSeriesRemoteSearchResults")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<RemoteSearchResult>), description: "Series remote search executed.")]
        public virtual IActionResult GetSeriesRemoteSearchResults([FromBody]SeriesInfoRemoteSearchQuery seriesInfoRemoteSearchQuery)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<RemoteSearchResult>));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            string exampleJson = null;
            exampleJson = "[ {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n}, {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n} ]";
            exampleJson = "[ {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n}, {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n} ]";
            exampleJson = "[ {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n}, {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<RemoteSearchResult>>(exampleJson)
            : default(List<RemoteSearchResult>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get trailer remote search.
        /// </summary>
        /// <param name="trailerInfoRemoteSearchQuery">Remote search query.</param>
        /// <response code="200">Trailer remote search executed.</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpPost]
        [Route("/Items/RemoteSearch/Trailer")]
        [Authorize(Policy = "CustomAuthentication")]
        [Consumes("application/*+json", "application/json", "text/json")]
        [ValidateModelState]
        [SwaggerOperation("GetTrailerRemoteSearchResults")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<RemoteSearchResult>), description: "Trailer remote search executed.")]
        public virtual IActionResult GetTrailerRemoteSearchResults([FromBody]TrailerInfoRemoteSearchQuery trailerInfoRemoteSearchQuery)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<RemoteSearchResult>));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            string exampleJson = null;
            exampleJson = "[ {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n}, {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n} ]";
            exampleJson = "[ {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n}, {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n} ]";
            exampleJson = "[ {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n}, {\n  \"IndexNumberEnd\" : 6,\n  \"ProductionYear\" : 5,\n  \"PremiereDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ImageUrl\" : \"ImageUrl\",\n  \"IndexNumber\" : 0,\n  \"Overview\" : \"Overview\",\n  \"ParentIndexNumber\" : 1,\n  \"SearchProviderName\" : \"SearchProviderName\",\n  \"Artists\" : [ null, null ],\n  \"ProviderIds\" : {\n    \"key\" : \"ProviderIds\"\n  },\n  \"Name\" : \"Name\"\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<RemoteSearchResult>>(exampleJson)
            : default(List<RemoteSearchResult>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
