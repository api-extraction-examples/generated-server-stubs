/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class SearchApiController : ControllerBase
    { 
        /// <summary>
        /// Gets the search hint result.
        /// </summary>
        /// <param name="searchTerm">The search term to filter on.</param>
        /// <param name="startIndex">Optional. The record index to start at. All items with a lower index will be dropped from the results.</param>
        /// <param name="limit">Optional. The maximum number of records to return.</param>
        /// <param name="userId">Optional. Supply a user id to search within a user&#39;s library or omit to search all.</param>
        /// <param name="includeItemTypes">If specified, only results with the specified item types are returned. This allows multiple, comma delimeted.</param>
        /// <param name="excludeItemTypes">If specified, results with these item types are filtered out. This allows multiple, comma delimeted.</param>
        /// <param name="mediaTypes">If specified, only results with the specified media types are returned. This allows multiple, comma delimeted.</param>
        /// <param name="parentId">If specified, only children of the parent are returned.</param>
        /// <param name="isMovie">Optional filter for movies.</param>
        /// <param name="isSeries">Optional filter for series.</param>
        /// <param name="isNews">Optional filter for news.</param>
        /// <param name="isKids">Optional filter for kids.</param>
        /// <param name="isSports">Optional filter for sports.</param>
        /// <param name="includePeople">Optional filter whether to include people.</param>
        /// <param name="includeMedia">Optional filter whether to include media.</param>
        /// <param name="includeGenres">Optional filter whether to include genres.</param>
        /// <param name="includeStudios">Optional filter whether to include studios.</param>
        /// <param name="includeArtists">Optional filter whether to include artists.</param>
        /// <response code="200">Search hint returned.</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpGet]
        [Route("/Search/Hints")]
        [Authorize(Policy = "CustomAuthentication")]
        [ValidateModelState]
        [SwaggerOperation("Get")]
        [SwaggerResponse(statusCode: 200, type: typeof(SearchHintResult), description: "Search hint returned.")]
        public virtual IActionResult Get([FromQuery (Name = "searchTerm")][Required()]string searchTerm, [FromQuery (Name = "startIndex")]int? startIndex, [FromQuery (Name = "limit")]int? limit, [FromQuery (Name = "userId")]Guid? userId, [FromQuery (Name = "includeItemTypes")]List<string> includeItemTypes, [FromQuery (Name = "excludeItemTypes")]List<string> excludeItemTypes, [FromQuery (Name = "mediaTypes")]List<string> mediaTypes, [FromQuery (Name = "parentId")]Guid? parentId, [FromQuery (Name = "isMovie")]bool? isMovie, [FromQuery (Name = "isSeries")]bool? isSeries, [FromQuery (Name = "isNews")]bool? isNews, [FromQuery (Name = "isKids")]bool? isKids, [FromQuery (Name = "isSports")]bool? isSports, [FromQuery (Name = "includePeople")]bool? includePeople, [FromQuery (Name = "includeMedia")]bool? includeMedia, [FromQuery (Name = "includeGenres")]bool? includeGenres, [FromQuery (Name = "includeStudios")]bool? includeStudios, [FromQuery (Name = "includeArtists")]bool? includeArtists)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SearchHintResult));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            string exampleJson = null;
            exampleJson = "{\n  \"TotalRecordCount\" : 9,\n  \"SearchHints\" : [ {\n    \"RunTimeTicks\" : 2,\n    \"Album\" : \"Album\",\n    \"PrimaryImageTag\" : \"PrimaryImageTag\",\n    \"ChannelId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"ParentIndexNumber\" : 1,\n    \"ItemId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"Name\" : \"Name\",\n    \"StartDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"ThumbImageTag\" : \"ThumbImageTag\",\n    \"ProductionYear\" : 5,\n    \"AlbumId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"ThumbImageItemId\" : \"ThumbImageItemId\",\n    \"MediaType\" : \"MediaType\",\n    \"IndexNumber\" : 6,\n    \"PrimaryImageAspectRatio\" : 5.962133916683182,\n    \"Status\" : \"Status\",\n    \"EpisodeCount\" : 0,\n    \"BackdropImageItemId\" : \"BackdropImageItemId\",\n    \"EndDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AlbumArtist\" : \"AlbumArtist\",\n    \"MatchedTerm\" : \"MatchedTerm\",\n    \"Series\" : \"Series\",\n    \"Type\" : \"Type\",\n    \"ChannelName\" : \"ChannelName\",\n    \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"BackdropImageTag\" : \"BackdropImageTag\",\n    \"IsFolder\" : true,\n    \"Artists\" : [ \"Artists\", \"Artists\" ],\n    \"SongCount\" : 7\n  }, {\n    \"RunTimeTicks\" : 2,\n    \"Album\" : \"Album\",\n    \"PrimaryImageTag\" : \"PrimaryImageTag\",\n    \"ChannelId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"ParentIndexNumber\" : 1,\n    \"ItemId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"Name\" : \"Name\",\n    \"StartDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"ThumbImageTag\" : \"ThumbImageTag\",\n    \"ProductionYear\" : 5,\n    \"AlbumId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"ThumbImageItemId\" : \"ThumbImageItemId\",\n    \"MediaType\" : \"MediaType\",\n    \"IndexNumber\" : 6,\n    \"PrimaryImageAspectRatio\" : 5.962133916683182,\n    \"Status\" : \"Status\",\n    \"EpisodeCount\" : 0,\n    \"BackdropImageItemId\" : \"BackdropImageItemId\",\n    \"EndDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AlbumArtist\" : \"AlbumArtist\",\n    \"MatchedTerm\" : \"MatchedTerm\",\n    \"Series\" : \"Series\",\n    \"Type\" : \"Type\",\n    \"ChannelName\" : \"ChannelName\",\n    \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"BackdropImageTag\" : \"BackdropImageTag\",\n    \"IsFolder\" : true,\n    \"Artists\" : [ \"Artists\", \"Artists\" ],\n    \"SongCount\" : 7\n  } ]\n}";
            exampleJson = "{\n  \"TotalRecordCount\" : 9,\n  \"SearchHints\" : [ {\n    \"RunTimeTicks\" : 2,\n    \"Album\" : \"Album\",\n    \"PrimaryImageTag\" : \"PrimaryImageTag\",\n    \"ChannelId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"ParentIndexNumber\" : 1,\n    \"ItemId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"Name\" : \"Name\",\n    \"StartDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"ThumbImageTag\" : \"ThumbImageTag\",\n    \"ProductionYear\" : 5,\n    \"AlbumId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"ThumbImageItemId\" : \"ThumbImageItemId\",\n    \"MediaType\" : \"MediaType\",\n    \"IndexNumber\" : 6,\n    \"PrimaryImageAspectRatio\" : 5.962133916683182,\n    \"Status\" : \"Status\",\n    \"EpisodeCount\" : 0,\n    \"BackdropImageItemId\" : \"BackdropImageItemId\",\n    \"EndDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AlbumArtist\" : \"AlbumArtist\",\n    \"MatchedTerm\" : \"MatchedTerm\",\n    \"Series\" : \"Series\",\n    \"Type\" : \"Type\",\n    \"ChannelName\" : \"ChannelName\",\n    \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"BackdropImageTag\" : \"BackdropImageTag\",\n    \"IsFolder\" : true,\n    \"Artists\" : [ \"Artists\", \"Artists\" ],\n    \"SongCount\" : 7\n  }, {\n    \"RunTimeTicks\" : 2,\n    \"Album\" : \"Album\",\n    \"PrimaryImageTag\" : \"PrimaryImageTag\",\n    \"ChannelId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"ParentIndexNumber\" : 1,\n    \"ItemId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"Name\" : \"Name\",\n    \"StartDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"ThumbImageTag\" : \"ThumbImageTag\",\n    \"ProductionYear\" : 5,\n    \"AlbumId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"ThumbImageItemId\" : \"ThumbImageItemId\",\n    \"MediaType\" : \"MediaType\",\n    \"IndexNumber\" : 6,\n    \"PrimaryImageAspectRatio\" : 5.962133916683182,\n    \"Status\" : \"Status\",\n    \"EpisodeCount\" : 0,\n    \"BackdropImageItemId\" : \"BackdropImageItemId\",\n    \"EndDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AlbumArtist\" : \"AlbumArtist\",\n    \"MatchedTerm\" : \"MatchedTerm\",\n    \"Series\" : \"Series\",\n    \"Type\" : \"Type\",\n    \"ChannelName\" : \"ChannelName\",\n    \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"BackdropImageTag\" : \"BackdropImageTag\",\n    \"IsFolder\" : true,\n    \"Artists\" : [ \"Artists\", \"Artists\" ],\n    \"SongCount\" : 7\n  } ]\n}";
            exampleJson = "{\n  \"TotalRecordCount\" : 9,\n  \"SearchHints\" : [ {\n    \"RunTimeTicks\" : 2,\n    \"Album\" : \"Album\",\n    \"PrimaryImageTag\" : \"PrimaryImageTag\",\n    \"ChannelId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"ParentIndexNumber\" : 1,\n    \"ItemId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"Name\" : \"Name\",\n    \"StartDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"ThumbImageTag\" : \"ThumbImageTag\",\n    \"ProductionYear\" : 5,\n    \"AlbumId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"ThumbImageItemId\" : \"ThumbImageItemId\",\n    \"MediaType\" : \"MediaType\",\n    \"IndexNumber\" : 6,\n    \"PrimaryImageAspectRatio\" : 5.962133916683182,\n    \"Status\" : \"Status\",\n    \"EpisodeCount\" : 0,\n    \"BackdropImageItemId\" : \"BackdropImageItemId\",\n    \"EndDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AlbumArtist\" : \"AlbumArtist\",\n    \"MatchedTerm\" : \"MatchedTerm\",\n    \"Series\" : \"Series\",\n    \"Type\" : \"Type\",\n    \"ChannelName\" : \"ChannelName\",\n    \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"BackdropImageTag\" : \"BackdropImageTag\",\n    \"IsFolder\" : true,\n    \"Artists\" : [ \"Artists\", \"Artists\" ],\n    \"SongCount\" : 7\n  }, {\n    \"RunTimeTicks\" : 2,\n    \"Album\" : \"Album\",\n    \"PrimaryImageTag\" : \"PrimaryImageTag\",\n    \"ChannelId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"ParentIndexNumber\" : 1,\n    \"ItemId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"Name\" : \"Name\",\n    \"StartDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"ThumbImageTag\" : \"ThumbImageTag\",\n    \"ProductionYear\" : 5,\n    \"AlbumId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"ThumbImageItemId\" : \"ThumbImageItemId\",\n    \"MediaType\" : \"MediaType\",\n    \"IndexNumber\" : 6,\n    \"PrimaryImageAspectRatio\" : 5.962133916683182,\n    \"Status\" : \"Status\",\n    \"EpisodeCount\" : 0,\n    \"BackdropImageItemId\" : \"BackdropImageItemId\",\n    \"EndDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AlbumArtist\" : \"AlbumArtist\",\n    \"MatchedTerm\" : \"MatchedTerm\",\n    \"Series\" : \"Series\",\n    \"Type\" : \"Type\",\n    \"ChannelName\" : \"ChannelName\",\n    \"Id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"BackdropImageTag\" : \"BackdropImageTag\",\n    \"IsFolder\" : true,\n    \"Artists\" : [ \"Artists\", \"Artists\" ],\n    \"SongCount\" : 7\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<SearchHintResult>(exampleJson)
            : default(SearchHintResult);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
