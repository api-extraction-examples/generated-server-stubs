/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class DisplayPreferencesApiController : ControllerBase
    { 
        /// <summary>
        /// Get Display Preferences.
        /// </summary>
        /// <param name="displayPreferencesId">Display preferences id.</param>
        /// <param name="userId">User id.</param>
        /// <param name="varClient">Client.</param>
        /// <response code="200">Display preferences retrieved.</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpGet]
        [Route("/DisplayPreferences/{displayPreferencesId}")]
        [Authorize(Policy = "CustomAuthentication")]
        [ValidateModelState]
        [SwaggerOperation("GetDisplayPreferences")]
        [SwaggerResponse(statusCode: 200, type: typeof(DisplayPreferencesDto), description: "Display preferences retrieved.")]
        public virtual IActionResult GetDisplayPreferences([FromRoute (Name = "displayPreferencesId")][Required]string displayPreferencesId, [FromQuery (Name = "userId")][Required()]Guid userId, [FromQuery (Name = "client")][Required()]string varClient)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(DisplayPreferencesDto));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            string exampleJson = null;
            exampleJson = "{\n  \"RememberSorting\" : true,\n  \"RememberIndexing\" : true,\n  \"PrimaryImageWidth\" : 6,\n  \"IndexBy\" : \"IndexBy\",\n  \"ShowBackdrop\" : true,\n  \"SortBy\" : \"SortBy\",\n  \"ShowSidebar\" : true,\n  \"PrimaryImageHeight\" : 0,\n  \"Id\" : \"Id\",\n  \"Client\" : \"Client\",\n  \"CustomPrefs\" : {\n    \"key\" : \"CustomPrefs\"\n  },\n  \"ViewType\" : \"ViewType\"\n}";
            exampleJson = "{\n  \"RememberSorting\" : true,\n  \"RememberIndexing\" : true,\n  \"PrimaryImageWidth\" : 6,\n  \"IndexBy\" : \"IndexBy\",\n  \"ShowBackdrop\" : true,\n  \"SortBy\" : \"SortBy\",\n  \"ShowSidebar\" : true,\n  \"PrimaryImageHeight\" : 0,\n  \"Id\" : \"Id\",\n  \"Client\" : \"Client\",\n  \"CustomPrefs\" : {\n    \"key\" : \"CustomPrefs\"\n  },\n  \"ViewType\" : \"ViewType\"\n}";
            exampleJson = "{\n  \"RememberSorting\" : true,\n  \"RememberIndexing\" : true,\n  \"PrimaryImageWidth\" : 6,\n  \"IndexBy\" : \"IndexBy\",\n  \"ShowBackdrop\" : true,\n  \"SortBy\" : \"SortBy\",\n  \"ShowSidebar\" : true,\n  \"PrimaryImageHeight\" : 0,\n  \"Id\" : \"Id\",\n  \"Client\" : \"Client\",\n  \"CustomPrefs\" : {\n    \"key\" : \"CustomPrefs\"\n  },\n  \"ViewType\" : \"ViewType\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<DisplayPreferencesDto>(exampleJson)
            : default(DisplayPreferencesDto);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update Display Preferences.
        /// </summary>
        /// <param name="displayPreferencesId">Display preferences id.</param>
        /// <param name="userId">User Id.</param>
        /// <param name="varClient">Client.</param>
        /// <param name="displayPreferencesDto">New Display Preferences object.</param>
        /// <response code="204">Display preferences updated.</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpPost]
        [Route("/DisplayPreferences/{displayPreferencesId}")]
        [Authorize(Policy = "CustomAuthentication")]
        [Consumes("application/*+json", "application/json", "text/json")]
        [ValidateModelState]
        [SwaggerOperation("UpdateDisplayPreferences")]
        public virtual IActionResult UpdateDisplayPreferences([FromRoute (Name = "displayPreferencesId")][Required]string displayPreferencesId, [FromQuery (Name = "userId")][Required()]Guid userId, [FromQuery (Name = "client")][Required()]string varClient, [FromBody]DisplayPreferencesDto displayPreferencesDto)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            throw new NotImplementedException();
        }
    }
}
