/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class DlnaApiController : ControllerBase
    { 
        /// <summary>
        /// Creates a profile.
        /// </summary>
        /// <param name="deviceProfile">Device profile.</param>
        /// <response code="204">Device profile created.</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpPost]
        [Route("/Dlna/Profiles")]
        [Authorize(Policy = "CustomAuthentication")]
        [Consumes("application/*+json", "application/json", "text/json")]
        [ValidateModelState]
        [SwaggerOperation("CreateProfile")]
        public virtual IActionResult CreateProfile([FromBody]DeviceProfile deviceProfile)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Deletes a profile.
        /// </summary>
        /// <param name="profileId">Profile id.</param>
        /// <response code="204">Device profile deleted.</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Device profile not found.</response>
        [HttpDelete]
        [Route("/Dlna/Profiles/{profileId}")]
        [Authorize(Policy = "CustomAuthentication")]
        [ValidateModelState]
        [SwaggerOperation("DeleteProfile")]
        [SwaggerResponse(statusCode: 404, type: typeof(ProblemDetails), description: "Device profile not found.")]
        public virtual IActionResult DeleteProfile([FromRoute (Name = "profileId")][Required]string profileId)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ProblemDetails));

            throw new NotImplementedException();
        }

        /// <summary>
        /// Gets the default profile.
        /// </summary>
        /// <response code="200">Default device profile returned.</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpGet]
        [Route("/Dlna/Profiles/Default")]
        [Authorize(Policy = "CustomAuthentication")]
        [ValidateModelState]
        [SwaggerOperation("GetDefaultProfile")]
        [SwaggerResponse(statusCode: 200, type: typeof(DeviceProfile), description: "Default device profile returned.")]
        public virtual IActionResult GetDefaultProfile()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(DeviceProfile));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            string exampleJson = null;
            exampleJson = "{\n  \"EnableSingleAlbumArtLimit\" : true,\n  \"ManufacturerUrl\" : \"ManufacturerUrl\",\n  \"MusicStreamingTranscodingBitrate\" : 9,\n  \"AlbumArtPn\" : \"AlbumArtPn\",\n  \"TranscodingProfiles\" : [ {\n    \"BreakOnNonKeyFrames\" : true,\n    \"EnableSubtitlesInManifest\" : true,\n    \"CopyTimestamps\" : true,\n    \"MinSegments\" : 2,\n    \"EnableMpegtsM2TsMode\" : true,\n    \"MaxAudioChannels\" : \"MaxAudioChannels\",\n    \"VideoCodec\" : \"VideoCodec\",\n    \"Container\" : \"Container\",\n    \"EstimateContentLength\" : true,\n    \"SegmentLength\" : 4,\n    \"Protocol\" : \"Protocol\",\n    \"AudioCodec\" : \"AudioCodec\"\n  }, {\n    \"BreakOnNonKeyFrames\" : true,\n    \"EnableSubtitlesInManifest\" : true,\n    \"CopyTimestamps\" : true,\n    \"MinSegments\" : 2,\n    \"EnableMpegtsM2TsMode\" : true,\n    \"MaxAudioChannels\" : \"MaxAudioChannels\",\n    \"VideoCodec\" : \"VideoCodec\",\n    \"Container\" : \"Container\",\n    \"EstimateContentLength\" : true,\n    \"SegmentLength\" : 4,\n    \"Protocol\" : \"Protocol\",\n    \"AudioCodec\" : \"AudioCodec\"\n  } ],\n  \"Identification\" : {\n    \"ManufacturerUrl\" : \"ManufacturerUrl\",\n    \"ModelNumber\" : \"ModelNumber\",\n    \"ModelUrl\" : \"ModelUrl\",\n    \"ModelName\" : \"ModelName\",\n    \"SerialNumber\" : \"SerialNumber\",\n    \"FriendlyName\" : \"FriendlyName\",\n    \"Headers\" : [ {\n      \"Value\" : \"Value\",\n      \"Name\" : \"Name\"\n    }, {\n      \"Value\" : \"Value\",\n      \"Name\" : \"Name\"\n    } ],\n    \"Manufacturer\" : \"Manufacturer\",\n    \"ModelDescription\" : \"ModelDescription\"\n  },\n  \"MaxStreamingBitrate\" : 7,\n  \"IgnoreTranscodeByteRangeRequests\" : true,\n  \"Name\" : \"Name\",\n  \"ResponseProfiles\" : [ {\n    \"Container\" : \"Container\",\n    \"OrgPn\" : \"OrgPn\",\n    \"VideoCodec\" : \"VideoCodec\",\n    \"AudioCodec\" : \"AudioCodec\",\n    \"Conditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ],\n    \"MimeType\" : \"MimeType\"\n  }, {\n    \"Container\" : \"Container\",\n    \"OrgPn\" : \"OrgPn\",\n    \"VideoCodec\" : \"VideoCodec\",\n    \"AudioCodec\" : \"AudioCodec\",\n    \"Conditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ],\n    \"MimeType\" : \"MimeType\"\n  } ],\n  \"ModelUrl\" : \"ModelUrl\",\n  \"MaxStaticBitrate\" : 5,\n  \"Manufacturer\" : \"Manufacturer\",\n  \"ProtocolInfo\" : \"ProtocolInfo\",\n  \"RequiresPlainVideoItems\" : true,\n  \"ModelDescription\" : \"ModelDescription\",\n  \"MaxAlbumArtWidth\" : 6,\n  \"ModelNumber\" : \"ModelNumber\",\n  \"XmlRootAttributes\" : [ {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"ModelName\" : \"ModelName\",\n  \"FriendlyName\" : \"FriendlyName\",\n  \"MaxIconHeight\" : 1,\n  \"RequiresPlainFolders\" : true,\n  \"EnableSingleSubtitleLimit\" : true,\n  \"SubtitleProfiles\" : [ {\n    \"Container\" : \"Container\",\n    \"Format\" : \"Format\",\n    \"Language\" : \"Language\",\n    \"DidlMode\" : \"DidlMode\"\n  }, {\n    \"Container\" : \"Container\",\n    \"Format\" : \"Format\",\n    \"Language\" : \"Language\",\n    \"DidlMode\" : \"DidlMode\"\n  } ],\n  \"MaxAlbumArtHeight\" : 0,\n  \"EnableAlbumArtInDidl\" : true,\n  \"EnableMSMediaReceiverRegistrar\" : true,\n  \"CodecProfiles\" : [ {\n    \"Codec\" : \"Codec\",\n    \"Container\" : \"Container\",\n    \"ApplyConditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ],\n    \"Conditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ]\n  }, {\n    \"Codec\" : \"Codec\",\n    \"Container\" : \"Container\",\n    \"ApplyConditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ],\n    \"Conditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ]\n  } ],\n  \"SerialNumber\" : \"SerialNumber\",\n  \"SupportedMediaTypes\" : \"SupportedMediaTypes\",\n  \"SonyAggregationFlags\" : \"SonyAggregationFlags\",\n  \"MaxIconWidth\" : 5,\n  \"UserId\" : \"UserId\",\n  \"TimelineOffsetSeconds\" : 3,\n  \"ContainerProfiles\" : [ {\n    \"Container\" : \"Container\",\n    \"Conditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ]\n  }, {\n    \"Container\" : \"Container\",\n    \"Conditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ]\n  } ],\n  \"DirectPlayProfiles\" : [ {\n    \"Container\" : \"Container\",\n    \"VideoCodec\" : \"VideoCodec\",\n    \"AudioCodec\" : \"AudioCodec\"\n  }, {\n    \"Container\" : \"Container\",\n    \"VideoCodec\" : \"VideoCodec\",\n    \"AudioCodec\" : \"AudioCodec\"\n  } ],\n  \"MaxStaticMusicBitrate\" : 2,\n  \"Id\" : \"Id\"\n}";
            exampleJson = "{\n  \"EnableSingleAlbumArtLimit\" : true,\n  \"ManufacturerUrl\" : \"ManufacturerUrl\",\n  \"MusicStreamingTranscodingBitrate\" : 9,\n  \"AlbumArtPn\" : \"AlbumArtPn\",\n  \"TranscodingProfiles\" : [ {\n    \"BreakOnNonKeyFrames\" : true,\n    \"EnableSubtitlesInManifest\" : true,\n    \"CopyTimestamps\" : true,\n    \"MinSegments\" : 2,\n    \"EnableMpegtsM2TsMode\" : true,\n    \"MaxAudioChannels\" : \"MaxAudioChannels\",\n    \"VideoCodec\" : \"VideoCodec\",\n    \"Container\" : \"Container\",\n    \"EstimateContentLength\" : true,\n    \"SegmentLength\" : 4,\n    \"Protocol\" : \"Protocol\",\n    \"AudioCodec\" : \"AudioCodec\"\n  }, {\n    \"BreakOnNonKeyFrames\" : true,\n    \"EnableSubtitlesInManifest\" : true,\n    \"CopyTimestamps\" : true,\n    \"MinSegments\" : 2,\n    \"EnableMpegtsM2TsMode\" : true,\n    \"MaxAudioChannels\" : \"MaxAudioChannels\",\n    \"VideoCodec\" : \"VideoCodec\",\n    \"Container\" : \"Container\",\n    \"EstimateContentLength\" : true,\n    \"SegmentLength\" : 4,\n    \"Protocol\" : \"Protocol\",\n    \"AudioCodec\" : \"AudioCodec\"\n  } ],\n  \"Identification\" : {\n    \"ManufacturerUrl\" : \"ManufacturerUrl\",\n    \"ModelNumber\" : \"ModelNumber\",\n    \"ModelUrl\" : \"ModelUrl\",\n    \"ModelName\" : \"ModelName\",\n    \"SerialNumber\" : \"SerialNumber\",\n    \"FriendlyName\" : \"FriendlyName\",\n    \"Headers\" : [ {\n      \"Value\" : \"Value\",\n      \"Name\" : \"Name\"\n    }, {\n      \"Value\" : \"Value\",\n      \"Name\" : \"Name\"\n    } ],\n    \"Manufacturer\" : \"Manufacturer\",\n    \"ModelDescription\" : \"ModelDescription\"\n  },\n  \"MaxStreamingBitrate\" : 7,\n  \"IgnoreTranscodeByteRangeRequests\" : true,\n  \"Name\" : \"Name\",\n  \"ResponseProfiles\" : [ {\n    \"Container\" : \"Container\",\n    \"OrgPn\" : \"OrgPn\",\n    \"VideoCodec\" : \"VideoCodec\",\n    \"AudioCodec\" : \"AudioCodec\",\n    \"Conditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ],\n    \"MimeType\" : \"MimeType\"\n  }, {\n    \"Container\" : \"Container\",\n    \"OrgPn\" : \"OrgPn\",\n    \"VideoCodec\" : \"VideoCodec\",\n    \"AudioCodec\" : \"AudioCodec\",\n    \"Conditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ],\n    \"MimeType\" : \"MimeType\"\n  } ],\n  \"ModelUrl\" : \"ModelUrl\",\n  \"MaxStaticBitrate\" : 5,\n  \"Manufacturer\" : \"Manufacturer\",\n  \"ProtocolInfo\" : \"ProtocolInfo\",\n  \"RequiresPlainVideoItems\" : true,\n  \"ModelDescription\" : \"ModelDescription\",\n  \"MaxAlbumArtWidth\" : 6,\n  \"ModelNumber\" : \"ModelNumber\",\n  \"XmlRootAttributes\" : [ {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"ModelName\" : \"ModelName\",\n  \"FriendlyName\" : \"FriendlyName\",\n  \"MaxIconHeight\" : 1,\n  \"RequiresPlainFolders\" : true,\n  \"EnableSingleSubtitleLimit\" : true,\n  \"SubtitleProfiles\" : [ {\n    \"Container\" : \"Container\",\n    \"Format\" : \"Format\",\n    \"Language\" : \"Language\",\n    \"DidlMode\" : \"DidlMode\"\n  }, {\n    \"Container\" : \"Container\",\n    \"Format\" : \"Format\",\n    \"Language\" : \"Language\",\n    \"DidlMode\" : \"DidlMode\"\n  } ],\n  \"MaxAlbumArtHeight\" : 0,\n  \"EnableAlbumArtInDidl\" : true,\n  \"EnableMSMediaReceiverRegistrar\" : true,\n  \"CodecProfiles\" : [ {\n    \"Codec\" : \"Codec\",\n    \"Container\" : \"Container\",\n    \"ApplyConditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ],\n    \"Conditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ]\n  }, {\n    \"Codec\" : \"Codec\",\n    \"Container\" : \"Container\",\n    \"ApplyConditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ],\n    \"Conditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ]\n  } ],\n  \"SerialNumber\" : \"SerialNumber\",\n  \"SupportedMediaTypes\" : \"SupportedMediaTypes\",\n  \"SonyAggregationFlags\" : \"SonyAggregationFlags\",\n  \"MaxIconWidth\" : 5,\n  \"UserId\" : \"UserId\",\n  \"TimelineOffsetSeconds\" : 3,\n  \"ContainerProfiles\" : [ {\n    \"Container\" : \"Container\",\n    \"Conditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ]\n  }, {\n    \"Container\" : \"Container\",\n    \"Conditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ]\n  } ],\n  \"DirectPlayProfiles\" : [ {\n    \"Container\" : \"Container\",\n    \"VideoCodec\" : \"VideoCodec\",\n    \"AudioCodec\" : \"AudioCodec\"\n  }, {\n    \"Container\" : \"Container\",\n    \"VideoCodec\" : \"VideoCodec\",\n    \"AudioCodec\" : \"AudioCodec\"\n  } ],\n  \"MaxStaticMusicBitrate\" : 2,\n  \"Id\" : \"Id\"\n}";
            exampleJson = "{\n  \"EnableSingleAlbumArtLimit\" : true,\n  \"ManufacturerUrl\" : \"ManufacturerUrl\",\n  \"MusicStreamingTranscodingBitrate\" : 9,\n  \"AlbumArtPn\" : \"AlbumArtPn\",\n  \"TranscodingProfiles\" : [ {\n    \"BreakOnNonKeyFrames\" : true,\n    \"EnableSubtitlesInManifest\" : true,\n    \"CopyTimestamps\" : true,\n    \"MinSegments\" : 2,\n    \"EnableMpegtsM2TsMode\" : true,\n    \"MaxAudioChannels\" : \"MaxAudioChannels\",\n    \"VideoCodec\" : \"VideoCodec\",\n    \"Container\" : \"Container\",\n    \"EstimateContentLength\" : true,\n    \"SegmentLength\" : 4,\n    \"Protocol\" : \"Protocol\",\n    \"AudioCodec\" : \"AudioCodec\"\n  }, {\n    \"BreakOnNonKeyFrames\" : true,\n    \"EnableSubtitlesInManifest\" : true,\n    \"CopyTimestamps\" : true,\n    \"MinSegments\" : 2,\n    \"EnableMpegtsM2TsMode\" : true,\n    \"MaxAudioChannels\" : \"MaxAudioChannels\",\n    \"VideoCodec\" : \"VideoCodec\",\n    \"Container\" : \"Container\",\n    \"EstimateContentLength\" : true,\n    \"SegmentLength\" : 4,\n    \"Protocol\" : \"Protocol\",\n    \"AudioCodec\" : \"AudioCodec\"\n  } ],\n  \"Identification\" : {\n    \"ManufacturerUrl\" : \"ManufacturerUrl\",\n    \"ModelNumber\" : \"ModelNumber\",\n    \"ModelUrl\" : \"ModelUrl\",\n    \"ModelName\" : \"ModelName\",\n    \"SerialNumber\" : \"SerialNumber\",\n    \"FriendlyName\" : \"FriendlyName\",\n    \"Headers\" : [ {\n      \"Value\" : \"Value\",\n      \"Name\" : \"Name\"\n    }, {\n      \"Value\" : \"Value\",\n      \"Name\" : \"Name\"\n    } ],\n    \"Manufacturer\" : \"Manufacturer\",\n    \"ModelDescription\" : \"ModelDescription\"\n  },\n  \"MaxStreamingBitrate\" : 7,\n  \"IgnoreTranscodeByteRangeRequests\" : true,\n  \"Name\" : \"Name\",\n  \"ResponseProfiles\" : [ {\n    \"Container\" : \"Container\",\n    \"OrgPn\" : \"OrgPn\",\n    \"VideoCodec\" : \"VideoCodec\",\n    \"AudioCodec\" : \"AudioCodec\",\n    \"Conditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ],\n    \"MimeType\" : \"MimeType\"\n  }, {\n    \"Container\" : \"Container\",\n    \"OrgPn\" : \"OrgPn\",\n    \"VideoCodec\" : \"VideoCodec\",\n    \"AudioCodec\" : \"AudioCodec\",\n    \"Conditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ],\n    \"MimeType\" : \"MimeType\"\n  } ],\n  \"ModelUrl\" : \"ModelUrl\",\n  \"MaxStaticBitrate\" : 5,\n  \"Manufacturer\" : \"Manufacturer\",\n  \"ProtocolInfo\" : \"ProtocolInfo\",\n  \"RequiresPlainVideoItems\" : true,\n  \"ModelDescription\" : \"ModelDescription\",\n  \"MaxAlbumArtWidth\" : 6,\n  \"ModelNumber\" : \"ModelNumber\",\n  \"XmlRootAttributes\" : [ {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"ModelName\" : \"ModelName\",\n  \"FriendlyName\" : \"FriendlyName\",\n  \"MaxIconHeight\" : 1,\n  \"RequiresPlainFolders\" : true,\n  \"EnableSingleSubtitleLimit\" : true,\n  \"SubtitleProfiles\" : [ {\n    \"Container\" : \"Container\",\n    \"Format\" : \"Format\",\n    \"Language\" : \"Language\",\n    \"DidlMode\" : \"DidlMode\"\n  }, {\n    \"Container\" : \"Container\",\n    \"Format\" : \"Format\",\n    \"Language\" : \"Language\",\n    \"DidlMode\" : \"DidlMode\"\n  } ],\n  \"MaxAlbumArtHeight\" : 0,\n  \"EnableAlbumArtInDidl\" : true,\n  \"EnableMSMediaReceiverRegistrar\" : true,\n  \"CodecProfiles\" : [ {\n    \"Codec\" : \"Codec\",\n    \"Container\" : \"Container\",\n    \"ApplyConditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ],\n    \"Conditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ]\n  }, {\n    \"Codec\" : \"Codec\",\n    \"Container\" : \"Container\",\n    \"ApplyConditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ],\n    \"Conditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ]\n  } ],\n  \"SerialNumber\" : \"SerialNumber\",\n  \"SupportedMediaTypes\" : \"SupportedMediaTypes\",\n  \"SonyAggregationFlags\" : \"SonyAggregationFlags\",\n  \"MaxIconWidth\" : 5,\n  \"UserId\" : \"UserId\",\n  \"TimelineOffsetSeconds\" : 3,\n  \"ContainerProfiles\" : [ {\n    \"Container\" : \"Container\",\n    \"Conditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ]\n  }, {\n    \"Container\" : \"Container\",\n    \"Conditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ]\n  } ],\n  \"DirectPlayProfiles\" : [ {\n    \"Container\" : \"Container\",\n    \"VideoCodec\" : \"VideoCodec\",\n    \"AudioCodec\" : \"AudioCodec\"\n  }, {\n    \"Container\" : \"Container\",\n    \"VideoCodec\" : \"VideoCodec\",\n    \"AudioCodec\" : \"AudioCodec\"\n  } ],\n  \"MaxStaticMusicBitrate\" : 2,\n  \"Id\" : \"Id\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<DeviceProfile>(exampleJson)
            : default(DeviceProfile);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a single profile.
        /// </summary>
        /// <param name="profileId">Profile Id.</param>
        /// <response code="200">Device profile returned.</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Device profile not found.</response>
        [HttpGet]
        [Route("/Dlna/Profiles/{profileId}")]
        [Authorize(Policy = "CustomAuthentication")]
        [ValidateModelState]
        [SwaggerOperation("GetProfile")]
        [SwaggerResponse(statusCode: 200, type: typeof(DeviceProfile), description: "Device profile returned.")]
        [SwaggerResponse(statusCode: 404, type: typeof(ProblemDetails), description: "Device profile not found.")]
        public virtual IActionResult GetProfile([FromRoute (Name = "profileId")][Required]string profileId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(DeviceProfile));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ProblemDetails));
            string exampleJson = null;
            exampleJson = "{\n  \"EnableSingleAlbumArtLimit\" : true,\n  \"ManufacturerUrl\" : \"ManufacturerUrl\",\n  \"MusicStreamingTranscodingBitrate\" : 9,\n  \"AlbumArtPn\" : \"AlbumArtPn\",\n  \"TranscodingProfiles\" : [ {\n    \"BreakOnNonKeyFrames\" : true,\n    \"EnableSubtitlesInManifest\" : true,\n    \"CopyTimestamps\" : true,\n    \"MinSegments\" : 2,\n    \"EnableMpegtsM2TsMode\" : true,\n    \"MaxAudioChannels\" : \"MaxAudioChannels\",\n    \"VideoCodec\" : \"VideoCodec\",\n    \"Container\" : \"Container\",\n    \"EstimateContentLength\" : true,\n    \"SegmentLength\" : 4,\n    \"Protocol\" : \"Protocol\",\n    \"AudioCodec\" : \"AudioCodec\"\n  }, {\n    \"BreakOnNonKeyFrames\" : true,\n    \"EnableSubtitlesInManifest\" : true,\n    \"CopyTimestamps\" : true,\n    \"MinSegments\" : 2,\n    \"EnableMpegtsM2TsMode\" : true,\n    \"MaxAudioChannels\" : \"MaxAudioChannels\",\n    \"VideoCodec\" : \"VideoCodec\",\n    \"Container\" : \"Container\",\n    \"EstimateContentLength\" : true,\n    \"SegmentLength\" : 4,\n    \"Protocol\" : \"Protocol\",\n    \"AudioCodec\" : \"AudioCodec\"\n  } ],\n  \"Identification\" : {\n    \"ManufacturerUrl\" : \"ManufacturerUrl\",\n    \"ModelNumber\" : \"ModelNumber\",\n    \"ModelUrl\" : \"ModelUrl\",\n    \"ModelName\" : \"ModelName\",\n    \"SerialNumber\" : \"SerialNumber\",\n    \"FriendlyName\" : \"FriendlyName\",\n    \"Headers\" : [ {\n      \"Value\" : \"Value\",\n      \"Name\" : \"Name\"\n    }, {\n      \"Value\" : \"Value\",\n      \"Name\" : \"Name\"\n    } ],\n    \"Manufacturer\" : \"Manufacturer\",\n    \"ModelDescription\" : \"ModelDescription\"\n  },\n  \"MaxStreamingBitrate\" : 7,\n  \"IgnoreTranscodeByteRangeRequests\" : true,\n  \"Name\" : \"Name\",\n  \"ResponseProfiles\" : [ {\n    \"Container\" : \"Container\",\n    \"OrgPn\" : \"OrgPn\",\n    \"VideoCodec\" : \"VideoCodec\",\n    \"AudioCodec\" : \"AudioCodec\",\n    \"Conditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ],\n    \"MimeType\" : \"MimeType\"\n  }, {\n    \"Container\" : \"Container\",\n    \"OrgPn\" : \"OrgPn\",\n    \"VideoCodec\" : \"VideoCodec\",\n    \"AudioCodec\" : \"AudioCodec\",\n    \"Conditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ],\n    \"MimeType\" : \"MimeType\"\n  } ],\n  \"ModelUrl\" : \"ModelUrl\",\n  \"MaxStaticBitrate\" : 5,\n  \"Manufacturer\" : \"Manufacturer\",\n  \"ProtocolInfo\" : \"ProtocolInfo\",\n  \"RequiresPlainVideoItems\" : true,\n  \"ModelDescription\" : \"ModelDescription\",\n  \"MaxAlbumArtWidth\" : 6,\n  \"ModelNumber\" : \"ModelNumber\",\n  \"XmlRootAttributes\" : [ {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"ModelName\" : \"ModelName\",\n  \"FriendlyName\" : \"FriendlyName\",\n  \"MaxIconHeight\" : 1,\n  \"RequiresPlainFolders\" : true,\n  \"EnableSingleSubtitleLimit\" : true,\n  \"SubtitleProfiles\" : [ {\n    \"Container\" : \"Container\",\n    \"Format\" : \"Format\",\n    \"Language\" : \"Language\",\n    \"DidlMode\" : \"DidlMode\"\n  }, {\n    \"Container\" : \"Container\",\n    \"Format\" : \"Format\",\n    \"Language\" : \"Language\",\n    \"DidlMode\" : \"DidlMode\"\n  } ],\n  \"MaxAlbumArtHeight\" : 0,\n  \"EnableAlbumArtInDidl\" : true,\n  \"EnableMSMediaReceiverRegistrar\" : true,\n  \"CodecProfiles\" : [ {\n    \"Codec\" : \"Codec\",\n    \"Container\" : \"Container\",\n    \"ApplyConditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ],\n    \"Conditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ]\n  }, {\n    \"Codec\" : \"Codec\",\n    \"Container\" : \"Container\",\n    \"ApplyConditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ],\n    \"Conditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ]\n  } ],\n  \"SerialNumber\" : \"SerialNumber\",\n  \"SupportedMediaTypes\" : \"SupportedMediaTypes\",\n  \"SonyAggregationFlags\" : \"SonyAggregationFlags\",\n  \"MaxIconWidth\" : 5,\n  \"UserId\" : \"UserId\",\n  \"TimelineOffsetSeconds\" : 3,\n  \"ContainerProfiles\" : [ {\n    \"Container\" : \"Container\",\n    \"Conditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ]\n  }, {\n    \"Container\" : \"Container\",\n    \"Conditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ]\n  } ],\n  \"DirectPlayProfiles\" : [ {\n    \"Container\" : \"Container\",\n    \"VideoCodec\" : \"VideoCodec\",\n    \"AudioCodec\" : \"AudioCodec\"\n  }, {\n    \"Container\" : \"Container\",\n    \"VideoCodec\" : \"VideoCodec\",\n    \"AudioCodec\" : \"AudioCodec\"\n  } ],\n  \"MaxStaticMusicBitrate\" : 2,\n  \"Id\" : \"Id\"\n}";
            exampleJson = "{\n  \"EnableSingleAlbumArtLimit\" : true,\n  \"ManufacturerUrl\" : \"ManufacturerUrl\",\n  \"MusicStreamingTranscodingBitrate\" : 9,\n  \"AlbumArtPn\" : \"AlbumArtPn\",\n  \"TranscodingProfiles\" : [ {\n    \"BreakOnNonKeyFrames\" : true,\n    \"EnableSubtitlesInManifest\" : true,\n    \"CopyTimestamps\" : true,\n    \"MinSegments\" : 2,\n    \"EnableMpegtsM2TsMode\" : true,\n    \"MaxAudioChannels\" : \"MaxAudioChannels\",\n    \"VideoCodec\" : \"VideoCodec\",\n    \"Container\" : \"Container\",\n    \"EstimateContentLength\" : true,\n    \"SegmentLength\" : 4,\n    \"Protocol\" : \"Protocol\",\n    \"AudioCodec\" : \"AudioCodec\"\n  }, {\n    \"BreakOnNonKeyFrames\" : true,\n    \"EnableSubtitlesInManifest\" : true,\n    \"CopyTimestamps\" : true,\n    \"MinSegments\" : 2,\n    \"EnableMpegtsM2TsMode\" : true,\n    \"MaxAudioChannels\" : \"MaxAudioChannels\",\n    \"VideoCodec\" : \"VideoCodec\",\n    \"Container\" : \"Container\",\n    \"EstimateContentLength\" : true,\n    \"SegmentLength\" : 4,\n    \"Protocol\" : \"Protocol\",\n    \"AudioCodec\" : \"AudioCodec\"\n  } ],\n  \"Identification\" : {\n    \"ManufacturerUrl\" : \"ManufacturerUrl\",\n    \"ModelNumber\" : \"ModelNumber\",\n    \"ModelUrl\" : \"ModelUrl\",\n    \"ModelName\" : \"ModelName\",\n    \"SerialNumber\" : \"SerialNumber\",\n    \"FriendlyName\" : \"FriendlyName\",\n    \"Headers\" : [ {\n      \"Value\" : \"Value\",\n      \"Name\" : \"Name\"\n    }, {\n      \"Value\" : \"Value\",\n      \"Name\" : \"Name\"\n    } ],\n    \"Manufacturer\" : \"Manufacturer\",\n    \"ModelDescription\" : \"ModelDescription\"\n  },\n  \"MaxStreamingBitrate\" : 7,\n  \"IgnoreTranscodeByteRangeRequests\" : true,\n  \"Name\" : \"Name\",\n  \"ResponseProfiles\" : [ {\n    \"Container\" : \"Container\",\n    \"OrgPn\" : \"OrgPn\",\n    \"VideoCodec\" : \"VideoCodec\",\n    \"AudioCodec\" : \"AudioCodec\",\n    \"Conditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ],\n    \"MimeType\" : \"MimeType\"\n  }, {\n    \"Container\" : \"Container\",\n    \"OrgPn\" : \"OrgPn\",\n    \"VideoCodec\" : \"VideoCodec\",\n    \"AudioCodec\" : \"AudioCodec\",\n    \"Conditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ],\n    \"MimeType\" : \"MimeType\"\n  } ],\n  \"ModelUrl\" : \"ModelUrl\",\n  \"MaxStaticBitrate\" : 5,\n  \"Manufacturer\" : \"Manufacturer\",\n  \"ProtocolInfo\" : \"ProtocolInfo\",\n  \"RequiresPlainVideoItems\" : true,\n  \"ModelDescription\" : \"ModelDescription\",\n  \"MaxAlbumArtWidth\" : 6,\n  \"ModelNumber\" : \"ModelNumber\",\n  \"XmlRootAttributes\" : [ {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"ModelName\" : \"ModelName\",\n  \"FriendlyName\" : \"FriendlyName\",\n  \"MaxIconHeight\" : 1,\n  \"RequiresPlainFolders\" : true,\n  \"EnableSingleSubtitleLimit\" : true,\n  \"SubtitleProfiles\" : [ {\n    \"Container\" : \"Container\",\n    \"Format\" : \"Format\",\n    \"Language\" : \"Language\",\n    \"DidlMode\" : \"DidlMode\"\n  }, {\n    \"Container\" : \"Container\",\n    \"Format\" : \"Format\",\n    \"Language\" : \"Language\",\n    \"DidlMode\" : \"DidlMode\"\n  } ],\n  \"MaxAlbumArtHeight\" : 0,\n  \"EnableAlbumArtInDidl\" : true,\n  \"EnableMSMediaReceiverRegistrar\" : true,\n  \"CodecProfiles\" : [ {\n    \"Codec\" : \"Codec\",\n    \"Container\" : \"Container\",\n    \"ApplyConditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ],\n    \"Conditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ]\n  }, {\n    \"Codec\" : \"Codec\",\n    \"Container\" : \"Container\",\n    \"ApplyConditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ],\n    \"Conditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ]\n  } ],\n  \"SerialNumber\" : \"SerialNumber\",\n  \"SupportedMediaTypes\" : \"SupportedMediaTypes\",\n  \"SonyAggregationFlags\" : \"SonyAggregationFlags\",\n  \"MaxIconWidth\" : 5,\n  \"UserId\" : \"UserId\",\n  \"TimelineOffsetSeconds\" : 3,\n  \"ContainerProfiles\" : [ {\n    \"Container\" : \"Container\",\n    \"Conditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ]\n  }, {\n    \"Container\" : \"Container\",\n    \"Conditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ]\n  } ],\n  \"DirectPlayProfiles\" : [ {\n    \"Container\" : \"Container\",\n    \"VideoCodec\" : \"VideoCodec\",\n    \"AudioCodec\" : \"AudioCodec\"\n  }, {\n    \"Container\" : \"Container\",\n    \"VideoCodec\" : \"VideoCodec\",\n    \"AudioCodec\" : \"AudioCodec\"\n  } ],\n  \"MaxStaticMusicBitrate\" : 2,\n  \"Id\" : \"Id\"\n}";
            exampleJson = "{\n  \"EnableSingleAlbumArtLimit\" : true,\n  \"ManufacturerUrl\" : \"ManufacturerUrl\",\n  \"MusicStreamingTranscodingBitrate\" : 9,\n  \"AlbumArtPn\" : \"AlbumArtPn\",\n  \"TranscodingProfiles\" : [ {\n    \"BreakOnNonKeyFrames\" : true,\n    \"EnableSubtitlesInManifest\" : true,\n    \"CopyTimestamps\" : true,\n    \"MinSegments\" : 2,\n    \"EnableMpegtsM2TsMode\" : true,\n    \"MaxAudioChannels\" : \"MaxAudioChannels\",\n    \"VideoCodec\" : \"VideoCodec\",\n    \"Container\" : \"Container\",\n    \"EstimateContentLength\" : true,\n    \"SegmentLength\" : 4,\n    \"Protocol\" : \"Protocol\",\n    \"AudioCodec\" : \"AudioCodec\"\n  }, {\n    \"BreakOnNonKeyFrames\" : true,\n    \"EnableSubtitlesInManifest\" : true,\n    \"CopyTimestamps\" : true,\n    \"MinSegments\" : 2,\n    \"EnableMpegtsM2TsMode\" : true,\n    \"MaxAudioChannels\" : \"MaxAudioChannels\",\n    \"VideoCodec\" : \"VideoCodec\",\n    \"Container\" : \"Container\",\n    \"EstimateContentLength\" : true,\n    \"SegmentLength\" : 4,\n    \"Protocol\" : \"Protocol\",\n    \"AudioCodec\" : \"AudioCodec\"\n  } ],\n  \"Identification\" : {\n    \"ManufacturerUrl\" : \"ManufacturerUrl\",\n    \"ModelNumber\" : \"ModelNumber\",\n    \"ModelUrl\" : \"ModelUrl\",\n    \"ModelName\" : \"ModelName\",\n    \"SerialNumber\" : \"SerialNumber\",\n    \"FriendlyName\" : \"FriendlyName\",\n    \"Headers\" : [ {\n      \"Value\" : \"Value\",\n      \"Name\" : \"Name\"\n    }, {\n      \"Value\" : \"Value\",\n      \"Name\" : \"Name\"\n    } ],\n    \"Manufacturer\" : \"Manufacturer\",\n    \"ModelDescription\" : \"ModelDescription\"\n  },\n  \"MaxStreamingBitrate\" : 7,\n  \"IgnoreTranscodeByteRangeRequests\" : true,\n  \"Name\" : \"Name\",\n  \"ResponseProfiles\" : [ {\n    \"Container\" : \"Container\",\n    \"OrgPn\" : \"OrgPn\",\n    \"VideoCodec\" : \"VideoCodec\",\n    \"AudioCodec\" : \"AudioCodec\",\n    \"Conditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ],\n    \"MimeType\" : \"MimeType\"\n  }, {\n    \"Container\" : \"Container\",\n    \"OrgPn\" : \"OrgPn\",\n    \"VideoCodec\" : \"VideoCodec\",\n    \"AudioCodec\" : \"AudioCodec\",\n    \"Conditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ],\n    \"MimeType\" : \"MimeType\"\n  } ],\n  \"ModelUrl\" : \"ModelUrl\",\n  \"MaxStaticBitrate\" : 5,\n  \"Manufacturer\" : \"Manufacturer\",\n  \"ProtocolInfo\" : \"ProtocolInfo\",\n  \"RequiresPlainVideoItems\" : true,\n  \"ModelDescription\" : \"ModelDescription\",\n  \"MaxAlbumArtWidth\" : 6,\n  \"ModelNumber\" : \"ModelNumber\",\n  \"XmlRootAttributes\" : [ {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"ModelName\" : \"ModelName\",\n  \"FriendlyName\" : \"FriendlyName\",\n  \"MaxIconHeight\" : 1,\n  \"RequiresPlainFolders\" : true,\n  \"EnableSingleSubtitleLimit\" : true,\n  \"SubtitleProfiles\" : [ {\n    \"Container\" : \"Container\",\n    \"Format\" : \"Format\",\n    \"Language\" : \"Language\",\n    \"DidlMode\" : \"DidlMode\"\n  }, {\n    \"Container\" : \"Container\",\n    \"Format\" : \"Format\",\n    \"Language\" : \"Language\",\n    \"DidlMode\" : \"DidlMode\"\n  } ],\n  \"MaxAlbumArtHeight\" : 0,\n  \"EnableAlbumArtInDidl\" : true,\n  \"EnableMSMediaReceiverRegistrar\" : true,\n  \"CodecProfiles\" : [ {\n    \"Codec\" : \"Codec\",\n    \"Container\" : \"Container\",\n    \"ApplyConditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ],\n    \"Conditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ]\n  }, {\n    \"Codec\" : \"Codec\",\n    \"Container\" : \"Container\",\n    \"ApplyConditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ],\n    \"Conditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ]\n  } ],\n  \"SerialNumber\" : \"SerialNumber\",\n  \"SupportedMediaTypes\" : \"SupportedMediaTypes\",\n  \"SonyAggregationFlags\" : \"SonyAggregationFlags\",\n  \"MaxIconWidth\" : 5,\n  \"UserId\" : \"UserId\",\n  \"TimelineOffsetSeconds\" : 3,\n  \"ContainerProfiles\" : [ {\n    \"Container\" : \"Container\",\n    \"Conditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ]\n  }, {\n    \"Container\" : \"Container\",\n    \"Conditions\" : [ {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    }, {\n      \"IsRequired\" : true,\n      \"Value\" : \"Value\"\n    } ]\n  } ],\n  \"DirectPlayProfiles\" : [ {\n    \"Container\" : \"Container\",\n    \"VideoCodec\" : \"VideoCodec\",\n    \"AudioCodec\" : \"AudioCodec\"\n  }, {\n    \"Container\" : \"Container\",\n    \"VideoCodec\" : \"VideoCodec\",\n    \"AudioCodec\" : \"AudioCodec\"\n  } ],\n  \"MaxStaticMusicBitrate\" : 2,\n  \"Id\" : \"Id\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<DeviceProfile>(exampleJson)
            : default(DeviceProfile);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get profile infos.
        /// </summary>
        /// <response code="200">Device profile infos returned.</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpGet]
        [Route("/Dlna/ProfileInfos")]
        [Authorize(Policy = "CustomAuthentication")]
        [ValidateModelState]
        [SwaggerOperation("GetProfileInfos")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<DeviceProfileInfo>), description: "Device profile infos returned.")]
        public virtual IActionResult GetProfileInfos()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<DeviceProfileInfo>));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            string exampleJson = null;
            exampleJson = "[ {\n  \"Id\" : \"Id\",\n  \"Name\" : \"Name\"\n}, {\n  \"Id\" : \"Id\",\n  \"Name\" : \"Name\"\n} ]";
            exampleJson = "[ {\n  \"Id\" : \"Id\",\n  \"Name\" : \"Name\"\n}, {\n  \"Id\" : \"Id\",\n  \"Name\" : \"Name\"\n} ]";
            exampleJson = "[ {\n  \"Id\" : \"Id\",\n  \"Name\" : \"Name\"\n}, {\n  \"Id\" : \"Id\",\n  \"Name\" : \"Name\"\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<DeviceProfileInfo>>(exampleJson)
            : default(List<DeviceProfileInfo>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Updates a profile.
        /// </summary>
        /// <param name="profileId">Profile id.</param>
        /// <param name="deviceProfile">Device profile.</param>
        /// <response code="204">Device profile updated.</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Device profile not found.</response>
        [HttpPost]
        [Route("/Dlna/Profiles/{profileId}")]
        [Authorize(Policy = "CustomAuthentication")]
        [Consumes("application/*+json", "application/json", "text/json")]
        [ValidateModelState]
        [SwaggerOperation("UpdateProfile")]
        [SwaggerResponse(statusCode: 404, type: typeof(ProblemDetails), description: "Device profile not found.")]
        public virtual IActionResult UpdateProfile([FromRoute (Name = "profileId")][Required]string profileId, [FromBody]DeviceProfile deviceProfile)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ProblemDetails));

            throw new NotImplementedException();
        }
    }
}
