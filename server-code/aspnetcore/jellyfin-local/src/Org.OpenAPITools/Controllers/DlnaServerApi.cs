/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class DlnaServerApiController : ControllerBase
    { 
        /// <summary>
        /// Gets Dlna media receiver registrar xml.
        /// </summary>
        /// <param name="serverId">Server UUID.</param>
        /// <response code="200">Dlna media receiver registrar xml returned.</response>
        /// <response code="503">DLNA is disabled.</response>
        [HttpGet]
        [Route("/Dlna/{serverId}/ConnectionManager")]
        [ValidateModelState]
        [SwaggerOperation("GetConnectionManager")]
        [SwaggerResponse(statusCode: 200, type: typeof(System.IO.Stream), description: "Dlna media receiver registrar xml returned.")]
        public virtual IActionResult GetConnectionManager([FromRoute (Name = "serverId")][Required]string serverId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(System.IO.Stream));
            //TODO: Uncomment the next line to return response 503 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(503);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<System.IO.Stream>(exampleJson)
            : default(System.IO.Stream);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets Dlna media receiver registrar xml.
        /// </summary>
        /// <param name="serverId">Server UUID.</param>
        /// <response code="200">Dlna media receiver registrar xml returned.</response>
        /// <response code="503">DLNA is disabled.</response>
        [HttpGet]
        [Route("/Dlna/{serverId}/ConnectionManager/ConnectionManager")]
        [ValidateModelState]
        [SwaggerOperation("GetConnectionManager2")]
        [SwaggerResponse(statusCode: 200, type: typeof(System.IO.Stream), description: "Dlna media receiver registrar xml returned.")]
        public virtual IActionResult GetConnectionManager2([FromRoute (Name = "serverId")][Required]string serverId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(System.IO.Stream));
            //TODO: Uncomment the next line to return response 503 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(503);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<System.IO.Stream>(exampleJson)
            : default(System.IO.Stream);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets Dlna media receiver registrar xml.
        /// </summary>
        /// <param name="serverId">Server UUID.</param>
        /// <response code="200">Dlna media receiver registrar xml returned.</response>
        /// <response code="503">DLNA is disabled.</response>
        [HttpGet]
        [Route("/Dlna/{serverId}/ConnectionManager/ConnectionManager.xml")]
        [ValidateModelState]
        [SwaggerOperation("GetConnectionManager3")]
        [SwaggerResponse(statusCode: 200, type: typeof(System.IO.Stream), description: "Dlna media receiver registrar xml returned.")]
        public virtual IActionResult GetConnectionManager3([FromRoute (Name = "serverId")][Required]string serverId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(System.IO.Stream));
            //TODO: Uncomment the next line to return response 503 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(503);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<System.IO.Stream>(exampleJson)
            : default(System.IO.Stream);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets Dlna content directory xml.
        /// </summary>
        /// <param name="serverId">Server UUID.</param>
        /// <response code="200">Dlna content directory returned.</response>
        /// <response code="503">DLNA is disabled.</response>
        [HttpGet]
        [Route("/Dlna/{serverId}/ContentDirectory")]
        [ValidateModelState]
        [SwaggerOperation("GetContentDirectory")]
        [SwaggerResponse(statusCode: 200, type: typeof(System.IO.Stream), description: "Dlna content directory returned.")]
        public virtual IActionResult GetContentDirectory([FromRoute (Name = "serverId")][Required]string serverId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(System.IO.Stream));
            //TODO: Uncomment the next line to return response 503 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(503);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<System.IO.Stream>(exampleJson)
            : default(System.IO.Stream);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets Dlna content directory xml.
        /// </summary>
        /// <param name="serverId">Server UUID.</param>
        /// <response code="200">Dlna content directory returned.</response>
        /// <response code="503">DLNA is disabled.</response>
        [HttpGet]
        [Route("/Dlna/{serverId}/ContentDirectory/ContentDirectory")]
        [ValidateModelState]
        [SwaggerOperation("GetContentDirectory2")]
        [SwaggerResponse(statusCode: 200, type: typeof(System.IO.Stream), description: "Dlna content directory returned.")]
        public virtual IActionResult GetContentDirectory2([FromRoute (Name = "serverId")][Required]string serverId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(System.IO.Stream));
            //TODO: Uncomment the next line to return response 503 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(503);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<System.IO.Stream>(exampleJson)
            : default(System.IO.Stream);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets Dlna content directory xml.
        /// </summary>
        /// <param name="serverId">Server UUID.</param>
        /// <response code="200">Dlna content directory returned.</response>
        /// <response code="503">DLNA is disabled.</response>
        [HttpGet]
        [Route("/Dlna/{serverId}/ContentDirectory/ContentDirectory.xml")]
        [ValidateModelState]
        [SwaggerOperation("GetContentDirectory3")]
        [SwaggerResponse(statusCode: 200, type: typeof(System.IO.Stream), description: "Dlna content directory returned.")]
        public virtual IActionResult GetContentDirectory3([FromRoute (Name = "serverId")][Required]string serverId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(System.IO.Stream));
            //TODO: Uncomment the next line to return response 503 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(503);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<System.IO.Stream>(exampleJson)
            : default(System.IO.Stream);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get Description Xml.
        /// </summary>
        /// <param name="serverId">Server UUID.</param>
        /// <response code="200">Description xml returned.</response>
        /// <response code="503">DLNA is disabled.</response>
        [HttpGet]
        [Route("/Dlna/{serverId}/description")]
        [ValidateModelState]
        [SwaggerOperation("GetDescriptionXml")]
        [SwaggerResponse(statusCode: 200, type: typeof(System.IO.Stream), description: "Description xml returned.")]
        public virtual IActionResult GetDescriptionXml([FromRoute (Name = "serverId")][Required]string serverId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(System.IO.Stream));
            //TODO: Uncomment the next line to return response 503 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(503);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<System.IO.Stream>(exampleJson)
            : default(System.IO.Stream);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get Description Xml.
        /// </summary>
        /// <param name="serverId">Server UUID.</param>
        /// <response code="200">Description xml returned.</response>
        /// <response code="503">DLNA is disabled.</response>
        [HttpGet]
        [Route("/Dlna/{serverId}/description.xml")]
        [ValidateModelState]
        [SwaggerOperation("GetDescriptionXml2")]
        [SwaggerResponse(statusCode: 200, type: typeof(System.IO.Stream), description: "Description xml returned.")]
        public virtual IActionResult GetDescriptionXml2([FromRoute (Name = "serverId")][Required]string serverId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(System.IO.Stream));
            //TODO: Uncomment the next line to return response 503 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(503);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<System.IO.Stream>(exampleJson)
            : default(System.IO.Stream);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a server icon.
        /// </summary>
        /// <param name="fileName">The icon filename.</param>
        /// <response code="200">Request processed.</response>
        /// <response code="404">Not Found.</response>
        /// <response code="503">DLNA is disabled.</response>
        [HttpGet]
        [Route("/Dlna/icons/{fileName}")]
        [ValidateModelState]
        [SwaggerOperation("GetIcon")]
        [SwaggerResponse(statusCode: 200, type: typeof(System.IO.Stream), description: "Request processed.")]
        [SwaggerResponse(statusCode: 404, type: typeof(ProblemDetails), description: "Not Found.")]
        public virtual IActionResult GetIcon([FromRoute (Name = "fileName")][Required]string fileName)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(System.IO.Stream));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ProblemDetails));
            //TODO: Uncomment the next line to return response 503 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(503);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<System.IO.Stream>(exampleJson)
            : default(System.IO.Stream);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a server icon.
        /// </summary>
        /// <param name="serverId">Server UUID.</param>
        /// <param name="fileName">The icon filename.</param>
        /// <response code="200">Request processed.</response>
        /// <response code="404">Not Found.</response>
        /// <response code="503">DLNA is disabled.</response>
        [HttpGet]
        [Route("/Dlna/{serverId}/icons/{fileName}")]
        [ValidateModelState]
        [SwaggerOperation("GetIconId")]
        [SwaggerResponse(statusCode: 200, type: typeof(System.IO.Stream), description: "Request processed.")]
        [SwaggerResponse(statusCode: 404, type: typeof(ProblemDetails), description: "Not Found.")]
        public virtual IActionResult GetIconId([FromRoute (Name = "serverId")][Required]string serverId, [FromRoute (Name = "fileName")][Required]string fileName)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(System.IO.Stream));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ProblemDetails));
            //TODO: Uncomment the next line to return response 503 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(503);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<System.IO.Stream>(exampleJson)
            : default(System.IO.Stream);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets Dlna media receiver registrar xml.
        /// </summary>
        /// <param name="serverId">Server UUID.</param>
        /// <response code="200">Dlna media receiver registrar xml returned.</response>
        /// <response code="503">DLNA is disabled.</response>
        [HttpGet]
        [Route("/Dlna/{serverId}/MediaReceiverRegistrar")]
        [ValidateModelState]
        [SwaggerOperation("GetMediaReceiverRegistrar")]
        [SwaggerResponse(statusCode: 200, type: typeof(System.IO.Stream), description: "Dlna media receiver registrar xml returned.")]
        public virtual IActionResult GetMediaReceiverRegistrar([FromRoute (Name = "serverId")][Required]string serverId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(System.IO.Stream));
            //TODO: Uncomment the next line to return response 503 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(503);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<System.IO.Stream>(exampleJson)
            : default(System.IO.Stream);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets Dlna media receiver registrar xml.
        /// </summary>
        /// <param name="serverId">Server UUID.</param>
        /// <response code="200">Dlna media receiver registrar xml returned.</response>
        /// <response code="503">DLNA is disabled.</response>
        [HttpGet]
        [Route("/Dlna/{serverId}/MediaReceiverRegistrar/MediaReceiverRegistrar")]
        [ValidateModelState]
        [SwaggerOperation("GetMediaReceiverRegistrar2")]
        [SwaggerResponse(statusCode: 200, type: typeof(System.IO.Stream), description: "Dlna media receiver registrar xml returned.")]
        public virtual IActionResult GetMediaReceiverRegistrar2([FromRoute (Name = "serverId")][Required]string serverId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(System.IO.Stream));
            //TODO: Uncomment the next line to return response 503 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(503);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<System.IO.Stream>(exampleJson)
            : default(System.IO.Stream);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets Dlna media receiver registrar xml.
        /// </summary>
        /// <param name="serverId">Server UUID.</param>
        /// <response code="200">Dlna media receiver registrar xml returned.</response>
        /// <response code="503">DLNA is disabled.</response>
        [HttpGet]
        [Route("/Dlna/{serverId}/MediaReceiverRegistrar/MediaReceiverRegistrar.xml")]
        [ValidateModelState]
        [SwaggerOperation("GetMediaReceiverRegistrar3")]
        [SwaggerResponse(statusCode: 200, type: typeof(System.IO.Stream), description: "Dlna media receiver registrar xml returned.")]
        public virtual IActionResult GetMediaReceiverRegistrar3([FromRoute (Name = "serverId")][Required]string serverId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(System.IO.Stream));
            //TODO: Uncomment the next line to return response 503 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(503);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<System.IO.Stream>(exampleJson)
            : default(System.IO.Stream);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Process a connection manager control request.
        /// </summary>
        /// <param name="serverId">Server UUID.</param>
        /// <response code="200">Request processed.</response>
        /// <response code="503">DLNA is disabled.</response>
        [HttpPost]
        [Route("/Dlna/{serverId}/ConnectionManager/Control")]
        [ValidateModelState]
        [SwaggerOperation("ProcessConnectionManagerControlRequest")]
        [SwaggerResponse(statusCode: 200, type: typeof(System.IO.Stream), description: "Request processed.")]
        public virtual IActionResult ProcessConnectionManagerControlRequest([FromRoute (Name = "serverId")][Required]string serverId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(System.IO.Stream));
            //TODO: Uncomment the next line to return response 503 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(503);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<System.IO.Stream>(exampleJson)
            : default(System.IO.Stream);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Process a content directory control request.
        /// </summary>
        /// <param name="serverId">Server UUID.</param>
        /// <response code="200">Request processed.</response>
        /// <response code="503">DLNA is disabled.</response>
        [HttpPost]
        [Route("/Dlna/{serverId}/ContentDirectory/Control")]
        [ValidateModelState]
        [SwaggerOperation("ProcessContentDirectoryControlRequest")]
        [SwaggerResponse(statusCode: 200, type: typeof(System.IO.Stream), description: "Request processed.")]
        public virtual IActionResult ProcessContentDirectoryControlRequest([FromRoute (Name = "serverId")][Required]string serverId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(System.IO.Stream));
            //TODO: Uncomment the next line to return response 503 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(503);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<System.IO.Stream>(exampleJson)
            : default(System.IO.Stream);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Process a media receiver registrar control request.
        /// </summary>
        /// <param name="serverId">Server UUID.</param>
        /// <response code="200">Request processed.</response>
        /// <response code="503">DLNA is disabled.</response>
        [HttpPost]
        [Route("/Dlna/{serverId}/MediaReceiverRegistrar/Control")]
        [ValidateModelState]
        [SwaggerOperation("ProcessMediaReceiverRegistrarControlRequest")]
        [SwaggerResponse(statusCode: 200, type: typeof(System.IO.Stream), description: "Request processed.")]
        public virtual IActionResult ProcessMediaReceiverRegistrarControlRequest([FromRoute (Name = "serverId")][Required]string serverId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(System.IO.Stream));
            //TODO: Uncomment the next line to return response 503 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(503);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<System.IO.Stream>(exampleJson)
            : default(System.IO.Stream);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
