/*
 * httpbin.org
 *
 * A simple HTTP Request & Response Service.<br/> <br/> <b>Run locally: </b> <code>$ docker run -p 80:80 kennethreitz/httpbin</code>
 *
 * The version of the OpenAPI document: 0.9.2
 * Contact: me@kennethreitz.org
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ResponseFormatsApiController : ControllerBase
    { 
        /// <summary>
        /// Returns Brotli-encoded data.
        /// </summary>
        /// <response code="200">Brotli-encoded data.</response>
        [HttpGet]
        [Route("/brotli")]
        [ValidateModelState]
        [SwaggerOperation("BrotliGet")]
        public virtual IActionResult BrotliGet()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Returns Deflate-encoded data.
        /// </summary>
        /// <response code="200">Defalte-encoded data.</response>
        [HttpGet]
        [Route("/deflate")]
        [ValidateModelState]
        [SwaggerOperation("DeflateGet")]
        public virtual IActionResult DeflateGet()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Returns page denied by robots.txt rules.
        /// </summary>
        /// <response code="200">Denied message</response>
        [HttpGet]
        [Route("/deny")]
        [ValidateModelState]
        [SwaggerOperation("DenyGet")]
        public virtual IActionResult DenyGet()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Returns a UTF-8 encoded body.
        /// </summary>
        /// <response code="200">Encoded UTF-8 content.</response>
        [HttpGet]
        [Route("/encoding/utf8")]
        [ValidateModelState]
        [SwaggerOperation("EncodingUtf8Get")]
        public virtual IActionResult EncodingUtf8Get()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Returns GZip-encoded data.
        /// </summary>
        /// <response code="200">GZip-encoded data.</response>
        [HttpGet]
        [Route("/gzip")]
        [ValidateModelState]
        [SwaggerOperation("GzipGet")]
        public virtual IActionResult GzipGet()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Returns a simple HTML document.
        /// </summary>
        /// <response code="200">An HTML page.</response>
        [HttpGet]
        [Route("/html")]
        [ValidateModelState]
        [SwaggerOperation("HtmlGet")]
        public virtual IActionResult HtmlGet()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Returns a simple JSON document.
        /// </summary>
        /// <response code="200">An JSON document.</response>
        [HttpGet]
        [Route("/json")]
        [ValidateModelState]
        [SwaggerOperation("JsonGet")]
        public virtual IActionResult JsonGet()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Returns some robots.txt rules.
        /// </summary>
        /// <response code="200">Robots file</response>
        [HttpGet]
        [Route("/robots.txt")]
        [ValidateModelState]
        [SwaggerOperation("RobotsTxtGet")]
        public virtual IActionResult RobotsTxtGet()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Returns a simple XML document.
        /// </summary>
        /// <response code="200">An XML document.</response>
        [HttpGet]
        [Route("/xml")]
        [ValidateModelState]
        [SwaggerOperation("XmlGet")]
        public virtual IActionResult XmlGet()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }
    }
}
