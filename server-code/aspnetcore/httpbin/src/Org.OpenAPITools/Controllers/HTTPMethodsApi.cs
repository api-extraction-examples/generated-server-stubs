/*
 * httpbin.org
 *
 * A simple HTTP Request & Response Service.<br/> <br/> <b>Run locally: </b> <code>$ docker run -p 80:80 kennethreitz/httpbin</code>
 *
 * The version of the OpenAPI document: 0.9.2
 * Contact: me@kennethreitz.org
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class HTTPMethodsApiController : ControllerBase
    { 
        /// <summary>
        /// The request&#39;s DELETE parameters.
        /// </summary>
        /// <response code="200">The request&#39;s DELETE parameters.</response>
        [HttpDelete]
        [Route("/delete")]
        [ValidateModelState]
        [SwaggerOperation("DeleteDelete")]
        public virtual IActionResult DeleteDelete()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// The request&#39;s query parameters.
        /// </summary>
        /// <response code="200">The request&#39;s query parameters.</response>
        [HttpGet]
        [Route("/get")]
        [ValidateModelState]
        [SwaggerOperation("GetGet")]
        public virtual IActionResult GetGet()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// The request&#39;s PATCH parameters.
        /// </summary>
        /// <response code="200">The request&#39;s PATCH parameters.</response>
        [HttpPatch]
        [Route("/patch")]
        [ValidateModelState]
        [SwaggerOperation("PatchPatch")]
        public virtual IActionResult PatchPatch()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// The request&#39;s POST parameters.
        /// </summary>
        /// <response code="200">The request&#39;s POST parameters.</response>
        [HttpPost]
        [Route("/post")]
        [ValidateModelState]
        [SwaggerOperation("PostPost")]
        public virtual IActionResult PostPost()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// The request&#39;s PUT parameters.
        /// </summary>
        /// <response code="200">The request&#39;s PUT parameters.</response>
        [HttpPut]
        [Route("/put")]
        [ValidateModelState]
        [SwaggerOperation("PutPut")]
        public virtual IActionResult PutPut()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }
    }
}
