/*
 * Open Banking - Payments initiation service
 *
 * Open Banking - Payments initiation service
 *
 * API version: 1.16.0
 * Contact: apisupport@mastercard.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
)



// ASPSPsAPIRouter defines the required methods for binding the api requests to a responses for the ASPSPsAPI
// The ASPSPsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ASPSPsAPIServicer to perform the required actions, then write the service results to the http response.
type ASPSPsAPIRouter interface { 
	PaymentsAspspsPost(http.ResponseWriter, *http.Request)
}
// CrossBorderPaymentsAPIRouter defines the required methods for binding the api requests to a responses for the CrossBorderPaymentsAPI
// The CrossBorderPaymentsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a CrossBorderPaymentsAPIServicer to perform the required actions, then write the service results to the http response.
type CrossBorderPaymentsAPIRouter interface { 
	PaymentsCrossBorderCreditTransfersPost(http.ResponseWriter, *http.Request)
}
// CrossBorderPaymentsConsentAPIRouter defines the required methods for binding the api requests to a responses for the CrossBorderPaymentsConsentAPI
// The CrossBorderPaymentsConsentAPIRouter implementation should parse necessary information from the http request,
// pass the data to a CrossBorderPaymentsConsentAPIServicer to perform the required actions, then write the service results to the http response.
type CrossBorderPaymentsConsentAPIRouter interface { 
	PaymentsCrossBorderCreditTransfersConsentsPost(http.ResponseWriter, *http.Request)
}
// CrossBorderPaymentsStatusAPIRouter defines the required methods for binding the api requests to a responses for the CrossBorderPaymentsStatusAPI
// The CrossBorderPaymentsStatusAPIRouter implementation should parse necessary information from the http request,
// pass the data to a CrossBorderPaymentsStatusAPIServicer to perform the required actions, then write the service results to the http response.
type CrossBorderPaymentsStatusAPIRouter interface { 
	PaymentsCrossBorderCreditTransfersPaymentStatusPost(http.ResponseWriter, *http.Request)
}
// DomesticPaymentsAPIRouter defines the required methods for binding the api requests to a responses for the DomesticPaymentsAPI
// The DomesticPaymentsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a DomesticPaymentsAPIServicer to perform the required actions, then write the service results to the http response.
type DomesticPaymentsAPIRouter interface { 
	PaymentsDomesticCreditTransfersPost(http.ResponseWriter, *http.Request)
}
// DomesticPaymentsConsentAPIRouter defines the required methods for binding the api requests to a responses for the DomesticPaymentsConsentAPI
// The DomesticPaymentsConsentAPIRouter implementation should parse necessary information from the http request,
// pass the data to a DomesticPaymentsConsentAPIServicer to perform the required actions, then write the service results to the http response.
type DomesticPaymentsConsentAPIRouter interface { 
	PaymentsDomesticCreditTransfersConsentsPost(http.ResponseWriter, *http.Request)
}
// DomesticPaymentsStatusAPIRouter defines the required methods for binding the api requests to a responses for the DomesticPaymentsStatusAPI
// The DomesticPaymentsStatusAPIRouter implementation should parse necessary information from the http request,
// pass the data to a DomesticPaymentsStatusAPIServicer to perform the required actions, then write the service results to the http response.
type DomesticPaymentsStatusAPIRouter interface { 
	PaymentsDomesticCreditTransfersPaymentStatusPost(http.ResponseWriter, *http.Request)
}
// HealthAPIRouter defines the required methods for binding the api requests to a responses for the HealthAPI
// The HealthAPIRouter implementation should parse necessary information from the http request,
// pass the data to a HealthAPIServicer to perform the required actions, then write the service results to the http response.
type HealthAPIRouter interface { 
	PaymentsHealthGet(http.ResponseWriter, *http.Request)
}
// PIConsentsRawAPIRouter defines the required methods for binding the api requests to a responses for the PIConsentsRawAPI
// The PIConsentsRawAPIRouter implementation should parse necessary information from the http request,
// pass the data to a PIConsentsRawAPIServicer to perform the required actions, then write the service results to the http response.
type PIConsentsRawAPIRouter interface { 
	PaymentsConsentsRawPost(http.ResponseWriter, *http.Request)
}
// SEPAPaymentsAPIRouter defines the required methods for binding the api requests to a responses for the SEPAPaymentsAPI
// The SEPAPaymentsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a SEPAPaymentsAPIServicer to perform the required actions, then write the service results to the http response.
type SEPAPaymentsAPIRouter interface { 
	PaymentsSepaCreditTransfersPost(http.ResponseWriter, *http.Request)
}
// SEPAPaymentsConsentAPIRouter defines the required methods for binding the api requests to a responses for the SEPAPaymentsConsentAPI
// The SEPAPaymentsConsentAPIRouter implementation should parse necessary information from the http request,
// pass the data to a SEPAPaymentsConsentAPIServicer to perform the required actions, then write the service results to the http response.
type SEPAPaymentsConsentAPIRouter interface { 
	PaymentsSepaCreditTransfersConsentsPost(http.ResponseWriter, *http.Request)
}
// SEPAPaymentsStatusAPIRouter defines the required methods for binding the api requests to a responses for the SEPAPaymentsStatusAPI
// The SEPAPaymentsStatusAPIRouter implementation should parse necessary information from the http request,
// pass the data to a SEPAPaymentsStatusAPIServicer to perform the required actions, then write the service results to the http response.
type SEPAPaymentsStatusAPIRouter interface { 
	PaymentsSepaCreditTransfersPaymentStatusPost(http.ResponseWriter, *http.Request)
}


// ASPSPsAPIServicer defines the api actions for the ASPSPsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ASPSPsAPIServicer interface { 
	PaymentsAspspsPost(context.Context, PostAspspsParamsBody) (ImplResponse, error)
}


// CrossBorderPaymentsAPIServicer defines the api actions for the CrossBorderPaymentsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type CrossBorderPaymentsAPIServicer interface { 
	PaymentsCrossBorderCreditTransfersPost(context.Context, PostPaymentsCrossBorderCreditTransfersParamsBody) (ImplResponse, error)
}


// CrossBorderPaymentsConsentAPIServicer defines the api actions for the CrossBorderPaymentsConsentAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type CrossBorderPaymentsConsentAPIServicer interface { 
	PaymentsCrossBorderCreditTransfersConsentsPost(context.Context, PostPaymentsCrossBorderCreditTransfersConsentsParamsBody) (ImplResponse, error)
}


// CrossBorderPaymentsStatusAPIServicer defines the api actions for the CrossBorderPaymentsStatusAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type CrossBorderPaymentsStatusAPIServicer interface { 
	PaymentsCrossBorderCreditTransfersPaymentStatusPost(context.Context, PostPaymentsCrossBorderCreditTransfersPaymentStatusParamsBody) (ImplResponse, error)
}


// DomesticPaymentsAPIServicer defines the api actions for the DomesticPaymentsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type DomesticPaymentsAPIServicer interface { 
	PaymentsDomesticCreditTransfersPost(context.Context, PostPaymentsDomesticCreditTransfersParamsBody) (ImplResponse, error)
}


// DomesticPaymentsConsentAPIServicer defines the api actions for the DomesticPaymentsConsentAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type DomesticPaymentsConsentAPIServicer interface { 
	PaymentsDomesticCreditTransfersConsentsPost(context.Context, PostPaymentsDomesticCreditTransfersConsentsParamsBody) (ImplResponse, error)
}


// DomesticPaymentsStatusAPIServicer defines the api actions for the DomesticPaymentsStatusAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type DomesticPaymentsStatusAPIServicer interface { 
	PaymentsDomesticCreditTransfersPaymentStatusPost(context.Context, PostPaymentsDomesticCreditTransfersPaymentStatusParamsBody) (ImplResponse, error)
}


// HealthAPIServicer defines the api actions for the HealthAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type HealthAPIServicer interface { 
	PaymentsHealthGet(context.Context) (ImplResponse, error)
}


// PIConsentsRawAPIServicer defines the api actions for the PIConsentsRawAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type PIConsentsRawAPIServicer interface { 
	PaymentsConsentsRawPost(context.Context, PostPaymentsConsentsRawParamsBody) (ImplResponse, error)
}


// SEPAPaymentsAPIServicer defines the api actions for the SEPAPaymentsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type SEPAPaymentsAPIServicer interface { 
	PaymentsSepaCreditTransfersPost(context.Context, PostPaymentsSepaCreditTransfersParamsBody) (ImplResponse, error)
}


// SEPAPaymentsConsentAPIServicer defines the api actions for the SEPAPaymentsConsentAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type SEPAPaymentsConsentAPIServicer interface { 
	PaymentsSepaCreditTransfersConsentsPost(context.Context, PostPaymentsSepaCreditTransfersConsentsParamsBody) (ImplResponse, error)
}


// SEPAPaymentsStatusAPIServicer defines the api actions for the SEPAPaymentsStatusAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type SEPAPaymentsStatusAPIServicer interface { 
	PaymentsSepaCreditTransfersPaymentStatusPost(context.Context, PostPaymentsSepaCreditTransfersPaymentStatusParamsBody) (ImplResponse, error)
}
