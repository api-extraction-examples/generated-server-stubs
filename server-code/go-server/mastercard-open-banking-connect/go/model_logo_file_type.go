/*
 * Open Banking - Payments initiation service
 *
 * Open Banking - Payments initiation service
 *
 * API version: 1.16.0
 * Contact: apisupport@mastercard.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"fmt"
)


// LogoFileType : Type of the uploaded Logo file
type LogoFileType string

// List of LogoFileType
const (
	PNG LogoFileType = "png"
	JPG LogoFileType = "jpg"
	SVG LogoFileType = "svg"
)

// AllowedLogoFileTypeEnumValues is all the allowed values of LogoFileType enum
var AllowedLogoFileTypeEnumValues = []LogoFileType{
	"png",
	"jpg",
	"svg",
}

// validLogoFileTypeEnumValue provides a map of LogoFileTypes for fast verification of use input
var validLogoFileTypeEnumValues = map[LogoFileType]struct{}{
	"png": {},
	"jpg": {},
	"svg": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v LogoFileType) IsValid() bool {
	_, ok := validLogoFileTypeEnumValues[v]
	return ok
}

// NewLogoFileTypeFromValue returns a pointer to a valid LogoFileType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewLogoFileTypeFromValue(v string) (LogoFileType, error) {
	ev := LogoFileType(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for LogoFileType: valid values are %v", v, AllowedLogoFileTypeEnumValues)
	}
}



// AssertLogoFileTypeRequired checks if the required fields are not zero-ed
func AssertLogoFileTypeRequired(obj LogoFileType) error {
	return nil
}

// AssertLogoFileTypeConstraints checks if the values respects the defined constraints
func AssertLogoFileTypeConstraints(obj LogoFileType) error {
	return nil
}
