/*
 * Account API
 *
 * The <b>Account API</b> gives sellers the ability to configure their eBay seller accounts, including the seller's policies (eBay business policies and seller-defined custom policies), opt in and out of eBay seller programs, configure sales tax tables, and get account information.  <br/><br/>For details on the availability of the methods in this API, see <a href=\"/api-docs/sell/account/overview.html#requirements\">Account API requirements and restrictions</a>.
 *
 * API version: v1.9.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi




// Subscription - This type is used by the <strong>getSubscription</strong> response container, which defines the subscription types and levels for the seller account.
type Subscription struct {

	// The marketplace with which the subscription is associated. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/ba:MarketplaceIdEnum'>eBay API documentation</a>
	MarketplaceId string `json:"marketplaceId,omitempty"`

	// The subscription ID.
	SubscriptionId string `json:"subscriptionId,omitempty"`

	// The subscription level. For example, subscription levels for an eBay store include Starter, Basic, Featured, Anchor, and Enterprise levels.
	SubscriptionLevel string `json:"subscriptionLevel,omitempty"`

	// The kind of entity with which the subscription is associated, such as an eBay store. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:SubscriptionTypeEnum'>eBay API documentation</a>
	SubscriptionType string `json:"subscriptionType,omitempty"`

	Term TimeDuration `json:"term,omitempty"`
}

// AssertSubscriptionRequired checks if the required fields are not zero-ed
func AssertSubscriptionRequired(obj Subscription) error {
	if err := AssertTimeDurationRequired(obj.Term); err != nil {
		return err
	}
	return nil
}

// AssertSubscriptionConstraints checks if the values respects the defined constraints
func AssertSubscriptionConstraints(obj Subscription) error {
	return nil
}
