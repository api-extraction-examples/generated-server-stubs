/*
 * Account API
 *
 * The <b>Account API</b> gives sellers the ability to configure their eBay seller accounts, including the seller's policies (eBay business policies and seller-defined custom policies), opt in and out of eBay seller programs, configure sales tax tables, and get account information.  <br/><br/>For details on the availability of the methods in this API, see <a href=\"/api-docs/sell/account/overview.html#requirements\">Account API requirements and restrictions</a>.
 *
 * API version: v1.9.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package main

import (
	"log"
	"net/http"

	openapi "github.com/GIT_USER_ID/GIT_REPO_ID/go"
)

func main() {
	log.Printf("Server started")

	AdvertisingEligibilityAPIService := openapi.NewAdvertisingEligibilityAPIService()
	AdvertisingEligibilityAPIController := openapi.NewAdvertisingEligibilityAPIController(AdvertisingEligibilityAPIService)

	CustomPolicyAPIService := openapi.NewCustomPolicyAPIService()
	CustomPolicyAPIController := openapi.NewCustomPolicyAPIController(CustomPolicyAPIService)

	FulfillmentPolicyAPIService := openapi.NewFulfillmentPolicyAPIService()
	FulfillmentPolicyAPIController := openapi.NewFulfillmentPolicyAPIController(FulfillmentPolicyAPIService)

	KycAPIService := openapi.NewKycAPIService()
	KycAPIController := openapi.NewKycAPIController(KycAPIService)

	OnboardingAPIService := openapi.NewOnboardingAPIService()
	OnboardingAPIController := openapi.NewOnboardingAPIController(OnboardingAPIService)

	PaymentPolicyAPIService := openapi.NewPaymentPolicyAPIService()
	PaymentPolicyAPIController := openapi.NewPaymentPolicyAPIController(PaymentPolicyAPIService)

	PaymentsProgramAPIService := openapi.NewPaymentsProgramAPIService()
	PaymentsProgramAPIController := openapi.NewPaymentsProgramAPIController(PaymentsProgramAPIService)

	PrivilegeAPIService := openapi.NewPrivilegeAPIService()
	PrivilegeAPIController := openapi.NewPrivilegeAPIController(PrivilegeAPIService)

	ProgramAPIService := openapi.NewProgramAPIService()
	ProgramAPIController := openapi.NewProgramAPIController(ProgramAPIService)

	RateTableAPIService := openapi.NewRateTableAPIService()
	RateTableAPIController := openapi.NewRateTableAPIController(RateTableAPIService)

	ReturnPolicyAPIService := openapi.NewReturnPolicyAPIService()
	ReturnPolicyAPIController := openapi.NewReturnPolicyAPIController(ReturnPolicyAPIService)

	SalesTaxAPIService := openapi.NewSalesTaxAPIService()
	SalesTaxAPIController := openapi.NewSalesTaxAPIController(SalesTaxAPIService)

	SubscriptionAPIService := openapi.NewSubscriptionAPIService()
	SubscriptionAPIController := openapi.NewSubscriptionAPIController(SubscriptionAPIService)

	router := openapi.NewRouter(AdvertisingEligibilityAPIController, CustomPolicyAPIController, FulfillmentPolicyAPIController, KycAPIController, OnboardingAPIController, PaymentPolicyAPIController, PaymentsProgramAPIController, PrivilegeAPIController, ProgramAPIController, RateTableAPIController, ReturnPolicyAPIController, SalesTaxAPIController, SubscriptionAPIController)

	log.Fatal(http.ListenAndServe(":8080", router))
}
