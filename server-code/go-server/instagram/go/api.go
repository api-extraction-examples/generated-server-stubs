/*
 * Instagram API
 *
 * Description of Instagram RESTful API.  Current limitations:   * Instagram service does not support [cross origin headers](https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS)   for security reasons, therefore it is not possible to use Swagger UI and make API calls directly from browser.   * Modification API requests (`POST`, `DELETE`) require additional security [scopes](https://instagram.com/developer/authorization/)   that are available for Apps [created on or after Nov 17, 2015](http://instagram.com/developer/review/) and   started in [Sandbox Mode](http://instagram.com/developer/sandbox/).   * Consider the [Instagram limitations](https://instagram.com/developer/limits/) for API calls that depends on App Mode.  **Warning:** For Apps [created on or after Nov 17, 2015](http://instagram.com/developer/changelog/) API responses containing media objects no longer return the `data` field in `comments` and `likes` nodes.  Last update: 2015-11-28 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
)



// CommentsAPIRouter defines the required methods for binding the api requests to a responses for the CommentsAPI
// The CommentsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a CommentsAPIServicer to perform the required actions, then write the service results to the http response.
type CommentsAPIRouter interface { 
	MediaMediaIdCommentsCommentIdDelete(http.ResponseWriter, *http.Request)
	MediaMediaIdCommentsGet(http.ResponseWriter, *http.Request)
	MediaMediaIdCommentsPost(http.ResponseWriter, *http.Request)
}
// GeographiesAPIRouter defines the required methods for binding the api requests to a responses for the GeographiesAPI
// The GeographiesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a GeographiesAPIServicer to perform the required actions, then write the service results to the http response.
type GeographiesAPIRouter interface { 
	// Deprecated
	GeographiesGeoIdMediaRecentGet(http.ResponseWriter, *http.Request)
}
// LikesAPIRouter defines the required methods for binding the api requests to a responses for the LikesAPI
// The LikesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a LikesAPIServicer to perform the required actions, then write the service results to the http response.
type LikesAPIRouter interface { 
	MediaMediaIdLikesDelete(http.ResponseWriter, *http.Request)
	MediaMediaIdLikesGet(http.ResponseWriter, *http.Request)
	MediaMediaIdLikesPost(http.ResponseWriter, *http.Request)
}
// LocationsAPIRouter defines the required methods for binding the api requests to a responses for the LocationsAPI
// The LocationsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a LocationsAPIServicer to perform the required actions, then write the service results to the http response.
type LocationsAPIRouter interface { 
	LocationsLocationIdGet(http.ResponseWriter, *http.Request)
	LocationsLocationIdMediaRecentGet(http.ResponseWriter, *http.Request)
	LocationsSearchGet(http.ResponseWriter, *http.Request)
}
// MediaAPIRouter defines the required methods for binding the api requests to a responses for the MediaAPI
// The MediaAPIRouter implementation should parse necessary information from the http request,
// pass the data to a MediaAPIServicer to perform the required actions, then write the service results to the http response.
type MediaAPIRouter interface { 
	MediaMediaIdGet(http.ResponseWriter, *http.Request)
	// Deprecated
	MediaPopularGet(http.ResponseWriter, *http.Request)
	MediaSearchGet(http.ResponseWriter, *http.Request)
	MediaShortcodeShortcodeGet(http.ResponseWriter, *http.Request)
}
// RelationshipsAPIRouter defines the required methods for binding the api requests to a responses for the RelationshipsAPI
// The RelationshipsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a RelationshipsAPIServicer to perform the required actions, then write the service results to the http response.
type RelationshipsAPIRouter interface { 
	UsersSelfRequestedByGet(http.ResponseWriter, *http.Request)
	UsersUserIdFollowedByGet(http.ResponseWriter, *http.Request)
	UsersUserIdFollowsGet(http.ResponseWriter, *http.Request)
	UsersUserIdRelationshipGet(http.ResponseWriter, *http.Request)
	UsersUserIdRelationshipPost(http.ResponseWriter, *http.Request)
}
// TagsAPIRouter defines the required methods for binding the api requests to a responses for the TagsAPI
// The TagsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a TagsAPIServicer to perform the required actions, then write the service results to the http response.
type TagsAPIRouter interface { 
	TagsSearchGet(http.ResponseWriter, *http.Request)
	TagsTagNameGet(http.ResponseWriter, *http.Request)
	TagsTagNameMediaRecentGet(http.ResponseWriter, *http.Request)
}
// UsersAPIRouter defines the required methods for binding the api requests to a responses for the UsersAPI
// The UsersAPIRouter implementation should parse necessary information from the http request,
// pass the data to a UsersAPIServicer to perform the required actions, then write the service results to the http response.
type UsersAPIRouter interface { 
	UsersSearchGet(http.ResponseWriter, *http.Request)
	// Deprecated
	UsersSelfFeedGet(http.ResponseWriter, *http.Request)
	UsersSelfMediaLikedGet(http.ResponseWriter, *http.Request)
	UsersUserIdGet(http.ResponseWriter, *http.Request)
	UsersUserIdMediaRecentGet(http.ResponseWriter, *http.Request)
}


// CommentsAPIServicer defines the api actions for the CommentsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type CommentsAPIServicer interface { 
	MediaMediaIdCommentsCommentIdDelete(context.Context, string, string) (ImplResponse, error)
	MediaMediaIdCommentsGet(context.Context, string) (ImplResponse, error)
	MediaMediaIdCommentsPost(context.Context, string, string) (ImplResponse, error)
}


// GeographiesAPIServicer defines the api actions for the GeographiesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type GeographiesAPIServicer interface { 
	// Deprecated
	GeographiesGeoIdMediaRecentGet(context.Context, string, int32, string) (ImplResponse, error)
}


// LikesAPIServicer defines the api actions for the LikesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type LikesAPIServicer interface { 
	MediaMediaIdLikesDelete(context.Context, string) (ImplResponse, error)
	MediaMediaIdLikesGet(context.Context, string) (ImplResponse, error)
	MediaMediaIdLikesPost(context.Context, string) (ImplResponse, error)
}


// LocationsAPIServicer defines the api actions for the LocationsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type LocationsAPIServicer interface { 
	LocationsLocationIdGet(context.Context, string) (ImplResponse, error)
	LocationsLocationIdMediaRecentGet(context.Context, string, int64, int64, string, string) (ImplResponse, error)
	LocationsSearchGet(context.Context, int32, string, string, float64, float64, string) (ImplResponse, error)
}


// MediaAPIServicer defines the api actions for the MediaAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type MediaAPIServicer interface { 
	MediaMediaIdGet(context.Context, string) (ImplResponse, error)
	// Deprecated
	MediaPopularGet(context.Context) (ImplResponse, error)
	MediaSearchGet(context.Context, float64, float64, int64, int64, int32) (ImplResponse, error)
	MediaShortcodeShortcodeGet(context.Context, string) (ImplResponse, error)
}


// RelationshipsAPIServicer defines the api actions for the RelationshipsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type RelationshipsAPIServicer interface { 
	UsersSelfRequestedByGet(context.Context) (ImplResponse, error)
	UsersUserIdFollowedByGet(context.Context, string) (ImplResponse, error)
	UsersUserIdFollowsGet(context.Context, string) (ImplResponse, error)
	UsersUserIdRelationshipGet(context.Context, string) (ImplResponse, error)
	UsersUserIdRelationshipPost(context.Context, string, string) (ImplResponse, error)
}


// TagsAPIServicer defines the api actions for the TagsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type TagsAPIServicer interface { 
	TagsSearchGet(context.Context, string) (ImplResponse, error)
	TagsTagNameGet(context.Context, string) (ImplResponse, error)
	TagsTagNameMediaRecentGet(context.Context, string, int32, string, string) (ImplResponse, error)
}


// UsersAPIServicer defines the api actions for the UsersAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type UsersAPIServicer interface { 
	UsersSearchGet(context.Context, string, int32) (ImplResponse, error)
	// Deprecated
	UsersSelfFeedGet(context.Context, int32, string, string) (ImplResponse, error)
	UsersSelfMediaLikedGet(context.Context, int32, string) (ImplResponse, error)
	UsersUserIdGet(context.Context, string) (ImplResponse, error)
	UsersUserIdMediaRecentGet(context.Context, string, int32, int64, int64, string, string) (ImplResponse, error)
}
