/*
 * Asana
 *
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"time"
)



type StatusUpdateResponse struct {

	// Globally unique identifier of the resource, as a string.
	Gid string `json:"gid,omitempty"`

	// The base type of this resource.
	ResourceType string `json:"resource_type,omitempty"`

	// The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning. The `resource_subtype`s for `status` objects represent the type of their parent.
	ResourceSubtype string `json:"resource_subtype,omitempty"`

	// The title of the status update.
	Title string `json:"title,omitempty"`

	// [Opt In](/docs/input-output-options). The text content of the status update with formatting as HTML.
	HtmlText string `json:"html_text,omitempty"`

	// The type associated with the status update. This represents the current state of the object this object is on.
	StatusType string `json:"status_type"`

	// The text content of the status update.
	Text string `json:"text"`

	Author UserCompact `json:"author,omitempty"`

	// The time at which this resource was created.
	CreatedAt time.Time `json:"created_at,omitempty"`

	CreatedBy UserCompact `json:"created_by,omitempty"`

	// *Deprecated - please use liked instead* True if the status is hearted by the authorized user, false if not.
	Hearted bool `json:"hearted,omitempty"`

	// *Deprecated - please use likes instead* Array of likes for users who have hearted this status.
	Hearts []Like `json:"hearts,omitempty"`

	// True if the status is liked by the authorized user, false if not.
	Liked bool `json:"liked,omitempty"`

	// Array of likes for users who have liked this status.
	Likes []Like `json:"likes,omitempty"`

	// The time at which this project status was last modified. *Note: This does not currently reflect any changes in associations such as comments that may have been added or removed from the status.*
	ModifiedAt time.Time `json:"modified_at,omitempty"`

	// *Deprecated - please use likes instead* The number of users who have hearted this status.
	NumHearts int32 `json:"num_hearts,omitempty"`

	// The number of users who have liked this status.
	NumLikes int32 `json:"num_likes,omitempty"`

	Parent StatusUpdateResponseAllOfParent `json:"parent,omitempty"`
}

// AssertStatusUpdateResponseRequired checks if the required fields are not zero-ed
func AssertStatusUpdateResponseRequired(obj StatusUpdateResponse) error {
	elements := map[string]interface{}{
		"status_type": obj.StatusType,
		"text": obj.Text,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertUserCompactRequired(obj.Author); err != nil {
		return err
	}
	if err := AssertUserCompactRequired(obj.CreatedBy); err != nil {
		return err
	}
	for _, el := range obj.Hearts {
		if err := AssertLikeRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Likes {
		if err := AssertLikeRequired(el); err != nil {
			return err
		}
	}
	if err := AssertStatusUpdateResponseAllOfParentRequired(obj.Parent); err != nil {
		return err
	}
	return nil
}

// AssertStatusUpdateResponseConstraints checks if the values respects the defined constraints
func AssertStatusUpdateResponseConstraints(obj StatusUpdateResponse) error {
	return nil
}
