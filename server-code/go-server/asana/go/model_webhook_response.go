/*
 * Asana
 *
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"time"
)



type WebhookResponse struct {

	// Globally unique identifier of the resource, as a string.
	Gid string `json:"gid,omitempty"`

	// The base type of this resource.
	ResourceType string `json:"resource_type,omitempty"`

	// If true, the webhook will send events - if false it is considered inactive and will not generate events.
	Active bool `json:"active,omitempty"`

	Resource AsanaNamedResource `json:"resource,omitempty"`

	// The URL to receive the HTTP POST.
	Target string `json:"target,omitempty"`

	// The time at which this resource was created.
	CreatedAt time.Time `json:"created_at,omitempty"`

	// Whitelist of filters to apply to events from this webhook. If a webhook event passes any of the filters the event will be delivered; otherwise no event will be sent to the receiving server.
	Filters []WebhookResponseAllOfFilters `json:"filters,omitempty"`

	// The timestamp when the webhook last received an error when sending an event to the target.
	LastFailureAt time.Time `json:"last_failure_at,omitempty"`

	// The contents of the last error response sent to the webhook when attempting to deliver events to the target.
	LastFailureContent string `json:"last_failure_content,omitempty"`

	// The timestamp when the webhook last successfully sent an event to the target.
	LastSuccessAt time.Time `json:"last_success_at,omitempty"`
}

// AssertWebhookResponseRequired checks if the required fields are not zero-ed
func AssertWebhookResponseRequired(obj WebhookResponse) error {
	if err := AssertAsanaNamedResourceRequired(obj.Resource); err != nil {
		return err
	}
	for _, el := range obj.Filters {
		if err := AssertWebhookResponseAllOfFiltersRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertWebhookResponseConstraints checks if the values respects the defined constraints
func AssertWebhookResponseConstraints(obj WebhookResponse) error {
	return nil
}
