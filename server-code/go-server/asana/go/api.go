/*
 * Asana
 *
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"os"
	"time"
	"reflect"
	"time"
	"time"
)



// AttachmentsAPIRouter defines the required methods for binding the api requests to a responses for the AttachmentsAPI
// The AttachmentsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AttachmentsAPIServicer to perform the required actions, then write the service results to the http response.
type AttachmentsAPIRouter interface { 
	CreateAttachmentForObject(http.ResponseWriter, *http.Request)
	DeleteAttachment(http.ResponseWriter, *http.Request)
	GetAttachment(http.ResponseWriter, *http.Request)
	GetAttachmentsForObject(http.ResponseWriter, *http.Request)
}
// AuditLogAPIAPIRouter defines the required methods for binding the api requests to a responses for the AuditLogAPIAPI
// The AuditLogAPIAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AuditLogAPIAPIServicer to perform the required actions, then write the service results to the http response.
type AuditLogAPIAPIRouter interface { 
	GetAuditLogEvents(http.ResponseWriter, *http.Request)
}
// BatchAPIAPIRouter defines the required methods for binding the api requests to a responses for the BatchAPIAPI
// The BatchAPIAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BatchAPIAPIServicer to perform the required actions, then write the service results to the http response.
type BatchAPIAPIRouter interface { 
	CreateBatchRequest(http.ResponseWriter, *http.Request)
}
// CustomFieldSettingsAPIRouter defines the required methods for binding the api requests to a responses for the CustomFieldSettingsAPI
// The CustomFieldSettingsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a CustomFieldSettingsAPIServicer to perform the required actions, then write the service results to the http response.
type CustomFieldSettingsAPIRouter interface { 
	GetCustomFieldSettingsForPortfolio(http.ResponseWriter, *http.Request)
	GetCustomFieldSettingsForProject(http.ResponseWriter, *http.Request)
}
// CustomFieldsAPIRouter defines the required methods for binding the api requests to a responses for the CustomFieldsAPI
// The CustomFieldsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a CustomFieldsAPIServicer to perform the required actions, then write the service results to the http response.
type CustomFieldsAPIRouter interface { 
	CreateCustomField(http.ResponseWriter, *http.Request)
	CreateEnumOptionForCustomField(http.ResponseWriter, *http.Request)
	DeleteCustomField(http.ResponseWriter, *http.Request)
	GetCustomField(http.ResponseWriter, *http.Request)
	GetCustomFieldsForWorkspace(http.ResponseWriter, *http.Request)
	InsertEnumOptionForCustomField(http.ResponseWriter, *http.Request)
	UpdateCustomField(http.ResponseWriter, *http.Request)
	UpdateEnumOption(http.ResponseWriter, *http.Request)
}
// EventsAPIRouter defines the required methods for binding the api requests to a responses for the EventsAPI
// The EventsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a EventsAPIServicer to perform the required actions, then write the service results to the http response.
type EventsAPIRouter interface { 
	GetEvents(http.ResponseWriter, *http.Request)
}
// GoalRelationshipsAPIRouter defines the required methods for binding the api requests to a responses for the GoalRelationshipsAPI
// The GoalRelationshipsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a GoalRelationshipsAPIServicer to perform the required actions, then write the service results to the http response.
type GoalRelationshipsAPIRouter interface { 
	AddSupportingRelationship(http.ResponseWriter, *http.Request)
	GetGoalRelationship(http.ResponseWriter, *http.Request)
	GetGoalRelationships(http.ResponseWriter, *http.Request)
	RemoveSupportingRelationship(http.ResponseWriter, *http.Request)
	UpdateGoalRelationship(http.ResponseWriter, *http.Request)
}
// GoalsAPIRouter defines the required methods for binding the api requests to a responses for the GoalsAPI
// The GoalsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a GoalsAPIServicer to perform the required actions, then write the service results to the http response.
type GoalsAPIRouter interface { 
	AddFollowers(http.ResponseWriter, *http.Request)
	CreateGoal(http.ResponseWriter, *http.Request)
	CreateGoalMetric(http.ResponseWriter, *http.Request)
	DeleteGoal(http.ResponseWriter, *http.Request)
	GetGoal(http.ResponseWriter, *http.Request)
	GetGoals(http.ResponseWriter, *http.Request)
	GetParentGoalsForGoal(http.ResponseWriter, *http.Request)
	RemoveFollowers(http.ResponseWriter, *http.Request)
	UpdateGoal(http.ResponseWriter, *http.Request)
	UpdateGoalMetric(http.ResponseWriter, *http.Request)
}
// JobsAPIRouter defines the required methods for binding the api requests to a responses for the JobsAPI
// The JobsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a JobsAPIServicer to perform the required actions, then write the service results to the http response.
type JobsAPIRouter interface { 
	GetJob(http.ResponseWriter, *http.Request)
}
// OrganizationExportsAPIRouter defines the required methods for binding the api requests to a responses for the OrganizationExportsAPI
// The OrganizationExportsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a OrganizationExportsAPIServicer to perform the required actions, then write the service results to the http response.
type OrganizationExportsAPIRouter interface { 
	CreateOrganizationExport(http.ResponseWriter, *http.Request)
	GetOrganizationExport(http.ResponseWriter, *http.Request)
}
// PortfolioMembershipsAPIRouter defines the required methods for binding the api requests to a responses for the PortfolioMembershipsAPI
// The PortfolioMembershipsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a PortfolioMembershipsAPIServicer to perform the required actions, then write the service results to the http response.
type PortfolioMembershipsAPIRouter interface { 
	GetPortfolioMembership(http.ResponseWriter, *http.Request)
	GetPortfolioMemberships(http.ResponseWriter, *http.Request)
	GetPortfolioMembershipsForPortfolio(http.ResponseWriter, *http.Request)
}
// PortfoliosAPIRouter defines the required methods for binding the api requests to a responses for the PortfoliosAPI
// The PortfoliosAPIRouter implementation should parse necessary information from the http request,
// pass the data to a PortfoliosAPIServicer to perform the required actions, then write the service results to the http response.
type PortfoliosAPIRouter interface { 
	AddCustomFieldSettingForPortfolio(http.ResponseWriter, *http.Request)
	AddItemForPortfolio(http.ResponseWriter, *http.Request)
	AddMembersForPortfolio(http.ResponseWriter, *http.Request)
	CreatePortfolio(http.ResponseWriter, *http.Request)
	DeletePortfolio(http.ResponseWriter, *http.Request)
	GetItemsForPortfolio(http.ResponseWriter, *http.Request)
	GetPortfolio(http.ResponseWriter, *http.Request)
	GetPortfolios(http.ResponseWriter, *http.Request)
	RemoveCustomFieldSettingForPortfolio(http.ResponseWriter, *http.Request)
	RemoveItemForPortfolio(http.ResponseWriter, *http.Request)
	RemoveMembersForPortfolio(http.ResponseWriter, *http.Request)
	UpdatePortfolio(http.ResponseWriter, *http.Request)
}
// ProjectBriefsAPIRouter defines the required methods for binding the api requests to a responses for the ProjectBriefsAPI
// The ProjectBriefsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ProjectBriefsAPIServicer to perform the required actions, then write the service results to the http response.
type ProjectBriefsAPIRouter interface { 
	CreateProjectBrief(http.ResponseWriter, *http.Request)
	DeleteProjectBrief(http.ResponseWriter, *http.Request)
	GetProjectBrief(http.ResponseWriter, *http.Request)
	UpdateProjectBrief(http.ResponseWriter, *http.Request)
}
// ProjectMembershipsAPIRouter defines the required methods for binding the api requests to a responses for the ProjectMembershipsAPI
// The ProjectMembershipsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ProjectMembershipsAPIServicer to perform the required actions, then write the service results to the http response.
type ProjectMembershipsAPIRouter interface { 
	GetProjectMembership(http.ResponseWriter, *http.Request)
	GetProjectMembershipsForProject(http.ResponseWriter, *http.Request)
}
// ProjectStatusesAPIRouter defines the required methods for binding the api requests to a responses for the ProjectStatusesAPI
// The ProjectStatusesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ProjectStatusesAPIServicer to perform the required actions, then write the service results to the http response.
type ProjectStatusesAPIRouter interface { 
	CreateProjectStatusForProject(http.ResponseWriter, *http.Request)
	DeleteProjectStatus(http.ResponseWriter, *http.Request)
	GetProjectStatus(http.ResponseWriter, *http.Request)
	GetProjectStatusesForProject(http.ResponseWriter, *http.Request)
}
// ProjectTemplatesAPIRouter defines the required methods for binding the api requests to a responses for the ProjectTemplatesAPI
// The ProjectTemplatesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ProjectTemplatesAPIServicer to perform the required actions, then write the service results to the http response.
type ProjectTemplatesAPIRouter interface { 
	GetProjectTemplate(http.ResponseWriter, *http.Request)
	GetProjectTemplates(http.ResponseWriter, *http.Request)
	GetProjectTemplatesForTeam(http.ResponseWriter, *http.Request)
	InstantiateProject(http.ResponseWriter, *http.Request)
}
// ProjectsAPIRouter defines the required methods for binding the api requests to a responses for the ProjectsAPI
// The ProjectsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ProjectsAPIServicer to perform the required actions, then write the service results to the http response.
type ProjectsAPIRouter interface { 
	AddCustomFieldSettingForProject(http.ResponseWriter, *http.Request)
	AddFollowersForProject(http.ResponseWriter, *http.Request)
	AddMembersForProject(http.ResponseWriter, *http.Request)
	CreateProject(http.ResponseWriter, *http.Request)
	CreateProjectForTeam(http.ResponseWriter, *http.Request)
	CreateProjectForWorkspace(http.ResponseWriter, *http.Request)
	DeleteProject(http.ResponseWriter, *http.Request)
	DuplicateProject(http.ResponseWriter, *http.Request)
	GetProject(http.ResponseWriter, *http.Request)
	GetProjects(http.ResponseWriter, *http.Request)
	GetProjectsForTask(http.ResponseWriter, *http.Request)
	GetProjectsForTeam(http.ResponseWriter, *http.Request)
	GetProjectsForWorkspace(http.ResponseWriter, *http.Request)
	GetTaskCountsForProject(http.ResponseWriter, *http.Request)
	ProjectSaveAsTemplate(http.ResponseWriter, *http.Request)
	RemoveCustomFieldSettingForProject(http.ResponseWriter, *http.Request)
	RemoveFollowersForProject(http.ResponseWriter, *http.Request)
	RemoveMembersForProject(http.ResponseWriter, *http.Request)
	UpdateProject(http.ResponseWriter, *http.Request)
}
// SectionsAPIRouter defines the required methods for binding the api requests to a responses for the SectionsAPI
// The SectionsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a SectionsAPIServicer to perform the required actions, then write the service results to the http response.
type SectionsAPIRouter interface { 
	AddTaskForSection(http.ResponseWriter, *http.Request)
	CreateSectionForProject(http.ResponseWriter, *http.Request)
	DeleteSection(http.ResponseWriter, *http.Request)
	GetSection(http.ResponseWriter, *http.Request)
	GetSectionsForProject(http.ResponseWriter, *http.Request)
	InsertSectionForProject(http.ResponseWriter, *http.Request)
	UpdateSection(http.ResponseWriter, *http.Request)
}
// StatusUpdatesAPIRouter defines the required methods for binding the api requests to a responses for the StatusUpdatesAPI
// The StatusUpdatesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a StatusUpdatesAPIServicer to perform the required actions, then write the service results to the http response.
type StatusUpdatesAPIRouter interface { 
	CreateStatusForObject(http.ResponseWriter, *http.Request)
	DeleteStatus(http.ResponseWriter, *http.Request)
	GetStatus(http.ResponseWriter, *http.Request)
	GetStatusesForObject(http.ResponseWriter, *http.Request)
}
// StoriesAPIRouter defines the required methods for binding the api requests to a responses for the StoriesAPI
// The StoriesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a StoriesAPIServicer to perform the required actions, then write the service results to the http response.
type StoriesAPIRouter interface { 
	CreateStoryForTask(http.ResponseWriter, *http.Request)
	DeleteStory(http.ResponseWriter, *http.Request)
	GetStoriesForTask(http.ResponseWriter, *http.Request)
	GetStory(http.ResponseWriter, *http.Request)
	UpdateStory(http.ResponseWriter, *http.Request)
}
// TagsAPIRouter defines the required methods for binding the api requests to a responses for the TagsAPI
// The TagsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a TagsAPIServicer to perform the required actions, then write the service results to the http response.
type TagsAPIRouter interface { 
	CreateTag(http.ResponseWriter, *http.Request)
	CreateTagForWorkspace(http.ResponseWriter, *http.Request)
	DeleteTag(http.ResponseWriter, *http.Request)
	GetTag(http.ResponseWriter, *http.Request)
	GetTags(http.ResponseWriter, *http.Request)
	GetTagsForTask(http.ResponseWriter, *http.Request)
	GetTagsForWorkspace(http.ResponseWriter, *http.Request)
	UpdateTag(http.ResponseWriter, *http.Request)
}
// TasksAPIRouter defines the required methods for binding the api requests to a responses for the TasksAPI
// The TasksAPIRouter implementation should parse necessary information from the http request,
// pass the data to a TasksAPIServicer to perform the required actions, then write the service results to the http response.
type TasksAPIRouter interface { 
	AddDependenciesForTask(http.ResponseWriter, *http.Request)
	AddDependentsForTask(http.ResponseWriter, *http.Request)
	AddFollowersForTask(http.ResponseWriter, *http.Request)
	AddProjectForTask(http.ResponseWriter, *http.Request)
	AddTagForTask(http.ResponseWriter, *http.Request)
	CreateSubtaskForTask(http.ResponseWriter, *http.Request)
	CreateTask(http.ResponseWriter, *http.Request)
	DeleteTask(http.ResponseWriter, *http.Request)
	DuplicateTask(http.ResponseWriter, *http.Request)
	GetDependenciesForTask(http.ResponseWriter, *http.Request)
	GetDependentsForTask(http.ResponseWriter, *http.Request)
	GetSubtasksForTask(http.ResponseWriter, *http.Request)
	GetTask(http.ResponseWriter, *http.Request)
	GetTasks(http.ResponseWriter, *http.Request)
	GetTasksForProject(http.ResponseWriter, *http.Request)
	GetTasksForSection(http.ResponseWriter, *http.Request)
	GetTasksForTag(http.ResponseWriter, *http.Request)
	GetTasksForUserTaskList(http.ResponseWriter, *http.Request)
	RemoveDependenciesForTask(http.ResponseWriter, *http.Request)
	RemoveDependentsForTask(http.ResponseWriter, *http.Request)
	RemoveFollowerForTask(http.ResponseWriter, *http.Request)
	RemoveProjectForTask(http.ResponseWriter, *http.Request)
	RemoveTagForTask(http.ResponseWriter, *http.Request)
	SearchTasksForWorkspace(http.ResponseWriter, *http.Request)
	SetParentForTask(http.ResponseWriter, *http.Request)
	UpdateTask(http.ResponseWriter, *http.Request)
}
// TeamMembershipsAPIRouter defines the required methods for binding the api requests to a responses for the TeamMembershipsAPI
// The TeamMembershipsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a TeamMembershipsAPIServicer to perform the required actions, then write the service results to the http response.
type TeamMembershipsAPIRouter interface { 
	GetTeamMembership(http.ResponseWriter, *http.Request)
	GetTeamMemberships(http.ResponseWriter, *http.Request)
	GetTeamMembershipsForTeam(http.ResponseWriter, *http.Request)
	GetTeamMembershipsForUser(http.ResponseWriter, *http.Request)
}
// TeamsAPIRouter defines the required methods for binding the api requests to a responses for the TeamsAPI
// The TeamsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a TeamsAPIServicer to perform the required actions, then write the service results to the http response.
type TeamsAPIRouter interface { 
	AddUserForTeam(http.ResponseWriter, *http.Request)
	CreateTeam(http.ResponseWriter, *http.Request)
	GetTeam(http.ResponseWriter, *http.Request)
	GetTeamsForUser(http.ResponseWriter, *http.Request)
	GetTeamsForWorkspace(http.ResponseWriter, *http.Request)
	RemoveUserForTeam(http.ResponseWriter, *http.Request)
	UpdateTeam(http.ResponseWriter, *http.Request)
}
// TimePeriodsAPIRouter defines the required methods for binding the api requests to a responses for the TimePeriodsAPI
// The TimePeriodsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a TimePeriodsAPIServicer to perform the required actions, then write the service results to the http response.
type TimePeriodsAPIRouter interface { 
	GetTimePeriod(http.ResponseWriter, *http.Request)
	GetTimePeriods(http.ResponseWriter, *http.Request)
}
// TypeaheadAPIRouter defines the required methods for binding the api requests to a responses for the TypeaheadAPI
// The TypeaheadAPIRouter implementation should parse necessary information from the http request,
// pass the data to a TypeaheadAPIServicer to perform the required actions, then write the service results to the http response.
type TypeaheadAPIRouter interface { 
	TypeaheadForWorkspace(http.ResponseWriter, *http.Request)
}
// UserTaskListsAPIRouter defines the required methods for binding the api requests to a responses for the UserTaskListsAPI
// The UserTaskListsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a UserTaskListsAPIServicer to perform the required actions, then write the service results to the http response.
type UserTaskListsAPIRouter interface { 
	GetUserTaskList(http.ResponseWriter, *http.Request)
	GetUserTaskListForUser(http.ResponseWriter, *http.Request)
}
// UsersAPIRouter defines the required methods for binding the api requests to a responses for the UsersAPI
// The UsersAPIRouter implementation should parse necessary information from the http request,
// pass the data to a UsersAPIServicer to perform the required actions, then write the service results to the http response.
type UsersAPIRouter interface { 
	GetFavoritesForUser(http.ResponseWriter, *http.Request)
	GetUser(http.ResponseWriter, *http.Request)
	GetUsers(http.ResponseWriter, *http.Request)
	GetUsersForTeam(http.ResponseWriter, *http.Request)
	GetUsersForWorkspace(http.ResponseWriter, *http.Request)
}
// WebhooksAPIRouter defines the required methods for binding the api requests to a responses for the WebhooksAPI
// The WebhooksAPIRouter implementation should parse necessary information from the http request,
// pass the data to a WebhooksAPIServicer to perform the required actions, then write the service results to the http response.
type WebhooksAPIRouter interface { 
	CreateWebhook(http.ResponseWriter, *http.Request)
	DeleteWebhook(http.ResponseWriter, *http.Request)
	GetWebhook(http.ResponseWriter, *http.Request)
	GetWebhooks(http.ResponseWriter, *http.Request)
	UpdateWebhook(http.ResponseWriter, *http.Request)
}
// WorkspaceMembershipsAPIRouter defines the required methods for binding the api requests to a responses for the WorkspaceMembershipsAPI
// The WorkspaceMembershipsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a WorkspaceMembershipsAPIServicer to perform the required actions, then write the service results to the http response.
type WorkspaceMembershipsAPIRouter interface { 
	GetWorkspaceMembership(http.ResponseWriter, *http.Request)
	GetWorkspaceMembershipsForUser(http.ResponseWriter, *http.Request)
	GetWorkspaceMembershipsForWorkspace(http.ResponseWriter, *http.Request)
}
// WorkspacesAPIRouter defines the required methods for binding the api requests to a responses for the WorkspacesAPI
// The WorkspacesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a WorkspacesAPIServicer to perform the required actions, then write the service results to the http response.
type WorkspacesAPIRouter interface { 
	AddUserForWorkspace(http.ResponseWriter, *http.Request)
	GetWorkspace(http.ResponseWriter, *http.Request)
	GetWorkspaces(http.ResponseWriter, *http.Request)
	RemoveUserForWorkspace(http.ResponseWriter, *http.Request)
	UpdateWorkspace(http.ResponseWriter, *http.Request)
}


// AttachmentsAPIServicer defines the api actions for the AttachmentsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AttachmentsAPIServicer interface { 
	CreateAttachmentForObject(context.Context, bool, []string, bool, *os.File, string, string, string, string) (ImplResponse, error)
	DeleteAttachment(context.Context, string, bool, []string) (ImplResponse, error)
	GetAttachment(context.Context, string, bool, []string) (ImplResponse, error)
	GetAttachmentsForObject(context.Context, string, bool, []string, int32, string) (ImplResponse, error)
}


// AuditLogAPIAPIServicer defines the api actions for the AuditLogAPIAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AuditLogAPIAPIServicer interface { 
	GetAuditLogEvents(context.Context, string, time.Time, time.Time, string, string, string, string, int32, string) (ImplResponse, error)
}


// BatchAPIAPIServicer defines the api actions for the BatchAPIAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BatchAPIAPIServicer interface { 
	CreateBatchRequest(context.Context, CreateBatchRequestRequest, bool, []string) (ImplResponse, error)
}


// CustomFieldSettingsAPIServicer defines the api actions for the CustomFieldSettingsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type CustomFieldSettingsAPIServicer interface { 
	GetCustomFieldSettingsForPortfolio(context.Context, string, bool, []string, int32, string) (ImplResponse, error)
	GetCustomFieldSettingsForProject(context.Context, string, bool, []string, int32, string) (ImplResponse, error)
}


// CustomFieldsAPIServicer defines the api actions for the CustomFieldsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type CustomFieldsAPIServicer interface { 
	CreateCustomField(context.Context, bool, []string, int32, string, CreateCustomFieldRequest) (ImplResponse, error)
	CreateEnumOptionForCustomField(context.Context, string, bool, []string, int32, string, CreateEnumOptionForCustomFieldRequest) (ImplResponse, error)
	DeleteCustomField(context.Context, string, bool, []string) (ImplResponse, error)
	GetCustomField(context.Context, string, bool, []string) (ImplResponse, error)
	GetCustomFieldsForWorkspace(context.Context, string, bool, []string, int32, string) (ImplResponse, error)
	InsertEnumOptionForCustomField(context.Context, string, bool, []string, InsertEnumOptionForCustomFieldRequest) (ImplResponse, error)
	UpdateCustomField(context.Context, string, bool, []string, CreateCustomFieldRequest) (ImplResponse, error)
	UpdateEnumOption(context.Context, string, bool, []string, CreateEnumOptionForCustomFieldRequest) (ImplResponse, error)
}


// EventsAPIServicer defines the api actions for the EventsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type EventsAPIServicer interface { 
	GetEvents(context.Context, string, string, bool, []string) (ImplResponse, error)
}


// GoalRelationshipsAPIServicer defines the api actions for the GoalRelationshipsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type GoalRelationshipsAPIServicer interface { 
	AddSupportingRelationship(context.Context, string, AddSupportingRelationshipRequest, bool, []string) (ImplResponse, error)
	GetGoalRelationship(context.Context, string, bool, []string) (ImplResponse, error)
	GetGoalRelationships(context.Context, string, bool, []string, string) (ImplResponse, error)
	RemoveSupportingRelationship(context.Context, string, RemoveSupportingRelationshipRequest, bool, []string) (ImplResponse, error)
	UpdateGoalRelationship(context.Context, string, UpdateGoalRelationshipRequest, bool, []string) (ImplResponse, error)
}


// GoalsAPIServicer defines the api actions for the GoalsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type GoalsAPIServicer interface { 
	AddFollowers(context.Context, string, AddFollowersRequest, bool, []string) (ImplResponse, error)
	CreateGoal(context.Context, CreateGoalRequest, bool, []string, int32, string) (ImplResponse, error)
	CreateGoalMetric(context.Context, string, CreateGoalMetricRequest, bool, []string) (ImplResponse, error)
	DeleteGoal(context.Context, string, bool, []string) (ImplResponse, error)
	GetGoal(context.Context, string, bool, []string) (ImplResponse, error)
	GetGoals(context.Context, bool, []string, int32, string, string, string, bool, string, string, []string) (ImplResponse, error)
	GetParentGoalsForGoal(context.Context, string, bool, []string) (ImplResponse, error)
	RemoveFollowers(context.Context, string, AddFollowersRequest, bool, []string) (ImplResponse, error)
	UpdateGoal(context.Context, string, CreateGoalRequest, bool, []string) (ImplResponse, error)
	UpdateGoalMetric(context.Context, string, UpdateGoalMetricRequest, bool, []string) (ImplResponse, error)
}


// JobsAPIServicer defines the api actions for the JobsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type JobsAPIServicer interface { 
	GetJob(context.Context, string, bool, []string) (ImplResponse, error)
}


// OrganizationExportsAPIServicer defines the api actions for the OrganizationExportsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type OrganizationExportsAPIServicer interface { 
	CreateOrganizationExport(context.Context, CreateOrganizationExportRequest, bool, []string, int32, string) (ImplResponse, error)
	GetOrganizationExport(context.Context, string, bool, []string) (ImplResponse, error)
}


// PortfolioMembershipsAPIServicer defines the api actions for the PortfolioMembershipsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type PortfolioMembershipsAPIServicer interface { 
	GetPortfolioMembership(context.Context, string, bool, []string) (ImplResponse, error)
	GetPortfolioMemberships(context.Context, string, string, string, bool, []string, int32, string) (ImplResponse, error)
	GetPortfolioMembershipsForPortfolio(context.Context, string, string, bool, []string, int32, string) (ImplResponse, error)
}


// PortfoliosAPIServicer defines the api actions for the PortfoliosAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type PortfoliosAPIServicer interface { 
	AddCustomFieldSettingForPortfolio(context.Context, string, AddCustomFieldSettingForPortfolioRequest, bool) (ImplResponse, error)
	AddItemForPortfolio(context.Context, string, AddItemForPortfolioRequest, bool, []string) (ImplResponse, error)
	AddMembersForPortfolio(context.Context, string, AddMembersForPortfolioRequest, bool, []string) (ImplResponse, error)
	CreatePortfolio(context.Context, CreatePortfolioRequest, bool, []string) (ImplResponse, error)
	DeletePortfolio(context.Context, string, bool, []string) (ImplResponse, error)
	GetItemsForPortfolio(context.Context, string, bool, []string, int32, string) (ImplResponse, error)
	GetPortfolio(context.Context, string, bool, []string) (ImplResponse, error)
	GetPortfolios(context.Context, string, string, bool, []string, int32, string) (ImplResponse, error)
	RemoveCustomFieldSettingForPortfolio(context.Context, string, RemoveCustomFieldSettingForPortfolioRequest, bool) (ImplResponse, error)
	RemoveItemForPortfolio(context.Context, string, RemoveItemForPortfolioRequest, bool, []string) (ImplResponse, error)
	RemoveMembersForPortfolio(context.Context, string, RemoveMembersForPortfolioRequest, bool, []string) (ImplResponse, error)
	UpdatePortfolio(context.Context, string, CreatePortfolioRequest, bool, []string) (ImplResponse, error)
}


// ProjectBriefsAPIServicer defines the api actions for the ProjectBriefsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ProjectBriefsAPIServicer interface { 
	CreateProjectBrief(context.Context, string, UpdateProjectBriefRequest, bool, []string) (ImplResponse, error)
	DeleteProjectBrief(context.Context, string, bool, []string) (ImplResponse, error)
	GetProjectBrief(context.Context, string, bool, []string) (ImplResponse, error)
	UpdateProjectBrief(context.Context, string, UpdateProjectBriefRequest, bool, []string) (ImplResponse, error)
}


// ProjectMembershipsAPIServicer defines the api actions for the ProjectMembershipsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ProjectMembershipsAPIServicer interface { 
	GetProjectMembership(context.Context, string, bool, []string) (ImplResponse, error)
	GetProjectMembershipsForProject(context.Context, string, string, bool, []string, int32, string) (ImplResponse, error)
}


// ProjectStatusesAPIServicer defines the api actions for the ProjectStatusesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ProjectStatusesAPIServicer interface { 
	CreateProjectStatusForProject(context.Context, string, CreateProjectStatusForProjectRequest, bool, []string) (ImplResponse, error)
	DeleteProjectStatus(context.Context, string, bool, []string) (ImplResponse, error)
	GetProjectStatus(context.Context, string, bool, []string) (ImplResponse, error)
	GetProjectStatusesForProject(context.Context, string, bool, []string, int32, string) (ImplResponse, error)
}


// ProjectTemplatesAPIServicer defines the api actions for the ProjectTemplatesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ProjectTemplatesAPIServicer interface { 
	GetProjectTemplate(context.Context, string, bool, []string) (ImplResponse, error)
	GetProjectTemplates(context.Context, bool, []string, string, string, int32, string) (ImplResponse, error)
	GetProjectTemplatesForTeam(context.Context, string, bool, []string, int32, string) (ImplResponse, error)
	InstantiateProject(context.Context, string, bool, []string, InstantiateProjectRequest) (ImplResponse, error)
}


// ProjectsAPIServicer defines the api actions for the ProjectsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ProjectsAPIServicer interface { 
	AddCustomFieldSettingForProject(context.Context, string, AddCustomFieldSettingForPortfolioRequest, bool) (ImplResponse, error)
	AddFollowersForProject(context.Context, string, AddFollowersForProjectRequest, bool, []string) (ImplResponse, error)
	AddMembersForProject(context.Context, string, AddMembersForPortfolioRequest, bool, []string) (ImplResponse, error)
	CreateProject(context.Context, CreateProjectRequest, bool, []string) (ImplResponse, error)
	CreateProjectForTeam(context.Context, string, CreateProjectRequest, bool, []string) (ImplResponse, error)
	CreateProjectForWorkspace(context.Context, string, CreateProjectRequest, bool, []string) (ImplResponse, error)
	DeleteProject(context.Context, string, bool, []string) (ImplResponse, error)
	DuplicateProject(context.Context, string, bool, []string, DuplicateProjectRequest) (ImplResponse, error)
	GetProject(context.Context, string, bool, []string) (ImplResponse, error)
	GetProjects(context.Context, bool, []string, int32, string, string, string, bool) (ImplResponse, error)
	GetProjectsForTask(context.Context, string, bool, []string, int32, string) (ImplResponse, error)
	GetProjectsForTeam(context.Context, string, bool, []string, int32, string, bool) (ImplResponse, error)
	GetProjectsForWorkspace(context.Context, string, bool, []string, int32, string, bool) (ImplResponse, error)
	GetTaskCountsForProject(context.Context, string, bool, []string, int32, string) (ImplResponse, error)
	ProjectSaveAsTemplate(context.Context, string, ProjectSaveAsTemplateRequest, bool, []string) (ImplResponse, error)
	RemoveCustomFieldSettingForProject(context.Context, string, RemoveCustomFieldSettingForPortfolioRequest, bool) (ImplResponse, error)
	RemoveFollowersForProject(context.Context, string, RemoveFollowersForProjectRequest, bool, []string) (ImplResponse, error)
	RemoveMembersForProject(context.Context, string, RemoveMembersForPortfolioRequest, bool, []string) (ImplResponse, error)
	UpdateProject(context.Context, string, CreateProjectRequest, bool, []string) (ImplResponse, error)
}


// SectionsAPIServicer defines the api actions for the SectionsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type SectionsAPIServicer interface { 
	AddTaskForSection(context.Context, string, AddTaskForSectionRequest, bool, []string) (ImplResponse, error)
	CreateSectionForProject(context.Context, string, CreateSectionForProjectRequest, bool, []string) (ImplResponse, error)
	DeleteSection(context.Context, string, bool, []string) (ImplResponse, error)
	GetSection(context.Context, string, bool, []string) (ImplResponse, error)
	GetSectionsForProject(context.Context, string, bool, []string, int32, string) (ImplResponse, error)
	InsertSectionForProject(context.Context, string, InsertSectionForProjectRequest, bool, []string) (ImplResponse, error)
	UpdateSection(context.Context, string, CreateSectionForProjectRequest, bool, []string) (ImplResponse, error)
}


// StatusUpdatesAPIServicer defines the api actions for the StatusUpdatesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type StatusUpdatesAPIServicer interface { 
	CreateStatusForObject(context.Context, CreateStatusForObjectRequest, bool, []string, int32, string) (ImplResponse, error)
	DeleteStatus(context.Context, string, bool, []string) (ImplResponse, error)
	GetStatus(context.Context, string, bool, []string) (ImplResponse, error)
	GetStatusesForObject(context.Context, string, bool, []string, int32, string, time.Time) (ImplResponse, error)
}


// StoriesAPIServicer defines the api actions for the StoriesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type StoriesAPIServicer interface { 
	CreateStoryForTask(context.Context, string, UpdateStoryRequest, bool, []string) (ImplResponse, error)
	DeleteStory(context.Context, string, bool, []string) (ImplResponse, error)
	GetStoriesForTask(context.Context, string, bool, []string, int32, string) (ImplResponse, error)
	GetStory(context.Context, string, bool, []string, int32, string) (ImplResponse, error)
	UpdateStory(context.Context, string, UpdateStoryRequest, bool, []string) (ImplResponse, error)
}


// TagsAPIServicer defines the api actions for the TagsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type TagsAPIServicer interface { 
	CreateTag(context.Context, CreateTagRequest, bool, []string) (ImplResponse, error)
	CreateTagForWorkspace(context.Context, string, CreateTag201Response, bool, []string) (ImplResponse, error)
	DeleteTag(context.Context, string, bool, []string, int32, string) (ImplResponse, error)
	GetTag(context.Context, string, bool, []string, int32, string) (ImplResponse, error)
	GetTags(context.Context, bool, []string, int32, string, string) (ImplResponse, error)
	GetTagsForTask(context.Context, string, bool, []string, int32, string) (ImplResponse, error)
	GetTagsForWorkspace(context.Context, string, bool, []string, int32, string) (ImplResponse, error)
	UpdateTag(context.Context, string, bool, []string, int32, string) (ImplResponse, error)
}


// TasksAPIServicer defines the api actions for the TasksAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type TasksAPIServicer interface { 
	AddDependenciesForTask(context.Context, string, AddDependenciesForTaskRequest, bool, []string) (ImplResponse, error)
	AddDependentsForTask(context.Context, string, AddDependentsForTaskRequest, bool, []string) (ImplResponse, error)
	AddFollowersForTask(context.Context, string, AddFollowersRequest, bool, []string) (ImplResponse, error)
	AddProjectForTask(context.Context, string, AddProjectForTaskRequest, bool, []string) (ImplResponse, error)
	AddTagForTask(context.Context, string, AddTagForTaskRequest, bool, []string) (ImplResponse, error)
	CreateSubtaskForTask(context.Context, string, CreateTaskRequest, bool, []string) (ImplResponse, error)
	CreateTask(context.Context, CreateTaskRequest, bool, []string) (ImplResponse, error)
	DeleteTask(context.Context, string, bool, []string) (ImplResponse, error)
	DuplicateTask(context.Context, string, DuplicateTaskRequest, bool, []string) (ImplResponse, error)
	GetDependenciesForTask(context.Context, string, bool, []string, int32, string) (ImplResponse, error)
	GetDependentsForTask(context.Context, string, bool, []string, int32, string) (ImplResponse, error)
	GetSubtasksForTask(context.Context, string, bool, []string, int32, string) (ImplResponse, error)
	GetTask(context.Context, string, bool, []string) (ImplResponse, error)
	GetTasks(context.Context, bool, []string, int32, string, string, string, string, string, time.Time, time.Time) (ImplResponse, error)
	GetTasksForProject(context.Context, string, string, bool, []string, int32, string) (ImplResponse, error)
	GetTasksForSection(context.Context, string, bool, []string, int32, string) (ImplResponse, error)
	GetTasksForTag(context.Context, string, bool, []string, int32, string) (ImplResponse, error)
	GetTasksForUserTaskList(context.Context, string, string, bool, []string, int32, string) (ImplResponse, error)
	RemoveDependenciesForTask(context.Context, string, AddDependenciesForTaskRequest, bool, []string) (ImplResponse, error)
	RemoveDependentsForTask(context.Context, string, AddDependentsForTaskRequest, bool, []string) (ImplResponse, error)
	RemoveFollowerForTask(context.Context, string, RemoveFollowerForTaskRequest, bool, []string) (ImplResponse, error)
	RemoveProjectForTask(context.Context, string, RemoveProjectForTaskRequest, bool, []string) (ImplResponse, error)
	RemoveTagForTask(context.Context, string, RemoveTagForTaskRequest, bool, []string) (ImplResponse, error)
	SearchTasksForWorkspace(context.Context, string, bool, []string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, *string, time.Time, time.Time, string, string, *string, string, string, *string, time.Time, time.Time, string, string, *string, time.Time, time.Time, string, string, *string, time.Time, time.Time, bool, bool, bool, bool, bool, string, bool) (ImplResponse, error)
	SetParentForTask(context.Context, string, SetParentForTaskRequest, bool, []string) (ImplResponse, error)
	UpdateTask(context.Context, string, CreateTaskRequest, bool, []string) (ImplResponse, error)
}


// TeamMembershipsAPIServicer defines the api actions for the TeamMembershipsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type TeamMembershipsAPIServicer interface { 
	GetTeamMembership(context.Context, string, bool, []string) (ImplResponse, error)
	GetTeamMemberships(context.Context, bool, []string, int32, string, string, string, string) (ImplResponse, error)
	GetTeamMembershipsForTeam(context.Context, string, bool, []string, int32, string) (ImplResponse, error)
	GetTeamMembershipsForUser(context.Context, string, string, bool, []string, int32, string) (ImplResponse, error)
}


// TeamsAPIServicer defines the api actions for the TeamsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type TeamsAPIServicer interface { 
	AddUserForTeam(context.Context, string, AddUserForTeamRequest, bool, []string) (ImplResponse, error)
	CreateTeam(context.Context, UpdateTeamRequest, bool, []string, int32, string) (ImplResponse, error)
	GetTeam(context.Context, string, bool, []string, int32, string) (ImplResponse, error)
	GetTeamsForUser(context.Context, string, string, bool, []string, int32, string) (ImplResponse, error)
	GetTeamsForWorkspace(context.Context, string, bool, []string, int32, string) (ImplResponse, error)
	RemoveUserForTeam(context.Context, string, RemoveUserForTeamRequest, bool, []string) (ImplResponse, error)
	UpdateTeam(context.Context, UpdateTeamRequest, bool, []string, int32, string) (ImplResponse, error)
}


// TimePeriodsAPIServicer defines the api actions for the TimePeriodsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type TimePeriodsAPIServicer interface { 
	GetTimePeriod(context.Context, string, bool, []string) (ImplResponse, error)
	GetTimePeriods(context.Context, string, bool, []string, int32, string, string, string) (ImplResponse, error)
}


// TypeaheadAPIServicer defines the api actions for the TypeaheadAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type TypeaheadAPIServicer interface { 
	TypeaheadForWorkspace(context.Context, string, string, string, string, int32, bool, []string) (ImplResponse, error)
}


// UserTaskListsAPIServicer defines the api actions for the UserTaskListsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type UserTaskListsAPIServicer interface { 
	GetUserTaskList(context.Context, string, bool, []string) (ImplResponse, error)
	GetUserTaskListForUser(context.Context, string, string, bool, []string) (ImplResponse, error)
}


// UsersAPIServicer defines the api actions for the UsersAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type UsersAPIServicer interface { 
	GetFavoritesForUser(context.Context, string, string, string, bool, []string) (ImplResponse, error)
	GetUser(context.Context, string, bool, []string) (ImplResponse, error)
	GetUsers(context.Context, string, string, bool, []string, int32, string) (ImplResponse, error)
	GetUsersForTeam(context.Context, string, bool, []string, string) (ImplResponse, error)
	GetUsersForWorkspace(context.Context, string, bool, []string, string) (ImplResponse, error)
}


// WebhooksAPIServicer defines the api actions for the WebhooksAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type WebhooksAPIServicer interface { 
	CreateWebhook(context.Context, CreateWebhookRequest, bool, []string) (ImplResponse, error)
	DeleteWebhook(context.Context, string, bool, []string) (ImplResponse, error)
	GetWebhook(context.Context, string, bool, []string) (ImplResponse, error)
	GetWebhooks(context.Context, string, bool, []string, int32, string, string) (ImplResponse, error)
	UpdateWebhook(context.Context, string, UpdateWebhookRequest, bool, []string) (ImplResponse, error)
}


// WorkspaceMembershipsAPIServicer defines the api actions for the WorkspaceMembershipsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type WorkspaceMembershipsAPIServicer interface { 
	GetWorkspaceMembership(context.Context, string, bool, []string) (ImplResponse, error)
	GetWorkspaceMembershipsForUser(context.Context, string, bool, []string, int32, string) (ImplResponse, error)
	GetWorkspaceMembershipsForWorkspace(context.Context, string, string, bool, []string, int32, string) (ImplResponse, error)
}


// WorkspacesAPIServicer defines the api actions for the WorkspacesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type WorkspacesAPIServicer interface { 
	AddUserForWorkspace(context.Context, string, AddUserForWorkspaceRequest, bool, []string) (ImplResponse, error)
	GetWorkspace(context.Context, string, bool, []string) (ImplResponse, error)
	GetWorkspaces(context.Context, bool, []string, int32, string) (ImplResponse, error)
	RemoveUserForWorkspace(context.Context, string, RemoveUserForWorkspaceRequest, bool, []string) (ImplResponse, error)
	UpdateWorkspace(context.Context, string, UpdateWorkspaceRequest, bool, []string) (ImplResponse, error)
}
