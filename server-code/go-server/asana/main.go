/*
 * Asana
 *
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package main

import (
	"log"
	"net/http"

	openapi "github.com/GIT_USER_ID/GIT_REPO_ID/go"
)

func main() {
	log.Printf("Server started")

	AttachmentsAPIService := openapi.NewAttachmentsAPIService()
	AttachmentsAPIController := openapi.NewAttachmentsAPIController(AttachmentsAPIService)

	AuditLogAPIAPIService := openapi.NewAuditLogAPIAPIService()
	AuditLogAPIAPIController := openapi.NewAuditLogAPIAPIController(AuditLogAPIAPIService)

	BatchAPIAPIService := openapi.NewBatchAPIAPIService()
	BatchAPIAPIController := openapi.NewBatchAPIAPIController(BatchAPIAPIService)

	CustomFieldSettingsAPIService := openapi.NewCustomFieldSettingsAPIService()
	CustomFieldSettingsAPIController := openapi.NewCustomFieldSettingsAPIController(CustomFieldSettingsAPIService)

	CustomFieldsAPIService := openapi.NewCustomFieldsAPIService()
	CustomFieldsAPIController := openapi.NewCustomFieldsAPIController(CustomFieldsAPIService)

	EventsAPIService := openapi.NewEventsAPIService()
	EventsAPIController := openapi.NewEventsAPIController(EventsAPIService)

	GoalRelationshipsAPIService := openapi.NewGoalRelationshipsAPIService()
	GoalRelationshipsAPIController := openapi.NewGoalRelationshipsAPIController(GoalRelationshipsAPIService)

	GoalsAPIService := openapi.NewGoalsAPIService()
	GoalsAPIController := openapi.NewGoalsAPIController(GoalsAPIService)

	JobsAPIService := openapi.NewJobsAPIService()
	JobsAPIController := openapi.NewJobsAPIController(JobsAPIService)

	OrganizationExportsAPIService := openapi.NewOrganizationExportsAPIService()
	OrganizationExportsAPIController := openapi.NewOrganizationExportsAPIController(OrganizationExportsAPIService)

	PortfolioMembershipsAPIService := openapi.NewPortfolioMembershipsAPIService()
	PortfolioMembershipsAPIController := openapi.NewPortfolioMembershipsAPIController(PortfolioMembershipsAPIService)

	PortfoliosAPIService := openapi.NewPortfoliosAPIService()
	PortfoliosAPIController := openapi.NewPortfoliosAPIController(PortfoliosAPIService)

	ProjectBriefsAPIService := openapi.NewProjectBriefsAPIService()
	ProjectBriefsAPIController := openapi.NewProjectBriefsAPIController(ProjectBriefsAPIService)

	ProjectMembershipsAPIService := openapi.NewProjectMembershipsAPIService()
	ProjectMembershipsAPIController := openapi.NewProjectMembershipsAPIController(ProjectMembershipsAPIService)

	ProjectStatusesAPIService := openapi.NewProjectStatusesAPIService()
	ProjectStatusesAPIController := openapi.NewProjectStatusesAPIController(ProjectStatusesAPIService)

	ProjectTemplatesAPIService := openapi.NewProjectTemplatesAPIService()
	ProjectTemplatesAPIController := openapi.NewProjectTemplatesAPIController(ProjectTemplatesAPIService)

	ProjectsAPIService := openapi.NewProjectsAPIService()
	ProjectsAPIController := openapi.NewProjectsAPIController(ProjectsAPIService)

	SectionsAPIService := openapi.NewSectionsAPIService()
	SectionsAPIController := openapi.NewSectionsAPIController(SectionsAPIService)

	StatusUpdatesAPIService := openapi.NewStatusUpdatesAPIService()
	StatusUpdatesAPIController := openapi.NewStatusUpdatesAPIController(StatusUpdatesAPIService)

	StoriesAPIService := openapi.NewStoriesAPIService()
	StoriesAPIController := openapi.NewStoriesAPIController(StoriesAPIService)

	TagsAPIService := openapi.NewTagsAPIService()
	TagsAPIController := openapi.NewTagsAPIController(TagsAPIService)

	TasksAPIService := openapi.NewTasksAPIService()
	TasksAPIController := openapi.NewTasksAPIController(TasksAPIService)

	TeamMembershipsAPIService := openapi.NewTeamMembershipsAPIService()
	TeamMembershipsAPIController := openapi.NewTeamMembershipsAPIController(TeamMembershipsAPIService)

	TeamsAPIService := openapi.NewTeamsAPIService()
	TeamsAPIController := openapi.NewTeamsAPIController(TeamsAPIService)

	TimePeriodsAPIService := openapi.NewTimePeriodsAPIService()
	TimePeriodsAPIController := openapi.NewTimePeriodsAPIController(TimePeriodsAPIService)

	TypeaheadAPIService := openapi.NewTypeaheadAPIService()
	TypeaheadAPIController := openapi.NewTypeaheadAPIController(TypeaheadAPIService)

	UserTaskListsAPIService := openapi.NewUserTaskListsAPIService()
	UserTaskListsAPIController := openapi.NewUserTaskListsAPIController(UserTaskListsAPIService)

	UsersAPIService := openapi.NewUsersAPIService()
	UsersAPIController := openapi.NewUsersAPIController(UsersAPIService)

	WebhooksAPIService := openapi.NewWebhooksAPIService()
	WebhooksAPIController := openapi.NewWebhooksAPIController(WebhooksAPIService)

	WorkspaceMembershipsAPIService := openapi.NewWorkspaceMembershipsAPIService()
	WorkspaceMembershipsAPIController := openapi.NewWorkspaceMembershipsAPIController(WorkspaceMembershipsAPIService)

	WorkspacesAPIService := openapi.NewWorkspacesAPIService()
	WorkspacesAPIController := openapi.NewWorkspacesAPIController(WorkspacesAPIService)

	router := openapi.NewRouter(AttachmentsAPIController, AuditLogAPIAPIController, BatchAPIAPIController, CustomFieldSettingsAPIController, CustomFieldsAPIController, EventsAPIController, GoalRelationshipsAPIController, GoalsAPIController, JobsAPIController, OrganizationExportsAPIController, PortfolioMembershipsAPIController, PortfoliosAPIController, ProjectBriefsAPIController, ProjectMembershipsAPIController, ProjectStatusesAPIController, ProjectTemplatesAPIController, ProjectsAPIController, SectionsAPIController, StatusUpdatesAPIController, StoriesAPIController, TagsAPIController, TasksAPIController, TeamMembershipsAPIController, TeamsAPIController, TimePeriodsAPIController, TypeaheadAPIController, UserTaskListsAPIController, UsersAPIController, WebhooksAPIController, WorkspaceMembershipsAPIController, WorkspacesAPIController)

	log.Fatal(http.ListenAndServe(":8080", router))
}
