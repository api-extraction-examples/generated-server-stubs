/*
 * Netlify's API documentation
 *
 * Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.  This document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://www.netlify.com/docs/api/). Visit our Community forum to join the conversation about [understanding and using Netlifyâ€™s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).  Additionally, we have two API clients for your convenience: - [Go Client](https://github.com/netlify/open-api#go-client) - [JS Client](https://github.com/netlify/build/tree/main/packages/js-client)
 *
 * API version: 2.16.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi




type Deploy struct {

	AdminUrl string `json:"admin_url,omitempty"`

	Branch string `json:"branch,omitempty"`

	BuildId string `json:"build_id,omitempty"`

	CommitRef string `json:"commit_ref,omitempty"`

	CommitUrl string `json:"commit_url,omitempty"`

	Context string `json:"context,omitempty"`

	CreatedAt string `json:"created_at,omitempty"`

	DeploySslUrl string `json:"deploy_ssl_url,omitempty"`

	DeployUrl string `json:"deploy_url,omitempty"`

	Draft bool `json:"draft,omitempty"`

	ErrorMessage string `json:"error_message,omitempty"`

	Framework string `json:"framework,omitempty"`

	FunctionSchedules []FunctionSchedule `json:"function_schedules,omitempty"`

	Id string `json:"id,omitempty"`

	Locked bool `json:"locked,omitempty"`

	Name string `json:"name,omitempty"`

	PublishedAt string `json:"published_at,omitempty"`

	Required []string `json:"required,omitempty"`

	RequiredFunctions []string `json:"required_functions,omitempty"`

	ReviewId float32 `json:"review_id,omitempty"`

	ReviewUrl string `json:"review_url,omitempty"`

	ScreenshotUrl string `json:"screenshot_url,omitempty"`

	SiteCapabilities DeploySiteCapabilities `json:"site_capabilities,omitempty"`

	SiteId string `json:"site_id,omitempty"`

	Skipped bool `json:"skipped,omitempty"`

	SslUrl string `json:"ssl_url,omitempty"`

	State string `json:"state,omitempty"`

	Title string `json:"title,omitempty"`

	UpdatedAt string `json:"updated_at,omitempty"`

	Url string `json:"url,omitempty"`

	UserId string `json:"user_id,omitempty"`
}

// AssertDeployRequired checks if the required fields are not zero-ed
func AssertDeployRequired(obj Deploy) error {
	for _, el := range obj.FunctionSchedules {
		if err := AssertFunctionScheduleRequired(el); err != nil {
			return err
		}
	}
	if err := AssertDeploySiteCapabilitiesRequired(obj.SiteCapabilities); err != nil {
		return err
	}
	return nil
}

// AssertDeployConstraints checks if the values respects the defined constraints
func AssertDeployConstraints(obj Deploy) error {
	return nil
}
