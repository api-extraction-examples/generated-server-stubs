/*
 * Netlify's API documentation
 *
 * Netlify is a hosting service for the programmable web. It understands your documents and provides an API to handle atomic deploys of websites, manage form submissions, inject JavaScript snippets, and much more. This is a REST-style API that uses JSON for serialization and OAuth 2 for authentication.  This document is an OpenAPI reference for the Netlify API that you can explore. For more detailed instructions for common uses, please visit the [online documentation](https://www.netlify.com/docs/api/). Visit our Community forum to join the conversation about [understanding and using Netlifyâ€™s API](https://community.netlify.com/t/common-issue-understanding-and-using-netlifys-api/160).  Additionally, we have two API clients for your convenience: - [Go Client](https://github.com/netlify/open-api#go-client) - [JS Client](https://github.com/netlify/build/tree/main/packages/js-client)
 *
 * API version: 2.16.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi




type Site struct {

	AccountName string `json:"account_name,omitempty"`

	AccountSlug string `json:"account_slug,omitempty"`

	AdminUrl string `json:"admin_url,omitempty"`

	BuildImage string `json:"build_image,omitempty"`

	BuildSettings RepoInfo `json:"build_settings,omitempty"`

	Capabilities map[string]map[string]interface{} `json:"capabilities,omitempty"`

	CreatedAt string `json:"created_at,omitempty"`

	CustomDomain string `json:"custom_domain,omitempty"`

	DefaultHooksData SiteDefaultHooksData `json:"default_hooks_data,omitempty"`

	DeployHook string `json:"deploy_hook,omitempty"`

	DeployUrl string `json:"deploy_url,omitempty"`

	DomainAliases []string `json:"domain_aliases,omitempty"`

	ForceSsl bool `json:"force_ssl,omitempty"`

	GitProvider string `json:"git_provider,omitempty"`

	Id string `json:"id,omitempty"`

	IdDomain string `json:"id_domain,omitempty"`

	ManagedDns bool `json:"managed_dns,omitempty"`

	Name string `json:"name,omitempty"`

	NotificationEmail string `json:"notification_email,omitempty"`

	Password string `json:"password,omitempty"`

	Plan string `json:"plan,omitempty"`

	Prerender string `json:"prerender,omitempty"`

	ProcessingSettings SiteProcessingSettings `json:"processing_settings,omitempty"`

	PublishedDeploy Deploy `json:"published_deploy,omitempty"`

	ScreenshotUrl string `json:"screenshot_url,omitempty"`

	SessionId string `json:"session_id,omitempty"`

	Ssl bool `json:"ssl,omitempty"`

	SslUrl string `json:"ssl_url,omitempty"`

	State string `json:"state,omitempty"`

	UpdatedAt string `json:"updated_at,omitempty"`

	Url string `json:"url,omitempty"`

	UserId string `json:"user_id,omitempty"`
}

// AssertSiteRequired checks if the required fields are not zero-ed
func AssertSiteRequired(obj Site) error {
	if err := AssertRepoInfoRequired(obj.BuildSettings); err != nil {
		return err
	}
	if err := AssertSiteDefaultHooksDataRequired(obj.DefaultHooksData); err != nil {
		return err
	}
	if err := AssertSiteProcessingSettingsRequired(obj.ProcessingSettings); err != nil {
		return err
	}
	if err := AssertDeployRequired(obj.PublishedDeploy); err != nil {
		return err
	}
	return nil
}

// AssertSiteConstraints checks if the values respects the defined constraints
func AssertSiteConstraints(obj Site) error {
	return nil
}
