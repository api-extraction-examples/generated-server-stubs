/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * API version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi




// UpdateCustomFieldDetails - Details of a custom field.
type UpdateCustomFieldDetails struct {

	// The description of the custom field. The maximum length is 40000 characters.
	Description string `json:"description,omitempty"`

	// The name of the custom field. It doesn't have to be unique. The maximum length is 255 characters.
	Name string `json:"name,omitempty"`

	// The searcher that defines the way the field is searched in Jira. It can be set to `null`, otherwise you must specify the valid searcher for the field type, as listed below (abbreviated values shown):   *  `cascadingselect`: `cascadingselectsearcher`  *  `datepicker`: `daterange`  *  `datetime`: `datetimerange`  *  `float`: `exactnumber` or `numberrange`  *  `grouppicker`: `grouppickersearcher`  *  `importid`: `exactnumber` or `numberrange`  *  `labels`: `labelsearcher`  *  `multicheckboxes`: `multiselectsearcher`  *  `multigrouppicker`: `multiselectsearcher`  *  `multiselect`: `multiselectsearcher`  *  `multiuserpicker`: `userpickergroupsearcher`  *  `multiversion`: `versionsearcher`  *  `project`: `projectsearcher`  *  `radiobuttons`: `multiselectsearcher`  *  `readonlyfield`: `textsearcher`  *  `select`: `multiselectsearcher`  *  `textarea`: `textsearcher`  *  `textfield`: `textsearcher`  *  `url`: `exacttextsearcher`  *  `userpicker`: `userpickergroupsearcher`  *  `version`: `versionsearcher`
	SearcherKey string `json:"searcherKey,omitempty"`
}

// AssertUpdateCustomFieldDetailsRequired checks if the required fields are not zero-ed
func AssertUpdateCustomFieldDetailsRequired(obj UpdateCustomFieldDetails) error {
	return nil
}

// AssertUpdateCustomFieldDetailsConstraints checks if the values respects the defined constraints
func AssertUpdateCustomFieldDetailsConstraints(obj UpdateCustomFieldDetails) error {
	return nil
}
