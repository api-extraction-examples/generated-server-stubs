/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * API version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// LicenseMetricsAPIController binds http requests to an api service and writes the service results to the http response
type LicenseMetricsAPIController struct {
	service LicenseMetricsAPIServicer
	errorHandler ErrorHandler
}

// LicenseMetricsAPIOption for how the controller is set up.
type LicenseMetricsAPIOption func(*LicenseMetricsAPIController)

// WithLicenseMetricsAPIErrorHandler inject ErrorHandler into controller
func WithLicenseMetricsAPIErrorHandler(h ErrorHandler) LicenseMetricsAPIOption {
	return func(c *LicenseMetricsAPIController) {
		c.errorHandler = h
	}
}

// NewLicenseMetricsAPIController creates a default api controller
func NewLicenseMetricsAPIController(s LicenseMetricsAPIServicer, opts ...LicenseMetricsAPIOption) Router {
	controller := &LicenseMetricsAPIController{
		service:      s,
		errorHandler: DefaultErrorHandler,
	}

	for _, opt := range opts {
		opt(controller)
	}

	return controller
}

// Routes returns all the api routes for the LicenseMetricsAPIController
func (c *LicenseMetricsAPIController) Routes() Routes {
	return Routes{
		"GetApproximateApplicationLicenseCount": Route{
			strings.ToUpper("Get"),
			"/rest/api/3/license/approximateLicenseCount/product/{applicationKey}",
			c.GetApproximateApplicationLicenseCount,
		},
		"GetApproximateLicenseCount": Route{
			strings.ToUpper("Get"),
			"/rest/api/3/license/approximateLicenseCount",
			c.GetApproximateLicenseCount,
		},
	}
}

// GetApproximateApplicationLicenseCount - Get approximate application license count
func (c *LicenseMetricsAPIController) GetApproximateApplicationLicenseCount(w http.ResponseWriter, r *http.Request) {
	params := mux.Vars(r)
	applicationKeyParam := params["applicationKey"]
	if applicationKeyParam == "" {
		c.errorHandler(w, r, &RequiredError{"applicationKey"}, nil)
		return
	}
	result, err := c.service.GetApproximateApplicationLicenseCount(r.Context(), applicationKeyParam)
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)
}

// GetApproximateLicenseCount - Get approximate license count
func (c *LicenseMetricsAPIController) GetApproximateLicenseCount(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.GetApproximateLicenseCount(r.Context())
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)
}
