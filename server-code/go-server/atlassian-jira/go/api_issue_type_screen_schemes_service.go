/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * API version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
	"reflect"
)

// IssueTypeScreenSchemesAPIService is a service that implements the logic for the IssueTypeScreenSchemesAPIServicer
// This service should implement the business logic for every endpoint for the IssueTypeScreenSchemesAPI API.
// Include any external packages or services that will be required by this service.
type IssueTypeScreenSchemesAPIService struct {
}

// NewIssueTypeScreenSchemesAPIService creates a default api service
func NewIssueTypeScreenSchemesAPIService() IssueTypeScreenSchemesAPIServicer {
	return &IssueTypeScreenSchemesAPIService{}
}

// AppendMappingsForIssueTypeScreenScheme - Append mappings to issue type screen scheme
func (s *IssueTypeScreenSchemesAPIService) AppendMappingsForIssueTypeScreenScheme(ctx context.Context, issueTypeScreenSchemeId string, issueTypeScreenSchemeMappingDetails IssueTypeScreenSchemeMappingDetails) (ImplResponse, error) {
	// TODO - update AppendMappingsForIssueTypeScreenScheme with the required logic for this service method.
	// Add api_issue_type_screen_schemes_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, interface{}{}) or use other options such as http.Ok ...
	// return Response(204, interface{}{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	// TODO: Uncomment the next line to return response Response(409, {}) or use other options such as http.Ok ...
	// return Response(409, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("AppendMappingsForIssueTypeScreenScheme method not implemented")
}

// AssignIssueTypeScreenSchemeToProject - Assign issue type screen scheme to project
func (s *IssueTypeScreenSchemesAPIService) AssignIssueTypeScreenSchemeToProject(ctx context.Context, issueTypeScreenSchemeProjectAssociation IssueTypeScreenSchemeProjectAssociation) (ImplResponse, error) {
	// TODO - update AssignIssueTypeScreenSchemeToProject with the required logic for this service method.
	// Add api_issue_type_screen_schemes_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, interface{}{}) or use other options such as http.Ok ...
	// return Response(204, interface{}{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("AssignIssueTypeScreenSchemeToProject method not implemented")
}

// CreateIssueTypeScreenScheme - Create issue type screen scheme
func (s *IssueTypeScreenSchemesAPIService) CreateIssueTypeScreenScheme(ctx context.Context, issueTypeScreenSchemeDetails IssueTypeScreenSchemeDetails) (ImplResponse, error) {
	// TODO - update CreateIssueTypeScreenScheme with the required logic for this service method.
	// Add api_issue_type_screen_schemes_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, IssueTypeScreenSchemeId{}) or use other options such as http.Ok ...
	// return Response(201, IssueTypeScreenSchemeId{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	// TODO: Uncomment the next line to return response Response(409, {}) or use other options such as http.Ok ...
	// return Response(409, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateIssueTypeScreenScheme method not implemented")
}

// DeleteIssueTypeScreenScheme - Delete issue type screen scheme
func (s *IssueTypeScreenSchemesAPIService) DeleteIssueTypeScreenScheme(ctx context.Context, issueTypeScreenSchemeId string) (ImplResponse, error) {
	// TODO - update DeleteIssueTypeScreenScheme with the required logic for this service method.
	// Add api_issue_type_screen_schemes_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, interface{}{}) or use other options such as http.Ok ...
	// return Response(204, interface{}{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteIssueTypeScreenScheme method not implemented")
}

// GetIssueTypeScreenSchemeMappings - Get issue type screen scheme items
func (s *IssueTypeScreenSchemesAPIService) GetIssueTypeScreenSchemeMappings(ctx context.Context, startAt int64, maxResults int32, issueTypeScreenSchemeId []int64) (ImplResponse, error) {
	// TODO - update GetIssueTypeScreenSchemeMappings with the required logic for this service method.
	// Add api_issue_type_screen_schemes_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, PageBeanIssueTypeScreenSchemeItem{}) or use other options such as http.Ok ...
	// return Response(200, PageBeanIssueTypeScreenSchemeItem{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetIssueTypeScreenSchemeMappings method not implemented")
}

// GetIssueTypeScreenSchemeProjectAssociations - Get issue type screen schemes for projects
func (s *IssueTypeScreenSchemesAPIService) GetIssueTypeScreenSchemeProjectAssociations(ctx context.Context, projectId []int64, startAt int64, maxResults int32) (ImplResponse, error) {
	// TODO - update GetIssueTypeScreenSchemeProjectAssociations with the required logic for this service method.
	// Add api_issue_type_screen_schemes_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, PageBeanIssueTypeScreenSchemesProjects{}) or use other options such as http.Ok ...
	// return Response(200, PageBeanIssueTypeScreenSchemesProjects{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetIssueTypeScreenSchemeProjectAssociations method not implemented")
}

// GetIssueTypeScreenSchemes - Get issue type screen schemes
func (s *IssueTypeScreenSchemesAPIService) GetIssueTypeScreenSchemes(ctx context.Context, startAt int64, maxResults int32, id []int64, queryString string, orderBy string, expand string) (ImplResponse, error) {
	// TODO - update GetIssueTypeScreenSchemes with the required logic for this service method.
	// Add api_issue_type_screen_schemes_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, PageBeanIssueTypeScreenScheme{}) or use other options such as http.Ok ...
	// return Response(200, PageBeanIssueTypeScreenScheme{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetIssueTypeScreenSchemes method not implemented")
}

// GetProjectsForIssueTypeScreenScheme - Get issue type screen scheme projects
func (s *IssueTypeScreenSchemesAPIService) GetProjectsForIssueTypeScreenScheme(ctx context.Context, issueTypeScreenSchemeId int64, startAt int64, maxResults int32, query string) (ImplResponse, error) {
	// TODO - update GetProjectsForIssueTypeScreenScheme with the required logic for this service method.
	// Add api_issue_type_screen_schemes_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, PageBeanProjectDetails{}) or use other options such as http.Ok ...
	// return Response(200, PageBeanProjectDetails{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetProjectsForIssueTypeScreenScheme method not implemented")
}

// RemoveMappingsFromIssueTypeScreenScheme - Remove mappings from issue type screen scheme
func (s *IssueTypeScreenSchemesAPIService) RemoveMappingsFromIssueTypeScreenScheme(ctx context.Context, issueTypeScreenSchemeId string, issueTypeIds IssueTypeIds) (ImplResponse, error) {
	// TODO - update RemoveMappingsFromIssueTypeScreenScheme with the required logic for this service method.
	// Add api_issue_type_screen_schemes_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, interface{}{}) or use other options such as http.Ok ...
	// return Response(204, interface{}{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("RemoveMappingsFromIssueTypeScreenScheme method not implemented")
}

// UpdateDefaultScreenScheme - Update issue type screen scheme default screen scheme
func (s *IssueTypeScreenSchemesAPIService) UpdateDefaultScreenScheme(ctx context.Context, issueTypeScreenSchemeId string, updateDefaultScreenScheme UpdateDefaultScreenScheme) (ImplResponse, error) {
	// TODO - update UpdateDefaultScreenScheme with the required logic for this service method.
	// Add api_issue_type_screen_schemes_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, interface{}{}) or use other options such as http.Ok ...
	// return Response(204, interface{}{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateDefaultScreenScheme method not implemented")
}

// UpdateIssueTypeScreenScheme - Update issue type screen scheme
func (s *IssueTypeScreenSchemesAPIService) UpdateIssueTypeScreenScheme(ctx context.Context, issueTypeScreenSchemeId string, issueTypeScreenSchemeUpdateDetails IssueTypeScreenSchemeUpdateDetails) (ImplResponse, error) {
	// TODO - update UpdateIssueTypeScreenScheme with the required logic for this service method.
	// Add api_issue_type_screen_schemes_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, interface{}{}) or use other options such as http.Ok ...
	// return Response(204, interface{}{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateIssueTypeScreenScheme method not implemented")
}
