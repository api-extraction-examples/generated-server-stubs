/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * API version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
	"reflect"
)

// IssueNotificationSchemesAPIService is a service that implements the logic for the IssueNotificationSchemesAPIServicer
// This service should implement the business logic for every endpoint for the IssueNotificationSchemesAPI API.
// Include any external packages or services that will be required by this service.
type IssueNotificationSchemesAPIService struct {
}

// NewIssueNotificationSchemesAPIService creates a default api service
func NewIssueNotificationSchemesAPIService() IssueNotificationSchemesAPIServicer {
	return &IssueNotificationSchemesAPIService{}
}

// AddNotifications - Add notifications to notification scheme
func (s *IssueNotificationSchemesAPIService) AddNotifications(ctx context.Context, id string, addNotificationsDetails AddNotificationsDetails) (ImplResponse, error) {
	// TODO - update AddNotifications with the required logic for this service method.
	// Add api_issue_notification_schemes_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, interface{}{}) or use other options such as http.Ok ...
	// return Response(204, interface{}{}), nil

	// TODO: Uncomment the next line to return response Response(400, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(400, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(401, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(401, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(403, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(403, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(404, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(404, ErrorCollection{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("AddNotifications method not implemented")
}

// CreateNotificationScheme - Create notification scheme
func (s *IssueNotificationSchemesAPIService) CreateNotificationScheme(ctx context.Context, createNotificationSchemeDetails CreateNotificationSchemeDetails) (ImplResponse, error) {
	// TODO - update CreateNotificationScheme with the required logic for this service method.
	// Add api_issue_notification_schemes_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, NotificationSchemeId{}) or use other options such as http.Ok ...
	// return Response(201, NotificationSchemeId{}), nil

	// TODO: Uncomment the next line to return response Response(400, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(400, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(401, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(401, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(403, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(403, ErrorCollection{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateNotificationScheme method not implemented")
}

// DeleteNotificationScheme - Delete notification scheme
func (s *IssueNotificationSchemesAPIService) DeleteNotificationScheme(ctx context.Context, notificationSchemeId string) (ImplResponse, error) {
	// TODO - update DeleteNotificationScheme with the required logic for this service method.
	// Add api_issue_notification_schemes_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, interface{}{}) or use other options such as http.Ok ...
	// return Response(204, interface{}{}), nil

	// TODO: Uncomment the next line to return response Response(400, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(400, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(401, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(401, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(403, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(403, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(404, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(404, ErrorCollection{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteNotificationScheme method not implemented")
}

// GetNotificationScheme - Get notification scheme
func (s *IssueNotificationSchemesAPIService) GetNotificationScheme(ctx context.Context, id int64, expand string) (ImplResponse, error) {
	// TODO - update GetNotificationScheme with the required logic for this service method.
	// Add api_issue_notification_schemes_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, NotificationScheme{}) or use other options such as http.Ok ...
	// return Response(200, NotificationScheme{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetNotificationScheme method not implemented")
}

// GetNotificationSchemeToProjectMappings - Get projects using notification schemes paginated
func (s *IssueNotificationSchemesAPIService) GetNotificationSchemeToProjectMappings(ctx context.Context, startAt string, maxResults string, notificationSchemeId []string, projectId []string) (ImplResponse, error) {
	// TODO - update GetNotificationSchemeToProjectMappings with the required logic for this service method.
	// Add api_issue_notification_schemes_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, PageBeanNotificationSchemeAndProjectMappingJsonBean{}) or use other options such as http.Ok ...
	// return Response(200, PageBeanNotificationSchemeAndProjectMappingJsonBean{}), nil

	// TODO: Uncomment the next line to return response Response(400, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(400, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(401, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(401, ErrorCollection{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetNotificationSchemeToProjectMappings method not implemented")
}

// GetNotificationSchemes - Get notification schemes paginated
func (s *IssueNotificationSchemesAPIService) GetNotificationSchemes(ctx context.Context, startAt string, maxResults string, id []string, projectId []string, onlyDefault bool, expand string) (ImplResponse, error) {
	// TODO - update GetNotificationSchemes with the required logic for this service method.
	// Add api_issue_notification_schemes_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, PageBeanNotificationScheme{}) or use other options such as http.Ok ...
	// return Response(200, PageBeanNotificationScheme{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetNotificationSchemes method not implemented")
}

// RemoveNotificationFromNotificationScheme - Remove notification from notification scheme
func (s *IssueNotificationSchemesAPIService) RemoveNotificationFromNotificationScheme(ctx context.Context, notificationSchemeId string, notificationId string) (ImplResponse, error) {
	// TODO - update RemoveNotificationFromNotificationScheme with the required logic for this service method.
	// Add api_issue_notification_schemes_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, interface{}{}) or use other options such as http.Ok ...
	// return Response(204, interface{}{}), nil

	// TODO: Uncomment the next line to return response Response(400, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(400, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(401, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(401, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(403, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(403, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(404, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(404, ErrorCollection{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RemoveNotificationFromNotificationScheme method not implemented")
}

// UpdateNotificationScheme - Update notification scheme
func (s *IssueNotificationSchemesAPIService) UpdateNotificationScheme(ctx context.Context, id string, updateNotificationSchemeDetails UpdateNotificationSchemeDetails) (ImplResponse, error) {
	// TODO - update UpdateNotificationScheme with the required logic for this service method.
	// Add api_issue_notification_schemes_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, interface{}{}) or use other options such as http.Ok ...
	// return Response(204, interface{}{}), nil

	// TODO: Uncomment the next line to return response Response(400, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(400, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(401, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(401, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(403, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(403, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(404, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(404, ErrorCollection{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateNotificationScheme method not implemented")
}
