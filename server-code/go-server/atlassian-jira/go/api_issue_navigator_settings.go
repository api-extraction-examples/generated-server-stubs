/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * API version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// IssueNavigatorSettingsAPIController binds http requests to an api service and writes the service results to the http response
type IssueNavigatorSettingsAPIController struct {
	service IssueNavigatorSettingsAPIServicer
	errorHandler ErrorHandler
}

// IssueNavigatorSettingsAPIOption for how the controller is set up.
type IssueNavigatorSettingsAPIOption func(*IssueNavigatorSettingsAPIController)

// WithIssueNavigatorSettingsAPIErrorHandler inject ErrorHandler into controller
func WithIssueNavigatorSettingsAPIErrorHandler(h ErrorHandler) IssueNavigatorSettingsAPIOption {
	return func(c *IssueNavigatorSettingsAPIController) {
		c.errorHandler = h
	}
}

// NewIssueNavigatorSettingsAPIController creates a default api controller
func NewIssueNavigatorSettingsAPIController(s IssueNavigatorSettingsAPIServicer, opts ...IssueNavigatorSettingsAPIOption) Router {
	controller := &IssueNavigatorSettingsAPIController{
		service:      s,
		errorHandler: DefaultErrorHandler,
	}

	for _, opt := range opts {
		opt(controller)
	}

	return controller
}

// Routes returns all the api routes for the IssueNavigatorSettingsAPIController
func (c *IssueNavigatorSettingsAPIController) Routes() Routes {
	return Routes{
		"GetIssueNavigatorDefaultColumns": Route{
			strings.ToUpper("Get"),
			"/rest/api/3/settings/columns",
			c.GetIssueNavigatorDefaultColumns,
		},
		"SetIssueNavigatorDefaultColumns": Route{
			strings.ToUpper("Put"),
			"/rest/api/3/settings/columns",
			c.SetIssueNavigatorDefaultColumns,
		},
	}
}

// GetIssueNavigatorDefaultColumns - Get issue navigator default columns
func (c *IssueNavigatorSettingsAPIController) GetIssueNavigatorDefaultColumns(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.GetIssueNavigatorDefaultColumns(r.Context())
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)
}

// SetIssueNavigatorDefaultColumns - Set issue navigator default columns
func (c *IssueNavigatorSettingsAPIController) SetIssueNavigatorDefaultColumns(w http.ResponseWriter, r *http.Request) {
	requestBodyParam := []string{}
	d := json.NewDecoder(r.Body)
	d.DisallowUnknownFields()
	if err := d.Decode(&requestBodyParam); err != nil && !errors.Is(err, io.EOF) {
		c.errorHandler(w, r, &ParsingError{Err: err}, nil)
		return
	}
	result, err := c.service.SetIssueNavigatorDefaultColumns(r.Context(), requestBodyParam)
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)
}
