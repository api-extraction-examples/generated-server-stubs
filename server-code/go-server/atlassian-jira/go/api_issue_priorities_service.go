/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * API version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
	"reflect"
)

// IssuePrioritiesAPIService is a service that implements the logic for the IssuePrioritiesAPIServicer
// This service should implement the business logic for every endpoint for the IssuePrioritiesAPI API.
// Include any external packages or services that will be required by this service.
type IssuePrioritiesAPIService struct {
}

// NewIssuePrioritiesAPIService creates a default api service
func NewIssuePrioritiesAPIService() IssuePrioritiesAPIServicer {
	return &IssuePrioritiesAPIService{}
}

// CreatePriority - Create priority
func (s *IssuePrioritiesAPIService) CreatePriority(ctx context.Context, createPriorityDetails CreatePriorityDetails) (ImplResponse, error) {
	// TODO - update CreatePriority with the required logic for this service method.
	// Add api_issue_priorities_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, PriorityId{}) or use other options such as http.Ok ...
	// return Response(201, PriorityId{}), nil

	// TODO: Uncomment the next line to return response Response(400, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(400, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(401, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(401, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(403, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(403, ErrorCollection{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreatePriority method not implemented")
}

// DeletePriority - Delete priority
func (s *IssuePrioritiesAPIService) DeletePriority(ctx context.Context, id string, replaceWith string) (ImplResponse, error) {
	// TODO - update DeletePriority with the required logic for this service method.
	// Add api_issue_priorities_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(303, TaskProgressBeanObject{}) or use other options such as http.Ok ...
	// return Response(303, TaskProgressBeanObject{}), nil

	// TODO: Uncomment the next line to return response Response(400, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(400, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(401, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(401, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(403, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(403, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(404, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(404, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(409, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(409, ErrorCollection{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeletePriority method not implemented")
}

// GetPriorities - Get priorities
// Deprecated
func (s *IssuePrioritiesAPIService) GetPriorities(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetPriorities with the required logic for this service method.
	// Add api_issue_priorities_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []Priority{}) or use other options such as http.Ok ...
	// return Response(200, []Priority{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetPriorities method not implemented")
}

// GetPriority - Get priority
func (s *IssuePrioritiesAPIService) GetPriority(ctx context.Context, id string) (ImplResponse, error) {
	// TODO - update GetPriority with the required logic for this service method.
	// Add api_issue_priorities_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Priority{}) or use other options such as http.Ok ...
	// return Response(200, Priority{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetPriority method not implemented")
}

// MovePriorities - Move priorities
func (s *IssuePrioritiesAPIService) MovePriorities(ctx context.Context, reorderIssuePriorities ReorderIssuePriorities) (ImplResponse, error) {
	// TODO - update MovePriorities with the required logic for this service method.
	// Add api_issue_priorities_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, interface{}{}) or use other options such as http.Ok ...
	// return Response(204, interface{}{}), nil

	// TODO: Uncomment the next line to return response Response(400, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(400, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(401, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(401, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(403, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(403, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(404, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(404, ErrorCollection{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("MovePriorities method not implemented")
}

// SearchPriorities - Search priorities
func (s *IssuePrioritiesAPIService) SearchPriorities(ctx context.Context, startAt string, maxResults string, id []string, onlyDefault bool) (ImplResponse, error) {
	// TODO - update SearchPriorities with the required logic for this service method.
	// Add api_issue_priorities_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, PageBeanPriority{}) or use other options such as http.Ok ...
	// return Response(200, PageBeanPriority{}), nil

	// TODO: Uncomment the next line to return response Response(401, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(401, ErrorCollection{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("SearchPriorities method not implemented")
}

// SetDefaultPriority - Set default priority
func (s *IssuePrioritiesAPIService) SetDefaultPriority(ctx context.Context, setDefaultPriorityRequest SetDefaultPriorityRequest) (ImplResponse, error) {
	// TODO - update SetDefaultPriority with the required logic for this service method.
	// Add api_issue_priorities_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, interface{}{}) or use other options such as http.Ok ...
	// return Response(204, interface{}{}), nil

	// TODO: Uncomment the next line to return response Response(400, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(400, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(401, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(401, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(403, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(403, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(404, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(404, ErrorCollection{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("SetDefaultPriority method not implemented")
}

// UpdatePriority - Update priority
func (s *IssuePrioritiesAPIService) UpdatePriority(ctx context.Context, id string, updatePriorityDetails UpdatePriorityDetails) (ImplResponse, error) {
	// TODO - update UpdatePriority with the required logic for this service method.
	// Add api_issue_priorities_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, interface{}{}) or use other options such as http.Ok ...
	// return Response(204, interface{}{}), nil

	// TODO: Uncomment the next line to return response Response(400, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(400, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(401, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(401, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(403, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(403, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(404, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(404, ErrorCollection{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdatePriority method not implemented")
}
