/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * API version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi




// JexpJqlIssues - The JQL specifying the issues available in the evaluated Jira expression under the `issues` context variable. Not all issues returned by the JQL query are loaded, only those described by the `startAt` and `maxResults` properties. To determine whether it is necessary to iterate to ensure all the issues returned by the JQL query are evaluated, inspect `meta.issues.jql.count` in the response.
type JexpJqlIssues struct {

	// The maximum number of issues to return from the JQL query. Inspect `meta.issues.jql.maxResults` in the response to ensure the maximum value has not been exceeded.
	MaxResults int32 `json:"maxResults,omitempty"`

	// The JQL query.
	Query string `json:"query,omitempty"`

	// The index of the first issue to return from the JQL query.
	StartAt int64 `json:"startAt,omitempty"`

	// Determines how to validate the JQL query and treat the validation results.
	Validation string `json:"validation,omitempty"`
}

// AssertJexpJqlIssuesRequired checks if the required fields are not zero-ed
func AssertJexpJqlIssuesRequired(obj JexpJqlIssues) error {
	return nil
}

// AssertJexpJqlIssuesConstraints checks if the values respects the defined constraints
func AssertJexpJqlIssuesConstraints(obj JexpJqlIssues) error {
	return nil
}
