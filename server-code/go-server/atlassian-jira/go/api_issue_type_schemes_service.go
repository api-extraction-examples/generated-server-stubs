/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * API version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
	"reflect"
)

// IssueTypeSchemesAPIService is a service that implements the logic for the IssueTypeSchemesAPIServicer
// This service should implement the business logic for every endpoint for the IssueTypeSchemesAPI API.
// Include any external packages or services that will be required by this service.
type IssueTypeSchemesAPIService struct {
}

// NewIssueTypeSchemesAPIService creates a default api service
func NewIssueTypeSchemesAPIService() IssueTypeSchemesAPIServicer {
	return &IssueTypeSchemesAPIService{}
}

// AddIssueTypesToIssueTypeScheme - Add issue types to issue type scheme
func (s *IssueTypeSchemesAPIService) AddIssueTypesToIssueTypeScheme(ctx context.Context, issueTypeSchemeId int64, issueTypeIds IssueTypeIds) (ImplResponse, error) {
	// TODO - update AddIssueTypesToIssueTypeScheme with the required logic for this service method.
	// Add api_issue_type_schemes_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, interface{}{}) or use other options such as http.Ok ...
	// return Response(204, interface{}{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("AddIssueTypesToIssueTypeScheme method not implemented")
}

// AssignIssueTypeSchemeToProject - Assign issue type scheme to project
func (s *IssueTypeSchemesAPIService) AssignIssueTypeSchemeToProject(ctx context.Context, issueTypeSchemeProjectAssociation IssueTypeSchemeProjectAssociation) (ImplResponse, error) {
	// TODO - update AssignIssueTypeSchemeToProject with the required logic for this service method.
	// Add api_issue_type_schemes_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, interface{}{}) or use other options such as http.Ok ...
	// return Response(204, interface{}{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("AssignIssueTypeSchemeToProject method not implemented")
}

// CreateIssueTypeScheme - Create issue type scheme
func (s *IssueTypeSchemesAPIService) CreateIssueTypeScheme(ctx context.Context, issueTypeSchemeDetails IssueTypeSchemeDetails) (ImplResponse, error) {
	// TODO - update CreateIssueTypeScheme with the required logic for this service method.
	// Add api_issue_type_schemes_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, IssueTypeSchemeId{}) or use other options such as http.Ok ...
	// return Response(201, IssueTypeSchemeId{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(409, {}) or use other options such as http.Ok ...
	// return Response(409, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateIssueTypeScheme method not implemented")
}

// DeleteIssueTypeScheme - Delete issue type scheme
func (s *IssueTypeSchemesAPIService) DeleteIssueTypeScheme(ctx context.Context, issueTypeSchemeId int64) (ImplResponse, error) {
	// TODO - update DeleteIssueTypeScheme with the required logic for this service method.
	// Add api_issue_type_schemes_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, interface{}{}) or use other options such as http.Ok ...
	// return Response(204, interface{}{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteIssueTypeScheme method not implemented")
}

// GetAllIssueTypeSchemes - Get all issue type schemes
func (s *IssueTypeSchemesAPIService) GetAllIssueTypeSchemes(ctx context.Context, startAt int64, maxResults int32, id []int64, orderBy string, expand string, queryString string) (ImplResponse, error) {
	// TODO - update GetAllIssueTypeSchemes with the required logic for this service method.
	// Add api_issue_type_schemes_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, PageBeanIssueTypeScheme{}) or use other options such as http.Ok ...
	// return Response(200, PageBeanIssueTypeScheme{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetAllIssueTypeSchemes method not implemented")
}

// GetIssueTypeSchemeForProjects - Get issue type schemes for projects
func (s *IssueTypeSchemesAPIService) GetIssueTypeSchemeForProjects(ctx context.Context, projectId []int64, startAt int64, maxResults int32) (ImplResponse, error) {
	// TODO - update GetIssueTypeSchemeForProjects with the required logic for this service method.
	// Add api_issue_type_schemes_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, PageBeanIssueTypeSchemeProjects{}) or use other options such as http.Ok ...
	// return Response(200, PageBeanIssueTypeSchemeProjects{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetIssueTypeSchemeForProjects method not implemented")
}

// GetIssueTypeSchemesMapping - Get issue type scheme items
func (s *IssueTypeSchemesAPIService) GetIssueTypeSchemesMapping(ctx context.Context, startAt int64, maxResults int32, issueTypeSchemeId []int64) (ImplResponse, error) {
	// TODO - update GetIssueTypeSchemesMapping with the required logic for this service method.
	// Add api_issue_type_schemes_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, PageBeanIssueTypeSchemeMapping{}) or use other options such as http.Ok ...
	// return Response(200, PageBeanIssueTypeSchemeMapping{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetIssueTypeSchemesMapping method not implemented")
}

// RemoveIssueTypeFromIssueTypeScheme - Remove issue type from issue type scheme
func (s *IssueTypeSchemesAPIService) RemoveIssueTypeFromIssueTypeScheme(ctx context.Context, issueTypeSchemeId int64, issueTypeId int64) (ImplResponse, error) {
	// TODO - update RemoveIssueTypeFromIssueTypeScheme with the required logic for this service method.
	// Add api_issue_type_schemes_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, interface{}{}) or use other options such as http.Ok ...
	// return Response(204, interface{}{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("RemoveIssueTypeFromIssueTypeScheme method not implemented")
}

// ReorderIssueTypesInIssueTypeScheme - Change order of issue types
func (s *IssueTypeSchemesAPIService) ReorderIssueTypesInIssueTypeScheme(ctx context.Context, issueTypeSchemeId int64, orderOfIssueTypes OrderOfIssueTypes) (ImplResponse, error) {
	// TODO - update ReorderIssueTypesInIssueTypeScheme with the required logic for this service method.
	// Add api_issue_type_schemes_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, interface{}{}) or use other options such as http.Ok ...
	// return Response(204, interface{}{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("ReorderIssueTypesInIssueTypeScheme method not implemented")
}

// UpdateIssueTypeScheme - Update issue type scheme
func (s *IssueTypeSchemesAPIService) UpdateIssueTypeScheme(ctx context.Context, issueTypeSchemeId int64, issueTypeSchemeUpdateDetails IssueTypeSchemeUpdateDetails) (ImplResponse, error) {
	// TODO - update UpdateIssueTypeScheme with the required logic for this service method.
	// Add api_issue_type_schemes_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, interface{}{}) or use other options such as http.Ok ...
	// return Response(204, interface{}{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateIssueTypeScheme method not implemented")
}
