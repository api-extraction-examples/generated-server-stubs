/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * API version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// IssueCommentsAPIService is a service that implements the logic for the IssueCommentsAPIServicer
// This service should implement the business logic for every endpoint for the IssueCommentsAPI API.
// Include any external packages or services that will be required by this service.
type IssueCommentsAPIService struct {
}

// NewIssueCommentsAPIService creates a default api service
func NewIssueCommentsAPIService() IssueCommentsAPIServicer {
	return &IssueCommentsAPIService{}
}

// AddComment - Add comment
func (s *IssueCommentsAPIService) AddComment(ctx context.Context, issueIdOrKey string, comment Comment, expand string) (ImplResponse, error) {
	// TODO - update AddComment with the required logic for this service method.
	// Add api_issue_comments_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, Comment{}) or use other options such as http.Ok ...
	// return Response(201, Comment{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("AddComment method not implemented")
}

// DeleteComment - Delete comment
func (s *IssueCommentsAPIService) DeleteComment(ctx context.Context, issueIdOrKey string, id string) (ImplResponse, error) {
	// TODO - update DeleteComment with the required logic for this service method.
	// Add api_issue_comments_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	// TODO: Uncomment the next line to return response Response(405, {}) or use other options such as http.Ok ...
	// return Response(405, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteComment method not implemented")
}

// GetComment - Get comment
func (s *IssueCommentsAPIService) GetComment(ctx context.Context, issueIdOrKey string, id string, expand string) (ImplResponse, error) {
	// TODO - update GetComment with the required logic for this service method.
	// Add api_issue_comments_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Comment{}) or use other options such as http.Ok ...
	// return Response(200, Comment{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetComment method not implemented")
}

// GetComments - Get comments
func (s *IssueCommentsAPIService) GetComments(ctx context.Context, issueIdOrKey string, startAt int64, maxResults int32, orderBy string, expand string) (ImplResponse, error) {
	// TODO - update GetComments with the required logic for this service method.
	// Add api_issue_comments_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, PageOfComments{}) or use other options such as http.Ok ...
	// return Response(200, PageOfComments{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetComments method not implemented")
}

// GetCommentsByIds - Get comments by IDs
func (s *IssueCommentsAPIService) GetCommentsByIds(ctx context.Context, issueCommentListRequestBean IssueCommentListRequestBean, expand string) (ImplResponse, error) {
	// TODO - update GetCommentsByIds with the required logic for this service method.
	// Add api_issue_comments_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, PageBeanComment{}) or use other options such as http.Ok ...
	// return Response(200, PageBeanComment{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetCommentsByIds method not implemented")
}

// UpdateComment - Update comment
func (s *IssueCommentsAPIService) UpdateComment(ctx context.Context, issueIdOrKey string, id string, comment Comment, notifyUsers bool, overrideEditableFlag bool, expand string) (ImplResponse, error) {
	// TODO - update UpdateComment with the required logic for this service method.
	// Add api_issue_comments_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Comment{}) or use other options such as http.Ok ...
	// return Response(200, Comment{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateComment method not implemented")
}
