/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * API version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// ProjectTypesAPIService is a service that implements the logic for the ProjectTypesAPIServicer
// This service should implement the business logic for every endpoint for the ProjectTypesAPI API.
// Include any external packages or services that will be required by this service.
type ProjectTypesAPIService struct {
}

// NewProjectTypesAPIService creates a default api service
func NewProjectTypesAPIService() ProjectTypesAPIServicer {
	return &ProjectTypesAPIService{}
}

// GetAccessibleProjectTypeByKey - Get accessible project type by key
func (s *ProjectTypesAPIService) GetAccessibleProjectTypeByKey(ctx context.Context, projectTypeKey string) (ImplResponse, error) {
	// TODO - update GetAccessibleProjectTypeByKey with the required logic for this service method.
	// Add api_project_types_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, ProjectType{}) or use other options such as http.Ok ...
	// return Response(200, ProjectType{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetAccessibleProjectTypeByKey method not implemented")
}

// GetAllAccessibleProjectTypes - Get licensed project types
func (s *ProjectTypesAPIService) GetAllAccessibleProjectTypes(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetAllAccessibleProjectTypes with the required logic for this service method.
	// Add api_project_types_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []ProjectType{}) or use other options such as http.Ok ...
	// return Response(200, []ProjectType{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetAllAccessibleProjectTypes method not implemented")
}

// GetAllProjectTypes - Get all project types
func (s *ProjectTypesAPIService) GetAllProjectTypes(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetAllProjectTypes with the required logic for this service method.
	// Add api_project_types_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []ProjectType{}) or use other options such as http.Ok ...
	// return Response(200, []ProjectType{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetAllProjectTypes method not implemented")
}

// GetProjectTypeByKey - Get project type by key
func (s *ProjectTypesAPIService) GetProjectTypeByKey(ctx context.Context, projectTypeKey string) (ImplResponse, error) {
	// TODO - update GetProjectTypeByKey with the required logic for this service method.
	// Add api_project_types_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, ProjectType{}) or use other options such as http.Ok ...
	// return Response(200, ProjectType{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetProjectTypeByKey method not implemented")
}
