/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * API version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
	"reflect"
)

// IssuesAPIService is a service that implements the logic for the IssuesAPIServicer
// This service should implement the business logic for every endpoint for the IssuesAPI API.
// Include any external packages or services that will be required by this service.
type IssuesAPIService struct {
}

// NewIssuesAPIService creates a default api service
func NewIssuesAPIService() IssuesAPIServicer {
	return &IssuesAPIService{}
}

// AssignIssue - Assign issue
func (s *IssuesAPIService) AssignIssue(ctx context.Context, issueIdOrKey string, user User) (ImplResponse, error) {
	// TODO - update AssignIssue with the required logic for this service method.
	// Add api_issues_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, interface{}{}) or use other options such as http.Ok ...
	// return Response(204, interface{}{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("AssignIssue method not implemented")
}

// CreateIssue - Create issue
func (s *IssuesAPIService) CreateIssue(ctx context.Context, issueUpdateDetails IssueUpdateDetails, updateHistory bool) (ImplResponse, error) {
	// TODO - update CreateIssue with the required logic for this service method.
	// Add api_issues_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, CreatedIssue{}) or use other options such as http.Ok ...
	// return Response(201, CreatedIssue{}), nil

	// TODO: Uncomment the next line to return response Response(400, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(400, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(401, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(401, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(403, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(403, ErrorCollection{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateIssue method not implemented")
}

// CreateIssues - Bulk create issue
func (s *IssuesAPIService) CreateIssues(ctx context.Context, issuesUpdateBean IssuesUpdateBean) (ImplResponse, error) {
	// TODO - update CreateIssues with the required logic for this service method.
	// Add api_issues_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, CreatedIssues{}) or use other options such as http.Ok ...
	// return Response(201, CreatedIssues{}), nil

	// TODO: Uncomment the next line to return response Response(400, CreatedIssues{}) or use other options such as http.Ok ...
	// return Response(400, CreatedIssues{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateIssues method not implemented")
}

// DeleteIssue - Delete issue
func (s *IssuesAPIService) DeleteIssue(ctx context.Context, issueIdOrKey string, deleteSubtasks string) (ImplResponse, error) {
	// TODO - update DeleteIssue with the required logic for this service method.
	// Add api_issues_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteIssue method not implemented")
}

// DoTransition - Transition issue
func (s *IssuesAPIService) DoTransition(ctx context.Context, issueIdOrKey string, issueUpdateDetails IssueUpdateDetails) (ImplResponse, error) {
	// TODO - update DoTransition with the required logic for this service method.
	// Add api_issues_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, interface{}{}) or use other options such as http.Ok ...
	// return Response(204, interface{}{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DoTransition method not implemented")
}

// EditIssue - Edit issue
func (s *IssuesAPIService) EditIssue(ctx context.Context, issueIdOrKey string, issueUpdateDetails IssueUpdateDetails, notifyUsers bool, overrideScreenSecurity bool, overrideEditableFlag bool) (ImplResponse, error) {
	// TODO - update EditIssue with the required logic for this service method.
	// Add api_issues_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, interface{}{}) or use other options such as http.Ok ...
	// return Response(204, interface{}{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("EditIssue method not implemented")
}

// GetChangeLogs - Get changelogs
func (s *IssuesAPIService) GetChangeLogs(ctx context.Context, issueIdOrKey string, startAt int32, maxResults int32) (ImplResponse, error) {
	// TODO - update GetChangeLogs with the required logic for this service method.
	// Add api_issues_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, PageBeanChangelog{}) or use other options such as http.Ok ...
	// return Response(200, PageBeanChangelog{}), nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetChangeLogs method not implemented")
}

// GetChangeLogsByIds - Get changelogs by IDs
func (s *IssuesAPIService) GetChangeLogsByIds(ctx context.Context, issueIdOrKey string, issueChangelogIds IssueChangelogIds) (ImplResponse, error) {
	// TODO - update GetChangeLogsByIds with the required logic for this service method.
	// Add api_issues_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, PageOfChangelogs{}) or use other options such as http.Ok ...
	// return Response(200, PageOfChangelogs{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetChangeLogsByIds method not implemented")
}

// GetCreateIssueMeta - Get create issue metadata
func (s *IssuesAPIService) GetCreateIssueMeta(ctx context.Context, projectIds []string, projectKeys []string, issuetypeIds []string, issuetypeNames []string, expand string) (ImplResponse, error) {
	// TODO - update GetCreateIssueMeta with the required logic for this service method.
	// Add api_issues_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, IssueCreateMetadata{}) or use other options such as http.Ok ...
	// return Response(200, IssueCreateMetadata{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetCreateIssueMeta method not implemented")
}

// GetEditIssueMeta - Get edit issue metadata
func (s *IssuesAPIService) GetEditIssueMeta(ctx context.Context, issueIdOrKey string, overrideScreenSecurity bool, overrideEditableFlag bool) (ImplResponse, error) {
	// TODO - update GetEditIssueMeta with the required logic for this service method.
	// Add api_issues_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, IssueUpdateMetadata{}) or use other options such as http.Ok ...
	// return Response(200, IssueUpdateMetadata{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetEditIssueMeta method not implemented")
}

// GetEvents - Get events
func (s *IssuesAPIService) GetEvents(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetEvents with the required logic for this service method.
	// Add api_issues_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []IssueEvent{}) or use other options such as http.Ok ...
	// return Response(200, []IssueEvent{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetEvents method not implemented")
}

// GetIssue - Get issue
func (s *IssuesAPIService) GetIssue(ctx context.Context, issueIdOrKey string, fields []string, fieldsByKeys bool, expand string, properties []string, updateHistory bool) (ImplResponse, error) {
	// TODO - update GetIssue with the required logic for this service method.
	// Add api_issues_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, IssueBean{}) or use other options such as http.Ok ...
	// return Response(200, IssueBean{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetIssue method not implemented")
}

// GetTransitions - Get transitions
func (s *IssuesAPIService) GetTransitions(ctx context.Context, issueIdOrKey string, expand string, transitionId string, skipRemoteOnlyCondition bool, includeUnavailableTransitions bool, sortByOpsBarAndStatus bool) (ImplResponse, error) {
	// TODO - update GetTransitions with the required logic for this service method.
	// Add api_issues_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Transitions{}) or use other options such as http.Ok ...
	// return Response(200, Transitions{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetTransitions method not implemented")
}

// Notify - Send notification for issue
func (s *IssuesAPIService) Notify(ctx context.Context, issueIdOrKey string, notification Notification) (ImplResponse, error) {
	// TODO - update Notify with the required logic for this service method.
	// Add api_issues_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, interface{}{}) or use other options such as http.Ok ...
	// return Response(204, interface{}{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("Notify method not implemented")
}
