/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * API version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// IssueTypesAPIService is a service that implements the logic for the IssueTypesAPIServicer
// This service should implement the business logic for every endpoint for the IssueTypesAPI API.
// Include any external packages or services that will be required by this service.
type IssueTypesAPIService struct {
}

// NewIssueTypesAPIService creates a default api service
func NewIssueTypesAPIService() IssueTypesAPIServicer {
	return &IssueTypesAPIService{}
}

// CreateIssueType - Create issue type
func (s *IssueTypesAPIService) CreateIssueType(ctx context.Context, issueTypeCreateBean IssueTypeCreateBean) (ImplResponse, error) {
	// TODO - update CreateIssueType with the required logic for this service method.
	// Add api_issue_types_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, IssueTypeDetails{}) or use other options such as http.Ok ...
	// return Response(201, IssueTypeDetails{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(409, {}) or use other options such as http.Ok ...
	// return Response(409, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateIssueType method not implemented")
}

// CreateIssueTypeAvatar - Load issue type avatar
func (s *IssueTypesAPIService) CreateIssueTypeAvatar(ctx context.Context, id string, size int32, body *interface{}, x int32, y int32) (ImplResponse, error) {
	// TODO - update CreateIssueTypeAvatar with the required logic for this service method.
	// Add api_issue_types_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, Avatar{}) or use other options such as http.Ok ...
	// return Response(201, Avatar{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateIssueTypeAvatar method not implemented")
}

// DeleteIssueType - Delete issue type
func (s *IssueTypesAPIService) DeleteIssueType(ctx context.Context, id string, alternativeIssueTypeId string) (ImplResponse, error) {
	// TODO - update DeleteIssueType with the required logic for this service method.
	// Add api_issue_types_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	// TODO: Uncomment the next line to return response Response(409, {}) or use other options such as http.Ok ...
	// return Response(409, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteIssueType method not implemented")
}

// GetAlternativeIssueTypes - Get alternative issue types
func (s *IssueTypesAPIService) GetAlternativeIssueTypes(ctx context.Context, id string) (ImplResponse, error) {
	// TODO - update GetAlternativeIssueTypes with the required logic for this service method.
	// Add api_issue_types_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []IssueTypeDetails{}) or use other options such as http.Ok ...
	// return Response(200, []IssueTypeDetails{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetAlternativeIssueTypes method not implemented")
}

// GetIssueAllTypes - Get all issue types for user
func (s *IssueTypesAPIService) GetIssueAllTypes(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetIssueAllTypes with the required logic for this service method.
	// Add api_issue_types_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []IssueTypeDetails{}) or use other options such as http.Ok ...
	// return Response(200, []IssueTypeDetails{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetIssueAllTypes method not implemented")
}

// GetIssueType - Get issue type
func (s *IssueTypesAPIService) GetIssueType(ctx context.Context, id string) (ImplResponse, error) {
	// TODO - update GetIssueType with the required logic for this service method.
	// Add api_issue_types_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, IssueTypeDetails{}) or use other options such as http.Ok ...
	// return Response(200, IssueTypeDetails{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetIssueType method not implemented")
}

// GetIssueTypesForProject - Get issue types for project
func (s *IssueTypesAPIService) GetIssueTypesForProject(ctx context.Context, projectId int64, level int32) (ImplResponse, error) {
	// TODO - update GetIssueTypesForProject with the required logic for this service method.
	// Add api_issue_types_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []IssueTypeDetails{}) or use other options such as http.Ok ...
	// return Response(200, []IssueTypeDetails{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetIssueTypesForProject method not implemented")
}

// UpdateIssueType - Update issue type
func (s *IssueTypesAPIService) UpdateIssueType(ctx context.Context, id string, issueTypeUpdateBean IssueTypeUpdateBean) (ImplResponse, error) {
	// TODO - update UpdateIssueType with the required logic for this service method.
	// Add api_issue_types_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, IssueTypeDetails{}) or use other options such as http.Ok ...
	// return Response(200, IssueTypeDetails{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	// TODO: Uncomment the next line to return response Response(409, {}) or use other options such as http.Ok ...
	// return Response(409, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateIssueType method not implemented")
}
