/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * API version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// JQLAPIService is a service that implements the logic for the JQLAPIServicer
// This service should implement the business logic for every endpoint for the JQLAPI API.
// Include any external packages or services that will be required by this service.
type JQLAPIService struct {
}

// NewJQLAPIService creates a default api service
func NewJQLAPIService() JQLAPIServicer {
	return &JQLAPIService{}
}

// GetAutoComplete - Get field reference data (GET)
func (s *JQLAPIService) GetAutoComplete(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetAutoComplete with the required logic for this service method.
	// Add api_jql_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, JqlReferenceData{}) or use other options such as http.Ok ...
	// return Response(200, JqlReferenceData{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetAutoComplete method not implemented")
}

// GetAutoCompletePost - Get field reference data (POST)
func (s *JQLAPIService) GetAutoCompletePost(ctx context.Context, searchAutoCompleteFilter SearchAutoCompleteFilter) (ImplResponse, error) {
	// TODO - update GetAutoCompletePost with the required logic for this service method.
	// Add api_jql_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, JqlReferenceData{}) or use other options such as http.Ok ...
	// return Response(200, JqlReferenceData{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetAutoCompletePost method not implemented")
}

// GetFieldAutoCompleteForQueryString - Get field auto complete suggestions
func (s *JQLAPIService) GetFieldAutoCompleteForQueryString(ctx context.Context, fieldName string, fieldValue string, predicateName string, predicateValue string) (ImplResponse, error) {
	// TODO - update GetFieldAutoCompleteForQueryString with the required logic for this service method.
	// Add api_jql_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, AutoCompleteSuggestions{}) or use other options such as http.Ok ...
	// return Response(200, AutoCompleteSuggestions{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetFieldAutoCompleteForQueryString method not implemented")
}

// MigrateQueries - Convert user identifiers to account IDs in JQL queries
func (s *JQLAPIService) MigrateQueries(ctx context.Context, jqlPersonalDataMigrationRequest JqlPersonalDataMigrationRequest) (ImplResponse, error) {
	// TODO - update MigrateQueries with the required logic for this service method.
	// Add api_jql_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, ConvertedJqlQueries{}) or use other options such as http.Ok ...
	// return Response(200, ConvertedJqlQueries{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("MigrateQueries method not implemented")
}

// ParseJqlQueries - Parse JQL query
func (s *JQLAPIService) ParseJqlQueries(ctx context.Context, jqlQueriesToParse JqlQueriesToParse, validation string) (ImplResponse, error) {
	// TODO - update ParseJqlQueries with the required logic for this service method.
	// Add api_jql_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, ParsedJqlQueries{}) or use other options such as http.Ok ...
	// return Response(200, ParsedJqlQueries{}), nil

	// TODO: Uncomment the next line to return response Response(400, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(400, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("ParseJqlQueries method not implemented")
}

// SanitiseJqlQueries - Sanitize JQL queries
func (s *JQLAPIService) SanitiseJqlQueries(ctx context.Context, jqlQueriesToSanitize JqlQueriesToSanitize) (ImplResponse, error) {
	// TODO - update SanitiseJqlQueries with the required logic for this service method.
	// Add api_jql_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, SanitizedJqlQueries{}) or use other options such as http.Ok ...
	// return Response(200, SanitizedJqlQueries{}), nil

	// TODO: Uncomment the next line to return response Response(400, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(400, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(401, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(401, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(403, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(403, ErrorCollection{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("SanitiseJqlQueries method not implemented")
}
