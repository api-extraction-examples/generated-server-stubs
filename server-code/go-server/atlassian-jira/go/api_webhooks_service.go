/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * API version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// WebhooksAPIService is a service that implements the logic for the WebhooksAPIServicer
// This service should implement the business logic for every endpoint for the WebhooksAPI API.
// Include any external packages or services that will be required by this service.
type WebhooksAPIService struct {
}

// NewWebhooksAPIService creates a default api service
func NewWebhooksAPIService() WebhooksAPIServicer {
	return &WebhooksAPIService{}
}

// DeleteWebhookById - Delete webhooks by ID
func (s *WebhooksAPIService) DeleteWebhookById(ctx context.Context, containerForWebhookIds ContainerForWebhookIds) (ImplResponse, error) {
	// TODO - update DeleteWebhookById with the required logic for this service method.
	// Add api_webhooks_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(202, {}) or use other options such as http.Ok ...
	// return Response(202, nil),nil

	// TODO: Uncomment the next line to return response Response(400, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(400, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(403, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(403, ErrorCollection{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteWebhookById method not implemented")
}

// GetDynamicWebhooksForApp - Get dynamic webhooks for app
func (s *WebhooksAPIService) GetDynamicWebhooksForApp(ctx context.Context, startAt int64, maxResults int32) (ImplResponse, error) {
	// TODO - update GetDynamicWebhooksForApp with the required logic for this service method.
	// Add api_webhooks_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, PageBeanWebhook{}) or use other options such as http.Ok ...
	// return Response(200, PageBeanWebhook{}), nil

	// TODO: Uncomment the next line to return response Response(400, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(400, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(403, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(403, ErrorCollection{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetDynamicWebhooksForApp method not implemented")
}

// GetFailedWebhooks - Get failed webhooks
func (s *WebhooksAPIService) GetFailedWebhooks(ctx context.Context, maxResults int32, after int64) (ImplResponse, error) {
	// TODO - update GetFailedWebhooks with the required logic for this service method.
	// Add api_webhooks_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, FailedWebhooks{}) or use other options such as http.Ok ...
	// return Response(200, FailedWebhooks{}), nil

	// TODO: Uncomment the next line to return response Response(400, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(400, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(403, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(403, ErrorCollection{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetFailedWebhooks method not implemented")
}

// RefreshWebhooks - Extend webhook life
func (s *WebhooksAPIService) RefreshWebhooks(ctx context.Context, containerForWebhookIds ContainerForWebhookIds) (ImplResponse, error) {
	// TODO - update RefreshWebhooks with the required logic for this service method.
	// Add api_webhooks_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, WebhooksExpirationDate{}) or use other options such as http.Ok ...
	// return Response(200, WebhooksExpirationDate{}), nil

	// TODO: Uncomment the next line to return response Response(400, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(400, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(403, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(403, ErrorCollection{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RefreshWebhooks method not implemented")
}

// RegisterDynamicWebhooks - Register dynamic webhooks
func (s *WebhooksAPIService) RegisterDynamicWebhooks(ctx context.Context, webhookRegistrationDetails WebhookRegistrationDetails) (ImplResponse, error) {
	// TODO - update RegisterDynamicWebhooks with the required logic for this service method.
	// Add api_webhooks_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, ContainerForRegisteredWebhooks{}) or use other options such as http.Ok ...
	// return Response(200, ContainerForRegisteredWebhooks{}), nil

	// TODO: Uncomment the next line to return response Response(400, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(400, ErrorCollection{}), nil

	// TODO: Uncomment the next line to return response Response(403, ErrorCollection{}) or use other options such as http.Ok ...
	// return Response(403, ErrorCollection{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RegisterDynamicWebhooks method not implemented")
}
