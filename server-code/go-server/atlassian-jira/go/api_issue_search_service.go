/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * API version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
	"reflect"
)

// IssueSearchAPIService is a service that implements the logic for the IssueSearchAPIServicer
// This service should implement the business logic for every endpoint for the IssueSearchAPI API.
// Include any external packages or services that will be required by this service.
type IssueSearchAPIService struct {
}

// NewIssueSearchAPIService creates a default api service
func NewIssueSearchAPIService() IssueSearchAPIServicer {
	return &IssueSearchAPIService{}
}

// GetIssuePickerResource - Get issue picker suggestions
func (s *IssueSearchAPIService) GetIssuePickerResource(ctx context.Context, query string, currentJQL string, currentIssueKey string, currentProjectId string, showSubTasks bool, showSubTaskParent bool) (ImplResponse, error) {
	// TODO - update GetIssuePickerResource with the required logic for this service method.
	// Add api_issue_search_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, IssuePickerSuggestions{}) or use other options such as http.Ok ...
	// return Response(200, IssuePickerSuggestions{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetIssuePickerResource method not implemented")
}

// MatchIssues - Check issues against JQL
func (s *IssueSearchAPIService) MatchIssues(ctx context.Context, issuesAndJqlQueries IssuesAndJqlQueries) (ImplResponse, error) {
	// TODO - update MatchIssues with the required logic for this service method.
	// Add api_issue_search_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, IssueMatches{}) or use other options such as http.Ok ...
	// return Response(200, IssueMatches{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("MatchIssues method not implemented")
}

// SearchForIssuesUsingJql - Search for issues using JQL (GET)
func (s *IssueSearchAPIService) SearchForIssuesUsingJql(ctx context.Context, jql string, startAt int32, maxResults int32, validateQuery string, fields []string, expand string, properties []string, fieldsByKeys bool) (ImplResponse, error) {
	// TODO - update SearchForIssuesUsingJql with the required logic for this service method.
	// Add api_issue_search_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, SearchResults{}) or use other options such as http.Ok ...
	// return Response(200, SearchResults{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("SearchForIssuesUsingJql method not implemented")
}

// SearchForIssuesUsingJqlPost - Search for issues using JQL (POST)
func (s *IssueSearchAPIService) SearchForIssuesUsingJqlPost(ctx context.Context, searchRequestBean SearchRequestBean) (ImplResponse, error) {
	// TODO - update SearchForIssuesUsingJqlPost with the required logic for this service method.
	// Add api_issue_search_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, SearchResults{}) or use other options such as http.Ok ...
	// return Response(200, SearchResults{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("SearchForIssuesUsingJqlPost method not implemented")
}
