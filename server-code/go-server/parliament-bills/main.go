/*
 * Bills API
 *
 * API to get and search for information regarding Bills, their stages, associated amendments and publications.
 *
 * API version: v1
 * Contact: softwareengineering@parliament.uk
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package main

import (
	"log"
	"net/http"

	openapi "github.com/GIT_USER_ID/GIT_REPO_ID/go"
)

func main() {
	log.Printf("Server started")

	AmendmentsAPIService := openapi.NewAmendmentsAPIService()
	AmendmentsAPIController := openapi.NewAmendmentsAPIController(AmendmentsAPIService)

	BillNewsAPIService := openapi.NewBillNewsAPIService()
	BillNewsAPIController := openapi.NewBillNewsAPIController(BillNewsAPIService)

	BillTypesAPIService := openapi.NewBillTypesAPIService()
	BillTypesAPIController := openapi.NewBillTypesAPIController(BillTypesAPIService)

	BillsAPIService := openapi.NewBillsAPIService()
	BillsAPIController := openapi.NewBillsAPIController(BillsAPIService)

	DocumentsAPIService := openapi.NewDocumentsAPIService()
	DocumentsAPIController := openapi.NewDocumentsAPIController(DocumentsAPIService)

	PublicationTypesAPIService := openapi.NewPublicationTypesAPIService()
	PublicationTypesAPIController := openapi.NewPublicationTypesAPIController(PublicationTypesAPIService)

	PublicationsAPIService := openapi.NewPublicationsAPIService()
	PublicationsAPIController := openapi.NewPublicationsAPIController(PublicationsAPIService)

	RssAPIService := openapi.NewRssAPIService()
	RssAPIController := openapi.NewRssAPIController(RssAPIService)

	SittingsAPIService := openapi.NewSittingsAPIService()
	SittingsAPIController := openapi.NewSittingsAPIController(SittingsAPIService)

	StagesAPIService := openapi.NewStagesAPIService()
	StagesAPIController := openapi.NewStagesAPIController(StagesAPIService)

	router := openapi.NewRouter(AmendmentsAPIController, BillNewsAPIController, BillTypesAPIController, BillsAPIController, DocumentsAPIController, PublicationTypesAPIController, PublicationsAPIController, RssAPIController, SittingsAPIController, StagesAPIController)

	log.Fatal(http.ListenAndServe(":8080", router))
}
