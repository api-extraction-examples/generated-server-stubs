/*
 * Bills API
 *
 * API to get and search for information regarding Bills, their stages, associated amendments and publications.
 *
 * API version: v1
 * Contact: softwareengineering@parliament.uk
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi




type AmendmentDetail struct {

	AmendmentId int32 `json:"amendmentId,omitempty"`

	AmendmentLines *[]AmendmentLine `json:"amendmentLines,omitempty"`

	AmendmentNote *string `json:"amendmentNote,omitempty"`

	AmendmentPosition *string `json:"amendmentPosition,omitempty"`

	AmendmentType AmendmentType `json:"amendmentType,omitempty"`

	BillId int32 `json:"billId,omitempty"`

	BillStageId int32 `json:"billStageId,omitempty"`

	Clause *int32 `json:"clause,omitempty"`

	Decision AmendmentDecision `json:"decision,omitempty"`

	ExplanatoryText *string `json:"explanatoryText,omitempty"`

	ExplanatoryTextPrefix *string `json:"explanatoryTextPrefix,omitempty"`

	LineNumber *int32 `json:"lineNumber,omitempty"`

	MarshalledListText *string `json:"marshalledListText,omitempty"`

	PageNumber *int32 `json:"pageNumber,omitempty"`

	Schedule *int32 `json:"schedule,omitempty"`

	Sponsors *[]AmendmentMember `json:"sponsors,omitempty"`
}

// AssertAmendmentDetailRequired checks if the required fields are not zero-ed
func AssertAmendmentDetailRequired(obj AmendmentDetail) error {
	if obj.AmendmentLines != nil {
		for _, el := range *obj.AmendmentLines {
			if err := AssertAmendmentLineRequired(el); err != nil {
				return err
			}
		}
	}
	if obj.Sponsors != nil {
		for _, el := range *obj.Sponsors {
			if err := AssertAmendmentMemberRequired(el); err != nil {
				return err
			}
		}
	}
	return nil
}

// AssertAmendmentDetailConstraints checks if the values respects the defined constraints
func AssertAmendmentDetailConstraints(obj AmendmentDetail) error {
	return nil
}
