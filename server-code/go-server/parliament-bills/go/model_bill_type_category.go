/*
 * Bills API
 *
 * API to get and search for information regarding Bills, their stages, associated amendments and publications.
 *
 * API version: v1
 * Contact: softwareengineering@parliament.uk
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"fmt"
)



type BillTypeCategory string

// List of BillTypeCategory
const (
	PUBLIC BillTypeCategory = "Public"
	PRIVATE BillTypeCategory = "Private"
	HYBRID BillTypeCategory = "Hybrid"
)

// AllowedBillTypeCategoryEnumValues is all the allowed values of BillTypeCategory enum
var AllowedBillTypeCategoryEnumValues = []BillTypeCategory{
	"Public",
	"Private",
	"Hybrid",
}

// validBillTypeCategoryEnumValue provides a map of BillTypeCategorys for fast verification of use input
var validBillTypeCategoryEnumValues = map[BillTypeCategory]struct{}{
	"Public": {},
	"Private": {},
	"Hybrid": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v BillTypeCategory) IsValid() bool {
	_, ok := validBillTypeCategoryEnumValues[v]
	return ok
}

// NewBillTypeCategoryFromValue returns a pointer to a valid BillTypeCategory
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewBillTypeCategoryFromValue(v string) (BillTypeCategory, error) {
	ev := BillTypeCategory(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for BillTypeCategory: valid values are %v", v, AllowedBillTypeCategoryEnumValues)
	}
}



// AssertBillTypeCategoryRequired checks if the required fields are not zero-ed
func AssertBillTypeCategoryRequired(obj BillTypeCategory) error {
	return nil
}

// AssertBillTypeCategoryConstraints checks if the values respects the defined constraints
func AssertBillTypeCategoryConstraints(obj BillTypeCategory) error {
	return nil
}
