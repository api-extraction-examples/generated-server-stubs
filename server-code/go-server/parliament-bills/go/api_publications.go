/*
 * Bills API
 *
 * API to get and search for information regarding Bills, their stages, associated amendments and publications.
 *
 * API version: v1
 * Contact: softwareengineering@parliament.uk
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// PublicationsAPIController binds http requests to an api service and writes the service results to the http response
type PublicationsAPIController struct {
	service PublicationsAPIServicer
	errorHandler ErrorHandler
}

// PublicationsAPIOption for how the controller is set up.
type PublicationsAPIOption func(*PublicationsAPIController)

// WithPublicationsAPIErrorHandler inject ErrorHandler into controller
func WithPublicationsAPIErrorHandler(h ErrorHandler) PublicationsAPIOption {
	return func(c *PublicationsAPIController) {
		c.errorHandler = h
	}
}

// NewPublicationsAPIController creates a default api controller
func NewPublicationsAPIController(s PublicationsAPIServicer, opts ...PublicationsAPIOption) Router {
	controller := &PublicationsAPIController{
		service:      s,
		errorHandler: DefaultErrorHandler,
	}

	for _, opt := range opts {
		opt(controller)
	}

	return controller
}

// Routes returns all the api routes for the PublicationsAPIController
func (c *PublicationsAPIController) Routes() Routes {
	return Routes{
		"ApiV1BillsBillIdStagesStageIdPublicationsGet": Route{
			strings.ToUpper("Get"),
			"/api/v1/Bills/{billId}/Stages/{stageId}/Publications",
			c.ApiV1BillsBillIdStagesStageIdPublicationsGet,
		},
		"GetBillPublication": Route{
			strings.ToUpper("Get"),
			"/api/v1/Bills/{billId}/Publications",
			c.GetBillPublication,
		},
	}
}

// ApiV1BillsBillIdStagesStageIdPublicationsGet - Return a list of Bill stage publications.
func (c *PublicationsAPIController) ApiV1BillsBillIdStagesStageIdPublicationsGet(w http.ResponseWriter, r *http.Request) {
	params := mux.Vars(r)
	billIdParam, err := parseNumericParameter[int32](
		params["billId"],
		WithRequire[int32](parseInt32),
	)
	if err != nil {
		c.errorHandler(w, r, &ParsingError{Err: err}, nil)
		return
	}
	stageIdParam, err := parseNumericParameter[int32](
		params["stageId"],
		WithRequire[int32](parseInt32),
	)
	if err != nil {
		c.errorHandler(w, r, &ParsingError{Err: err}, nil)
		return
	}
	result, err := c.service.ApiV1BillsBillIdStagesStageIdPublicationsGet(r.Context(), billIdParam, stageIdParam)
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)
}

// GetBillPublication - Return a list of Bill publications.
func (c *PublicationsAPIController) GetBillPublication(w http.ResponseWriter, r *http.Request) {
	params := mux.Vars(r)
	billIdParam, err := parseNumericParameter[int32](
		params["billId"],
		WithRequire[int32](parseInt32),
	)
	if err != nil {
		c.errorHandler(w, r, &ParsingError{Err: err}, nil)
		return
	}
	result, err := c.service.GetBillPublication(r.Context(), billIdParam)
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)
}
