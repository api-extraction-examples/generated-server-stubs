/*
 * Bills API
 *
 * API to get and search for information regarding Bills, their stages, associated amendments and publications.
 *
 * API version: v1
 * Contact: softwareengineering@parliament.uk
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"fmt"
)



type OriginatingHouse string

// List of OriginatingHouse
const (
	ALL OriginatingHouse = "All"
	COMMONS OriginatingHouse = "Commons"
	LORDS OriginatingHouse = "Lords"
)

// AllowedOriginatingHouseEnumValues is all the allowed values of OriginatingHouse enum
var AllowedOriginatingHouseEnumValues = []OriginatingHouse{
	"All",
	"Commons",
	"Lords",
}

// validOriginatingHouseEnumValue provides a map of OriginatingHouses for fast verification of use input
var validOriginatingHouseEnumValues = map[OriginatingHouse]struct{}{
	"All": {},
	"Commons": {},
	"Lords": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OriginatingHouse) IsValid() bool {
	_, ok := validOriginatingHouseEnumValues[v]
	return ok
}

// NewOriginatingHouseFromValue returns a pointer to a valid OriginatingHouse
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOriginatingHouseFromValue(v string) (OriginatingHouse, error) {
	ev := OriginatingHouse(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for OriginatingHouse: valid values are %v", v, AllowedOriginatingHouseEnumValues)
	}
}



// AssertOriginatingHouseRequired checks if the required fields are not zero-ed
func AssertOriginatingHouseRequired(obj OriginatingHouse) error {
	return nil
}

// AssertOriginatingHouseConstraints checks if the values respects the defined constraints
func AssertOriginatingHouseConstraints(obj OriginatingHouse) error {
	return nil
}
