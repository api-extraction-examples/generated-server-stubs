/*
 * Bills API
 *
 * API to get and search for information regarding Bills, their stages, associated amendments and publications.
 *
 * API version: v1
 * Contact: softwareengineering@parliament.uk
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// RssAPIService is a service that implements the logic for the RssAPIServicer
// This service should implement the business logic for every endpoint for the RssAPI API.
// Include any external packages or services that will be required by this service.
type RssAPIService struct {
}

// NewRssAPIService creates a default api service
func NewRssAPIService() RssAPIServicer {
	return &RssAPIService{}
}

// ApiV1RssAllbillsRssGet - Returns an Rss feed of all Bills.
func (s *RssAPIService) ApiV1RssAllbillsRssGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update ApiV1RssAllbillsRssGet with the required logic for this service method.
	// Add api_rss_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("ApiV1RssAllbillsRssGet method not implemented")
}

// ApiV1RssBillsIdRssGet - Returns an Rss feed of a certain Bill.
func (s *RssAPIService) ApiV1RssBillsIdRssGet(ctx context.Context, id int32) (ImplResponse, error) {
	// TODO - update ApiV1RssBillsIdRssGet with the required logic for this service method.
	// Add api_rss_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(400, ProblemDetails{}) or use other options such as http.Ok ...
	// return Response(400, ProblemDetails{}), nil

	// TODO: Uncomment the next line to return response Response(404, ProblemDetails{}) or use other options such as http.Ok ...
	// return Response(404, ProblemDetails{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ApiV1RssBillsIdRssGet method not implemented")
}

// ApiV1RssPrivatebillsRssGet - Returns an Rss feed of private Bills.
func (s *RssAPIService) ApiV1RssPrivatebillsRssGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update ApiV1RssPrivatebillsRssGet with the required logic for this service method.
	// Add api_rss_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("ApiV1RssPrivatebillsRssGet method not implemented")
}

// ApiV1RssPublicbillsRssGet - Returns an Rss feed of public Bills.
func (s *RssAPIService) ApiV1RssPublicbillsRssGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update ApiV1RssPublicbillsRssGet with the required logic for this service method.
	// Add api_rss_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("ApiV1RssPublicbillsRssGet method not implemented")
}
