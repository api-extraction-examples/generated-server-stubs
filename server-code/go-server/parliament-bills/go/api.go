/*
 * Bills API
 *
 * API to get and search for information regarding Bills, their stages, associated amendments and publications.
 *
 * API version: v1
 * Contact: softwareengineering@parliament.uk
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"reflect"
	"time"
)



// AmendmentsAPIRouter defines the required methods for binding the api requests to a responses for the AmendmentsAPI
// The AmendmentsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AmendmentsAPIServicer to perform the required actions, then write the service results to the http response.
type AmendmentsAPIRouter interface { 
	GetAmendment(http.ResponseWriter, *http.Request)
	GetAmendments(http.ResponseWriter, *http.Request)
}
// BillNewsAPIRouter defines the required methods for binding the api requests to a responses for the BillNewsAPI
// The BillNewsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BillNewsAPIServicer to perform the required actions, then write the service results to the http response.
type BillNewsAPIRouter interface { 
	GetNewsArticles(http.ResponseWriter, *http.Request)
}
// BillTypesAPIRouter defines the required methods for binding the api requests to a responses for the BillTypesAPI
// The BillTypesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BillTypesAPIServicer to perform the required actions, then write the service results to the http response.
type BillTypesAPIRouter interface { 
	ApiV1BillTypesGet(http.ResponseWriter, *http.Request)
}
// BillsAPIRouter defines the required methods for binding the api requests to a responses for the BillsAPI
// The BillsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BillsAPIServicer to perform the required actions, then write the service results to the http response.
type BillsAPIRouter interface { 
	ApiV1BillsBillIdStagesGet(http.ResponseWriter, *http.Request)
	GetBill(http.ResponseWriter, *http.Request)
	GetBillStageDetails(http.ResponseWriter, *http.Request)
	GetBills(http.ResponseWriter, *http.Request)
}
// DocumentsAPIRouter defines the required methods for binding the api requests to a responses for the DocumentsAPI
// The DocumentsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a DocumentsAPIServicer to perform the required actions, then write the service results to the http response.
type DocumentsAPIRouter interface { 
	ApiV1PublicationsPublicationIdDocumentsDocumentIdDownloadGet(http.ResponseWriter, *http.Request)
	ApiV1PublicationsPublicationIdDocumentsDocumentIdGet(http.ResponseWriter, *http.Request)
}
// PublicationTypesAPIRouter defines the required methods for binding the api requests to a responses for the PublicationTypesAPI
// The PublicationTypesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a PublicationTypesAPIServicer to perform the required actions, then write the service results to the http response.
type PublicationTypesAPIRouter interface { 
	ApiV1PublicationTypesGet(http.ResponseWriter, *http.Request)
}
// PublicationsAPIRouter defines the required methods for binding the api requests to a responses for the PublicationsAPI
// The PublicationsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a PublicationsAPIServicer to perform the required actions, then write the service results to the http response.
type PublicationsAPIRouter interface { 
	ApiV1BillsBillIdStagesStageIdPublicationsGet(http.ResponseWriter, *http.Request)
	GetBillPublication(http.ResponseWriter, *http.Request)
}
// RssAPIRouter defines the required methods for binding the api requests to a responses for the RssAPI
// The RssAPIRouter implementation should parse necessary information from the http request,
// pass the data to a RssAPIServicer to perform the required actions, then write the service results to the http response.
type RssAPIRouter interface { 
	ApiV1RssAllbillsRssGet(http.ResponseWriter, *http.Request)
	ApiV1RssBillsIdRssGet(http.ResponseWriter, *http.Request)
	ApiV1RssPrivatebillsRssGet(http.ResponseWriter, *http.Request)
	ApiV1RssPublicbillsRssGet(http.ResponseWriter, *http.Request)
}
// SittingsAPIRouter defines the required methods for binding the api requests to a responses for the SittingsAPI
// The SittingsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a SittingsAPIServicer to perform the required actions, then write the service results to the http response.
type SittingsAPIRouter interface { 
	GetSittings(http.ResponseWriter, *http.Request)
}
// StagesAPIRouter defines the required methods for binding the api requests to a responses for the StagesAPI
// The StagesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a StagesAPIServicer to perform the required actions, then write the service results to the http response.
type StagesAPIRouter interface { 
	ApiV1StagesGet(http.ResponseWriter, *http.Request)
}


// AmendmentsAPIServicer defines the api actions for the AmendmentsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AmendmentsAPIServicer interface { 
	GetAmendment(context.Context, int32, int32, int32) (ImplResponse, error)
	GetAmendments(context.Context, int32, int32, string, Decision, int32, int32, int32) (ImplResponse, error)
}


// BillNewsAPIServicer defines the api actions for the BillNewsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BillNewsAPIServicer interface { 
	GetNewsArticles(context.Context, int32, int32, int32) (ImplResponse, error)
}


// BillTypesAPIServicer defines the api actions for the BillTypesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BillTypesAPIServicer interface { 
	ApiV1BillTypesGet(context.Context, BillTypeCategory, int32, int32) (ImplResponse, error)
}


// BillsAPIServicer defines the api actions for the BillsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BillsAPIServicer interface { 
	ApiV1BillsBillIdStagesGet(context.Context, int32, int32, int32) (ImplResponse, error)
	GetBill(context.Context, int32) (ImplResponse, error)
	GetBillStageDetails(context.Context, int32, int32) (ImplResponse, error)
	GetBills(context.Context, string, int32, House, OriginatingHouse, int32, int32, []int32, []int32, bool, bool, []int32, BillSortOrder, []int32, int32, int32) (ImplResponse, error)
}


// DocumentsAPIServicer defines the api actions for the DocumentsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type DocumentsAPIServicer interface { 
	ApiV1PublicationsPublicationIdDocumentsDocumentIdDownloadGet(context.Context, int32, int32) (ImplResponse, error)
	ApiV1PublicationsPublicationIdDocumentsDocumentIdGet(context.Context, int32, int32) (ImplResponse, error)
}


// PublicationTypesAPIServicer defines the api actions for the PublicationTypesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type PublicationTypesAPIServicer interface { 
	ApiV1PublicationTypesGet(context.Context, int32, int32) (ImplResponse, error)
}


// PublicationsAPIServicer defines the api actions for the PublicationsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type PublicationsAPIServicer interface { 
	ApiV1BillsBillIdStagesStageIdPublicationsGet(context.Context, int32, int32) (ImplResponse, error)
	GetBillPublication(context.Context, int32) (ImplResponse, error)
}


// RssAPIServicer defines the api actions for the RssAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type RssAPIServicer interface { 
	ApiV1RssAllbillsRssGet(context.Context) (ImplResponse, error)
	ApiV1RssBillsIdRssGet(context.Context, int32) (ImplResponse, error)
	ApiV1RssPrivatebillsRssGet(context.Context) (ImplResponse, error)
	ApiV1RssPublicbillsRssGet(context.Context) (ImplResponse, error)
}


// SittingsAPIServicer defines the api actions for the SittingsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type SittingsAPIServicer interface { 
	GetSittings(context.Context, House, time.Time, time.Time, int32, int32) (ImplResponse, error)
}


// StagesAPIServicer defines the api actions for the StagesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type StagesAPIServicer interface { 
	ApiV1StagesGet(context.Context, int32, int32) (ImplResponse, error)
}
