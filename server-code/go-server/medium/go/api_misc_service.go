/*
 * Medium API
 *
 * Medium API helps you to quickly extract data from Medium's Website (https://medium.com).   You can gather data related to users, publications, articles (including its textual content), latest posts &amp; top writers within a topic/niche, etcâ€¦ 
 *
 * API version: 1.0
 * Contact: nishu@mediumapi.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// MiscAPIService is a service that implements the logic for the MiscAPIServicer
// This service should implement the business logic for every endpoint for the MiscAPI API.
// Include any external packages or services that will be required by this service.
type MiscAPIService struct {
}

// NewMiscAPIService creates a default api service
func NewMiscAPIService() MiscAPIServicer {
	return &MiscAPIService{}
}

// LatestpostsTopicSlugGet - Get Latest Posts
func (s *MiscAPIService) LatestpostsTopicSlugGet(ctx context.Context, topicSlug string) (ImplResponse, error) {
	// TODO - update LatestpostsTopicSlugGet with the required logic for this service method.
	// Add api_misc_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, LatestpostsTopicSlugGet200Response{}) or use other options such as http.Ok ...
	// return Response(200, LatestpostsTopicSlugGet200Response{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("LatestpostsTopicSlugGet method not implemented")
}

// RelatedTagsTagGet - Get Related Tags
func (s *MiscAPIService) RelatedTagsTagGet(ctx context.Context, tag string) (ImplResponse, error) {
	// TODO - update RelatedTagsTagGet with the required logic for this service method.
	// Add api_misc_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, RelatedTagsTagGet200Response{}) or use other options such as http.Ok ...
	// return Response(200, RelatedTagsTagGet200Response{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RelatedTagsTagGet method not implemented")
}

// TopWriterTopicSlugGet - Get Top Writers
func (s *MiscAPIService) TopWriterTopicSlugGet(ctx context.Context, topicSlug string, count int32) (ImplResponse, error) {
	// TODO - update TopWriterTopicSlugGet with the required logic for this service method.
	// Add api_misc_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, TopWriterTopicSlugGet200Response{}) or use other options such as http.Ok ...
	// return Response(200, TopWriterTopicSlugGet200Response{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("TopWriterTopicSlugGet method not implemented")
}

// TopfeedsTagModeGet - Get Topfeeds
func (s *MiscAPIService) TopfeedsTagModeGet(ctx context.Context, tag string, mode string, after int32, count int32) (ImplResponse, error) {
	// TODO - update TopfeedsTagModeGet with the required logic for this service method.
	// Add api_misc_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, TopfeedsTagModeGet200Response{}) or use other options such as http.Ok ...
	// return Response(200, TopfeedsTagModeGet200Response{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("TopfeedsTagModeGet method not implemented")
}
