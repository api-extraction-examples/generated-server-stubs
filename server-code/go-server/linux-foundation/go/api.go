/*
 * Reimbursements API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
)



// DefaultAPIRouter defines the required methods for binding the api requests to a responses for the DefaultAPI
// The DefaultAPIRouter implementation should parse necessary information from the http request,
// pass the data to a DefaultAPIServicer to perform the required actions, then write the service results to the http response.
type DefaultAPIRouter interface { 
	ExpenseAction(http.ResponseWriter, *http.Request)
	HealthCheck(http.ResponseWriter, *http.Request)
	ResetPolicy(http.ResponseWriter, *http.Request)
	TagPolicy(http.ResponseWriter, *http.Request)
}
// DocsAPIRouter defines the required methods for binding the api requests to a responses for the DocsAPI
// The DocsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a DocsAPIServicer to perform the required actions, then write the service results to the http response.
type DocsAPIRouter interface { 
	GetDoc(http.ResponseWriter, *http.Request)
}
// ReimbursementAPIRouter defines the required methods for binding the api requests to a responses for the ReimbursementAPI
// The ReimbursementAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ReimbursementAPIServicer to perform the required actions, then write the service results to the http response.
type ReimbursementAPIRouter interface { 
	CreateReimbursement(http.ResponseWriter, *http.Request)
	UpdateReimbursement(http.ResponseWriter, *http.Request)
}


// DefaultAPIServicer defines the api actions for the DefaultAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type DefaultAPIServicer interface { 
	ExpenseAction(context.Context, string, string) (ImplResponse, error)
	HealthCheck(context.Context) (ImplResponse, error)
	ResetPolicy(context.Context, PolicyResetInput) (ImplResponse, error)
	TagPolicy(context.Context, PolicyTagInput) (ImplResponse, error)
}


// DocsAPIServicer defines the api actions for the DocsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type DocsAPIServicer interface { 
	GetDoc(context.Context) (ImplResponse, error)
}


// ReimbursementAPIServicer defines the api actions for the ReimbursementAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ReimbursementAPIServicer interface { 
	CreateReimbursement(context.Context, string, CreateReimbursementRequest) (ImplResponse, error)
	UpdateReimbursement(context.Context, string, PolicyUpdateInput) (ImplResponse, error)
}
