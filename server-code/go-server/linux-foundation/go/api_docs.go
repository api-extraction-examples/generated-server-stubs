/*
 * Reimbursements API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// DocsAPIController binds http requests to an api service and writes the service results to the http response
type DocsAPIController struct {
	service DocsAPIServicer
	errorHandler ErrorHandler
}

// DocsAPIOption for how the controller is set up.
type DocsAPIOption func(*DocsAPIController)

// WithDocsAPIErrorHandler inject ErrorHandler into controller
func WithDocsAPIErrorHandler(h ErrorHandler) DocsAPIOption {
	return func(c *DocsAPIController) {
		c.errorHandler = h
	}
}

// NewDocsAPIController creates a default api controller
func NewDocsAPIController(s DocsAPIServicer, opts ...DocsAPIOption) Router {
	controller := &DocsAPIController{
		service:      s,
		errorHandler: DefaultErrorHandler,
	}

	for _, opt := range opts {
		opt(controller)
	}

	return controller
}

// Routes returns all the api routes for the DocsAPIController
func (c *DocsAPIController) Routes() Routes {
	return Routes{
		"GetDoc": Route{
			strings.ToUpper("Get"),
			"/v1/api-docs",
			c.GetDoc,
		},
	}
}

// GetDoc - Get swagger documentation
func (c *DocsAPIController) GetDoc(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.GetDoc(r.Context())
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)
}
