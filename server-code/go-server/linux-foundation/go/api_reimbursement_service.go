/*
 * Reimbursements API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// ReimbursementAPIService is a service that implements the logic for the ReimbursementAPIServicer
// This service should implement the business logic for every endpoint for the ReimbursementAPI API.
// Include any external packages or services that will be required by this service.
type ReimbursementAPIService struct {
}

// NewReimbursementAPIService creates a default api service
func NewReimbursementAPIService() ReimbursementAPIServicer {
	return &ReimbursementAPIService{}
}

// CreateReimbursement - Create Reimbursement
func (s *ReimbursementAPIService) CreateReimbursement(ctx context.Context, projectId string, body CreateReimbursementRequest) (ImplResponse, error) {
	// TODO - update CreateReimbursement with the required logic for this service method.
	// Add api_reimbursement_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(400, ErrorResponse{}) or use other options such as http.Ok ...
	// return Response(400, ErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(401, ErrorResponse{}) or use other options such as http.Ok ...
	// return Response(401, ErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(500, ErrorResponse{}) or use other options such as http.Ok ...
	// return Response(500, ErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateReimbursement method not implemented")
}

// UpdateReimbursement - Update Reimbursement
func (s *ReimbursementAPIService) UpdateReimbursement(ctx context.Context, projectId string, body PolicyUpdateInput) (ImplResponse, error) {
	// TODO - update UpdateReimbursement with the required logic for this service method.
	// Add api_reimbursement_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(400, ErrorResponse{}) or use other options such as http.Ok ...
	// return Response(400, ErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(401, ErrorResponse{}) or use other options such as http.Ok ...
	// return Response(401, ErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(404, ErrorResponse{}) or use other options such as http.Ok ...
	// return Response(404, ErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(500, ErrorResponse{}) or use other options such as http.Ok ...
	// return Response(500, ErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateReimbursement method not implemented")
}
