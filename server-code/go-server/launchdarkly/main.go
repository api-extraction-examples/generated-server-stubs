/*
 * LaunchDarkly REST API
 *
 * Build custom integrations with the LaunchDarkly REST API
 *
 * API version: 5.3.0
 * Contact: support@launchdarkly.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package main

import (
	"log"
	"net/http"

	openapi "github.com/GIT_USER_ID/GIT_REPO_ID/go"
)

func main() {
	log.Printf("Server started")

	AccessTokensAPIService := openapi.NewAccessTokensAPIService()
	AccessTokensAPIController := openapi.NewAccessTokensAPIController(AccessTokensAPIService)

	AuditLogAPIService := openapi.NewAuditLogAPIService()
	AuditLogAPIController := openapi.NewAuditLogAPIController(AuditLogAPIService)

	CustomRolesAPIService := openapi.NewCustomRolesAPIService()
	CustomRolesAPIController := openapi.NewCustomRolesAPIController(CustomRolesAPIService)

	CustomerMetricsAPIService := openapi.NewCustomerMetricsAPIService()
	CustomerMetricsAPIController := openapi.NewCustomerMetricsAPIController(CustomerMetricsAPIService)

	DataExportDestinationsAPIService := openapi.NewDataExportDestinationsAPIService()
	DataExportDestinationsAPIController := openapi.NewDataExportDestinationsAPIController(DataExportDestinationsAPIService)

	EnvironmentsAPIService := openapi.NewEnvironmentsAPIService()
	EnvironmentsAPIController := openapi.NewEnvironmentsAPIController(EnvironmentsAPIService)

	FeatureFlagsAPIService := openapi.NewFeatureFlagsAPIService()
	FeatureFlagsAPIController := openapi.NewFeatureFlagsAPIController(FeatureFlagsAPIService)

	IntegrationsAPIService := openapi.NewIntegrationsAPIService()
	IntegrationsAPIController := openapi.NewIntegrationsAPIController(IntegrationsAPIService)

	ProjectsAPIService := openapi.NewProjectsAPIService()
	ProjectsAPIController := openapi.NewProjectsAPIController(ProjectsAPIService)

	RelayProxyConfigurationsAPIService := openapi.NewRelayProxyConfigurationsAPIService()
	RelayProxyConfigurationsAPIController := openapi.NewRelayProxyConfigurationsAPIController(RelayProxyConfigurationsAPIService)

	RootAPIService := openapi.NewRootAPIService()
	RootAPIController := openapi.NewRootAPIController(RootAPIService)

	TeamMembersAPIService := openapi.NewTeamMembersAPIService()
	TeamMembersAPIController := openapi.NewTeamMembersAPIController(TeamMembersAPIService)

	UserSegmentsAPIService := openapi.NewUserSegmentsAPIService()
	UserSegmentsAPIController := openapi.NewUserSegmentsAPIController(UserSegmentsAPIService)

	UserSettingsAPIService := openapi.NewUserSettingsAPIService()
	UserSettingsAPIController := openapi.NewUserSettingsAPIController(UserSettingsAPIService)

	UsersAPIService := openapi.NewUsersAPIService()
	UsersAPIController := openapi.NewUsersAPIController(UsersAPIService)

	WebhooksAPIService := openapi.NewWebhooksAPIService()
	WebhooksAPIController := openapi.NewWebhooksAPIController(WebhooksAPIService)

	router := openapi.NewRouter(AccessTokensAPIController, AuditLogAPIController, CustomRolesAPIController, CustomerMetricsAPIController, DataExportDestinationsAPIController, EnvironmentsAPIController, FeatureFlagsAPIController, IntegrationsAPIController, ProjectsAPIController, RelayProxyConfigurationsAPIController, RootAPIController, TeamMembersAPIController, UserSegmentsAPIController, UserSettingsAPIController, UsersAPIController, WebhooksAPIController)

	log.Fatal(http.ListenAndServe(":8080", router))
}
