/*
 * LaunchDarkly REST API
 *
 * Build custom integrations with the LaunchDarkly REST API
 *
 * API version: 5.3.0
 * Contact: support@launchdarkly.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi




type PostApprovalRequestRequest struct {

	// comment will be included in audit log item for change.
	Comment string `json:"comment,omitempty"`

	// A name that describes the changes you would like to apply to a feature flag configuration
	Description string `json:"description"`

	// Timestamp for when instructions will be executed
	ExecutionDate int64 `json:"executionDate,omitempty"`

	Instructions []SemanticPatchInstructionInner `json:"instructions"`

	NotifyMemberIds []string `json:"notifyMemberIds"`

	// ID of scheduled change to edit or delete
	OperatingOnId string `json:"operatingOnId,omitempty"`
}

// AssertPostApprovalRequestRequestRequired checks if the required fields are not zero-ed
func AssertPostApprovalRequestRequestRequired(obj PostApprovalRequestRequest) error {
	elements := map[string]interface{}{
		"description": obj.Description,
		"instructions": obj.Instructions,
		"notifyMemberIds": obj.NotifyMemberIds,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.Instructions {
		if err := AssertSemanticPatchInstructionInnerRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertPostApprovalRequestRequestConstraints checks if the values respects the defined constraints
func AssertPostApprovalRequestRequestConstraints(obj PostApprovalRequestRequest) error {
	return nil
}
