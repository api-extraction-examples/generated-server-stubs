/*
 * LaunchDarkly REST API
 *
 * Build custom integrations with the LaunchDarkly REST API
 *
 * API version: 5.3.0
 * Contact: support@launchdarkly.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// IntegrationsAPIService is a service that implements the logic for the IntegrationsAPIServicer
// This service should implement the business logic for every endpoint for the IntegrationsAPI API.
// Include any external packages or services that will be required by this service.
type IntegrationsAPIService struct {
}

// NewIntegrationsAPIService creates a default api service
func NewIntegrationsAPIService() IntegrationsAPIServicer {
	return &IntegrationsAPIService{}
}

// DeleteIntegrationSubscription - Delete an integration subscription by ID.
func (s *IntegrationsAPIService) DeleteIntegrationSubscription(ctx context.Context, integrationKey string, integrationId string) (ImplResponse, error) {
	// TODO - update DeleteIntegrationSubscription with the required logic for this service method.
	// Add api_integrations_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteIntegrationSubscription method not implemented")
}

// GetIntegrationSubscription - Get a single integration subscription by ID.
func (s *IntegrationsAPIService) GetIntegrationSubscription(ctx context.Context, integrationKey string, integrationId string) (ImplResponse, error) {
	// TODO - update GetIntegrationSubscription with the required logic for this service method.
	// Add api_integrations_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, IntegrationSubscription{}) or use other options such as http.Ok ...
	// return Response(200, IntegrationSubscription{}), nil

	// TODO: Uncomment the next line to return response Response(403, UsageError{}) or use other options such as http.Ok ...
	// return Response(403, UsageError{}), nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetIntegrationSubscription method not implemented")
}

// GetIntegrationSubscriptions - Get a list of all configured integrations of a given kind.
func (s *IntegrationsAPIService) GetIntegrationSubscriptions(ctx context.Context, integrationKey string) (ImplResponse, error) {
	// TODO - update GetIntegrationSubscriptions with the required logic for this service method.
	// Add api_integrations_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Integration{}) or use other options such as http.Ok ...
	// return Response(200, Integration{}), nil

	// TODO: Uncomment the next line to return response Response(403, UsageError{}) or use other options such as http.Ok ...
	// return Response(403, UsageError{}), nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetIntegrationSubscriptions method not implemented")
}

// GetIntegrations - Get a list of all configured audit log event integrations associated with this account.
func (s *IntegrationsAPIService) GetIntegrations(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetIntegrations with the required logic for this service method.
	// Add api_integrations_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Integrations{}) or use other options such as http.Ok ...
	// return Response(200, Integrations{}), nil

	// TODO: Uncomment the next line to return response Response(403, UsageError{}) or use other options such as http.Ok ...
	// return Response(403, UsageError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetIntegrations method not implemented")
}

// PatchIntegrationSubscription - Modify an integration subscription by ID.
func (s *IntegrationsAPIService) PatchIntegrationSubscription(ctx context.Context, integrationKey string, integrationId string, patchDelta []PatchOperation) (ImplResponse, error) {
	// TODO - update PatchIntegrationSubscription with the required logic for this service method.
	// Add api_integrations_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, IntegrationSubscription{}) or use other options such as http.Ok ...
	// return Response(200, IntegrationSubscription{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("PatchIntegrationSubscription method not implemented")
}

// PostIntegrationSubscription - Create a new integration subscription of a given kind.
func (s *IntegrationsAPIService) PostIntegrationSubscription(ctx context.Context, integrationKey string, subscriptionBody PostIntegrationSubscriptionRequest) (ImplResponse, error) {
	// TODO - update PostIntegrationSubscription with the required logic for this service method.
	// Add api_integrations_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, IntegrationSubscription{}) or use other options such as http.Ok ...
	// return Response(201, IntegrationSubscription{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(409, {}) or use other options such as http.Ok ...
	// return Response(409, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("PostIntegrationSubscription method not implemented")
}
