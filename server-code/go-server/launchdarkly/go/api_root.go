/*
 * LaunchDarkly REST API
 *
 * Build custom integrations with the LaunchDarkly REST API
 *
 * API version: 5.3.0
 * Contact: support@launchdarkly.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// RootAPIController binds http requests to an api service and writes the service results to the http response
type RootAPIController struct {
	service RootAPIServicer
	errorHandler ErrorHandler
}

// RootAPIOption for how the controller is set up.
type RootAPIOption func(*RootAPIController)

// WithRootAPIErrorHandler inject ErrorHandler into controller
func WithRootAPIErrorHandler(h ErrorHandler) RootAPIOption {
	return func(c *RootAPIController) {
		c.errorHandler = h
	}
}

// NewRootAPIController creates a default api controller
func NewRootAPIController(s RootAPIServicer, opts ...RootAPIOption) Router {
	controller := &RootAPIController{
		service:      s,
		errorHandler: DefaultErrorHandler,
	}

	for _, opt := range opts {
		opt(controller)
	}

	return controller
}

// Routes returns all the api routes for the RootAPIController
func (c *RootAPIController) Routes() Routes {
	return Routes{
		"GetRoot": Route{
			strings.ToUpper("Get"),
			"/api/v2/",
			c.GetRoot,
		},
	}
}

// GetRoot - 
func (c *RootAPIController) GetRoot(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.GetRoot(r.Context())
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)
}
