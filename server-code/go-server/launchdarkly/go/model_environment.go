/*
 * LaunchDarkly REST API
 *
 * Build custom integrations with the LaunchDarkly REST API
 *
 * API version: 5.3.0
 * Contact: support@launchdarkly.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi




type Environment struct {

	// The unique resource id.
	Id string `json:"_id,omitempty"`

	Links Links `json:"_links,omitempty"`

	// The SDK key for backend LaunchDarkly SDKs.
	ApiKey string `json:"apiKey,omitempty"`

	ApprovalSettings EnvironmentApprovalSettings `json:"approvalSettings,omitempty"`

	// The swatch color for the environment.
	Color string `json:"color,omitempty"`

	// Determines if this environment requires confirmation for flag and segment changes.
	ConfirmChanges bool `json:"confirmChanges,omitempty"`

	// Set to true to send detailed event information for new flags.
	DefaultTrackEvents bool `json:"defaultTrackEvents,omitempty"`

	// The default TTL.
	DefaultTtl float32 `json:"defaultTtl,omitempty"`

	// The key for the environment.
	Key string `json:"key,omitempty"`

	// The SDK key for mobile LaunchDarkly SDKs.
	MobileKey string `json:"mobileKey,omitempty"`

	// The name of the environment.
	Name string `json:"name,omitempty"`

	// Determines if this environment requires comments for flag and segment changes.
	RequireComments bool `json:"requireComments,omitempty"`

	// Determines if this environment is in safe mode.
	SecureMode bool `json:"secureMode,omitempty"`

	// An array of tags for this environment.
	Tags []string `json:"tags,omitempty"`
}

// AssertEnvironmentRequired checks if the required fields are not zero-ed
func AssertEnvironmentRequired(obj Environment) error {
	if err := AssertLinksRequired(obj.Links); err != nil {
		return err
	}
	if err := AssertEnvironmentApprovalSettingsRequired(obj.ApprovalSettings); err != nil {
		return err
	}
	return nil
}

// AssertEnvironmentConstraints checks if the values respects the defined constraints
func AssertEnvironmentConstraints(obj Environment) error {
	return nil
}
