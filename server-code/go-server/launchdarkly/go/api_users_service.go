/*
 * LaunchDarkly REST API
 *
 * Build custom integrations with the LaunchDarkly REST API
 *
 * API version: 5.3.0
 * Contact: support@launchdarkly.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// UsersAPIService is a service that implements the logic for the UsersAPIServicer
// This service should implement the business logic for every endpoint for the UsersAPI API.
// Include any external packages or services that will be required by this service.
type UsersAPIService struct {
}

// NewUsersAPIService creates a default api service
func NewUsersAPIService() UsersAPIServicer {
	return &UsersAPIService{}
}

// DeleteUser - Delete a user by ID.
func (s *UsersAPIService) DeleteUser(ctx context.Context, projectKey string, environmentKey string, userKey string) (ImplResponse, error) {
	// TODO - update DeleteUser with the required logic for this service method.
	// Add api_users_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteUser method not implemented")
}

// GetSearchUsers - Search users in LaunchDarkly based on their last active date, or a search query. It should not be used to enumerate all users in LaunchDarkly-- use the List users API resource.
func (s *UsersAPIService) GetSearchUsers(ctx context.Context, projectKey string, environmentKey string, q string, limit int32, offset int32, after int64) (ImplResponse, error) {
	// TODO - update GetSearchUsers with the required logic for this service method.
	// Add api_users_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Users{}) or use other options such as http.Ok ...
	// return Response(200, Users{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetSearchUsers method not implemented")
}

// GetUser - Get a user by key.
func (s *UsersAPIService) GetUser(ctx context.Context, projectKey string, environmentKey string, userKey string) (ImplResponse, error) {
	// TODO - update GetUser with the required logic for this service method.
	// Add api_users_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, UserRecord{}) or use other options such as http.Ok ...
	// return Response(200, UserRecord{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetUser method not implemented")
}

// GetUsers - List all users in the environment. Includes the total count of users. In each page, there will be up to &#39;limit&#39; users returned (default 20). This is useful for exporting all users in the system for further analysis. Paginated collections will include a next link containing a URL with the next set of elements in the collection.
func (s *UsersAPIService) GetUsers(ctx context.Context, projectKey string, environmentKey string, limit int32, h string, scrollId string) (ImplResponse, error) {
	// TODO - update GetUsers with the required logic for this service method.
	// Add api_users_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Users{}) or use other options such as http.Ok ...
	// return Response(200, Users{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetUsers method not implemented")
}
