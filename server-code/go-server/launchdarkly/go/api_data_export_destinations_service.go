/*
 * LaunchDarkly REST API
 *
 * Build custom integrations with the LaunchDarkly REST API
 *
 * API version: 5.3.0
 * Contact: support@launchdarkly.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// DataExportDestinationsAPIService is a service that implements the logic for the DataExportDestinationsAPIServicer
// This service should implement the business logic for every endpoint for the DataExportDestinationsAPI API.
// Include any external packages or services that will be required by this service.
type DataExportDestinationsAPIService struct {
}

// NewDataExportDestinationsAPIService creates a default api service
func NewDataExportDestinationsAPIService() DataExportDestinationsAPIServicer {
	return &DataExportDestinationsAPIService{}
}

// DeleteDestination - Get a single data export destination by ID
func (s *DataExportDestinationsAPIService) DeleteDestination(ctx context.Context, projectKey string, environmentKey string, destinationId string) (ImplResponse, error) {
	// TODO - update DeleteDestination with the required logic for this service method.
	// Add api_data_export_destinations_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteDestination method not implemented")
}

// GetDestination - Get a single data export destination by ID
func (s *DataExportDestinationsAPIService) GetDestination(ctx context.Context, projectKey string, environmentKey string, destinationId string) (ImplResponse, error) {
	// TODO - update GetDestination with the required logic for this service method.
	// Add api_data_export_destinations_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Destination{}) or use other options such as http.Ok ...
	// return Response(200, Destination{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetDestination method not implemented")
}

// GetDestinations - Returns a list of all data export destinations.
func (s *DataExportDestinationsAPIService) GetDestinations(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetDestinations with the required logic for this service method.
	// Add api_data_export_destinations_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Destinations{}) or use other options such as http.Ok ...
	// return Response(200, Destinations{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetDestinations method not implemented")
}

// PatchDestination - Perform a partial update to a data export destination.
func (s *DataExportDestinationsAPIService) PatchDestination(ctx context.Context, projectKey string, environmentKey string, destinationId string, patchOnly []PatchOperation) (ImplResponse, error) {
	// TODO - update PatchDestination with the required logic for this service method.
	// Add api_data_export_destinations_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Destination{}) or use other options such as http.Ok ...
	// return Response(200, Destination{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	// TODO: Uncomment the next line to return response Response(409, {}) or use other options such as http.Ok ...
	// return Response(409, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("PatchDestination method not implemented")
}

// PostDestination - Create a new data export destination
func (s *DataExportDestinationsAPIService) PostDestination(ctx context.Context, projectKey string, environmentKey string, destinationBody PostDestinationRequest) (ImplResponse, error) {
	// TODO - update PostDestination with the required logic for this service method.
	// Add api_data_export_destinations_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, Destination{}) or use other options such as http.Ok ...
	// return Response(201, Destination{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(409, {}) or use other options such as http.Ok ...
	// return Response(409, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("PostDestination method not implemented")
}
