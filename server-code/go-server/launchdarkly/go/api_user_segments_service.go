/*
 * LaunchDarkly REST API
 *
 * Build custom integrations with the LaunchDarkly REST API
 *
 * API version: 5.3.0
 * Contact: support@launchdarkly.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// UserSegmentsAPIService is a service that implements the logic for the UserSegmentsAPIServicer
// This service should implement the business logic for every endpoint for the UserSegmentsAPI API.
// Include any external packages or services that will be required by this service.
type UserSegmentsAPIService struct {
}

// NewUserSegmentsAPIService creates a default api service
func NewUserSegmentsAPIService() UserSegmentsAPIServicer {
	return &UserSegmentsAPIService{}
}

// DeleteUserSegment - Delete a user segment.
func (s *UserSegmentsAPIService) DeleteUserSegment(ctx context.Context, projectKey string, environmentKey string, userSegmentKey string) (ImplResponse, error) {
	// TODO - update DeleteUserSegment with the required logic for this service method.
	// Add api_user_segments_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteUserSegment method not implemented")
}

// GetExpiringUserTargetsOnSegment - Get expiring user targets for user segment
func (s *UserSegmentsAPIService) GetExpiringUserTargetsOnSegment(ctx context.Context, projectKey string, environmentKey string, userSegmentKey string) (ImplResponse, error) {
	// TODO - update GetExpiringUserTargetsOnSegment with the required logic for this service method.
	// Add api_user_segments_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, UserTargetingExpirationForSegment{}) or use other options such as http.Ok ...
	// return Response(200, UserTargetingExpirationForSegment{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetExpiringUserTargetsOnSegment method not implemented")
}

// GetUserSegment - Get a single user segment by key.
func (s *UserSegmentsAPIService) GetUserSegment(ctx context.Context, projectKey string, environmentKey string, userSegmentKey string) (ImplResponse, error) {
	// TODO - update GetUserSegment with the required logic for this service method.
	// Add api_user_segments_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, UserSegment{}) or use other options such as http.Ok ...
	// return Response(200, UserSegment{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetUserSegment method not implemented")
}

// GetUserSegments - Get a list of all user segments in the given project.
func (s *UserSegmentsAPIService) GetUserSegments(ctx context.Context, projectKey string, environmentKey string, tag string) (ImplResponse, error) {
	// TODO - update GetUserSegments with the required logic for this service method.
	// Add api_user_segments_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, UserSegments{}) or use other options such as http.Ok ...
	// return Response(200, UserSegments{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetUserSegments method not implemented")
}

// PatchExpiringUserTargetsOnSegment - Update, add, or delete expiring user targets on user segment
func (s *UserSegmentsAPIService) PatchExpiringUserTargetsOnSegment(ctx context.Context, projectKey string, environmentKey string, userSegmentKey string, semanticPatchWithComment []SemanticPatchOperation) (ImplResponse, error) {
	// TODO - update PatchExpiringUserTargetsOnSegment with the required logic for this service method.
	// Add api_user_segments_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, UserTargetingExpirationForSegment{}) or use other options such as http.Ok ...
	// return Response(200, UserTargetingExpirationForSegment{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	// TODO: Uncomment the next line to return response Response(409, {}) or use other options such as http.Ok ...
	// return Response(409, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("PatchExpiringUserTargetsOnSegment method not implemented")
}

// PatchUserSegment - Perform a partial update to a user segment.
func (s *UserSegmentsAPIService) PatchUserSegment(ctx context.Context, projectKey string, environmentKey string, userSegmentKey string, patchOnly []PatchOperation) (ImplResponse, error) {
	// TODO - update PatchUserSegment with the required logic for this service method.
	// Add api_user_segments_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, UserSegment{}) or use other options such as http.Ok ...
	// return Response(200, UserSegment{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	// TODO: Uncomment the next line to return response Response(409, {}) or use other options such as http.Ok ...
	// return Response(409, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("PatchUserSegment method not implemented")
}

// PostUserSegment - Creates a new user segment.
func (s *UserSegmentsAPIService) PostUserSegment(ctx context.Context, projectKey string, environmentKey string, userSegmentBody PostUserSegmentRequest) (ImplResponse, error) {
	// TODO - update PostUserSegment with the required logic for this service method.
	// Add api_user_segments_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, UserSegment{}) or use other options such as http.Ok ...
	// return Response(201, UserSegment{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(409, {}) or use other options such as http.Ok ...
	// return Response(409, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("PostUserSegment method not implemented")
}

// UpdateBigSegmentTargets - Update targets included or excluded in a big segment
func (s *UserSegmentsAPIService) UpdateBigSegmentTargets(ctx context.Context, projectKey string, environmentKey string, userSegmentKey string, bigSegmentTargetsBody UpdateBigSegmentTargetsRequest) (ImplResponse, error) {
	// TODO - update UpdateBigSegmentTargets with the required logic for this service method.
	// Add api_user_segments_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateBigSegmentTargets method not implemented")
}
