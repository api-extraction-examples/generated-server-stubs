openapi: 3.0.1
info:
  contact:
    email: support@launchdarkly.com
    name: LaunchDarkly Support
    url: https://support.launchdarkly.com
  description: Build custom integrations with the LaunchDarkly REST API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://launchdarkly.com/terms
  title: LaunchDarkly REST API
  version: 5.3.0
  x-apisguru-categories:
  - developer_tools
  x-logo:
    url: https://twitter.com/launchdarkly/profile_image?size=original
  x-origin:
  - format: swagger
    url: https://launchdarkly.github.io/ld-openapi/openapi.json
    version: "2.0"
  x-providerName: launchdarkly.com
servers:
- url: https://app.launchdarkly.com/api/v2
security:
- Token: []
paths:
  /:
    get:
      description: You can issue a GET request to the root resource to find all of
        the resource categories supported by the API.
      operationId: getRoot
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Links'
          description: A list of links to available resources in the API.
        "401":
          content: {}
          description: Invalid access token.
      tags:
      - Root
  /account/relay-auto-configs:
    get:
      operationId: getRelayProxyConfigs
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelayProxyConfigs'
          description: Relay proxy configs response.
      summary: Returns a list of relay proxy configurations in the account.
      tags:
      - Relay proxy configurations
    post:
      operationId: postRelayAutoConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postRelayAutoConfig_request'
        description: Create a new relay proxy configuration
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelayProxyConfig'
          description: Relay proxy config response.
        "400":
          content: {}
          description: Invalid request body.
        "403":
          content: {}
          description: Access to the requested resource was denied.
      summary: Create a new relay proxy config.
      tags:
      - Relay proxy configurations
      x-codegen-request-body-name: relayProxyConfigBody
  /account/relay-auto-configs/{id}:
    delete:
      operationId: deleteRelayProxyConfig
      parameters:
      - description: The relay proxy configuration ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Action completed successfully.
        "400":
          content: {}
          description: Invalid request body.
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Delete a relay proxy configuration by ID.
      tags:
      - Relay proxy configurations
    get:
      operationId: getRelayProxyConfig
      parameters:
      - description: The relay proxy configuration ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelayProxyConfig'
          description: Relay proxy config response.
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Get a single relay proxy configuration by ID.
      tags:
      - Relay proxy configurations
    patch:
      operationId: patchRelayProxyConfig
      parameters:
      - description: The relay proxy configuration ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              type: array
        description: Requires a JSON Patch representation of the desired changes to
          the project. 'http://jsonpatch.com/'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelayProxyConfig'
          description: Relay proxy config response.
        "400":
          content: {}
          description: Invalid request body.
        "404":
          content: {}
          description: Invalid resource specifier.
        "409":
          content: {}
          description: Status conflict.
      summary: Modify a relay proxy configuration by ID.
      tags:
      - Relay proxy configurations
      x-codegen-request-body-name: patchDelta
  /account/relay-auto-configs/{id}/reset:
    post:
      operationId: resetRelayProxyConfig
      parameters:
      - description: The relay proxy configuration ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: "An expiration time for the old relay proxy configuration key,\
          \ expressed as a Unix epoch time in milliseconds. By default, the relay\
          \ proxy configuration will expire immediately"
        in: query
        name: expiry
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelayProxyConfig'
          description: Relay proxy config response.
        "400":
          content: {}
          description: Invalid request body.
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Reset a relay proxy configuration's secret key with an optional expiry
        time for the old key.
      tags:
      - Relay proxy configurations
  /auditlog:
    get:
      operationId: getAuditLogEntries
      parameters:
      - description: "A timestamp filter, expressed as a Unix epoch time in milliseconds.\
          \ All entries returned will have before this timestamp."
        in: query
        name: before
        schema:
          format: int64
          type: integer
      - description: "A timestamp filter, expressed as a Unix epoch time in milliseconds.\
          \ All entries returned will have occurred after this timestamp."
        in: query
        name: after
        schema:
          format: int64
          type: integer
      - description: Text to search for. You can search for the full or partial name
          of the resource involved or full or partial email address of the member
          who made the change.
        in: query
        name: q
        schema:
          type: string
      - description: "A limit on the number of audit log entries to be returned, between\
          \ 1 and 20."
        in: query
        name: limit
        schema:
          type: number
      - description: "A resource specifier, allowing you to filter audit log listings\
          \ by resource."
        in: query
        name: spec
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogEntries'
          description: Audit log entries response.
        "400":
          content: {}
          description: Invalid request body.
        "401":
          content: {}
          description: Invalid access token.
      summary: "Get a list of all audit log entries. The query parameters allow you\
        \ to restrict the returned results by date ranges, resource specifiers, or\
        \ a full-text search query."
      tags:
      - Audit log
  /auditlog/{resourceId}:
    get:
      operationId: getAuditLogEntry
      parameters:
      - description: The resource ID.
        in: path
        name: resourceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogEntry'
          description: Audit log entry response.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Use this endpoint to fetch a single audit log entry by its resouce
        ID.
      tags:
      - Audit log
  /destinations:
    get:
      operationId: getDestinations
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Destinations'
          description: Destinations response.
        "401":
          content: {}
          description: Invalid access token.
      summary: Returns a list of all data export destinations.
      tags:
      - Data export destinations
  /destinations/{projectKey}/{environmentKey}:
    post:
      operationId: postDestination
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postDestination_request'
        description: Create a new data export destination.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Destination'
          description: Destination response.
        "400":
          content: {}
          description: Invalid request body.
        "401":
          content: {}
          description: Invalid access token.
        "409":
          content: {}
          description: Status conflict.
      summary: Create a new data export destination
      tags:
      - Data export destinations
      x-codegen-request-body-name: destinationBody
  /destinations/{projectKey}/{environmentKey}/{destinationId}:
    delete:
      operationId: deleteDestination
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      - description: The data export destination ID.
        in: path
        name: destinationId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Action completed successfully.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Get a single data export destination by ID
      tags:
      - Data export destinations
    get:
      operationId: getDestination
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      - description: The data export destination ID.
        in: path
        name: destinationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Destination'
          description: Destination response.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Get a single data export destination by ID
      tags:
      - Data export destinations
    patch:
      operationId: patchDestination
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      - description: The data export destination ID.
        in: path
        name: destinationId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              type: array
        description: Requires a JSON Patch representation of the desired changes to
          the project. 'http://jsonpatch.com/' Feature flag patches also support JSON
          Merge Patch format. 'https://tools.ietf.org/html/rfc7386' The addition of
          comments is also supported.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Destination'
          description: Destination response.
        "400":
          content: {}
          description: Invalid request body.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
        "409":
          content: {}
          description: Status conflict.
      summary: Perform a partial update to a data export destination.
      tags:
      - Data export destinations
      x-codegen-request-body-name: PatchOnly
  /flag-status/{projectKey}/{featureFlagKey}:
    get:
      operationId: getFeatureFlagStatusAcrossEnvironments
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: The feature flag's key. The key identifies the flag in your code.
        in: path
        name: featureFlagKey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlagStatusAcrossEnvironments'
          description: Status of the requested feature flag across environments
        "401":
          content: {}
          description: Invalid access token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageError'
          description: "This is a beta API, you must pass beta in the LD-API-Version\
            \ header to use it."
      summary: Get the status for a particular feature flag across environments
      tags:
      - Feature flags
  /flag-statuses/{projectKey}/{environmentKey}:
    get:
      operationId: getFeatureFlagStatuses
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlagStatuses'
          description: List of feature flag statuses.
        "401":
          content: {}
          description: Invalid access token.
      summary: "Get a list of statuses for all feature flags. The status includes\
        \ the last time the feature flag was requested, as well as the state of the\
        \ flag."
      tags:
      - Feature flags
  /flag-statuses/{projectKey}/{environmentKey}/{featureFlagKey}:
    get:
      operationId: getFeatureFlagStatus
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      - description: The feature flag's key. The key identifies the flag in your code.
        in: path
        name: featureFlagKey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlagStatus'
          description: Status of the requested feature flag.
        "401":
          content: {}
          description: Invalid access token.
      summary: Get the status for a particular feature flag.
      tags:
      - Feature flags
  /flags/{projectKey}:
    get:
      operationId: getFeatureFlags
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: "By default, each feature will include configurations for each\
          \ environment. You can filter environments with the env query parameter.\
          \ For example, setting env=[\"production\"] will restrict the returned configurations\
          \ to just your production environment."
        explode: true
        in: query
        name: env
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "By default in api version >= 1, flags will _not_ include their\
          \ list of prerequisites, targets or rules.  Set summary=0 to include these\
          \ fields for each flag returned."
        in: query
        name: summary
        schema:
          type: boolean
      - description: "When set to 1, only archived flags will be included in the list\
          \ of flags returned.  By default, archived flags are not included in the\
          \ list of flags."
        in: query
        name: archived
        schema:
          type: boolean
      - description: "The number of objects to return. Defaults to -1, which returns\
          \ everything."
        in: query
        name: limit
        schema:
          type: number
      - description: "Where to start in the list. This is for use with pagination.\
          \ For example, an offset of 10 would skip the first 10 items and then return\
          \ the next limit items."
        in: query
        name: offset
        schema:
          type: number
      - description: A comma-separated list of filters. Each filter is of the form
          field:value.
        in: query
        name: filter
        schema:
          type: string
      - description: A comma-separated list of fields to sort by. A field prefixed
          by a - will be sorted in descending order.
        in: query
        name: sort
        schema:
          type: string
      - description: Filter by tag. A tag can be used to group flags across projects.
        in: query
        name: tag
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlags'
          description: Flags response.
        "401":
          content: {}
          description: Invalid access token.
      summary: Get a list of all features in the given project.
      tags:
      - Feature flags
    post:
      operationId: postFeatureFlag
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: "The key of the feature flag to be cloned. The key identifies\
          \ the flag in your code.  For example, setting clone=flagKey will copy the\
          \ full targeting configuration for all environments (including on/off state)\
          \ from the original flag to the new flag."
        in: query
        name: clone
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postFeatureFlag_request'
        description: Create a new feature flag.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
          description: Flag response.
        "400":
          content: {}
          description: Invalid request body.
        "401":
          content: {}
          description: Invalid access token.
        "409":
          content: {}
          description: Status conflict.
      summary: Creates a new feature flag.
      tags:
      - Feature flags
      x-codegen-request-body-name: featureFlagBody
  /flags/{projectKey}/{environmentKey}/{featureFlagKey}/dependent-flags:
    get:
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      - description: The feature flag's key. The key identifies the flag in your code.
        in: path
        name: featureFlagKey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependentFlagsByEnvironment'
          description: Dependent flags in a single envrionemnt response
        "401":
          content: {}
          description: Invalid access token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageError'
          description: "This is a beta API, you must pass beta in the LD-API-Version\
            \ header to use it."
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Get dependent flags for the flag in the environment specified in path
        parameters
      tags:
      - Feature flags
  /flags/{projectKey}/{featureFlagKey}:
    delete:
      operationId: deleteFeatureFlag
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: The feature flag's key. The key identifies the flag in your code.
        in: path
        name: featureFlagKey
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Action completed successfully.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Delete a feature flag in all environments. Be careful-- only delete
        feature flags that are no longer being used by your application.
      tags:
      - Feature flags
    get:
      operationId: getFeatureFlag
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: The feature flag's key. The key identifies the flag in your code.
        in: path
        name: featureFlagKey
        required: true
        schema:
          type: string
      - description: "By default, each feature will include configurations for each\
          \ environment. You can filter environments with the env query parameter.\
          \ For example, setting env=[\"production\"] will restrict the returned configurations\
          \ to just your production environment."
        explode: true
        in: query
        name: env
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
          description: Flag response.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Get a single feature flag by key.
      tags:
      - Feature flags
    patch:
      operationId: patchFeatureFlag
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: The feature flag's key. The key identifies the flag in your code.
        in: path
        name: featureFlagKey
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchFeatureFlag_request'
        description: "Requires a JSON Patch representation of the desired changes\
          \ to the project, and an optional comment. 'http://jsonpatch.com/' Feature\
          \ flag patches also support JSON Merge Patch format. 'https://tools.ietf.org/html/rfc7386'\
          \ The addition of comments is also supported."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
          description: Feature flag response.
        "400":
          content: {}
          description: Invalid request body.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
        "409":
          content: {}
          description: Status conflict.
      summary: Perform a partial update to a feature.
      tags:
      - Feature flags
      x-codegen-request-body-name: patchComment
  /flags/{projectKey}/{featureFlagKey}/copy:
    post:
      operationId: copyFeatureFlag
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: The feature flag's key. The key identifies the flag in your code.
        in: path
        name: featureFlagKey
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/copyFeatureFlag_request'
        description: Copy feature flag configurations between environments.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
          description: Flag configuration copy response.
        "400":
          content: {}
          description: Invalid request body.
        "401":
          content: {}
          description: Invalid access token.
        "409":
          content: {}
          description: Status conflict.
      summary: Copies the feature flag configuration from one environment to the same
        feature flag in another environment.
      tags:
      - Feature flags
      x-codegen-request-body-name: featureFlagCopyBody
  /flags/{projectKey}/{featureFlagKey}/dependent-flags:
    get:
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: The feature flag's key. The key identifies the flag in your code.
        in: path
        name: featureFlagKey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEnvironmentDependentFlags'
          description: Dependent flags accross all environemnts in the project response
        "401":
          content: {}
          description: Invalid access token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageError'
          description: "This is a beta API, you must pass beta in the LD-API-Version\
            \ header to use it."
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Get dependent flags across all environments for the flag specified
        in the path parameters
      tags:
      - Feature flags
  /flags/{projectKey}/{featureFlagKey}/expiring-user-targets/{environmentKey}:
    get:
      operationId: getExpiringUserTargets
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      - description: The feature flag's key. The key identifies the flag in your code.
        in: path
        name: featureFlagKey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTargetingExpirationForFlags'
          description: User targets of the requested feature flag.
        "401":
          content: {}
          description: Invalid access token.
      summary: Get expiring user targets for feature flag
      tags:
      - Feature flags
    patch:
      operationId: patchExpiringUserTargets
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      - description: The feature flag's key. The key identifies the flag in your code.
        in: path
        name: featureFlagKey
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/SemanticPatchOperation'
              type: array
        description: Requires a Semantic Patch representation of the desired changes
          to the resource. 'https://apidocs.launchdarkly.com/reference#updates-via-semantic-patches'.
          The addition of comments is also supported.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTargetingExpirationForFlags'
          description: User targeting expirations on feature flag response.
        "400":
          content: {}
          description: Invalid request body.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
        "409":
          content: {}
          description: Status conflict.
      summary: "Update, add, or delete expiring user targets on feature flag"
      tags:
      - Feature flags
      x-codegen-request-body-name: SemanticPatchWithComment
  /integrations:
    get:
      operationId: getIntegrations
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integrations'
          description: Integrations response.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageError'
          description: "This is a beta API, you must pass beta in the LD-API-Version\
            \ header to use it."
      summary: Get a list of all configured audit log event integrations associated
        with this account.
      tags:
      - Integrations
  /integrations/{integrationKey}:
    get:
      operationId: getIntegrationSubscriptions
      parameters:
      - description: The key used to specify the integration kind.
        in: path
        name: integrationKey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration'
          description: Integrations response.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageError'
          description: "This is a beta API, you must pass beta in the LD-API-Version\
            \ header to use it."
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Get a list of all configured integrations of a given kind.
      tags:
      - Integrations
    post:
      operationId: postIntegrationSubscription
      parameters:
      - description: The key used to specify the integration kind.
        in: path
        name: integrationKey
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postIntegrationSubscription_request'
        description: Create a new integration subscription.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationSubscription'
          description: Integrations response.
        "400":
          content: {}
          description: Invalid request body.
        "401":
          content: {}
          description: Invalid access token.
        "409":
          content: {}
          description: Status conflict.
      summary: Create a new integration subscription of a given kind.
      tags:
      - Integrations
      x-codegen-request-body-name: subscriptionBody
  /integrations/{integrationKey}/{integrationId}:
    delete:
      operationId: deleteIntegrationSubscription
      parameters:
      - description: The key used to specify the integration kind.
        in: path
        name: integrationKey
        required: true
        schema:
          type: string
      - description: The integration ID.
        in: path
        name: integrationId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Action completed successfully.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Delete an integration subscription by ID.
      tags:
      - Integrations
    get:
      operationId: getIntegrationSubscription
      parameters:
      - description: The key used to specify the integration kind.
        in: path
        name: integrationKey
        required: true
        schema:
          type: string
      - description: The integration ID.
        in: path
        name: integrationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationSubscription'
          description: Integrations response.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageError'
          description: "This is a beta API, you must pass beta in the LD-API-Version\
            \ header to use it."
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Get a single integration subscription by ID.
      tags:
      - Integrations
    patch:
      operationId: patchIntegrationSubscription
      parameters:
      - description: The key used to specify the integration kind.
        in: path
        name: integrationKey
        required: true
        schema:
          type: string
      - description: The integration ID.
        in: path
        name: integrationId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              type: array
        description: Requires a JSON Patch representation of the desired changes to
          the project. 'http://jsonpatch.com/'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationSubscription'
          description: Integrations response.
        "400":
          content: {}
          description: Invalid request body.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Modify an integration subscription by ID.
      tags:
      - Integrations
      x-codegen-request-body-name: patchDelta
  /members:
    get:
      operationId: getMembers
      parameters:
      - description: "The number of objects to return. Defaults to -1, which returns\
          \ everything."
        in: query
        name: limit
        schema:
          type: number
      - description: "Where to start in the list. This is for use with pagination.\
          \ For example, an offset of 10 would skip the first 10 items and then return\
          \ the next limit items."
        in: query
        name: offset
        schema:
          type: number
      - description: A comma-separated list of filters. Each filter is of the form
          field:value.
        in: query
        name: filter
        schema:
          type: string
      - description: A comma-separated list of fields to sort by. A field prefixed
          by a - will be sorted in descending order.
        in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Members'
          description: Members response.
        "401":
          content: {}
          description: Invalid access token.
      summary: Returns a list of all members in the account.
      tags:
      - Team members
    post:
      operationId: postMembers
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/postMembers_request_inner'
              type: array
        description: New members to invite.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Members'
          description: Members response.
        "400":
          content: {}
          description: Invalid request body.
        "401":
          content: {}
          description: Invalid access token.
        "409":
          content: {}
          description: Status conflict.
      summary: Invite new members.
      tags:
      - Team members
      x-codegen-request-body-name: membersBody
  /members/me:
    get:
      operationId: getMe
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: Member response.
        "400":
          content: {}
          description: Invalid request body.
        "401":
          content: {}
          description: Invalid access token.
      summary: Get the current team member associated with the token
      tags:
      - Team members
  /members/{memberId}:
    delete:
      operationId: deleteMember
      parameters:
      - description: The member ID.
        in: path
        name: memberId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Action completed successfully.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Delete a team member by ID.
      tags:
      - Team members
    get:
      operationId: getMember
      parameters:
      - description: The member ID.
        in: path
        name: memberId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: Member response.
        "400":
          content: {}
          description: Invalid request body.
        "401":
          content: {}
          description: Invalid access token.
      summary: Get a single team member by ID.
      tags:
      - Team members
    patch:
      operationId: patchMember
      parameters:
      - description: The member ID.
        in: path
        name: memberId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              type: array
        description: Requires a JSON Patch representation of the desired changes to
          the project. 'http://jsonpatch.com/'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: Member response.
        "400":
          content: {}
          description: Invalid request body.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
        "409":
          content: {}
          description: Status conflict.
      summary: Modify a team member by ID.
      tags:
      - Team members
      x-codegen-request-body-name: patchDelta
  /projects:
    get:
      operationId: getProjects
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projects'
          description: Projects response
        "401":
          content: {}
          description: Invalid access token.
      summary: Returns a list of all projects in the account.
      tags:
      - Projects
    post:
      operationId: postProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postProject_request'
        description: Project keys must be unique within an account.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Successful Project response.
        "400":
          content: {}
          description: Invalid request body.
        "401":
          content: {}
          description: Invalid access token.
        "409":
          content: {}
          description: Status conflict.
      summary: Create a new project with the given key and name.
      tags:
      - Projects
      x-codegen-request-body-name: projectBody
  /projects/{projectKey}:
    delete:
      operationId: deleteProject
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Action completed successfully.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Delete a project by key. Caution-- deleting a project will delete all
        associated environments and feature flags. You cannot delete the last project
        in an account.
      tags:
      - Projects
    get:
      operationId: getProject
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Successful Project response.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Fetch a single project by key.
      tags:
      - Projects
    patch:
      operationId: patchProject
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              type: array
        description: Requires a JSON Patch representation of the desired changes to
          the project. 'http://jsonpatch.com/'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Successful Project response.
        "400":
          content: {}
          description: Invalid request body.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
        "409":
          content: {}
          description: Status conflict.
      summary: Modify a project by ID.
      tags:
      - Projects
      x-codegen-request-body-name: patchDelta
  /projects/{projectKey}/environments:
    post:
      operationId: postEnvironment
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentPost'
        description: New environment.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          description: Environment response.
        "400":
          content: {}
          description: Invalid request body.
        "401":
          content: {}
          description: Invalid access token.
        "409":
          content: {}
          description: Status conflict.
      summary: "Create a new environment in a specified project with a given name,\
        \ key, and swatch color."
      tags:
      - Environments
      x-codegen-request-body-name: environmentBody
  /projects/{projectKey}/environments/{environmentKey}:
    delete:
      operationId: deleteEnvironment
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Action completed successfully.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Delete an environment in a specific project.
      tags:
      - Environments
    get:
      operationId: getEnvironment
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          description: Environment response.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Get an environment given a project and key.
      tags:
      - Environments
    patch:
      operationId: patchEnvironment
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              type: array
        description: Requires a JSON Patch representation of the desired changes to
          the project. 'http://jsonpatch.com/'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          description: Environment response.
        "400":
          content: {}
          description: Invalid request body.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
        "409":
          content: {}
          description: Status conflict.
      summary: "Modify an environment by ID. If you try to patch the environment by\
        \ setting both required and requiredApprovalTags, it will result in an error.\
        \ Users can specify either required approvals for all flags in an environment\
        \ or those with specific tags, but not both. Only customers on an Enterprise\
        \ plan can require approval for flag updates with either mechanism."
      tags:
      - Environments
      x-codegen-request-body-name: patchDelta
  /projects/{projectKey}/environments/{environmentKey}/apiKey:
    post:
      operationId: resetEnvironmentSDKKey
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      - description: "An expiration time for the old environment SDK key, expressed\
          \ as a Unix epoch time in milliseconds. By default, the key will expire\
          \ immediately."
        in: query
        name: expiry
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          description: Environment response.
        "404":
          content: {}
          description: Invalid resource specifier.
        "409":
          content: {}
          description: Status conflict.
      summary: Reset an environment's SDK key with an optional expiry time for the
        old key.
      tags:
      - Environments
  /projects/{projectKey}/environments/{environmentKey}/mobileKey:
    post:
      operationId: resetEnvironmentMobileKey
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      - description: "The expiry parameter is deprecated for this endpoint, so the\
          \ old mobile key will always expire immediately. This parameter will be\
          \ removed in an upcoming major API client version."
        in: query
        name: expiry
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          description: Environment response.
        "404":
          content: {}
          description: Invalid resource specifier.
        "409":
          content: {}
          description: Status conflict.
      summary: "Reset an environment's mobile key. The optional expiry for the old\
        \ key is deprecated for this endpoint, so the old key will always expire immediately."
      tags:
      - Environments
  /projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/approval-requests:
    get:
      operationId: getApprovalRequests
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: The feature flag's key. The key identifies the flag in your code.
        in: path
        name: featureFlagKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalRequests'
          description: Approval requests response
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Get all approval requests for a feature flag config
      tags:
      - Feature flags
  /projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/approval-requests/{approvalRequestId}:
    delete:
      operationId: deleteApprovalRequest
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      - description: The feature flag's key. The key identifies the flag in your code.
        in: path
        name: featureFlagKey
        required: true
        schema:
          type: string
      - description: The approval request ID
        in: path
        name: approvalRequestId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApprovalRequest_request'
        description: Create a new approval request
        required: false
      responses:
        "204":
          content: {}
          description: Action completed successfully.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Delete an approval request for a feature flag config
      tags:
      - Feature flags
      x-codegen-request-body-name: approvalRequestConfigBody
    get:
      operationId: getApprovalRequest
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: The feature flag's key. The key identifies the flag in your code.
        in: path
        name: featureFlagKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      - description: The approval request ID
        in: path
        name: approvalRequestId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalRequests'
          description: Approval request response
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Get a single approval request for a feature flag config
      tags:
      - Feature flags
    post:
      operationId: postApprovalRequest
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: The feature flag's key. The key identifies the flag in your code.
        in: path
        name: featureFlagKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      - description: The approval request ID
        in: path
        name: approvalRequestId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApprovalRequest_request'
        description: Create a new approval request
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalRequest'
          description: Approval request response
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Create an approval request for a feature flag config
      tags:
      - Feature flags
      x-codegen-request-body-name: approvalRequestConfigBody
  /projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/approval-requests/{approvalRequestId}/apply:
    post:
      operationId: postApplyApprovalRequest
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: The feature flag's key. The key identifies the flag in your code.
        in: path
        name: featureFlagKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      - description: The approval request ID
        in: path
        name: approvalRequestId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApplyApprovalRequest_request'
        description: Apply an approval request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalRequests'
          description: Approval request applied response
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Apply approval request for a feature flag config
      tags:
      - Feature flags
      x-codegen-request-body-name: approvalRequestApplyConfigBody
  /projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/approval-requests/{approvalRequestId}/review:
    post:
      operationId: postReviewApprovalRequest
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: The feature flag's key. The key identifies the flag in your code.
        in: path
        name: featureFlagKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      - description: The approval request ID
        in: path
        name: approvalRequestId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postReviewApprovalRequest_request'
        description: Review an approval request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalRequests'
          description: Approval request reviewed response
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Review approval request for a feature flag config
      tags:
      - Feature flags
      x-codegen-request-body-name: approvalRequestReviewConfigBody
  /projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/scheduled-changes:
    get:
      operationId: getFlagConfigScheduledChanges
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: The feature flag's key. The key identifies the flag in your code.
        in: path
        name: featureFlagKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlagScheduledChanges'
          description: A list of scheduled changes for feature flag response.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Get all scheduled workflows for a feature flag by key.
      tags:
      - Feature flags
    post:
      operationId: postFlagConfigScheduledChanges
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: The feature flag's key. The key identifies the flag in your code.
        in: path
        name: featureFlagKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postFlagConfigScheduledChanges_request'
        description: Create scheduled changes on a feature flag.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlagScheduledChange'
          description: A scheduled change for feature flag response.
        "400":
          content: {}
          description: Invalid request body.
        "401":
          content: {}
          description: Invalid access token.
        "409":
          content: {}
          description: Status conflict.
      summary: Creates a new scheduled change for a feature flag.
      tags:
      - Feature flags
      x-codegen-request-body-name: flagConfigScheduledChangesPostBody
  /projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/scheduled-changes-conflicts:
    post:
      operationId: getFlagConfigScheduledChangesConflicts
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: The feature flag's key. The key identifies the flag in your code.
        in: path
        name: featureFlagKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getFlagConfigScheduledChangesConflicts_request'
        description: Used to determine if a semantic patch will result in conflicts
          with scheduled changes on a feature flag.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlagScheduledChangesConflicts'
          description: Scheduled changes conflict response
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: "Lists conflicts between the given instructions and any existing scheduled\
        \ changes for the feature flag. The actual HTTP verb should be REPORT, not\
        \ POST."
      tags:
      - Feature flags
      x-codegen-request-body-name: flagConfigScheduledChangesConflictsBody
  /projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/scheduled-changes/{scheduledChangeId}:
    delete:
      operationId: deleteFlagConfigScheduledChanges
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: The feature flag's key. The key identifies the flag in your code.
        in: path
        name: featureFlagKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      - description: The id of the scheduled change
        in: path
        name: scheduledChangeId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Action completed successfully.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Delete a scheduled change on a feature flag in an environment.
      tags:
      - Feature flags
    get:
      operationId: getFlagConfigScheduledChange
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: The feature flag's key. The key identifies the flag in your code.
        in: path
        name: featureFlagKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      - description: The id of the scheduled change
        in: path
        name: scheduledChangeId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlagScheduledChange'
          description: A scheduled change for feature flag response.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Get a scheduled change on a feature flag by id.
      tags:
      - Feature flags
    patch:
      operationId: patchFlagConfigScheduledChange
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: The feature flag's key. The key identifies the flag in your code.
        in: path
        name: featureFlagKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      - description: The id of the scheduled change
        in: path
        name: scheduledChangeId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchFlagConfigScheduledChange_request'
        description: Update scheduled changes on a feature flag.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlagScheduledChange'
          description: A Scheduled change for feature flag response.
        "400":
          content: {}
          description: Invalid request body.
        "401":
          content: {}
          description: Invalid access token.
        "409":
          content: {}
          description: Status conflict.
      summary: Updates an existing scheduled-change on a feature flag in an environment.
      tags:
      - Feature flags
      x-codegen-request-body-name: flagConfigScheduledChangesPatchBody
  /roles:
    get:
      operationId: getCustomRoles
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomRoles'
          description: Custom roles response.
        "401":
          content: {}
          description: Invalid access token.
      summary: Return a complete list of custom roles.
      tags:
      - Custom roles
    post:
      operationId: postCustomRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postCustomRole_request'
        description: New role or roles to create.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomRole'
          description: Custom role response.
        "400":
          content: {}
          description: Invalid request body.
        "401":
          content: {}
          description: Invalid access token.
        "409":
          content: {}
          description: Status conflict.
      summary: Create a new custom role.
      tags:
      - Custom roles
      x-codegen-request-body-name: customRoleBody
  /roles/{customRoleKey}:
    delete:
      operationId: deleteCustomRole
      parameters:
      - description: The custom role key.
        in: path
        name: customRoleKey
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Action completed successfully.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Delete a custom role by key.
      tags:
      - Custom roles
    get:
      operationId: getCustomRole
      parameters:
      - description: The custom role key.
        in: path
        name: customRoleKey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomRole'
          description: Custom role response.
        "400":
          content: {}
          description: Invalid request body.
        "401":
          content: {}
          description: Invalid access token.
      summary: Get one custom role by key.
      tags:
      - Custom roles
    patch:
      operationId: patchCustomRole
      parameters:
      - description: The custom role key.
        in: path
        name: customRoleKey
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              type: array
        description: Requires a JSON Patch representation of the desired changes to
          the project. 'http://jsonpatch.com/'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomRole'
          description: Custom role response.
        "400":
          content: {}
          description: Invalid request body.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
        "409":
          content: {}
          description: Status conflict.
      summary: Modify a custom role by key.
      tags:
      - Custom roles
      x-codegen-request-body-name: patchDelta
  /segments/{projectKey}/{environmentKey}:
    get:
      operationId: getUserSegments
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      - description: Filter by tag. A tag can be used to group flags across projects.
        in: query
        name: tag
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSegments'
          description: Segments response.
        "401":
          content: {}
          description: Invalid access token.
      summary: Get a list of all user segments in the given project.
      tags:
      - User segments
    post:
      operationId: postUserSegment
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postUserSegment_request'
        description: Create a new user segment.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSegment'
          description: User segment response.
        "400":
          content: {}
          description: Invalid request body.
        "401":
          content: {}
          description: Invalid access token.
        "409":
          content: {}
          description: Status conflict.
      summary: Creates a new user segment.
      tags:
      - User segments
      x-codegen-request-body-name: userSegmentBody
  /segments/{projectKey}/{environmentKey}/{userSegmentKey}:
    delete:
      operationId: deleteUserSegment
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      - description: The user segment's key. The key identifies the user segment in
          your code.
        in: path
        name: userSegmentKey
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Action completed successfully.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Delete a user segment.
      tags:
      - User segments
    get:
      operationId: getUserSegment
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      - description: The user segment's key. The key identifies the user segment in
          your code.
        in: path
        name: userSegmentKey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSegment'
          description: User segment response.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Get a single user segment by key.
      tags:
      - User segments
    patch:
      operationId: patchUserSegment
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      - description: The user segment's key. The key identifies the user segment in
          your code.
        in: path
        name: userSegmentKey
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              type: array
        description: Requires a JSON Patch representation of the desired changes to
          the project. 'http://jsonpatch.com/' Feature flag patches also support JSON
          Merge Patch format. 'https://tools.ietf.org/html/rfc7386' The addition of
          comments is also supported.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSegment'
          description: User segment response.
        "400":
          content: {}
          description: Invalid request body.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
        "409":
          content: {}
          description: Status conflict.
      summary: Perform a partial update to a user segment.
      tags:
      - User segments
      x-codegen-request-body-name: PatchOnly
  /segments/{projectKey}/{environmentKey}/{userSegmentKey}/users:
    post:
      operationId: updateBigSegmentTargets
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      - description: The user segment's key. The key identifies the user segment in
          your code.
        in: path
        name: userSegmentKey
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateBigSegmentTargets_request'
        description: Add or remove user targets to the included or excluded lists
          on a big segment. Contact your account manager for early access to this
          feature.
        required: true
      responses:
        "204":
          content: {}
          description: Action completed successfully.
        "400":
          content: {}
          description: Invalid request body.
        "401":
          content: {}
          description: Invalid access token.
      summary: Update targets included or excluded in a big segment
      tags:
      - User segments
      x-codegen-request-body-name: bigSegmentTargetsBody
  /segments/{projectKey}/{userSegmentKey}/expiring-user-targets/{environmentKey}:
    get:
      operationId: getExpiringUserTargetsOnSegment
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      - description: The user segment's key. The key identifies the user segment in
          your code.
        in: path
        name: userSegmentKey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTargetingExpirationForSegment'
          description: User targeting expirations on user segment response.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Get expiring user targets for user segment
      tags:
      - User segments
    patch:
      operationId: patchExpiringUserTargetsOnSegment
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      - description: The user segment's key. The key identifies the user segment in
          your code.
        in: path
        name: userSegmentKey
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/SemanticPatchOperation'
              type: array
        description: Requires a Semantic Patch representation of the desired changes
          to the resource. 'https://apidocs.launchdarkly.com/reference#updates-via-semantic-patches'.
          The addition of comments is also supported.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTargetingExpirationForSegment'
          description: User targeting expirations on user segment response.
        "400":
          content: {}
          description: Invalid request body.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
        "409":
          content: {}
          description: Status conflict.
      summary: "Update, add, or delete expiring user targets on user segment"
      tags:
      - User segments
      x-codegen-request-body-name: SemanticPatchWithComment
  /tokens:
    get:
      operationId: getTokens
      parameters:
      - description: "If set to true, and the authentication access token has the\
          \ \"Admin\" role, personal access tokens for all members will be retrieved."
        in: query
        name: showAll
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tokens'
          description: Tokens response.
        "401":
          content: {}
          description: Invalid access token.
      summary: Returns a list of tokens in the account.
      tags:
      - Access tokens
    post:
      operationId: postToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postToken_request'
        description: Create a new access token.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: Token response.
        "400":
          content: {}
          description: Invalid request body.
        "401":
          content: {}
          description: Invalid access token.
        "409":
          content: {}
          description: Status conflict.
      summary: Create a new token.
      tags:
      - Access tokens
      x-codegen-request-body-name: tokenBody
  /tokens/{tokenId}:
    delete:
      operationId: deleteToken
      parameters:
      - description: The access token ID.
        in: path
        name: tokenId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Action completed successfully.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Delete an access token by ID.
      tags:
      - Access tokens
    get:
      operationId: getToken
      parameters:
      - description: The access token ID.
        in: path
        name: tokenId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: Token response.
        "400":
          content: {}
          description: Invalid request body.
        "401":
          content: {}
          description: Invalid access token.
      summary: Get a single access token by ID.
      tags:
      - Access tokens
    patch:
      operationId: patchToken
      parameters:
      - description: The access token ID.
        in: path
        name: tokenId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              type: array
        description: Requires a JSON Patch representation of the desired changes to
          the project. 'http://jsonpatch.com/'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: Token response.
        "400":
          content: {}
          description: Invalid request body.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
        "409":
          content: {}
          description: Status conflict.
      summary: Modify an access token by ID.
      tags:
      - Access tokens
      x-codegen-request-body-name: patchDelta
  /tokens/{tokenId}/reset:
    post:
      operationId: resetToken
      parameters:
      - description: The access token ID.
        in: path
        name: tokenId
        required: true
        schema:
          type: string
      - description: "An expiration time for the old token key, expressed as a Unix\
          \ epoch time in milliseconds. By default, the token will expire immediately."
        in: query
        name: expiry
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: Token response.
        "400":
          content: {}
          description: Invalid request body.
        "401":
          content: {}
          description: Invalid access token.
      summary: Reset an access token's secret key with an optional expiry time for
        the old key.
      tags:
      - Access tokens
  /usage:
    get:
      operationId: getUsage
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usage'
          description: Usage endpoints
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageError'
          description: "This is a beta API, you must pass beta in the LD-API-Version\
            \ header to use it."
      summary: Returns of the usage endpoints available.
      tags:
      - Customer Metrics
  /usage/evaluations/{envId}/{flagKey}:
    get:
      operationId: getEvaluations
      parameters:
      - description: The environment id for the flag evaluations in question.
        in: path
        name: envId
        required: true
        schema:
          type: string
      - description: The key of the flag we want metrics for.
        in: path
        name: flagKey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamSDKVersion'
          description: Returns timeseries data and all sdk versions.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageError'
          description: "This is a beta API, you must pass beta in the LD-API-Version\
            \ header to use it."
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluationUsageError'
          description: The environment or flag you requested could not be found
      summary: Get events usage by event id and the feature flag key.
      tags:
      - Customer Metrics
  /usage/events:
    get:
      operationId: getEvents
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Events'
          description: Returns timeseries data and all sdk versions.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageError'
          description: "This is a beta API, you must pass beta in the LD-API-Version\
            \ header to use it."
      summary: Get events usage endpoints.
      tags:
      - Customer Metrics
  /usage/events/{type}:
    get:
      operationId: getEvent
      parameters:
      - description: The type of event we would like to track.
        in: path
        name: type
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamSDKVersion'
          description: Returns timeseries data and all sdk versions.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageError'
          description: "This is a beta API, you must pass beta in the LD-API-Version\
            \ header to use it."
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamUsageError'
          description: The stream source you requested could not be found
      summary: Get events usage by event type.
      tags:
      - Customer Metrics
  /usage/mau:
    get:
      operationId: getMAU
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MAU'
          description: Returns timeseries data and all sdk versions.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageError'
          description: "This is a beta API, you must pass beta in the LD-API-Version\
            \ header to use it."
      summary: Get monthly active user data.
      tags:
      - Customer Metrics
  /usage/mau/bycategory:
    get:
      operationId: getMAUByCategory
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MAUbyCategory'
          description: Returns timeseries data and all sdk versions.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageError'
          description: "This is a beta API, you must pass beta in the LD-API-Version\
            \ header to use it."
      summary: Get monthly active user data by category.
      tags:
      - Customer Metrics
  /usage/streams:
    get:
      operationId: getStreams
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Streams'
          description: Stream usage endpoints
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageError'
          description: "This is a beta API, you must pass beta in the LD-API-Version\
            \ header to use it."
      summary: Returns a list of all streams.
      tags:
      - Customer Metrics
  /usage/streams/{source}:
    get:
      operationId: getStream
      parameters:
      - description: The source of where the stream comes from.
        in: path
        name: source
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stream'
          description: Responds with time series data on stream usage.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageError'
          description: "This is a beta API, you must pass beta in the LD-API-Version\
            \ header to use it."
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamUsageError'
          description: The stream source you requested could not be found
      summary: Get a stream endpoint and return timeseries data.
      tags:
      - Customer Metrics
  /usage/streams/{source}/bysdkversion:
    get:
      operationId: getStreamBySDK
      parameters:
      - description: The source of where the stream comes from.
        in: path
        name: source
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamBySDK'
          description: Returns timeseries data and metadata on sdk version.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageError'
          description: "This is a beta API, you must pass beta in the LD-API-Version\
            \ header to use it."
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamUsageError'
          description: The stream source you requested could not be found
      summary: Get a stream timeseries data by source show sdk version metadata.
      tags:
      - Customer Metrics
  /usage/streams/{source}/sdkversions:
    get:
      operationId: getStreamSDKVersion
      parameters:
      - description: The source of where the stream comes from.
        in: path
        name: source
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamSDKVersion'
          description: Returns timeseries data and all sdk versions.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageError'
          description: "This is a beta API, you must pass beta in the LD-API-Version\
            \ header to use it."
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamUsageError'
          description: The stream source you requested could not be found
      summary: Get a stream timeseries data by source and show all sdk version associated.
      tags:
      - Customer Metrics
  /user-search/{projectKey}/{environmentKey}:
    get:
      operationId: getSearchUsers
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      - description: Search query.
        in: query
        name: q
        schema:
          type: string
      - description: Pagination limit.
        in: query
        name: limit
        schema:
          type: integer
      - description: Specifies the first item to return in the collection.
        in: query
        name: offset
        schema:
          type: integer
      - description: "A timestamp filter, expressed as a Unix epoch time in milliseconds.\
          \ All entries returned will have occurred after this timestamp."
        in: query
        name: after
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
          description: Users response.
        "401":
          content: {}
          description: Invalid access token.
      summary: "Search users in LaunchDarkly based on their last active date, or a\
        \ search query. It should not be used to enumerate all users in LaunchDarkly--\
        \ use the List users API resource."
      tags:
      - Users
  /users/{projectKey}/{environmentKey}:
    get:
      operationId: getUsers
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      - description: Pagination limit.
        in: query
        name: limit
        schema:
          type: integer
      - description: This parameter is required when following "next" links.
        in: query
        name: h
        schema:
          type: string
      - description: This parameter is required when following "next" links.
        in: query
        name: scrollId
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
          description: Users response.
        "401":
          content: {}
          description: Invalid access token.
      summary: "List all users in the environment. Includes the total count of users.\
        \ In each page, there will be up to 'limit' users returned (default 20). This\
        \ is useful for exporting all users in the system for further analysis. Paginated\
        \ collections will include a next link containing a URL with the next set\
        \ of elements in the collection."
      tags:
      - Users
  /users/{projectKey}/{environmentKey}/{userKey}:
    delete:
      operationId: deleteUser
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      - description: The user's key.
        in: path
        name: userKey
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Action completed successfully.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Delete a user by ID.
      tags:
      - Users
    get:
      operationId: getUser
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      - description: The user's key.
        in: path
        name: userKey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRecord'
          description: User response.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Get a user by key.
      tags:
      - Users
  /users/{projectKey}/{environmentKey}/{userKey}/flags:
    get:
      operationId: getUserFlagSettings
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      - description: The user's key.
        in: path
        name: userKey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFlagSettings'
          description: User flags settings response.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Fetch a single flag setting for a user by key.
      tags:
      - User settings
  /users/{projectKey}/{environmentKey}/{userKey}/flags/{featureFlagKey}:
    get:
      operationId: getUserFlagSetting
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      - description: The user's key.
        in: path
        name: userKey
        required: true
        schema:
          type: string
      - description: The feature flag's key. The key identifies the flag in your code.
        in: path
        name: featureFlagKey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFlagSetting'
          description: User flag setting response.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Fetch a single flag setting for a user by key.
      tags:
      - User settings
    put:
      operationId: putFlagSetting
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      - description: The user's key.
        in: path
        name: userKey
        required: true
        schema:
          type: string
      - description: The feature flag's key. The key identifies the flag in your code.
        in: path
        name: featureFlagKey
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putFlagSetting_request'
        required: true
      responses:
        "204":
          content: {}
          description: Action completed successfully.
        "400":
          content: {}
          description: Invalid request body.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Specifically enable or disable a feature flag for a user based on their
        key.
      tags:
      - User settings
      x-codegen-request-body-name: userSettingsBody
  /users/{projectKey}/{userKey}/expiring-user-targets/{environmentKey}:
    get:
      operationId: getExpiringUserTargetsForUser
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      - description: The user's key.
        in: path
        name: userKey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTargetingExpirationOnFlagsForUser'
          description: User targets of the requested feature flag.
        "401":
          content: {}
          description: Invalid access token.
      summary: Get expiring dates on flags for user
      tags:
      - User settings
    patch:
      operationId: patchExpiringUserTargetsForFlags
      parameters:
      - description: "The project key, used to tie the flags together under one project\
          \ so they can be managed together."
        in: path
        name: projectKey
        required: true
        schema:
          type: string
      - description: "The environment key, used to tie together flag configuration\
          \ and users under one environment so they can be managed together."
        in: path
        name: environmentKey
        required: true
        schema:
          type: string
      - description: The user's key.
        in: path
        name: userKey
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/SemanticPatchOperation'
              type: array
        description: Requires a Semantic Patch representation of the desired changes
          to the resource. 'https://apidocs.launchdarkly.com/reference#updates-via-semantic-patches'.
          The addition of comments is also supported.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTargetingExpirationOnFlagsForUser'
          description: User Targeting expiration for single user on all flags response.
        "400":
          content: {}
          description: Invalid request body.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
        "409":
          content: {}
          description: Status conflict.
      summary: "Update, add, or delete expiring user targets for a single user on\
        \ all flags"
      tags:
      - User settings
      x-codegen-request-body-name: SemanticPatchWithComment
  /webhooks:
    get:
      operationId: getWebhooks
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhooks'
          description: Webhooks response.
        "401":
          content: {}
          description: Invalid access token.
      summary: Fetch a list of all webhooks.
      tags:
      - Webhooks
    post:
      operationId: postWebhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postWebhook_request'
        description: New webhook.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
          description: Webhook response.
        "400":
          content: {}
          description: Invalid request body.
        "401":
          content: {}
          description: Invalid access token.
      summary: Create a webhook.
      tags:
      - Webhooks
      x-codegen-request-body-name: webhookBody
  /webhooks/{resourceId}:
    delete:
      operationId: deleteWebhook
      parameters:
      - description: The resource ID.
        in: path
        name: resourceId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Action completed successfully.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Delete a webhook by ID.
      tags:
      - Webhooks
    get:
      operationId: getWebhook
      parameters:
      - description: The resource ID.
        in: path
        name: resourceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
          description: Webhook response.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
      summary: Get a webhook by ID.
      tags:
      - Webhooks
    patch:
      operationId: patchWebhook
      parameters:
      - description: The resource ID.
        in: path
        name: resourceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchOperation'
              type: array
        description: Requires a JSON Patch representation of the desired changes to
          the project. 'http://jsonpatch.com/'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
          description: Webhook response.
        "400":
          content: {}
          description: Invalid request body.
        "401":
          content: {}
          description: Invalid access token.
        "404":
          content: {}
          description: Invalid resource specifier.
        "409":
          content: {}
          description: Status conflict.
      summary: Modify a webhook by ID.
      tags:
      - Webhooks
      x-codegen-request-body-name: patchDelta
components:
  parameters:
    After:
      description: "A timestamp filter, expressed as a Unix epoch time in milliseconds.\
        \ All entries returned will have occurred after this timestamp."
      in: query
      name: after
      schema:
        format: int64
        type: integer
    ApprovalRequestId:
      description: The approval request ID
      in: path
      name: approvalRequestId
      required: true
      schema:
        type: string
    ArchivedQuery:
      description: "When set to 1, only archived flags will be included in the list\
        \ of flags returned.  By default, archived flags are not included in the list\
        \ of flags."
      in: query
      name: archived
      schema:
        type: boolean
    AuditLimit:
      description: "A limit on the number of audit log entries to be returned, between\
        \ 1 and 20."
      in: query
      name: limit
      schema:
        type: number
    Before:
      description: "A timestamp filter, expressed as a Unix epoch time in milliseconds.\
        \ All entries returned will have before this timestamp."
      in: query
      name: before
      schema:
        format: int64
        type: integer
    CloneFlagKeyQuery:
      description: "The key of the feature flag to be cloned. The key identifies the\
        \ flag in your code.  For example, setting clone=flagKey will copy the full\
        \ targeting configuration for all environments (including on/off state) from\
        \ the original flag to the new flag."
      in: query
      name: clone
      schema:
        type: string
    CustomRoleKey:
      description: The custom role key.
      in: path
      name: customRoleKey
      required: true
      schema:
        type: string
    DestinationId:
      description: The data export destination ID.
      in: path
      name: destinationId
      required: true
      schema:
        type: string
    EnvironmentKey:
      description: "The environment key, used to tie together flag configuration and\
        \ users under one environment so they can be managed together."
      in: path
      name: environmentKey
      required: true
      schema:
        type: string
    EnvironmentKeyQuery:
      description: "By default, each feature will include configurations for each\
        \ environment. You can filter environments with the env query parameter. For\
        \ example, setting env=[\"production\"] will restrict the returned configurations\
        \ to just your production environment."
      explode: true
      in: query
      name: env
      schema:
        items:
          type: string
        type: array
      style: form
    EnvironmentMobileKeyExpiry:
      description: "The expiry parameter is deprecated for this endpoint, so the old\
        \ mobile key will always expire immediately. This parameter will be removed\
        \ in an upcoming major API client version."
      in: query
      name: expiry
      schema:
        format: int64
        type: integer
    EnvironmentSDKKeyExpiry:
      description: "An expiration time for the old environment SDK key, expressed\
        \ as a Unix epoch time in milliseconds. By default, the key will expire immediately."
      in: query
      name: expiry
      schema:
        format: int64
        type: integer
    EvaluationEnvId:
      description: The environment id for the flag evaluations in question.
      in: path
      name: envId
      required: true
      schema:
        type: string
    EvaluationFlagKey:
      description: The key of the flag we want metrics for.
      in: path
      name: flagKey
      required: true
      schema:
        type: string
    EventType:
      description: The type of event we would like to track.
      in: path
      name: type
      required: true
      schema:
        type: string
    FeatureFlagKey:
      description: The feature flag's key. The key identifies the flag in your code.
      in: path
      name: featureFlagKey
      required: true
      schema:
        type: string
    FilterQuery:
      description: A comma-separated list of filters. Each filter is of the form field:value.
      in: query
      name: filter
      schema:
        type: string
    HMAC:
      description: This parameter is required when following "next" links.
      in: query
      name: h
      schema:
        type: string
    IntegrationId:
      description: The integration ID.
      in: path
      name: integrationId
      required: true
      schema:
        type: string
    IntegrationKey:
      description: The key used to specify the integration kind.
      in: path
      name: integrationKey
      required: true
      schema:
        type: string
    Limit:
      description: Pagination limit.
      in: query
      name: limit
      schema:
        type: integer
    LimitQuery:
      description: "The number of objects to return. Defaults to -1, which returns\
        \ everything."
      in: query
      name: limit
      schema:
        type: number
    MemberId:
      description: The member ID.
      in: path
      name: memberId
      required: true
      schema:
        type: string
    Offset:
      description: Specifies the first item to return in the collection.
      in: query
      name: offset
      schema:
        type: integer
    OffsetQuery:
      description: "Where to start in the list. This is for use with pagination. For\
        \ example, an offset of 10 would skip the first 10 items and then return the\
        \ next limit items."
      in: query
      name: offset
      schema:
        type: number
    ProjectKey:
      description: "The project key, used to tie the flags together under one project\
        \ so they can be managed together."
      in: path
      name: projectKey
      required: true
      schema:
        type: string
    Q:
      description: Text to search for. You can search for the full or partial name
        of the resource involved or full or partial email address of the member who
        made the change.
      in: query
      name: q
      schema:
        type: string
    Query:
      description: Search query.
      in: query
      name: q
      schema:
        type: string
    RelayProxyConfigId:
      description: The relay proxy configuration ID
      in: path
      name: id
      required: true
      schema:
        type: string
    RelayProxyConfigsExpiry:
      description: "An expiration time for the old relay proxy configuration key,\
        \ expressed as a Unix epoch time in milliseconds. By default, the relay proxy\
        \ configuration will expire immediately"
      in: query
      name: expiry
      schema:
        format: int64
        type: integer
    ResourceId:
      description: The resource ID.
      in: path
      name: resourceId
      required: true
      schema:
        type: string
    ScheduledChangeId:
      description: The id of the scheduled change
      in: path
      name: scheduledChangeId
      required: true
      schema:
        type: string
    ScrollId:
      description: This parameter is required when following "next" links.
      in: query
      name: scrollId
      schema:
        type: string
    SortQuery:
      description: A comma-separated list of fields to sort by. A field prefixed by
        a - will be sorted in descending order.
      in: query
      name: sort
      schema:
        type: string
    Spec:
      description: "A resource specifier, allowing you to filter audit log listings\
        \ by resource."
      in: query
      name: spec
      schema:
        type: string
    StreamSource:
      description: The source of where the stream comes from.
      in: path
      name: source
      required: true
      schema:
        type: string
    SummaryQuery:
      description: "By default in api version >= 1, flags will _not_ include their\
        \ list of prerequisites, targets or rules.  Set summary=0 to include these\
        \ fields for each flag returned."
      in: query
      name: summary
      schema:
        type: boolean
    Tag:
      description: Filter by tag. A tag can be used to group flags across projects.
      in: query
      name: tag
      schema:
        type: string
    TokenExpiry:
      description: "An expiration time for the old token key, expressed as a Unix\
        \ epoch time in milliseconds. By default, the token will expire immediately."
      in: query
      name: expiry
      schema:
        format: int64
        type: integer
    TokenId:
      description: The access token ID.
      in: path
      name: tokenId
      required: true
      schema:
        type: string
    TokenShowAllQuery:
      description: "If set to true, and the authentication access token has the \"\
        Admin\" role, personal access tokens for all members will be retrieved."
      in: query
      name: showAll
      schema:
        type: boolean
    UserKey:
      description: The user's key.
      in: path
      name: userKey
      required: true
      schema:
        type: string
    UserSegmentKey:
      description: The user segment's key. The key identifies the user segment in
        your code.
      in: path
      name: userSegmentKey
      required: true
      schema:
        type: string
  requestBodies:
    ApprovalRequestApplyPostRequest:
      content:
        application/json:
          schema:
            properties:
              comment:
                description: comment will be included in audit log item for change.
                example: Applying approved changes
                type: string
            type: object
      description: Apply an approval request
      required: true
    ApprovalRequestPostRequest:
      content:
        application/json:
          schema:
            properties:
              comment:
                description: comment will be included in audit log item for change.
                type: string
              description:
                description: A name that describes the changes you would like to apply
                  to a feature flag configuration
                type: string
              executionDate:
                description: Timestamp for when instructions will be executed
                format: int64
                type: integer
              instructions:
                $ref: '#/components/schemas/SemanticPatchInstruction'
              notifyMemberIds:
                example:
                - memberId
                - memberId2
                items:
                  type: string
                type: array
              operatingOnId:
                description: ID of scheduled change to edit or delete
                type: string
            required:
            - description
            - instructions
            - notifyMemberIds
            type: object
      description: Create a new approval request
      required: false
    ApprovalRequestReviewPostRequest:
      content:
        application/json:
          schema:
            properties:
              comment:
                description: comment will be included in audit log item for change.
                example: This is a comment string
                type: string
              kind:
                description: "One of approve, decline, or comment."
                enum:
                - approve
                - decline
                - comment
                example: approve
                type: string
            required:
            - kind
            type: object
      description: Review an approval request
      required: true
    BigSegmentTargetsPostRequest:
      content:
        application/json:
          schema:
            properties:
              excluded:
                $ref: '#/components/schemas/BigSegmentTargetChanges'
              included:
                $ref: '#/components/schemas/BigSegmentTargetChanges'
            type: object
      description: Add or remove user targets to the included or excluded lists on
        a big segment. Contact your account manager for early access to this feature.
      required: true
    CustomRolePostRequest:
      content:
        application/json:
          schema:
            properties:
              description:
                description: Description of the custom role.
                example: Description of revenue team role here
                type: string
              key:
                description: The 20-hexdigit id or the key for a custom role.
                example: revenue-team
                type: string
              name:
                description: Name of the custom role.
                example: revenue team
                type: string
              policy:
                items:
                  $ref: '#/components/schemas/Policy'
                type: array
            required:
            - key
            - name
            - policy
            type: object
      description: New role or roles to create.
      required: true
    DestinationPostRequest:
      content:
        application/json:
          schema:
            properties:
              config:
                description: destination-specific configuration.
                example:
                  project: cool-project
                  topic: test
                properties: {}
                type: object
              kind:
                description: "The data export destination type. Available choices\
                  \ are kinesis, google-pubsub, mparticle, or segment."
                enum:
                - google-pubsub
                - kinesis
                - mparticle
                - segment
                example: google-pubsub
                type: string
              name:
                description: A human-readable name for your data export destination.
                example: Example Google Pub/Sub Destination
                type: string
              "true":
                description: Whether the data export destination is on or not.
                example: true
                type: boolean
            required:
            - config
            - kind
            - name
            type: object
      description: Create a new data export destination.
      required: true
    EnvironmentPostRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EnvironmentPost'
      description: New environment.
      required: true
    FeatureFlagCopyBody:
      content:
        application/json:
          schema:
            properties:
              comment:
                description: comment will be included in audit log item for change.
                example: This is a comment string
                type: string
              excludedActions:
                description: Define the parts of the flag configuration that will
                  not be copied.
                items:
                  $ref: '#/components/schemas/CopyActions'
                type: array
              includedActions:
                description: Define the parts of the flag configuration that will
                  be copied.
                items:
                  $ref: '#/components/schemas/CopyActions'
                type: array
              source:
                $ref: '#/components/schemas/FeatureFlagCopyObject'
              target:
                $ref: '#/components/schemas/FeatureFlagCopyObject'
            type: object
      description: Copy feature flag configurations between environments.
      required: true
    FeatureFlagPostRequest:
      content:
        application/json:
          schema:
            properties:
              clientSideAvailability:
                $ref: '#/components/schemas/ClientSideAvailability'
              defaults:
                $ref: '#/components/schemas/Defaults'
              description:
                description: A description of the feature flag.
                example: This flag controls whether test feature is turned on or not.
                type: string
              includeInSnippet:
                description: Whether or not this flag should be made available to
                  the client-side JavaScript SDK.
                type: boolean
              key:
                description: A unique key that will be used to reference the flag
                  in your code.
                example: new-test-flag
                type: string
              name:
                description: A human-friendly name for the feature flag. Remember
                  to note if this flag is intended to be temporary or permanent.
                example: new test flag
                type: string
              tags:
                description: Tags for the feature flag.
                items:
                  example: ""
                  type: string
                type: array
              temporary:
                description: Whether or not the flag is a temporary flag.
                type: boolean
              variations:
                description: An array of possible variations for the flag.
                items:
                  $ref: '#/components/schemas/Variation'
                type: array
            required:
            - key
            - name
            - variations
            type: object
      description: Create a new feature flag.
      required: true
    FlagConfigScheduledChangesConflictsBody:
      content:
        application/json:
          schema:
            properties:
              executionDate:
                description: A unix epoch time in milliseconds specifying the date
                  the scheduled changes will be applied
                type: integer
              instructions:
                $ref: '#/components/schemas/SemanticPatchInstruction'
            type: object
      description: Used to determine if a semantic patch will result in conflicts
        with scheduled changes on a feature flag.
      required: true
    FlagConfigScheduledChangesPatchBody:
      content:
        application/json:
          schema:
            properties:
              comment:
                description: Used to describe the scheduled changes.
                type: string
              instructions:
                $ref: '#/components/schemas/SemanticPatchInstruction'
            type: object
      description: Update scheduled changes on a feature flag.
      required: true
    FlagConfigScheduledChangesPostBody:
      content:
        application/json:
          schema:
            properties:
              comment:
                description: Used to describe the scheduled changes.
                type: string
              executionDate:
                description: A unix epoch time in milliseconds specifying the date
                  the scheduled changes will be applied
                type: integer
              instructions:
                $ref: '#/components/schemas/SemanticPatchInstruction'
            type: object
      description: Create scheduled changes on a feature flag.
      required: true
    IntegrationPostRequest:
      content:
        application/json:
          schema:
            properties:
              config:
                description: Integration-specific configuration fields.
                example:
                  apiKey: 582**************************116
                  hostURL: https://api.datadoghq.com
                properties: {}
                type: object
              name:
                description: A human-readable name for your subscription configuration.
                example: Example Datadog Integration
                type: string
              "true":
                description: Whether the integration subscription is active or not.
                example: true
                type: boolean
              statements:
                items:
                  $ref: '#/components/schemas/Statement'
                type: array
              tags:
                description: Tags for the integration subscription.
                example: []
                items:
                  type: string
                type: array
            required:
            - config
            - name
            type: object
      description: Create a new integration subscription.
      required: true
    MembersPostRequest:
      content:
        application/json:
          schema:
            items:
              properties:
                customRoles:
                  items:
                    description: The 20-hexdigit id or the key for a custom role.
                    example: revenue-team
                    type: string
                  type: array
                email:
                  example: exampleuser@email.com
                  type: string
                firstName:
                  example: Bob
                  type: string
                inlineRole:
                  items:
                    $ref: '#/components/schemas/Statement'
                  type: array
                lastName:
                  example: Loblaw
                  type: string
                role:
                  $ref: '#/components/schemas/Role'
              required:
              - email
              type: object
            type: array
      description: New members to invite.
      required: true
    PatchOnly:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/PatchOperation'
            type: array
      description: Requires a JSON Patch representation of the desired changes to
        the project. 'http://jsonpatch.com/' Feature flag patches also support JSON
        Merge Patch format. 'https://tools.ietf.org/html/rfc7386' The addition of
        comments is also supported.
      required: true
    PatchRequest:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/PatchOperation'
            type: array
      description: Requires a JSON Patch representation of the desired changes to
        the project. 'http://jsonpatch.com/'
      required: true
    PatchWithComment:
      content:
        application/json:
          schema:
            properties:
              comment:
                example: This is a comment string
                type: string
              patch:
                items:
                  $ref: '#/components/schemas/PatchOperation'
                type: array
            type: object
      description: "Requires a JSON Patch representation of the desired changes to\
        \ the project, and an optional comment. 'http://jsonpatch.com/' Feature flag\
        \ patches also support JSON Merge Patch format. 'https://tools.ietf.org/html/rfc7386'\
        \ The addition of comments is also supported."
      required: true
    ProjectPostRequest:
      content:
        application/json:
          schema:
            properties:
              defaultClientSideAvailability:
                $ref: '#/components/schemas/ClientSideAvailability'
              environments:
                items:
                  $ref: '#/components/schemas/EnvironmentPost'
                type: array
              includeInSnippetByDefault:
                example: false
                type: boolean
              key:
                example: new-project
                type: string
              name:
                example: New Project
                type: string
              tags:
                example:
                - ops
                - dev
                items:
                  type: string
                type: array
            required:
            - key
            - name
            type: object
      description: Project keys must be unique within an account.
      required: true
    RelayProxyConfigPostRequest:
      content:
        application/json:
          schema:
            properties:
              name:
                description: A human-friendly name for the relay proxy configuration
                example: My relay proxy config
                type: string
              policy:
                items:
                  $ref: '#/components/schemas/Policy'
                type: array
            type: object
      description: Create a new relay proxy configuration
      required: true
    SemanticPatchWithComment:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/SemanticPatchOperation'
            type: array
      description: Requires a Semantic Patch representation of the desired changes
        to the resource. 'https://apidocs.launchdarkly.com/reference#updates-via-semantic-patches'.
        The addition of comments is also supported.
      required: true
    TokensPostRequest:
      content:
        application/json:
          schema:
            properties:
              customRoleIds:
                description: A list of custom role IDs to use as access limits for
                  the access token
                items:
                  example: ""
                  type: string
                type: array
              defaultApiVersion:
                description: The default API version for this token
                type: integer
              inlineRole:
                items:
                  $ref: '#/components/schemas/Statement'
                type: array
              name:
                description: A human-friendly name for the access token
                example: My access token
                type: string
              role:
                description: The name of a built-in role for the token
                example: writer
                type: string
              serviceToken:
                description: Whether the token will be a service token https://docs.launchdarkly.com/home/account-security/api-access-tokens#service-tokens
                type: boolean
            type: object
      description: Create a new access token.
      required: true
    UserSegmentPostRequest:
      content:
        application/json:
          schema:
            properties:
              description:
                description: A description for the user segment.
                example: Users in this segment will have access to beta features.
                type: string
              key:
                description: A unique key that will be used to reference the user
                  segment in feature flags.
                example: new-segment
                type: string
              name:
                description: A human-friendly name for the user segment.
                example: new segment
                type: string
              tags:
                description: Tags for the user segment.
                items:
                  example: ""
                  type: string
                type: array
              unbounded:
                description: Controls whether this is considered a "big segment" which
                  can support an unlimited numbers of users. Include/exclude lists
                  sent with this payload are not used in big segments. Contact your
                  account manager for early access to this feature.
                example: false
                type: boolean
            required:
            - key
            - name
            type: object
      description: Create a new user segment.
      required: true
    UserSettingsPutRequest:
      content:
        application/json:
          schema:
            properties:
              setting:
                description: |
                  The variation value to set for the user. Must match the variation type of the flag.
                type: boolean
            type: object
      required: true
    WebhookPostRequest:
      content:
        application/json:
          schema:
            properties:
              name:
                description: The name of the webhook.
                example: Example hook
                type: string
              "true":
                description: Whether this webhook is enabled or not.
                example: true
                type: boolean
              secret:
                description: "If sign is true, and the secret attribute is omitted,\
                  \ LaunchDarkly will automatically generate a secret for you."
                example: <password>
                type: string
              sign:
                description: "If sign is false, the webhook will not include a signature\
                  \ header, and the secret can be omitted."
                type: boolean
              statements:
                items:
                  $ref: '#/components/schemas/Statement'
                type: array
              tags:
                description: Tags for the webhook.
                example: []
                items:
                  type: string
                type: array
              url:
                description: The URL of the remote webhook.
                example: https://example.com/example
                type: string
            required:
            - sign
            - url
            type: object
      description: New webhook.
      required: true
  responses:
    BetaApi403:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UsageError'
      description: "This is a beta API, you must pass beta in the LD-API-Version header\
        \ to use it."
    CustomRole2xx:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomRole'
      description: Custom role response.
    Destination2xx:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Destination'
      description: Destination response.
    Environment2xx:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Environment'
      description: Environment response.
    EvaluationUsage404:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EvaluationUsageError'
      description: The environment or flag you requested could not be found
    Member2xx:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Member'
      description: Member response.
    Project2xx:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Project'
      description: Successful Project response.
    RelayProxyConfig2xx:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RelayProxyConfig'
      description: Relay proxy config response.
    Root200:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Links'
      description: A list of links to available resources in the API.
    Standard201:
      content: {}
      description: Resource created.
    Standard204:
      content: {}
      description: Action completed successfully.
    Standard400:
      content: {}
      description: Invalid request body.
    Standard401:
      content: {}
      description: Invalid access token.
    Standard403:
      content: {}
      description: Access to the requested resource was denied.
    Standard404:
      content: {}
      description: Invalid resource specifier.
    Standard409:
      content: {}
      description: Status conflict.
    StreamUsage404:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StreamUsageError'
      description: The stream source you requested could not be found
    Token2xx:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Token'
      description: Token response.
    UserSegment2xx:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserSegment'
      description: User segment response.
    Webhook2xx:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Webhook'
      description: Webhook response.
  schemas:
    ApprovalRequest:
      example:
        allReviews:
        - kind: null
          _id: 5a580a01b4ff89217bdf9dc1
          creationDate: 6
          memberId: 5a580a01b4ff89217bdf9dc1
        - kind: null
          _id: 5a580a01b4ff89217bdf9dc1
          creationDate: 6
          memberId: 5a580a01b4ff89217bdf9dc1
        instructions:
        - kind: removeUserTargets
        - kind: removeUserTargets
        notifyMemberIds:
        - memberId
        - memberId2
        executionDate: 5
        appliedDate: 1
        creationDate: 5
        requestorId: requestorId
        appliedByMemberID: appliedByMemberID
        operatingOnId: operatingOnId
        reviewStatus: null
        _id: 5a580a01b4ff89217bdf9dc1
        _version: 0
        status: pending
      properties:
        _id:
          description: The unique resource id.
          example: 5a580a01b4ff89217bdf9dc1
          type: string
        _version:
          type: integer
        allReviews:
          items:
            $ref: '#/components/schemas/ApprovalRequestReview'
          type: array
        appliedByMemberID:
          description: The id of the member that applied the approval request
          type: string
        appliedDate:
          description: A unix epoch time in milliseconds specifying the date the approval
            request was applied
          type: integer
        creationDate:
          description: A unix epoch time in milliseconds specifying the date the approval
            request was requested
          type: integer
        executionDate:
          description: Timestamp for when instructions will be executed
          format: int64
          type: integer
        instructions:
          items:
            $ref: '#/components/schemas/SemanticPatchInstruction_inner'
          type: array
        notifyMemberIds:
          example:
          - memberId
          - memberId2
          items:
            type: string
          type: array
        operatingOnId:
          description: ID of scheduled change to edit or delete
          type: string
        requestorId:
          description: The id of the member that requested the change
          type: string
        reviewStatus:
          $ref: '#/components/schemas/ApprovalRequestReviewStatus'
        status:
          description: |
            | Name      | Description |
            | ---------:| ----------- |
            | pending   | the approval request has not been applied yet |
            | completed | the approval request has been applied successfully |
            | scheduled | the approval request for a scheduled change has been applied successfully |
            | failed    | the approval request has been applied but the changes were not applied successfully |
          enum:
          - pending
          - completed
          - scheduled
          - failed
          type: string
      type: object
    ApprovalRequestReview:
      example:
        kind: null
        _id: 5a580a01b4ff89217bdf9dc1
        creationDate: 6
        memberId: 5a580a01b4ff89217bdf9dc1
      properties:
        _id:
          description: The unique resource id.
          example: 5a580a01b4ff89217bdf9dc1
          type: string
        creationDate:
          description: A unix epoch time in milliseconds specifying the date the approval
            request was reviewed
          type: integer
        kind:
          $ref: '#/components/schemas/ApprovalRequestReviewStatus'
        memberId:
          description: The unique resource id.
          example: 5a580a01b4ff89217bdf9dc1
          type: string
      type: object
    ApprovalRequestReviewStatus:
      description: |
        | Name     | Description |
        | --------:| ----------- |
        | pending  | the approval request has not been reviewed yet |
        | approved | the approval request has been approved and can now be applied |
        | declined | the approval request has been declined and cannot be applied |
      enum:
      - pending
      - approved
      - declined
      type: string
    ApprovalRequests:
      example:
        _links:
          next:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        items:
        - allReviews:
          - kind: null
            _id: 5a580a01b4ff89217bdf9dc1
            creationDate: 6
            memberId: 5a580a01b4ff89217bdf9dc1
          - kind: null
            _id: 5a580a01b4ff89217bdf9dc1
            creationDate: 6
            memberId: 5a580a01b4ff89217bdf9dc1
          instructions:
          - kind: removeUserTargets
          - kind: removeUserTargets
          notifyMemberIds:
          - memberId
          - memberId2
          executionDate: 5
          appliedDate: 1
          creationDate: 5
          requestorId: requestorId
          appliedByMemberID: appliedByMemberID
          operatingOnId: operatingOnId
          reviewStatus: null
          _id: 5a580a01b4ff89217bdf9dc1
          _version: 0
          status: pending
        - allReviews:
          - kind: null
            _id: 5a580a01b4ff89217bdf9dc1
            creationDate: 6
            memberId: 5a580a01b4ff89217bdf9dc1
          - kind: null
            _id: 5a580a01b4ff89217bdf9dc1
            creationDate: 6
            memberId: 5a580a01b4ff89217bdf9dc1
          instructions:
          - kind: removeUserTargets
          - kind: removeUserTargets
          notifyMemberIds:
          - memberId
          - memberId2
          executionDate: 5
          appliedDate: 1
          creationDate: 5
          requestorId: requestorId
          appliedByMemberID: appliedByMemberID
          operatingOnId: operatingOnId
          reviewStatus: null
          _id: 5a580a01b4ff89217bdf9dc1
          _version: 0
          status: pending
      properties:
        _links:
          $ref: '#/components/schemas/Links'
        items:
          items:
            $ref: '#/components/schemas/ApprovalRequest'
          type: array
      type: object
    AuditLogEntries:
      example:
        _links:
          next:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        items:
        - date: 1472243938774
          titleVerb: changed the name of
          _links:
            next:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          kind: environment
          member:
            firstName: Alan
            lastName: Turing
            _verified: true
            role: null
            _links:
              next:
                href: /api/v2/endpoint
                type: application/json
              self:
                href: /api/v2/endpoint
                type: application/json
            _pendingInvite: true
            _lastSeen: 1469326565348
            isBeta: true
            _id: 5a580a01b4ff89217bdf9dc1
            _lastSeenMetadata:
              tokenId: 5fd2a1ee05600316d5cb3e96
            email: user@launchdarkly.com
            customRoles:
            - 5a580a01b4ff89217bdf9dc1
            - 5a580a01b4ff89217bdf9dc1
          name: Testing
          description: Changed the name from Test to Testing
          comment: This is a comment string
          _id: 5a580a01b4ff89217bdf9dc1
          shortDescription: '""'
          title: "[Reese Applebaum](mailto:refapp@launchdarkly.com) changed the name\
            \ of [Testing](https://app.launchdarkly.com/settings#/projects)"
          target:
            _links:
              next:
                href: /api/v2/endpoint
                type: application/json
              self:
                href: /api/v2/endpoint
                type: application/json
            name: Testing
            resources:
            - proj/alexis:env/test
            - proj/alexis:env/test
        - date: 1472243938774
          titleVerb: changed the name of
          _links:
            next:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          kind: environment
          member:
            firstName: Alan
            lastName: Turing
            _verified: true
            role: null
            _links:
              next:
                href: /api/v2/endpoint
                type: application/json
              self:
                href: /api/v2/endpoint
                type: application/json
            _pendingInvite: true
            _lastSeen: 1469326565348
            isBeta: true
            _id: 5a580a01b4ff89217bdf9dc1
            _lastSeenMetadata:
              tokenId: 5fd2a1ee05600316d5cb3e96
            email: user@launchdarkly.com
            customRoles:
            - 5a580a01b4ff89217bdf9dc1
            - 5a580a01b4ff89217bdf9dc1
          name: Testing
          description: Changed the name from Test to Testing
          comment: This is a comment string
          _id: 5a580a01b4ff89217bdf9dc1
          shortDescription: '""'
          title: "[Reese Applebaum](mailto:refapp@launchdarkly.com) changed the name\
            \ of [Testing](https://app.launchdarkly.com/settings#/projects)"
          target:
            _links:
              next:
                href: /api/v2/endpoint
                type: application/json
              self:
                href: /api/v2/endpoint
                type: application/json
            name: Testing
            resources:
            - proj/alexis:env/test
            - proj/alexis:env/test
      properties:
        _links:
          $ref: '#/components/schemas/Links'
        items:
          items:
            $ref: '#/components/schemas/AuditLogEntry'
          type: array
      type: object
    AuditLogEntry:
      example:
        date: 1472243938774
        titleVerb: changed the name of
        _links:
          next:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        kind: environment
        member:
          firstName: Alan
          lastName: Turing
          _verified: true
          role: null
          _links:
            next:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          _pendingInvite: true
          _lastSeen: 1469326565348
          isBeta: true
          _id: 5a580a01b4ff89217bdf9dc1
          _lastSeenMetadata:
            tokenId: 5fd2a1ee05600316d5cb3e96
          email: user@launchdarkly.com
          customRoles:
          - 5a580a01b4ff89217bdf9dc1
          - 5a580a01b4ff89217bdf9dc1
        name: Testing
        description: Changed the name from Test to Testing
        comment: This is a comment string
        _id: 5a580a01b4ff89217bdf9dc1
        shortDescription: '""'
        title: "[Reese Applebaum](mailto:refapp@launchdarkly.com) changed the name\
          \ of [Testing](https://app.launchdarkly.com/settings#/projects)"
        target:
          _links:
            next:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          name: Testing
          resources:
          - proj/alexis:env/test
          - proj/alexis:env/test
      properties:
        _id:
          description: The unique resource id.
          example: 5a580a01b4ff89217bdf9dc1
          type: string
        _links:
          $ref: '#/components/schemas/Links'
        comment:
          example: This is a comment string
          type: string
        date:
          example: 1472243938774
          format: int64
          type: integer
        description:
          example: Changed the name from Test to Testing
          type: string
        kind:
          example: environment
          type: string
        member:
          $ref: '#/components/schemas/Member'
        name:
          example: Testing
          type: string
        shortDescription:
          example: '""'
          type: string
        target:
          $ref: '#/components/schemas/AuditLogEntry_target'
        title:
          example: "[Reese Applebaum](mailto:refapp@launchdarkly.com) changed the\
            \ name of [Testing](https://app.launchdarkly.com/settings#/projects)"
          type: string
        titleVerb:
          example: changed the name of
          type: string
      type: object
    BigSegmentTargetChanges:
      properties:
        add:
          description: Users to add to this list of targets
          example:
          - user@launchdarkly.com
          items:
            type: string
          type: array
        remove:
          description: Users to remove from this list of targets
          example: []
          items:
            type: string
          type: array
      type: object
    Clause:
      example:
        op: in
        negate: true
        values:
        - Top Customers
        - Top Customers
        _id: _id
        attribute: groups
      properties:
        _id:
          type: string
        attribute:
          example: groups
          type: string
        negate:
          type: boolean
        op:
          example: in
          type: string
        values:
          items:
            example: Top Customers
            properties: {}
            type: object
          type: array
      type: object
    ClientSideAvailability:
      example:
        usingEnvironmentId: true
        usingMobileKey: true
      properties:
        usingEnvironmentId:
          description: "When set to true, this flag will be available to SDKs using\
            \ the client-side id."
          type: boolean
        usingMobileKey:
          description: "When set to true, this flag will be available to SDKS using\
            \ a mobile key."
          type: boolean
      type: object
    CopyActions:
      enum:
      - updateOn
      - updatePrerequisites
      - updateTargets
      - updateRules
      - updateFallthrough
      - updateOffVariation
      example: "[]"
      type: string
    CustomProperty:
      description: A name and value describing a custom property.
      properties:
        name:
          description: The name of the property.
          example: My property
          type: string
        value:
          description: Values for this property.
          items:
            example: ""
            type: string
          type: array
      required:
      - name
      type: object
    CustomPropertyValues:
      description: Values for this property.
      example:
      - Value 1
      - Value 2
      items:
        type: string
      type: array
    CustomRole:
      example:
        _links:
          next:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        name: revenue team
        description: Description of revenue team role here
        _id: 5a580a01b4ff89217bdf9dc1
        key: revenue-team
        policy:
        - notActions:
          - updateOn
          - updateOn
          notResources:
          - proj/*:env/*:flag/my-flag
          - proj/*:env/*:flag/my-flag
          effect: deny
          resources:
          - proj/*:env/*:flag/my-flag
          - proj/*:env/*:flag/my-flag
          actions:
          - updateOn
          - updateOn
        - notActions:
          - updateOn
          - updateOn
          notResources:
          - proj/*:env/*:flag/my-flag
          - proj/*:env/*:flag/my-flag
          effect: deny
          resources:
          - proj/*:env/*:flag/my-flag
          - proj/*:env/*:flag/my-flag
          actions:
          - updateOn
          - updateOn
      properties:
        _id:
          description: The unique resource id.
          example: 5a580a01b4ff89217bdf9dc1
          type: string
        _links:
          $ref: '#/components/schemas/Links'
        description:
          description: Description of the custom role.
          example: Description of revenue team role here
          type: string
        key:
          description: The 20-hexdigit id or the key for a custom role.
          example: revenue-team
          type: string
        name:
          description: Name of the custom role.
          example: revenue team
          type: string
        policy:
          items:
            $ref: '#/components/schemas/Policy'
          type: array
      type: object
    CustomRoles:
      example:
        _links:
          next:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        items:
        - _links:
            next:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          name: revenue team
          description: Description of revenue team role here
          _id: 5a580a01b4ff89217bdf9dc1
          key: revenue-team
          policy:
          - notActions:
            - updateOn
            - updateOn
            notResources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            effect: deny
            resources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            actions:
            - updateOn
            - updateOn
          - notActions:
            - updateOn
            - updateOn
            notResources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            effect: deny
            resources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            actions:
            - updateOn
            - updateOn
        - _links:
            next:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          name: revenue team
          description: Description of revenue team role here
          _id: 5a580a01b4ff89217bdf9dc1
          key: revenue-team
          policy:
          - notActions:
            - updateOn
            - updateOn
            notResources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            effect: deny
            resources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            actions:
            - updateOn
            - updateOn
          - notActions:
            - updateOn
            - updateOn
            notResources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            effect: deny
            resources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            actions:
            - updateOn
            - updateOn
      properties:
        _links:
          $ref: '#/components/schemas/Links'
        items:
          items:
            $ref: '#/components/schemas/CustomRole'
          type: array
      type: object
    Defaults:
      description: Default values to be used when a new environment is created.
      example:
        onVariation: 6
        offVariation: 0
      properties:
        offVariation:
          description: The index of the variation to be served when a flag is off.
          type: integer
        onVariation:
          description: The index of the variation to be served when a flag's targeting
            is on (default variation).
          type: integer
      required:
      - offVariation
      - onVariation
      type: object
    DependentFlag:
      example:
        _links:
          self:
            href: /api/v2/endpoint
            type: application/json
        _site:
          href: /features/sort.order
          type: text/html
        name: name
        key: key
      properties:
        _links:
          $ref: '#/components/schemas/DependentFlag__links'
        _site:
          $ref: '#/components/schemas/Site'
        key:
          type: string
        name:
          type: string
      type: object
    DependentFlagEnvironment:
      example:
        _links:
          flagLink:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        _site:
          href: /features/sort.order
          type: text/html
        name: name
        key: key
      properties:
        _links:
          $ref: '#/components/schemas/DependentFlagEnvironment__links'
        _site:
          $ref: '#/components/schemas/Site'
        key:
          type: string
        name:
          type: string
      type: object
    DependentFlagsByEnvironment:
      example:
        _links:
          parent:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        _site:
          href: /features/sort.order
          type: text/html
        items:
        - _links:
            self:
              href: /api/v2/endpoint
              type: application/json
          _site:
            href: /features/sort.order
            type: text/html
          name: name
          key: key
        - _links:
            self:
              href: /api/v2/endpoint
              type: application/json
          _site:
            href: /features/sort.order
            type: text/html
          name: name
          key: key
      properties:
        _links:
          $ref: '#/components/schemas/DependentFlagsLinks'
        _site:
          $ref: '#/components/schemas/Site'
        items:
          items:
            $ref: '#/components/schemas/DependentFlag'
          type: array
      type: object
    DependentFlagsLinks:
      example:
        parent:
          href: /api/v2/endpoint
          type: application/json
        self:
          href: /api/v2/endpoint
          type: application/json
      properties:
        parent:
          $ref: '#/components/schemas/Link'
        self:
          $ref: '#/components/schemas/Link'
      type: object
    Destination:
      example:
        _links:
          next:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        kind: google-pubsub
        name: Example Google Pub/Sub Destination
        "true": true
        _id: 37ed9aad-de0a-4665-932e-41c35587aeea
        config:
          project: cool-project
          topic: test
        version: 2
      properties:
        _id:
          description: Unique destination ID.
          example: 37ed9aad-de0a-4665-932e-41c35587aeea
          type: string
        _links:
          $ref: '#/components/schemas/Links'
        config:
          description: destination-specific configuration.
          example:
            project: cool-project
            topic: test
          properties: {}
          type: object
        kind:
          description: "Destination type (\"google-pubsub\", \"kinesis\", \"mparticle\"\
            , or \"segment\")"
          enum:
          - google-pubsub
          - kinesis
          - mparticle
          - segment
          example: google-pubsub
          type: string
        name:
          description: The destination name
          example: Example Google Pub/Sub Destination
          type: string
        "true":
          description: Whether the data export destination is on or not.
          example: true
          type: boolean
        version:
          example: 2
          type: integer
      type: object
    DestinationAmazonKinesis:
      properties:
        region:
          example: us-east-1
          type: string
        roleArn:
          example: arn:aws:iam::123456789012:role/marketingadmin
          type: string
        streamName:
          example: cat-stream
          type: string
      type: object
    DestinationGooglePubSub:
      properties:
        project:
          example: cool-project
          type: string
        topic:
          example: test
          type: string
      type: object
    DestinationMParticle:
      properties:
        apiKey:
          example: apiKeyfromMParticle
          type: string
        environment:
          example: production
          type: string
        secret:
          example: mParticleSecret
          type: string
        userIdentity:
          example: customer_id
          type: string
      type: object
    DestinationSegment:
      properties:
        writeKey:
          example: segmentWriteKey
          type: string
      type: object
    Destinations:
      example:
        _links:
          next:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        items:
        - _links:
            next:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          kind: google-pubsub
          name: Example Google Pub/Sub Destination
          "true": true
          _id: 37ed9aad-de0a-4665-932e-41c35587aeea
          config:
            project: cool-project
            topic: test
          version: 2
        - _links:
            next:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          kind: google-pubsub
          name: Example Google Pub/Sub Destination
          "true": true
          _id: 37ed9aad-de0a-4665-932e-41c35587aeea
          config:
            project: cool-project
            topic: test
          version: 2
      properties:
        _links:
          $ref: '#/components/schemas/Links'
        items:
          items:
            $ref: '#/components/schemas/Destination'
          type: array
      type: object
    Environment:
      example:
        approvalSettings:
          serviceKind: launchdarkly
          canReviewOwnRequest: true
          requiredApprovalTags:
          - requiredApprovalTags
          - requiredApprovalTags
          canApplyDeclinedChanges: true
          minNumApprovals: 2
          required: true
        apiKey: XXX
        color: "417505"
        _links:
          next:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        confirmChanges: false
        requireComments: false
        mobileKey: XXX
        defaultTrackEvents: false
        tags:
        - tags
        - tags
        defaultTtl: 0.0
        name: Production
        _id: 5a580a01b4ff89217bdf9dc1
        secureMode: false
        key: production
      properties:
        _id:
          description: The unique resource id.
          example: 5a580a01b4ff89217bdf9dc1
          type: string
        _links:
          $ref: '#/components/schemas/Links'
        apiKey:
          description: The SDK key for backend LaunchDarkly SDKs.
          example: XXX
          type: string
        approvalSettings:
          $ref: '#/components/schemas/Environment_approvalSettings'
        color:
          description: The swatch color for the environment.
          example: "417505"
          type: string
        confirmChanges:
          description: Determines if this environment requires confirmation for flag
            and segment changes.
          example: false
          type: boolean
        defaultTrackEvents:
          description: Set to true to send detailed event information for new flags.
          example: false
          type: boolean
        defaultTtl:
          description: The default TTL.
          example: 0.0
          type: number
        key:
          description: The key for the environment.
          example: production
          type: string
        mobileKey:
          description: The SDK key for mobile LaunchDarkly SDKs.
          example: XXX
          type: string
        name:
          description: The name of the environment.
          example: Production
          type: string
        requireComments:
          description: Determines if this environment requires comments for flag and
            segment changes.
          example: false
          type: boolean
        secureMode:
          description: Determines if this environment is in safe mode.
          example: false
          type: boolean
        tags:
          description: An array of tags for this environment.
          items:
            type: string
          type: array
      type: object
    EnvironmentPost:
      example:
        color: "417505"
        confirmChanges: false
        defaultTtl: 0.0
        name: Development
        requireComments: false
        defaultTrackEvents: false
        secureMode: false
        key: dev
        tags:
        - tag1
        - tag2
      properties:
        color:
          description: "A color swatch (as an RGB hex value with no leading '#', e.g.\
            \ C8C8C8)."
          example: "417505"
          type: string
        confirmChanges:
          description: Determines if this environment requires confirmation for flag
            and segment changes.
          example: false
          type: boolean
        defaultTrackEvents:
          description: Set to true to send detailed event information for newly created
            flags.
          example: false
          type: boolean
        defaultTtl:
          description: The default TTL for the new environment.
          example: 0.0
          type: number
        key:
          description: A project-unique key for the new environment.
          example: dev
          type: string
        name:
          description: The name of the new environment.
          example: Development
          type: string
        requireComments:
          description: Determines if this environment requires comments for flag and
            segment changes.
          example: false
          type: boolean
        secureMode:
          description: Determines whether the environment is in secure mode.
          example: false
          type: boolean
        tags:
          description: An array of tags for this environment.
          example:
          - tag1
          - tag2
          items:
            type: string
          type: array
      required:
      - color
      - key
      - name
      type: object
    EvaluationUsageError:
      properties:
        code:
          example: not_found
          type: string
        message:
          example: unknown environment
          type: string
      type: object
    Events:
      example:
        links:
          parent:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
          subseries:
          - href: /api/v2/endpoint
            type: application/json
          - href: /api/v2/endpoint
            type: application/json
      properties:
        links:
          $ref: '#/components/schemas/UsageLinks'
      type: object
    Fallthrough:
      example:
        rollout:
          variations:
          - weight: 5
            variation: 1
          - weight: 5
            variation: 1
          bucketBy: bucketBy
        variation: 5
      properties:
        rollout:
          $ref: '#/components/schemas/Rollout'
        variation:
          type: integer
      type: object
    FeatureFlag:
      example:
        archivedDate: 1443652232590
        temporary: false
        _maintainer:
          firstName: Alan
          lastName: Turing
          _verified: true
          role: null
          _links:
            next:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          _pendingInvite: true
          _lastSeen: 1469326565348
          isBeta: true
          _id: 5a580a01b4ff89217bdf9dc1
          _lastSeenMetadata:
            tokenId: 5fd2a1ee05600316d5cb3e96
          email: user@launchdarkly.com
          customRoles:
          - 5a580a01b4ff89217bdf9dc1
          - 5a580a01b4ff89217bdf9dc1
        clientSideAvailability:
          usingEnvironmentId: true
          usingMobileKey: true
        _links:
          next:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        environments:
          key:
            salt: YWx0ZXJuYXRlLnBhZ2U=
            rules:
            - rollout:
                variations:
                - weight: 5
                  variation: 1
                - weight: 5
                  variation: 1
                bucketBy: bucketBy
              clauses:
              - op: in
                negate: true
                values:
                - Top Customers
                - Top Customers
                _id: _id
                attribute: groups
              - op: in
                negate: true
                values:
                - Top Customers
                - Top Customers
                _id: _id
                attribute: groups
              description: description
              _id: _id
              trackEvents: true
              variation: 9
            - rollout:
                variations:
                - weight: 5
                  variation: 1
                - weight: 5
                  variation: 1
                bucketBy: bucketBy
              clauses:
              - op: in
                negate: true
                values:
                - Top Customers
                - Top Customers
                _id: _id
                attribute: groups
              - op: in
                negate: true
                values:
                - Top Customers
                - Top Customers
                _id: _id
                attribute: groups
              description: description
              _id: _id
              trackEvents: true
              variation: 9
            targets:
            - values:
              - "\"1461797806427-7-115540266\", \"00142875-a39d-4028-a3b7-987ccd151649\""
              - "\"1461797806427-7-115540266\", \"00142875-a39d-4028-a3b7-987ccd151649\""
              variation: 3
            - values:
              - "\"1461797806427-7-115540266\", \"00142875-a39d-4028-a3b7-987ccd151649\""
              - "\"1461797806427-7-115540266\", \"00142875-a39d-4028-a3b7-987ccd151649\""
              variation: 3
            version: 65
            prerequisites:
            - key: key
              variation: 7
            - key: key
              variation: 7
            archived: true
            trackEventsFallthrough: true
            _environmentName: _environmentName
            _site:
              href: /features/sort.order
              type: text/html
            "true": true
            lastModified: 1469326565348
            sel: 45501b9314dc4641841af774cb038b96
            trackEvents: false
            fallthrough:
              rollout:
                variations:
                - weight: 5
                  variation: 1
                - weight: 5
                  variation: 1
                bucketBy: bucketBy
              variation: 5
            offVariation: 2
        kind: boolean
        description: This flag controls whether test feature is turned on or not.
        creationDate: 1443652232590
        tags: []
        archived: false
        goalIds:
        - d7239405bd89c930e885aa76
        - 405bc930e88d7239d895aa76
        includeInSnippet: false
        maintainerId: 561c579cd8fd5c2704000001
        customProperties:
          bugs:
            name: Issue tracker ids
            value:
            - "123"
            - "456"
          deprecated:
            name: Deprecated Date
            value: []
        defaults:
          onVariation: 6
          offVariation: 0
        variations:
        - value: a
        - value: b
        name: Test Feature
        _version: 23
        key: test-feature
      properties:
        _links:
          $ref: '#/components/schemas/Links'
        _maintainer:
          $ref: '#/components/schemas/Member'
        _version:
          example: 23
          type: integer
        archived:
          description: Whether or not this flag is archived.
          example: false
          type: boolean
        archivedDate:
          description: A unix epoch time in milliseconds specifying the archived time
            of this flag.
          example: 1443652232590
          format: int64
          type: integer
        clientSideAvailability:
          $ref: '#/components/schemas/ClientSideAvailability'
        creationDate:
          description: A unix epoch time in milliseconds specifying the creation time
            of this flag.
          example: 1443652232590
          format: int64
          type: integer
        customProperties:
          additionalProperties:
            $ref: '#/components/schemas/CustomProperty'
          description: A mapping of keys to CustomProperty entries.
          example:
            bugs:
              name: Issue tracker ids
              value:
              - "123"
              - "456"
            deprecated:
              name: Deprecated Date
              value: []
          type: object
        defaults:
          $ref: '#/components/schemas/Defaults'
        description:
          description: Description of the feature flag.
          example: This flag controls whether test feature is turned on or not.
          type: string
        environments:
          additionalProperties:
            $ref: '#/components/schemas/FeatureFlagConfig'
          type: object
        goalIds:
          description: An array goals from all environments associated with this feature
            flag
          example:
          - d7239405bd89c930e885aa76
          - 405bc930e88d7239d895aa76
          items:
            type: string
          type: array
        includeInSnippet:
          example: false
          type: boolean
        key:
          example: test-feature
          type: string
        kind:
          description: Whether the feature flag is a boolean flag or multivariate.
          example: boolean
          type: string
        maintainerId:
          description: The ID of the member that should maintain this flag.
          example: 561c579cd8fd5c2704000001
          type: string
        name:
          description: Name of the feature flag.
          example: Test Feature
          type: string
        tags:
          description: An array of tags for this feature flag.
          example: []
          items:
            type: string
          type: array
        temporary:
          description: Whether or not this flag is temporary.
          example: false
          type: boolean
        variations:
          description: The variations for this feature flag.
          example:
          - value: a
          - value: b
          items:
            $ref: '#/components/schemas/Variation'
          type: array
      type: object
    FeatureFlagConfig:
      example:
        salt: YWx0ZXJuYXRlLnBhZ2U=
        rules:
        - rollout:
            variations:
            - weight: 5
              variation: 1
            - weight: 5
              variation: 1
            bucketBy: bucketBy
          clauses:
          - op: in
            negate: true
            values:
            - Top Customers
            - Top Customers
            _id: _id
            attribute: groups
          - op: in
            negate: true
            values:
            - Top Customers
            - Top Customers
            _id: _id
            attribute: groups
          description: description
          _id: _id
          trackEvents: true
          variation: 9
        - rollout:
            variations:
            - weight: 5
              variation: 1
            - weight: 5
              variation: 1
            bucketBy: bucketBy
          clauses:
          - op: in
            negate: true
            values:
            - Top Customers
            - Top Customers
            _id: _id
            attribute: groups
          - op: in
            negate: true
            values:
            - Top Customers
            - Top Customers
            _id: _id
            attribute: groups
          description: description
          _id: _id
          trackEvents: true
          variation: 9
        targets:
        - values:
          - "\"1461797806427-7-115540266\", \"00142875-a39d-4028-a3b7-987ccd151649\""
          - "\"1461797806427-7-115540266\", \"00142875-a39d-4028-a3b7-987ccd151649\""
          variation: 3
        - values:
          - "\"1461797806427-7-115540266\", \"00142875-a39d-4028-a3b7-987ccd151649\""
          - "\"1461797806427-7-115540266\", \"00142875-a39d-4028-a3b7-987ccd151649\""
          variation: 3
        version: 65
        prerequisites:
        - key: key
          variation: 7
        - key: key
          variation: 7
        archived: true
        trackEventsFallthrough: true
        _environmentName: _environmentName
        _site:
          href: /features/sort.order
          type: text/html
        "true": true
        lastModified: 1469326565348
        sel: 45501b9314dc4641841af774cb038b96
        trackEvents: false
        fallthrough:
          rollout:
            variations:
            - weight: 5
              variation: 1
            - weight: 5
              variation: 1
            bucketBy: bucketBy
          variation: 5
        offVariation: 2
      properties:
        _environmentName:
          type: string
        _site:
          $ref: '#/components/schemas/Site'
        archived:
          type: boolean
        fallthrough:
          $ref: '#/components/schemas/Fallthrough'
        lastModified:
          example: 1469326565348
          format: int64
          type: integer
        offVariation:
          type: integer
        "true":
          type: boolean
        prerequisites:
          items:
            $ref: '#/components/schemas/Prerequisite'
          type: array
        rules:
          items:
            $ref: '#/components/schemas/Rule'
          type: array
        salt:
          example: YWx0ZXJuYXRlLnBhZ2U=
          type: string
        sel:
          example: 45501b9314dc4641841af774cb038b96
          type: string
        targets:
          items:
            $ref: '#/components/schemas/Target'
          type: array
        trackEvents:
          description: Set to true to send detailed event information for this flag.
          example: false
          type: boolean
        trackEventsFallthrough:
          description: Set to true to send detailed event information when targeting
            is enabled but no individual targeting rule is matched.
          example: true
          type: boolean
        version:
          example: 65
          type: integer
      type: object
    FeatureFlagCopyObject:
      properties:
        currentVersion:
          description: "If the latest version of the flag matches provided version\
            \ it will copy, otherwise it will return a conflict."
          example: 65
          type: integer
        key:
          description: The environment key to be used.
          example: staging
          type: string
      required:
      - key
      type: object
    FeatureFlagScheduledChange:
      example:
        instructions:
        - kind: removeUserTargets
        - kind: removeUserTargets
        executionDate: 6
        _id: _id
        _version: 0
      properties:
        _id:
          type: string
        _version:
          type: integer
        executionDate:
          description: A unix epoch time in milliseconds specifying the date the scheduled
            changes will be applied
          type: integer
        instructions:
          items:
            $ref: '#/components/schemas/SemanticPatchInstruction_inner'
          type: array
      type: object
    FeatureFlagScheduledChanges:
      example:
        _links:
          next:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        items:
        - instructions:
          - kind: removeUserTargets
          - kind: removeUserTargets
          executionDate: 6
          _id: _id
          _version: 0
        - instructions:
          - kind: removeUserTargets
          - kind: removeUserTargets
          executionDate: 6
          _id: _id
          _version: 0
      properties:
        _links:
          $ref: '#/components/schemas/Links'
        items:
          items:
            $ref: '#/components/schemas/FeatureFlagScheduledChange'
          type: array
      type: object
    FeatureFlagScheduledChangesConflicts:
      example:
        instructions:
        - kind: removeUserTargets
          conflicts:
          - reason: reason
            _id: _id
          - reason: reason
            _id: _id
        - kind: removeUserTargets
          conflicts:
          - reason: reason
            _id: _id
          - reason: reason
            _id: _id
      properties:
        instructions:
          items:
            $ref: '#/components/schemas/FeatureFlagScheduledChangesConflicts_instructions_inner'
          type: array
      type: object
    FeatureFlagStatus:
      example:
        lastRequested: 2016-08-16T21:10:11.886Z
        default: "{}"
        _links:
          parent:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        name: new
      properties:
        _links:
          $ref: '#/components/schemas/FeatureFlagStatusLinks'
        default:
          properties: {}
          type: object
        lastRequested:
          example: 2016-08-16T21:10:11.886Z
          type: string
        name:
          description: |
            | Name     | Description |
            | --------:| ----------- |
            | new      | the feature flag was created within the last 7 days, and has not been requested yet |
            | active   | the feature flag was requested by your servers or clients within the last 7 days |
            | inactive | the feature flag was created more than 7 days ago, and hasn't been requested by your servers or clients within the past 7 days |
            | launched | one variation of the feature flag has been rolled out to all your users for at least 7 days |
          enum:
          - new
          - active
          - inactive
          - launched
          type: string
      type: object
    FeatureFlagStatusAcrossEnvironments:
      example:
        _links:
          parent:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        environments:
          key:
            lastRequested: 2016-08-16T21:10:11.886Z
            default: "{}"
            name: new
        key: key
      properties:
        _links:
          $ref: '#/components/schemas/FeatureFlagStatusLinks'
        environments:
          additionalProperties:
            $ref: '#/components/schemas/FeatureFlagStatusForQueriedEnvironment'
          type: object
        key:
          type: string
      type: object
    FeatureFlagStatusForQueriedEnvironment:
      example:
        lastRequested: 2016-08-16T21:10:11.886Z
        default: "{}"
        name: new
      properties:
        default:
          properties: {}
          type: object
        lastRequested:
          example: 2016-08-16T21:10:11.886Z
          type: string
        name:
          description: |
            | Name     | Description |
            | --------:| ----------- |
            | new      | the feature flag was created within the last 7 days, and has not been requested yet |
            | active   | the feature flag was requested by your servers or clients within the last 7 days |
            | inactive | the feature flag was created more than 7 days ago, and hasn't been requested by your servers or clients within the past 7 days |
            | launched | one variation of the feature flag has been rolled out to all your users for at least 7 days |
          enum:
          - new
          - active
          - inactive
          - launched
          type: string
      type: object
    FeatureFlagStatusLinks:
      example:
        parent:
          href: /api/v2/endpoint
          type: application/json
        self:
          href: /api/v2/endpoint
          type: application/json
      properties:
        parent:
          $ref: '#/components/schemas/Link'
        self:
          $ref: '#/components/schemas/Link'
      type: object
    FeatureFlagStatuses:
      example:
        _links:
          parent:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        items:
        - lastRequested: 2016-08-16T21:10:11.886Z
          default: "{}"
          _links:
            parent:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          name: new
        - lastRequested: 2016-08-16T21:10:11.886Z
          default: "{}"
          _links:
            parent:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          name: new
      properties:
        _links:
          $ref: '#/components/schemas/FeatureFlagStatusLinks'
        items:
          items:
            $ref: '#/components/schemas/FeatureFlagStatus'
          type: array
      type: object
    FeatureFlags:
      example:
        _links:
          next:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        totalCount: 2.027123023002322
        items:
        - archivedDate: 1443652232590
          temporary: false
          _maintainer:
            firstName: Alan
            lastName: Turing
            _verified: true
            role: null
            _links:
              next:
                href: /api/v2/endpoint
                type: application/json
              self:
                href: /api/v2/endpoint
                type: application/json
            _pendingInvite: true
            _lastSeen: 1469326565348
            isBeta: true
            _id: 5a580a01b4ff89217bdf9dc1
            _lastSeenMetadata:
              tokenId: 5fd2a1ee05600316d5cb3e96
            email: user@launchdarkly.com
            customRoles:
            - 5a580a01b4ff89217bdf9dc1
            - 5a580a01b4ff89217bdf9dc1
          clientSideAvailability:
            usingEnvironmentId: true
            usingMobileKey: true
          _links:
            next:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          environments:
            key:
              salt: YWx0ZXJuYXRlLnBhZ2U=
              rules:
              - rollout:
                  variations:
                  - weight: 5
                    variation: 1
                  - weight: 5
                    variation: 1
                  bucketBy: bucketBy
                clauses:
                - op: in
                  negate: true
                  values:
                  - Top Customers
                  - Top Customers
                  _id: _id
                  attribute: groups
                - op: in
                  negate: true
                  values:
                  - Top Customers
                  - Top Customers
                  _id: _id
                  attribute: groups
                description: description
                _id: _id
                trackEvents: true
                variation: 9
              - rollout:
                  variations:
                  - weight: 5
                    variation: 1
                  - weight: 5
                    variation: 1
                  bucketBy: bucketBy
                clauses:
                - op: in
                  negate: true
                  values:
                  - Top Customers
                  - Top Customers
                  _id: _id
                  attribute: groups
                - op: in
                  negate: true
                  values:
                  - Top Customers
                  - Top Customers
                  _id: _id
                  attribute: groups
                description: description
                _id: _id
                trackEvents: true
                variation: 9
              targets:
              - values:
                - "\"1461797806427-7-115540266\", \"00142875-a39d-4028-a3b7-987ccd151649\""
                - "\"1461797806427-7-115540266\", \"00142875-a39d-4028-a3b7-987ccd151649\""
                variation: 3
              - values:
                - "\"1461797806427-7-115540266\", \"00142875-a39d-4028-a3b7-987ccd151649\""
                - "\"1461797806427-7-115540266\", \"00142875-a39d-4028-a3b7-987ccd151649\""
                variation: 3
              version: 65
              prerequisites:
              - key: key
                variation: 7
              - key: key
                variation: 7
              archived: true
              trackEventsFallthrough: true
              _environmentName: _environmentName
              _site:
                href: /features/sort.order
                type: text/html
              "true": true
              lastModified: 1469326565348
              sel: 45501b9314dc4641841af774cb038b96
              trackEvents: false
              fallthrough:
                rollout:
                  variations:
                  - weight: 5
                    variation: 1
                  - weight: 5
                    variation: 1
                  bucketBy: bucketBy
                variation: 5
              offVariation: 2
          kind: boolean
          description: This flag controls whether test feature is turned on or not.
          creationDate: 1443652232590
          tags: []
          archived: false
          goalIds:
          - d7239405bd89c930e885aa76
          - 405bc930e88d7239d895aa76
          includeInSnippet: false
          maintainerId: 561c579cd8fd5c2704000001
          customProperties:
            bugs:
              name: Issue tracker ids
              value:
              - "123"
              - "456"
            deprecated:
              name: Deprecated Date
              value: []
          defaults:
            onVariation: 6
            offVariation: 0
          variations:
          - value: a
          - value: b
          name: Test Feature
          _version: 23
          key: test-feature
        - archivedDate: 1443652232590
          temporary: false
          _maintainer:
            firstName: Alan
            lastName: Turing
            _verified: true
            role: null
            _links:
              next:
                href: /api/v2/endpoint
                type: application/json
              self:
                href: /api/v2/endpoint
                type: application/json
            _pendingInvite: true
            _lastSeen: 1469326565348
            isBeta: true
            _id: 5a580a01b4ff89217bdf9dc1
            _lastSeenMetadata:
              tokenId: 5fd2a1ee05600316d5cb3e96
            email: user@launchdarkly.com
            customRoles:
            - 5a580a01b4ff89217bdf9dc1
            - 5a580a01b4ff89217bdf9dc1
          clientSideAvailability:
            usingEnvironmentId: true
            usingMobileKey: true
          _links:
            next:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          environments:
            key:
              salt: YWx0ZXJuYXRlLnBhZ2U=
              rules:
              - rollout:
                  variations:
                  - weight: 5
                    variation: 1
                  - weight: 5
                    variation: 1
                  bucketBy: bucketBy
                clauses:
                - op: in
                  negate: true
                  values:
                  - Top Customers
                  - Top Customers
                  _id: _id
                  attribute: groups
                - op: in
                  negate: true
                  values:
                  - Top Customers
                  - Top Customers
                  _id: _id
                  attribute: groups
                description: description
                _id: _id
                trackEvents: true
                variation: 9
              - rollout:
                  variations:
                  - weight: 5
                    variation: 1
                  - weight: 5
                    variation: 1
                  bucketBy: bucketBy
                clauses:
                - op: in
                  negate: true
                  values:
                  - Top Customers
                  - Top Customers
                  _id: _id
                  attribute: groups
                - op: in
                  negate: true
                  values:
                  - Top Customers
                  - Top Customers
                  _id: _id
                  attribute: groups
                description: description
                _id: _id
                trackEvents: true
                variation: 9
              targets:
              - values:
                - "\"1461797806427-7-115540266\", \"00142875-a39d-4028-a3b7-987ccd151649\""
                - "\"1461797806427-7-115540266\", \"00142875-a39d-4028-a3b7-987ccd151649\""
                variation: 3
              - values:
                - "\"1461797806427-7-115540266\", \"00142875-a39d-4028-a3b7-987ccd151649\""
                - "\"1461797806427-7-115540266\", \"00142875-a39d-4028-a3b7-987ccd151649\""
                variation: 3
              version: 65
              prerequisites:
              - key: key
                variation: 7
              - key: key
                variation: 7
              archived: true
              trackEventsFallthrough: true
              _environmentName: _environmentName
              _site:
                href: /features/sort.order
                type: text/html
              "true": true
              lastModified: 1469326565348
              sel: 45501b9314dc4641841af774cb038b96
              trackEvents: false
              fallthrough:
                rollout:
                  variations:
                  - weight: 5
                    variation: 1
                  - weight: 5
                    variation: 1
                  bucketBy: bucketBy
                variation: 5
              offVariation: 2
          kind: boolean
          description: This flag controls whether test feature is turned on or not.
          creationDate: 1443652232590
          tags: []
          archived: false
          goalIds:
          - d7239405bd89c930e885aa76
          - 405bc930e88d7239d895aa76
          includeInSnippet: false
          maintainerId: 561c579cd8fd5c2704000001
          customProperties:
            bugs:
              name: Issue tracker ids
              value:
              - "123"
              - "456"
            deprecated:
              name: Deprecated Date
              value: []
          defaults:
            onVariation: 6
            offVariation: 0
          variations:
          - value: a
          - value: b
          name: Test Feature
          _version: 23
          key: test-feature
      properties:
        _links:
          $ref: '#/components/schemas/Links'
        items:
          items:
            $ref: '#/components/schemas/FeatureFlag'
          type: array
        totalCount:
          type: number
      type: object
    FlagListItem:
      example:
        _links:
          next:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        _site:
          href: /features/sort.order
          type: text/html
        name: name
        key: key
      properties:
        _links:
          $ref: '#/components/schemas/Links'
        _site:
          $ref: '#/components/schemas/Site'
        key:
          type: string
        name:
          type: string
      type: object
    HierarchicalLinks:
      example:
        parent:
          href: /api/v2/endpoint
          type: application/json
        self:
          href: /api/v2/endpoint
          type: application/json
      properties:
        parent:
          $ref: '#/components/schemas/Link'
        self:
          $ref: '#/components/schemas/Link'
      type: object
    Id:
      description: The unique resource id.
      example: 5a580a01b4ff89217bdf9dc1
      type: string
    Integration:
      example:
        _links:
          self:
            href: /api/v2/endpoint
            type: application/json
        items:
        - _links:
            parent:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          kind: datadog
          name: V2
          "true": true
          statements:
          - notActions:
            - updateOn
            - updateOn
            notResources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            effect: allow
            resources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            actions:
            - updateOn
            - updateOn
          - notActions:
            - updateOn
            - updateOn
            notResources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            effect: allow
            resources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            actions:
            - updateOn
            - updateOn
          _id: 5a580a01b4ff89217bdf9dc1
          _status:
            successCount: 6
            errorCount: 2
            lastSuccess: 1443652232590
          config:
            apiKey: 582**************************116
            hostURL: https://api.datadoghq.com
          tags:
          - tags
          - tags
        - _links:
            parent:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          kind: datadog
          name: V2
          "true": true
          statements:
          - notActions:
            - updateOn
            - updateOn
            notResources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            effect: allow
            resources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            actions:
            - updateOn
            - updateOn
          - notActions:
            - updateOn
            - updateOn
            notResources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            effect: allow
            resources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            actions:
            - updateOn
            - updateOn
          _id: 5a580a01b4ff89217bdf9dc1
          _status:
            successCount: 6
            errorCount: 2
            lastSuccess: 1443652232590
          config:
            apiKey: 582**************************116
            hostURL: https://api.datadoghq.com
          tags:
          - tags
          - tags
      properties:
        _links:
          $ref: '#/components/schemas/DependentFlag__links'
        items:
          items:
            $ref: '#/components/schemas/IntegrationSubscription'
          type: array
      type: object
    IntegrationSubscription:
      example:
        _links:
          parent:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        kind: datadog
        name: V2
        "true": true
        statements:
        - notActions:
          - updateOn
          - updateOn
          notResources:
          - proj/*:env/*:flag/my-flag
          - proj/*:env/*:flag/my-flag
          effect: allow
          resources:
          - proj/*:env/*:flag/my-flag
          - proj/*:env/*:flag/my-flag
          actions:
          - updateOn
          - updateOn
        - notActions:
          - updateOn
          - updateOn
          notResources:
          - proj/*:env/*:flag/my-flag
          - proj/*:env/*:flag/my-flag
          effect: allow
          resources:
          - proj/*:env/*:flag/my-flag
          - proj/*:env/*:flag/my-flag
          actions:
          - updateOn
          - updateOn
        _id: 5a580a01b4ff89217bdf9dc1
        _status:
          successCount: 6
          errorCount: 2
          lastSuccess: 1443652232590
        config:
          apiKey: 582**************************116
          hostURL: https://api.datadoghq.com
        tags:
        - tags
        - tags
      properties:
        _id:
          description: The unique resource id.
          example: 5a580a01b4ff89217bdf9dc1
          type: string
        _links:
          $ref: '#/components/schemas/HierarchicalLinks'
        _status:
          $ref: '#/components/schemas/IntegrationSubscription__status'
        config:
          description: A key-value mapping of configuration fields.
          example:
            apiKey: 582**************************116
            hostURL: https://api.datadoghq.com
          properties: {}
          type: object
        kind:
          description: The type of integration associated with this configuration.
          example: datadog
          type: string
        name:
          description: The user-defined name associated with this configuration.
          example: V2
          type: string
        "true":
          description: Whether or not the integration is currently active.
          example: true
          type: boolean
        statements:
          items:
            $ref: '#/components/schemas/Statement'
          type: array
        tags:
          description: An array of tags for this integration configuration.
          items:
            type: string
          type: array
      type: object
    Integrations:
      example:
        _links:
          appdynamics:
            href: /api/v2/integrations/appdynamics
            type: application/json
          splunk:
            href: /api/v2/integrations/splunk
            type: application/json
        items:
        - _links:
            parent:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          kind: datadog
          name: V2
          "true": true
          statements:
          - notActions:
            - updateOn
            - updateOn
            notResources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            effect: allow
            resources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            actions:
            - updateOn
            - updateOn
          - notActions:
            - updateOn
            - updateOn
            notResources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            effect: allow
            resources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            actions:
            - updateOn
            - updateOn
          _id: 5a580a01b4ff89217bdf9dc1
          _status:
            successCount: 6
            errorCount: 2
            lastSuccess: 1443652232590
          config:
            apiKey: 582**************************116
            hostURL: https://api.datadoghq.com
          tags:
          - tags
          - tags
        - _links:
            parent:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          kind: datadog
          name: V2
          "true": true
          statements:
          - notActions:
            - updateOn
            - updateOn
            notResources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            effect: allow
            resources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            actions:
            - updateOn
            - updateOn
          - notActions:
            - updateOn
            - updateOn
            notResources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            effect: allow
            resources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            actions:
            - updateOn
            - updateOn
          _id: 5a580a01b4ff89217bdf9dc1
          _status:
            successCount: 6
            errorCount: 2
            lastSuccess: 1443652232590
          config:
            apiKey: 582**************************116
            hostURL: https://api.datadoghq.com
          tags:
          - tags
          - tags
      properties:
        _links:
          description: A mapping of integration types to their respective API endpoints.
          example:
            appdynamics:
              href: /api/v2/integrations/appdynamics
              type: application/json
            splunk:
              href: /api/v2/integrations/splunk
              type: application/json
          properties: {}
          type: object
        items:
          items:
            $ref: '#/components/schemas/IntegrationSubscription'
          type: array
      type: object
    Link:
      example:
        href: /api/v2/endpoint
        type: application/json
      properties:
        href:
          example: /api/v2/endpoint
          type: string
        type:
          example: application/json
          type: string
      type: object
    Links:
      example:
        next:
          href: /api/v2/endpoint
          type: application/json
        self:
          href: /api/v2/endpoint
          type: application/json
      properties:
        next:
          $ref: '#/components/schemas/Link'
        self:
          $ref: '#/components/schemas/Link'
      type: object
    MAU:
      example:
        metadata:
        - sdk: ruby
          source: server
          version: 5.4.3
        - sdk: ruby
          source: server
          version: 5.4.3
        _links:
          parent:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
          subseries:
          - href: /api/v2/endpoint
            type: application/json
          - href: /api/v2/endpoint
            type: application/json
        series:
        - "0": 0
          time: 1551740400000
        - "0": 0
          time: 1551740400000
      properties:
        _links:
          $ref: '#/components/schemas/UsageLinks'
        metadata:
          items:
            $ref: '#/components/schemas/StreamBySDKLinksMetadata'
          type: array
        series:
          items:
            $ref: '#/components/schemas/StreamUsageSeries'
          type: array
      type: object
    MAUMetadata:
      type: object
    MAUbyCategory:
      example:
        metadata:
        - null
        - null
        _links:
          parent:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        series:
        - "0": 0
          time: 1551740400000
        - "0": 0
          time: 1551740400000
      properties:
        _links:
          $ref: '#/components/schemas/StreamBySDKLinks'
        metadata:
          items:
            $ref: '#/components/schemas/MAUMetadata'
          type: array
        series:
          items:
            $ref: '#/components/schemas/StreamUsageSeries'
          type: array
      type: object
    Member:
      example:
        firstName: Alan
        lastName: Turing
        _verified: true
        role: null
        _links:
          next:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        _pendingInvite: true
        _lastSeen: 1469326565348
        isBeta: true
        _id: 5a580a01b4ff89217bdf9dc1
        _lastSeenMetadata:
          tokenId: 5fd2a1ee05600316d5cb3e96
        email: user@launchdarkly.com
        customRoles:
        - 5a580a01b4ff89217bdf9dc1
        - 5a580a01b4ff89217bdf9dc1
      properties:
        _id:
          description: The unique resource id.
          example: 5a580a01b4ff89217bdf9dc1
          type: string
        _lastSeen:
          description: A unix epoch time in milliseconds specifying the last time
            this member was active in LaunchDarkly.
          example: 1469326565348
          format: int64
          type: integer
        _lastSeenMetadata:
          $ref: '#/components/schemas/Member__lastSeenMetadata'
        _links:
          $ref: '#/components/schemas/Links'
        _pendingInvite:
          type: boolean
        _verified:
          type: boolean
        customRoles:
          items:
            $ref: '#/components/schemas/Id'
          type: array
        email:
          example: user@launchdarkly.com
          type: string
        firstName:
          example: Alan
          type: string
        isBeta:
          type: boolean
        lastName:
          example: Turing
          type: string
        role:
          $ref: '#/components/schemas/Role'
      type: object
    Members:
      example:
        _links:
          next:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        totalCount: 0.8008281904610115
        items:
        - firstName: Alan
          lastName: Turing
          _verified: true
          role: null
          _links:
            next:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          _pendingInvite: true
          _lastSeen: 1469326565348
          isBeta: true
          _id: 5a580a01b4ff89217bdf9dc1
          _lastSeenMetadata:
            tokenId: 5fd2a1ee05600316d5cb3e96
          email: user@launchdarkly.com
          customRoles:
          - 5a580a01b4ff89217bdf9dc1
          - 5a580a01b4ff89217bdf9dc1
        - firstName: Alan
          lastName: Turing
          _verified: true
          role: null
          _links:
            next:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          _pendingInvite: true
          _lastSeen: 1469326565348
          isBeta: true
          _id: 5a580a01b4ff89217bdf9dc1
          _lastSeenMetadata:
            tokenId: 5fd2a1ee05600316d5cb3e96
          email: user@launchdarkly.com
          customRoles:
          - 5a580a01b4ff89217bdf9dc1
          - 5a580a01b4ff89217bdf9dc1
      properties:
        _links:
          $ref: '#/components/schemas/Links'
        items:
          items:
            $ref: '#/components/schemas/Member'
          type: array
        totalCount:
          type: number
      type: object
    MultiEnvironmentDependentFlag:
      example:
        _links:
          parent:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        environments:
        - _links:
            flagLink:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          _site:
            href: /features/sort.order
            type: text/html
          name: name
          key: key
        - _links:
            flagLink:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          _site:
            href: /features/sort.order
            type: text/html
          name: name
          key: key
        _site:
          href: /features/sort.order
          type: text/html
        name: name
        key: key
      properties:
        _links:
          $ref: '#/components/schemas/DependentFlagsLinks'
        _site:
          $ref: '#/components/schemas/Site'
        environments:
          items:
            $ref: '#/components/schemas/DependentFlagEnvironment'
          type: array
        key:
          type: string
        name:
          type: string
      type: object
    MultiEnvironmentDependentFlags:
      example:
        _links:
          parent:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        _site:
          href: /features/sort.order
          type: text/html
        items:
        - _links:
            parent:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          environments:
          - _links:
              flagLink:
                href: /api/v2/endpoint
                type: application/json
              self:
                href: /api/v2/endpoint
                type: application/json
            _site:
              href: /features/sort.order
              type: text/html
            name: name
            key: key
          - _links:
              flagLink:
                href: /api/v2/endpoint
                type: application/json
              self:
                href: /api/v2/endpoint
                type: application/json
            _site:
              href: /features/sort.order
              type: text/html
            name: name
            key: key
          _site:
            href: /features/sort.order
            type: text/html
          name: name
          key: key
        - _links:
            parent:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          environments:
          - _links:
              flagLink:
                href: /api/v2/endpoint
                type: application/json
              self:
                href: /api/v2/endpoint
                type: application/json
            _site:
              href: /features/sort.order
              type: text/html
            name: name
            key: key
          - _links:
              flagLink:
                href: /api/v2/endpoint
                type: application/json
              self:
                href: /api/v2/endpoint
                type: application/json
            _site:
              href: /features/sort.order
              type: text/html
            name: name
            key: key
          _site:
            href: /features/sort.order
            type: text/html
          name: name
          key: key
      properties:
        _links:
          $ref: '#/components/schemas/DependentFlagsLinks'
        _site:
          $ref: '#/components/schemas/Site'
        items:
          items:
            $ref: '#/components/schemas/MultiEnvironmentDependentFlag'
          type: array
      type: object
    PatchOperation:
      example:
        op: replace
        path: /name
        value: My resource name
      properties:
        op:
          example: replace
          type: string
        path:
          example: /name
          type: string
        value:
          example: My resource name
          properties: {}
          type: object
      required:
      - op
      - path
      - value
      type: object
    Policy:
      example:
        notActions:
        - updateOn
        - updateOn
        notResources:
        - proj/*:env/*:flag/my-flag
        - proj/*:env/*:flag/my-flag
        effect: deny
        resources:
        - proj/*:env/*:flag/my-flag
        - proj/*:env/*:flag/my-flag
        actions:
        - updateOn
        - updateOn
      properties:
        actions:
          items:
            description: An action to perform on a resource.
            example: updateOn
            type: string
          type: array
        effect:
          description: Effect of the policy - allow or deny.
          example: deny
          type: string
        notActions:
          description: Targeted actions will be those actions NOT in this list. The
            "actions" field must be empty to use this field.
          items:
            description: An action to perform on a resource.
            example: updateOn
            type: string
          type: array
        notResources:
          description: Targeted resource will be those resources NOT in this list.
            The "resources`" field must be empty to use this field.
          items:
            description: A resource specifier string
            example: proj/*:env/*:flag/my-flag
            type: string
          type: array
        resources:
          items:
            description: A resource specifier string
            example: proj/*:env/*:flag/my-flag
            type: string
          type: array
      type: object
    Prerequisite:
      example:
        key: key
        variation: 7
      properties:
        key:
          type: string
        variation:
          type: integer
      type: object
    Project:
      example:
        includeInSnippetByDefault: true
        _links:
          next:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        environments:
        - approvalSettings:
            serviceKind: launchdarkly
            canReviewOwnRequest: true
            requiredApprovalTags:
            - requiredApprovalTags
            - requiredApprovalTags
            canApplyDeclinedChanges: true
            minNumApprovals: 2
            required: true
          apiKey: XXX
          color: "417505"
          _links:
            next:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          confirmChanges: false
          requireComments: false
          mobileKey: XXX
          defaultTrackEvents: false
          tags:
          - tags
          - tags
          defaultTtl: 0.0
          name: Production
          _id: 5a580a01b4ff89217bdf9dc1
          secureMode: false
          key: production
        - approvalSettings:
            serviceKind: launchdarkly
            canReviewOwnRequest: true
            requiredApprovalTags:
            - requiredApprovalTags
            - requiredApprovalTags
            canApplyDeclinedChanges: true
            minNumApprovals: 2
            required: true
          apiKey: XXX
          color: "417505"
          _links:
            next:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          confirmChanges: false
          requireComments: false
          mobileKey: XXX
          defaultTrackEvents: false
          tags:
          - tags
          - tags
          defaultTtl: 0.0
          name: Production
          _id: 5a580a01b4ff89217bdf9dc1
          secureMode: false
          key: production
        defaultClientSideAvailability:
          usingEnvironmentId: true
          usingMobileKey: true
        name: Zentasks
        _id: 5a580a01b4ff89217bdf9dc1
        key: zentasks
        tags:
        - tags
        - tags
      properties:
        _id:
          description: The unique resource id.
          example: 5a580a01b4ff89217bdf9dc1
          type: string
        _links:
          $ref: '#/components/schemas/Links'
        defaultClientSideAvailability:
          $ref: '#/components/schemas/ClientSideAvailability'
        environments:
          items:
            $ref: '#/components/schemas/Environment'
          type: array
        includeInSnippetByDefault:
          example: true
          type: boolean
        key:
          example: zentasks
          type: string
        name:
          example: Zentasks
          type: string
        tags:
          description: An array of tags for this project.
          items:
            type: string
          type: array
      type: object
    Projects:
      example:
        _links:
          next:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        items:
        - includeInSnippetByDefault: true
          _links:
            next:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          environments:
          - approvalSettings:
              serviceKind: launchdarkly
              canReviewOwnRequest: true
              requiredApprovalTags:
              - requiredApprovalTags
              - requiredApprovalTags
              canApplyDeclinedChanges: true
              minNumApprovals: 2
              required: true
            apiKey: XXX
            color: "417505"
            _links:
              next:
                href: /api/v2/endpoint
                type: application/json
              self:
                href: /api/v2/endpoint
                type: application/json
            confirmChanges: false
            requireComments: false
            mobileKey: XXX
            defaultTrackEvents: false
            tags:
            - tags
            - tags
            defaultTtl: 0.0
            name: Production
            _id: 5a580a01b4ff89217bdf9dc1
            secureMode: false
            key: production
          - approvalSettings:
              serviceKind: launchdarkly
              canReviewOwnRequest: true
              requiredApprovalTags:
              - requiredApprovalTags
              - requiredApprovalTags
              canApplyDeclinedChanges: true
              minNumApprovals: 2
              required: true
            apiKey: XXX
            color: "417505"
            _links:
              next:
                href: /api/v2/endpoint
                type: application/json
              self:
                href: /api/v2/endpoint
                type: application/json
            confirmChanges: false
            requireComments: false
            mobileKey: XXX
            defaultTrackEvents: false
            tags:
            - tags
            - tags
            defaultTtl: 0.0
            name: Production
            _id: 5a580a01b4ff89217bdf9dc1
            secureMode: false
            key: production
          defaultClientSideAvailability:
            usingEnvironmentId: true
            usingMobileKey: true
          name: Zentasks
          _id: 5a580a01b4ff89217bdf9dc1
          key: zentasks
          tags:
          - tags
          - tags
        - includeInSnippetByDefault: true
          _links:
            next:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          environments:
          - approvalSettings:
              serviceKind: launchdarkly
              canReviewOwnRequest: true
              requiredApprovalTags:
              - requiredApprovalTags
              - requiredApprovalTags
              canApplyDeclinedChanges: true
              minNumApprovals: 2
              required: true
            apiKey: XXX
            color: "417505"
            _links:
              next:
                href: /api/v2/endpoint
                type: application/json
              self:
                href: /api/v2/endpoint
                type: application/json
            confirmChanges: false
            requireComments: false
            mobileKey: XXX
            defaultTrackEvents: false
            tags:
            - tags
            - tags
            defaultTtl: 0.0
            name: Production
            _id: 5a580a01b4ff89217bdf9dc1
            secureMode: false
            key: production
          - approvalSettings:
              serviceKind: launchdarkly
              canReviewOwnRequest: true
              requiredApprovalTags:
              - requiredApprovalTags
              - requiredApprovalTags
              canApplyDeclinedChanges: true
              minNumApprovals: 2
              required: true
            apiKey: XXX
            color: "417505"
            _links:
              next:
                href: /api/v2/endpoint
                type: application/json
              self:
                href: /api/v2/endpoint
                type: application/json
            confirmChanges: false
            requireComments: false
            mobileKey: XXX
            defaultTrackEvents: false
            tags:
            - tags
            - tags
            defaultTtl: 0.0
            name: Production
            _id: 5a580a01b4ff89217bdf9dc1
            secureMode: false
            key: production
          defaultClientSideAvailability:
            usingEnvironmentId: true
            usingMobileKey: true
          name: Zentasks
          _id: 5a580a01b4ff89217bdf9dc1
          key: zentasks
          tags:
          - tags
          - tags
      properties:
        _links:
          $ref: '#/components/schemas/Links'
        items:
          items:
            $ref: '#/components/schemas/Project'
          type: array
      type: object
    RelayProxyConfig:
      example:
        displayKey: 66eo
        _creator:
          firstName: Alan
          lastName: Turing
          _verified: true
          role: null
          _links:
            next:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          _pendingInvite: true
          _lastSeen: 1469326565348
          isBeta: true
          _id: 5a580a01b4ff89217bdf9dc1
          _lastSeenMetadata:
            tokenId: 5fd2a1ee05600316d5cb3e96
          email: user@launchdarkly.com
          customRoles:
          - 5a580a01b4ff89217bdf9dc1
          - 5a580a01b4ff89217bdf9dc1
        fullKey: rel-8a3a773d-b75e-48eb-a850-492cda9266eo
        name: My relay proxy config
        _id: 5a580a01b4ff89217bdf9dc1
        lastModified: 1469326565348
        creationDate: 1443652232590
        policy:
        - notActions:
          - updateOn
          - updateOn
          notResources:
          - proj/*:env/*:flag/my-flag
          - proj/*:env/*:flag/my-flag
          effect: deny
          resources:
          - proj/*:env/*:flag/my-flag
          - proj/*:env/*:flag/my-flag
          actions:
          - updateOn
          - updateOn
        - notActions:
          - updateOn
          - updateOn
          notResources:
          - proj/*:env/*:flag/my-flag
          - proj/*:env/*:flag/my-flag
          effect: deny
          resources:
          - proj/*:env/*:flag/my-flag
          - proj/*:env/*:flag/my-flag
          actions:
          - updateOn
          - updateOn
      properties:
        _creator:
          $ref: '#/components/schemas/Member'
        _id:
          description: The unique resource id.
          example: 5a580a01b4ff89217bdf9dc1
          type: string
        creationDate:
          description: A unix epoch time in milliseconds specifying the creation time
            of this relay proxy configuration
          example: 1443652232590
          format: int64
          type: integer
        displayKey:
          description: The last 4 digits of the unique secret key for this relay proxy
            configuration
          example: 66eo
          type: string
        fullKey:
          description: Full secret key. Only included if creating or resetting the
            relay proxy configuration
          example: rel-8a3a773d-b75e-48eb-a850-492cda9266eo
          type: string
        lastModified:
          description: A unix epoch time in milliseconds specifying the last time
            this relay proxy configuration was modified
          example: 1469326565348
          format: int64
          type: integer
        name:
          description: A human-friendly name for the relay proxy configuration
          example: My relay proxy config
          type: string
        policy:
          items:
            $ref: '#/components/schemas/Policy'
          type: array
      required:
      - _creator
      - _id
      - creationDate
      - displayKey
      - lastModified
      - name
      - policy
      type: object
    RelayProxyConfigs:
      example:
        items:
        - displayKey: 66eo
          _creator:
            firstName: Alan
            lastName: Turing
            _verified: true
            role: null
            _links:
              next:
                href: /api/v2/endpoint
                type: application/json
              self:
                href: /api/v2/endpoint
                type: application/json
            _pendingInvite: true
            _lastSeen: 1469326565348
            isBeta: true
            _id: 5a580a01b4ff89217bdf9dc1
            _lastSeenMetadata:
              tokenId: 5fd2a1ee05600316d5cb3e96
            email: user@launchdarkly.com
            customRoles:
            - 5a580a01b4ff89217bdf9dc1
            - 5a580a01b4ff89217bdf9dc1
          fullKey: rel-8a3a773d-b75e-48eb-a850-492cda9266eo
          name: My relay proxy config
          _id: 5a580a01b4ff89217bdf9dc1
          lastModified: 1469326565348
          creationDate: 1443652232590
          policy:
          - notActions:
            - updateOn
            - updateOn
            notResources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            effect: deny
            resources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            actions:
            - updateOn
            - updateOn
          - notActions:
            - updateOn
            - updateOn
            notResources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            effect: deny
            resources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            actions:
            - updateOn
            - updateOn
        - displayKey: 66eo
          _creator:
            firstName: Alan
            lastName: Turing
            _verified: true
            role: null
            _links:
              next:
                href: /api/v2/endpoint
                type: application/json
              self:
                href: /api/v2/endpoint
                type: application/json
            _pendingInvite: true
            _lastSeen: 1469326565348
            isBeta: true
            _id: 5a580a01b4ff89217bdf9dc1
            _lastSeenMetadata:
              tokenId: 5fd2a1ee05600316d5cb3e96
            email: user@launchdarkly.com
            customRoles:
            - 5a580a01b4ff89217bdf9dc1
            - 5a580a01b4ff89217bdf9dc1
          fullKey: rel-8a3a773d-b75e-48eb-a850-492cda9266eo
          name: My relay proxy config
          _id: 5a580a01b4ff89217bdf9dc1
          lastModified: 1469326565348
          creationDate: 1443652232590
          policy:
          - notActions:
            - updateOn
            - updateOn
            notResources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            effect: deny
            resources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            actions:
            - updateOn
            - updateOn
          - notActions:
            - updateOn
            - updateOn
            notResources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            effect: deny
            resources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            actions:
            - updateOn
            - updateOn
      properties:
        items:
          items:
            $ref: '#/components/schemas/RelayProxyConfig'
          type: array
      type: object
    Role:
      enum:
      - writer
      - reader
      - admin
      - owner
      type: string
    Rollout:
      example:
        variations:
        - weight: 5
          variation: 1
        - weight: 5
          variation: 1
        bucketBy: bucketBy
      properties:
        bucketBy:
          type: string
        variations:
          items:
            $ref: '#/components/schemas/WeightedVariation'
          type: array
      type: object
    Rule:
      example:
        rollout:
          variations:
          - weight: 5
            variation: 1
          - weight: 5
            variation: 1
          bucketBy: bucketBy
        clauses:
        - op: in
          negate: true
          values:
          - Top Customers
          - Top Customers
          _id: _id
          attribute: groups
        - op: in
          negate: true
          values:
          - Top Customers
          - Top Customers
          _id: _id
          attribute: groups
        description: description
        _id: _id
        trackEvents: true
        variation: 9
      properties:
        _id:
          type: string
        clauses:
          items:
            $ref: '#/components/schemas/Clause'
          type: array
        description:
          type: string
        rollout:
          $ref: '#/components/schemas/Rollout'
        trackEvents:
          type: boolean
        variation:
          type: integer
      type: object
    ScheduledChangesFeatureFlagConflict:
      example:
        reason: reason
        _id: _id
      properties:
        _id:
          description: Feature flag scheduled change id this change will conflict
            with
          type: string
        reason:
          description: Feature flag scheduled change conflict reason
          type: string
      type: object
    SemanticPatchInstruction:
      items:
        $ref: '#/components/schemas/SemanticPatchInstruction_inner'
      type: array
    SemanticPatchOperation:
      example:
        instructions:
        - kind: removeUserTargets
        - kind: removeUserTargets
        comment: This is a comment string
      properties:
        comment:
          example: This is a comment string
          type: string
        instructions:
          items:
            $ref: '#/components/schemas/SemanticPatchInstruction_inner'
          type: array
      required:
      - instructions
      type: object
    Site:
      example:
        href: /features/sort.order
        type: text/html
      properties:
        href:
          example: /features/sort.order
          type: string
        type:
          example: text/html
          type: string
      type: object
    Statement:
      example:
        notActions:
        - updateOn
        - updateOn
        notResources:
        - proj/*:env/*:flag/my-flag
        - proj/*:env/*:flag/my-flag
        effect: allow
        resources:
        - proj/*:env/*:flag/my-flag
        - proj/*:env/*:flag/my-flag
        actions:
        - updateOn
        - updateOn
      properties:
        actions:
          items:
            description: An action to perform on a resource.
            example: updateOn
            type: string
          type: array
        effect:
          enum:
          - allow
          - deny
          type: string
        notActions:
          description: Targeted actions will be those actions NOT in this list. The
            "actions" field must be empty to use this field.
          items:
            description: An action to perform on a resource.
            example: updateOn
            type: string
          type: array
        notResources:
          description: Targeted resource will be those resources NOT in this list.
            The "resources`" field must be empty to use this field.
          items:
            description: A resource specifier string
            example: proj/*:env/*:flag/my-flag
            type: string
          type: array
        resources:
          items:
            description: A resource specifier string
            example: proj/*:env/*:flag/my-flag
            type: string
          type: array
      type: object
    Stream:
      example:
        metadata:
        - sdk: ruby
          source: server
          version: 5.4.3
        - sdk: ruby
          source: server
          version: 5.4.3
        _links:
          parent:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
          subseries:
          - href: /api/v2/endpoint
            type: application/json
          - href: /api/v2/endpoint
            type: application/json
        series:
        - "0": 0
          time: 1551740400000
        - "0": 0
          time: 1551740400000
      properties:
        _links:
          $ref: '#/components/schemas/StreamUsageLinks'
        metadata:
          items:
            $ref: '#/components/schemas/StreamUsageMetadata'
          type: array
        series:
          items:
            $ref: '#/components/schemas/StreamUsageSeries'
          type: array
      type: object
    StreamBySDK:
      example:
        metadata:
        - sdk: ruby
          source: server
          version: 5.4.3
        - sdk: ruby
          source: server
          version: 5.4.3
        _links:
          parent:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        series:
        - "0": 0
          time: 1551740400000
        - "0": 0
          time: 1551740400000
      properties:
        _links:
          $ref: '#/components/schemas/StreamBySDKLinks'
        metadata:
          items:
            $ref: '#/components/schemas/StreamBySDKLinksMetadata'
          type: array
        series:
          items:
            $ref: '#/components/schemas/StreamUsageSeries'
          type: array
      type: object
    StreamBySDKLinks:
      example:
        parent:
          href: /api/v2/endpoint
          type: application/json
        self:
          href: /api/v2/endpoint
          type: application/json
      properties:
        parent:
          $ref: '#/components/schemas/Link'
        self:
          $ref: '#/components/schemas/Link'
      type: object
    StreamBySDKLinksMetadata:
      example:
        sdk: ruby
        source: server
        version: 5.4.3
      properties:
        sdk:
          example: ruby
          type: string
        source:
          example: server
          type: string
        version:
          example: 5.4.3
          type: string
      type: object
    StreamLinks:
      properties:
        parent:
          $ref: '#/components/schemas/Link'
        self:
          $ref: '#/components/schemas/Link'
        subseries:
          description: Links to endpoints that are in the request path.
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    StreamSDKVersion:
      example:
        _links:
          parent:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        sdkVersions:
        - sdk: ruby
          version: 5.4.3
        - sdk: ruby
          version: 5.4.3
      properties:
        _links:
          $ref: '#/components/schemas/StreamBySDKLinks'
        sdkVersions:
          items:
            $ref: '#/components/schemas/StreamSDKVersionData'
          type: array
      type: object
    StreamSDKVersionData:
      example:
        sdk: ruby
        version: 5.4.3
      properties:
        sdk:
          description: The language of the sdk
          example: ruby
          type: string
        version:
          description: The version of the sdk
          example: 5.4.3
          type: string
      type: object
    StreamUsageError:
      properties:
        code:
          example: not_found
          type: string
        message:
          example: Stream source not found
          type: string
      type: object
    StreamUsageLinks:
      example:
        parent:
          href: /api/v2/endpoint
          type: application/json
        self:
          href: /api/v2/endpoint
          type: application/json
        subseries:
        - href: /api/v2/endpoint
          type: application/json
        - href: /api/v2/endpoint
          type: application/json
      properties:
        parent:
          $ref: '#/components/schemas/Link'
        self:
          $ref: '#/components/schemas/Link'
        subseries:
          description: The following links that are in the response.
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    StreamUsageMetadata:
      example:
        sdk: ruby
        source: server
        version: 5.4.3
      properties:
        sdk:
          description: The language of the sdk
          example: ruby
          type: string
        source:
          example: server
          type: string
        version:
          description: The version of the SDK
          example: 5.4.3
          type: string
      type: object
    StreamUsageSeries:
      example:
        "0": 0
        time: 1551740400000
      properties:
        "0":
          description: A key corresponding to a time series data point.
          example: 0
          format: int64
          type: integer
        time:
          description: A unix epoch time in milliseconds specifying the creation time
            of this flag.
          example: 1551740400000
          format: int64
          type: integer
      type: object
    Streams:
      example:
        _links:
          parent:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
          subseries:
          - href: /api/v2/endpoint
            type: application/json
          - href: /api/v2/endpoint
            type: application/json
      properties:
        _links:
          $ref: '#/components/schemas/StreamUsageLinks'
      type: object
    Target:
      example:
        values:
        - "\"1461797806427-7-115540266\", \"00142875-a39d-4028-a3b7-987ccd151649\""
        - "\"1461797806427-7-115540266\", \"00142875-a39d-4028-a3b7-987ccd151649\""
        variation: 3
      properties:
        values:
          items:
            example: "\"1461797806427-7-115540266\", \"00142875-a39d-4028-a3b7-987ccd151649\""
            type: string
          type: array
        variation:
          type: integer
      type: object
    Token:
      example:
        role: writer
        customRoleIds:
        - customRoleIds
        - customRoleIds
        _links:
          next:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        _member:
          firstName: Alan
          lastName: Turing
          _verified: true
          role: null
          _links:
            next:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          _pendingInvite: true
          _lastSeen: 1469326565348
          isBeta: true
          _id: 5a580a01b4ff89217bdf9dc1
          _lastSeenMetadata:
            tokenId: 5fd2a1ee05600316d5cb3e96
          email: user@launchdarkly.com
          customRoles:
          - 5a580a01b4ff89217bdf9dc1
          - 5a580a01b4ff89217bdf9dc1
        creationDate: 1443652232590
        ownerId: 5a580a01b4ff89217bdf9dc1
        defaultApiVersion: 0
        token: "3243"
        inlineRole:
        - notActions:
          - updateOn
          - updateOn
          notResources:
          - proj/*:env/*:flag/my-flag
          - proj/*:env/*:flag/my-flag
          effect: allow
          resources:
          - proj/*:env/*:flag/my-flag
          - proj/*:env/*:flag/my-flag
          actions:
          - updateOn
          - updateOn
        - notActions:
          - updateOn
          - updateOn
          notResources:
          - proj/*:env/*:flag/my-flag
          - proj/*:env/*:flag/my-flag
          effect: allow
          resources:
          - proj/*:env/*:flag/my-flag
          - proj/*:env/*:flag/my-flag
          actions:
          - updateOn
          - updateOn
        lastUsed: 1469326565348
        name: My access token
        _id: 5a580a01b4ff89217bdf9dc1
        lastModified: 1469326565348
        serviceToken: true
        memberId: 5a580a01b4ff89217bdf9dc1
      properties:
        _id:
          description: The unique resource id.
          example: 5a580a01b4ff89217bdf9dc1
          type: string
        _links:
          $ref: '#/components/schemas/Links'
        _member:
          $ref: '#/components/schemas/Member'
        creationDate:
          description: A unix epoch time in milliseconds specifying the creation time
            of this access token.
          example: 1443652232590
          format: int64
          type: integer
        customRoleIds:
          description: A list of custom role IDs to use as access limits for the access
            token
          items:
            type: string
          type: array
        defaultApiVersion:
          description: The default API version for this token
          type: integer
        inlineRole:
          items:
            $ref: '#/components/schemas/Statement'
          type: array
        lastModified:
          description: A unix epoch time in milliseconds specifying the last time
            this access token was modified.
          example: 1469326565348
          format: int64
          type: integer
        lastUsed:
          description: A unix epoch time in milliseconds specifying the last time
            this access token was used to authorize access to the LaunchDarkly REST
            API.
          example: 1469326565348
          format: int64
          type: integer
        memberId:
          description: The unique resource id.
          example: 5a580a01b4ff89217bdf9dc1
          type: string
        name:
          description: A human-friendly name for the access token
          example: My access token
          type: string
        ownerId:
          description: The unique resource id.
          example: 5a580a01b4ff89217bdf9dc1
          type: string
        role:
          description: The name of a built-in role for the token
          example: writer
          type: string
        serviceToken:
          description: Whether the token will be a service token https://docs.launchdarkly.com/home/account-security/api-access-tokens#service-tokens
          type: boolean
        token:
          description: "The last 4 digits of the unique secret key for this access\
            \ token. If creating or resetting the token, this will be the full token\
            \ secret."
          example: "3243"
          type: string
      type: object
    Tokens:
      example:
        _links:
          next:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        items:
        - role: writer
          customRoleIds:
          - customRoleIds
          - customRoleIds
          _links:
            next:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          _member:
            firstName: Alan
            lastName: Turing
            _verified: true
            role: null
            _links:
              next:
                href: /api/v2/endpoint
                type: application/json
              self:
                href: /api/v2/endpoint
                type: application/json
            _pendingInvite: true
            _lastSeen: 1469326565348
            isBeta: true
            _id: 5a580a01b4ff89217bdf9dc1
            _lastSeenMetadata:
              tokenId: 5fd2a1ee05600316d5cb3e96
            email: user@launchdarkly.com
            customRoles:
            - 5a580a01b4ff89217bdf9dc1
            - 5a580a01b4ff89217bdf9dc1
          creationDate: 1443652232590
          ownerId: 5a580a01b4ff89217bdf9dc1
          defaultApiVersion: 0
          token: "3243"
          inlineRole:
          - notActions:
            - updateOn
            - updateOn
            notResources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            effect: allow
            resources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            actions:
            - updateOn
            - updateOn
          - notActions:
            - updateOn
            - updateOn
            notResources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            effect: allow
            resources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            actions:
            - updateOn
            - updateOn
          lastUsed: 1469326565348
          name: My access token
          _id: 5a580a01b4ff89217bdf9dc1
          lastModified: 1469326565348
          serviceToken: true
          memberId: 5a580a01b4ff89217bdf9dc1
        - role: writer
          customRoleIds:
          - customRoleIds
          - customRoleIds
          _links:
            next:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          _member:
            firstName: Alan
            lastName: Turing
            _verified: true
            role: null
            _links:
              next:
                href: /api/v2/endpoint
                type: application/json
              self:
                href: /api/v2/endpoint
                type: application/json
            _pendingInvite: true
            _lastSeen: 1469326565348
            isBeta: true
            _id: 5a580a01b4ff89217bdf9dc1
            _lastSeenMetadata:
              tokenId: 5fd2a1ee05600316d5cb3e96
            email: user@launchdarkly.com
            customRoles:
            - 5a580a01b4ff89217bdf9dc1
            - 5a580a01b4ff89217bdf9dc1
          creationDate: 1443652232590
          ownerId: 5a580a01b4ff89217bdf9dc1
          defaultApiVersion: 0
          token: "3243"
          inlineRole:
          - notActions:
            - updateOn
            - updateOn
            notResources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            effect: allow
            resources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            actions:
            - updateOn
            - updateOn
          - notActions:
            - updateOn
            - updateOn
            notResources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            effect: allow
            resources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            actions:
            - updateOn
            - updateOn
          lastUsed: 1469326565348
          name: My access token
          _id: 5a580a01b4ff89217bdf9dc1
          lastModified: 1469326565348
          serviceToken: true
          memberId: 5a580a01b4ff89217bdf9dc1
      properties:
        _links:
          $ref: '#/components/schemas/Links'
        items:
          items:
            $ref: '#/components/schemas/Token'
          type: array
      type: object
    Usage:
      example:
        _links:
          parent:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
          subseries:
          - href: /api/v2/endpoint
            type: application/json
          - href: /api/v2/endpoint
            type: application/json
        series:
        - "0": 0
          time: 1551740400000
        - "0": 0
          time: 1551740400000
      properties:
        _links:
          $ref: '#/components/schemas/UsageLinks'
        series:
          items:
            $ref: '#/components/schemas/StreamUsageSeries'
          type: array
      type: object
    UsageError:
      properties:
        message:
          example: "This is a beta API, you must pass beta in the LD-API-Version header\
            \ to use it."
          type: string
      type: object
    UsageLinks:
      example:
        parent:
          href: /api/v2/endpoint
          type: application/json
        self:
          href: /api/v2/endpoint
          type: application/json
        subseries:
        - href: /api/v2/endpoint
          type: application/json
        - href: /api/v2/endpoint
          type: application/json
      properties:
        parent:
          $ref: '#/components/schemas/Link'
        self:
          $ref: '#/components/schemas/Link'
        subseries:
          description: The following links that are in the response.
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    User:
      example:
        secondary: secondary
        country: country
        firstName: firstName
        lastName: lastName
        custom:
          company: example.com
        ip: ip
        name: Bob Loblaw
        anonymous: true
        avatar: avatar
        email: email
        key: a00bea
      properties:
        anonymous:
          type: boolean
        avatar:
          type: string
        country:
          type: string
        custom:
          example:
            company: example.com
          properties: {}
          type: object
        email:
          type: string
        firstName:
          type: string
        ip:
          type: string
        key:
          example: a00bea
          type: string
        lastName:
          type: string
        name:
          example: Bob Loblaw
          type: string
        secondary:
          type: string
      type: object
    UserFlagSetting:
      example:
        _links:
          next:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        _value: true
        setting: true
      properties:
        _links:
          $ref: '#/components/schemas/Links'
        _value:
          description: "The most important attribute in the response. The _value is\
            \ the current setting for the user. For a boolean feature toggle, this\
            \ will be true, false, or null if there is no defined fallthrough value."
          example: true
          type: boolean
        setting:
          description: "The setting attribute indicates whether you've explicitly\
            \ targeted this user to receive a particular variation. For example, if\
            \ you have explicitly turned off a feature toggle for a user, setting\
            \ will be false. A setting of null means that you haven't assigned that\
            \ user to a specific variation."
          type: boolean
      type: object
    UserFlagSettings:
      example:
        _links:
          next:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        items:
          alternate.page:
            _links:
              self:
                href: /api/v2/users/lacuna/production/Abbie_Braun/flags/alternate.page
                type: application/json
            _value: "false,"
          sort.order:
            _links:
              _value: true
              self:
                href: /api/v2/users/lacuna/production/Abbie_Braun/flags/sort.order
                type: application/json
      properties:
        _links:
          $ref: '#/components/schemas/Links'
        items:
          additionalProperties:
            $ref: '#/components/schemas/UserFlagSetting'
          example:
            alternate.page:
              _links:
                self:
                  href: /api/v2/users/lacuna/production/Abbie_Braun/flags/alternate.page
                  type: application/json
              _value: "false,"
            sort.order:
              _links:
                _value: true
                self:
                  href: /api/v2/users/lacuna/production/Abbie_Braun/flags/sort.order
                  type: application/json
          type: object
      type: object
    UserRecord:
      example:
        environmentId: 54ac2d97de674204ddd61096
        lastPing: 2015-03-03T02:37:22.492Z
        avatar: https://s3.amazonaws.com/uifaces/faces/twitter/shylockjoy/73.jpg
        ownerId: 5a580a01b4ff89217bdf9dc1
        user:
          secondary: secondary
          country: country
          firstName: firstName
          lastName: lastName
          custom:
            company: example.com
          ip: ip
          name: Bob Loblaw
          anonymous: true
          avatar: avatar
          email: email
          key: a00bea
      properties:
        avatar:
          example: https://s3.amazonaws.com/uifaces/faces/twitter/shylockjoy/73.jpg
          type: string
        environmentId:
          example: 54ac2d97de674204ddd61096
          type: string
        lastPing:
          example: 2015-03-03T02:37:22.492Z
          type: string
        ownerId:
          description: The unique resource id.
          example: 5a580a01b4ff89217bdf9dc1
          type: string
        user:
          $ref: '#/components/schemas/User'
      type: object
    UserSegment:
      example:
        excluded:
        - excluded
        - excluded
        _flags:
        - _links:
            next:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          _site:
            href: /features/sort.order
            type: text/html
          name: name
          key: key
        - _links:
            next:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          _site:
            href: /features/sort.order
            type: text/html
          name: name
          key: key
        _links:
          next:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        name: Beta Testers
        description: Users in this segment can access beta features.
        rules:
        - clauses:
          - op: in
            negate: true
            values:
            - Top Customers
            - Top Customers
            _id: _id
            attribute: groups
          - op: in
            negate: true
            values:
            - Top Customers
            - Top Customers
            _id: _id
            attribute: groups
          weight: 0
          bucketBy: bucketBy
        - clauses:
          - op: in
            negate: true
            values:
            - Top Customers
            - Top Customers
            _id: _id
            attribute: groups
          - op: in
            negate: true
            values:
            - Top Customers
            - Top Customers
            _id: _id
            attribute: groups
          weight: 0
          bucketBy: bucketBy
        creationDate: 1443652232590
        unbounded: false
        included:
        - included
        - included
        version: 6
        key: beta-testers
        tags:
        - dev
        - ops
      properties:
        _flags:
          items:
            $ref: '#/components/schemas/FlagListItem'
          readOnly: true
          type: array
        _links:
          $ref: '#/components/schemas/Links'
        creationDate:
          description: A unix epoch time in milliseconds specifying the creation time
            of this flag.
          example: 1443652232590
          format: int64
          type: integer
        description:
          description: Description of the user segment.
          example: Users in this segment can access beta features.
          type: string
        excluded:
          description: "An array of user keys that should not be included in this\
            \ segment, unless they are also listed in \"included\"."
          items:
            type: string
          type: array
        included:
          description: An array of user keys that are included in this segment.
          items:
            type: string
          type: array
        key:
          description: Unique identifier for the user segment.
          example: beta-testers
          type: string
        name:
          description: Name of the user segment.
          example: Beta Testers
          type: string
        rules:
          description: An array of rules that can cause a user to be included in this
            segment.
          items:
            $ref: '#/components/schemas/UserSegmentRule'
          type: array
        tags:
          description: An array of tags for this user segment.
          example:
          - dev
          - ops
          items:
            type: string
          type: array
        unbounded:
          description: Controls whether this is considered a "big segment" which can
            support an unlimited numbers of users. Include/exclude lists sent with
            this payload are not used in big segments. Contact your account manager
            for early access to this feature.
          example: false
          type: boolean
        version:
          type: integer
      required:
      - creationDate
      - key
      - name
      type: object
    UserSegmentRule:
      example:
        clauses:
        - op: in
          negate: true
          values:
          - Top Customers
          - Top Customers
          _id: _id
          attribute: groups
        - op: in
          negate: true
          values:
          - Top Customers
          - Top Customers
          _id: _id
          attribute: groups
        weight: 0
        bucketBy: bucketBy
      properties:
        bucketBy:
          type: string
        clauses:
          items:
            $ref: '#/components/schemas/Clause'
          type: array
        weight:
          type: integer
      type: object
    UserSegments:
      example:
        _links:
          next:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        items:
        - excluded:
          - excluded
          - excluded
          _flags:
          - _links:
              next:
                href: /api/v2/endpoint
                type: application/json
              self:
                href: /api/v2/endpoint
                type: application/json
            _site:
              href: /features/sort.order
              type: text/html
            name: name
            key: key
          - _links:
              next:
                href: /api/v2/endpoint
                type: application/json
              self:
                href: /api/v2/endpoint
                type: application/json
            _site:
              href: /features/sort.order
              type: text/html
            name: name
            key: key
          _links:
            next:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          name: Beta Testers
          description: Users in this segment can access beta features.
          rules:
          - clauses:
            - op: in
              negate: true
              values:
              - Top Customers
              - Top Customers
              _id: _id
              attribute: groups
            - op: in
              negate: true
              values:
              - Top Customers
              - Top Customers
              _id: _id
              attribute: groups
            weight: 0
            bucketBy: bucketBy
          - clauses:
            - op: in
              negate: true
              values:
              - Top Customers
              - Top Customers
              _id: _id
              attribute: groups
            - op: in
              negate: true
              values:
              - Top Customers
              - Top Customers
              _id: _id
              attribute: groups
            weight: 0
            bucketBy: bucketBy
          creationDate: 1443652232590
          unbounded: false
          included:
          - included
          - included
          version: 6
          key: beta-testers
          tags:
          - dev
          - ops
        - excluded:
          - excluded
          - excluded
          _flags:
          - _links:
              next:
                href: /api/v2/endpoint
                type: application/json
              self:
                href: /api/v2/endpoint
                type: application/json
            _site:
              href: /features/sort.order
              type: text/html
            name: name
            key: key
          - _links:
              next:
                href: /api/v2/endpoint
                type: application/json
              self:
                href: /api/v2/endpoint
                type: application/json
            _site:
              href: /features/sort.order
              type: text/html
            name: name
            key: key
          _links:
            next:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          name: Beta Testers
          description: Users in this segment can access beta features.
          rules:
          - clauses:
            - op: in
              negate: true
              values:
              - Top Customers
              - Top Customers
              _id: _id
              attribute: groups
            - op: in
              negate: true
              values:
              - Top Customers
              - Top Customers
              _id: _id
              attribute: groups
            weight: 0
            bucketBy: bucketBy
          - clauses:
            - op: in
              negate: true
              values:
              - Top Customers
              - Top Customers
              _id: _id
              attribute: groups
            - op: in
              negate: true
              values:
              - Top Customers
              - Top Customers
              _id: _id
              attribute: groups
            weight: 0
            bucketBy: bucketBy
          creationDate: 1443652232590
          unbounded: false
          included:
          - included
          - included
          version: 6
          key: beta-testers
          tags:
          - dev
          - ops
      properties:
        _links:
          $ref: '#/components/schemas/Links'
        items:
          items:
            $ref: '#/components/schemas/UserSegment'
          type: array
      type: object
    UserTargetingExpirationForFlag:
      example:
        _resourceId:
          projectKey: projectKey
          kind: kind
          flagKey: flagKey
          key: key
          environmentKey: environmentKey
        variationId: variationId
        _links:
          next:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        _id: _id
        _version: 0
        userKey: userKey
        expirationDate: 1735689600000
      properties:
        _id:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
        _resourceId:
          $ref: '#/components/schemas/UserTargetingExpirationResourceIdForFlag'
        _version:
          type: integer
        expirationDate:
          description: Unix epoch time in milliseconds specifying the expiration date
          example: 1735689600000
          format: int64
          type: integer
        userKey:
          description: Unique identifier for the user
          type: string
        variationId:
          description: the ID of the variation that the user is targeted on a flag
          type: string
      type: object
    UserTargetingExpirationForFlags:
      example:
        _links:
          next:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        items:
        - _resourceId:
            projectKey: projectKey
            kind: kind
            flagKey: flagKey
            key: key
            environmentKey: environmentKey
          variationId: variationId
          _links:
            next:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          _id: _id
          _version: 0
          userKey: userKey
          expirationDate: 1735689600000
        - _resourceId:
            projectKey: projectKey
            kind: kind
            flagKey: flagKey
            key: key
            environmentKey: environmentKey
          variationId: variationId
          _links:
            next:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          _id: _id
          _version: 0
          userKey: userKey
          expirationDate: 1735689600000
      properties:
        _links:
          $ref: '#/components/schemas/Links'
        items:
          items:
            $ref: '#/components/schemas/UserTargetingExpirationForFlag'
          type: array
      type: object
    UserTargetingExpirationForSegment:
      example:
        _resourceId:
          projectKey: projectKey
          kind: kind
          flagKey: flagKey
          key: key
          environmentKey: environmentKey
        _links:
          next:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        targetType: targetType
        _id: _id
        _version: 0
        userKey: userKey
        expirationDate: 1735689600000
      properties:
        _id:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
        _resourceId:
          $ref: '#/components/schemas/UserTargetingExpirationResourceIdForFlag'
        _version:
          type: integer
        expirationDate:
          description: Unix epoch time in milliseconds specifying the expiration date
          example: 1735689600000
          format: int64
          type: integer
        targetType:
          description: either the included or excluded variation that the user is
            targeted on a segment
          type: string
        userKey:
          description: Unique identifier for the user
          type: string
      type: object
    UserTargetingExpirationOnFlagsForUser:
      example:
        _links:
          next:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        items:
        - _resourceId:
            projectKey: projectKey
            kind: kind
            flagKey: flagKey
            key: key
            environmentKey: environmentKey
          variationId: variationId
          _links:
            next:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          _id: _id
          _version: 0
          userKey: userKey
          expirationDate: 1735689600000
        - _resourceId:
            projectKey: projectKey
            kind: kind
            flagKey: flagKey
            key: key
            environmentKey: environmentKey
          variationId: variationId
          _links:
            next:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          _id: _id
          _version: 0
          userKey: userKey
          expirationDate: 1735689600000
      properties:
        _links:
          $ref: '#/components/schemas/Links'
        items:
          items:
            $ref: '#/components/schemas/UserTargetingExpirationForFlag'
          type: array
      type: object
    UserTargetingExpirationResourceIdForFlag:
      example:
        projectKey: projectKey
        kind: kind
        flagKey: flagKey
        key: key
        environmentKey: environmentKey
      properties:
        environmentKey:
          type: string
        flagKey:
          type: string
        key:
          type: string
        kind:
          type: string
        projectKey:
          type: string
      type: object
    Users:
      example:
        _links:
          next:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        totalCount: 3.0
        items:
        - environmentId: 54ac2d97de674204ddd61096
          lastPing: 2015-03-03T02:37:22.492Z
          avatar: https://s3.amazonaws.com/uifaces/faces/twitter/shylockjoy/73.jpg
          ownerId: 5a580a01b4ff89217bdf9dc1
          user:
            secondary: secondary
            country: country
            firstName: firstName
            lastName: lastName
            custom:
              company: example.com
            ip: ip
            name: Bob Loblaw
            anonymous: true
            avatar: avatar
            email: email
            key: a00bea
        - environmentId: 54ac2d97de674204ddd61096
          lastPing: 2015-03-03T02:37:22.492Z
          avatar: https://s3.amazonaws.com/uifaces/faces/twitter/shylockjoy/73.jpg
          ownerId: 5a580a01b4ff89217bdf9dc1
          user:
            secondary: secondary
            country: country
            firstName: firstName
            lastName: lastName
            custom:
              company: example.com
            ip: ip
            name: Bob Loblaw
            anonymous: true
            avatar: avatar
            email: email
            key: a00bea
      properties:
        _links:
          $ref: '#/components/schemas/Links'
        items:
          items:
            $ref: '#/components/schemas/UserRecord'
          type: array
        totalCount:
          example: 3.0
          type: number
      type: object
    Variation:
      properties:
        _id:
          example: 24b32dd3-0ba6-46ee-86af-230eebf3c7cb
          type: string
        description:
          example: The true variation
          type: string
        name:
          example: "True"
          type: string
        value:
          properties: {}
          type: object
      required:
      - value
      type: object
    Webhook:
      example:
        _links:
          next:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        name: Example hook
        "true": true
        statements:
        - notActions:
          - updateOn
          - updateOn
          notResources:
          - proj/*:env/*:flag/my-flag
          - proj/*:env/*:flag/my-flag
          effect: allow
          resources:
          - proj/*:env/*:flag/my-flag
          - proj/*:env/*:flag/my-flag
          actions:
          - updateOn
          - updateOn
        - notActions:
          - updateOn
          - updateOn
          notResources:
          - proj/*:env/*:flag/my-flag
          - proj/*:env/*:flag/my-flag
          effect: allow
          resources:
          - proj/*:env/*:flag/my-flag
          - proj/*:env/*:flag/my-flag
          actions:
          - updateOn
          - updateOn
        _id: 5a580a01b4ff89217bdf9dc1
        secret: frobozz
        url: https://example.com/example
        tags:
        - ""
        - ""
      properties:
        _id:
          description: The unique resource id.
          example: 5a580a01b4ff89217bdf9dc1
          type: string
        _links:
          $ref: '#/components/schemas/Links'
        name:
          description: The name of the webhook.
          example: Example hook
          type: string
        "true":
          description: Whether this webhook is enabled or not.
          example: true
          type: boolean
        secret:
          description: "If defined, the webhooks post request will include a X-LD-Signature\
            \ header whose value will contain an HMAC SHA256 hex digest of the webhook\
            \ payload, using the secret as the key."
          example: frobozz
          type: string
        statements:
          items:
            $ref: '#/components/schemas/Statement'
          type: array
        tags:
          description: Tags assigned to this webhook.
          items:
            example: ""
            type: string
          type: array
        url:
          description: The URL of the remote webhook.
          example: https://example.com/example
          type: string
      type: object
    Webhooks:
      example:
        _links:
          next:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        items:
        - _links:
            next:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          name: Example hook
          "true": true
          statements:
          - notActions:
            - updateOn
            - updateOn
            notResources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            effect: allow
            resources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            actions:
            - updateOn
            - updateOn
          - notActions:
            - updateOn
            - updateOn
            notResources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            effect: allow
            resources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            actions:
            - updateOn
            - updateOn
          _id: 5a580a01b4ff89217bdf9dc1
          secret: frobozz
          url: https://example.com/example
          tags:
          - ""
          - ""
        - _links:
            next:
              href: /api/v2/endpoint
              type: application/json
            self:
              href: /api/v2/endpoint
              type: application/json
          name: Example hook
          "true": true
          statements:
          - notActions:
            - updateOn
            - updateOn
            notResources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            effect: allow
            resources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            actions:
            - updateOn
            - updateOn
          - notActions:
            - updateOn
            - updateOn
            notResources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            effect: allow
            resources:
            - proj/*:env/*:flag/my-flag
            - proj/*:env/*:flag/my-flag
            actions:
            - updateOn
            - updateOn
          _id: 5a580a01b4ff89217bdf9dc1
          secret: frobozz
          url: https://example.com/example
          tags:
          - ""
          - ""
      properties:
        _links:
          $ref: '#/components/schemas/Links'
        items:
          items:
            $ref: '#/components/schemas/Webhook'
          type: array
      type: object
    WeightedVariation:
      example:
        weight: 5
        variation: 1
      properties:
        variation:
          type: integer
        weight:
          type: integer
      type: object
    postRelayAutoConfig_request:
      properties:
        name:
          description: A human-friendly name for the relay proxy configuration
          example: My relay proxy config
          type: string
        policy:
          items:
            $ref: '#/components/schemas/Policy'
          type: array
      type: object
    postDestination_request:
      properties:
        config:
          description: destination-specific configuration.
          example:
            project: cool-project
            topic: test
          properties: {}
          type: object
        kind:
          description: "The data export destination type. Available choices are kinesis,\
            \ google-pubsub, mparticle, or segment."
          enum:
          - google-pubsub
          - kinesis
          - mparticle
          - segment
          example: google-pubsub
          type: string
        name:
          description: A human-readable name for your data export destination.
          example: Example Google Pub/Sub Destination
          type: string
        "true":
          description: Whether the data export destination is on or not.
          example: true
          type: boolean
      required:
      - config
      - kind
      - name
      type: object
    postFeatureFlag_request:
      properties:
        clientSideAvailability:
          $ref: '#/components/schemas/ClientSideAvailability'
        defaults:
          $ref: '#/components/schemas/Defaults'
        description:
          description: A description of the feature flag.
          example: This flag controls whether test feature is turned on or not.
          type: string
        includeInSnippet:
          description: Whether or not this flag should be made available to the client-side
            JavaScript SDK.
          type: boolean
        key:
          description: A unique key that will be used to reference the flag in your
            code.
          example: new-test-flag
          type: string
        name:
          description: A human-friendly name for the feature flag. Remember to note
            if this flag is intended to be temporary or permanent.
          example: new test flag
          type: string
        tags:
          description: Tags for the feature flag.
          items:
            example: ""
            type: string
          type: array
        temporary:
          description: Whether or not the flag is a temporary flag.
          type: boolean
        variations:
          description: An array of possible variations for the flag.
          items:
            $ref: '#/components/schemas/Variation'
          type: array
      required:
      - key
      - name
      - variations
      type: object
    patchFeatureFlag_request:
      properties:
        comment:
          example: This is a comment string
          type: string
        patch:
          items:
            $ref: '#/components/schemas/PatchOperation'
          type: array
      type: object
    copyFeatureFlag_request:
      properties:
        comment:
          description: comment will be included in audit log item for change.
          example: This is a comment string
          type: string
        excludedActions:
          description: Define the parts of the flag configuration that will not be
            copied.
          items:
            $ref: '#/components/schemas/CopyActions'
          type: array
        includedActions:
          description: Define the parts of the flag configuration that will be copied.
          items:
            $ref: '#/components/schemas/CopyActions'
          type: array
        source:
          $ref: '#/components/schemas/FeatureFlagCopyObject'
        target:
          $ref: '#/components/schemas/FeatureFlagCopyObject'
      type: object
    postIntegrationSubscription_request:
      properties:
        config:
          description: Integration-specific configuration fields.
          example:
            apiKey: 582**************************116
            hostURL: https://api.datadoghq.com
          properties: {}
          type: object
        name:
          description: A human-readable name for your subscription configuration.
          example: Example Datadog Integration
          type: string
        "true":
          description: Whether the integration subscription is active or not.
          example: true
          type: boolean
        statements:
          items:
            $ref: '#/components/schemas/Statement'
          type: array
        tags:
          description: Tags for the integration subscription.
          example: []
          items:
            type: string
          type: array
      required:
      - config
      - name
      type: object
    postMembers_request_inner:
      properties:
        customRoles:
          items:
            description: The 20-hexdigit id or the key for a custom role.
            example: revenue-team
            type: string
          type: array
        email:
          example: exampleuser@email.com
          type: string
        firstName:
          example: Bob
          type: string
        inlineRole:
          items:
            $ref: '#/components/schemas/Statement'
          type: array
        lastName:
          example: Loblaw
          type: string
        role:
          $ref: '#/components/schemas/Role'
      required:
      - email
      type: object
    postProject_request:
      properties:
        defaultClientSideAvailability:
          $ref: '#/components/schemas/ClientSideAvailability'
        environments:
          items:
            $ref: '#/components/schemas/EnvironmentPost'
          type: array
        includeInSnippetByDefault:
          example: false
          type: boolean
        key:
          example: new-project
          type: string
        name:
          example: New Project
          type: string
        tags:
          example:
          - ops
          - dev
          items:
            type: string
          type: array
      required:
      - key
      - name
      type: object
    postApprovalRequest_request:
      properties:
        comment:
          description: comment will be included in audit log item for change.
          type: string
        description:
          description: A name that describes the changes you would like to apply to
            a feature flag configuration
          type: string
        executionDate:
          description: Timestamp for when instructions will be executed
          format: int64
          type: integer
        instructions:
          items:
            $ref: '#/components/schemas/SemanticPatchInstruction_inner'
          type: array
        notifyMemberIds:
          example:
          - memberId
          - memberId2
          items:
            type: string
          type: array
        operatingOnId:
          description: ID of scheduled change to edit or delete
          type: string
      required:
      - description
      - instructions
      - notifyMemberIds
      type: object
    postApplyApprovalRequest_request:
      properties:
        comment:
          description: comment will be included in audit log item for change.
          example: Applying approved changes
          type: string
      type: object
    postReviewApprovalRequest_request:
      properties:
        comment:
          description: comment will be included in audit log item for change.
          example: This is a comment string
          type: string
        kind:
          description: "One of approve, decline, or comment."
          enum:
          - approve
          - decline
          - comment
          example: approve
          type: string
      required:
      - kind
      type: object
    postFlagConfigScheduledChanges_request:
      properties:
        comment:
          description: Used to describe the scheduled changes.
          type: string
        executionDate:
          description: A unix epoch time in milliseconds specifying the date the scheduled
            changes will be applied
          type: integer
        instructions:
          items:
            $ref: '#/components/schemas/SemanticPatchInstruction_inner'
          type: array
      type: object
    getFlagConfigScheduledChangesConflicts_request:
      properties:
        executionDate:
          description: A unix epoch time in milliseconds specifying the date the scheduled
            changes will be applied
          type: integer
        instructions:
          items:
            $ref: '#/components/schemas/SemanticPatchInstruction_inner'
          type: array
      type: object
    patchFlagConfigScheduledChange_request:
      properties:
        comment:
          description: Used to describe the scheduled changes.
          type: string
        instructions:
          items:
            $ref: '#/components/schemas/SemanticPatchInstruction_inner'
          type: array
      type: object
    postCustomRole_request:
      properties:
        description:
          description: Description of the custom role.
          example: Description of revenue team role here
          type: string
        key:
          description: The 20-hexdigit id or the key for a custom role.
          example: revenue-team
          type: string
        name:
          description: Name of the custom role.
          example: revenue team
          type: string
        policy:
          items:
            $ref: '#/components/schemas/Policy'
          type: array
      required:
      - key
      - name
      - policy
      type: object
    postUserSegment_request:
      properties:
        description:
          description: A description for the user segment.
          example: Users in this segment will have access to beta features.
          type: string
        key:
          description: A unique key that will be used to reference the user segment
            in feature flags.
          example: new-segment
          type: string
        name:
          description: A human-friendly name for the user segment.
          example: new segment
          type: string
        tags:
          description: Tags for the user segment.
          items:
            example: ""
            type: string
          type: array
        unbounded:
          description: Controls whether this is considered a "big segment" which can
            support an unlimited numbers of users. Include/exclude lists sent with
            this payload are not used in big segments. Contact your account manager
            for early access to this feature.
          example: false
          type: boolean
      required:
      - key
      - name
      type: object
    updateBigSegmentTargets_request:
      properties:
        excluded:
          $ref: '#/components/schemas/BigSegmentTargetChanges'
        included:
          $ref: '#/components/schemas/BigSegmentTargetChanges'
      type: object
    postToken_request:
      properties:
        customRoleIds:
          description: A list of custom role IDs to use as access limits for the access
            token
          items:
            example: ""
            type: string
          type: array
        defaultApiVersion:
          description: The default API version for this token
          type: integer
        inlineRole:
          items:
            $ref: '#/components/schemas/Statement'
          type: array
        name:
          description: A human-friendly name for the access token
          example: My access token
          type: string
        role:
          description: The name of a built-in role for the token
          example: writer
          type: string
        serviceToken:
          description: Whether the token will be a service token https://docs.launchdarkly.com/home/account-security/api-access-tokens#service-tokens
          type: boolean
      type: object
    putFlagSetting_request:
      properties:
        setting:
          description: |
            The variation value to set for the user. Must match the variation type of the flag.
          type: boolean
      type: object
    postWebhook_request:
      properties:
        name:
          description: The name of the webhook.
          example: Example hook
          type: string
        "true":
          description: Whether this webhook is enabled or not.
          example: true
          type: boolean
        secret:
          description: "If sign is true, and the secret attribute is omitted, LaunchDarkly\
            \ will automatically generate a secret for you."
          example: <password>
          type: string
        sign:
          description: "If sign is false, the webhook will not include a signature\
            \ header, and the secret can be omitted."
          type: boolean
        statements:
          items:
            $ref: '#/components/schemas/Statement'
          type: array
        tags:
          description: Tags for the webhook.
          example: []
          items:
            type: string
          type: array
        url:
          description: The URL of the remote webhook.
          example: https://example.com/example
          type: string
      required:
      - sign
      - url
      type: object
    AuditLogEntry_target:
      example:
        _links:
          next:
            href: /api/v2/endpoint
            type: application/json
          self:
            href: /api/v2/endpoint
            type: application/json
        name: Testing
        resources:
        - proj/alexis:env/test
        - proj/alexis:env/test
      properties:
        _links:
          $ref: '#/components/schemas/Links'
        name:
          example: Testing
          type: string
        resources:
          items:
            example: proj/alexis:env/test
            type: string
          type: array
      type: object
    DependentFlag__links:
      example:
        self:
          href: /api/v2/endpoint
          type: application/json
      properties:
        self:
          $ref: '#/components/schemas/Link'
      type: object
    DependentFlagEnvironment__links:
      example:
        flagLink:
          href: /api/v2/endpoint
          type: application/json
        self:
          href: /api/v2/endpoint
          type: application/json
      properties:
        flagLink:
          $ref: '#/components/schemas/Link'
        self:
          $ref: '#/components/schemas/Link'
      type: object
    Environment_approvalSettings:
      description: Approval settings for an environment. Only appears if the approvals
        feature is enabled.
      example:
        serviceKind: launchdarkly
        canReviewOwnRequest: true
        requiredApprovalTags:
        - requiredApprovalTags
        - requiredApprovalTags
        canApplyDeclinedChanges: true
        minNumApprovals: 2
        required: true
      properties:
        canApplyDeclinedChanges:
          description: "Whether changes can be applied as long as minNumApprovals\
            \ is met, regardless of if any reviewers have declined a request."
          type: boolean
        canReviewOwnRequest:
          description: Whether requesters can approve or decline their own request.
            They may always comment.
          type: boolean
        minNumApprovals:
          description: The number of approvals required before an approval request
            can be applied.
          example: 2
          format: int64
          type: integer
        required:
          description: "Whether any changes to flags in this environment will require\
            \ approval. You may only set required or requiredApprovalTags, not both."
          type: boolean
        requiredApprovalTags:
          description: "An array of tags used to specify which flags with those tags\
            \ require approval. You may only set requiredApprovalTags or required,\
            \ not both."
          items:
            type: string
          type: array
        serviceKind:
          description: The approvals system used.
          enum:
          - launchdarkly
          - service-now
          type: string
      type: object
    FeatureFlagScheduledChangesConflicts_instructions_inner:
      example:
        kind: removeUserTargets
        conflicts:
        - reason: reason
          _id: _id
        - reason: reason
          _id: _id
      properties:
        conflicts:
          items:
            $ref: '#/components/schemas/ScheduledChangesFeatureFlagConflict'
          type: array
        kind:
          description: The name of the modification you would like to perform on a
            resource.
          example: removeUserTargets
          type: string
      type: object
    IntegrationSubscription__status:
      example:
        successCount: 6
        errorCount: 2
        lastSuccess: 1443652232590
      properties:
        errorCount:
          example: 2
          type: integer
        lastSuccess:
          description: A unix epoch time in milliseconds specifying the last time
            this integration was successfully used.
          example: 1443652232590
          format: int64
          type: integer
        successCount:
          example: 6
          type: integer
      type: object
    Member__lastSeenMetadata:
      example:
        tokenId: 5fd2a1ee05600316d5cb3e96
      properties:
        tokenId:
          description: "If the last time this member accessed LaunchDarkly was using\
            \ the REST API, this value will be set to the ID of the personal access\
            \ token used."
          example: 5fd2a1ee05600316d5cb3e96
          type: string
      type: object
    SemanticPatchInstruction_inner:
      example:
        kind: removeUserTargets
      properties:
        kind:
          description: The name of the modification you would like to perform on a
            resource.
          example: removeUserTargets
          type: string
      type: object
  securitySchemes:
    Token:
      description: https://app.launchdarkly.com/settings#/tokens
      in: header
      name: Authorization
      type: apiKey
x-original-swagger-version: "2.0"
