/*
 * AltoroJ REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.2
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// Class1LoginAPIService is a service that implements the logic for the Class1LoginAPIServicer
// This service should implement the business logic for every endpoint for the Class1LoginAPI API.
// Include any external packages or services that will be required by this service.
type Class1LoginAPIService struct {
}

// NewClass1LoginAPIService creates a default api service
func NewClass1LoginAPIService() Class1LoginAPIServicer {
	return &Class1LoginAPIService{}
}

// CheckLogin - Check if any user is logged in
func (s *Class1LoginAPIService) CheckLogin(ctx context.Context, authorization string) (ImplResponse, error) {
	// TODO - update CheckLogin with the required logic for this service method.
	// Add api_class1_login_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("CheckLogin method not implemented")
}

// Login - Login method
func (s *Class1LoginAPIService) Login(ctx context.Context, body Login) (ImplResponse, error) {
	// TODO - update Login with the required logic for this service method.
	// Add api_class1_login_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(500, {}) or use other options such as http.Ok ...
	// return Response(500, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("Login method not implemented")
}
