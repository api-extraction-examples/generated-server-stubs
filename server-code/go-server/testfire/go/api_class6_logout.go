/*
 * AltoroJ REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.2
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// Class6LogoutAPIController binds http requests to an api service and writes the service results to the http response
type Class6LogoutAPIController struct {
	service Class6LogoutAPIServicer
	errorHandler ErrorHandler
}

// Class6LogoutAPIOption for how the controller is set up.
type Class6LogoutAPIOption func(*Class6LogoutAPIController)

// WithClass6LogoutAPIErrorHandler inject ErrorHandler into controller
func WithClass6LogoutAPIErrorHandler(h ErrorHandler) Class6LogoutAPIOption {
	return func(c *Class6LogoutAPIController) {
		c.errorHandler = h
	}
}

// NewClass6LogoutAPIController creates a default api controller
func NewClass6LogoutAPIController(s Class6LogoutAPIServicer, opts ...Class6LogoutAPIOption) Router {
	controller := &Class6LogoutAPIController{
		service:      s,
		errorHandler: DefaultErrorHandler,
	}

	for _, opt := range opts {
		opt(controller)
	}

	return controller
}

// Routes returns all the api routes for the Class6LogoutAPIController
func (c *Class6LogoutAPIController) Routes() Routes {
	return Routes{
		"DoLogOut": Route{
			strings.ToUpper("Get"),
			"/api/logout",
			c.DoLogOut,
		},
	}
}

// DoLogOut - 
func (c *Class6LogoutAPIController) DoLogOut(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.DoLogOut(r.Context())
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)
}
