/*
 * AltoroJ REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.2
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
)



// Class1LoginAPIRouter defines the required methods for binding the api requests to a responses for the Class1LoginAPI
// The Class1LoginAPIRouter implementation should parse necessary information from the http request,
// pass the data to a Class1LoginAPIServicer to perform the required actions, then write the service results to the http response.
type Class1LoginAPIRouter interface { 
	CheckLogin(http.ResponseWriter, *http.Request)
	Login(http.ResponseWriter, *http.Request)
}
// Class2AccountAPIRouter defines the required methods for binding the api requests to a responses for the Class2AccountAPI
// The Class2AccountAPIRouter implementation should parse necessary information from the http request,
// pass the data to a Class2AccountAPIServicer to perform the required actions, then write the service results to the http response.
type Class2AccountAPIRouter interface { 
	GetAccount(http.ResponseWriter, *http.Request)
	GetAccountBalance(http.ResponseWriter, *http.Request)
	GetTransactions(http.ResponseWriter, *http.Request)
	ShowLastTenTransactions(http.ResponseWriter, *http.Request)
}
// Class3TransferAPIRouter defines the required methods for binding the api requests to a responses for the Class3TransferAPI
// The Class3TransferAPIRouter implementation should parse necessary information from the http request,
// pass the data to a Class3TransferAPIServicer to perform the required actions, then write the service results to the http response.
type Class3TransferAPIRouter interface { 
	Trasnfer(http.ResponseWriter, *http.Request)
}
// Class4FeedbackAPIRouter defines the required methods for binding the api requests to a responses for the Class4FeedbackAPI
// The Class4FeedbackAPIRouter implementation should parse necessary information from the http request,
// pass the data to a Class4FeedbackAPIServicer to perform the required actions, then write the service results to the http response.
type Class4FeedbackAPIRouter interface { 
	GetFeedback(http.ResponseWriter, *http.Request)
	SendFeedback(http.ResponseWriter, *http.Request)
}
// Class5AdminAPIRouter defines the required methods for binding the api requests to a responses for the Class5AdminAPI
// The Class5AdminAPIRouter implementation should parse necessary information from the http request,
// pass the data to a Class5AdminAPIServicer to perform the required actions, then write the service results to the http response.
type Class5AdminAPIRouter interface { 
	AddUser(http.ResponseWriter, *http.Request)
	ChangePassword(http.ResponseWriter, *http.Request)
}
// Class6LogoutAPIRouter defines the required methods for binding the api requests to a responses for the Class6LogoutAPI
// The Class6LogoutAPIRouter implementation should parse necessary information from the http request,
// pass the data to a Class6LogoutAPIServicer to perform the required actions, then write the service results to the http response.
type Class6LogoutAPIRouter interface { 
	DoLogOut(http.ResponseWriter, *http.Request)
}


// Class1LoginAPIServicer defines the api actions for the Class1LoginAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type Class1LoginAPIServicer interface { 
	CheckLogin(context.Context, string) (ImplResponse, error)
	Login(context.Context, Login) (ImplResponse, error)
}


// Class2AccountAPIServicer defines the api actions for the Class2AccountAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type Class2AccountAPIServicer interface { 
	GetAccount(context.Context, string) (ImplResponse, error)
	GetAccountBalance(context.Context, string, string) (ImplResponse, error)
	GetTransactions(context.Context, string, string, Dates) (ImplResponse, error)
	ShowLastTenTransactions(context.Context, string, string) (ImplResponse, error)
}


// Class3TransferAPIServicer defines the api actions for the Class3TransferAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type Class3TransferAPIServicer interface { 
	Trasnfer(context.Context, string, Transfer) (ImplResponse, error)
}


// Class4FeedbackAPIServicer defines the api actions for the Class4FeedbackAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type Class4FeedbackAPIServicer interface { 
	GetFeedback(context.Context, string, string) (ImplResponse, error)
	SendFeedback(context.Context, Feedback) (ImplResponse, error)
}


// Class5AdminAPIServicer defines the api actions for the Class5AdminAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type Class5AdminAPIServicer interface { 
	AddUser(context.Context, string, NewUser) (ImplResponse, error)
	ChangePassword(context.Context, string, ChangePassword) (ImplResponse, error)
}


// Class6LogoutAPIServicer defines the api actions for the Class6LogoutAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type Class6LogoutAPIServicer interface { 
	DoLogOut(context.Context) (ImplResponse, error)
}
