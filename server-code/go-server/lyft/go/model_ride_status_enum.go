/*
 * Lyft
 *
 * Drive your app to success with Lyft's API
 *
 * API version: 1.0.0
 * Contact: api-support@lyft.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"fmt"
)


// RideStatusEnum : The status of the ride
type RideStatusEnum string

// List of RideStatusEnum
const (
	PENDING RideStatusEnum = "pending"
	ACCEPTED RideStatusEnum = "accepted"
	ARRIVED RideStatusEnum = "arrived"
	PICKED_UP RideStatusEnum = "pickedUp"
	DROPPED_OFF RideStatusEnum = "droppedOff"
	CANCELED RideStatusEnum = "canceled"
	SCHEDULED RideStatusEnum = "scheduled"
	UNKNOWN RideStatusEnum = "unknown"
)

// AllowedRideStatusEnumEnumValues is all the allowed values of RideStatusEnum enum
var AllowedRideStatusEnumEnumValues = []RideStatusEnum{
	"pending",
	"accepted",
	"arrived",
	"pickedUp",
	"droppedOff",
	"canceled",
	"scheduled",
	"unknown",
}

// validRideStatusEnumEnumValue provides a map of RideStatusEnums for fast verification of use input
var validRideStatusEnumEnumValues = map[RideStatusEnum]struct{}{
	"pending": {},
	"accepted": {},
	"arrived": {},
	"pickedUp": {},
	"droppedOff": {},
	"canceled": {},
	"scheduled": {},
	"unknown": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v RideStatusEnum) IsValid() bool {
	_, ok := validRideStatusEnumEnumValues[v]
	return ok
}

// NewRideStatusEnumFromValue returns a pointer to a valid RideStatusEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewRideStatusEnumFromValue(v string) (RideStatusEnum, error) {
	ev := RideStatusEnum(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for RideStatusEnum: valid values are %v", v, AllowedRideStatusEnumEnumValues)
	}
}



// AssertRideStatusEnumRequired checks if the required fields are not zero-ed
func AssertRideStatusEnumRequired(obj RideStatusEnum) error {
	return nil
}

// AssertRideStatusEnumConstraints checks if the values respects the defined constraints
func AssertRideStatusEnumConstraints(obj RideStatusEnum) error {
	return nil
}
