/*
 * Lyft
 *
 * Drive your app to success with Lyft's API
 *
 * API version: 1.0.0
 * Contact: api-support@lyft.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"errors"
)



type CancellationCostError struct {

	// Total price of the ride
	Amount int32 `json:"amount"`

	// The ISO 4217 currency code for the amount (e.g. USD)
	Currency string `json:"currency"`

	// The description for the cost
	Description string `json:"description"`

	// Token used to confirm the fee when cancelling a request
	Token string `json:"token,omitempty"`

	// How long, in seconds, before the token expires
	TokenDuration int32 `json:"token_duration,omitempty"`

	// A \"slug\" that serves as the error code (eg. \"bad_parameter\")
	Error string `json:"error,omitempty"`

	// A user-friendly description of the error (appropriate to show to an end-user)
	ErrorDescription string `json:"error_description,omitempty"`

	ErrorDetail []ErrorDetail `json:"error_detail,omitempty"`
}

// AssertCancellationCostErrorRequired checks if the required fields are not zero-ed
func AssertCancellationCostErrorRequired(obj CancellationCostError) error {
	elements := map[string]interface{}{
		"amount": obj.Amount,
		"currency": obj.Currency,
		"description": obj.Description,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.ErrorDetail {
		if err := AssertErrorDetailRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertCancellationCostErrorConstraints checks if the values respects the defined constraints
func AssertCancellationCostErrorConstraints(obj CancellationCostError) error {
	if obj.TokenDuration < 0 {
		return &ParsingError{Err: errors.New(errMsgMinValueConstraint)}
	}
	return nil
}
