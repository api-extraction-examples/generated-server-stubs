/*
 * Lyft
 *
 * Drive your app to success with Lyft's API
 *
 * API version: 1.0.0
 * Contact: api-support@lyft.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"time"
)



// RideReceipt - Receipt information of a processed ride.
type RideReceipt struct {

	// The break down of charge method
	Charges []Charge `json:"charges,omitempty"`

	// The break down of line items
	LineItems []LineItem `json:"line_items,omitempty"`

	Price Cost `json:"price,omitempty"`

	// The ride requested timestamp in date and time
	RequestedAt time.Time `json:"requested_at,omitempty"`

	// The unique ID of this ride
	RideId string `json:"ride_id,omitempty"`

	RideProfile RideProfileEnum `json:"ride_profile,omitempty"`
}

// AssertRideReceiptRequired checks if the required fields are not zero-ed
func AssertRideReceiptRequired(obj RideReceipt) error {
	for _, el := range obj.Charges {
		if err := AssertChargeRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.LineItems {
		if err := AssertLineItemRequired(el); err != nil {
			return err
		}
	}
	if err := AssertCostRequired(obj.Price); err != nil {
		return err
	}
	return nil
}

// AssertRideReceiptConstraints checks if the values respects the defined constraints
func AssertRideReceiptConstraints(obj RideReceipt) error {
	return nil
}
