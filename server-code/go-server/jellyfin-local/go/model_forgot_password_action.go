/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"fmt"
)



type ForgotPasswordAction string

// List of ForgotPasswordAction
const (
	CONTACT_ADMIN ForgotPasswordAction = "ContactAdmin"
	PIN_CODE ForgotPasswordAction = "PinCode"
	IN_NETWORK_REQUIRED ForgotPasswordAction = "InNetworkRequired"
)

// AllowedForgotPasswordActionEnumValues is all the allowed values of ForgotPasswordAction enum
var AllowedForgotPasswordActionEnumValues = []ForgotPasswordAction{
	"ContactAdmin",
	"PinCode",
	"InNetworkRequired",
}

// validForgotPasswordActionEnumValue provides a map of ForgotPasswordActions for fast verification of use input
var validForgotPasswordActionEnumValues = map[ForgotPasswordAction]struct{}{
	"ContactAdmin": {},
	"PinCode": {},
	"InNetworkRequired": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ForgotPasswordAction) IsValid() bool {
	_, ok := validForgotPasswordActionEnumValues[v]
	return ok
}

// NewForgotPasswordActionFromValue returns a pointer to a valid ForgotPasswordAction
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewForgotPasswordActionFromValue(v string) (ForgotPasswordAction, error) {
	ev := ForgotPasswordAction(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for ForgotPasswordAction: valid values are %v", v, AllowedForgotPasswordActionEnumValues)
	}
}



// AssertForgotPasswordActionRequired checks if the required fields are not zero-ed
func AssertForgotPasswordActionRequired(obj ForgotPasswordAction) error {
	return nil
}

// AssertForgotPasswordActionConstraints checks if the values respects the defined constraints
func AssertForgotPasswordActionConstraints(obj ForgotPasswordAction) error {
	return nil
}
