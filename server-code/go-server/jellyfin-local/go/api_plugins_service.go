/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// PluginsAPIService is a service that implements the logic for the PluginsAPIServicer
// This service should implement the business logic for every endpoint for the PluginsAPI API.
// Include any external packages or services that will be required by this service.
type PluginsAPIService struct {
}

// NewPluginsAPIService creates a default api service
func NewPluginsAPIService() PluginsAPIServicer {
	return &PluginsAPIService{}
}

// DisablePlugin - Disable a plugin.
func (s *PluginsAPIService) DisablePlugin(ctx context.Context, pluginId string, version Version) (ImplResponse, error) {
	// TODO - update DisablePlugin with the required logic for this service method.
	// Add api_plugins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, ProblemDetails{}) or use other options such as http.Ok ...
	// return Response(404, ProblemDetails{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("DisablePlugin method not implemented")
}

// EnablePlugin - Enables a disabled plugin.
func (s *PluginsAPIService) EnablePlugin(ctx context.Context, pluginId string, version Version) (ImplResponse, error) {
	// TODO - update EnablePlugin with the required logic for this service method.
	// Add api_plugins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, ProblemDetails{}) or use other options such as http.Ok ...
	// return Response(404, ProblemDetails{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("EnablePlugin method not implemented")
}

// GetPluginConfiguration - Gets plugin configuration.
func (s *PluginsAPIService) GetPluginConfiguration(ctx context.Context, pluginId string) (ImplResponse, error) {
	// TODO - update GetPluginConfiguration with the required logic for this service method.
	// Add api_plugins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, map[string]interface{}{}) or use other options such as http.Ok ...
	// return Response(200, map[string]interface{}{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, ProblemDetails{}) or use other options such as http.Ok ...
	// return Response(404, ProblemDetails{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetPluginConfiguration method not implemented")
}

// GetPluginImage - Gets a plugin&#39;s image.
func (s *PluginsAPIService) GetPluginImage(ctx context.Context, pluginId string, version Version) (ImplResponse, error) {
	// TODO - update GetPluginImage with the required logic for this service method.
	// Add api_plugins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, *os.File{}) or use other options such as http.Ok ...
	// return Response(200, *os.File{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, ProblemDetails{}) or use other options such as http.Ok ...
	// return Response(404, ProblemDetails{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetPluginImage method not implemented")
}

// GetPluginManifest - Gets a plugin&#39;s manifest.
func (s *PluginsAPIService) GetPluginManifest(ctx context.Context, pluginId string) (ImplResponse, error) {
	// TODO - update GetPluginManifest with the required logic for this service method.
	// Add api_plugins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, ProblemDetails{}) or use other options such as http.Ok ...
	// return Response(404, ProblemDetails{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetPluginManifest method not implemented")
}

// GetPlugins - Gets a list of currently installed plugins.
func (s *PluginsAPIService) GetPlugins(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetPlugins with the required logic for this service method.
	// Add api_plugins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []PluginInfo{}) or use other options such as http.Ok ...
	// return Response(200, []PluginInfo{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetPlugins method not implemented")
}

// UninstallPlugin - Uninstalls a plugin.
// Deprecated
func (s *PluginsAPIService) UninstallPlugin(ctx context.Context, pluginId string) (ImplResponse, error) {
	// TODO - update UninstallPlugin with the required logic for this service method.
	// Add api_plugins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, ProblemDetails{}) or use other options such as http.Ok ...
	// return Response(404, ProblemDetails{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("UninstallPlugin method not implemented")
}

// UninstallPluginByVersion - Uninstalls a plugin by version.
func (s *PluginsAPIService) UninstallPluginByVersion(ctx context.Context, pluginId string, version Version) (ImplResponse, error) {
	// TODO - update UninstallPluginByVersion with the required logic for this service method.
	// Add api_plugins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, ProblemDetails{}) or use other options such as http.Ok ...
	// return Response(404, ProblemDetails{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("UninstallPluginByVersion method not implemented")
}

// UpdatePluginConfiguration - Updates plugin configuration.
func (s *PluginsAPIService) UpdatePluginConfiguration(ctx context.Context, pluginId string) (ImplResponse, error) {
	// TODO - update UpdatePluginConfiguration with the required logic for this service method.
	// Add api_plugins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, ProblemDetails{}) or use other options such as http.Ok ...
	// return Response(404, ProblemDetails{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdatePluginConfiguration method not implemented")
}

// UpdatePluginSecurityInfo - Updates plugin security info.
// Deprecated
func (s *PluginsAPIService) UpdatePluginSecurityInfo(ctx context.Context, pluginSecurityInfo PluginSecurityInfo) (ImplResponse, error) {
	// TODO - update UpdatePluginSecurityInfo with the required logic for this service method.
	// Add api_plugins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdatePluginSecurityInfo method not implemented")
}
