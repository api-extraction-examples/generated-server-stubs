/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// SubtitleAPIService is a service that implements the logic for the SubtitleAPIServicer
// This service should implement the business logic for every endpoint for the SubtitleAPI API.
// Include any external packages or services that will be required by this service.
type SubtitleAPIService struct {
}

// NewSubtitleAPIService creates a default api service
func NewSubtitleAPIService() SubtitleAPIServicer {
	return &SubtitleAPIService{}
}

// DeleteSubtitle - Deletes an external subtitle file.
func (s *SubtitleAPIService) DeleteSubtitle(ctx context.Context, itemId string, index int32) (ImplResponse, error) {
	// TODO - update DeleteSubtitle with the required logic for this service method.
	// Add api_subtitle_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, ProblemDetails{}) or use other options such as http.Ok ...
	// return Response(404, ProblemDetails{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteSubtitle method not implemented")
}

// DownloadRemoteSubtitles - Downloads a remote subtitle.
func (s *SubtitleAPIService) DownloadRemoteSubtitles(ctx context.Context, itemId string, subtitleId string) (ImplResponse, error) {
	// TODO - update DownloadRemoteSubtitles with the required logic for this service method.
	// Add api_subtitle_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DownloadRemoteSubtitles method not implemented")
}

// GetFallbackFont - Gets a fallback font file.
func (s *SubtitleAPIService) GetFallbackFont(ctx context.Context, name string) (ImplResponse, error) {
	// TODO - update GetFallbackFont with the required logic for this service method.
	// Add api_subtitle_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, *os.File{}) or use other options such as http.Ok ...
	// return Response(200, *os.File{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetFallbackFont method not implemented")
}

// GetFallbackFontList - Gets a list of available fallback font files.
func (s *SubtitleAPIService) GetFallbackFontList(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetFallbackFontList with the required logic for this service method.
	// Add api_subtitle_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []FontFile{}) or use other options such as http.Ok ...
	// return Response(200, []FontFile{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetFallbackFontList method not implemented")
}

// GetRemoteSubtitles - Gets the remote subtitles.
func (s *SubtitleAPIService) GetRemoteSubtitles(ctx context.Context, id string) (ImplResponse, error) {
	// TODO - update GetRemoteSubtitles with the required logic for this service method.
	// Add api_subtitle_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, *os.File{}) or use other options such as http.Ok ...
	// return Response(200, *os.File{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetRemoteSubtitles method not implemented")
}

// GetSubtitle - Gets subtitles in a specified format.
func (s *SubtitleAPIService) GetSubtitle(ctx context.Context, itemId string, mediaSourceId string, index int32, format string, endPositionTicks *int64, copyTimestamps bool, addVttTimeMap bool, startPositionTicks int64) (ImplResponse, error) {
	// TODO - update GetSubtitle with the required logic for this service method.
	// Add api_subtitle_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, *os.File{}) or use other options such as http.Ok ...
	// return Response(200, *os.File{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetSubtitle method not implemented")
}

// GetSubtitlePlaylist - Gets an HLS subtitle playlist.
func (s *SubtitleAPIService) GetSubtitlePlaylist(ctx context.Context, itemId string, index int32, mediaSourceId string, segmentLength int32) (ImplResponse, error) {
	// TODO - update GetSubtitlePlaylist with the required logic for this service method.
	// Add api_subtitle_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, *os.File{}) or use other options such as http.Ok ...
	// return Response(200, *os.File{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetSubtitlePlaylist method not implemented")
}

// GetSubtitleWithTicks - Gets subtitles in a specified format.
func (s *SubtitleAPIService) GetSubtitleWithTicks(ctx context.Context, itemId string, mediaSourceId string, index int32, startPositionTicks int64, format string, endPositionTicks *int64, copyTimestamps bool, addVttTimeMap bool) (ImplResponse, error) {
	// TODO - update GetSubtitleWithTicks with the required logic for this service method.
	// Add api_subtitle_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, *os.File{}) or use other options such as http.Ok ...
	// return Response(200, *os.File{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetSubtitleWithTicks method not implemented")
}

// SearchRemoteSubtitles - Search remote subtitles.
func (s *SubtitleAPIService) SearchRemoteSubtitles(ctx context.Context, itemId string, language string, isPerfectMatch *bool) (ImplResponse, error) {
	// TODO - update SearchRemoteSubtitles with the required logic for this service method.
	// Add api_subtitle_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []RemoteSubtitleInfo{}) or use other options such as http.Ok ...
	// return Response(200, []RemoteSubtitleInfo{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("SearchRemoteSubtitles method not implemented")
}

// UploadSubtitle - Upload an external subtitle file.
func (s *SubtitleAPIService) UploadSubtitle(ctx context.Context, itemId string, uploadSubtitleDto UploadSubtitleDto) (ImplResponse, error) {
	// TODO - update UploadSubtitle with the required logic for this service method.
	// Add api_subtitle_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("UploadSubtitle method not implemented")
}
