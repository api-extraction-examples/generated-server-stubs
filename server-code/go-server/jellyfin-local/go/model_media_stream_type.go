/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"fmt"
)


// MediaStreamType : Enum MediaStreamType.
type MediaStreamType string

// List of MediaStreamType
const (
	AUDIO MediaStreamType = "Audio"
	VIDEO MediaStreamType = "Video"
	SUBTITLE MediaStreamType = "Subtitle"
	EMBEDDED_IMAGE MediaStreamType = "EmbeddedImage"
)

// AllowedMediaStreamTypeEnumValues is all the allowed values of MediaStreamType enum
var AllowedMediaStreamTypeEnumValues = []MediaStreamType{
	"Audio",
	"Video",
	"Subtitle",
	"EmbeddedImage",
}

// validMediaStreamTypeEnumValue provides a map of MediaStreamTypes for fast verification of use input
var validMediaStreamTypeEnumValues = map[MediaStreamType]struct{}{
	"Audio": {},
	"Video": {},
	"Subtitle": {},
	"EmbeddedImage": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MediaStreamType) IsValid() bool {
	_, ok := validMediaStreamTypeEnumValues[v]
	return ok
}

// NewMediaStreamTypeFromValue returns a pointer to a valid MediaStreamType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMediaStreamTypeFromValue(v string) (MediaStreamType, error) {
	ev := MediaStreamType(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for MediaStreamType: valid values are %v", v, AllowedMediaStreamTypeEnumValues)
	}
}



// AssertMediaStreamTypeRequired checks if the required fields are not zero-ed
func AssertMediaStreamTypeRequired(obj MediaStreamType) error {
	return nil
}

// AssertMediaStreamTypeConstraints checks if the values respects the defined constraints
func AssertMediaStreamTypeConstraints(obj MediaStreamType) error {
	return nil
}
