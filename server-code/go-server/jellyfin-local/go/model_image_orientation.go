/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"fmt"
)



type ImageOrientation string

// List of ImageOrientation
const (
	TOP_LEFT ImageOrientation = "TopLeft"
	TOP_RIGHT ImageOrientation = "TopRight"
	BOTTOM_RIGHT ImageOrientation = "BottomRight"
	BOTTOM_LEFT ImageOrientation = "BottomLeft"
	LEFT_TOP ImageOrientation = "LeftTop"
	RIGHT_TOP ImageOrientation = "RightTop"
	RIGHT_BOTTOM ImageOrientation = "RightBottom"
	LEFT_BOTTOM ImageOrientation = "LeftBottom"
)

// AllowedImageOrientationEnumValues is all the allowed values of ImageOrientation enum
var AllowedImageOrientationEnumValues = []ImageOrientation{
	"TopLeft",
	"TopRight",
	"BottomRight",
	"BottomLeft",
	"LeftTop",
	"RightTop",
	"RightBottom",
	"LeftBottom",
}

// validImageOrientationEnumValue provides a map of ImageOrientations for fast verification of use input
var validImageOrientationEnumValues = map[ImageOrientation]struct{}{
	"TopLeft": {},
	"TopRight": {},
	"BottomRight": {},
	"BottomLeft": {},
	"LeftTop": {},
	"RightTop": {},
	"RightBottom": {},
	"LeftBottom": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ImageOrientation) IsValid() bool {
	_, ok := validImageOrientationEnumValues[v]
	return ok
}

// NewImageOrientationFromValue returns a pointer to a valid ImageOrientation
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewImageOrientationFromValue(v string) (ImageOrientation, error) {
	ev := ImageOrientation(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for ImageOrientation: valid values are %v", v, AllowedImageOrientationEnumValues)
	}
}



// AssertImageOrientationRequired checks if the required fields are not zero-ed
func AssertImageOrientationRequired(obj ImageOrientation) error {
	return nil
}

// AssertImageOrientationConstraints checks if the values respects the defined constraints
func AssertImageOrientationConstraints(obj ImageOrientation) error {
	return nil
}
