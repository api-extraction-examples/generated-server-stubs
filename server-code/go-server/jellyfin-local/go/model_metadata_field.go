/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"fmt"
)


// MetadataField : Enum MetadataFields.
type MetadataField string

// List of MetadataField
const (
	CAST MetadataField = "Cast"
	GENRES MetadataField = "Genres"
	PRODUCTION_LOCATIONS MetadataField = "ProductionLocations"
	STUDIOS MetadataField = "Studios"
	TAGS MetadataField = "Tags"
	NAME MetadataField = "Name"
	OVERVIEW MetadataField = "Overview"
	RUNTIME MetadataField = "Runtime"
	OFFICIAL_RATING MetadataField = "OfficialRating"
)

// AllowedMetadataFieldEnumValues is all the allowed values of MetadataField enum
var AllowedMetadataFieldEnumValues = []MetadataField{
	"Cast",
	"Genres",
	"ProductionLocations",
	"Studios",
	"Tags",
	"Name",
	"Overview",
	"Runtime",
	"OfficialRating",
}

// validMetadataFieldEnumValue provides a map of MetadataFields for fast verification of use input
var validMetadataFieldEnumValues = map[MetadataField]struct{}{
	"Cast": {},
	"Genres": {},
	"ProductionLocations": {},
	"Studios": {},
	"Tags": {},
	"Name": {},
	"Overview": {},
	"Runtime": {},
	"OfficialRating": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MetadataField) IsValid() bool {
	_, ok := validMetadataFieldEnumValues[v]
	return ok
}

// NewMetadataFieldFromValue returns a pointer to a valid MetadataField
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMetadataFieldFromValue(v string) (MetadataField, error) {
	ev := MetadataField(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for MetadataField: valid values are %v", v, AllowedMetadataFieldEnumValues)
	}
}



// AssertMetadataFieldRequired checks if the required fields are not zero-ed
func AssertMetadataFieldRequired(obj MetadataField) error {
	return nil
}

// AssertMetadataFieldConstraints checks if the values respects the defined constraints
func AssertMetadataFieldConstraints(obj MetadataField) error {
	return nil
}
