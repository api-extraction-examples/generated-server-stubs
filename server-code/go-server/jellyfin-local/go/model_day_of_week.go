/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"fmt"
)



type DayOfWeek string

// List of DayOfWeek
const (
	SUNDAY DayOfWeek = "Sunday"
	MONDAY DayOfWeek = "Monday"
	TUESDAY DayOfWeek = "Tuesday"
	WEDNESDAY DayOfWeek = "Wednesday"
	THURSDAY DayOfWeek = "Thursday"
	FRIDAY DayOfWeek = "Friday"
	SATURDAY DayOfWeek = "Saturday"
)

// AllowedDayOfWeekEnumValues is all the allowed values of DayOfWeek enum
var AllowedDayOfWeekEnumValues = []DayOfWeek{
	"Sunday",
	"Monday",
	"Tuesday",
	"Wednesday",
	"Thursday",
	"Friday",
	"Saturday",
}

// validDayOfWeekEnumValue provides a map of DayOfWeeks for fast verification of use input
var validDayOfWeekEnumValues = map[DayOfWeek]struct{}{
	"Sunday": {},
	"Monday": {},
	"Tuesday": {},
	"Wednesday": {},
	"Thursday": {},
	"Friday": {},
	"Saturday": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DayOfWeek) IsValid() bool {
	_, ok := validDayOfWeekEnumValues[v]
	return ok
}

// NewDayOfWeekFromValue returns a pointer to a valid DayOfWeek
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDayOfWeekFromValue(v string) (DayOfWeek, error) {
	ev := DayOfWeek(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for DayOfWeek: valid values are %v", v, AllowedDayOfWeekEnumValues)
	}
}



// AssertDayOfWeekRequired checks if the required fields are not zero-ed
func AssertDayOfWeekRequired(obj DayOfWeek) error {
	return nil
}

// AssertDayOfWeekConstraints checks if the values respects the defined constraints
func AssertDayOfWeekConstraints(obj DayOfWeek) error {
	return nil
}
