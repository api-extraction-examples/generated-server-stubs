/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"fmt"
)



type TransportStreamTimestamp string

// List of TransportStreamTimestamp
const (
	NONE TransportStreamTimestamp = "None"
	ZERO TransportStreamTimestamp = "Zero"
	VALID TransportStreamTimestamp = "Valid"
)

// AllowedTransportStreamTimestampEnumValues is all the allowed values of TransportStreamTimestamp enum
var AllowedTransportStreamTimestampEnumValues = []TransportStreamTimestamp{
	"None",
	"Zero",
	"Valid",
}

// validTransportStreamTimestampEnumValue provides a map of TransportStreamTimestamps for fast verification of use input
var validTransportStreamTimestampEnumValues = map[TransportStreamTimestamp]struct{}{
	"None": {},
	"Zero": {},
	"Valid": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v TransportStreamTimestamp) IsValid() bool {
	_, ok := validTransportStreamTimestampEnumValues[v]
	return ok
}

// NewTransportStreamTimestampFromValue returns a pointer to a valid TransportStreamTimestamp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewTransportStreamTimestampFromValue(v string) (TransportStreamTimestamp, error) {
	ev := TransportStreamTimestamp(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for TransportStreamTimestamp: valid values are %v", v, AllowedTransportStreamTimestampEnumValues)
	}
}



// AssertTransportStreamTimestampRequired checks if the required fields are not zero-ed
func AssertTransportStreamTimestampRequired(obj TransportStreamTimestamp) error {
	return nil
}

// AssertTransportStreamTimestampConstraints checks if the values respects the defined constraints
func AssertTransportStreamTimestampConstraints(obj TransportStreamTimestamp) error {
	return nil
}
