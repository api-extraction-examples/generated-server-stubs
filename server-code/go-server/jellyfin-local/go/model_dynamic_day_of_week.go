/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"fmt"
)


// DynamicDayOfWeek : An enum that represents a day of the week, weekdays, weekends, or all days.
type DynamicDayOfWeek string

// List of DynamicDayOfWeek
const (
	SUNDAY DynamicDayOfWeek = "Sunday"
	MONDAY DynamicDayOfWeek = "Monday"
	TUESDAY DynamicDayOfWeek = "Tuesday"
	WEDNESDAY DynamicDayOfWeek = "Wednesday"
	THURSDAY DynamicDayOfWeek = "Thursday"
	FRIDAY DynamicDayOfWeek = "Friday"
	SATURDAY DynamicDayOfWeek = "Saturday"
	EVERYDAY DynamicDayOfWeek = "Everyday"
	WEEKDAY DynamicDayOfWeek = "Weekday"
	WEEKEND DynamicDayOfWeek = "Weekend"
)

// AllowedDynamicDayOfWeekEnumValues is all the allowed values of DynamicDayOfWeek enum
var AllowedDynamicDayOfWeekEnumValues = []DynamicDayOfWeek{
	"Sunday",
	"Monday",
	"Tuesday",
	"Wednesday",
	"Thursday",
	"Friday",
	"Saturday",
	"Everyday",
	"Weekday",
	"Weekend",
}

// validDynamicDayOfWeekEnumValue provides a map of DynamicDayOfWeeks for fast verification of use input
var validDynamicDayOfWeekEnumValues = map[DynamicDayOfWeek]struct{}{
	"Sunday": {},
	"Monday": {},
	"Tuesday": {},
	"Wednesday": {},
	"Thursday": {},
	"Friday": {},
	"Saturday": {},
	"Everyday": {},
	"Weekday": {},
	"Weekend": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DynamicDayOfWeek) IsValid() bool {
	_, ok := validDynamicDayOfWeekEnumValues[v]
	return ok
}

// NewDynamicDayOfWeekFromValue returns a pointer to a valid DynamicDayOfWeek
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDynamicDayOfWeekFromValue(v string) (DynamicDayOfWeek, error) {
	ev := DynamicDayOfWeek(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for DynamicDayOfWeek: valid values are %v", v, AllowedDynamicDayOfWeekEnumValues)
	}
}



// AssertDynamicDayOfWeekRequired checks if the required fields are not zero-ed
func AssertDynamicDayOfWeekRequired(obj DynamicDayOfWeek) error {
	return nil
}

// AssertDynamicDayOfWeekConstraints checks if the values respects the defined constraints
func AssertDynamicDayOfWeekConstraints(obj DynamicDayOfWeek) error {
	return nil
}
