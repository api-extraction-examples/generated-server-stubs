/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"fmt"
)


// ConfigurationPageType : Enum ConfigurationPageType.
type ConfigurationPageType string

// List of ConfigurationPageType
const (
	PLUGIN_CONFIGURATION ConfigurationPageType = "PluginConfiguration"
	NONE ConfigurationPageType = "None"
)

// AllowedConfigurationPageTypeEnumValues is all the allowed values of ConfigurationPageType enum
var AllowedConfigurationPageTypeEnumValues = []ConfigurationPageType{
	"PluginConfiguration",
	"None",
}

// validConfigurationPageTypeEnumValue provides a map of ConfigurationPageTypes for fast verification of use input
var validConfigurationPageTypeEnumValues = map[ConfigurationPageType]struct{}{
	"PluginConfiguration": {},
	"None": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ConfigurationPageType) IsValid() bool {
	_, ok := validConfigurationPageTypeEnumValues[v]
	return ok
}

// NewConfigurationPageTypeFromValue returns a pointer to a valid ConfigurationPageType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewConfigurationPageTypeFromValue(v string) (ConfigurationPageType, error) {
	ev := ConfigurationPageType(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for ConfigurationPageType: valid values are %v", v, AllowedConfigurationPageTypeEnumValues)
	}
}



// AssertConfigurationPageTypeRequired checks if the required fields are not zero-ed
func AssertConfigurationPageTypeRequired(obj ConfigurationPageType) error {
	return nil
}

// AssertConfigurationPageTypeConstraints checks if the values respects the defined constraints
func AssertConfigurationPageTypeConstraints(obj ConfigurationPageType) error {
	return nil
}
