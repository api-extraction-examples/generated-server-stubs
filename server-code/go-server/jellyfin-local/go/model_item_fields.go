/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"fmt"
)


// ItemFields : Used to control the data that gets attached to DtoBaseItems.
type ItemFields string

// List of ItemFields
const (
	AIR_TIME ItemFields = "AirTime"
	CAN_DELETE ItemFields = "CanDelete"
	CAN_DOWNLOAD ItemFields = "CanDownload"
	CHANNEL_INFO ItemFields = "ChannelInfo"
	CHAPTERS ItemFields = "Chapters"
	CHILD_COUNT ItemFields = "ChildCount"
	CUMULATIVE_RUN_TIME_TICKS ItemFields = "CumulativeRunTimeTicks"
	CUSTOM_RATING ItemFields = "CustomRating"
	DATE_CREATED ItemFields = "DateCreated"
	DATE_LAST_MEDIA_ADDED ItemFields = "DateLastMediaAdded"
	DISPLAY_PREFERENCES_ID ItemFields = "DisplayPreferencesId"
	ETAG ItemFields = "Etag"
	EXTERNAL_URLS ItemFields = "ExternalUrls"
	GENRES ItemFields = "Genres"
	HOME_PAGE_URL ItemFields = "HomePageUrl"
	ITEM_COUNTS ItemFields = "ItemCounts"
	MEDIA_SOURCE_COUNT ItemFields = "MediaSourceCount"
	MEDIA_SOURCES ItemFields = "MediaSources"
	ORIGINAL_TITLE ItemFields = "OriginalTitle"
	OVERVIEW ItemFields = "Overview"
	PARENT_ID ItemFields = "ParentId"
	PATH ItemFields = "Path"
	PEOPLE ItemFields = "People"
	PLAY_ACCESS ItemFields = "PlayAccess"
	PRODUCTION_LOCATIONS ItemFields = "ProductionLocations"
	PROVIDER_IDS ItemFields = "ProviderIds"
	PRIMARY_IMAGE_ASPECT_RATIO ItemFields = "PrimaryImageAspectRatio"
	RECURSIVE_ITEM_COUNT ItemFields = "RecursiveItemCount"
	SETTINGS ItemFields = "Settings"
	SCREENSHOT_IMAGE_TAGS ItemFields = "ScreenshotImageTags"
	SERIES_PRIMARY_IMAGE ItemFields = "SeriesPrimaryImage"
	SERIES_STUDIO ItemFields = "SeriesStudio"
	SORT_NAME ItemFields = "SortName"
	SPECIAL_EPISODE_NUMBERS ItemFields = "SpecialEpisodeNumbers"
	STUDIOS ItemFields = "Studios"
	BASIC_SYNC_INFO ItemFields = "BasicSyncInfo"
	SYNC_INFO ItemFields = "SyncInfo"
	TAGLINES ItemFields = "Taglines"
	TAGS ItemFields = "Tags"
	REMOTE_TRAILERS ItemFields = "RemoteTrailers"
	MEDIA_STREAMS ItemFields = "MediaStreams"
	SEASON_USER_DATA ItemFields = "SeasonUserData"
	SERVICE_NAME ItemFields = "ServiceName"
	THEME_SONG_IDS ItemFields = "ThemeSongIds"
	THEME_VIDEO_IDS ItemFields = "ThemeVideoIds"
	EXTERNAL_ETAG ItemFields = "ExternalEtag"
	PRESENTATION_UNIQUE_KEY ItemFields = "PresentationUniqueKey"
	INHERITED_PARENTAL_RATING_VALUE ItemFields = "InheritedParentalRatingValue"
	EXTERNAL_SERIES_ID ItemFields = "ExternalSeriesId"
	SERIES_PRESENTATION_UNIQUE_KEY ItemFields = "SeriesPresentationUniqueKey"
	DATE_LAST_REFRESHED ItemFields = "DateLastRefreshed"
	DATE_LAST_SAVED ItemFields = "DateLastSaved"
	REFRESH_STATE ItemFields = "RefreshState"
	CHANNEL_IMAGE ItemFields = "ChannelImage"
	ENABLE_MEDIA_SOURCE_DISPLAY ItemFields = "EnableMediaSourceDisplay"
	WIDTH ItemFields = "Width"
	HEIGHT ItemFields = "Height"
	EXTRA_IDS ItemFields = "ExtraIds"
	LOCAL_TRAILER_COUNT ItemFields = "LocalTrailerCount"
	IS_HD ItemFields = "IsHD"
	SPECIAL_FEATURE_COUNT ItemFields = "SpecialFeatureCount"
)

// AllowedItemFieldsEnumValues is all the allowed values of ItemFields enum
var AllowedItemFieldsEnumValues = []ItemFields{
	"AirTime",
	"CanDelete",
	"CanDownload",
	"ChannelInfo",
	"Chapters",
	"ChildCount",
	"CumulativeRunTimeTicks",
	"CustomRating",
	"DateCreated",
	"DateLastMediaAdded",
	"DisplayPreferencesId",
	"Etag",
	"ExternalUrls",
	"Genres",
	"HomePageUrl",
	"ItemCounts",
	"MediaSourceCount",
	"MediaSources",
	"OriginalTitle",
	"Overview",
	"ParentId",
	"Path",
	"People",
	"PlayAccess",
	"ProductionLocations",
	"ProviderIds",
	"PrimaryImageAspectRatio",
	"RecursiveItemCount",
	"Settings",
	"ScreenshotImageTags",
	"SeriesPrimaryImage",
	"SeriesStudio",
	"SortName",
	"SpecialEpisodeNumbers",
	"Studios",
	"BasicSyncInfo",
	"SyncInfo",
	"Taglines",
	"Tags",
	"RemoteTrailers",
	"MediaStreams",
	"SeasonUserData",
	"ServiceName",
	"ThemeSongIds",
	"ThemeVideoIds",
	"ExternalEtag",
	"PresentationUniqueKey",
	"InheritedParentalRatingValue",
	"ExternalSeriesId",
	"SeriesPresentationUniqueKey",
	"DateLastRefreshed",
	"DateLastSaved",
	"RefreshState",
	"ChannelImage",
	"EnableMediaSourceDisplay",
	"Width",
	"Height",
	"ExtraIds",
	"LocalTrailerCount",
	"IsHD",
	"SpecialFeatureCount",
}

// validItemFieldsEnumValue provides a map of ItemFieldss for fast verification of use input
var validItemFieldsEnumValues = map[ItemFields]struct{}{
	"AirTime": {},
	"CanDelete": {},
	"CanDownload": {},
	"ChannelInfo": {},
	"Chapters": {},
	"ChildCount": {},
	"CumulativeRunTimeTicks": {},
	"CustomRating": {},
	"DateCreated": {},
	"DateLastMediaAdded": {},
	"DisplayPreferencesId": {},
	"Etag": {},
	"ExternalUrls": {},
	"Genres": {},
	"HomePageUrl": {},
	"ItemCounts": {},
	"MediaSourceCount": {},
	"MediaSources": {},
	"OriginalTitle": {},
	"Overview": {},
	"ParentId": {},
	"Path": {},
	"People": {},
	"PlayAccess": {},
	"ProductionLocations": {},
	"ProviderIds": {},
	"PrimaryImageAspectRatio": {},
	"RecursiveItemCount": {},
	"Settings": {},
	"ScreenshotImageTags": {},
	"SeriesPrimaryImage": {},
	"SeriesStudio": {},
	"SortName": {},
	"SpecialEpisodeNumbers": {},
	"Studios": {},
	"BasicSyncInfo": {},
	"SyncInfo": {},
	"Taglines": {},
	"Tags": {},
	"RemoteTrailers": {},
	"MediaStreams": {},
	"SeasonUserData": {},
	"ServiceName": {},
	"ThemeSongIds": {},
	"ThemeVideoIds": {},
	"ExternalEtag": {},
	"PresentationUniqueKey": {},
	"InheritedParentalRatingValue": {},
	"ExternalSeriesId": {},
	"SeriesPresentationUniqueKey": {},
	"DateLastRefreshed": {},
	"DateLastSaved": {},
	"RefreshState": {},
	"ChannelImage": {},
	"EnableMediaSourceDisplay": {},
	"Width": {},
	"Height": {},
	"ExtraIds": {},
	"LocalTrailerCount": {},
	"IsHD": {},
	"SpecialFeatureCount": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ItemFields) IsValid() bool {
	_, ok := validItemFieldsEnumValues[v]
	return ok
}

// NewItemFieldsFromValue returns a pointer to a valid ItemFields
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewItemFieldsFromValue(v string) (ItemFields, error) {
	ev := ItemFields(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for ItemFields: valid values are %v", v, AllowedItemFieldsEnumValues)
	}
}



// AssertItemFieldsRequired checks if the required fields are not zero-ed
func AssertItemFieldsRequired(obj ItemFields) error {
	return nil
}

// AssertItemFieldsConstraints checks if the values respects the defined constraints
func AssertItemFieldsConstraints(obj ItemFields) error {
	return nil
}
