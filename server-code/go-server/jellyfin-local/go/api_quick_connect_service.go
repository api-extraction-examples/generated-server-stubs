/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// QuickConnectAPIService is a service that implements the logic for the QuickConnectAPIServicer
// This service should implement the business logic for every endpoint for the QuickConnectAPI API.
// Include any external packages or services that will be required by this service.
type QuickConnectAPIService struct {
}

// NewQuickConnectAPIService creates a default api service
func NewQuickConnectAPIService() QuickConnectAPIServicer {
	return &QuickConnectAPIService{}
}

// Activate - Temporarily activates quick connect for five minutes.
func (s *QuickConnectAPIService) Activate(ctx context.Context) (ImplResponse, error) {
	// TODO - update Activate with the required logic for this service method.
	// Add api_quick_connect_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, ProblemDetails{}) or use other options such as http.Ok ...
	// return Response(403, ProblemDetails{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("Activate method not implemented")
}

// Authorize - Authorizes a pending quick connect request.
func (s *QuickConnectAPIService) Authorize(ctx context.Context, code string) (ImplResponse, error) {
	// TODO - update Authorize with the required logic for this service method.
	// Add api_quick_connect_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, bool{}) or use other options such as http.Ok ...
	// return Response(200, bool{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, ProblemDetails{}) or use other options such as http.Ok ...
	// return Response(403, ProblemDetails{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("Authorize method not implemented")
}

// Available - Enables or disables quick connect.
func (s *QuickConnectAPIService) Available(ctx context.Context, status QuickConnectState) (ImplResponse, error) {
	// TODO - update Available with the required logic for this service method.
	// Add api_quick_connect_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("Available method not implemented")
}

// Connect - Attempts to retrieve authentication information.
func (s *QuickConnectAPIService) Connect(ctx context.Context, secret string) (ImplResponse, error) {
	// TODO - update Connect with the required logic for this service method.
	// Add api_quick_connect_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, QuickConnectResult{}) or use other options such as http.Ok ...
	// return Response(200, QuickConnectResult{}), nil

	// TODO: Uncomment the next line to return response Response(404, ProblemDetails{}) or use other options such as http.Ok ...
	// return Response(404, ProblemDetails{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("Connect method not implemented")
}

// Deauthorize - Deauthorize all quick connect devices for the current user.
func (s *QuickConnectAPIService) Deauthorize(ctx context.Context) (ImplResponse, error) {
	// TODO - update Deauthorize with the required logic for this service method.
	// Add api_quick_connect_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, int32{}) or use other options such as http.Ok ...
	// return Response(200, int32{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("Deauthorize method not implemented")
}

// GetStatus - Gets the current quick connect state.
func (s *QuickConnectAPIService) GetStatus(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetStatus with the required logic for this service method.
	// Add api_quick_connect_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, QuickConnectState{}) or use other options such as http.Ok ...
	// return Response(200, QuickConnectState{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetStatus method not implemented")
}

// Initiate - Initiate a new quick connect request.
func (s *QuickConnectAPIService) Initiate(ctx context.Context) (ImplResponse, error) {
	// TODO - update Initiate with the required logic for this service method.
	// Add api_quick_connect_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, QuickConnectResult{}) or use other options such as http.Ok ...
	// return Response(200, QuickConnectResult{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("Initiate method not implemented")
}
