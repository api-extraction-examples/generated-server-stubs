/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"fmt"
)


// ScrollDirection : An enum representing the axis that should be scrolled.
type ScrollDirection string

// List of ScrollDirection
const (
	HORIZONTAL ScrollDirection = "Horizontal"
	VERTICAL ScrollDirection = "Vertical"
)

// AllowedScrollDirectionEnumValues is all the allowed values of ScrollDirection enum
var AllowedScrollDirectionEnumValues = []ScrollDirection{
	"Horizontal",
	"Vertical",
}

// validScrollDirectionEnumValue provides a map of ScrollDirections for fast verification of use input
var validScrollDirectionEnumValues = map[ScrollDirection]struct{}{
	"Horizontal": {},
	"Vertical": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ScrollDirection) IsValid() bool {
	_, ok := validScrollDirectionEnumValues[v]
	return ok
}

// NewScrollDirectionFromValue returns a pointer to a valid ScrollDirection
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewScrollDirectionFromValue(v string) (ScrollDirection, error) {
	ev := ScrollDirection(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for ScrollDirection: valid values are %v", v, AllowedScrollDirectionEnumValues)
	}
}



// AssertScrollDirectionRequired checks if the required fields are not zero-ed
func AssertScrollDirectionRequired(obj ScrollDirection) error {
	return nil
}

// AssertScrollDirectionConstraints checks if the values respects the defined constraints
func AssertScrollDirectionConstraints(obj ScrollDirection) error {
	return nil
}
