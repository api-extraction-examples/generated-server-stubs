/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
	"reflect"
)

// UniversalAudioAPIService is a service that implements the logic for the UniversalAudioAPIServicer
// This service should implement the business logic for every endpoint for the UniversalAudioAPI API.
// Include any external packages or services that will be required by this service.
type UniversalAudioAPIService struct {
}

// NewUniversalAudioAPIService creates a default api service
func NewUniversalAudioAPIService() UniversalAudioAPIServicer {
	return &UniversalAudioAPIService{}
}

// GetUniversalAudioStream - Gets an audio stream.
func (s *UniversalAudioAPIService) GetUniversalAudioStream(ctx context.Context, itemId string, container *[]string, mediaSourceId *string, deviceId *string, userId *string, audioCodec *string, maxAudioChannels *int32, transcodingAudioChannels *int32, maxStreamingBitrate *int32, audioBitRate *int32, startTimeTicks *int64, transcodingContainer *string, transcodingProtocol *string, maxAudioSampleRate *int32, maxAudioBitDepth *int32, enableRemoteMedia *bool, breakOnNonKeyFrames bool, enableRedirection bool) (ImplResponse, error) {
	// TODO - update GetUniversalAudioStream with the required logic for this service method.
	// Add api_universal_audio_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, *os.File{}) or use other options such as http.Ok ...
	// return Response(200, *os.File{}), nil

	// TODO: Uncomment the next line to return response Response(302, {}) or use other options such as http.Ok ...
	// return Response(302, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetUniversalAudioStream method not implemented")
}

// HeadUniversalAudioStream - Gets an audio stream.
func (s *UniversalAudioAPIService) HeadUniversalAudioStream(ctx context.Context, itemId string, container *[]string, mediaSourceId *string, deviceId *string, userId *string, audioCodec *string, maxAudioChannels *int32, transcodingAudioChannels *int32, maxStreamingBitrate *int32, audioBitRate *int32, startTimeTicks *int64, transcodingContainer *string, transcodingProtocol *string, maxAudioSampleRate *int32, maxAudioBitDepth *int32, enableRemoteMedia *bool, breakOnNonKeyFrames bool, enableRedirection bool) (ImplResponse, error) {
	// TODO - update HeadUniversalAudioStream with the required logic for this service method.
	// Add api_universal_audio_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, *os.File{}) or use other options such as http.Ok ...
	// return Response(200, *os.File{}), nil

	// TODO: Uncomment the next line to return response Response(302, {}) or use other options such as http.Ok ...
	// return Response(302, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("HeadUniversalAudioStream method not implemented")
}
