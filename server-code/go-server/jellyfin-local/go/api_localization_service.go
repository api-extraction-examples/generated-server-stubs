/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// LocalizationAPIService is a service that implements the logic for the LocalizationAPIServicer
// This service should implement the business logic for every endpoint for the LocalizationAPI API.
// Include any external packages or services that will be required by this service.
type LocalizationAPIService struct {
}

// NewLocalizationAPIService creates a default api service
func NewLocalizationAPIService() LocalizationAPIServicer {
	return &LocalizationAPIService{}
}

// GetCountries - Gets known countries.
func (s *LocalizationAPIService) GetCountries(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetCountries with the required logic for this service method.
	// Add api_localization_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []CountryInfo{}) or use other options such as http.Ok ...
	// return Response(200, []CountryInfo{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetCountries method not implemented")
}

// GetCultures - Gets known cultures.
func (s *LocalizationAPIService) GetCultures(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetCultures with the required logic for this service method.
	// Add api_localization_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []CultureDto{}) or use other options such as http.Ok ...
	// return Response(200, []CultureDto{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetCultures method not implemented")
}

// GetLocalizationOptions - Gets localization options.
func (s *LocalizationAPIService) GetLocalizationOptions(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetLocalizationOptions with the required logic for this service method.
	// Add api_localization_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []LocalizationOption{}) or use other options such as http.Ok ...
	// return Response(200, []LocalizationOption{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetLocalizationOptions method not implemented")
}

// GetParentalRatings - Gets known parental ratings.
func (s *LocalizationAPIService) GetParentalRatings(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetParentalRatings with the required logic for this service method.
	// Add api_localization_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []ParentalRating{}) or use other options such as http.Ok ...
	// return Response(200, []ParentalRating{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetParentalRatings method not implemented")
}
