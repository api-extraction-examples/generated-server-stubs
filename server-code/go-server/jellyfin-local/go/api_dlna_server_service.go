/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// DlnaServerAPIService is a service that implements the logic for the DlnaServerAPIServicer
// This service should implement the business logic for every endpoint for the DlnaServerAPI API.
// Include any external packages or services that will be required by this service.
type DlnaServerAPIService struct {
}

// NewDlnaServerAPIService creates a default api service
func NewDlnaServerAPIService() DlnaServerAPIServicer {
	return &DlnaServerAPIService{}
}

// GetConnectionManager - Gets Dlna media receiver registrar xml.
func (s *DlnaServerAPIService) GetConnectionManager(ctx context.Context, serverId string) (ImplResponse, error) {
	// TODO - update GetConnectionManager with the required logic for this service method.
	// Add api_dlna_server_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, *os.File{}) or use other options such as http.Ok ...
	// return Response(200, *os.File{}), nil

	// TODO: Uncomment the next line to return response Response(503, {}) or use other options such as http.Ok ...
	// return Response(503, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetConnectionManager method not implemented")
}

// GetConnectionManager2 - Gets Dlna media receiver registrar xml.
func (s *DlnaServerAPIService) GetConnectionManager2(ctx context.Context, serverId string) (ImplResponse, error) {
	// TODO - update GetConnectionManager2 with the required logic for this service method.
	// Add api_dlna_server_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, *os.File{}) or use other options such as http.Ok ...
	// return Response(200, *os.File{}), nil

	// TODO: Uncomment the next line to return response Response(503, {}) or use other options such as http.Ok ...
	// return Response(503, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetConnectionManager2 method not implemented")
}

// GetConnectionManager3 - Gets Dlna media receiver registrar xml.
func (s *DlnaServerAPIService) GetConnectionManager3(ctx context.Context, serverId string) (ImplResponse, error) {
	// TODO - update GetConnectionManager3 with the required logic for this service method.
	// Add api_dlna_server_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, *os.File{}) or use other options such as http.Ok ...
	// return Response(200, *os.File{}), nil

	// TODO: Uncomment the next line to return response Response(503, {}) or use other options such as http.Ok ...
	// return Response(503, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetConnectionManager3 method not implemented")
}

// GetContentDirectory - Gets Dlna content directory xml.
func (s *DlnaServerAPIService) GetContentDirectory(ctx context.Context, serverId string) (ImplResponse, error) {
	// TODO - update GetContentDirectory with the required logic for this service method.
	// Add api_dlna_server_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, *os.File{}) or use other options such as http.Ok ...
	// return Response(200, *os.File{}), nil

	// TODO: Uncomment the next line to return response Response(503, {}) or use other options such as http.Ok ...
	// return Response(503, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetContentDirectory method not implemented")
}

// GetContentDirectory2 - Gets Dlna content directory xml.
func (s *DlnaServerAPIService) GetContentDirectory2(ctx context.Context, serverId string) (ImplResponse, error) {
	// TODO - update GetContentDirectory2 with the required logic for this service method.
	// Add api_dlna_server_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, *os.File{}) or use other options such as http.Ok ...
	// return Response(200, *os.File{}), nil

	// TODO: Uncomment the next line to return response Response(503, {}) or use other options such as http.Ok ...
	// return Response(503, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetContentDirectory2 method not implemented")
}

// GetContentDirectory3 - Gets Dlna content directory xml.
func (s *DlnaServerAPIService) GetContentDirectory3(ctx context.Context, serverId string) (ImplResponse, error) {
	// TODO - update GetContentDirectory3 with the required logic for this service method.
	// Add api_dlna_server_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, *os.File{}) or use other options such as http.Ok ...
	// return Response(200, *os.File{}), nil

	// TODO: Uncomment the next line to return response Response(503, {}) or use other options such as http.Ok ...
	// return Response(503, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetContentDirectory3 method not implemented")
}

// GetDescriptionXml - Get Description Xml.
func (s *DlnaServerAPIService) GetDescriptionXml(ctx context.Context, serverId string) (ImplResponse, error) {
	// TODO - update GetDescriptionXml with the required logic for this service method.
	// Add api_dlna_server_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, *os.File{}) or use other options such as http.Ok ...
	// return Response(200, *os.File{}), nil

	// TODO: Uncomment the next line to return response Response(503, {}) or use other options such as http.Ok ...
	// return Response(503, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetDescriptionXml method not implemented")
}

// GetDescriptionXml2 - Get Description Xml.
func (s *DlnaServerAPIService) GetDescriptionXml2(ctx context.Context, serverId string) (ImplResponse, error) {
	// TODO - update GetDescriptionXml2 with the required logic for this service method.
	// Add api_dlna_server_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, *os.File{}) or use other options such as http.Ok ...
	// return Response(200, *os.File{}), nil

	// TODO: Uncomment the next line to return response Response(503, {}) or use other options such as http.Ok ...
	// return Response(503, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetDescriptionXml2 method not implemented")
}

// GetIcon - Gets a server icon.
func (s *DlnaServerAPIService) GetIcon(ctx context.Context, fileName string) (ImplResponse, error) {
	// TODO - update GetIcon with the required logic for this service method.
	// Add api_dlna_server_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, *os.File{}) or use other options such as http.Ok ...
	// return Response(200, *os.File{}), nil

	// TODO: Uncomment the next line to return response Response(404, ProblemDetails{}) or use other options such as http.Ok ...
	// return Response(404, ProblemDetails{}), nil

	// TODO: Uncomment the next line to return response Response(503, {}) or use other options such as http.Ok ...
	// return Response(503, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetIcon method not implemented")
}

// GetIconId - Gets a server icon.
func (s *DlnaServerAPIService) GetIconId(ctx context.Context, serverId string, fileName string) (ImplResponse, error) {
	// TODO - update GetIconId with the required logic for this service method.
	// Add api_dlna_server_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, *os.File{}) or use other options such as http.Ok ...
	// return Response(200, *os.File{}), nil

	// TODO: Uncomment the next line to return response Response(404, ProblemDetails{}) or use other options such as http.Ok ...
	// return Response(404, ProblemDetails{}), nil

	// TODO: Uncomment the next line to return response Response(503, {}) or use other options such as http.Ok ...
	// return Response(503, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetIconId method not implemented")
}

// GetMediaReceiverRegistrar - Gets Dlna media receiver registrar xml.
func (s *DlnaServerAPIService) GetMediaReceiverRegistrar(ctx context.Context, serverId string) (ImplResponse, error) {
	// TODO - update GetMediaReceiverRegistrar with the required logic for this service method.
	// Add api_dlna_server_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, *os.File{}) or use other options such as http.Ok ...
	// return Response(200, *os.File{}), nil

	// TODO: Uncomment the next line to return response Response(503, {}) or use other options such as http.Ok ...
	// return Response(503, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetMediaReceiverRegistrar method not implemented")
}

// GetMediaReceiverRegistrar2 - Gets Dlna media receiver registrar xml.
func (s *DlnaServerAPIService) GetMediaReceiverRegistrar2(ctx context.Context, serverId string) (ImplResponse, error) {
	// TODO - update GetMediaReceiverRegistrar2 with the required logic for this service method.
	// Add api_dlna_server_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, *os.File{}) or use other options such as http.Ok ...
	// return Response(200, *os.File{}), nil

	// TODO: Uncomment the next line to return response Response(503, {}) or use other options such as http.Ok ...
	// return Response(503, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetMediaReceiverRegistrar2 method not implemented")
}

// GetMediaReceiverRegistrar3 - Gets Dlna media receiver registrar xml.
func (s *DlnaServerAPIService) GetMediaReceiverRegistrar3(ctx context.Context, serverId string) (ImplResponse, error) {
	// TODO - update GetMediaReceiverRegistrar3 with the required logic for this service method.
	// Add api_dlna_server_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, *os.File{}) or use other options such as http.Ok ...
	// return Response(200, *os.File{}), nil

	// TODO: Uncomment the next line to return response Response(503, {}) or use other options such as http.Ok ...
	// return Response(503, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetMediaReceiverRegistrar3 method not implemented")
}

// ProcessConnectionManagerControlRequest - Process a connection manager control request.
func (s *DlnaServerAPIService) ProcessConnectionManagerControlRequest(ctx context.Context, serverId string) (ImplResponse, error) {
	// TODO - update ProcessConnectionManagerControlRequest with the required logic for this service method.
	// Add api_dlna_server_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, *os.File{}) or use other options such as http.Ok ...
	// return Response(200, *os.File{}), nil

	// TODO: Uncomment the next line to return response Response(503, {}) or use other options such as http.Ok ...
	// return Response(503, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("ProcessConnectionManagerControlRequest method not implemented")
}

// ProcessContentDirectoryControlRequest - Process a content directory control request.
func (s *DlnaServerAPIService) ProcessContentDirectoryControlRequest(ctx context.Context, serverId string) (ImplResponse, error) {
	// TODO - update ProcessContentDirectoryControlRequest with the required logic for this service method.
	// Add api_dlna_server_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, *os.File{}) or use other options such as http.Ok ...
	// return Response(200, *os.File{}), nil

	// TODO: Uncomment the next line to return response Response(503, {}) or use other options such as http.Ok ...
	// return Response(503, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("ProcessContentDirectoryControlRequest method not implemented")
}

// ProcessMediaReceiverRegistrarControlRequest - Process a media receiver registrar control request.
func (s *DlnaServerAPIService) ProcessMediaReceiverRegistrarControlRequest(ctx context.Context, serverId string) (ImplResponse, error) {
	// TODO - update ProcessMediaReceiverRegistrarControlRequest with the required logic for this service method.
	// Add api_dlna_server_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, *os.File{}) or use other options such as http.Ok ...
	// return Response(200, *os.File{}), nil

	// TODO: Uncomment the next line to return response Response(503, {}) or use other options such as http.Ok ...
	// return Response(503, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("ProcessMediaReceiverRegistrarControlRequest method not implemented")
}
