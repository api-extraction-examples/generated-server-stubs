/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"fmt"
)


// ImageType : Enum ImageType.
type ImageType string

// List of ImageType
const (
	PRIMARY ImageType = "Primary"
	ART ImageType = "Art"
	BACKDROP ImageType = "Backdrop"
	BANNER ImageType = "Banner"
	LOGO ImageType = "Logo"
	THUMB ImageType = "Thumb"
	DISC ImageType = "Disc"
	BOX ImageType = "Box"
	SCREENSHOT ImageType = "Screenshot"
	MENU ImageType = "Menu"
	CHAPTER ImageType = "Chapter"
	BOX_REAR ImageType = "BoxRear"
	PROFILE ImageType = "Profile"
)

// AllowedImageTypeEnumValues is all the allowed values of ImageType enum
var AllowedImageTypeEnumValues = []ImageType{
	"Primary",
	"Art",
	"Backdrop",
	"Banner",
	"Logo",
	"Thumb",
	"Disc",
	"Box",
	"Screenshot",
	"Menu",
	"Chapter",
	"BoxRear",
	"Profile",
}

// validImageTypeEnumValue provides a map of ImageTypes for fast verification of use input
var validImageTypeEnumValues = map[ImageType]struct{}{
	"Primary": {},
	"Art": {},
	"Backdrop": {},
	"Banner": {},
	"Logo": {},
	"Thumb": {},
	"Disc": {},
	"Box": {},
	"Screenshot": {},
	"Menu": {},
	"Chapter": {},
	"BoxRear": {},
	"Profile": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ImageType) IsValid() bool {
	_, ok := validImageTypeEnumValues[v]
	return ok
}

// NewImageTypeFromValue returns a pointer to a valid ImageType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewImageTypeFromValue(v string) (ImageType, error) {
	ev := ImageType(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for ImageType: valid values are %v", v, AllowedImageTypeEnumValues)
	}
}



// AssertImageTypeRequired checks if the required fields are not zero-ed
func AssertImageTypeRequired(obj ImageType) error {
	return nil
}

// AssertImageTypeConstraints checks if the values respects the defined constraints
func AssertImageTypeConstraints(obj ImageType) error {
	return nil
}
