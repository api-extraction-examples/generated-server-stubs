/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"fmt"
)


// ItemFilter : Enum ItemFilter.
type ItemFilter string

// List of ItemFilter
const (
	IS_FOLDER ItemFilter = "IsFolder"
	IS_NOT_FOLDER ItemFilter = "IsNotFolder"
	IS_UNPLAYED ItemFilter = "IsUnplayed"
	IS_PLAYED ItemFilter = "IsPlayed"
	IS_FAVORITE ItemFilter = "IsFavorite"
	IS_RESUMABLE ItemFilter = "IsResumable"
	LIKES ItemFilter = "Likes"
	DISLIKES ItemFilter = "Dislikes"
	IS_FAVORITE_OR_LIKES ItemFilter = "IsFavoriteOrLikes"
)

// AllowedItemFilterEnumValues is all the allowed values of ItemFilter enum
var AllowedItemFilterEnumValues = []ItemFilter{
	"IsFolder",
	"IsNotFolder",
	"IsUnplayed",
	"IsPlayed",
	"IsFavorite",
	"IsResumable",
	"Likes",
	"Dislikes",
	"IsFavoriteOrLikes",
}

// validItemFilterEnumValue provides a map of ItemFilters for fast verification of use input
var validItemFilterEnumValues = map[ItemFilter]struct{}{
	"IsFolder": {},
	"IsNotFolder": {},
	"IsUnplayed": {},
	"IsPlayed": {},
	"IsFavorite": {},
	"IsResumable": {},
	"Likes": {},
	"Dislikes": {},
	"IsFavoriteOrLikes": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ItemFilter) IsValid() bool {
	_, ok := validItemFilterEnumValues[v]
	return ok
}

// NewItemFilterFromValue returns a pointer to a valid ItemFilter
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewItemFilterFromValue(v string) (ItemFilter, error) {
	ev := ItemFilter(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for ItemFilter: valid values are %v", v, AllowedItemFilterEnumValues)
	}
}



// AssertItemFilterRequired checks if the required fields are not zero-ed
func AssertItemFilterRequired(obj ItemFilter) error {
	return nil
}

// AssertItemFilterConstraints checks if the values respects the defined constraints
func AssertItemFilterConstraints(obj ItemFilter) error {
	return nil
}
