/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// BrandingAPIController binds http requests to an api service and writes the service results to the http response
type BrandingAPIController struct {
	service BrandingAPIServicer
	errorHandler ErrorHandler
}

// BrandingAPIOption for how the controller is set up.
type BrandingAPIOption func(*BrandingAPIController)

// WithBrandingAPIErrorHandler inject ErrorHandler into controller
func WithBrandingAPIErrorHandler(h ErrorHandler) BrandingAPIOption {
	return func(c *BrandingAPIController) {
		c.errorHandler = h
	}
}

// NewBrandingAPIController creates a default api controller
func NewBrandingAPIController(s BrandingAPIServicer, opts ...BrandingAPIOption) Router {
	controller := &BrandingAPIController{
		service:      s,
		errorHandler: DefaultErrorHandler,
	}

	for _, opt := range opts {
		opt(controller)
	}

	return controller
}

// Routes returns all the api routes for the BrandingAPIController
func (c *BrandingAPIController) Routes() Routes {
	return Routes{
		"GetBrandingCss": Route{
			strings.ToUpper("Get"),
			"/Branding/Css",
			c.GetBrandingCss,
		},
		"GetBrandingCss2": Route{
			strings.ToUpper("Get"),
			"/Branding/Css.css",
			c.GetBrandingCss2,
		},
		"GetBrandingOptions": Route{
			strings.ToUpper("Get"),
			"/Branding/Configuration",
			c.GetBrandingOptions,
		},
	}
}

// GetBrandingCss - Gets branding css.
func (c *BrandingAPIController) GetBrandingCss(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.GetBrandingCss(r.Context())
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)
}

// GetBrandingCss2 - Gets branding css.
func (c *BrandingAPIController) GetBrandingCss2(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.GetBrandingCss2(r.Context())
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)
}

// GetBrandingOptions - Gets branding configuration.
func (c *BrandingAPIController) GetBrandingOptions(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.GetBrandingOptions(r.Context())
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)
}
