/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// ScheduledTasksAPIService is a service that implements the logic for the ScheduledTasksAPIServicer
// This service should implement the business logic for every endpoint for the ScheduledTasksAPI API.
// Include any external packages or services that will be required by this service.
type ScheduledTasksAPIService struct {
}

// NewScheduledTasksAPIService creates a default api service
func NewScheduledTasksAPIService() ScheduledTasksAPIServicer {
	return &ScheduledTasksAPIService{}
}

// GetTask - Get task by id.
func (s *ScheduledTasksAPIService) GetTask(ctx context.Context, taskId string) (ImplResponse, error) {
	// TODO - update GetTask with the required logic for this service method.
	// Add api_scheduled_tasks_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, TaskInfo{}) or use other options such as http.Ok ...
	// return Response(200, TaskInfo{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, ProblemDetails{}) or use other options such as http.Ok ...
	// return Response(404, ProblemDetails{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetTask method not implemented")
}

// GetTasks - Get tasks.
func (s *ScheduledTasksAPIService) GetTasks(ctx context.Context, isHidden *bool, isEnabled *bool) (ImplResponse, error) {
	// TODO - update GetTasks with the required logic for this service method.
	// Add api_scheduled_tasks_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []TaskInfo{}) or use other options such as http.Ok ...
	// return Response(200, []TaskInfo{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetTasks method not implemented")
}

// StartTask - Start specified task.
func (s *ScheduledTasksAPIService) StartTask(ctx context.Context, taskId string) (ImplResponse, error) {
	// TODO - update StartTask with the required logic for this service method.
	// Add api_scheduled_tasks_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, ProblemDetails{}) or use other options such as http.Ok ...
	// return Response(404, ProblemDetails{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("StartTask method not implemented")
}

// StopTask - Stop specified task.
func (s *ScheduledTasksAPIService) StopTask(ctx context.Context, taskId string) (ImplResponse, error) {
	// TODO - update StopTask with the required logic for this service method.
	// Add api_scheduled_tasks_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, ProblemDetails{}) or use other options such as http.Ok ...
	// return Response(404, ProblemDetails{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("StopTask method not implemented")
}

// UpdateTask - Update specified task triggers.
func (s *ScheduledTasksAPIService) UpdateTask(ctx context.Context, taskId string, taskTriggerInfo []TaskTriggerInfo) (ImplResponse, error) {
	// TODO - update UpdateTask with the required logic for this service method.
	// Add api_scheduled_tasks_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, ProblemDetails{}) or use other options such as http.Ok ...
	// return Response(404, ProblemDetails{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateTask method not implemented")
}
