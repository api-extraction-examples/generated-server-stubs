/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
	"reflect"
)

// SessionAPIService is a service that implements the logic for the SessionAPIServicer
// This service should implement the business logic for every endpoint for the SessionAPI API.
// Include any external packages or services that will be required by this service.
type SessionAPIService struct {
}

// NewSessionAPIService creates a default api service
func NewSessionAPIService() SessionAPIServicer {
	return &SessionAPIService{}
}

// AddUserToSession - Adds an additional user to a session.
func (s *SessionAPIService) AddUserToSession(ctx context.Context, sessionId string, userId string) (ImplResponse, error) {
	// TODO - update AddUserToSession with the required logic for this service method.
	// Add api_session_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("AddUserToSession method not implemented")
}

// DisplayContent - Instructs a session to browse to an item or view.
func (s *SessionAPIService) DisplayContent(ctx context.Context, sessionId string, itemType string, itemId string, itemName string) (ImplResponse, error) {
	// TODO - update DisplayContent with the required logic for this service method.
	// Add api_session_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DisplayContent method not implemented")
}

// GetAuthProviders - Get all auth providers.
func (s *SessionAPIService) GetAuthProviders(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetAuthProviders with the required logic for this service method.
	// Add api_session_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []NameIdPair{}) or use other options such as http.Ok ...
	// return Response(200, []NameIdPair{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetAuthProviders method not implemented")
}

// GetPasswordResetProviders - Get all password reset providers.
func (s *SessionAPIService) GetPasswordResetProviders(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetPasswordResetProviders with the required logic for this service method.
	// Add api_session_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []NameIdPair{}) or use other options such as http.Ok ...
	// return Response(200, []NameIdPair{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetPasswordResetProviders method not implemented")
}

// GetSessions - Gets a list of sessions.
func (s *SessionAPIService) GetSessions(ctx context.Context, controllableByUserId *string, deviceId *string, activeWithinSeconds *int32) (ImplResponse, error) {
	// TODO - update GetSessions with the required logic for this service method.
	// Add api_session_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []SessionInfo{}) or use other options such as http.Ok ...
	// return Response(200, []SessionInfo{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetSessions method not implemented")
}

// Play - Instructs a session to play an item.
func (s *SessionAPIService) Play(ctx context.Context, sessionId string, playCommand PlayCommand, itemIds []string, startPositionTicks *int64) (ImplResponse, error) {
	// TODO - update Play with the required logic for this service method.
	// Add api_session_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("Play method not implemented")
}

// PostCapabilities - Updates capabilities for a device.
func (s *SessionAPIService) PostCapabilities(ctx context.Context, id *string, playableMediaTypes *[]string, supportedCommands *[]GeneralCommandType, supportsMediaControl bool, supportsSync bool, supportsPersistentIdentifier bool) (ImplResponse, error) {
	// TODO - update PostCapabilities with the required logic for this service method.
	// Add api_session_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("PostCapabilities method not implemented")
}

// PostFullCapabilities - Updates capabilities for a device.
func (s *SessionAPIService) PostFullCapabilities(ctx context.Context, clientCapabilitiesDto ClientCapabilitiesDto, id *string) (ImplResponse, error) {
	// TODO - update PostFullCapabilities with the required logic for this service method.
	// Add api_session_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("PostFullCapabilities method not implemented")
}

// RemoveUserFromSession - Removes an additional user from a session.
func (s *SessionAPIService) RemoveUserFromSession(ctx context.Context, sessionId string, userId string) (ImplResponse, error) {
	// TODO - update RemoveUserFromSession with the required logic for this service method.
	// Add api_session_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("RemoveUserFromSession method not implemented")
}

// ReportSessionEnded - Reports that a session has ended.
func (s *SessionAPIService) ReportSessionEnded(ctx context.Context) (ImplResponse, error) {
	// TODO - update ReportSessionEnded with the required logic for this service method.
	// Add api_session_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("ReportSessionEnded method not implemented")
}

// ReportViewing - Reports that a session is viewing an item.
func (s *SessionAPIService) ReportViewing(ctx context.Context, itemId string, sessionId *string) (ImplResponse, error) {
	// TODO - update ReportViewing with the required logic for this service method.
	// Add api_session_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("ReportViewing method not implemented")
}

// SendFullGeneralCommand - Issues a full general command to a client.
func (s *SessionAPIService) SendFullGeneralCommand(ctx context.Context, sessionId string, generalCommand GeneralCommand) (ImplResponse, error) {
	// TODO - update SendFullGeneralCommand with the required logic for this service method.
	// Add api_session_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("SendFullGeneralCommand method not implemented")
}

// SendGeneralCommand - Issues a general command to a client.
func (s *SessionAPIService) SendGeneralCommand(ctx context.Context, sessionId string, command GeneralCommandType) (ImplResponse, error) {
	// TODO - update SendGeneralCommand with the required logic for this service method.
	// Add api_session_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("SendGeneralCommand method not implemented")
}

// SendMessageCommand - Issues a command to a client to display a message to the user.
func (s *SessionAPIService) SendMessageCommand(ctx context.Context, sessionId string, text string, header *string, timeoutMs *int64) (ImplResponse, error) {
	// TODO - update SendMessageCommand with the required logic for this service method.
	// Add api_session_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("SendMessageCommand method not implemented")
}

// SendPlaystateCommand - Issues a playstate command to a client.
func (s *SessionAPIService) SendPlaystateCommand(ctx context.Context, sessionId string, command PlaystateCommand, seekPositionTicks *int64, controllingUserId *string) (ImplResponse, error) {
	// TODO - update SendPlaystateCommand with the required logic for this service method.
	// Add api_session_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("SendPlaystateCommand method not implemented")
}

// SendSystemCommand - Issues a system command to a client.
func (s *SessionAPIService) SendSystemCommand(ctx context.Context, sessionId string, command GeneralCommandType) (ImplResponse, error) {
	// TODO - update SendSystemCommand with the required logic for this service method.
	// Add api_session_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("SendSystemCommand method not implemented")
}
