/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"fmt"
)


// GroupQueueMode : Enum GroupQueueMode.
type GroupQueueMode string

// List of GroupQueueMode
const (
	QUEUE GroupQueueMode = "Queue"
	QUEUE_NEXT GroupQueueMode = "QueueNext"
)

// AllowedGroupQueueModeEnumValues is all the allowed values of GroupQueueMode enum
var AllowedGroupQueueModeEnumValues = []GroupQueueMode{
	"Queue",
	"QueueNext",
}

// validGroupQueueModeEnumValue provides a map of GroupQueueModes for fast verification of use input
var validGroupQueueModeEnumValues = map[GroupQueueMode]struct{}{
	"Queue": {},
	"QueueNext": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GroupQueueMode) IsValid() bool {
	_, ok := validGroupQueueModeEnumValues[v]
	return ok
}

// NewGroupQueueModeFromValue returns a pointer to a valid GroupQueueMode
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGroupQueueModeFromValue(v string) (GroupQueueMode, error) {
	ev := GroupQueueMode(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for GroupQueueMode: valid values are %v", v, AllowedGroupQueueModeEnumValues)
	}
}



// AssertGroupQueueModeRequired checks if the required fields are not zero-ed
func AssertGroupQueueModeRequired(obj GroupQueueMode) error {
	return nil
}

// AssertGroupQueueModeConstraints checks if the values respects the defined constraints
func AssertGroupQueueModeConstraints(obj GroupQueueMode) error {
	return nil
}
