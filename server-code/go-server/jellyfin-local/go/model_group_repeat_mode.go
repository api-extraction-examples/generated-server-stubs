/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"fmt"
)


// GroupRepeatMode : Enum GroupRepeatMode.
type GroupRepeatMode string

// List of GroupRepeatMode
const (
	REPEAT_ONE GroupRepeatMode = "RepeatOne"
	REPEAT_ALL GroupRepeatMode = "RepeatAll"
	REPEAT_NONE GroupRepeatMode = "RepeatNone"
)

// AllowedGroupRepeatModeEnumValues is all the allowed values of GroupRepeatMode enum
var AllowedGroupRepeatModeEnumValues = []GroupRepeatMode{
	"RepeatOne",
	"RepeatAll",
	"RepeatNone",
}

// validGroupRepeatModeEnumValue provides a map of GroupRepeatModes for fast verification of use input
var validGroupRepeatModeEnumValues = map[GroupRepeatMode]struct{}{
	"RepeatOne": {},
	"RepeatAll": {},
	"RepeatNone": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GroupRepeatMode) IsValid() bool {
	_, ok := validGroupRepeatModeEnumValues[v]
	return ok
}

// NewGroupRepeatModeFromValue returns a pointer to a valid GroupRepeatMode
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGroupRepeatModeFromValue(v string) (GroupRepeatMode, error) {
	ev := GroupRepeatMode(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for GroupRepeatMode: valid values are %v", v, AllowedGroupRepeatModeEnumValues)
	}
}



// AssertGroupRepeatModeRequired checks if the required fields are not zero-ed
func AssertGroupRepeatModeRequired(obj GroupRepeatMode) error {
	return nil
}

// AssertGroupRepeatModeConstraints checks if the values respects the defined constraints
func AssertGroupRepeatModeConstraints(obj GroupRepeatMode) error {
	return nil
}
