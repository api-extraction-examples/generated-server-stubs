/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"fmt"
)



type ChannelMediaContentType string

// List of ChannelMediaContentType
const (
	CLIP ChannelMediaContentType = "Clip"
	PODCAST ChannelMediaContentType = "Podcast"
	TRAILER ChannelMediaContentType = "Trailer"
	MOVIE ChannelMediaContentType = "Movie"
	EPISODE ChannelMediaContentType = "Episode"
	SONG ChannelMediaContentType = "Song"
	MOVIE_EXTRA ChannelMediaContentType = "MovieExtra"
	TV_EXTRA ChannelMediaContentType = "TvExtra"
)

// AllowedChannelMediaContentTypeEnumValues is all the allowed values of ChannelMediaContentType enum
var AllowedChannelMediaContentTypeEnumValues = []ChannelMediaContentType{
	"Clip",
	"Podcast",
	"Trailer",
	"Movie",
	"Episode",
	"Song",
	"MovieExtra",
	"TvExtra",
}

// validChannelMediaContentTypeEnumValue provides a map of ChannelMediaContentTypes for fast verification of use input
var validChannelMediaContentTypeEnumValues = map[ChannelMediaContentType]struct{}{
	"Clip": {},
	"Podcast": {},
	"Trailer": {},
	"Movie": {},
	"Episode": {},
	"Song": {},
	"MovieExtra": {},
	"TvExtra": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ChannelMediaContentType) IsValid() bool {
	_, ok := validChannelMediaContentTypeEnumValues[v]
	return ok
}

// NewChannelMediaContentTypeFromValue returns a pointer to a valid ChannelMediaContentType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewChannelMediaContentTypeFromValue(v string) (ChannelMediaContentType, error) {
	ev := ChannelMediaContentType(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for ChannelMediaContentType: valid values are %v", v, AllowedChannelMediaContentTypeEnumValues)
	}
}



// AssertChannelMediaContentTypeRequired checks if the required fields are not zero-ed
func AssertChannelMediaContentTypeRequired(obj ChannelMediaContentType) error {
	return nil
}

// AssertChannelMediaContentTypeConstraints checks if the values respects the defined constraints
func AssertChannelMediaContentTypeConstraints(obj ChannelMediaContentType) error {
	return nil
}
