/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"fmt"
)



type ProgramAudio string

// List of ProgramAudio
const (
	MONO ProgramAudio = "Mono"
	STEREO ProgramAudio = "Stereo"
	DOLBY ProgramAudio = "Dolby"
	DOLBY_DIGITAL ProgramAudio = "DolbyDigital"
	THX ProgramAudio = "Thx"
	ATMOS ProgramAudio = "Atmos"
)

// AllowedProgramAudioEnumValues is all the allowed values of ProgramAudio enum
var AllowedProgramAudioEnumValues = []ProgramAudio{
	"Mono",
	"Stereo",
	"Dolby",
	"DolbyDigital",
	"Thx",
	"Atmos",
}

// validProgramAudioEnumValue provides a map of ProgramAudios for fast verification of use input
var validProgramAudioEnumValues = map[ProgramAudio]struct{}{
	"Mono": {},
	"Stereo": {},
	"Dolby": {},
	"DolbyDigital": {},
	"Thx": {},
	"Atmos": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ProgramAudio) IsValid() bool {
	_, ok := validProgramAudioEnumValues[v]
	return ok
}

// NewProgramAudioFromValue returns a pointer to a valid ProgramAudio
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewProgramAudioFromValue(v string) (ProgramAudio, error) {
	ev := ProgramAudio(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for ProgramAudio: valid values are %v", v, AllowedProgramAudioEnumValues)
	}
}



// AssertProgramAudioRequired checks if the required fields are not zero-ed
func AssertProgramAudioRequired(obj ProgramAudio) error {
	return nil
}

// AssertProgramAudioConstraints checks if the values respects the defined constraints
func AssertProgramAudioConstraints(obj ProgramAudio) error {
	return nil
}
