/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"fmt"
)



type TranscodeSeekInfo string

// List of TranscodeSeekInfo
const (
	AUTO TranscodeSeekInfo = "Auto"
	BYTES TranscodeSeekInfo = "Bytes"
)

// AllowedTranscodeSeekInfoEnumValues is all the allowed values of TranscodeSeekInfo enum
var AllowedTranscodeSeekInfoEnumValues = []TranscodeSeekInfo{
	"Auto",
	"Bytes",
}

// validTranscodeSeekInfoEnumValue provides a map of TranscodeSeekInfos for fast verification of use input
var validTranscodeSeekInfoEnumValues = map[TranscodeSeekInfo]struct{}{
	"Auto": {},
	"Bytes": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v TranscodeSeekInfo) IsValid() bool {
	_, ok := validTranscodeSeekInfoEnumValues[v]
	return ok
}

// NewTranscodeSeekInfoFromValue returns a pointer to a valid TranscodeSeekInfo
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewTranscodeSeekInfoFromValue(v string) (TranscodeSeekInfo, error) {
	ev := TranscodeSeekInfo(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for TranscodeSeekInfo: valid values are %v", v, AllowedTranscodeSeekInfoEnumValues)
	}
}



// AssertTranscodeSeekInfoRequired checks if the required fields are not zero-ed
func AssertTranscodeSeekInfoRequired(obj TranscodeSeekInfo) error {
	return nil
}

// AssertTranscodeSeekInfoConstraints checks if the values respects the defined constraints
func AssertTranscodeSeekInfoConstraints(obj TranscodeSeekInfo) error {
	return nil
}
