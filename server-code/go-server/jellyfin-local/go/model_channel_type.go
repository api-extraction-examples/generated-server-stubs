/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"fmt"
)


// ChannelType : Enum ChannelType.
type ChannelType string

// List of ChannelType
const (
	TV ChannelType = "TV"
	RADIO ChannelType = "Radio"
)

// AllowedChannelTypeEnumValues is all the allowed values of ChannelType enum
var AllowedChannelTypeEnumValues = []ChannelType{
	"TV",
	"Radio",
}

// validChannelTypeEnumValue provides a map of ChannelTypes for fast verification of use input
var validChannelTypeEnumValues = map[ChannelType]struct{}{
	"TV": {},
	"Radio": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ChannelType) IsValid() bool {
	_, ok := validChannelTypeEnumValues[v]
	return ok
}

// NewChannelTypeFromValue returns a pointer to a valid ChannelType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewChannelTypeFromValue(v string) (ChannelType, error) {
	ev := ChannelType(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for ChannelType: valid values are %v", v, AllowedChannelTypeEnumValues)
	}
}



// AssertChannelTypeRequired checks if the required fields are not zero-ed
func AssertChannelTypeRequired(obj ChannelType) error {
	return nil
}

// AssertChannelTypeConstraints checks if the values respects the defined constraints
func AssertChannelTypeConstraints(obj ChannelType) error {
	return nil
}
