/*
 * Twilio - Notify
 *
 * This is the public Twilio REST API.
 *
 * API version: 1.52.0
 * Contact: support@twilio.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"reflect"
)



// NotifyV1BindingAPIRouter defines the required methods for binding the api requests to a responses for the NotifyV1BindingAPI
// The NotifyV1BindingAPIRouter implementation should parse necessary information from the http request,
// pass the data to a NotifyV1BindingAPIServicer to perform the required actions, then write the service results to the http response.
type NotifyV1BindingAPIRouter interface { 
	CreateBinding(http.ResponseWriter, *http.Request)
	DeleteBinding(http.ResponseWriter, *http.Request)
	FetchBinding(http.ResponseWriter, *http.Request)
	ListBinding(http.ResponseWriter, *http.Request)
}
// NotifyV1CredentialAPIRouter defines the required methods for binding the api requests to a responses for the NotifyV1CredentialAPI
// The NotifyV1CredentialAPIRouter implementation should parse necessary information from the http request,
// pass the data to a NotifyV1CredentialAPIServicer to perform the required actions, then write the service results to the http response.
type NotifyV1CredentialAPIRouter interface { 
	CreateCredential(http.ResponseWriter, *http.Request)
	DeleteCredential(http.ResponseWriter, *http.Request)
	FetchCredential(http.ResponseWriter, *http.Request)
	ListCredential(http.ResponseWriter, *http.Request)
	UpdateCredential(http.ResponseWriter, *http.Request)
}
// NotifyV1NotificationAPIRouter defines the required methods for binding the api requests to a responses for the NotifyV1NotificationAPI
// The NotifyV1NotificationAPIRouter implementation should parse necessary information from the http request,
// pass the data to a NotifyV1NotificationAPIServicer to perform the required actions, then write the service results to the http response.
type NotifyV1NotificationAPIRouter interface { 
	CreateNotification(http.ResponseWriter, *http.Request)
}
// NotifyV1ServiceAPIRouter defines the required methods for binding the api requests to a responses for the NotifyV1ServiceAPI
// The NotifyV1ServiceAPIRouter implementation should parse necessary information from the http request,
// pass the data to a NotifyV1ServiceAPIServicer to perform the required actions, then write the service results to the http response.
type NotifyV1ServiceAPIRouter interface { 
	CreateService(http.ResponseWriter, *http.Request)
	DeleteService(http.ResponseWriter, *http.Request)
	FetchService(http.ResponseWriter, *http.Request)
	ListService(http.ResponseWriter, *http.Request)
	UpdateService(http.ResponseWriter, *http.Request)
}


// NotifyV1BindingAPIServicer defines the api actions for the NotifyV1BindingAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type NotifyV1BindingAPIServicer interface { 
	CreateBinding(context.Context, string, string, BindingEnumBindingType, string, string, string, string, []string) (ImplResponse, error)
	DeleteBinding(context.Context, string, string) (ImplResponse, error)
	FetchBinding(context.Context, string, string) (ImplResponse, error)
	ListBinding(context.Context, string, string, string, []string, []string, int32, int32, string) (ImplResponse, error)
}


// NotifyV1CredentialAPIServicer defines the api actions for the NotifyV1CredentialAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type NotifyV1CredentialAPIServicer interface { 
	CreateCredential(context.Context, CredentialEnumPushService, string, string, string, string, bool, string) (ImplResponse, error)
	DeleteCredential(context.Context, string) (ImplResponse, error)
	FetchCredential(context.Context, string) (ImplResponse, error)
	ListCredential(context.Context, int32, int32, string) (ImplResponse, error)
	UpdateCredential(context.Context, string, string, string, string, string, bool, string) (ImplResponse, error)
}


// NotifyV1NotificationAPIServicer defines the api actions for the NotifyV1NotificationAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type NotifyV1NotificationAPIServicer interface { 
	CreateNotification(context.Context, string, string, *interface{}, *interface{}, string, *interface{}, string, *interface{}, *interface{}, *interface{}, []string, NotificationEnumPriority, []string, *interface{}, string, []string, string, []string, int32) (ImplResponse, error)
}


// NotifyV1ServiceAPIServicer defines the api actions for the NotifyV1ServiceAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type NotifyV1ServiceAPIServicer interface { 
	CreateService(context.Context, string, string, string, string, string, string, bool, string, string, string, string, string, bool, string) (ImplResponse, error)
	DeleteService(context.Context, string) (ImplResponse, error)
	FetchService(context.Context, string) (ImplResponse, error)
	ListService(context.Context, string, int32, int32, string) (ImplResponse, error)
	UpdateService(context.Context, string, string, string, string, string, string, string, bool, string, string, string, string, string, bool, string) (ImplResponse, error)
}
