/*
 * Discovery Market Research
 *
 * <p>This API drives the <a href=\"https://discovery.gsa.gov\">Discovery Market Research Tool</a>. It contains information on the vendors that are part of the OASIS and OASIS Small Business contracting vehicles, such as their contracting history, their elligibility for contract awards, and their small business designations. To learn more about the tool, please visit <a href=\"https://discovery.gsa.gov\">Discovery</a> or see the README on our <a href=\"https://github.com/PSHCDevOps/discovery\">GitHub repository</a>.</p> <p><strong>Please note that the base path for this API is <code>https://api.data.gov/gsa/discovery/</code></strong></p> <p>It requires an API key, obtainable at <a href=\"http://api.data.gov/\">api.data.gov</a>. It must be passed in the <code>api_key</code> parameter with each request.</p>
 *
 * API version: 0.1
 * Contact: discovery-18f@gsa.gov
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// VendorsAPIController binds http requests to an api service and writes the service results to the http response
type VendorsAPIController struct {
	service VendorsAPIServicer
	errorHandler ErrorHandler
}

// VendorsAPIOption for how the controller is set up.
type VendorsAPIOption func(*VendorsAPIController)

// WithVendorsAPIErrorHandler inject ErrorHandler into controller
func WithVendorsAPIErrorHandler(h ErrorHandler) VendorsAPIOption {
	return func(c *VendorsAPIController) {
		c.errorHandler = h
	}
}

// NewVendorsAPIController creates a default api controller
func NewVendorsAPIController(s VendorsAPIServicer, opts ...VendorsAPIOption) Router {
	controller := &VendorsAPIController{
		service:      s,
		errorHandler: DefaultErrorHandler,
	}

	for _, opt := range opts {
		opt(controller)
	}

	return controller
}

// Routes returns all the api routes for the VendorsAPIController
func (c *VendorsAPIController) Routes() Routes {
	return Routes{
		"ListVendorsGET": Route{
			strings.ToUpper("Get"),
			"/api/vendors/",
			c.ListVendorsGET,
		},
	}
}

// ListVendorsGET - This endpoint returns a list of vendors filtered by a NAICS code
func (c *VendorsAPIController) ListVendorsGET(w http.ResponseWriter, r *http.Request) {
	query := r.URL.Query()
	var naicsParam string
	if query.Has("naics") {
		param := query.Get("naics")

		naicsParam = param
	} else {
		c.errorHandler(w, r, &RequiredError{Field: "naics"}, nil)
		return
	}
	var setasidesParam []string
	if query.Has("setasides") {
		setasidesParam = strings.Split(query.Get("setasides"), ",")
	}
	var vehicleParam string
	if query.Has("vehicle") {
		param := query.Get("vehicle")

		vehicleParam = param
	} else {
	}
	result, err := c.service.ListVendorsGET(r.Context(), naicsParam, setasidesParam, vehicleParam)
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)
}
