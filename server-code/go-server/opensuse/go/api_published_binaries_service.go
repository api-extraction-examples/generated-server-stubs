/*
 * Open Build Service API
 *
 * The _Open Build Service API_ is a XML API.  To authenticate, use [HTTP basic authentication](https://en.wikipedia.org/wiki/Basic_access_authentication) by passing the _Authorization_ header in the form of `Authorization: Basic <credentials>`.  There is no API versioning as there is no need for it right now.  Only rudimentary rate limiting is implemented, so please be gentle when using the API concurrently, especially with potentially expensive operations. In case of abuse, we will limit/remove your access.  For command-line users, we recommend using [osc](https://github.com/openSUSE/osc) with its _api_ command to interact with the API. It's as simple as this example: `osc api /about` (_about_ is one of the endpoints documented below) 
 *
 * API version: 2.10.50
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// PublishedBinariesAPIService is a service that implements the logic for the PublishedBinariesAPIServicer
// This service should implement the business logic for every endpoint for the PublishedBinariesAPI API.
// Include any external packages or services that will be required by this service.
type PublishedBinariesAPIService struct {
}

// NewPublishedBinariesAPIService creates a default api service
func NewPublishedBinariesAPIService() PublishedBinariesAPIServicer {
	return &PublishedBinariesAPIService{}
}

// PublishedGet - List all the published projects.
func (s *PublishedBinariesAPIService) PublishedGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update PublishedGet with the required logic for this service method.
	// Add api_published_binaries_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Object{}) or use other options such as http.Ok ...
	// return Response(200, Object{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("PublishedGet method not implemented")
}

// PublishedProjectNameGet - List the repositories of a project with published binaries
func (s *PublishedBinariesAPIService) PublishedProjectNameGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update PublishedProjectNameGet with the required logic for this service method.
	// Add api_published_binaries_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Object{}) or use other options such as http.Ok ...
	// return Response(200, Object{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, Object{}) or use other options such as http.Ok ...
	// return Response(403, Object{}), nil

	// TODO: Uncomment the next line to return response Response(404, Object{}) or use other options such as http.Ok ...
	// return Response(404, Object{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("PublishedProjectNameGet method not implemented")
}

// PublishedProjectNameRepositoryNameArchitectureNameBinaryFilenameGet - Return the binary file itself.
func (s *PublishedBinariesAPIService) PublishedProjectNameRepositoryNameArchitectureNameBinaryFilenameGet(ctx context.Context, binaryFilename string) (ImplResponse, error) {
	// TODO - update PublishedProjectNameRepositoryNameArchitectureNameBinaryFilenameGet with the required logic for this service method.
	// Add api_published_binaries_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, *os.File{}) or use other options such as http.Ok ...
	// return Response(200, *os.File{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, Object{}) or use other options such as http.Ok ...
	// return Response(404, Object{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("PublishedProjectNameRepositoryNameArchitectureNameBinaryFilenameGet method not implemented")
}

// PublishedProjectNameRepositoryNameArchitectureNameBinaryFilenameviewympGet - Generate a ymp pattern that includes the needed repositories to install the given binary.
func (s *PublishedBinariesAPIService) PublishedProjectNameRepositoryNameArchitectureNameBinaryFilenameviewympGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update PublishedProjectNameRepositoryNameArchitectureNameBinaryFilenameviewympGet with the required logic for this service method.
	// Add api_published_binaries_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, PublishedProjectNameRepositoryNameArchitectureNameBinaryFilenameViewYmpGet200Response{}) or use other options such as http.Ok ...
	// return Response(200, PublishedProjectNameRepositoryNameArchitectureNameBinaryFilenameViewYmpGet200Response{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, Object{}) or use other options such as http.Ok ...
	// return Response(404, Object{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("PublishedProjectNameRepositoryNameArchitectureNameBinaryFilenameviewympGet method not implemented")
}

// PublishedProjectNameRepositoryNameArchitectureNameGet - List the content of the directory tree where the binaries are published at the level project/repository/architecture.
func (s *PublishedBinariesAPIService) PublishedProjectNameRepositoryNameArchitectureNameGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update PublishedProjectNameRepositoryNameArchitectureNameGet with the required logic for this service method.
	// Add api_published_binaries_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Object{}) or use other options such as http.Ok ...
	// return Response(200, Object{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, Object{}) or use other options such as http.Ok ...
	// return Response(404, Object{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("PublishedProjectNameRepositoryNameArchitectureNameGet method not implemented")
}

// PublishedProjectNameRepositoryNameGet - List the content of the directory tree where the binaries are published at the level project/repository.
func (s *PublishedBinariesAPIService) PublishedProjectNameRepositoryNameGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update PublishedProjectNameRepositoryNameGet with the required logic for this service method.
	// Add api_published_binaries_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Object{}) or use other options such as http.Ok ...
	// return Response(200, Object{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, Object{}) or use other options such as http.Ok ...
	// return Response(404, Object{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("PublishedProjectNameRepositoryNameGet method not implemented")
}

// PublishedProjectNameRepositoryNameviewstatusGet - Present information about the last publication of the pair project and repository.
func (s *PublishedBinariesAPIService) PublishedProjectNameRepositoryNameviewstatusGet(ctx context.Context, view string) (ImplResponse, error) {
	// TODO - update PublishedProjectNameRepositoryNameviewstatusGet with the required logic for this service method.
	// Add api_published_binaries_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, PublishedProjectNameRepositoryNameViewStatusGet200Response{}) or use other options such as http.Ok ...
	// return Response(200, PublishedProjectNameRepositoryNameViewStatusGet200Response{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, Object{}) or use other options such as http.Ok ...
	// return Response(404, Object{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("PublishedProjectNameRepositoryNameviewstatusGet method not implemented")
}
