/*
 * Open Build Service API
 *
 * The _Open Build Service API_ is a XML API.  To authenticate, use [HTTP basic authentication](https://en.wikipedia.org/wiki/Basic_access_authentication) by passing the _Authorization_ header in the form of `Authorization: Basic <credentials>`.  There is no API versioning as there is no need for it right now.  Only rudimentary rate limiting is implemented, so please be gentle when using the API concurrently, especially with potentially expensive operations. In case of abuse, we will limit/remove your access.  For command-line users, we recommend using [osc](https://github.com/openSUSE/osc) with its _api_ command to interact with the API. It's as simple as this example: `osc api /about` (_about_ is one of the endpoints documented below) 
 *
 * API version: 2.10.50
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// IssueTrackersAPIService is a service that implements the logic for the IssueTrackersAPIServicer
// This service should implement the business logic for every endpoint for the IssueTrackersAPI API.
// Include any external packages or services that will be required by this service.
type IssueTrackersAPIService struct {
}

// NewIssueTrackersAPIService creates a default api service
func NewIssueTrackersAPIService() IssueTrackersAPIServicer {
	return &IssueTrackersAPIService{}
}

// IssueTrackersGet - Get the list of issue trackers.
func (s *IssueTrackersAPIService) IssueTrackersGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update IssueTrackersGet with the required logic for this service method.
	// Add api_issue_trackers_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []IssueTrackersGet200ResponseInner{}) or use other options such as http.Ok ...
	// return Response(200, []IssueTrackersGet200ResponseInner{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("IssueTrackersGet method not implemented")
}

// IssueTrackersIssueTrackerNameDelete - Delete an issue tracker.
func (s *IssueTrackersAPIService) IssueTrackersIssueTrackerNameDelete(ctx context.Context) (ImplResponse, error) {
	// TODO - update IssueTrackersIssueTrackerNameDelete with the required logic for this service method.
	// Add api_issue_trackers_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(404, Object{}) or use other options such as http.Ok ...
	// return Response(404, Object{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("IssueTrackersIssueTrackerNameDelete method not implemented")
}

// IssueTrackersIssueTrackerNameGet - Show an issue tracker.
func (s *IssueTrackersAPIService) IssueTrackersIssueTrackerNameGet(ctx context.Context, issueTrackerName string) (ImplResponse, error) {
	// TODO - update IssueTrackersIssueTrackerNameGet with the required logic for this service method.
	// Add api_issue_trackers_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Object{}) or use other options such as http.Ok ...
	// return Response(200, Object{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(404, Object{}) or use other options such as http.Ok ...
	// return Response(404, Object{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("IssueTrackersIssueTrackerNameGet method not implemented")
}

// IssueTrackersIssueTrackerNameIssuesIssueNameGet - Show an issue of an issue tracker.
func (s *IssueTrackersAPIService) IssueTrackersIssueTrackerNameIssuesIssueNameGet(ctx context.Context, issueName string) (ImplResponse, error) {
	// TODO - update IssueTrackersIssueTrackerNameIssuesIssueNameGet with the required logic for this service method.
	// Add api_issue_trackers_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, IssueTrackersIssueTrackerNameIssuesIssueNameGet200Response{}) or use other options such as http.Ok ...
	// return Response(200, IssueTrackersIssueTrackerNameIssuesIssueNameGet200Response{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	// TODO: Uncomment the next line to return response Response(404, Object{}) or use other options such as http.Ok ...
	// return Response(404, Object{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("IssueTrackersIssueTrackerNameIssuesIssueNameGet method not implemented")
}

// IssueTrackersIssueTrackerNamePut - Update or create an issue tracker.
func (s *IssueTrackersAPIService) IssueTrackersIssueTrackerNamePut(ctx context.Context, body Object) (ImplResponse, error) {
	// TODO - update IssueTrackersIssueTrackerNamePut with the required logic for this service method.
	// Add api_issue_trackers_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(400, Object{}) or use other options such as http.Ok ...
	// return Response(400, Object{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("IssueTrackersIssueTrackerNamePut method not implemented")
}

// IssueTrackersPost - Create an issue tracker.
func (s *IssueTrackersAPIService) IssueTrackersPost(ctx context.Context, body Object) (ImplResponse, error) {
	// TODO - update IssueTrackersPost with the required logic for this service method.
	// Add api_issue_trackers_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(400, Object{}) or use other options such as http.Ok ...
	// return Response(400, Object{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("IssueTrackersPost method not implemented")
}
