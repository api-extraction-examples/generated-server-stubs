/*
 * Mastodon API Specification (https://github.com/mastodon/mastodon)
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 * Contact: sardo@hey.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi




// Emoji - Represents a custom emoji.
type Emoji struct {

	// Used for sorting custom emoji in the picker.
	Category string `json:"category,omitempty"`

	// The name of the custom emoji.
	Shortcode string `json:"shortcode"`

	// A link to a static copy of the custom emoji. The format is URL.
	StaticUrl string `json:"static_url"`

	// A link to the custom emoji. The format is URL.
	Url string `json:"url"`

	// Whether this Emoji should be visible in the picker or unlisted.
	VisibleInPicker bool `json:"visible_in_picker"`
}

// AssertEmojiRequired checks if the required fields are not zero-ed
func AssertEmojiRequired(obj Emoji) error {
	elements := map[string]interface{}{
		"shortcode": obj.Shortcode,
		"static_url": obj.StaticUrl,
		"url": obj.Url,
		"visible_in_picker": obj.VisibleInPicker,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertEmojiConstraints checks if the values respects the defined constraints
func AssertEmojiConstraints(obj Emoji) error {
	return nil
}
