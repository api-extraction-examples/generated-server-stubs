/*
 * Mastodon API Specification (https://github.com/mastodon/mastodon)
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 * Contact: sardo@hey.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi




// Instance - Represents the software instance of Mastodon running on this domain.
type Instance struct {

	// Whether registrations require moderator approval.
	ApprovalRequired bool `json:"approval_required"`

	ContactAccount Account `json:"contact_account,omitempty"`

	// Admin-defined description of the Mastodon site.
	Description string `json:"description"`

	// An email that may be contacted for any inquiries.
	Email string `json:"email"`

	// Whether invites are enabled.
	InvitesEnabled bool `json:"invites_enabled"`

	// Primary languages of the website and its staff. ISO 639 Part 1-5 language codes.
	Languages []string `json:"languages"`

	// Whether registrations are enabled.
	Registrations bool `json:"registrations"`

	// A shorter description defined by the admin.
	ShortDescription string `json:"short_description"`

	// Statistics about how much information the instance contains.
	Stats map[string]interface{} `json:"stats"`

	// Banner image for the website.
	Thumbnail *string `json:"thumbnail,omitempty"`

	// The title of the website.
	Title string `json:"title"`

	// The domain name of the instance.
	Uri string `json:"uri"`

	// URLs of interest for clients apps.
	Urls map[string]interface{} `json:"urls"`

	// The version of Mastodon installed on the instance.
	Version string `json:"version"`
}

// AssertInstanceRequired checks if the required fields are not zero-ed
func AssertInstanceRequired(obj Instance) error {
	elements := map[string]interface{}{
		"approval_required": obj.ApprovalRequired,
		"description": obj.Description,
		"email": obj.Email,
		"invites_enabled": obj.InvitesEnabled,
		"languages": obj.Languages,
		"registrations": obj.Registrations,
		"short_description": obj.ShortDescription,
		"stats": obj.Stats,
		"title": obj.Title,
		"uri": obj.Uri,
		"urls": obj.Urls,
		"version": obj.Version,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertAccountRequired(obj.ContactAccount); err != nil {
		return err
	}
	return nil
}

// AssertInstanceConstraints checks if the values respects the defined constraints
func AssertInstanceConstraints(obj Instance) error {
	return nil
}
