/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.4.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"fmt"
)



type BetaInviteType string

// List of BetaInviteType
const (
	EMAIL BetaInviteType = "EMAIL"
	PUBLIC_LINK BetaInviteType = "PUBLIC_LINK"
)

// AllowedBetaInviteTypeEnumValues is all the allowed values of BetaInviteType enum
var AllowedBetaInviteTypeEnumValues = []BetaInviteType{
	"EMAIL",
	"PUBLIC_LINK",
}

// validBetaInviteTypeEnumValue provides a map of BetaInviteTypes for fast verification of use input
var validBetaInviteTypeEnumValues = map[BetaInviteType]struct{}{
	"EMAIL": {},
	"PUBLIC_LINK": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v BetaInviteType) IsValid() bool {
	_, ok := validBetaInviteTypeEnumValues[v]
	return ok
}

// NewBetaInviteTypeFromValue returns a pointer to a valid BetaInviteType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewBetaInviteTypeFromValue(v string) (BetaInviteType, error) {
	ev := BetaInviteType(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for BetaInviteType: valid values are %v", v, AllowedBetaInviteTypeEnumValues)
	}
}



// AssertBetaInviteTypeRequired checks if the required fields are not zero-ed
func AssertBetaInviteTypeRequired(obj BetaInviteType) error {
	return nil
}

// AssertBetaInviteTypeConstraints checks if the values respects the defined constraints
func AssertBetaInviteTypeConstraints(obj BetaInviteType) error {
	return nil
}
