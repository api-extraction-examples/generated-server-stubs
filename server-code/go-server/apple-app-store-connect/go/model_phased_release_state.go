/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.4.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"fmt"
)



type PhasedReleaseState string

// List of PhasedReleaseState
const (
	INACTIVE PhasedReleaseState = "INACTIVE"
	ACTIVE PhasedReleaseState = "ACTIVE"
	PAUSED PhasedReleaseState = "PAUSED"
	COMPLETE PhasedReleaseState = "COMPLETE"
)

// AllowedPhasedReleaseStateEnumValues is all the allowed values of PhasedReleaseState enum
var AllowedPhasedReleaseStateEnumValues = []PhasedReleaseState{
	"INACTIVE",
	"ACTIVE",
	"PAUSED",
	"COMPLETE",
}

// validPhasedReleaseStateEnumValue provides a map of PhasedReleaseStates for fast verification of use input
var validPhasedReleaseStateEnumValues = map[PhasedReleaseState]struct{}{
	"INACTIVE": {},
	"ACTIVE": {},
	"PAUSED": {},
	"COMPLETE": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PhasedReleaseState) IsValid() bool {
	_, ok := validPhasedReleaseStateEnumValues[v]
	return ok
}

// NewPhasedReleaseStateFromValue returns a pointer to a valid PhasedReleaseState
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPhasedReleaseStateFromValue(v string) (PhasedReleaseState, error) {
	ev := PhasedReleaseState(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for PhasedReleaseState: valid values are %v", v, AllowedPhasedReleaseStateEnumValues)
	}
}



// AssertPhasedReleaseStateRequired checks if the required fields are not zero-ed
func AssertPhasedReleaseStateRequired(obj PhasedReleaseState) error {
	return nil
}

// AssertPhasedReleaseStateConstraints checks if the values respects the defined constraints
func AssertPhasedReleaseStateConstraints(obj PhasedReleaseState) error {
	return nil
}
