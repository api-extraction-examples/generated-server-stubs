/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.4.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// BetaLicenseAgreementsAPIService is a service that implements the logic for the BetaLicenseAgreementsAPIServicer
// This service should implement the business logic for every endpoint for the BetaLicenseAgreementsAPI API.
// Include any external packages or services that will be required by this service.
type BetaLicenseAgreementsAPIService struct {
}

// NewBetaLicenseAgreementsAPIService creates a default api service
func NewBetaLicenseAgreementsAPIService() BetaLicenseAgreementsAPIServicer {
	return &BetaLicenseAgreementsAPIService{}
}

// BetaLicenseAgreementsAppGetToOneRelated - 
func (s *BetaLicenseAgreementsAPIService) BetaLicenseAgreementsAppGetToOneRelated(ctx context.Context, id string, fieldsApps []string) (ImplResponse, error) {
	// TODO - update BetaLicenseAgreementsAppGetToOneRelated with the required logic for this service method.
	// Add api_beta_license_agreements_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, AppResponse{}) or use other options such as http.Ok ...
	// return Response(200, AppResponse{}), nil

	// TODO: Uncomment the next line to return response Response(400, ErrorResponse{}) or use other options such as http.Ok ...
	// return Response(400, ErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(403, ErrorResponse{}) or use other options such as http.Ok ...
	// return Response(403, ErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(404, ErrorResponse{}) or use other options such as http.Ok ...
	// return Response(404, ErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("BetaLicenseAgreementsAppGetToOneRelated method not implemented")
}

// BetaLicenseAgreementsGetCollection - 
func (s *BetaLicenseAgreementsAPIService) BetaLicenseAgreementsGetCollection(ctx context.Context, filterApp []string, fieldsBetaLicenseAgreements []string, limit int32, include []string, fieldsApps []string) (ImplResponse, error) {
	// TODO - update BetaLicenseAgreementsGetCollection with the required logic for this service method.
	// Add api_beta_license_agreements_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, BetaLicenseAgreementsResponse{}) or use other options such as http.Ok ...
	// return Response(200, BetaLicenseAgreementsResponse{}), nil

	// TODO: Uncomment the next line to return response Response(400, ErrorResponse{}) or use other options such as http.Ok ...
	// return Response(400, ErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(403, ErrorResponse{}) or use other options such as http.Ok ...
	// return Response(403, ErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("BetaLicenseAgreementsGetCollection method not implemented")
}

// BetaLicenseAgreementsGetInstance - 
func (s *BetaLicenseAgreementsAPIService) BetaLicenseAgreementsGetInstance(ctx context.Context, id string, fieldsBetaLicenseAgreements []string, include []string, fieldsApps []string) (ImplResponse, error) {
	// TODO - update BetaLicenseAgreementsGetInstance with the required logic for this service method.
	// Add api_beta_license_agreements_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, BetaLicenseAgreementResponse{}) or use other options such as http.Ok ...
	// return Response(200, BetaLicenseAgreementResponse{}), nil

	// TODO: Uncomment the next line to return response Response(400, ErrorResponse{}) or use other options such as http.Ok ...
	// return Response(400, ErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(403, ErrorResponse{}) or use other options such as http.Ok ...
	// return Response(403, ErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(404, ErrorResponse{}) or use other options such as http.Ok ...
	// return Response(404, ErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("BetaLicenseAgreementsGetInstance method not implemented")
}

// BetaLicenseAgreementsUpdateInstance - 
func (s *BetaLicenseAgreementsAPIService) BetaLicenseAgreementsUpdateInstance(ctx context.Context, id string, betaLicenseAgreementUpdateRequest BetaLicenseAgreementUpdateRequest) (ImplResponse, error) {
	// TODO - update BetaLicenseAgreementsUpdateInstance with the required logic for this service method.
	// Add api_beta_license_agreements_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, BetaLicenseAgreementResponse{}) or use other options such as http.Ok ...
	// return Response(200, BetaLicenseAgreementResponse{}), nil

	// TODO: Uncomment the next line to return response Response(400, ErrorResponse{}) or use other options such as http.Ok ...
	// return Response(400, ErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(403, ErrorResponse{}) or use other options such as http.Ok ...
	// return Response(403, ErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(404, ErrorResponse{}) or use other options such as http.Ok ...
	// return Response(404, ErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(409, ErrorResponse{}) or use other options such as http.Ok ...
	// return Response(409, ErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("BetaLicenseAgreementsUpdateInstance method not implemented")
}
