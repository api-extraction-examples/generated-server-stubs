/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.4.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"fmt"
)



type Platform string

// List of Platform
const (
	IOS Platform = "IOS"
	MAC_OS Platform = "MAC_OS"
	TV_OS Platform = "TV_OS"
)

// AllowedPlatformEnumValues is all the allowed values of Platform enum
var AllowedPlatformEnumValues = []Platform{
	"IOS",
	"MAC_OS",
	"TV_OS",
}

// validPlatformEnumValue provides a map of Platforms for fast verification of use input
var validPlatformEnumValues = map[Platform]struct{}{
	"IOS": {},
	"MAC_OS": {},
	"TV_OS": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Platform) IsValid() bool {
	_, ok := validPlatformEnumValues[v]
	return ok
}

// NewPlatformFromValue returns a pointer to a valid Platform
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPlatformFromValue(v string) (Platform, error) {
	ev := Platform(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for Platform: valid values are %v", v, AllowedPlatformEnumValues)
	}
}



// AssertPlatformRequired checks if the required fields are not zero-ed
func AssertPlatformRequired(obj Platform) error {
	return nil
}

// AssertPlatformConstraints checks if the values respects the defined constraints
func AssertPlatformConstraints(obj Platform) error {
	return nil
}
