/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.4.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// BuildBetaNotificationsAPIService is a service that implements the logic for the BuildBetaNotificationsAPIServicer
// This service should implement the business logic for every endpoint for the BuildBetaNotificationsAPI API.
// Include any external packages or services that will be required by this service.
type BuildBetaNotificationsAPIService struct {
}

// NewBuildBetaNotificationsAPIService creates a default api service
func NewBuildBetaNotificationsAPIService() BuildBetaNotificationsAPIServicer {
	return &BuildBetaNotificationsAPIService{}
}

// BuildBetaNotificationsCreateInstance - 
func (s *BuildBetaNotificationsAPIService) BuildBetaNotificationsCreateInstance(ctx context.Context, buildBetaNotificationCreateRequest BuildBetaNotificationCreateRequest) (ImplResponse, error) {
	// TODO - update BuildBetaNotificationsCreateInstance with the required logic for this service method.
	// Add api_build_beta_notifications_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, BuildBetaNotificationResponse{}) or use other options such as http.Ok ...
	// return Response(201, BuildBetaNotificationResponse{}), nil

	// TODO: Uncomment the next line to return response Response(400, ErrorResponse{}) or use other options such as http.Ok ...
	// return Response(400, ErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(403, ErrorResponse{}) or use other options such as http.Ok ...
	// return Response(403, ErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(409, ErrorResponse{}) or use other options such as http.Ok ...
	// return Response(409, ErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("BuildBetaNotificationsCreateInstance method not implemented")
}
