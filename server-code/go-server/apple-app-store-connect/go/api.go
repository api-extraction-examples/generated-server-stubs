/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.4.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
)



// AgeRatingDeclarationsAPIRouter defines the required methods for binding the api requests to a responses for the AgeRatingDeclarationsAPI
// The AgeRatingDeclarationsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AgeRatingDeclarationsAPIServicer to perform the required actions, then write the service results to the http response.
type AgeRatingDeclarationsAPIRouter interface { 
	AgeRatingDeclarationsUpdateInstance(http.ResponseWriter, *http.Request)
}
// AppCategoriesAPIRouter defines the required methods for binding the api requests to a responses for the AppCategoriesAPI
// The AppCategoriesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AppCategoriesAPIServicer to perform the required actions, then write the service results to the http response.
type AppCategoriesAPIRouter interface { 
	AppCategoriesGetCollection(http.ResponseWriter, *http.Request)
	AppCategoriesGetInstance(http.ResponseWriter, *http.Request)
	AppCategoriesParentGetToOneRelated(http.ResponseWriter, *http.Request)
	AppCategoriesSubcategoriesGetToManyRelated(http.ResponseWriter, *http.Request)
}
// AppEncryptionDeclarationsAPIRouter defines the required methods for binding the api requests to a responses for the AppEncryptionDeclarationsAPI
// The AppEncryptionDeclarationsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AppEncryptionDeclarationsAPIServicer to perform the required actions, then write the service results to the http response.
type AppEncryptionDeclarationsAPIRouter interface { 
	AppEncryptionDeclarationsAppGetToOneRelated(http.ResponseWriter, *http.Request)
	AppEncryptionDeclarationsBuildsCreateToManyRelationship(http.ResponseWriter, *http.Request)
	AppEncryptionDeclarationsGetCollection(http.ResponseWriter, *http.Request)
	AppEncryptionDeclarationsGetInstance(http.ResponseWriter, *http.Request)
}
// AppInfoLocalizationsAPIRouter defines the required methods for binding the api requests to a responses for the AppInfoLocalizationsAPI
// The AppInfoLocalizationsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AppInfoLocalizationsAPIServicer to perform the required actions, then write the service results to the http response.
type AppInfoLocalizationsAPIRouter interface { 
	AppInfoLocalizationsCreateInstance(http.ResponseWriter, *http.Request)
	AppInfoLocalizationsDeleteInstance(http.ResponseWriter, *http.Request)
	AppInfoLocalizationsGetInstance(http.ResponseWriter, *http.Request)
	AppInfoLocalizationsUpdateInstance(http.ResponseWriter, *http.Request)
}
// AppInfosAPIRouter defines the required methods for binding the api requests to a responses for the AppInfosAPI
// The AppInfosAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AppInfosAPIServicer to perform the required actions, then write the service results to the http response.
type AppInfosAPIRouter interface { 
	AppInfosAgeRatingDeclarationGetToOneRelated(http.ResponseWriter, *http.Request)
	AppInfosAppInfoLocalizationsGetToManyRelated(http.ResponseWriter, *http.Request)
	AppInfosGetInstance(http.ResponseWriter, *http.Request)
	AppInfosPrimaryCategoryGetToOneRelated(http.ResponseWriter, *http.Request)
	AppInfosPrimarySubcategoryOneGetToOneRelated(http.ResponseWriter, *http.Request)
	AppInfosPrimarySubcategoryTwoGetToOneRelated(http.ResponseWriter, *http.Request)
	AppInfosSecondaryCategoryGetToOneRelated(http.ResponseWriter, *http.Request)
	AppInfosSecondarySubcategoryOneGetToOneRelated(http.ResponseWriter, *http.Request)
	AppInfosSecondarySubcategoryTwoGetToOneRelated(http.ResponseWriter, *http.Request)
	AppInfosUpdateInstance(http.ResponseWriter, *http.Request)
}
// AppPreOrdersAPIRouter defines the required methods for binding the api requests to a responses for the AppPreOrdersAPI
// The AppPreOrdersAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AppPreOrdersAPIServicer to perform the required actions, then write the service results to the http response.
type AppPreOrdersAPIRouter interface { 
	AppPreOrdersCreateInstance(http.ResponseWriter, *http.Request)
	AppPreOrdersDeleteInstance(http.ResponseWriter, *http.Request)
	AppPreOrdersGetInstance(http.ResponseWriter, *http.Request)
	AppPreOrdersUpdateInstance(http.ResponseWriter, *http.Request)
}
// AppPreviewSetsAPIRouter defines the required methods for binding the api requests to a responses for the AppPreviewSetsAPI
// The AppPreviewSetsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AppPreviewSetsAPIServicer to perform the required actions, then write the service results to the http response.
type AppPreviewSetsAPIRouter interface { 
	AppPreviewSetsAppPreviewsGetToManyRelated(http.ResponseWriter, *http.Request)
	AppPreviewSetsAppPreviewsGetToManyRelationship(http.ResponseWriter, *http.Request)
	AppPreviewSetsAppPreviewsReplaceToManyRelationship(http.ResponseWriter, *http.Request)
	AppPreviewSetsCreateInstance(http.ResponseWriter, *http.Request)
	AppPreviewSetsDeleteInstance(http.ResponseWriter, *http.Request)
	AppPreviewSetsGetInstance(http.ResponseWriter, *http.Request)
}
// AppPreviewsAPIRouter defines the required methods for binding the api requests to a responses for the AppPreviewsAPI
// The AppPreviewsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AppPreviewsAPIServicer to perform the required actions, then write the service results to the http response.
type AppPreviewsAPIRouter interface { 
	AppPreviewsCreateInstance(http.ResponseWriter, *http.Request)
	AppPreviewsDeleteInstance(http.ResponseWriter, *http.Request)
	AppPreviewsGetInstance(http.ResponseWriter, *http.Request)
	AppPreviewsUpdateInstance(http.ResponseWriter, *http.Request)
}
// AppPricePointsAPIRouter defines the required methods for binding the api requests to a responses for the AppPricePointsAPI
// The AppPricePointsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AppPricePointsAPIServicer to perform the required actions, then write the service results to the http response.
type AppPricePointsAPIRouter interface { 
	AppPricePointsGetCollection(http.ResponseWriter, *http.Request)
	AppPricePointsGetInstance(http.ResponseWriter, *http.Request)
	AppPricePointsTerritoryGetToOneRelated(http.ResponseWriter, *http.Request)
}
// AppPriceTiersAPIRouter defines the required methods for binding the api requests to a responses for the AppPriceTiersAPI
// The AppPriceTiersAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AppPriceTiersAPIServicer to perform the required actions, then write the service results to the http response.
type AppPriceTiersAPIRouter interface { 
	AppPriceTiersGetCollection(http.ResponseWriter, *http.Request)
	AppPriceTiersGetInstance(http.ResponseWriter, *http.Request)
	AppPriceTiersPricePointsGetToManyRelated(http.ResponseWriter, *http.Request)
}
// AppPricesAPIRouter defines the required methods for binding the api requests to a responses for the AppPricesAPI
// The AppPricesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AppPricesAPIServicer to perform the required actions, then write the service results to the http response.
type AppPricesAPIRouter interface { 
	AppPricesGetInstance(http.ResponseWriter, *http.Request)
}
// AppScreenshotSetsAPIRouter defines the required methods for binding the api requests to a responses for the AppScreenshotSetsAPI
// The AppScreenshotSetsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AppScreenshotSetsAPIServicer to perform the required actions, then write the service results to the http response.
type AppScreenshotSetsAPIRouter interface { 
	AppScreenshotSetsAppScreenshotsGetToManyRelated(http.ResponseWriter, *http.Request)
	AppScreenshotSetsAppScreenshotsGetToManyRelationship(http.ResponseWriter, *http.Request)
	AppScreenshotSetsAppScreenshotsReplaceToManyRelationship(http.ResponseWriter, *http.Request)
	AppScreenshotSetsCreateInstance(http.ResponseWriter, *http.Request)
	AppScreenshotSetsDeleteInstance(http.ResponseWriter, *http.Request)
	AppScreenshotSetsGetInstance(http.ResponseWriter, *http.Request)
}
// AppScreenshotsAPIRouter defines the required methods for binding the api requests to a responses for the AppScreenshotsAPI
// The AppScreenshotsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AppScreenshotsAPIServicer to perform the required actions, then write the service results to the http response.
type AppScreenshotsAPIRouter interface { 
	AppScreenshotsCreateInstance(http.ResponseWriter, *http.Request)
	AppScreenshotsDeleteInstance(http.ResponseWriter, *http.Request)
	AppScreenshotsGetInstance(http.ResponseWriter, *http.Request)
	AppScreenshotsUpdateInstance(http.ResponseWriter, *http.Request)
}
// AppStoreReviewAttachmentsAPIRouter defines the required methods for binding the api requests to a responses for the AppStoreReviewAttachmentsAPI
// The AppStoreReviewAttachmentsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AppStoreReviewAttachmentsAPIServicer to perform the required actions, then write the service results to the http response.
type AppStoreReviewAttachmentsAPIRouter interface { 
	AppStoreReviewAttachmentsCreateInstance(http.ResponseWriter, *http.Request)
	AppStoreReviewAttachmentsDeleteInstance(http.ResponseWriter, *http.Request)
	AppStoreReviewAttachmentsGetInstance(http.ResponseWriter, *http.Request)
	AppStoreReviewAttachmentsUpdateInstance(http.ResponseWriter, *http.Request)
}
// AppStoreReviewDetailsAPIRouter defines the required methods for binding the api requests to a responses for the AppStoreReviewDetailsAPI
// The AppStoreReviewDetailsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AppStoreReviewDetailsAPIServicer to perform the required actions, then write the service results to the http response.
type AppStoreReviewDetailsAPIRouter interface { 
	AppStoreReviewDetailsAppStoreReviewAttachmentsGetToManyRelated(http.ResponseWriter, *http.Request)
	AppStoreReviewDetailsCreateInstance(http.ResponseWriter, *http.Request)
	AppStoreReviewDetailsGetInstance(http.ResponseWriter, *http.Request)
	AppStoreReviewDetailsUpdateInstance(http.ResponseWriter, *http.Request)
}
// AppStoreVersionLocalizationsAPIRouter defines the required methods for binding the api requests to a responses for the AppStoreVersionLocalizationsAPI
// The AppStoreVersionLocalizationsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AppStoreVersionLocalizationsAPIServicer to perform the required actions, then write the service results to the http response.
type AppStoreVersionLocalizationsAPIRouter interface { 
	AppStoreVersionLocalizationsAppPreviewSetsGetToManyRelated(http.ResponseWriter, *http.Request)
	AppStoreVersionLocalizationsAppScreenshotSetsGetToManyRelated(http.ResponseWriter, *http.Request)
	AppStoreVersionLocalizationsCreateInstance(http.ResponseWriter, *http.Request)
	AppStoreVersionLocalizationsDeleteInstance(http.ResponseWriter, *http.Request)
	AppStoreVersionLocalizationsGetInstance(http.ResponseWriter, *http.Request)
	AppStoreVersionLocalizationsUpdateInstance(http.ResponseWriter, *http.Request)
}
// AppStoreVersionPhasedReleasesAPIRouter defines the required methods for binding the api requests to a responses for the AppStoreVersionPhasedReleasesAPI
// The AppStoreVersionPhasedReleasesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AppStoreVersionPhasedReleasesAPIServicer to perform the required actions, then write the service results to the http response.
type AppStoreVersionPhasedReleasesAPIRouter interface { 
	AppStoreVersionPhasedReleasesCreateInstance(http.ResponseWriter, *http.Request)
	AppStoreVersionPhasedReleasesDeleteInstance(http.ResponseWriter, *http.Request)
	AppStoreVersionPhasedReleasesUpdateInstance(http.ResponseWriter, *http.Request)
}
// AppStoreVersionSubmissionsAPIRouter defines the required methods for binding the api requests to a responses for the AppStoreVersionSubmissionsAPI
// The AppStoreVersionSubmissionsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AppStoreVersionSubmissionsAPIServicer to perform the required actions, then write the service results to the http response.
type AppStoreVersionSubmissionsAPIRouter interface { 
	AppStoreVersionSubmissionsCreateInstance(http.ResponseWriter, *http.Request)
	AppStoreVersionSubmissionsDeleteInstance(http.ResponseWriter, *http.Request)
}
// AppStoreVersionsAPIRouter defines the required methods for binding the api requests to a responses for the AppStoreVersionsAPI
// The AppStoreVersionsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AppStoreVersionsAPIServicer to perform the required actions, then write the service results to the http response.
type AppStoreVersionsAPIRouter interface { 
	// Deprecated
	AppStoreVersionsAgeRatingDeclarationGetToOneRelated(http.ResponseWriter, *http.Request)
	AppStoreVersionsAppStoreReviewDetailGetToOneRelated(http.ResponseWriter, *http.Request)
	AppStoreVersionsAppStoreVersionLocalizationsGetToManyRelated(http.ResponseWriter, *http.Request)
	AppStoreVersionsAppStoreVersionPhasedReleaseGetToOneRelated(http.ResponseWriter, *http.Request)
	AppStoreVersionsAppStoreVersionSubmissionGetToOneRelated(http.ResponseWriter, *http.Request)
	AppStoreVersionsBuildGetToOneRelated(http.ResponseWriter, *http.Request)
	AppStoreVersionsBuildGetToOneRelationship(http.ResponseWriter, *http.Request)
	AppStoreVersionsBuildUpdateToOneRelationship(http.ResponseWriter, *http.Request)
	AppStoreVersionsCreateInstance(http.ResponseWriter, *http.Request)
	AppStoreVersionsDeleteInstance(http.ResponseWriter, *http.Request)
	AppStoreVersionsGetInstance(http.ResponseWriter, *http.Request)
	AppStoreVersionsIdfaDeclarationGetToOneRelated(http.ResponseWriter, *http.Request)
	AppStoreVersionsRoutingAppCoverageGetToOneRelated(http.ResponseWriter, *http.Request)
	AppStoreVersionsUpdateInstance(http.ResponseWriter, *http.Request)
}
// AppsAPIRouter defines the required methods for binding the api requests to a responses for the AppsAPI
// The AppsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AppsAPIServicer to perform the required actions, then write the service results to the http response.
type AppsAPIRouter interface { 
	AppsAppInfosGetToManyRelated(http.ResponseWriter, *http.Request)
	AppsAppStoreVersionsGetToManyRelated(http.ResponseWriter, *http.Request)
	AppsAvailableTerritoriesGetToManyRelated(http.ResponseWriter, *http.Request)
	AppsBetaAppLocalizationsGetToManyRelated(http.ResponseWriter, *http.Request)
	AppsBetaAppReviewDetailGetToOneRelated(http.ResponseWriter, *http.Request)
	AppsBetaGroupsGetToManyRelated(http.ResponseWriter, *http.Request)
	AppsBetaLicenseAgreementGetToOneRelated(http.ResponseWriter, *http.Request)
	AppsBetaTestersDeleteToManyRelationship(http.ResponseWriter, *http.Request)
	AppsBuildsGetToManyRelated(http.ResponseWriter, *http.Request)
	AppsEndUserLicenseAgreementGetToOneRelated(http.ResponseWriter, *http.Request)
	AppsGameCenterEnabledVersionsGetToManyRelated(http.ResponseWriter, *http.Request)
	AppsGetCollection(http.ResponseWriter, *http.Request)
	AppsGetInstance(http.ResponseWriter, *http.Request)
	AppsInAppPurchasesGetToManyRelated(http.ResponseWriter, *http.Request)
	AppsPerfPowerMetricsGetToManyRelated(http.ResponseWriter, *http.Request)
	AppsPreOrderGetToOneRelated(http.ResponseWriter, *http.Request)
	AppsPreReleaseVersionsGetToManyRelated(http.ResponseWriter, *http.Request)
	AppsPricesGetToManyRelated(http.ResponseWriter, *http.Request)
	AppsUpdateInstance(http.ResponseWriter, *http.Request)
}
// BetaAppLocalizationsAPIRouter defines the required methods for binding the api requests to a responses for the BetaAppLocalizationsAPI
// The BetaAppLocalizationsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BetaAppLocalizationsAPIServicer to perform the required actions, then write the service results to the http response.
type BetaAppLocalizationsAPIRouter interface { 
	BetaAppLocalizationsAppGetToOneRelated(http.ResponseWriter, *http.Request)
	BetaAppLocalizationsCreateInstance(http.ResponseWriter, *http.Request)
	BetaAppLocalizationsDeleteInstance(http.ResponseWriter, *http.Request)
	BetaAppLocalizationsGetCollection(http.ResponseWriter, *http.Request)
	BetaAppLocalizationsGetInstance(http.ResponseWriter, *http.Request)
	BetaAppLocalizationsUpdateInstance(http.ResponseWriter, *http.Request)
}
// BetaAppReviewDetailsAPIRouter defines the required methods for binding the api requests to a responses for the BetaAppReviewDetailsAPI
// The BetaAppReviewDetailsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BetaAppReviewDetailsAPIServicer to perform the required actions, then write the service results to the http response.
type BetaAppReviewDetailsAPIRouter interface { 
	BetaAppReviewDetailsAppGetToOneRelated(http.ResponseWriter, *http.Request)
	BetaAppReviewDetailsGetCollection(http.ResponseWriter, *http.Request)
	BetaAppReviewDetailsGetInstance(http.ResponseWriter, *http.Request)
	BetaAppReviewDetailsUpdateInstance(http.ResponseWriter, *http.Request)
}
// BetaAppReviewSubmissionsAPIRouter defines the required methods for binding the api requests to a responses for the BetaAppReviewSubmissionsAPI
// The BetaAppReviewSubmissionsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BetaAppReviewSubmissionsAPIServicer to perform the required actions, then write the service results to the http response.
type BetaAppReviewSubmissionsAPIRouter interface { 
	BetaAppReviewSubmissionsBuildGetToOneRelated(http.ResponseWriter, *http.Request)
	BetaAppReviewSubmissionsCreateInstance(http.ResponseWriter, *http.Request)
	BetaAppReviewSubmissionsGetCollection(http.ResponseWriter, *http.Request)
	BetaAppReviewSubmissionsGetInstance(http.ResponseWriter, *http.Request)
}
// BetaBuildLocalizationsAPIRouter defines the required methods for binding the api requests to a responses for the BetaBuildLocalizationsAPI
// The BetaBuildLocalizationsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BetaBuildLocalizationsAPIServicer to perform the required actions, then write the service results to the http response.
type BetaBuildLocalizationsAPIRouter interface { 
	BetaBuildLocalizationsBuildGetToOneRelated(http.ResponseWriter, *http.Request)
	BetaBuildLocalizationsCreateInstance(http.ResponseWriter, *http.Request)
	BetaBuildLocalizationsDeleteInstance(http.ResponseWriter, *http.Request)
	BetaBuildLocalizationsGetCollection(http.ResponseWriter, *http.Request)
	BetaBuildLocalizationsGetInstance(http.ResponseWriter, *http.Request)
	BetaBuildLocalizationsUpdateInstance(http.ResponseWriter, *http.Request)
}
// BetaGroupsAPIRouter defines the required methods for binding the api requests to a responses for the BetaGroupsAPI
// The BetaGroupsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BetaGroupsAPIServicer to perform the required actions, then write the service results to the http response.
type BetaGroupsAPIRouter interface { 
	BetaGroupsAppGetToOneRelated(http.ResponseWriter, *http.Request)
	BetaGroupsBetaTestersCreateToManyRelationship(http.ResponseWriter, *http.Request)
	BetaGroupsBetaTestersDeleteToManyRelationship(http.ResponseWriter, *http.Request)
	BetaGroupsBetaTestersGetToManyRelated(http.ResponseWriter, *http.Request)
	BetaGroupsBetaTestersGetToManyRelationship(http.ResponseWriter, *http.Request)
	BetaGroupsBuildsCreateToManyRelationship(http.ResponseWriter, *http.Request)
	BetaGroupsBuildsDeleteToManyRelationship(http.ResponseWriter, *http.Request)
	BetaGroupsBuildsGetToManyRelated(http.ResponseWriter, *http.Request)
	BetaGroupsBuildsGetToManyRelationship(http.ResponseWriter, *http.Request)
	BetaGroupsCreateInstance(http.ResponseWriter, *http.Request)
	BetaGroupsDeleteInstance(http.ResponseWriter, *http.Request)
	BetaGroupsGetCollection(http.ResponseWriter, *http.Request)
	BetaGroupsGetInstance(http.ResponseWriter, *http.Request)
	BetaGroupsUpdateInstance(http.ResponseWriter, *http.Request)
}
// BetaLicenseAgreementsAPIRouter defines the required methods for binding the api requests to a responses for the BetaLicenseAgreementsAPI
// The BetaLicenseAgreementsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BetaLicenseAgreementsAPIServicer to perform the required actions, then write the service results to the http response.
type BetaLicenseAgreementsAPIRouter interface { 
	BetaLicenseAgreementsAppGetToOneRelated(http.ResponseWriter, *http.Request)
	BetaLicenseAgreementsGetCollection(http.ResponseWriter, *http.Request)
	BetaLicenseAgreementsGetInstance(http.ResponseWriter, *http.Request)
	BetaLicenseAgreementsUpdateInstance(http.ResponseWriter, *http.Request)
}
// BetaTesterInvitationsAPIRouter defines the required methods for binding the api requests to a responses for the BetaTesterInvitationsAPI
// The BetaTesterInvitationsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BetaTesterInvitationsAPIServicer to perform the required actions, then write the service results to the http response.
type BetaTesterInvitationsAPIRouter interface { 
	BetaTesterInvitationsCreateInstance(http.ResponseWriter, *http.Request)
}
// BetaTestersAPIRouter defines the required methods for binding the api requests to a responses for the BetaTestersAPI
// The BetaTestersAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BetaTestersAPIServicer to perform the required actions, then write the service results to the http response.
type BetaTestersAPIRouter interface { 
	BetaTestersAppsDeleteToManyRelationship(http.ResponseWriter, *http.Request)
	BetaTestersAppsGetToManyRelated(http.ResponseWriter, *http.Request)
	BetaTestersAppsGetToManyRelationship(http.ResponseWriter, *http.Request)
	BetaTestersBetaGroupsCreateToManyRelationship(http.ResponseWriter, *http.Request)
	BetaTestersBetaGroupsDeleteToManyRelationship(http.ResponseWriter, *http.Request)
	BetaTestersBetaGroupsGetToManyRelated(http.ResponseWriter, *http.Request)
	BetaTestersBetaGroupsGetToManyRelationship(http.ResponseWriter, *http.Request)
	BetaTestersBuildsCreateToManyRelationship(http.ResponseWriter, *http.Request)
	BetaTestersBuildsDeleteToManyRelationship(http.ResponseWriter, *http.Request)
	BetaTestersBuildsGetToManyRelated(http.ResponseWriter, *http.Request)
	BetaTestersBuildsGetToManyRelationship(http.ResponseWriter, *http.Request)
	BetaTestersCreateInstance(http.ResponseWriter, *http.Request)
	BetaTestersDeleteInstance(http.ResponseWriter, *http.Request)
	BetaTestersGetCollection(http.ResponseWriter, *http.Request)
	BetaTestersGetInstance(http.ResponseWriter, *http.Request)
}
// BuildBetaDetailsAPIRouter defines the required methods for binding the api requests to a responses for the BuildBetaDetailsAPI
// The BuildBetaDetailsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BuildBetaDetailsAPIServicer to perform the required actions, then write the service results to the http response.
type BuildBetaDetailsAPIRouter interface { 
	BuildBetaDetailsBuildGetToOneRelated(http.ResponseWriter, *http.Request)
	BuildBetaDetailsGetCollection(http.ResponseWriter, *http.Request)
	BuildBetaDetailsGetInstance(http.ResponseWriter, *http.Request)
	BuildBetaDetailsUpdateInstance(http.ResponseWriter, *http.Request)
}
// BuildBetaNotificationsAPIRouter defines the required methods for binding the api requests to a responses for the BuildBetaNotificationsAPI
// The BuildBetaNotificationsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BuildBetaNotificationsAPIServicer to perform the required actions, then write the service results to the http response.
type BuildBetaNotificationsAPIRouter interface { 
	BuildBetaNotificationsCreateInstance(http.ResponseWriter, *http.Request)
}
// BuildsAPIRouter defines the required methods for binding the api requests to a responses for the BuildsAPI
// The BuildsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BuildsAPIServicer to perform the required actions, then write the service results to the http response.
type BuildsAPIRouter interface { 
	BuildsAppEncryptionDeclarationGetToOneRelated(http.ResponseWriter, *http.Request)
	BuildsAppEncryptionDeclarationGetToOneRelationship(http.ResponseWriter, *http.Request)
	BuildsAppEncryptionDeclarationUpdateToOneRelationship(http.ResponseWriter, *http.Request)
	BuildsAppGetToOneRelated(http.ResponseWriter, *http.Request)
	BuildsAppStoreVersionGetToOneRelated(http.ResponseWriter, *http.Request)
	BuildsBetaAppReviewSubmissionGetToOneRelated(http.ResponseWriter, *http.Request)
	BuildsBetaBuildLocalizationsGetToManyRelated(http.ResponseWriter, *http.Request)
	BuildsBetaGroupsCreateToManyRelationship(http.ResponseWriter, *http.Request)
	BuildsBetaGroupsDeleteToManyRelationship(http.ResponseWriter, *http.Request)
	BuildsBuildBetaDetailGetToOneRelated(http.ResponseWriter, *http.Request)
	BuildsDiagnosticSignaturesGetToManyRelated(http.ResponseWriter, *http.Request)
	BuildsGetCollection(http.ResponseWriter, *http.Request)
	BuildsGetInstance(http.ResponseWriter, *http.Request)
	BuildsIconsGetToManyRelated(http.ResponseWriter, *http.Request)
	BuildsIndividualTestersCreateToManyRelationship(http.ResponseWriter, *http.Request)
	BuildsIndividualTestersDeleteToManyRelationship(http.ResponseWriter, *http.Request)
	BuildsIndividualTestersGetToManyRelated(http.ResponseWriter, *http.Request)
	BuildsIndividualTestersGetToManyRelationship(http.ResponseWriter, *http.Request)
	BuildsPerfPowerMetricsGetToManyRelated(http.ResponseWriter, *http.Request)
	BuildsPreReleaseVersionGetToOneRelated(http.ResponseWriter, *http.Request)
	BuildsUpdateInstance(http.ResponseWriter, *http.Request)
}
// BundleIdCapabilitiesAPIRouter defines the required methods for binding the api requests to a responses for the BundleIdCapabilitiesAPI
// The BundleIdCapabilitiesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BundleIdCapabilitiesAPIServicer to perform the required actions, then write the service results to the http response.
type BundleIdCapabilitiesAPIRouter interface { 
	BundleIdCapabilitiesCreateInstance(http.ResponseWriter, *http.Request)
	BundleIdCapabilitiesDeleteInstance(http.ResponseWriter, *http.Request)
	BundleIdCapabilitiesUpdateInstance(http.ResponseWriter, *http.Request)
}
// BundleIdsAPIRouter defines the required methods for binding the api requests to a responses for the BundleIdsAPI
// The BundleIdsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BundleIdsAPIServicer to perform the required actions, then write the service results to the http response.
type BundleIdsAPIRouter interface { 
	BundleIdsAppGetToOneRelated(http.ResponseWriter, *http.Request)
	BundleIdsBundleIdCapabilitiesGetToManyRelated(http.ResponseWriter, *http.Request)
	BundleIdsCreateInstance(http.ResponseWriter, *http.Request)
	BundleIdsDeleteInstance(http.ResponseWriter, *http.Request)
	BundleIdsGetCollection(http.ResponseWriter, *http.Request)
	BundleIdsGetInstance(http.ResponseWriter, *http.Request)
	BundleIdsProfilesGetToManyRelated(http.ResponseWriter, *http.Request)
	BundleIdsUpdateInstance(http.ResponseWriter, *http.Request)
}
// CertificatesAPIRouter defines the required methods for binding the api requests to a responses for the CertificatesAPI
// The CertificatesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a CertificatesAPIServicer to perform the required actions, then write the service results to the http response.
type CertificatesAPIRouter interface { 
	CertificatesCreateInstance(http.ResponseWriter, *http.Request)
	CertificatesDeleteInstance(http.ResponseWriter, *http.Request)
	CertificatesGetCollection(http.ResponseWriter, *http.Request)
	CertificatesGetInstance(http.ResponseWriter, *http.Request)
}
// DevicesAPIRouter defines the required methods for binding the api requests to a responses for the DevicesAPI
// The DevicesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a DevicesAPIServicer to perform the required actions, then write the service results to the http response.
type DevicesAPIRouter interface { 
	DevicesCreateInstance(http.ResponseWriter, *http.Request)
	DevicesGetCollection(http.ResponseWriter, *http.Request)
	DevicesGetInstance(http.ResponseWriter, *http.Request)
	DevicesUpdateInstance(http.ResponseWriter, *http.Request)
}
// DiagnosticSignaturesAPIRouter defines the required methods for binding the api requests to a responses for the DiagnosticSignaturesAPI
// The DiagnosticSignaturesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a DiagnosticSignaturesAPIServicer to perform the required actions, then write the service results to the http response.
type DiagnosticSignaturesAPIRouter interface { 
	DiagnosticSignaturesLogsGetToManyRelated(http.ResponseWriter, *http.Request)
}
// EndUserLicenseAgreementsAPIRouter defines the required methods for binding the api requests to a responses for the EndUserLicenseAgreementsAPI
// The EndUserLicenseAgreementsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a EndUserLicenseAgreementsAPIServicer to perform the required actions, then write the service results to the http response.
type EndUserLicenseAgreementsAPIRouter interface { 
	EndUserLicenseAgreementsCreateInstance(http.ResponseWriter, *http.Request)
	EndUserLicenseAgreementsDeleteInstance(http.ResponseWriter, *http.Request)
	EndUserLicenseAgreementsGetInstance(http.ResponseWriter, *http.Request)
	EndUserLicenseAgreementsTerritoriesGetToManyRelated(http.ResponseWriter, *http.Request)
	EndUserLicenseAgreementsUpdateInstance(http.ResponseWriter, *http.Request)
}
// FinanceReportsAPIRouter defines the required methods for binding the api requests to a responses for the FinanceReportsAPI
// The FinanceReportsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a FinanceReportsAPIServicer to perform the required actions, then write the service results to the http response.
type FinanceReportsAPIRouter interface { 
	FinanceReportsGetCollection(http.ResponseWriter, *http.Request)
}
// GameCenterEnabledVersionsAPIRouter defines the required methods for binding the api requests to a responses for the GameCenterEnabledVersionsAPI
// The GameCenterEnabledVersionsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a GameCenterEnabledVersionsAPIServicer to perform the required actions, then write the service results to the http response.
type GameCenterEnabledVersionsAPIRouter interface { 
	GameCenterEnabledVersionsCompatibleVersionsCreateToManyRelationship(http.ResponseWriter, *http.Request)
	GameCenterEnabledVersionsCompatibleVersionsDeleteToManyRelationship(http.ResponseWriter, *http.Request)
	GameCenterEnabledVersionsCompatibleVersionsGetToManyRelated(http.ResponseWriter, *http.Request)
	GameCenterEnabledVersionsCompatibleVersionsGetToManyRelationship(http.ResponseWriter, *http.Request)
	GameCenterEnabledVersionsCompatibleVersionsReplaceToManyRelationship(http.ResponseWriter, *http.Request)
}
// IdfaDeclarationsAPIRouter defines the required methods for binding the api requests to a responses for the IdfaDeclarationsAPI
// The IdfaDeclarationsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a IdfaDeclarationsAPIServicer to perform the required actions, then write the service results to the http response.
type IdfaDeclarationsAPIRouter interface { 
	IdfaDeclarationsCreateInstance(http.ResponseWriter, *http.Request)
	IdfaDeclarationsDeleteInstance(http.ResponseWriter, *http.Request)
	IdfaDeclarationsUpdateInstance(http.ResponseWriter, *http.Request)
}
// InAppPurchasesAPIRouter defines the required methods for binding the api requests to a responses for the InAppPurchasesAPI
// The InAppPurchasesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a InAppPurchasesAPIServicer to perform the required actions, then write the service results to the http response.
type InAppPurchasesAPIRouter interface { 
	InAppPurchasesGetInstance(http.ResponseWriter, *http.Request)
}
// PreReleaseVersionsAPIRouter defines the required methods for binding the api requests to a responses for the PreReleaseVersionsAPI
// The PreReleaseVersionsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a PreReleaseVersionsAPIServicer to perform the required actions, then write the service results to the http response.
type PreReleaseVersionsAPIRouter interface { 
	PreReleaseVersionsAppGetToOneRelated(http.ResponseWriter, *http.Request)
	PreReleaseVersionsBuildsGetToManyRelated(http.ResponseWriter, *http.Request)
	PreReleaseVersionsGetCollection(http.ResponseWriter, *http.Request)
	PreReleaseVersionsGetInstance(http.ResponseWriter, *http.Request)
}
// ProfilesAPIRouter defines the required methods for binding the api requests to a responses for the ProfilesAPI
// The ProfilesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ProfilesAPIServicer to perform the required actions, then write the service results to the http response.
type ProfilesAPIRouter interface { 
	ProfilesBundleIdGetToOneRelated(http.ResponseWriter, *http.Request)
	ProfilesCertificatesGetToManyRelated(http.ResponseWriter, *http.Request)
	ProfilesCreateInstance(http.ResponseWriter, *http.Request)
	ProfilesDeleteInstance(http.ResponseWriter, *http.Request)
	ProfilesDevicesGetToManyRelated(http.ResponseWriter, *http.Request)
	ProfilesGetCollection(http.ResponseWriter, *http.Request)
	ProfilesGetInstance(http.ResponseWriter, *http.Request)
}
// RoutingAppCoveragesAPIRouter defines the required methods for binding the api requests to a responses for the RoutingAppCoveragesAPI
// The RoutingAppCoveragesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a RoutingAppCoveragesAPIServicer to perform the required actions, then write the service results to the http response.
type RoutingAppCoveragesAPIRouter interface { 
	RoutingAppCoveragesCreateInstance(http.ResponseWriter, *http.Request)
	RoutingAppCoveragesDeleteInstance(http.ResponseWriter, *http.Request)
	RoutingAppCoveragesGetInstance(http.ResponseWriter, *http.Request)
	RoutingAppCoveragesUpdateInstance(http.ResponseWriter, *http.Request)
}
// SalesReportsAPIRouter defines the required methods for binding the api requests to a responses for the SalesReportsAPI
// The SalesReportsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a SalesReportsAPIServicer to perform the required actions, then write the service results to the http response.
type SalesReportsAPIRouter interface { 
	SalesReportsGetCollection(http.ResponseWriter, *http.Request)
}
// TerritoriesAPIRouter defines the required methods for binding the api requests to a responses for the TerritoriesAPI
// The TerritoriesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a TerritoriesAPIServicer to perform the required actions, then write the service results to the http response.
type TerritoriesAPIRouter interface { 
	TerritoriesGetCollection(http.ResponseWriter, *http.Request)
}
// UserInvitationsAPIRouter defines the required methods for binding the api requests to a responses for the UserInvitationsAPI
// The UserInvitationsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a UserInvitationsAPIServicer to perform the required actions, then write the service results to the http response.
type UserInvitationsAPIRouter interface { 
	UserInvitationsCreateInstance(http.ResponseWriter, *http.Request)
	UserInvitationsDeleteInstance(http.ResponseWriter, *http.Request)
	UserInvitationsGetCollection(http.ResponseWriter, *http.Request)
	UserInvitationsGetInstance(http.ResponseWriter, *http.Request)
	UserInvitationsVisibleAppsGetToManyRelated(http.ResponseWriter, *http.Request)
}
// UsersAPIRouter defines the required methods for binding the api requests to a responses for the UsersAPI
// The UsersAPIRouter implementation should parse necessary information from the http request,
// pass the data to a UsersAPIServicer to perform the required actions, then write the service results to the http response.
type UsersAPIRouter interface { 
	UsersDeleteInstance(http.ResponseWriter, *http.Request)
	UsersGetCollection(http.ResponseWriter, *http.Request)
	UsersGetInstance(http.ResponseWriter, *http.Request)
	UsersUpdateInstance(http.ResponseWriter, *http.Request)
	UsersVisibleAppsCreateToManyRelationship(http.ResponseWriter, *http.Request)
	UsersVisibleAppsDeleteToManyRelationship(http.ResponseWriter, *http.Request)
	UsersVisibleAppsGetToManyRelated(http.ResponseWriter, *http.Request)
	UsersVisibleAppsGetToManyRelationship(http.ResponseWriter, *http.Request)
	UsersVisibleAppsReplaceToManyRelationship(http.ResponseWriter, *http.Request)
}


// AgeRatingDeclarationsAPIServicer defines the api actions for the AgeRatingDeclarationsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AgeRatingDeclarationsAPIServicer interface { 
	AgeRatingDeclarationsUpdateInstance(context.Context, string, AgeRatingDeclarationUpdateRequest) (ImplResponse, error)
}


// AppCategoriesAPIServicer defines the api actions for the AppCategoriesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AppCategoriesAPIServicer interface { 
	AppCategoriesGetCollection(context.Context, []string, []string, []string, int32, []string, int32) (ImplResponse, error)
	AppCategoriesGetInstance(context.Context, string, []string, []string, int32) (ImplResponse, error)
	AppCategoriesParentGetToOneRelated(context.Context, string, []string) (ImplResponse, error)
	AppCategoriesSubcategoriesGetToManyRelated(context.Context, string, []string, int32) (ImplResponse, error)
}


// AppEncryptionDeclarationsAPIServicer defines the api actions for the AppEncryptionDeclarationsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AppEncryptionDeclarationsAPIServicer interface { 
	AppEncryptionDeclarationsAppGetToOneRelated(context.Context, string, []string) (ImplResponse, error)
	AppEncryptionDeclarationsBuildsCreateToManyRelationship(context.Context, string, AppEncryptionDeclarationBuildsLinkagesRequest) (ImplResponse, error)
	AppEncryptionDeclarationsGetCollection(context.Context, []string, []string, []string, []string, int32, []string, []string) (ImplResponse, error)
	AppEncryptionDeclarationsGetInstance(context.Context, string, []string, []string, []string) (ImplResponse, error)
}


// AppInfoLocalizationsAPIServicer defines the api actions for the AppInfoLocalizationsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AppInfoLocalizationsAPIServicer interface { 
	AppInfoLocalizationsCreateInstance(context.Context, AppInfoLocalizationCreateRequest) (ImplResponse, error)
	AppInfoLocalizationsDeleteInstance(context.Context, string) (ImplResponse, error)
	AppInfoLocalizationsGetInstance(context.Context, string, []string, []string) (ImplResponse, error)
	AppInfoLocalizationsUpdateInstance(context.Context, string, AppInfoLocalizationUpdateRequest) (ImplResponse, error)
}


// AppInfosAPIServicer defines the api actions for the AppInfosAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AppInfosAPIServicer interface { 
	AppInfosAgeRatingDeclarationGetToOneRelated(context.Context, string, []string) (ImplResponse, error)
	AppInfosAppInfoLocalizationsGetToManyRelated(context.Context, string, []string, []string, []string, int32, []string) (ImplResponse, error)
	AppInfosGetInstance(context.Context, string, []string, []string, []string, []string, []string, int32) (ImplResponse, error)
	AppInfosPrimaryCategoryGetToOneRelated(context.Context, string, []string) (ImplResponse, error)
	AppInfosPrimarySubcategoryOneGetToOneRelated(context.Context, string, []string) (ImplResponse, error)
	AppInfosPrimarySubcategoryTwoGetToOneRelated(context.Context, string, []string) (ImplResponse, error)
	AppInfosSecondaryCategoryGetToOneRelated(context.Context, string, []string) (ImplResponse, error)
	AppInfosSecondarySubcategoryOneGetToOneRelated(context.Context, string, []string) (ImplResponse, error)
	AppInfosSecondarySubcategoryTwoGetToOneRelated(context.Context, string, []string) (ImplResponse, error)
	AppInfosUpdateInstance(context.Context, string, AppInfoUpdateRequest) (ImplResponse, error)
}


// AppPreOrdersAPIServicer defines the api actions for the AppPreOrdersAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AppPreOrdersAPIServicer interface { 
	AppPreOrdersCreateInstance(context.Context, AppPreOrderCreateRequest) (ImplResponse, error)
	AppPreOrdersDeleteInstance(context.Context, string) (ImplResponse, error)
	AppPreOrdersGetInstance(context.Context, string, []string, []string) (ImplResponse, error)
	AppPreOrdersUpdateInstance(context.Context, string, AppPreOrderUpdateRequest) (ImplResponse, error)
}


// AppPreviewSetsAPIServicer defines the api actions for the AppPreviewSetsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AppPreviewSetsAPIServicer interface { 
	AppPreviewSetsAppPreviewsGetToManyRelated(context.Context, string, []string, []string, int32, []string) (ImplResponse, error)
	AppPreviewSetsAppPreviewsGetToManyRelationship(context.Context, string, int32) (ImplResponse, error)
	AppPreviewSetsAppPreviewsReplaceToManyRelationship(context.Context, string, AppPreviewSetAppPreviewsLinkagesRequest) (ImplResponse, error)
	AppPreviewSetsCreateInstance(context.Context, AppPreviewSetCreateRequest) (ImplResponse, error)
	AppPreviewSetsDeleteInstance(context.Context, string) (ImplResponse, error)
	AppPreviewSetsGetInstance(context.Context, string, []string, []string, []string, int32) (ImplResponse, error)
}


// AppPreviewsAPIServicer defines the api actions for the AppPreviewsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AppPreviewsAPIServicer interface { 
	AppPreviewsCreateInstance(context.Context, AppPreviewCreateRequest) (ImplResponse, error)
	AppPreviewsDeleteInstance(context.Context, string) (ImplResponse, error)
	AppPreviewsGetInstance(context.Context, string, []string, []string) (ImplResponse, error)
	AppPreviewsUpdateInstance(context.Context, string, AppPreviewUpdateRequest) (ImplResponse, error)
}


// AppPricePointsAPIServicer defines the api actions for the AppPricePointsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AppPricePointsAPIServicer interface { 
	AppPricePointsGetCollection(context.Context, []string, []string, []string, int32, []string, []string) (ImplResponse, error)
	AppPricePointsGetInstance(context.Context, string, []string, []string, []string) (ImplResponse, error)
	AppPricePointsTerritoryGetToOneRelated(context.Context, string, []string) (ImplResponse, error)
}


// AppPriceTiersAPIServicer defines the api actions for the AppPriceTiersAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AppPriceTiersAPIServicer interface { 
	AppPriceTiersGetCollection(context.Context, []string, []string, int32, []string, []string, int32) (ImplResponse, error)
	AppPriceTiersGetInstance(context.Context, string, []string, []string, []string, int32) (ImplResponse, error)
	AppPriceTiersPricePointsGetToManyRelated(context.Context, string, []string, int32) (ImplResponse, error)
}


// AppPricesAPIServicer defines the api actions for the AppPricesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AppPricesAPIServicer interface { 
	AppPricesGetInstance(context.Context, string, []string, []string) (ImplResponse, error)
}


// AppScreenshotSetsAPIServicer defines the api actions for the AppScreenshotSetsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AppScreenshotSetsAPIServicer interface { 
	AppScreenshotSetsAppScreenshotsGetToManyRelated(context.Context, string, []string, []string, int32, []string) (ImplResponse, error)
	AppScreenshotSetsAppScreenshotsGetToManyRelationship(context.Context, string, int32) (ImplResponse, error)
	AppScreenshotSetsAppScreenshotsReplaceToManyRelationship(context.Context, string, AppScreenshotSetAppScreenshotsLinkagesRequest) (ImplResponse, error)
	AppScreenshotSetsCreateInstance(context.Context, AppScreenshotSetCreateRequest) (ImplResponse, error)
	AppScreenshotSetsDeleteInstance(context.Context, string) (ImplResponse, error)
	AppScreenshotSetsGetInstance(context.Context, string, []string, []string, []string, int32) (ImplResponse, error)
}


// AppScreenshotsAPIServicer defines the api actions for the AppScreenshotsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AppScreenshotsAPIServicer interface { 
	AppScreenshotsCreateInstance(context.Context, AppScreenshotCreateRequest) (ImplResponse, error)
	AppScreenshotsDeleteInstance(context.Context, string) (ImplResponse, error)
	AppScreenshotsGetInstance(context.Context, string, []string, []string) (ImplResponse, error)
	AppScreenshotsUpdateInstance(context.Context, string, AppScreenshotUpdateRequest) (ImplResponse, error)
}


// AppStoreReviewAttachmentsAPIServicer defines the api actions for the AppStoreReviewAttachmentsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AppStoreReviewAttachmentsAPIServicer interface { 
	AppStoreReviewAttachmentsCreateInstance(context.Context, AppStoreReviewAttachmentCreateRequest) (ImplResponse, error)
	AppStoreReviewAttachmentsDeleteInstance(context.Context, string) (ImplResponse, error)
	AppStoreReviewAttachmentsGetInstance(context.Context, string, []string, []string) (ImplResponse, error)
	AppStoreReviewAttachmentsUpdateInstance(context.Context, string, AppStoreReviewAttachmentUpdateRequest) (ImplResponse, error)
}


// AppStoreReviewDetailsAPIServicer defines the api actions for the AppStoreReviewDetailsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AppStoreReviewDetailsAPIServicer interface { 
	AppStoreReviewDetailsAppStoreReviewAttachmentsGetToManyRelated(context.Context, string, []string, []string, int32, []string) (ImplResponse, error)
	AppStoreReviewDetailsCreateInstance(context.Context, AppStoreReviewDetailCreateRequest) (ImplResponse, error)
	AppStoreReviewDetailsGetInstance(context.Context, string, []string, []string, []string, int32) (ImplResponse, error)
	AppStoreReviewDetailsUpdateInstance(context.Context, string, AppStoreReviewDetailUpdateRequest) (ImplResponse, error)
}


// AppStoreVersionLocalizationsAPIServicer defines the api actions for the AppStoreVersionLocalizationsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AppStoreVersionLocalizationsAPIServicer interface { 
	AppStoreVersionLocalizationsAppPreviewSetsGetToManyRelated(context.Context, string, []string, []string, []string, []string, int32, []string) (ImplResponse, error)
	AppStoreVersionLocalizationsAppScreenshotSetsGetToManyRelated(context.Context, string, []string, []string, []string, []string, int32, []string) (ImplResponse, error)
	AppStoreVersionLocalizationsCreateInstance(context.Context, AppStoreVersionLocalizationCreateRequest) (ImplResponse, error)
	AppStoreVersionLocalizationsDeleteInstance(context.Context, string) (ImplResponse, error)
	AppStoreVersionLocalizationsGetInstance(context.Context, string, []string, []string, []string, []string, int32, int32) (ImplResponse, error)
	AppStoreVersionLocalizationsUpdateInstance(context.Context, string, AppStoreVersionLocalizationUpdateRequest) (ImplResponse, error)
}


// AppStoreVersionPhasedReleasesAPIServicer defines the api actions for the AppStoreVersionPhasedReleasesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AppStoreVersionPhasedReleasesAPIServicer interface { 
	AppStoreVersionPhasedReleasesCreateInstance(context.Context, AppStoreVersionPhasedReleaseCreateRequest) (ImplResponse, error)
	AppStoreVersionPhasedReleasesDeleteInstance(context.Context, string) (ImplResponse, error)
	AppStoreVersionPhasedReleasesUpdateInstance(context.Context, string, AppStoreVersionPhasedReleaseUpdateRequest) (ImplResponse, error)
}


// AppStoreVersionSubmissionsAPIServicer defines the api actions for the AppStoreVersionSubmissionsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AppStoreVersionSubmissionsAPIServicer interface { 
	AppStoreVersionSubmissionsCreateInstance(context.Context, AppStoreVersionSubmissionCreateRequest) (ImplResponse, error)
	AppStoreVersionSubmissionsDeleteInstance(context.Context, string) (ImplResponse, error)
}


// AppStoreVersionsAPIServicer defines the api actions for the AppStoreVersionsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AppStoreVersionsAPIServicer interface { 
	// Deprecated
	AppStoreVersionsAgeRatingDeclarationGetToOneRelated(context.Context, string, []string) (ImplResponse, error)
	AppStoreVersionsAppStoreReviewDetailGetToOneRelated(context.Context, string, []string, []string, []string, []string) (ImplResponse, error)
	AppStoreVersionsAppStoreVersionLocalizationsGetToManyRelated(context.Context, string, []string, int32) (ImplResponse, error)
	AppStoreVersionsAppStoreVersionPhasedReleaseGetToOneRelated(context.Context, string, []string) (ImplResponse, error)
	AppStoreVersionsAppStoreVersionSubmissionGetToOneRelated(context.Context, string, []string, []string, []string) (ImplResponse, error)
	AppStoreVersionsBuildGetToOneRelated(context.Context, string, []string) (ImplResponse, error)
	AppStoreVersionsBuildGetToOneRelationship(context.Context, string) (ImplResponse, error)
	AppStoreVersionsBuildUpdateToOneRelationship(context.Context, string, AppStoreVersionBuildLinkageRequest) (ImplResponse, error)
	AppStoreVersionsCreateInstance(context.Context, AppStoreVersionCreateRequest) (ImplResponse, error)
	AppStoreVersionsDeleteInstance(context.Context, string) (ImplResponse, error)
	AppStoreVersionsGetInstance(context.Context, string, []string, []string, []string, []string, []string, []string, []string, []string, []string, []string, int32) (ImplResponse, error)
	AppStoreVersionsIdfaDeclarationGetToOneRelated(context.Context, string, []string) (ImplResponse, error)
	AppStoreVersionsRoutingAppCoverageGetToOneRelated(context.Context, string, []string) (ImplResponse, error)
	AppStoreVersionsUpdateInstance(context.Context, string, AppStoreVersionUpdateRequest) (ImplResponse, error)
}


// AppsAPIServicer defines the api actions for the AppsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AppsAPIServicer interface { 
	AppsAppInfosGetToManyRelated(context.Context, string, []string, []string, []string, []string, []string, int32, []string) (ImplResponse, error)
	AppsAppStoreVersionsGetToManyRelated(context.Context, string, []string, []string, []string, []string, []string, []string, []string, []string, []string, []string, []string, []string, []string, []string, int32, []string) (ImplResponse, error)
	AppsAvailableTerritoriesGetToManyRelated(context.Context, string, []string, int32) (ImplResponse, error)
	AppsBetaAppLocalizationsGetToManyRelated(context.Context, string, []string, int32) (ImplResponse, error)
	AppsBetaAppReviewDetailGetToOneRelated(context.Context, string, []string) (ImplResponse, error)
	AppsBetaGroupsGetToManyRelated(context.Context, string, []string, int32) (ImplResponse, error)
	AppsBetaLicenseAgreementGetToOneRelated(context.Context, string, []string) (ImplResponse, error)
	AppsBetaTestersDeleteToManyRelationship(context.Context, string, AppBetaTestersLinkagesRequest) (ImplResponse, error)
	AppsBuildsGetToManyRelated(context.Context, string, []string, int32) (ImplResponse, error)
	AppsEndUserLicenseAgreementGetToOneRelated(context.Context, string, []string) (ImplResponse, error)
	AppsGameCenterEnabledVersionsGetToManyRelated(context.Context, string, []string, []string, []string, []string, []string, []string, int32, []string) (ImplResponse, error)
	AppsGetCollection(context.Context, []string, []string, []string, []string, []string, []string, []string, []string, []string, []string, int32, []string, []string, []string, []string, []string, []string, []string, []string, []string, []string, []string, []string, []string, []string, []string, []string, int32, int32, int32, int32, int32, int32, int32, int32, int32, int32) (ImplResponse, error)
	AppsGetInstance(context.Context, string, []string, []string, []string, []string, []string, []string, []string, []string, []string, []string, []string, []string, []string, []string, []string, []string, []string, int32, int32, int32, int32, int32, int32, int32, int32, int32, int32) (ImplResponse, error)
	AppsInAppPurchasesGetToManyRelated(context.Context, string, []string, []string, []string, []string, []string, int32, []string) (ImplResponse, error)
	AppsPerfPowerMetricsGetToManyRelated(context.Context, string, []string, []string, []string) (ImplResponse, error)
	AppsPreOrderGetToOneRelated(context.Context, string, []string) (ImplResponse, error)
	AppsPreReleaseVersionsGetToManyRelated(context.Context, string, []string, int32) (ImplResponse, error)
	AppsPricesGetToManyRelated(context.Context, string, []string, []string, []string, int32, []string) (ImplResponse, error)
	AppsUpdateInstance(context.Context, string, AppUpdateRequest) (ImplResponse, error)
}


// BetaAppLocalizationsAPIServicer defines the api actions for the BetaAppLocalizationsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BetaAppLocalizationsAPIServicer interface { 
	BetaAppLocalizationsAppGetToOneRelated(context.Context, string, []string) (ImplResponse, error)
	BetaAppLocalizationsCreateInstance(context.Context, BetaAppLocalizationCreateRequest) (ImplResponse, error)
	BetaAppLocalizationsDeleteInstance(context.Context, string) (ImplResponse, error)
	BetaAppLocalizationsGetCollection(context.Context, []string, []string, []string, int32, []string, []string) (ImplResponse, error)
	BetaAppLocalizationsGetInstance(context.Context, string, []string, []string, []string) (ImplResponse, error)
	BetaAppLocalizationsUpdateInstance(context.Context, string, BetaAppLocalizationUpdateRequest) (ImplResponse, error)
}


// BetaAppReviewDetailsAPIServicer defines the api actions for the BetaAppReviewDetailsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BetaAppReviewDetailsAPIServicer interface { 
	BetaAppReviewDetailsAppGetToOneRelated(context.Context, string, []string) (ImplResponse, error)
	BetaAppReviewDetailsGetCollection(context.Context, []string, []string, int32, []string, []string) (ImplResponse, error)
	BetaAppReviewDetailsGetInstance(context.Context, string, []string, []string, []string) (ImplResponse, error)
	BetaAppReviewDetailsUpdateInstance(context.Context, string, BetaAppReviewDetailUpdateRequest) (ImplResponse, error)
}


// BetaAppReviewSubmissionsAPIServicer defines the api actions for the BetaAppReviewSubmissionsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BetaAppReviewSubmissionsAPIServicer interface { 
	BetaAppReviewSubmissionsBuildGetToOneRelated(context.Context, string, []string) (ImplResponse, error)
	BetaAppReviewSubmissionsCreateInstance(context.Context, BetaAppReviewSubmissionCreateRequest) (ImplResponse, error)
	BetaAppReviewSubmissionsGetCollection(context.Context, []string, []string, []string, int32, []string, []string) (ImplResponse, error)
	BetaAppReviewSubmissionsGetInstance(context.Context, string, []string, []string, []string) (ImplResponse, error)
}


// BetaBuildLocalizationsAPIServicer defines the api actions for the BetaBuildLocalizationsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BetaBuildLocalizationsAPIServicer interface { 
	BetaBuildLocalizationsBuildGetToOneRelated(context.Context, string, []string) (ImplResponse, error)
	BetaBuildLocalizationsCreateInstance(context.Context, BetaBuildLocalizationCreateRequest) (ImplResponse, error)
	BetaBuildLocalizationsDeleteInstance(context.Context, string) (ImplResponse, error)
	BetaBuildLocalizationsGetCollection(context.Context, []string, []string, []string, int32, []string, []string) (ImplResponse, error)
	BetaBuildLocalizationsGetInstance(context.Context, string, []string, []string, []string) (ImplResponse, error)
	BetaBuildLocalizationsUpdateInstance(context.Context, string, BetaBuildLocalizationUpdateRequest) (ImplResponse, error)
}


// BetaGroupsAPIServicer defines the api actions for the BetaGroupsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BetaGroupsAPIServicer interface { 
	BetaGroupsAppGetToOneRelated(context.Context, string, []string) (ImplResponse, error)
	BetaGroupsBetaTestersCreateToManyRelationship(context.Context, string, BetaGroupBetaTestersLinkagesRequest) (ImplResponse, error)
	BetaGroupsBetaTestersDeleteToManyRelationship(context.Context, string, BetaGroupBetaTestersLinkagesRequest) (ImplResponse, error)
	BetaGroupsBetaTestersGetToManyRelated(context.Context, string, []string, int32) (ImplResponse, error)
	BetaGroupsBetaTestersGetToManyRelationship(context.Context, string, int32) (ImplResponse, error)
	BetaGroupsBuildsCreateToManyRelationship(context.Context, string, BetaGroupBuildsLinkagesRequest) (ImplResponse, error)
	BetaGroupsBuildsDeleteToManyRelationship(context.Context, string, BetaGroupBuildsLinkagesRequest) (ImplResponse, error)
	BetaGroupsBuildsGetToManyRelated(context.Context, string, []string, int32) (ImplResponse, error)
	BetaGroupsBuildsGetToManyRelationship(context.Context, string, int32) (ImplResponse, error)
	BetaGroupsCreateInstance(context.Context, BetaGroupCreateRequest) (ImplResponse, error)
	BetaGroupsDeleteInstance(context.Context, string) (ImplResponse, error)
	BetaGroupsGetCollection(context.Context, []string, []string, []string, []string, []string, []string, []string, []string, []string, []string, int32, []string, []string, []string, []string, int32, int32) (ImplResponse, error)
	BetaGroupsGetInstance(context.Context, string, []string, []string, []string, []string, []string, int32, int32) (ImplResponse, error)
	BetaGroupsUpdateInstance(context.Context, string, BetaGroupUpdateRequest) (ImplResponse, error)
}


// BetaLicenseAgreementsAPIServicer defines the api actions for the BetaLicenseAgreementsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BetaLicenseAgreementsAPIServicer interface { 
	BetaLicenseAgreementsAppGetToOneRelated(context.Context, string, []string) (ImplResponse, error)
	BetaLicenseAgreementsGetCollection(context.Context, []string, []string, int32, []string, []string) (ImplResponse, error)
	BetaLicenseAgreementsGetInstance(context.Context, string, []string, []string, []string) (ImplResponse, error)
	BetaLicenseAgreementsUpdateInstance(context.Context, string, BetaLicenseAgreementUpdateRequest) (ImplResponse, error)
}


// BetaTesterInvitationsAPIServicer defines the api actions for the BetaTesterInvitationsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BetaTesterInvitationsAPIServicer interface { 
	BetaTesterInvitationsCreateInstance(context.Context, BetaTesterInvitationCreateRequest) (ImplResponse, error)
}


// BetaTestersAPIServicer defines the api actions for the BetaTestersAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BetaTestersAPIServicer interface { 
	BetaTestersAppsDeleteToManyRelationship(context.Context, string, BetaTesterAppsLinkagesRequest) (ImplResponse, error)
	BetaTestersAppsGetToManyRelated(context.Context, string, []string, int32) (ImplResponse, error)
	BetaTestersAppsGetToManyRelationship(context.Context, string, int32) (ImplResponse, error)
	BetaTestersBetaGroupsCreateToManyRelationship(context.Context, string, BetaTesterBetaGroupsLinkagesRequest) (ImplResponse, error)
	BetaTestersBetaGroupsDeleteToManyRelationship(context.Context, string, BetaTesterBetaGroupsLinkagesRequest) (ImplResponse, error)
	BetaTestersBetaGroupsGetToManyRelated(context.Context, string, []string, int32) (ImplResponse, error)
	BetaTestersBetaGroupsGetToManyRelationship(context.Context, string, int32) (ImplResponse, error)
	BetaTestersBuildsCreateToManyRelationship(context.Context, string, BetaTesterBuildsLinkagesRequest) (ImplResponse, error)
	BetaTestersBuildsDeleteToManyRelationship(context.Context, string, BetaTesterBuildsLinkagesRequest) (ImplResponse, error)
	BetaTestersBuildsGetToManyRelated(context.Context, string, []string, int32) (ImplResponse, error)
	BetaTestersBuildsGetToManyRelationship(context.Context, string, int32) (ImplResponse, error)
	BetaTestersCreateInstance(context.Context, BetaTesterCreateRequest) (ImplResponse, error)
	BetaTestersDeleteInstance(context.Context, string) (ImplResponse, error)
	BetaTestersGetCollection(context.Context, []string, []string, []string, []string, []string, []string, []string, []string, []string, int32, []string, []string, []string, []string, int32, int32, int32) (ImplResponse, error)
	BetaTestersGetInstance(context.Context, string, []string, []string, []string, []string, []string, int32, int32, int32) (ImplResponse, error)
}


// BuildBetaDetailsAPIServicer defines the api actions for the BuildBetaDetailsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BuildBetaDetailsAPIServicer interface { 
	BuildBetaDetailsBuildGetToOneRelated(context.Context, string, []string) (ImplResponse, error)
	BuildBetaDetailsGetCollection(context.Context, []string, []string, []string, int32, []string, []string) (ImplResponse, error)
	BuildBetaDetailsGetInstance(context.Context, string, []string, []string, []string) (ImplResponse, error)
	BuildBetaDetailsUpdateInstance(context.Context, string, BuildBetaDetailUpdateRequest) (ImplResponse, error)
}


// BuildBetaNotificationsAPIServicer defines the api actions for the BuildBetaNotificationsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BuildBetaNotificationsAPIServicer interface { 
	BuildBetaNotificationsCreateInstance(context.Context, BuildBetaNotificationCreateRequest) (ImplResponse, error)
}


// BuildsAPIServicer defines the api actions for the BuildsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BuildsAPIServicer interface { 
	BuildsAppEncryptionDeclarationGetToOneRelated(context.Context, string, []string) (ImplResponse, error)
	BuildsAppEncryptionDeclarationGetToOneRelationship(context.Context, string) (ImplResponse, error)
	BuildsAppEncryptionDeclarationUpdateToOneRelationship(context.Context, string, BuildAppEncryptionDeclarationLinkageRequest) (ImplResponse, error)
	BuildsAppGetToOneRelated(context.Context, string, []string) (ImplResponse, error)
	BuildsAppStoreVersionGetToOneRelated(context.Context, string, []string) (ImplResponse, error)
	BuildsBetaAppReviewSubmissionGetToOneRelated(context.Context, string, []string) (ImplResponse, error)
	BuildsBetaBuildLocalizationsGetToManyRelated(context.Context, string, []string, int32) (ImplResponse, error)
	BuildsBetaGroupsCreateToManyRelationship(context.Context, string, BuildBetaGroupsLinkagesRequest) (ImplResponse, error)
	BuildsBetaGroupsDeleteToManyRelationship(context.Context, string, BuildBetaGroupsLinkagesRequest) (ImplResponse, error)
	BuildsBuildBetaDetailGetToOneRelated(context.Context, string, []string) (ImplResponse, error)
	BuildsDiagnosticSignaturesGetToManyRelated(context.Context, string, []string, []string, int32) (ImplResponse, error)
	BuildsGetCollection(context.Context, []string, []string, []string, []string, []string, []string, []string, []string, []string, []string, []string, []string, []string, []string, int32, []string, []string, []string, []string, []string, []string, []string, []string, []string, []string, []string, []string, int32, int32, int32) (ImplResponse, error)
	BuildsGetInstance(context.Context, string, []string, []string, []string, []string, []string, []string, []string, []string, []string, []string, []string, []string, []string, int32, int32, int32) (ImplResponse, error)
	BuildsIconsGetToManyRelated(context.Context, string, []string, int32) (ImplResponse, error)
	BuildsIndividualTestersCreateToManyRelationship(context.Context, string, BuildIndividualTestersLinkagesRequest) (ImplResponse, error)
	BuildsIndividualTestersDeleteToManyRelationship(context.Context, string, BuildIndividualTestersLinkagesRequest) (ImplResponse, error)
	BuildsIndividualTestersGetToManyRelated(context.Context, string, []string, int32) (ImplResponse, error)
	BuildsIndividualTestersGetToManyRelationship(context.Context, string, int32) (ImplResponse, error)
	BuildsPerfPowerMetricsGetToManyRelated(context.Context, string, []string, []string, []string) (ImplResponse, error)
	BuildsPreReleaseVersionGetToOneRelated(context.Context, string, []string) (ImplResponse, error)
	BuildsUpdateInstance(context.Context, string, BuildUpdateRequest) (ImplResponse, error)
}


// BundleIdCapabilitiesAPIServicer defines the api actions for the BundleIdCapabilitiesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BundleIdCapabilitiesAPIServicer interface { 
	BundleIdCapabilitiesCreateInstance(context.Context, BundleIdCapabilityCreateRequest) (ImplResponse, error)
	BundleIdCapabilitiesDeleteInstance(context.Context, string) (ImplResponse, error)
	BundleIdCapabilitiesUpdateInstance(context.Context, string, BundleIdCapabilityUpdateRequest) (ImplResponse, error)
}


// BundleIdsAPIServicer defines the api actions for the BundleIdsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BundleIdsAPIServicer interface { 
	BundleIdsAppGetToOneRelated(context.Context, string, []string) (ImplResponse, error)
	BundleIdsBundleIdCapabilitiesGetToManyRelated(context.Context, string, []string, int32) (ImplResponse, error)
	BundleIdsCreateInstance(context.Context, BundleIdCreateRequest) (ImplResponse, error)
	BundleIdsDeleteInstance(context.Context, string) (ImplResponse, error)
	BundleIdsGetCollection(context.Context, []string, []string, []string, []string, []string, []string, []string, int32, []string, []string, []string, []string, int32, int32) (ImplResponse, error)
	BundleIdsGetInstance(context.Context, string, []string, []string, []string, []string, []string, int32, int32) (ImplResponse, error)
	BundleIdsProfilesGetToManyRelated(context.Context, string, []string, int32) (ImplResponse, error)
	BundleIdsUpdateInstance(context.Context, string, BundleIdUpdateRequest) (ImplResponse, error)
}


// CertificatesAPIServicer defines the api actions for the CertificatesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type CertificatesAPIServicer interface { 
	CertificatesCreateInstance(context.Context, CertificateCreateRequest) (ImplResponse, error)
	CertificatesDeleteInstance(context.Context, string) (ImplResponse, error)
	CertificatesGetCollection(context.Context, []string, []string, []string, []string, []string, []string, int32) (ImplResponse, error)
	CertificatesGetInstance(context.Context, string, []string) (ImplResponse, error)
}


// DevicesAPIServicer defines the api actions for the DevicesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type DevicesAPIServicer interface { 
	DevicesCreateInstance(context.Context, DeviceCreateRequest) (ImplResponse, error)
	DevicesGetCollection(context.Context, []string, []string, []string, []string, []string, []string, []string, int32) (ImplResponse, error)
	DevicesGetInstance(context.Context, string, []string) (ImplResponse, error)
	DevicesUpdateInstance(context.Context, string, DeviceUpdateRequest) (ImplResponse, error)
}


// DiagnosticSignaturesAPIServicer defines the api actions for the DiagnosticSignaturesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type DiagnosticSignaturesAPIServicer interface { 
	DiagnosticSignaturesLogsGetToManyRelated(context.Context, string, int32) (ImplResponse, error)
}


// EndUserLicenseAgreementsAPIServicer defines the api actions for the EndUserLicenseAgreementsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type EndUserLicenseAgreementsAPIServicer interface { 
	EndUserLicenseAgreementsCreateInstance(context.Context, EndUserLicenseAgreementCreateRequest) (ImplResponse, error)
	EndUserLicenseAgreementsDeleteInstance(context.Context, string) (ImplResponse, error)
	EndUserLicenseAgreementsGetInstance(context.Context, string, []string, []string, []string, int32) (ImplResponse, error)
	EndUserLicenseAgreementsTerritoriesGetToManyRelated(context.Context, string, []string, int32) (ImplResponse, error)
	EndUserLicenseAgreementsUpdateInstance(context.Context, string, EndUserLicenseAgreementUpdateRequest) (ImplResponse, error)
}


// FinanceReportsAPIServicer defines the api actions for the FinanceReportsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type FinanceReportsAPIServicer interface { 
	FinanceReportsGetCollection(context.Context, []string, []string, []string, []string) (ImplResponse, error)
}


// GameCenterEnabledVersionsAPIServicer defines the api actions for the GameCenterEnabledVersionsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type GameCenterEnabledVersionsAPIServicer interface { 
	GameCenterEnabledVersionsCompatibleVersionsCreateToManyRelationship(context.Context, string, GameCenterEnabledVersionCompatibleVersionsLinkagesRequest) (ImplResponse, error)
	GameCenterEnabledVersionsCompatibleVersionsDeleteToManyRelationship(context.Context, string, GameCenterEnabledVersionCompatibleVersionsLinkagesRequest) (ImplResponse, error)
	GameCenterEnabledVersionsCompatibleVersionsGetToManyRelated(context.Context, string, []string, []string, []string, []string, []string, []string, []string, int32, []string) (ImplResponse, error)
	GameCenterEnabledVersionsCompatibleVersionsGetToManyRelationship(context.Context, string, int32) (ImplResponse, error)
	GameCenterEnabledVersionsCompatibleVersionsReplaceToManyRelationship(context.Context, string, GameCenterEnabledVersionCompatibleVersionsLinkagesRequest) (ImplResponse, error)
}


// IdfaDeclarationsAPIServicer defines the api actions for the IdfaDeclarationsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type IdfaDeclarationsAPIServicer interface { 
	IdfaDeclarationsCreateInstance(context.Context, IdfaDeclarationCreateRequest) (ImplResponse, error)
	IdfaDeclarationsDeleteInstance(context.Context, string) (ImplResponse, error)
	IdfaDeclarationsUpdateInstance(context.Context, string, IdfaDeclarationUpdateRequest) (ImplResponse, error)
}


// InAppPurchasesAPIServicer defines the api actions for the InAppPurchasesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type InAppPurchasesAPIServicer interface { 
	InAppPurchasesGetInstance(context.Context, string, []string, []string, int32) (ImplResponse, error)
}


// PreReleaseVersionsAPIServicer defines the api actions for the PreReleaseVersionsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type PreReleaseVersionsAPIServicer interface { 
	PreReleaseVersionsAppGetToOneRelated(context.Context, string, []string) (ImplResponse, error)
	PreReleaseVersionsBuildsGetToManyRelated(context.Context, string, []string, int32) (ImplResponse, error)
	PreReleaseVersionsGetCollection(context.Context, []string, []string, []string, []string, []string, []string, []string, []string, int32, []string, []string, []string, int32) (ImplResponse, error)
	PreReleaseVersionsGetInstance(context.Context, string, []string, []string, []string, []string, int32) (ImplResponse, error)
}


// ProfilesAPIServicer defines the api actions for the ProfilesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ProfilesAPIServicer interface { 
	ProfilesBundleIdGetToOneRelated(context.Context, string, []string) (ImplResponse, error)
	ProfilesCertificatesGetToManyRelated(context.Context, string, []string, int32) (ImplResponse, error)
	ProfilesCreateInstance(context.Context, ProfileCreateRequest) (ImplResponse, error)
	ProfilesDeleteInstance(context.Context, string) (ImplResponse, error)
	ProfilesDevicesGetToManyRelated(context.Context, string, []string, int32) (ImplResponse, error)
	ProfilesGetCollection(context.Context, []string, []string, []string, []string, []string, []string, int32, []string, []string, []string, []string, int32, int32) (ImplResponse, error)
	ProfilesGetInstance(context.Context, string, []string, []string, []string, []string, []string, int32, int32) (ImplResponse, error)
}


// RoutingAppCoveragesAPIServicer defines the api actions for the RoutingAppCoveragesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type RoutingAppCoveragesAPIServicer interface { 
	RoutingAppCoveragesCreateInstance(context.Context, RoutingAppCoverageCreateRequest) (ImplResponse, error)
	RoutingAppCoveragesDeleteInstance(context.Context, string) (ImplResponse, error)
	RoutingAppCoveragesGetInstance(context.Context, string, []string, []string) (ImplResponse, error)
	RoutingAppCoveragesUpdateInstance(context.Context, string, RoutingAppCoverageUpdateRequest) (ImplResponse, error)
}


// SalesReportsAPIServicer defines the api actions for the SalesReportsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type SalesReportsAPIServicer interface { 
	SalesReportsGetCollection(context.Context, []string, []string, []string, []string, []string, []string) (ImplResponse, error)
}


// TerritoriesAPIServicer defines the api actions for the TerritoriesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type TerritoriesAPIServicer interface { 
	TerritoriesGetCollection(context.Context, []string, int32) (ImplResponse, error)
}


// UserInvitationsAPIServicer defines the api actions for the UserInvitationsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type UserInvitationsAPIServicer interface { 
	UserInvitationsCreateInstance(context.Context, UserInvitationCreateRequest) (ImplResponse, error)
	UserInvitationsDeleteInstance(context.Context, string) (ImplResponse, error)
	UserInvitationsGetCollection(context.Context, []string, []string, []string, []string, []string, int32, []string, []string, int32) (ImplResponse, error)
	UserInvitationsGetInstance(context.Context, string, []string, []string, []string, int32) (ImplResponse, error)
	UserInvitationsVisibleAppsGetToManyRelated(context.Context, string, []string, int32) (ImplResponse, error)
}


// UsersAPIServicer defines the api actions for the UsersAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type UsersAPIServicer interface { 
	UsersDeleteInstance(context.Context, string) (ImplResponse, error)
	UsersGetCollection(context.Context, []string, []string, []string, []string, []string, int32, []string, []string, int32) (ImplResponse, error)
	UsersGetInstance(context.Context, string, []string, []string, []string, int32) (ImplResponse, error)
	UsersUpdateInstance(context.Context, string, UserUpdateRequest) (ImplResponse, error)
	UsersVisibleAppsCreateToManyRelationship(context.Context, string, UserVisibleAppsLinkagesRequest) (ImplResponse, error)
	UsersVisibleAppsDeleteToManyRelationship(context.Context, string, UserVisibleAppsLinkagesRequest) (ImplResponse, error)
	UsersVisibleAppsGetToManyRelated(context.Context, string, []string, int32) (ImplResponse, error)
	UsersVisibleAppsGetToManyRelationship(context.Context, string, int32) (ImplResponse, error)
	UsersVisibleAppsReplaceToManyRelationship(context.Context, string, UserVisibleAppsLinkagesRequest) (ImplResponse, error)
}
