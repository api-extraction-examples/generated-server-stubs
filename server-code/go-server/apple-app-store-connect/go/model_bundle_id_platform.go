/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.4.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"fmt"
)



type BundleIdPlatform string

// List of BundleIdPlatform
const (
	IOS BundleIdPlatform = "IOS"
	MAC_OS BundleIdPlatform = "MAC_OS"
)

// AllowedBundleIdPlatformEnumValues is all the allowed values of BundleIdPlatform enum
var AllowedBundleIdPlatformEnumValues = []BundleIdPlatform{
	"IOS",
	"MAC_OS",
}

// validBundleIdPlatformEnumValue provides a map of BundleIdPlatforms for fast verification of use input
var validBundleIdPlatformEnumValues = map[BundleIdPlatform]struct{}{
	"IOS": {},
	"MAC_OS": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v BundleIdPlatform) IsValid() bool {
	_, ok := validBundleIdPlatformEnumValues[v]
	return ok
}

// NewBundleIdPlatformFromValue returns a pointer to a valid BundleIdPlatform
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewBundleIdPlatformFromValue(v string) (BundleIdPlatform, error) {
	ev := BundleIdPlatform(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for BundleIdPlatform: valid values are %v", v, AllowedBundleIdPlatformEnumValues)
	}
}



// AssertBundleIdPlatformRequired checks if the required fields are not zero-ed
func AssertBundleIdPlatformRequired(obj BundleIdPlatform) error {
	return nil
}

// AssertBundleIdPlatformConstraints checks if the values respects the defined constraints
func AssertBundleIdPlatformConstraints(obj BundleIdPlatform) error {
	return nil
}
