/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.4.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi




type AppInfoRelationships struct {

	AgeRatingDeclaration AppInfoRelationshipsAgeRatingDeclaration `json:"ageRatingDeclaration,omitempty"`

	App AppEncryptionDeclarationRelationshipsApp `json:"app,omitempty"`

	AppInfoLocalizations AppInfoRelationshipsAppInfoLocalizations `json:"appInfoLocalizations,omitempty"`

	PrimaryCategory AppCategoryRelationshipsParent `json:"primaryCategory,omitempty"`

	PrimarySubcategoryOne AppCategoryRelationshipsParent `json:"primarySubcategoryOne,omitempty"`

	PrimarySubcategoryTwo AppCategoryRelationshipsParent `json:"primarySubcategoryTwo,omitempty"`

	SecondaryCategory AppCategoryRelationshipsParent `json:"secondaryCategory,omitempty"`

	SecondarySubcategoryOne AppCategoryRelationshipsParent `json:"secondarySubcategoryOne,omitempty"`

	SecondarySubcategoryTwo AppCategoryRelationshipsParent `json:"secondarySubcategoryTwo,omitempty"`
}

// AssertAppInfoRelationshipsRequired checks if the required fields are not zero-ed
func AssertAppInfoRelationshipsRequired(obj AppInfoRelationships) error {
	if err := AssertAppInfoRelationshipsAgeRatingDeclarationRequired(obj.AgeRatingDeclaration); err != nil {
		return err
	}
	if err := AssertAppEncryptionDeclarationRelationshipsAppRequired(obj.App); err != nil {
		return err
	}
	if err := AssertAppInfoRelationshipsAppInfoLocalizationsRequired(obj.AppInfoLocalizations); err != nil {
		return err
	}
	if err := AssertAppCategoryRelationshipsParentRequired(obj.PrimaryCategory); err != nil {
		return err
	}
	if err := AssertAppCategoryRelationshipsParentRequired(obj.PrimarySubcategoryOne); err != nil {
		return err
	}
	if err := AssertAppCategoryRelationshipsParentRequired(obj.PrimarySubcategoryTwo); err != nil {
		return err
	}
	if err := AssertAppCategoryRelationshipsParentRequired(obj.SecondaryCategory); err != nil {
		return err
	}
	if err := AssertAppCategoryRelationshipsParentRequired(obj.SecondarySubcategoryOne); err != nil {
		return err
	}
	if err := AssertAppCategoryRelationshipsParentRequired(obj.SecondarySubcategoryTwo); err != nil {
		return err
	}
	return nil
}

// AssertAppInfoRelationshipsConstraints checks if the values respects the defined constraints
func AssertAppInfoRelationshipsConstraints(obj AppInfoRelationships) error {
	return nil
}
