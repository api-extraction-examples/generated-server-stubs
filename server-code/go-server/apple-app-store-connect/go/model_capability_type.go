/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.4.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"fmt"
)



type CapabilityType string

// List of CapabilityType
const (
	ICLOUD CapabilityType = "ICLOUD"
	IN_APP_PURCHASE CapabilityType = "IN_APP_PURCHASE"
	GAME_CENTER CapabilityType = "GAME_CENTER"
	PUSH_NOTIFICATIONS CapabilityType = "PUSH_NOTIFICATIONS"
	WALLET CapabilityType = "WALLET"
	INTER_APP_AUDIO CapabilityType = "INTER_APP_AUDIO"
	MAPS CapabilityType = "MAPS"
	ASSOCIATED_DOMAINS CapabilityType = "ASSOCIATED_DOMAINS"
	PERSONAL_VPN CapabilityType = "PERSONAL_VPN"
	APP_GROUPS CapabilityType = "APP_GROUPS"
	HEALTHKIT CapabilityType = "HEALTHKIT"
	HOMEKIT CapabilityType = "HOMEKIT"
	WIRELESS_ACCESSORY_CONFIGURATION CapabilityType = "WIRELESS_ACCESSORY_CONFIGURATION"
	APPLE_PAY CapabilityType = "APPLE_PAY"
	DATA_PROTECTION CapabilityType = "DATA_PROTECTION"
	SIRIKIT CapabilityType = "SIRIKIT"
	NETWORK_EXTENSIONS CapabilityType = "NETWORK_EXTENSIONS"
	MULTIPATH CapabilityType = "MULTIPATH"
	HOT_SPOT CapabilityType = "HOT_SPOT"
	NFC_TAG_READING CapabilityType = "NFC_TAG_READING"
	CLASSKIT CapabilityType = "CLASSKIT"
	AUTOFILL_CREDENTIAL_PROVIDER CapabilityType = "AUTOFILL_CREDENTIAL_PROVIDER"
	ACCESS_WIFI_INFORMATION CapabilityType = "ACCESS_WIFI_INFORMATION"
	NETWORK_CUSTOM_PROTOCOL CapabilityType = "NETWORK_CUSTOM_PROTOCOL"
	COREMEDIA_HLS_LOW_LATENCY CapabilityType = "COREMEDIA_HLS_LOW_LATENCY"
	SYSTEM_EXTENSION_INSTALL CapabilityType = "SYSTEM_EXTENSION_INSTALL"
	USER_MANAGEMENT CapabilityType = "USER_MANAGEMENT"
	APPLE_ID_AUTH CapabilityType = "APPLE_ID_AUTH"
)

// AllowedCapabilityTypeEnumValues is all the allowed values of CapabilityType enum
var AllowedCapabilityTypeEnumValues = []CapabilityType{
	"ICLOUD",
	"IN_APP_PURCHASE",
	"GAME_CENTER",
	"PUSH_NOTIFICATIONS",
	"WALLET",
	"INTER_APP_AUDIO",
	"MAPS",
	"ASSOCIATED_DOMAINS",
	"PERSONAL_VPN",
	"APP_GROUPS",
	"HEALTHKIT",
	"HOMEKIT",
	"WIRELESS_ACCESSORY_CONFIGURATION",
	"APPLE_PAY",
	"DATA_PROTECTION",
	"SIRIKIT",
	"NETWORK_EXTENSIONS",
	"MULTIPATH",
	"HOT_SPOT",
	"NFC_TAG_READING",
	"CLASSKIT",
	"AUTOFILL_CREDENTIAL_PROVIDER",
	"ACCESS_WIFI_INFORMATION",
	"NETWORK_CUSTOM_PROTOCOL",
	"COREMEDIA_HLS_LOW_LATENCY",
	"SYSTEM_EXTENSION_INSTALL",
	"USER_MANAGEMENT",
	"APPLE_ID_AUTH",
}

// validCapabilityTypeEnumValue provides a map of CapabilityTypes for fast verification of use input
var validCapabilityTypeEnumValues = map[CapabilityType]struct{}{
	"ICLOUD": {},
	"IN_APP_PURCHASE": {},
	"GAME_CENTER": {},
	"PUSH_NOTIFICATIONS": {},
	"WALLET": {},
	"INTER_APP_AUDIO": {},
	"MAPS": {},
	"ASSOCIATED_DOMAINS": {},
	"PERSONAL_VPN": {},
	"APP_GROUPS": {},
	"HEALTHKIT": {},
	"HOMEKIT": {},
	"WIRELESS_ACCESSORY_CONFIGURATION": {},
	"APPLE_PAY": {},
	"DATA_PROTECTION": {},
	"SIRIKIT": {},
	"NETWORK_EXTENSIONS": {},
	"MULTIPATH": {},
	"HOT_SPOT": {},
	"NFC_TAG_READING": {},
	"CLASSKIT": {},
	"AUTOFILL_CREDENTIAL_PROVIDER": {},
	"ACCESS_WIFI_INFORMATION": {},
	"NETWORK_CUSTOM_PROTOCOL": {},
	"COREMEDIA_HLS_LOW_LATENCY": {},
	"SYSTEM_EXTENSION_INSTALL": {},
	"USER_MANAGEMENT": {},
	"APPLE_ID_AUTH": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CapabilityType) IsValid() bool {
	_, ok := validCapabilityTypeEnumValues[v]
	return ok
}

// NewCapabilityTypeFromValue returns a pointer to a valid CapabilityType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCapabilityTypeFromValue(v string) (CapabilityType, error) {
	ev := CapabilityType(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for CapabilityType: valid values are %v", v, AllowedCapabilityTypeEnumValues)
	}
}



// AssertCapabilityTypeRequired checks if the required fields are not zero-ed
func AssertCapabilityTypeRequired(obj CapabilityType) error {
	return nil
}

// AssertCapabilityTypeConstraints checks if the values respects the defined constraints
func AssertCapabilityTypeConstraints(obj CapabilityType) error {
	return nil
}
