/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.4.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"fmt"
)



type ScreenshotDisplayType string

// List of ScreenshotDisplayType
const (
	APP_IPHONE_65 ScreenshotDisplayType = "APP_IPHONE_65"
	APP_IPHONE_58 ScreenshotDisplayType = "APP_IPHONE_58"
	APP_IPHONE_55 ScreenshotDisplayType = "APP_IPHONE_55"
	APP_IPHONE_47 ScreenshotDisplayType = "APP_IPHONE_47"
	APP_IPHONE_40 ScreenshotDisplayType = "APP_IPHONE_40"
	APP_IPHONE_35 ScreenshotDisplayType = "APP_IPHONE_35"
	APP_IPAD_PRO_3_GEN_129 ScreenshotDisplayType = "APP_IPAD_PRO_3GEN_129"
	APP_IPAD_PRO_3_GEN_11 ScreenshotDisplayType = "APP_IPAD_PRO_3GEN_11"
	APP_IPAD_PRO_129 ScreenshotDisplayType = "APP_IPAD_PRO_129"
	APP_IPAD_105 ScreenshotDisplayType = "APP_IPAD_105"
	APP_IPAD_97 ScreenshotDisplayType = "APP_IPAD_97"
	APP_DESKTOP ScreenshotDisplayType = "APP_DESKTOP"
	APP_WATCH_SERIES_4 ScreenshotDisplayType = "APP_WATCH_SERIES_4"
	APP_WATCH_SERIES_3 ScreenshotDisplayType = "APP_WATCH_SERIES_3"
	APP_APPLE_TV ScreenshotDisplayType = "APP_APPLE_TV"
	IMESSAGE_APP_IPHONE_65 ScreenshotDisplayType = "IMESSAGE_APP_IPHONE_65"
	IMESSAGE_APP_IPHONE_58 ScreenshotDisplayType = "IMESSAGE_APP_IPHONE_58"
	IMESSAGE_APP_IPHONE_55 ScreenshotDisplayType = "IMESSAGE_APP_IPHONE_55"
	IMESSAGE_APP_IPHONE_47 ScreenshotDisplayType = "IMESSAGE_APP_IPHONE_47"
	IMESSAGE_APP_IPHONE_40 ScreenshotDisplayType = "IMESSAGE_APP_IPHONE_40"
	IMESSAGE_APP_IPAD_PRO_3_GEN_129 ScreenshotDisplayType = "IMESSAGE_APP_IPAD_PRO_3GEN_129"
	IMESSAGE_APP_IPAD_PRO_3_GEN_11 ScreenshotDisplayType = "IMESSAGE_APP_IPAD_PRO_3GEN_11"
	IMESSAGE_APP_IPAD_PRO_129 ScreenshotDisplayType = "IMESSAGE_APP_IPAD_PRO_129"
	IMESSAGE_APP_IPAD_105 ScreenshotDisplayType = "IMESSAGE_APP_IPAD_105"
	IMESSAGE_APP_IPAD_97 ScreenshotDisplayType = "IMESSAGE_APP_IPAD_97"
)

// AllowedScreenshotDisplayTypeEnumValues is all the allowed values of ScreenshotDisplayType enum
var AllowedScreenshotDisplayTypeEnumValues = []ScreenshotDisplayType{
	"APP_IPHONE_65",
	"APP_IPHONE_58",
	"APP_IPHONE_55",
	"APP_IPHONE_47",
	"APP_IPHONE_40",
	"APP_IPHONE_35",
	"APP_IPAD_PRO_3GEN_129",
	"APP_IPAD_PRO_3GEN_11",
	"APP_IPAD_PRO_129",
	"APP_IPAD_105",
	"APP_IPAD_97",
	"APP_DESKTOP",
	"APP_WATCH_SERIES_4",
	"APP_WATCH_SERIES_3",
	"APP_APPLE_TV",
	"IMESSAGE_APP_IPHONE_65",
	"IMESSAGE_APP_IPHONE_58",
	"IMESSAGE_APP_IPHONE_55",
	"IMESSAGE_APP_IPHONE_47",
	"IMESSAGE_APP_IPHONE_40",
	"IMESSAGE_APP_IPAD_PRO_3GEN_129",
	"IMESSAGE_APP_IPAD_PRO_3GEN_11",
	"IMESSAGE_APP_IPAD_PRO_129",
	"IMESSAGE_APP_IPAD_105",
	"IMESSAGE_APP_IPAD_97",
}

// validScreenshotDisplayTypeEnumValue provides a map of ScreenshotDisplayTypes for fast verification of use input
var validScreenshotDisplayTypeEnumValues = map[ScreenshotDisplayType]struct{}{
	"APP_IPHONE_65": {},
	"APP_IPHONE_58": {},
	"APP_IPHONE_55": {},
	"APP_IPHONE_47": {},
	"APP_IPHONE_40": {},
	"APP_IPHONE_35": {},
	"APP_IPAD_PRO_3GEN_129": {},
	"APP_IPAD_PRO_3GEN_11": {},
	"APP_IPAD_PRO_129": {},
	"APP_IPAD_105": {},
	"APP_IPAD_97": {},
	"APP_DESKTOP": {},
	"APP_WATCH_SERIES_4": {},
	"APP_WATCH_SERIES_3": {},
	"APP_APPLE_TV": {},
	"IMESSAGE_APP_IPHONE_65": {},
	"IMESSAGE_APP_IPHONE_58": {},
	"IMESSAGE_APP_IPHONE_55": {},
	"IMESSAGE_APP_IPHONE_47": {},
	"IMESSAGE_APP_IPHONE_40": {},
	"IMESSAGE_APP_IPAD_PRO_3GEN_129": {},
	"IMESSAGE_APP_IPAD_PRO_3GEN_11": {},
	"IMESSAGE_APP_IPAD_PRO_129": {},
	"IMESSAGE_APP_IPAD_105": {},
	"IMESSAGE_APP_IPAD_97": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ScreenshotDisplayType) IsValid() bool {
	_, ok := validScreenshotDisplayTypeEnumValues[v]
	return ok
}

// NewScreenshotDisplayTypeFromValue returns a pointer to a valid ScreenshotDisplayType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewScreenshotDisplayTypeFromValue(v string) (ScreenshotDisplayType, error) {
	ev := ScreenshotDisplayType(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for ScreenshotDisplayType: valid values are %v", v, AllowedScreenshotDisplayTypeEnumValues)
	}
}



// AssertScreenshotDisplayTypeRequired checks if the required fields are not zero-ed
func AssertScreenshotDisplayTypeRequired(obj ScreenshotDisplayType) error {
	return nil
}

// AssertScreenshotDisplayTypeConstraints checks if the values respects the defined constraints
func AssertScreenshotDisplayTypeConstraints(obj ScreenshotDisplayType) error {
	return nil
}
