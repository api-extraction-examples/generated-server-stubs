/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.4.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"fmt"
)



type IconAssetType string

// List of IconAssetType
const (
	APP_STORE IconAssetType = "APP_STORE"
	MESSAGES_APP_STORE IconAssetType = "MESSAGES_APP_STORE"
	WATCH_APP_STORE IconAssetType = "WATCH_APP_STORE"
	TV_OS_HOME_SCREEN IconAssetType = "TV_OS_HOME_SCREEN"
	TV_OS_TOP_SHELF IconAssetType = "TV_OS_TOP_SHELF"
)

// AllowedIconAssetTypeEnumValues is all the allowed values of IconAssetType enum
var AllowedIconAssetTypeEnumValues = []IconAssetType{
	"APP_STORE",
	"MESSAGES_APP_STORE",
	"WATCH_APP_STORE",
	"TV_OS_HOME_SCREEN",
	"TV_OS_TOP_SHELF",
}

// validIconAssetTypeEnumValue provides a map of IconAssetTypes for fast verification of use input
var validIconAssetTypeEnumValues = map[IconAssetType]struct{}{
	"APP_STORE": {},
	"MESSAGES_APP_STORE": {},
	"WATCH_APP_STORE": {},
	"TV_OS_HOME_SCREEN": {},
	"TV_OS_TOP_SHELF": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v IconAssetType) IsValid() bool {
	_, ok := validIconAssetTypeEnumValues[v]
	return ok
}

// NewIconAssetTypeFromValue returns a pointer to a valid IconAssetType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewIconAssetTypeFromValue(v string) (IconAssetType, error) {
	ev := IconAssetType(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for IconAssetType: valid values are %v", v, AllowedIconAssetTypeEnumValues)
	}
}



// AssertIconAssetTypeRequired checks if the required fields are not zero-ed
func AssertIconAssetTypeRequired(obj IconAssetType) error {
	return nil
}

// AssertIconAssetTypeConstraints checks if the values respects the defined constraints
func AssertIconAssetTypeConstraints(obj IconAssetType) error {
	return nil
}
