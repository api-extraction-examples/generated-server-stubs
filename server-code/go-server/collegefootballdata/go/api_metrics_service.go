/*
 * College Football Data API
 *
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * API version: 4.4.12
 * Contact: admin@collegefootballdata.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// MetricsAPIService is a service that implements the logic for the MetricsAPIServicer
// This service should implement the business logic for every endpoint for the MetricsAPI API.
// Include any external packages or services that will be required by this service.
type MetricsAPIService struct {
}

// NewMetricsAPIService creates a default api service
func NewMetricsAPIService() MetricsAPIServicer {
	return &MetricsAPIService{}
}

// GetGamePPA - Team Predicated Points Added (PPA/EPA) by game
func (s *MetricsAPIService) GetGamePPA(ctx context.Context, year int32, week int32, team string, conference string, excludeGarbageTime bool, seasonType string) (ImplResponse, error) {
	// TODO - update GetGamePPA with the required logic for this service method.
	// Add api_metrics_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []GamePpa{}) or use other options such as http.Ok ...
	// return Response(200, []GamePpa{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetGamePPA method not implemented")
}

// GetPlayerGamePPA - Player Predicated Points Added (PPA/EPA) broken down by game
func (s *MetricsAPIService) GetPlayerGamePPA(ctx context.Context, year int32, week int32, team string, position string, playerId int32, threshold string, excludeGarbageTime bool, seasonType string) (ImplResponse, error) {
	// TODO - update GetPlayerGamePPA with the required logic for this service method.
	// Add api_metrics_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []PlayerGamePpa{}) or use other options such as http.Ok ...
	// return Response(200, []PlayerGamePpa{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetPlayerGamePPA method not implemented")
}

// GetPlayerSeasonPPA - Player Predicated Points Added (PPA/EPA) broken down by season
func (s *MetricsAPIService) GetPlayerSeasonPPA(ctx context.Context, year int32, team string, conference string, position string, playerId int32, threshold string, excludeGarbageTime bool) (ImplResponse, error) {
	// TODO - update GetPlayerSeasonPPA with the required logic for this service method.
	// Add api_metrics_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []PlayerSeasonPpa{}) or use other options such as http.Ok ...
	// return Response(200, []PlayerSeasonPpa{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetPlayerSeasonPPA method not implemented")
}

// GetPredictedPoints - Predicted Points (i.e. Expected Points or EP)
func (s *MetricsAPIService) GetPredictedPoints(ctx context.Context, down int32, distance int32) (ImplResponse, error) {
	// TODO - update GetPredictedPoints with the required logic for this service method.
	// Add api_metrics_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []PredictedPoints{}) or use other options such as http.Ok ...
	// return Response(200, []PredictedPoints{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetPredictedPoints method not implemented")
}

// GetPregameWinProbabilities - Pregame win probability data
func (s *MetricsAPIService) GetPregameWinProbabilities(ctx context.Context, year int32, week int32, team string, seasonType string) (ImplResponse, error) {
	// TODO - update GetPregameWinProbabilities with the required logic for this service method.
	// Add api_metrics_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []PregameWp{}) or use other options such as http.Ok ...
	// return Response(200, []PregameWp{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetPregameWinProbabilities method not implemented")
}

// GetTeamPPA - Predicted Points Added (PPA/EPA) data by team
func (s *MetricsAPIService) GetTeamPPA(ctx context.Context, year int32, team string, conference string, excludeGarbageTime bool) (ImplResponse, error) {
	// TODO - update GetTeamPPA with the required logic for this service method.
	// Add api_metrics_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []TeamPpa{}) or use other options such as http.Ok ...
	// return Response(200, []TeamPpa{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetTeamPPA method not implemented")
}

// GetWinProbabilityData - Win probability chart data
func (s *MetricsAPIService) GetWinProbabilityData(ctx context.Context, gameId int32) (ImplResponse, error) {
	// TODO - update GetWinProbabilityData with the required logic for this service method.
	// Add api_metrics_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []PlayWp{}) or use other options such as http.Ok ...
	// return Response(200, []PlayWp{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetWinProbabilityData method not implemented")
}
