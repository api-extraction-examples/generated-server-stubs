/*
 * College Football Data API
 *
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * API version: 4.4.12
 * Contact: admin@collegefootballdata.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi




type AdvancedGameStatDefense struct {

	Drives int32 `json:"drives,omitempty"`

	Explosiveness float32 `json:"explosiveness,omitempty"`

	LineYards float32 `json:"lineYards,omitempty"`

	LineYardsTotal float32 `json:"lineYardsTotal,omitempty"`

	OpenFieldYards float32 `json:"openFieldYards,omitempty"`

	OpenFieldYardsTotal int32 `json:"openFieldYardsTotal,omitempty"`

	PassingDowns AdvancedGameStatDefensePassingDowns `json:"passingDowns,omitempty"`

	PassingPlays AdvancedGameStatDefensePassingPlays `json:"passingPlays,omitempty"`

	Plays int32 `json:"plays,omitempty"`

	PowerSuccess float32 `json:"powerSuccess,omitempty"`

	Ppa float32 `json:"ppa,omitempty"`

	RushingPlays AdvancedGameStatDefensePassingPlays `json:"rushingPlays,omitempty"`

	SecondLevelYards float32 `json:"secondLevelYards,omitempty"`

	SecondLevelYardsTotal int32 `json:"secondLevelYardsTotal,omitempty"`

	StandardDowns AdvancedGameStatDefensePassingDowns `json:"standardDowns,omitempty"`

	StuffRate float32 `json:"stuffRate,omitempty"`

	SuccessRate float32 `json:"successRate,omitempty"`

	TotalPPA float32 `json:"totalPPA,omitempty"`
}

// AssertAdvancedGameStatDefenseRequired checks if the required fields are not zero-ed
func AssertAdvancedGameStatDefenseRequired(obj AdvancedGameStatDefense) error {
	if err := AssertAdvancedGameStatDefensePassingDownsRequired(obj.PassingDowns); err != nil {
		return err
	}
	if err := AssertAdvancedGameStatDefensePassingPlaysRequired(obj.PassingPlays); err != nil {
		return err
	}
	if err := AssertAdvancedGameStatDefensePassingPlaysRequired(obj.RushingPlays); err != nil {
		return err
	}
	if err := AssertAdvancedGameStatDefensePassingDownsRequired(obj.StandardDowns); err != nil {
		return err
	}
	return nil
}

// AssertAdvancedGameStatDefenseConstraints checks if the values respects the defined constraints
func AssertAdvancedGameStatDefenseConstraints(obj AdvancedGameStatDefense) error {
	return nil
}
