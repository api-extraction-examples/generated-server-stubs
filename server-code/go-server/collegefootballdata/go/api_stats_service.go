/*
 * College Football Data API
 *
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * API version: 4.4.12
 * Contact: admin@collegefootballdata.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// StatsAPIService is a service that implements the logic for the StatsAPIServicer
// This service should implement the business logic for every endpoint for the StatsAPI API.
// Include any external packages or services that will be required by this service.
type StatsAPIService struct {
}

// NewStatsAPIService creates a default api service
func NewStatsAPIService() StatsAPIServicer {
	return &StatsAPIService{}
}

// GetAdvancedTeamGameStats - Advanced team metrics by game
func (s *StatsAPIService) GetAdvancedTeamGameStats(ctx context.Context, year int32, week int32, team string, opponent string, excludeGarbageTime bool, seasonType string) (ImplResponse, error) {
	// TODO - update GetAdvancedTeamGameStats with the required logic for this service method.
	// Add api_stats_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []AdvancedGameStat{}) or use other options such as http.Ok ...
	// return Response(200, []AdvancedGameStat{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetAdvancedTeamGameStats method not implemented")
}

// GetAdvancedTeamSeasonStats - Advanced team metrics by season
func (s *StatsAPIService) GetAdvancedTeamSeasonStats(ctx context.Context, year int32, team string, excludeGarbageTime bool, startWeek int32, endWeek int32) (ImplResponse, error) {
	// TODO - update GetAdvancedTeamSeasonStats with the required logic for this service method.
	// Add api_stats_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []AdvancedSeasonStat{}) or use other options such as http.Ok ...
	// return Response(200, []AdvancedSeasonStat{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetAdvancedTeamSeasonStats method not implemented")
}

// GetStatCategories - Team stat categories
func (s *StatsAPIService) GetStatCategories(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetStatCategories with the required logic for this service method.
	// Add api_stats_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []string{}) or use other options such as http.Ok ...
	// return Response(200, []string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetStatCategories method not implemented")
}

// GetTeamSeasonStats - Team statistics by season
func (s *StatsAPIService) GetTeamSeasonStats(ctx context.Context, year int32, team string, conference string, startWeek int32, endWeek int32) (ImplResponse, error) {
	// TODO - update GetTeamSeasonStats with the required logic for this service method.
	// Add api_stats_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []TeamSeasonStat{}) or use other options such as http.Ok ...
	// return Response(200, []TeamSeasonStat{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetTeamSeasonStats method not implemented")
}
