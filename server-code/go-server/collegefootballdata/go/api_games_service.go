/*
 * College Football Data API
 *
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * API version: 4.4.12
 * Contact: admin@collegefootballdata.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// GamesAPIService is a service that implements the logic for the GamesAPIServicer
// This service should implement the business logic for every endpoint for the GamesAPI API.
// Include any external packages or services that will be required by this service.
type GamesAPIService struct {
}

// NewGamesAPIService creates a default api service
func NewGamesAPIService() GamesAPIServicer {
	return &GamesAPIService{}
}

// GetAdvancedBoxScore - Advanced box scores
func (s *GamesAPIService) GetAdvancedBoxScore(ctx context.Context, gameId int32) (ImplResponse, error) {
	// TODO - update GetAdvancedBoxScore with the required logic for this service method.
	// Add api_games_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, BoxScore{}) or use other options such as http.Ok ...
	// return Response(200, BoxScore{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetAdvancedBoxScore method not implemented")
}

// GetCalendar - Season calendar
func (s *GamesAPIService) GetCalendar(ctx context.Context, year int32) (ImplResponse, error) {
	// TODO - update GetCalendar with the required logic for this service method.
	// Add api_games_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []Week{}) or use other options such as http.Ok ...
	// return Response(200, []Week{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetCalendar method not implemented")
}

// GetGameMedia - Game media information and schedules
func (s *GamesAPIService) GetGameMedia(ctx context.Context, year int32, week int32, seasonType string, team string, conference string, mediaType string, classification string) (ImplResponse, error) {
	// TODO - update GetGameMedia with the required logic for this service method.
	// Add api_games_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []GameMedia{}) or use other options such as http.Ok ...
	// return Response(200, []GameMedia{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetGameMedia method not implemented")
}

// GetGameWeather - Game weather information (Patreon only)
func (s *GamesAPIService) GetGameWeather(ctx context.Context, gameId int32, year int32, week int32, seasonType string, team string, conference string, classification string) (ImplResponse, error) {
	// TODO - update GetGameWeather with the required logic for this service method.
	// Add api_games_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []GameWeather{}) or use other options such as http.Ok ...
	// return Response(200, []GameWeather{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetGameWeather method not implemented")
}

// GetGames - Games and results
func (s *GamesAPIService) GetGames(ctx context.Context, year int32, week int32, seasonType string, team string, home string, away string, conference string, division string, id int32) (ImplResponse, error) {
	// TODO - update GetGames with the required logic for this service method.
	// Add api_games_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []Game{}) or use other options such as http.Ok ...
	// return Response(200, []Game{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetGames method not implemented")
}

// GetPlayerGameStats - Player game stats
func (s *GamesAPIService) GetPlayerGameStats(ctx context.Context, year int32, week int32, seasonType string, team string, conference string, category string, gameId int32) (ImplResponse, error) {
	// TODO - update GetPlayerGameStats with the required logic for this service method.
	// Add api_games_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []PlayerGame{}) or use other options such as http.Ok ...
	// return Response(200, []PlayerGame{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetPlayerGameStats method not implemented")
}

// GetScoreboard - Live game results (Patreon only)
func (s *GamesAPIService) GetScoreboard(ctx context.Context, classification string, conference string) (ImplResponse, error) {
	// TODO - update GetScoreboard with the required logic for this service method.
	// Add api_games_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []ScoreboardGame{}) or use other options such as http.Ok ...
	// return Response(200, []ScoreboardGame{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetScoreboard method not implemented")
}

// GetTeamGameStats - Team game stats
func (s *GamesAPIService) GetTeamGameStats(ctx context.Context, year int32, week int32, seasonType string, team string, conference string, gameId int32, classification string) (ImplResponse, error) {
	// TODO - update GetTeamGameStats with the required logic for this service method.
	// Add api_games_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []TeamGame{}) or use other options such as http.Ok ...
	// return Response(200, []TeamGame{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetTeamGameStats method not implemented")
}

// GetTeamRecords - Team records
func (s *GamesAPIService) GetTeamRecords(ctx context.Context, year int32, team string, conference string) (ImplResponse, error) {
	// TODO - update GetTeamRecords with the required logic for this service method.
	// Add api_games_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []TeamRecord{}) or use other options such as http.Ok ...
	// return Response(200, []TeamRecord{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetTeamRecords method not implemented")
}
