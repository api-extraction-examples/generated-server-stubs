/*
 * College Football Data API
 *
 * This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.
 *
 * API version: 4.4.12
 * Contact: admin@collegefootballdata.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// PlayersAPIService is a service that implements the logic for the PlayersAPIServicer
// This service should implement the business logic for every endpoint for the PlayersAPI API.
// Include any external packages or services that will be required by this service.
type PlayersAPIService struct {
}

// NewPlayersAPIService creates a default api service
func NewPlayersAPIService() PlayersAPIServicer {
	return &PlayersAPIService{}
}

// GetPlayerSeasonStats - Player stats by season
func (s *PlayersAPIService) GetPlayerSeasonStats(ctx context.Context, year int32, team string, conference string, startWeek int32, endWeek int32, seasonType string, category string) (ImplResponse, error) {
	// TODO - update GetPlayerSeasonStats with the required logic for this service method.
	// Add api_players_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []PlayerSeasonStat{}) or use other options such as http.Ok ...
	// return Response(200, []PlayerSeasonStat{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetPlayerSeasonStats method not implemented")
}

// GetPlayerUsage - Player usage metrics broken down by season
func (s *PlayersAPIService) GetPlayerUsage(ctx context.Context, year int32, team string, conference string, position string, playerId int32, excludeGarbageTime bool) (ImplResponse, error) {
	// TODO - update GetPlayerUsage with the required logic for this service method.
	// Add api_players_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []PlayerUsage{}) or use other options such as http.Ok ...
	// return Response(200, []PlayerUsage{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetPlayerUsage method not implemented")
}

// GetReturningProduction - Team returning production metrics
func (s *PlayersAPIService) GetReturningProduction(ctx context.Context, year int32, team string, conference string) (ImplResponse, error) {
	// TODO - update GetReturningProduction with the required logic for this service method.
	// Add api_players_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []ReturningProduction{}) or use other options such as http.Ok ...
	// return Response(200, []ReturningProduction{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetReturningProduction method not implemented")
}

// GetTransferPortal - Transfer portal by season
func (s *PlayersAPIService) GetTransferPortal(ctx context.Context, year int32) (ImplResponse, error) {
	// TODO - update GetTransferPortal with the required logic for this service method.
	// Add api_players_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []PortalPlayer{}) or use other options such as http.Ok ...
	// return Response(200, []PortalPlayer{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetTransferPortal method not implemented")
}

// PlayerSearch - Search for player information
func (s *PlayersAPIService) PlayerSearch(ctx context.Context, searchTerm string, position string, team string, year int32) (ImplResponse, error) {
	// TODO - update PlayerSearch with the required logic for this service method.
	// Add api_players_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []PlayerSearchResult{}) or use other options such as http.Ok ...
	// return Response(200, []PlayerSearchResult{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("PlayerSearch method not implemented")
}
