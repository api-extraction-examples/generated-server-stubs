/*
 * httpbin.org
 *
 * A simple HTTP Request & Response Service.<br/> <br/> <b>Run locally: </b> <code>$ docker run -p 80:80 kennethreitz/httpbin</code>
 *
 * API version: 0.9.2
 * Contact: me@kennethreitz.org
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// AuthAPIService is a service that implements the logic for the AuthAPIServicer
// This service should implement the business logic for every endpoint for the AuthAPI API.
// Include any external packages or services that will be required by this service.
type AuthAPIService struct {
}

// NewAuthAPIService creates a default api service
func NewAuthAPIService() AuthAPIServicer {
	return &AuthAPIService{}
}

// BasicAuthUserPasswdGet - Prompts the user for authorization using HTTP Basic Auth.
func (s *AuthAPIService) BasicAuthUserPasswdGet(ctx context.Context, user string, passwd string) (ImplResponse, error) {
	// TODO - update BasicAuthUserPasswdGet with the required logic for this service method.
	// Add api_auth_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("BasicAuthUserPasswdGet method not implemented")
}

// BearerGet - Prompts the user for authorization using bearer authentication.
func (s *AuthAPIService) BearerGet(ctx context.Context, authorization string) (ImplResponse, error) {
	// TODO - update BearerGet with the required logic for this service method.
	// Add api_auth_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("BearerGet method not implemented")
}

// DigestAuthQopUserPasswdAlgorithmGet - Prompts the user for authorization using Digest Auth + Algorithm.
func (s *AuthAPIService) DigestAuthQopUserPasswdAlgorithmGet(ctx context.Context, qop string, user string, passwd string, algorithm string) (ImplResponse, error) {
	// TODO - update DigestAuthQopUserPasswdAlgorithmGet with the required logic for this service method.
	// Add api_auth_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DigestAuthQopUserPasswdAlgorithmGet method not implemented")
}

// DigestAuthQopUserPasswdAlgorithmStaleAfterGet - Prompts the user for authorization using Digest Auth + Algorithm.
func (s *AuthAPIService) DigestAuthQopUserPasswdAlgorithmStaleAfterGet(ctx context.Context, qop string, user string, passwd string, algorithm string, staleAfter string) (ImplResponse, error) {
	// TODO - update DigestAuthQopUserPasswdAlgorithmStaleAfterGet with the required logic for this service method.
	// Add api_auth_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DigestAuthQopUserPasswdAlgorithmStaleAfterGet method not implemented")
}

// DigestAuthQopUserPasswdGet - Prompts the user for authorization using Digest Auth.
func (s *AuthAPIService) DigestAuthQopUserPasswdGet(ctx context.Context, qop string, user string, passwd string) (ImplResponse, error) {
	// TODO - update DigestAuthQopUserPasswdGet with the required logic for this service method.
	// Add api_auth_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DigestAuthQopUserPasswdGet method not implemented")
}

// HiddenBasicAuthUserPasswdGet - Prompts the user for authorization using HTTP Basic Auth.
func (s *AuthAPIService) HiddenBasicAuthUserPasswdGet(ctx context.Context, user string, passwd string) (ImplResponse, error) {
	// TODO - update HiddenBasicAuthUserPasswdGet with the required logic for this service method.
	// Add api_auth_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("HiddenBasicAuthUserPasswdGet method not implemented")
}
