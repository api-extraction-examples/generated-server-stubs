/*
 * httpbin.org
 *
 * A simple HTTP Request & Response Service.<br/> <br/> <b>Run locally: </b> <code>$ docker run -p 80:80 kennethreitz/httpbin</code>
 *
 * API version: 0.9.2
 * Contact: me@kennethreitz.org
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// HTTPMethodsAPIService is a service that implements the logic for the HTTPMethodsAPIServicer
// This service should implement the business logic for every endpoint for the HTTPMethodsAPI API.
// Include any external packages or services that will be required by this service.
type HTTPMethodsAPIService struct {
}

// NewHTTPMethodsAPIService creates a default api service
func NewHTTPMethodsAPIService() HTTPMethodsAPIServicer {
	return &HTTPMethodsAPIService{}
}

// DeleteDelete - The request&#39;s DELETE parameters.
func (s *HTTPMethodsAPIService) DeleteDelete(ctx context.Context) (ImplResponse, error) {
	// TODO - update DeleteDelete with the required logic for this service method.
	// Add api_http_methods_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteDelete method not implemented")
}

// GetGet - The request&#39;s query parameters.
func (s *HTTPMethodsAPIService) GetGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetGet with the required logic for this service method.
	// Add api_http_methods_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetGet method not implemented")
}

// PatchPatch - The request&#39;s PATCH parameters.
func (s *HTTPMethodsAPIService) PatchPatch(ctx context.Context) (ImplResponse, error) {
	// TODO - update PatchPatch with the required logic for this service method.
	// Add api_http_methods_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("PatchPatch method not implemented")
}

// PostPost - The request&#39;s POST parameters.
func (s *HTTPMethodsAPIService) PostPost(ctx context.Context) (ImplResponse, error) {
	// TODO - update PostPost with the required logic for this service method.
	// Add api_http_methods_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("PostPost method not implemented")
}

// PutPut - The request&#39;s PUT parameters.
func (s *HTTPMethodsAPIService) PutPut(ctx context.Context) (ImplResponse, error) {
	// TODO - update PutPut with the required logic for this service method.
	// Add api_http_methods_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("PutPut method not implemented")
}
