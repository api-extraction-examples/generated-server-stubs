/*
 * httpbin.org
 *
 * A simple HTTP Request & Response Service.<br/> <br/> <b>Run locally: </b> <code>$ docker run -p 80:80 kennethreitz/httpbin</code>
 *
 * API version: 0.9.2
 * Contact: me@kennethreitz.org
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// ResponseFormatsAPIService is a service that implements the logic for the ResponseFormatsAPIServicer
// This service should implement the business logic for every endpoint for the ResponseFormatsAPI API.
// Include any external packages or services that will be required by this service.
type ResponseFormatsAPIService struct {
}

// NewResponseFormatsAPIService creates a default api service
func NewResponseFormatsAPIService() ResponseFormatsAPIServicer {
	return &ResponseFormatsAPIService{}
}

// BrotliGet - Returns Brotli-encoded data.
func (s *ResponseFormatsAPIService) BrotliGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update BrotliGet with the required logic for this service method.
	// Add api_response_formats_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("BrotliGet method not implemented")
}

// DeflateGet - Returns Deflate-encoded data.
func (s *ResponseFormatsAPIService) DeflateGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update DeflateGet with the required logic for this service method.
	// Add api_response_formats_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeflateGet method not implemented")
}

// DenyGet - Returns page denied by robots.txt rules.
func (s *ResponseFormatsAPIService) DenyGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update DenyGet with the required logic for this service method.
	// Add api_response_formats_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DenyGet method not implemented")
}

// EncodingUtf8Get - Returns a UTF-8 encoded body.
func (s *ResponseFormatsAPIService) EncodingUtf8Get(ctx context.Context) (ImplResponse, error) {
	// TODO - update EncodingUtf8Get with the required logic for this service method.
	// Add api_response_formats_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("EncodingUtf8Get method not implemented")
}

// GzipGet - Returns GZip-encoded data.
func (s *ResponseFormatsAPIService) GzipGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update GzipGet with the required logic for this service method.
	// Add api_response_formats_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GzipGet method not implemented")
}

// HtmlGet - Returns a simple HTML document.
func (s *ResponseFormatsAPIService) HtmlGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update HtmlGet with the required logic for this service method.
	// Add api_response_formats_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("HtmlGet method not implemented")
}

// JsonGet - Returns a simple JSON document.
func (s *ResponseFormatsAPIService) JsonGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update JsonGet with the required logic for this service method.
	// Add api_response_formats_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("JsonGet method not implemented")
}

// RobotsTxtGet - Returns some robots.txt rules.
func (s *ResponseFormatsAPIService) RobotsTxtGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update RobotsTxtGet with the required logic for this service method.
	// Add api_response_formats_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("RobotsTxtGet method not implemented")
}

// XmlGet - Returns a simple XML document.
func (s *ResponseFormatsAPIService) XmlGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update XmlGet with the required logic for this service method.
	// Add api_response_formats_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("XmlGet method not implemented")
}
