/*
 * httpbin.org
 *
 * A simple HTTP Request & Response Service.<br/> <br/> <b>Run locally: </b> <code>$ docker run -p 80:80 kennethreitz/httpbin</code>
 *
 * API version: 0.9.2
 * Contact: me@kennethreitz.org
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// DynamicDataAPIService is a service that implements the logic for the DynamicDataAPIServicer
// This service should implement the business logic for every endpoint for the DynamicDataAPI API.
// Include any external packages or services that will be required by this service.
type DynamicDataAPIService struct {
}

// NewDynamicDataAPIService creates a default api service
func NewDynamicDataAPIService() DynamicDataAPIServicer {
	return &DynamicDataAPIService{}
}

// Base64ValueGet - Decodes base64url-encoded string.
func (s *DynamicDataAPIService) Base64ValueGet(ctx context.Context, value string) (ImplResponse, error) {
	// TODO - update Base64ValueGet with the required logic for this service method.
	// Add api_dynamic_data_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("Base64ValueGet method not implemented")
}

// BytesNGet - Returns n random bytes generated with given seed
func (s *DynamicDataAPIService) BytesNGet(ctx context.Context, n int32) (ImplResponse, error) {
	// TODO - update BytesNGet with the required logic for this service method.
	// Add api_dynamic_data_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("BytesNGet method not implemented")
}

// DelayDelayDelete - Returns a delayed response (max of 10 seconds).
func (s *DynamicDataAPIService) DelayDelayDelete(ctx context.Context, delay int32) (ImplResponse, error) {
	// TODO - update DelayDelayDelete with the required logic for this service method.
	// Add api_dynamic_data_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DelayDelayDelete method not implemented")
}

// DelayDelayGet - Returns a delayed response (max of 10 seconds).
func (s *DynamicDataAPIService) DelayDelayGet(ctx context.Context, delay int32) (ImplResponse, error) {
	// TODO - update DelayDelayGet with the required logic for this service method.
	// Add api_dynamic_data_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DelayDelayGet method not implemented")
}

// DelayDelayPatch - Returns a delayed response (max of 10 seconds).
func (s *DynamicDataAPIService) DelayDelayPatch(ctx context.Context, delay int32) (ImplResponse, error) {
	// TODO - update DelayDelayPatch with the required logic for this service method.
	// Add api_dynamic_data_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DelayDelayPatch method not implemented")
}

// DelayDelayPost - Returns a delayed response (max of 10 seconds).
func (s *DynamicDataAPIService) DelayDelayPost(ctx context.Context, delay int32) (ImplResponse, error) {
	// TODO - update DelayDelayPost with the required logic for this service method.
	// Add api_dynamic_data_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DelayDelayPost method not implemented")
}

// DelayDelayPut - Returns a delayed response (max of 10 seconds).
func (s *DynamicDataAPIService) DelayDelayPut(ctx context.Context, delay int32) (ImplResponse, error) {
	// TODO - update DelayDelayPut with the required logic for this service method.
	// Add api_dynamic_data_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DelayDelayPut method not implemented")
}

// DelayDelayTrace - Returns a delayed response (max of 10 seconds).
func (s *DynamicDataAPIService) DelayDelayTrace(ctx context.Context, delay int32) (ImplResponse, error) {
	// TODO - update DelayDelayTrace with the required logic for this service method.
	// Add api_dynamic_data_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DelayDelayTrace method not implemented")
}

// DripGet - Drips data over a duration after an optional initial delay.
func (s *DynamicDataAPIService) DripGet(ctx context.Context, duration float32, numbytes int32, code int32, delay float32) (ImplResponse, error) {
	// TODO - update DripGet with the required logic for this service method.
	// Add api_dynamic_data_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DripGet method not implemented")
}

// LinksNOffsetGet - Generate a page containing n links to other pages which do the same.
func (s *DynamicDataAPIService) LinksNOffsetGet(ctx context.Context, n int32, offset int32) (ImplResponse, error) {
	// TODO - update LinksNOffsetGet with the required logic for this service method.
	// Add api_dynamic_data_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("LinksNOffsetGet method not implemented")
}

// RangeNumbytesGet - Streams n random bytes generated with given seed, at given chunk size per packet.
func (s *DynamicDataAPIService) RangeNumbytesGet(ctx context.Context, numbytes int32) (ImplResponse, error) {
	// TODO - update RangeNumbytesGet with the required logic for this service method.
	// Add api_dynamic_data_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("RangeNumbytesGet method not implemented")
}

// StreamBytesNGet - Streams n random bytes generated with given seed, at given chunk size per packet.
func (s *DynamicDataAPIService) StreamBytesNGet(ctx context.Context, n int32) (ImplResponse, error) {
	// TODO - update StreamBytesNGet with the required logic for this service method.
	// Add api_dynamic_data_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("StreamBytesNGet method not implemented")
}

// StreamNGet - Stream n JSON responses
func (s *DynamicDataAPIService) StreamNGet(ctx context.Context, n int32) (ImplResponse, error) {
	// TODO - update StreamNGet with the required logic for this service method.
	// Add api_dynamic_data_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("StreamNGet method not implemented")
}

// UuidGet - Return a UUID4.
func (s *DynamicDataAPIService) UuidGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update UuidGet with the required logic for this service method.
	// Add api_dynamic_data_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("UuidGet method not implemented")
}
