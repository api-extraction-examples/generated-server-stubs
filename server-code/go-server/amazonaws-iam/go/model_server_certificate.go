/*
 * AWS Identity and Access Management
 *
 * <fullname>Identity and Access Management</fullname> <p>Identity and Access Management (IAM) is a web service for securely controlling access to Amazon Web Services services. With IAM, you can centrally manage users, security credentials such as access keys, and permissions that control which Amazon Web Services resources users and applications can access. For more information about IAM, see <a href=\"http://aws.amazon.com/iam/\">Identity and Access Management (IAM)</a> and the <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/\">Identity and Access Management User Guide</a>.</p>
 *
 * API version: 2010-05-08
 * Contact: mike.ralphson@gmail.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi




// ServerCertificate - <p>Contains information about a server certificate.</p> <p> This data type is used as a response element in the <a>GetServerCertificate</a> operation. </p>
type ServerCertificate struct {

	ServerCertificateMetadata ServerCertificateServerCertificateMetadata `json:"ServerCertificateMetadata"`

	CertificateBody string `json:"CertificateBody"`

	CertificateChain string `json:"CertificateChain,omitempty"`

	Tags Array `json:"Tags,omitempty"`
}

// AssertServerCertificateRequired checks if the required fields are not zero-ed
func AssertServerCertificateRequired(obj ServerCertificate) error {
	elements := map[string]interface{}{
		"ServerCertificateMetadata": obj.ServerCertificateMetadata,
		"CertificateBody": obj.CertificateBody,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertServerCertificateServerCertificateMetadataRequired(obj.ServerCertificateMetadata); err != nil {
		return err
	}
	if err := AssertstringRequired(obj.CertificateBody); err != nil {
		return err
	}
	if err := AssertstringRequired(obj.CertificateChain); err != nil {
		return err
	}
	if err := AssertarrayRequired(obj.Tags); err != nil {
		return err
	}
	return nil
}

// AssertServerCertificateConstraints checks if the values respects the defined constraints
func AssertServerCertificateConstraints(obj ServerCertificate) error {
	return nil
}
