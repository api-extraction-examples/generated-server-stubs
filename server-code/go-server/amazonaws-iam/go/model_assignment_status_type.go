/*
 * AWS Identity and Access Management
 *
 * <fullname>Identity and Access Management</fullname> <p>Identity and Access Management (IAM) is a web service for securely controlling access to Amazon Web Services services. With IAM, you can centrally manage users, security credentials such as access keys, and permissions that control which Amazon Web Services resources users and applications can access. For more information about IAM, see <a href=\"http://aws.amazon.com/iam/\">Identity and Access Management (IAM)</a> and the <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/\">Identity and Access Management User Guide</a>.</p>
 *
 * API version: 2010-05-08
 * Contact: mike.ralphson@gmail.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"fmt"
)



type AssignmentStatusType string

// List of AssignmentStatusType
const (
	ASSIGNED AssignmentStatusType = "Assigned"
	UNASSIGNED AssignmentStatusType = "Unassigned"
	ANY AssignmentStatusType = "Any"
)

// AllowedAssignmentStatusTypeEnumValues is all the allowed values of AssignmentStatusType enum
var AllowedAssignmentStatusTypeEnumValues = []AssignmentStatusType{
	"Assigned",
	"Unassigned",
	"Any",
}

// validAssignmentStatusTypeEnumValue provides a map of AssignmentStatusTypes for fast verification of use input
var validAssignmentStatusTypeEnumValues = map[AssignmentStatusType]struct{}{
	"Assigned": {},
	"Unassigned": {},
	"Any": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AssignmentStatusType) IsValid() bool {
	_, ok := validAssignmentStatusTypeEnumValues[v]
	return ok
}

// NewAssignmentStatusTypeFromValue returns a pointer to a valid AssignmentStatusType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAssignmentStatusTypeFromValue(v string) (AssignmentStatusType, error) {
	ev := AssignmentStatusType(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for AssignmentStatusType: valid values are %v", v, AllowedAssignmentStatusTypeEnumValues)
	}
}



// AssertAssignmentStatusTypeRequired checks if the required fields are not zero-ed
func AssertAssignmentStatusTypeRequired(obj AssignmentStatusType) error {
	return nil
}

// AssertAssignmentStatusTypeConstraints checks if the values respects the defined constraints
func AssertAssignmentStatusTypeConstraints(obj AssignmentStatusType) error {
	return nil
}
