/*
 * AWS Identity and Access Management
 *
 * <fullname>Identity and Access Management</fullname> <p>Identity and Access Management (IAM) is a web service for securely controlling access to Amazon Web Services services. With IAM, you can centrally manage users, security credentials such as access keys, and permissions that control which Amazon Web Services resources users and applications can access. For more information about IAM, see <a href=\"http://aws.amazon.com/iam/\">Identity and Access Management (IAM)</a> and the <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/\">Identity and Access Management User Guide</a>.</p>
 *
 * API version: 2010-05-08
 * Contact: mike.ralphson@gmail.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"fmt"
)



type PolicyType string

// List of PolicyType
const (
	INLINE PolicyType = "INLINE"
	MANAGED PolicyType = "MANAGED"
)

// AllowedPolicyTypeEnumValues is all the allowed values of PolicyType enum
var AllowedPolicyTypeEnumValues = []PolicyType{
	"INLINE",
	"MANAGED",
}

// validPolicyTypeEnumValue provides a map of PolicyTypes for fast verification of use input
var validPolicyTypeEnumValues = map[PolicyType]struct{}{
	"INLINE": {},
	"MANAGED": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PolicyType) IsValid() bool {
	_, ok := validPolicyTypeEnumValues[v]
	return ok
}

// NewPolicyTypeFromValue returns a pointer to a valid PolicyType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPolicyTypeFromValue(v string) (PolicyType, error) {
	ev := PolicyType(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for PolicyType: valid values are %v", v, AllowedPolicyTypeEnumValues)
	}
}



// AssertPolicyTypeRequired checks if the required fields are not zero-ed
func AssertPolicyTypeRequired(obj PolicyType) error {
	return nil
}

// AssertPolicyTypeConstraints checks if the values respects the defined constraints
func AssertPolicyTypeConstraints(obj PolicyType) error {
	return nil
}
