/*
 * AWS Identity and Access Management
 *
 * <fullname>Identity and Access Management</fullname> <p>Identity and Access Management (IAM) is a web service for securely controlling access to Amazon Web Services services. With IAM, you can centrally manage users, security credentials such as access keys, and permissions that control which Amazon Web Services resources users and applications can access. For more information about IAM, see <a href=\"http://aws.amazon.com/iam/\">Identity and Access Management (IAM)</a> and the <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/\">Identity and Access Management User Guide</a>.</p>
 *
 * API version: 2010-05-08
 * Contact: mike.ralphson@gmail.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"fmt"
)



type PolicyOwnerEntityType string

// List of PolicyOwnerEntityType
const (
	USER PolicyOwnerEntityType = "USER"
	ROLE PolicyOwnerEntityType = "ROLE"
	GROUP PolicyOwnerEntityType = "GROUP"
)

// AllowedPolicyOwnerEntityTypeEnumValues is all the allowed values of PolicyOwnerEntityType enum
var AllowedPolicyOwnerEntityTypeEnumValues = []PolicyOwnerEntityType{
	"USER",
	"ROLE",
	"GROUP",
}

// validPolicyOwnerEntityTypeEnumValue provides a map of PolicyOwnerEntityTypes for fast verification of use input
var validPolicyOwnerEntityTypeEnumValues = map[PolicyOwnerEntityType]struct{}{
	"USER": {},
	"ROLE": {},
	"GROUP": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PolicyOwnerEntityType) IsValid() bool {
	_, ok := validPolicyOwnerEntityTypeEnumValues[v]
	return ok
}

// NewPolicyOwnerEntityTypeFromValue returns a pointer to a valid PolicyOwnerEntityType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPolicyOwnerEntityTypeFromValue(v string) (PolicyOwnerEntityType, error) {
	ev := PolicyOwnerEntityType(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for PolicyOwnerEntityType: valid values are %v", v, AllowedPolicyOwnerEntityTypeEnumValues)
	}
}



// AssertPolicyOwnerEntityTypeRequired checks if the required fields are not zero-ed
func AssertPolicyOwnerEntityTypeRequired(obj PolicyOwnerEntityType) error {
	return nil
}

// AssertPolicyOwnerEntityTypeConstraints checks if the values respects the defined constraints
func AssertPolicyOwnerEntityTypeConstraints(obj PolicyOwnerEntityType) error {
	return nil
}
