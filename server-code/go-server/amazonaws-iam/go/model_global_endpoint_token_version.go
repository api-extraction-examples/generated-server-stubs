/*
 * AWS Identity and Access Management
 *
 * <fullname>Identity and Access Management</fullname> <p>Identity and Access Management (IAM) is a web service for securely controlling access to Amazon Web Services services. With IAM, you can centrally manage users, security credentials such as access keys, and permissions that control which Amazon Web Services resources users and applications can access. For more information about IAM, see <a href=\"http://aws.amazon.com/iam/\">Identity and Access Management (IAM)</a> and the <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/\">Identity and Access Management User Guide</a>.</p>
 *
 * API version: 2010-05-08
 * Contact: mike.ralphson@gmail.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"fmt"
)



type GlobalEndpointTokenVersion string

// List of GlobalEndpointTokenVersion
const (
	V1_TOKEN GlobalEndpointTokenVersion = "v1Token"
	V2_TOKEN GlobalEndpointTokenVersion = "v2Token"
)

// AllowedGlobalEndpointTokenVersionEnumValues is all the allowed values of GlobalEndpointTokenVersion enum
var AllowedGlobalEndpointTokenVersionEnumValues = []GlobalEndpointTokenVersion{
	"v1Token",
	"v2Token",
}

// validGlobalEndpointTokenVersionEnumValue provides a map of GlobalEndpointTokenVersions for fast verification of use input
var validGlobalEndpointTokenVersionEnumValues = map[GlobalEndpointTokenVersion]struct{}{
	"v1Token": {},
	"v2Token": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GlobalEndpointTokenVersion) IsValid() bool {
	_, ok := validGlobalEndpointTokenVersionEnumValues[v]
	return ok
}

// NewGlobalEndpointTokenVersionFromValue returns a pointer to a valid GlobalEndpointTokenVersion
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGlobalEndpointTokenVersionFromValue(v string) (GlobalEndpointTokenVersion, error) {
	ev := GlobalEndpointTokenVersion(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for GlobalEndpointTokenVersion: valid values are %v", v, AllowedGlobalEndpointTokenVersionEnumValues)
	}
}



// AssertGlobalEndpointTokenVersionRequired checks if the required fields are not zero-ed
func AssertGlobalEndpointTokenVersionRequired(obj GlobalEndpointTokenVersion) error {
	return nil
}

// AssertGlobalEndpointTokenVersionConstraints checks if the values respects the defined constraints
func AssertGlobalEndpointTokenVersionConstraints(obj GlobalEndpointTokenVersion) error {
	return nil
}
