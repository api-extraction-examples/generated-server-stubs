/*
 * Radio & Music Services
 *
 * We encapsulate Radio & Music business logic for iPlayer Radio and BBC Music products on all platforms. We add value by reliably providing the right blend of metadata needed by clients.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// BroadcastsAPIService is a service that implements the logic for the BroadcastsAPIServicer
// This service should implement the business logic for every endpoint for the BroadcastsAPI API.
// Include any external packages or services that will be required by this service.
type BroadcastsAPIService struct {
}

// NewBroadcastsAPIService creates a default api service
func NewBroadcastsAPIService() BroadcastsAPIServicer {
	return &BroadcastsAPIService{}
}

// BroadcastsGet - Broadcasts
func (s *BroadcastsAPIService) BroadcastsGet(ctx context.Context, xAPIKey string, offset int32, limit int32, serviceId string, date string, sort string) (ImplResponse, error) {
	// TODO - update BroadcastsGet with the required logic for this service method.
	// Add api_broadcasts_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, BroadcastsResponse{}) or use other options such as http.Ok ...
	// return Response(200, BroadcastsResponse{}), nil

	// TODO: Uncomment the next line to return response Response(401, ErrorResponse{}) or use other options such as http.Ok ...
	// return Response(401, ErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(0, ErrorResponse{}) or use other options such as http.Ok ...
	// return Response(0, ErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("BroadcastsGet method not implemented")
}

// BroadcastsLatestGet - Latest Broadcasts
func (s *BroadcastsAPIService) BroadcastsLatestGet(ctx context.Context, xAPIKey string, offset int32, limit int32, serviceId string, onAir string, next string, previous string, sort string) (ImplResponse, error) {
	// TODO - update BroadcastsLatestGet with the required logic for this service method.
	// Add api_broadcasts_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, BroadcastsResponse{}) or use other options such as http.Ok ...
	// return Response(200, BroadcastsResponse{}), nil

	// TODO: Uncomment the next line to return response Response(401, ErrorResponse{}) or use other options such as http.Ok ...
	// return Response(401, ErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(0, ErrorResponse{}) or use other options such as http.Ok ...
	// return Response(0, ErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("BroadcastsLatestGet method not implemented")
}

// GetBroadcastByPid - Broadcasts by PID
func (s *BroadcastsAPIService) GetBroadcastByPid(ctx context.Context, xAPIKey string, pid string) (ImplResponse, error) {
	// TODO - update GetBroadcastByPid with the required logic for this service method.
	// Add api_broadcasts_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, BroadcastsResponse{}) or use other options such as http.Ok ...
	// return Response(200, BroadcastsResponse{}), nil

	// TODO: Uncomment the next line to return response Response(401, ErrorResponse{}) or use other options such as http.Ok ...
	// return Response(401, ErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(0, ErrorResponse{}) or use other options such as http.Ok ...
	// return Response(0, ErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetBroadcastByPid method not implemented")
}
