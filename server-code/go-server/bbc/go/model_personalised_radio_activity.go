/*
 * Radio & Music Services
 *
 * We encapsulate Radio & Music business logic for iPlayer Radio and BBC Music products on all platforms. We add value by reliably providing the right blend of metadata needed by clients.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi




type PersonalisedRadioActivity struct {

	Action string `json:"action"`

	Activity string `json:"activity"`

	AddedAt string `json:"added_at"`

	Data ProgrammeSummary `json:"data"`

	Domain string `json:"domain"`

	Id string `json:"id"`

	Metadata MetaData `json:"metadata"`

	Type string `json:"type"`

	UasType string `json:"uas_type"`

	Urn string `json:"urn"`
}

// AssertPersonalisedRadioActivityRequired checks if the required fields are not zero-ed
func AssertPersonalisedRadioActivityRequired(obj PersonalisedRadioActivity) error {
	elements := map[string]interface{}{
		"action": obj.Action,
		"activity": obj.Activity,
		"added_at": obj.AddedAt,
		"data": obj.Data,
		"domain": obj.Domain,
		"id": obj.Id,
		"metadata": obj.Metadata,
		"type": obj.Type,
		"uas_type": obj.UasType,
		"urn": obj.Urn,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertProgrammeSummaryRequired(obj.Data); err != nil {
		return err
	}
	if err := AssertMetaDataRequired(obj.Metadata); err != nil {
		return err
	}
	return nil
}

// AssertPersonalisedRadioActivityConstraints checks if the values respects the defined constraints
func AssertPersonalisedRadioActivityConstraints(obj PersonalisedRadioActivity) error {
	return nil
}
