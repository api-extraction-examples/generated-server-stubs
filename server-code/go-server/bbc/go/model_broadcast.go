/*
 * Radio & Music Services
 *
 * We encapsulate Radio & Music business logic for iPlayer Radio and BBC Music products on all platforms. We add value by reliably providing the right blend of metadata needed by clients.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi




type Broadcast struct {

	Duration int32 `json:"duration"`

	End string `json:"end"`

	IsAudioDescribed bool `json:"is_audio_described"`

	IsBlanked bool `json:"is_blanked"`

	IsCritical bool `json:"is_critical"`

	IsLive bool `json:"is_live"`

	IsRepeat bool `json:"is_repeat"`

	IsWebcast bool `json:"is_webcast"`

	Pid string `json:"pid"`

	Programme ProgrammeSummary `json:"programme,omitempty"`

	ServiceId string `json:"service_id"`

	Start string `json:"start"`

	Type string `json:"type"`

	VersionPid string `json:"version_pid"`
}

// AssertBroadcastRequired checks if the required fields are not zero-ed
func AssertBroadcastRequired(obj Broadcast) error {
	elements := map[string]interface{}{
		"duration": obj.Duration,
		"end": obj.End,
		"is_audio_described": obj.IsAudioDescribed,
		"is_blanked": obj.IsBlanked,
		"is_critical": obj.IsCritical,
		"is_live": obj.IsLive,
		"is_repeat": obj.IsRepeat,
		"is_webcast": obj.IsWebcast,
		"pid": obj.Pid,
		"service_id": obj.ServiceId,
		"start": obj.Start,
		"type": obj.Type,
		"version_pid": obj.VersionPid,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertProgrammeSummaryRequired(obj.Programme); err != nil {
		return err
	}
	return nil
}

// AssertBroadcastConstraints checks if the values respects the defined constraints
func AssertBroadcastConstraints(obj Broadcast) error {
	return nil
}
