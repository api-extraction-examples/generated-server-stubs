/*
 * Radio & Music Services
 *
 * We encapsulate Radio & Music business logic for iPlayer Radio and BBC Music products on all platforms. We add value by reliably providing the right blend of metadata needed by clients.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi




type Network struct {

	Active bool `json:"active"`

	Contacts []Contact `json:"contacts"`

	DateRanges []DateRange `json:"date_ranges"`

	Group string `json:"group"`

	Id string `json:"id"`

	International bool `json:"international"`

	Key string `json:"key"`

	Preset bool `json:"preset"`

	PromotedCategorySummaries []CategorySummary `json:"promoted_category_summaries,omitempty"`

	Services []Service `json:"services"`

	ShortTitle string `json:"short_title"`

	Sort int32 `json:"sort"`

	Title string `json:"title"`

	Type string `json:"type"`
}

// AssertNetworkRequired checks if the required fields are not zero-ed
func AssertNetworkRequired(obj Network) error {
	elements := map[string]interface{}{
		"active": obj.Active,
		"contacts": obj.Contacts,
		"date_ranges": obj.DateRanges,
		"group": obj.Group,
		"id": obj.Id,
		"international": obj.International,
		"key": obj.Key,
		"preset": obj.Preset,
		"services": obj.Services,
		"short_title": obj.ShortTitle,
		"sort": obj.Sort,
		"title": obj.Title,
		"type": obj.Type,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.Contacts {
		if err := AssertContactRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.DateRanges {
		if err := AssertDateRangeRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.PromotedCategorySummaries {
		if err := AssertCategorySummaryRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Services {
		if err := AssertServiceRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertNetworkConstraints checks if the values respects the defined constraints
func AssertNetworkConstraints(obj Network) error {
	return nil
}
