/*
 * Radio & Music Services
 *
 * We encapsulate Radio & Music business logic for iPlayer Radio and BBC Music products on all platforms. We add value by reliably providing the right blend of metadata needed by clients.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi




type PersonalisedMusicTrack struct {

	Contributions []PersonalisedMusicTrackContribution `json:"contributions"`

	Id string `json:"id"`

	Images []PersonalisedMusicTrackImage `json:"images"`

	Media []PersonalisedMusicTrackMedia `json:"media"`

	Title string `json:"title"`

	Type string `json:"type"`

	Version PersonalisedMusicVersion `json:"version"`
}

// AssertPersonalisedMusicTrackRequired checks if the required fields are not zero-ed
func AssertPersonalisedMusicTrackRequired(obj PersonalisedMusicTrack) error {
	elements := map[string]interface{}{
		"contributions": obj.Contributions,
		"id": obj.Id,
		"images": obj.Images,
		"media": obj.Media,
		"title": obj.Title,
		"type": obj.Type,
		"version": obj.Version,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.Contributions {
		if err := AssertPersonalisedMusicTrackContributionRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Images {
		if err := AssertPersonalisedMusicTrackImageRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Media {
		if err := AssertPersonalisedMusicTrackMediaRequired(el); err != nil {
			return err
		}
	}
	if err := AssertPersonalisedMusicVersionRequired(obj.Version); err != nil {
		return err
	}
	return nil
}

// AssertPersonalisedMusicTrackConstraints checks if the values respects the defined constraints
func AssertPersonalisedMusicTrackConstraints(obj PersonalisedMusicTrack) error {
	return nil
}
